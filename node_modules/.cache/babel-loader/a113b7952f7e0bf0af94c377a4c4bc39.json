{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Devrim\\\\Documents\\\\FRANKswapUIforProspBlast\\\\src\\\\components\\\\App\\\\Settings\\\\SettingsModal.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Button, Text, PancakeToggle, Flex, Message, Modal, ModalBody } from '@pancakeswap/uikit';\nimport { useAudioModeManager, useExpertModeManager, useUserTransactionTTL, useUserSlippageTolerance, useUserSingleHopOnly } from 'state/user/hooks';\nimport { useTranslation } from 'contexts/Localization';\nimport { useSwapActionHandlers } from 'state/swap/hooks';\nimport { AutoColumn } from '../../Layout/Column';\nimport QuestionHelper from '../../QuestionHelper';\nimport { RowBetween, RowFixed } from '../../Layout/Row';\nimport TransactionSettings from './TransactionSettings';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SettingsModal = ({\n  onDismiss\n}) => {\n  _s();\n\n  const [showConfirmExpertModal, setShowConfirmExpertModal] = useState(false);\n  const [userSlippageTolerance, setUserslippageTolerance] = useUserSlippageTolerance();\n  const [ttl, setTtl] = useUserTransactionTTL();\n  const [expertMode, toggleExpertMode] = useExpertModeManager();\n  const [singleHopOnly, setSingleHopOnly] = useUserSingleHopOnly();\n  const [audioPlay, toggleSetAudioMode] = useAudioModeManager();\n  const {\n    onChangeRecipient\n  } = useSwapActionHandlers();\n  const {\n    t\n  } = useTranslation();\n\n  if (showConfirmExpertModal) {\n    return /*#__PURE__*/_jsxDEV(Modal, {\n      title: t('Are you sure?'),\n      onBack: () => setShowConfirmExpertModal(false),\n      onDismiss: onDismiss,\n      style: {\n        maxWidth: '420px'\n      },\n      children: /*#__PURE__*/_jsxDEV(ModalBody, {\n        children: [/*#__PURE__*/_jsxDEV(Message, {\n          variant: \"warning\",\n          mb: \"24px\",\n          children: /*#__PURE__*/_jsxDEV(Text, {\n            children: t(\"Expert mode turns off the 'Confirm' transaction prompt, and allows high slippage trades that often result in bad rates and lost funds.\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          mb: \"24px\",\n          children: t('Only use this mode if you know what you‚Äôre doing.')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"danger\",\n          id: \"confirm-expert-mode\",\n          onClick: () => {\n            // eslint-disable-next-line no-alert\n            if (window.prompt(`Please type the word \"confirm\" to enable expert mode.`) === 'confirm') {\n              toggleExpertMode();\n              setShowConfirmExpertModal(false);\n            }\n          },\n          children: t('Turn On Expert Mode')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    title: t('Settings'),\n    headerBackground: \"gradients.cardHeader\",\n    onDismiss: onDismiss,\n    children: /*#__PURE__*/_jsxDEV(ModalBody, {\n      children: /*#__PURE__*/_jsxDEV(AutoColumn, {\n        gap: \"md\",\n        style: {\n          padding: '1rem'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          bold: true,\n          fontSize: \"20px\",\n          children: t('Transaction Settings')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TransactionSettings, {\n          rawSlippage: userSlippageTolerance,\n          setRawSlippage: setUserslippageTolerance,\n          deadline: ttl,\n          setDeadline: setTtl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          bold: true,\n          fontSize: \"20px\",\n          mt: \"32px\",\n          children: t('Interface Settings')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RowBetween, {\n          children: [/*#__PURE__*/_jsxDEV(RowFixed, {\n            children: [/*#__PURE__*/_jsxDEV(Text, {\n              fontSize: \"14px\",\n              children: t('Toggle Expert Mode')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(QuestionHelper, {\n              text: t('Bypasses confirmation modals and allows high slippage trades. Use at your own risk.'),\n              ml: \"4px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(PancakeToggle, {\n            id: \"toggle-expert-mode-button\",\n            checked: expertMode,\n            onChange: expertMode ? () => {\n              onChangeRecipient(null);\n              toggleExpertMode();\n            } : () => setShowConfirmExpertModal(true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RowBetween, {\n          children: [/*#__PURE__*/_jsxDEV(RowFixed, {\n            children: [/*#__PURE__*/_jsxDEV(Text, {\n              fontSize: \"14px\",\n              children: t('Disable Multihops')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(QuestionHelper, {\n              text: t('Restricts swaps to direct pairs only.'),\n              ml: \"4px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(PancakeToggle, {\n            id: \"toggle-disable-multihop-button\",\n            checked: singleHopOnly,\n            onChange: () => {\n              setSingleHopOnly(!singleHopOnly);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Flex, {\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n          mb: \"8px\",\n          children: [/*#__PURE__*/_jsxDEV(RowFixed, {\n            children: [/*#__PURE__*/_jsxDEV(Text, {\n              fontSize: \"14px\",\n              children: t('Audio')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(QuestionHelper, {\n              text: t('üê∞ Turn down your volume a bit before you swap'),\n              ml: \"4px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(PancakeToggle, {\n            checked: audioPlay,\n            onChange: toggleSetAudioMode\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SettingsModal, \"mBqrkESaucFUuqvfNrZSDkBsRY4=\", false, function () {\n  return [useUserSlippageTolerance, useUserTransactionTTL, useExpertModeManager, useUserSingleHopOnly, useAudioModeManager, useSwapActionHandlers, useTranslation];\n});\n\n_c = SettingsModal;\nexport default SettingsModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"SettingsModal\");","map":{"version":3,"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/components/App/Settings/SettingsModal.tsx"],"names":["React","useState","Button","Text","PancakeToggle","Flex","Message","Modal","ModalBody","useAudioModeManager","useExpertModeManager","useUserTransactionTTL","useUserSlippageTolerance","useUserSingleHopOnly","useTranslation","useSwapActionHandlers","AutoColumn","QuestionHelper","RowBetween","RowFixed","TransactionSettings","SettingsModal","onDismiss","showConfirmExpertModal","setShowConfirmExpertModal","userSlippageTolerance","setUserslippageTolerance","ttl","setTtl","expertMode","toggleExpertMode","singleHopOnly","setSingleHopOnly","audioPlay","toggleSetAudioMode","onChangeRecipient","t","maxWidth","window","prompt","padding"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport { Button, Text, PancakeToggle, Flex, Message, Modal, ModalBody, InjectedModalProps } from '@pancakeswap/uikit'\r\nimport {\r\n  useAudioModeManager,\r\n  useExpertModeManager,\r\n  useUserTransactionTTL,\r\n  useUserSlippageTolerance,\r\n  useUserSingleHopOnly,\r\n} from 'state/user/hooks'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\nimport { useSwapActionHandlers } from 'state/swap/hooks'\r\nimport { AutoColumn } from '../../Layout/Column'\r\nimport QuestionHelper from '../../QuestionHelper'\r\nimport { RowBetween, RowFixed } from '../../Layout/Row'\r\nimport TransactionSettings from './TransactionSettings'\r\n\r\nconst SettingsModal: React.FC<InjectedModalProps> = ({ onDismiss }) => {\r\n  const [showConfirmExpertModal, setShowConfirmExpertModal] = useState(false)\r\n  const [userSlippageTolerance, setUserslippageTolerance] = useUserSlippageTolerance()\r\n  const [ttl, setTtl] = useUserTransactionTTL()\r\n  const [expertMode, toggleExpertMode] = useExpertModeManager()\r\n  const [singleHopOnly, setSingleHopOnly] = useUserSingleHopOnly()\r\n  const [audioPlay, toggleSetAudioMode] = useAudioModeManager()\r\n  const { onChangeRecipient } = useSwapActionHandlers()\r\n\r\n  const { t } = useTranslation()\r\n\r\n  if (showConfirmExpertModal) {\r\n    return (\r\n      <Modal\r\n        title={t('Are you sure?')}\r\n        onBack={() => setShowConfirmExpertModal(false)}\r\n        onDismiss={onDismiss}\r\n        style={{ maxWidth: '420px' }}\r\n      >\r\n        <ModalBody>\r\n          <Message variant=\"warning\" mb=\"24px\">\r\n            <Text>\r\n              {t(\r\n                \"Expert mode turns off the 'Confirm' transaction prompt, and allows high slippage trades that often result in bad rates and lost funds.\",\r\n              )}\r\n            </Text>\r\n          </Message>\r\n          <Text mb=\"24px\">{t('Only use this mode if you know what you‚Äôre doing.')}</Text>\r\n          <Button\r\n            variant=\"danger\"\r\n            id=\"confirm-expert-mode\"\r\n            onClick={() => {\r\n              // eslint-disable-next-line no-alert\r\n              if (window.prompt(`Please type the word \"confirm\" to enable expert mode.`) === 'confirm') {\r\n                toggleExpertMode()\r\n                setShowConfirmExpertModal(false)\r\n              }\r\n            }}\r\n          >\r\n            {t('Turn On Expert Mode')}\r\n          </Button>\r\n        </ModalBody>\r\n      </Modal>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Modal title={t('Settings')} headerBackground=\"gradients.cardHeader\" onDismiss={onDismiss}>\r\n      <ModalBody>\r\n        <AutoColumn gap=\"md\" style={{ padding: '1rem' }}>\r\n          <Text bold fontSize=\"20px\">\r\n            {t('Transaction Settings')}\r\n          </Text>\r\n          <TransactionSettings\r\n            rawSlippage={userSlippageTolerance}\r\n            setRawSlippage={setUserslippageTolerance}\r\n            deadline={ttl}\r\n            setDeadline={setTtl}\r\n          />\r\n          <Text bold fontSize=\"20px\" mt=\"32px\">\r\n            {t('Interface Settings')}\r\n          </Text>\r\n          <RowBetween>\r\n            <RowFixed>\r\n              <Text fontSize=\"14px\">{t('Toggle Expert Mode')}</Text>\r\n              <QuestionHelper\r\n                text={t('Bypasses confirmation modals and allows high slippage trades. Use at your own risk.')}\r\n                ml=\"4px\"\r\n              />\r\n            </RowFixed>\r\n            <PancakeToggle\r\n              id=\"toggle-expert-mode-button\"\r\n              checked={expertMode}\r\n              onChange={\r\n                expertMode\r\n                  ? () => {\r\n                      onChangeRecipient(null)\r\n                      toggleExpertMode()\r\n                    }\r\n                  : () => setShowConfirmExpertModal(true)\r\n              }\r\n            />\r\n          </RowBetween>\r\n          <RowBetween>\r\n            <RowFixed>\r\n              <Text fontSize=\"14px\">{t('Disable Multihops')}</Text>\r\n              <QuestionHelper text={t('Restricts swaps to direct pairs only.')} ml=\"4px\" />\r\n            </RowFixed>\r\n            <PancakeToggle\r\n              id=\"toggle-disable-multihop-button\"\r\n              checked={singleHopOnly}\r\n              onChange={() => {\r\n                setSingleHopOnly(!singleHopOnly)\r\n              }}\r\n            />\r\n          </RowBetween>\r\n          <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"8px\">\r\n            <RowFixed>\r\n              <Text fontSize=\"14px\">{t('Audio')}</Text>\r\n              <QuestionHelper text={t('üê∞ Turn down your volume a bit before you swap')} ml=\"4px\" />\r\n            </RowFixed>\r\n            <PancakeToggle checked={audioPlay} onChange={toggleSetAudioMode} />\r\n          </Flex>\r\n        </AutoColumn>\r\n      </ModalBody>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default SettingsModal\r\n"]},"metadata":{},"sourceType":"module"}