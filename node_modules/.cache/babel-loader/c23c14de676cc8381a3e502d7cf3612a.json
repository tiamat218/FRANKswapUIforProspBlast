{"ast":null,"code":"'use strict';\n\n/** @typedef {import('./generated-types').CodecName} CodecName */\n/** @typedef {import('./generated-types').NumberNameMap} NumberNameMap */\nconst {\n  baseTable\n} = require('./base-table');\nconst tableByCode = /** @type {NumberNameMap} */{};\nfor (const [name, code] of Object.entries(baseTable)) {\n  if (tableByCode[code] === undefined) {\n    tableByCode[code] = /** @type {CodecName} **/name;\n  }\n}\nmodule.exports = /** @type {NumberNameMap} */Object.freeze(tableByCode);","map":{"version":3,"names":["baseTable","require","tableByCode","name","code","Object","entries","undefined","module","exports","freeze"],"sources":["C:/Users/frkul/Documents/swapUI_pancake-frontend/node_modules/multicodec/src/print.js"],"sourcesContent":["'use strict'\n\n/** @typedef {import('./generated-types').CodecName} CodecName */\n/** @typedef {import('./generated-types').NumberNameMap} NumberNameMap */\n\nconst { baseTable } = require('./base-table')\n\nconst tableByCode = /** @type {NumberNameMap} */({})\n\nfor (const [name, code] of Object.entries(baseTable)) {\n  if (tableByCode[code] === undefined) {\n    tableByCode[code] = /** @type {CodecName} **/(name)\n  }\n}\n\nmodule.exports = /** @type {NumberNameMap} */(Object.freeze(tableByCode))\n"],"mappings":"AAAA,YAAY;;AAEZ;AACA;AAEA,MAAM;EAAEA;AAAU,CAAC,GAAGC,OAAO,CAAC,cAAc,CAAC;AAE7C,MAAMC,WAAW,GAAG,4BAA6B,CAAC,CAAE;AAEpD,KAAK,MAAM,CAACC,IAAI,EAAEC,IAAI,CAAC,IAAIC,MAAM,CAACC,OAAO,CAACN,SAAS,CAAC,EAAE;EACpD,IAAIE,WAAW,CAACE,IAAI,CAAC,KAAKG,SAAS,EAAE;IACnCL,WAAW,CAACE,IAAI,CAAC,GAAG,yBAA0BD,IAAK;EACrD;AACF;AAEAK,MAAM,CAACC,OAAO,GAAG,4BAA6BJ,MAAM,CAACK,MAAM,CAACR,WAAW,CAAE","ignoreList":[]},"metadata":{},"sourceType":"script"}