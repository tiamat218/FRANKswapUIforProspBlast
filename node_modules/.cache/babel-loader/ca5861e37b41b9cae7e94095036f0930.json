{"ast":null,"code":"import React from'react';import{Text}from'@pancakeswap/uikit';import{toDate,format}from'date-fns';import{useTranslation}from'contexts/Localization';import{ProposalState}from'state/types';import{jsx as _jsx}from\"react/jsx-runtime\";const getFormattedDate=timestamp=>{const date=toDate(timestamp*1000);return format(date,'MMM do, yyyy HH:mm');};const TimeFrame=_ref=>{let{startDate,endDate,proposalState}=_ref;const{t}=useTranslation();const textProps={fontSize:'16px',color:'textSubtle',ml:'8px'};if(proposalState===ProposalState.CLOSED){return/*#__PURE__*/_jsx(Text,{...textProps,children:t('Ended %date%',{date:getFormattedDate(endDate)})});}if(proposalState===ProposalState.PENDING){return/*#__PURE__*/_jsx(Text,{...textProps,children:t('Starts %date%',{date:getFormattedDate(startDate)})});}return/*#__PURE__*/_jsx(Text,{...textProps,children:t('Ends %date%',{date:getFormattedDate(endDate)})});};export default TimeFrame;","map":{"version":3,"names":["React","Text","toDate","format","useTranslation","ProposalState","jsx","_jsx","getFormattedDate","timestamp","date","TimeFrame","_ref","startDate","endDate","proposalState","t","textProps","fontSize","color","ml","CLOSED","children","PENDING"],"sources":["C:/Users/frkul/Documents/swapUI_pancake-frontend/src/views/Voting/components/Proposals/TimeFrame.tsx"],"sourcesContent":["import React from 'react'\r\nimport { Text } from '@pancakeswap/uikit'\r\nimport { toDate, format } from 'date-fns'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { ProposalState } from 'state/types'\r\n\r\ninterface TimeFrameProps {\r\n  startDate: number\r\n  endDate: number\r\n  proposalState: ProposalState\r\n}\r\n\r\nconst getFormattedDate = (timestamp: number) => {\r\n  const date = toDate(timestamp * 1000)\r\n  return format(date, 'MMM do, yyyy HH:mm')\r\n}\r\n\r\nconst TimeFrame: React.FC<TimeFrameProps> = ({ startDate, endDate, proposalState }) => {\r\n  const { t } = useTranslation()\r\n  const textProps = {\r\n    fontSize: '16px',\r\n    color: 'textSubtle',\r\n    ml: '8px',\r\n  }\r\n\r\n  if (proposalState === ProposalState.CLOSED) {\r\n    return <Text {...textProps}>{t('Ended %date%', { date: getFormattedDate(endDate) })}</Text>\r\n  }\r\n\r\n  if (proposalState === ProposalState.PENDING) {\r\n    return <Text {...textProps}>{t('Starts %date%', { date: getFormattedDate(startDate) })}</Text>\r\n  }\r\n\r\n  return <Text {...textProps}>{t('Ends %date%', { date: getFormattedDate(endDate) })}</Text>\r\n}\r\n\r\nexport default TimeFrame\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,IAAI,KAAQ,oBAAoB,CACzC,OAASC,MAAM,CAAEC,MAAM,KAAQ,UAAU,CACzC,OAASC,cAAc,KAAQ,uBAAuB,CACtD,OAASC,aAAa,KAAQ,aAAa,QAAAC,GAAA,IAAAC,IAAA,yBAQ3C,KAAM,CAAAC,gBAAgB,CAAIC,SAAiB,EAAK,CAC9C,KAAM,CAAAC,IAAI,CAAGR,MAAM,CAACO,SAAS,CAAG,IAAI,CAAC,CACrC,MAAO,CAAAN,MAAM,CAACO,IAAI,CAAE,oBAAoB,CAAC,CAC3C,CAAC,CAED,KAAM,CAAAC,SAAmC,CAAGC,IAAA,EAA2C,IAA1C,CAAEC,SAAS,CAAEC,OAAO,CAAEC,aAAc,CAAC,CAAAH,IAAA,CAChF,KAAM,CAAEI,CAAE,CAAC,CAAGZ,cAAc,CAAC,CAAC,CAC9B,KAAM,CAAAa,SAAS,CAAG,CAChBC,QAAQ,CAAE,MAAM,CAChBC,KAAK,CAAE,YAAY,CACnBC,EAAE,CAAE,KACN,CAAC,CAED,GAAIL,aAAa,GAAKV,aAAa,CAACgB,MAAM,CAAE,CAC1C,mBAAOd,IAAA,CAACN,IAAI,KAAKgB,SAAS,CAAAK,QAAA,CAAGN,CAAC,CAAC,cAAc,CAAE,CAAEN,IAAI,CAAEF,gBAAgB,CAACM,OAAO,CAAE,CAAC,CAAC,CAAO,CAAC,CAC7F,CAEA,GAAIC,aAAa,GAAKV,aAAa,CAACkB,OAAO,CAAE,CAC3C,mBAAOhB,IAAA,CAACN,IAAI,KAAKgB,SAAS,CAAAK,QAAA,CAAGN,CAAC,CAAC,eAAe,CAAE,CAAEN,IAAI,CAAEF,gBAAgB,CAACK,SAAS,CAAE,CAAC,CAAC,CAAO,CAAC,CAChG,CAEA,mBAAON,IAAA,CAACN,IAAI,KAAKgB,SAAS,CAAAK,QAAA,CAAGN,CAAC,CAAC,aAAa,CAAE,CAAEN,IAAI,CAAEF,gBAAgB,CAACM,OAAO,CAAE,CAAC,CAAC,CAAO,CAAC,CAC5F,CAAC,CAED,cAAe,CAAAH,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module"}