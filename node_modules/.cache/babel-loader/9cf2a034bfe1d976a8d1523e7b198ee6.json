{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Devrim\\\\Documents\\\\FRANKswapUIforProspBlast\\\\src\\\\views\\\\Ifos\\\\components\\\\IfoFoldableCard\\\\IfoPoolCard\\\\PercentageOfTotal.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Text } from '@pancakeswap/uikit';\nimport { useTranslation } from 'contexts/Localization';\nimport { BIG_ZERO } from 'utils/bigNumber';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PercentageOfTotal = ({\n  userAmount,\n  totalAmount,\n  ...props\n}) => {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  const percentOfUserContribution = totalAmount.isGreaterThan(0) ? userAmount.div(totalAmount).times(100).toNumber() : BIG_ZERO;\n  const percentOfUserDisplay = percentOfUserContribution.toLocaleString(undefined, {\n    maximumFractionDigits: 5\n  });\n  return /*#__PURE__*/_jsxDEV(Text, {\n    fontSize: \"14px\",\n    color: \"textSubtle\",\n    ...props,\n    children: t('%num% of total', {\n      num: percentOfUserDisplay\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PercentageOfTotal, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n\n_c = PercentageOfTotal;\nexport default PercentageOfTotal;\n\nvar _c;\n\n$RefreshReg$(_c, \"PercentageOfTotal\");","map":{"version":3,"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/views/Ifos/components/IfoFoldableCard/IfoPoolCard/PercentageOfTotal.tsx"],"names":["React","Text","useTranslation","BIG_ZERO","PercentageOfTotal","userAmount","totalAmount","props","t","percentOfUserContribution","isGreaterThan","div","times","toNumber","percentOfUserDisplay","toLocaleString","undefined","maximumFractionDigits","num"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,IAAT,QAAgC,oBAAhC;AACA,SAASC,cAAT,QAA+B,uBAA/B;AACA,SAASC,QAAT,QAAyB,iBAAzB;;;AAOA,MAAMC,iBAAmD,GAAG,CAAC;AAAEC,EAAAA,UAAF;AAAcC,EAAAA,WAAd;AAA2B,KAAGC;AAA9B,CAAD,KAA2C;AAAA;;AACrG,QAAM;AAAEC,IAAAA;AAAF,MAAQN,cAAc,EAA5B;AACA,QAAMO,yBAAyB,GAAGH,WAAW,CAACI,aAAZ,CAA0B,CAA1B,IAC9BL,UAAU,CAACM,GAAX,CAAeL,WAAf,EAA4BM,KAA5B,CAAkC,GAAlC,EAAuCC,QAAvC,EAD8B,GAE9BV,QAFJ;AAGA,QAAMW,oBAAoB,GAAGL,yBAAyB,CAACM,cAA1B,CAAyCC,SAAzC,EAAoD;AAAEC,IAAAA,qBAAqB,EAAE;AAAzB,GAApD,CAA7B;AAEA,sBACE,QAAC,IAAD;AAAM,IAAA,QAAQ,EAAC,MAAf;AAAsB,IAAA,KAAK,EAAC,YAA5B;AAAA,OAA6CV,KAA7C;AAAA,cACGC,CAAC,CAAC,gBAAD,EAAmB;AAAEU,MAAAA,GAAG,EAAEJ;AAAP,KAAnB;AADJ;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAZD;;GAAMV,iB;UACUF,c;;;KADVE,iB;AAcN,eAAeA,iBAAf","sourcesContent":["import React from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Text, TextProps } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\n\r\ninterface PercentageOfTotalProps extends TextProps {\r\n  userAmount: BigNumber\r\n  totalAmount: BigNumber\r\n}\r\n\r\nconst PercentageOfTotal: React.FC<PercentageOfTotalProps> = ({ userAmount, totalAmount, ...props }) => {\r\n  const { t } = useTranslation()\r\n  const percentOfUserContribution = totalAmount.isGreaterThan(0)\r\n    ? userAmount.div(totalAmount).times(100).toNumber()\r\n    : BIG_ZERO\r\n  const percentOfUserDisplay = percentOfUserContribution.toLocaleString(undefined, { maximumFractionDigits: 5 })\r\n\r\n  return (\r\n    <Text fontSize=\"14px\" color=\"textSubtle\" {...props}>\r\n      {t('%num% of total', { num: percentOfUserDisplay })}\r\n    </Text>\r\n  )\r\n}\r\n\r\nexport default PercentageOfTotal\r\n"]},"metadata":{},"sourceType":"module"}