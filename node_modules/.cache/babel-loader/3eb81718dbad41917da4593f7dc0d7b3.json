{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState, useRef } from 'react';\nimport { useWeb3React } from '@web3-react/core';\nimport { simpleRpcProvider } from 'utils/providers';\n// eslint-disable-next-line import/no-unresolved\n\n/**\r\n * Provides a web3 provider with or without user's signer\r\n * Recreate web3 instance only if the provider change\r\n */\nconst useActiveWeb3React = () => {\n  _s();\n  const {\n    library,\n    chainId,\n    ...web3React\n  } = useWeb3React();\n  const refEth = useRef(library);\n  const [provider, setprovider] = useState(library || simpleRpcProvider);\n  useEffect(() => {\n    if (library !== refEth.current) {\n      setprovider(library || simpleRpcProvider);\n      refEth.current = library;\n    }\n  }, [library]);\n  return {\n    library: provider,\n    chainId: chainId !== null && chainId !== void 0 ? chainId : parseInt(process.env.REACT_APP_CHAIN_ID, 10),\n    ...web3React\n  };\n};\n_s(useActiveWeb3React, \"1y60JVnIM5zKCWUj++5tvnFFeyM=\", false, function () {\n  return [useWeb3React];\n});\nexport default useActiveWeb3React;","map":{"version":3,"names":["useEffect","useState","useRef","useWeb3React","simpleRpcProvider","useActiveWeb3React","_s","library","chainId","web3React","refEth","provider","setprovider","current","parseInt","process","env","REACT_APP_CHAIN_ID"],"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/hooks/useActiveWeb3React.ts"],"sourcesContent":["import { useEffect, useState, useRef } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { Web3Provider } from '@ethersproject/providers'\r\nimport { simpleRpcProvider } from 'utils/providers'\r\n// eslint-disable-next-line import/no-unresolved\r\nimport { Web3ReactContextInterface } from '@web3-react/core/dist/types'\r\n\r\n/**\r\n * Provides a web3 provider with or without user's signer\r\n * Recreate web3 instance only if the provider change\r\n */\r\nconst useActiveWeb3React = (): Web3ReactContextInterface<Web3Provider> => {\r\n  const { library, chainId, ...web3React } = useWeb3React()\r\n  const refEth = useRef(library)\r\n  const [provider, setprovider] = useState(library || simpleRpcProvider)\r\n\r\n  useEffect(() => {\r\n    if (library !== refEth.current) {\r\n      setprovider(library || simpleRpcProvider)\r\n      refEth.current = library\r\n    }\r\n  }, [library])\r\n\r\n  return { library: provider, chainId: chainId ?? parseInt(process.env.REACT_APP_CHAIN_ID, 10), ...web3React }\r\n}\r\n\r\nexport default useActiveWeb3React\r\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AACnD,SAASC,YAAY,QAAQ,kBAAkB;AAE/C,SAASC,iBAAiB,QAAQ,iBAAiB;AACnD;;AAGA;AACA;AACA;AACA;AACA,MAAMC,kBAAkB,GAAGA,CAAA,KAA+C;EAAAC,EAAA;EACxE,MAAM;IAAEC,OAAO;IAAEC,OAAO;IAAE,GAAGC;EAAU,CAAC,GAAGN,YAAY,CAAC,CAAC;EACzD,MAAMO,MAAM,GAAGR,MAAM,CAACK,OAAO,CAAC;EAC9B,MAAM,CAACI,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAACM,OAAO,IAAIH,iBAAiB,CAAC;EAEtEJ,SAAS,CAAC,MAAM;IACd,IAAIO,OAAO,KAAKG,MAAM,CAACG,OAAO,EAAE;MAC9BD,WAAW,CAACL,OAAO,IAAIH,iBAAiB,CAAC;MACzCM,MAAM,CAACG,OAAO,GAAGN,OAAO;IAC1B;EACF,CAAC,EAAE,CAACA,OAAO,CAAC,CAAC;EAEb,OAAO;IAAEA,OAAO,EAAEI,QAAQ;IAAEH,OAAO,EAAEA,OAAO,aAAPA,OAAO,cAAPA,OAAO,GAAIM,QAAQ,CAACC,OAAO,CAACC,GAAG,CAACC,kBAAkB,EAAE,EAAE,CAAC;IAAE,GAAGR;EAAU,CAAC;AAC9G,CAAC;AAAAH,EAAA,CAbKD,kBAAkB;EAAA,QACqBF,YAAY;AAAA;AAczD,eAAeE,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"module"}