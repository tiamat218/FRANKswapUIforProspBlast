{"ast":null,"code":"import React,{createContext,useEffect,useMemo,useReducer}from'react';import BigNumber from'bignumber.js';import{useWeb3React}from'@web3-react/core';import{getBunnyFactoryContract}from'utils/contractHelpers';import{DEFAULT_TOKEN_DECIMAL}from'config';import{MINT_COST,REGISTER_COST,ALLOWANCE_MULTIPLIER}from'../config';import{jsx as _jsx}from\"react/jsx-runtime\";const totalCost=MINT_COST+REGISTER_COST;const allowance=totalCost*ALLOWANCE_MULTIPLIER;const initialState={isInitialized:false,currentStep:0,teamId:null,selectedNft:{nftAddress:null,tokenId:null},userName:'',minimumCakeRequired:new BigNumber(totalCost).multipliedBy(DEFAULT_TOKEN_DECIMAL),allowance:new BigNumber(allowance).multipliedBy(DEFAULT_TOKEN_DECIMAL)};const reducer=(state,action)=>{switch(action.type){case'initialize':return{...state,isInitialized:true,currentStep:action.step};case'next_step':return{...state,currentStep:state.currentStep+1};case'set_team':return{...state,teamId:action.teamId};case'set_selected_nft':return{...state,selectedNft:{tokenId:action.tokenId,nftAddress:action.nftAddress}};case'set_username':return{...state,userName:action.userName};default:return state;}};export const ProfileCreationContext=/*#__PURE__*/createContext(null);const ProfileCreationProvider=_ref=>{let{children}=_ref;const[state,dispatch]=useReducer(reducer,initialState);const{account}=useWeb3React();// Initial checks\nuseEffect(()=>{let isSubscribed=true;const fetchData=async()=>{const bunnyFactoryContract=getBunnyFactoryContract();const canMint=await bunnyFactoryContract.canMint(account);dispatch({type:'initialize',step:canMint?0:1});// When changing wallets quickly unmounting before the hasClaim finished causes a React error\nif(isSubscribed){dispatch({type:'initialize',step:canMint?0:1});}};if(account){fetchData();}return()=>{isSubscribed=false;};},[account,dispatch]);const actions=useMemo(()=>({nextStep:()=>dispatch({type:'next_step'}),setTeamId:teamId=>dispatch({type:'set_team',teamId}),setSelectedNft:(tokenId,nftAddress)=>dispatch({type:'set_selected_nft',tokenId,nftAddress}),setUserName:userName=>dispatch({type:'set_username',userName})}),[dispatch]);return/*#__PURE__*/_jsx(ProfileCreationContext.Provider,{value:{...state,actions},children:children});};export default ProfileCreationProvider;","map":{"version":3,"names":["React","createContext","useEffect","useMemo","useReducer","BigNumber","useWeb3React","getBunnyFactoryContract","DEFAULT_TOKEN_DECIMAL","MINT_COST","REGISTER_COST","ALLOWANCE_MULTIPLIER","jsx","_jsx","totalCost","allowance","initialState","isInitialized","currentStep","teamId","selectedNft","nftAddress","tokenId","userName","minimumCakeRequired","multipliedBy","reducer","state","action","type","step","ProfileCreationContext","ProfileCreationProvider","_ref","children","dispatch","account","isSubscribed","fetchData","bunnyFactoryContract","canMint","actions","nextStep","setTeamId","setSelectedNft","setUserName","Provider","value"],"sources":["C:/Users/frkul/Documents/swapUI_pancake-frontend/src/views/Profile/ProfileCreation/contexts/ProfileCreationProvider.tsx"],"sourcesContent":["import React, { createContext, useEffect, useMemo, useReducer } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { getBunnyFactoryContract } from 'utils/contractHelpers'\r\nimport { DEFAULT_TOKEN_DECIMAL } from 'config'\r\nimport { MINT_COST, REGISTER_COST, ALLOWANCE_MULTIPLIER } from '../config'\r\nimport { Actions, State, ContextType } from './types'\r\n\r\nconst totalCost = MINT_COST + REGISTER_COST\r\nconst allowance = totalCost * ALLOWANCE_MULTIPLIER\r\n\r\nconst initialState: State = {\r\n  isInitialized: false,\r\n  currentStep: 0,\r\n  teamId: null,\r\n  selectedNft: {\r\n    nftAddress: null,\r\n    tokenId: null,\r\n  },\r\n  userName: '',\r\n  minimumCakeRequired: new BigNumber(totalCost).multipliedBy(DEFAULT_TOKEN_DECIMAL),\r\n  allowance: new BigNumber(allowance).multipliedBy(DEFAULT_TOKEN_DECIMAL),\r\n}\r\n\r\nconst reducer = (state: State, action: Actions): State => {\r\n  switch (action.type) {\r\n    case 'initialize':\r\n      return {\r\n        ...state,\r\n        isInitialized: true,\r\n        currentStep: action.step,\r\n      }\r\n    case 'next_step':\r\n      return {\r\n        ...state,\r\n        currentStep: state.currentStep + 1,\r\n      }\r\n    case 'set_team':\r\n      return {\r\n        ...state,\r\n        teamId: action.teamId,\r\n      }\r\n    case 'set_selected_nft':\r\n      return {\r\n        ...state,\r\n        selectedNft: {\r\n          tokenId: action.tokenId,\r\n          nftAddress: action.nftAddress,\r\n        },\r\n      }\r\n    case 'set_username':\r\n      return {\r\n        ...state,\r\n        userName: action.userName,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const ProfileCreationContext = createContext<ContextType>(null)\r\n\r\nconst ProfileCreationProvider: React.FC = ({ children }) => {\r\n  const [state, dispatch] = useReducer(reducer, initialState)\r\n  const { account } = useWeb3React()\r\n\r\n  // Initial checks\r\n  useEffect(() => {\r\n    let isSubscribed = true\r\n\r\n    const fetchData = async () => {\r\n      const bunnyFactoryContract = getBunnyFactoryContract()\r\n      const canMint = await bunnyFactoryContract.canMint(account)\r\n      dispatch({ type: 'initialize', step: canMint ? 0 : 1 })\r\n\r\n      // When changing wallets quickly unmounting before the hasClaim finished causes a React error\r\n      if (isSubscribed) {\r\n        dispatch({ type: 'initialize', step: canMint ? 0 : 1 })\r\n      }\r\n    }\r\n\r\n    if (account) {\r\n      fetchData()\r\n    }\r\n\r\n    return () => {\r\n      isSubscribed = false\r\n    }\r\n  }, [account, dispatch])\r\n\r\n  const actions: ContextType['actions'] = useMemo(\r\n    () => ({\r\n      nextStep: () => dispatch({ type: 'next_step' }),\r\n      setTeamId: (teamId: number) => dispatch({ type: 'set_team', teamId }),\r\n      setSelectedNft: (tokenId: number, nftAddress: string) =>\r\n        dispatch({ type: 'set_selected_nft', tokenId, nftAddress }),\r\n      setUserName: (userName: string) => dispatch({ type: 'set_username', userName }),\r\n    }),\r\n    [dispatch],\r\n  )\r\n\r\n  return <ProfileCreationContext.Provider value={{ ...state, actions }}>{children}</ProfileCreationContext.Provider>\r\n}\r\n\r\nexport default ProfileCreationProvider\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}