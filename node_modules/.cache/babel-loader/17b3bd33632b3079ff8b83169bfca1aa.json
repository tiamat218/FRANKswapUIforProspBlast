{"ast":null,"code":"import poolsConfig from'config/constants/pools';import sousChefABI from'config/abi/sousChef.json';import erc20ABI from'config/abi/erc20.json';import multicall from'utils/multicall';import{getMasterchefContract}from'utils/contractHelpers';import{getAddress}from'utils/addressHelpers';import{simpleRpcProvider}from'utils/providers';import BigNumber from'bignumber.js';// Pool 0, Cake / Cake is a different kind of contract (master chef)\n// BNB pools use the native BNB token (wrapping ? unwrapping is done at the contract level)\nconst nonBnbPools=poolsConfig.filter(p=>p.stakingToken.symbol!=='BNB');const bnbPools=poolsConfig.filter(p=>p.stakingToken.symbol==='BNB');const nonMasterPools=poolsConfig.filter(p=>p.sousId!==0);const masterChefContract=getMasterchefContract();export const fetchPoolsAllowance=async account=>{const calls=nonBnbPools.map(p=>({address:getAddress(p.stakingToken.address),name:'allowance',params:[account,getAddress(p.contractAddress)]}));const allowances=await multicall(erc20ABI,calls);return nonBnbPools.reduce((acc,pool,index)=>({...acc,[pool.sousId]:new BigNumber(allowances[index]).toJSON()}),{});};export const fetchUserBalances=async account=>{// Non BNB pools\nconst calls=nonBnbPools.map(p=>({address:getAddress(p.stakingToken.address),name:'balanceOf',params:[account]}));const tokenBalancesRaw=await multicall(erc20ABI,calls);const tokenBalances=nonBnbPools.reduce((acc,pool,index)=>({...acc,[pool.sousId]:new BigNumber(tokenBalancesRaw[index]).toJSON()}),{});// BNB pools\nconst bnbBalance=await simpleRpcProvider.getBalance(account);const bnbBalances=bnbPools.reduce((acc,pool)=>({...acc,[pool.sousId]:new BigNumber(bnbBalance.toString()).toJSON()}),{});return{...tokenBalances,...bnbBalances};};export const fetchUserStakeBalances=async account=>{const calls=nonMasterPools.map(p=>({address:getAddress(p.contractAddress),name:'userInfo',params:[account]}));const userInfo=await multicall(sousChefABI,calls);const stakedBalances=nonMasterPools.reduce((acc,pool,index)=>({...acc,[pool.sousId]:new BigNumber(userInfo[index].amount._hex).toJSON()}),{});// Cake / Cake pool\nconst{amount:masterPoolAmount}=await masterChefContract.userInfo('0',account);return{...stakedBalances,0:new BigNumber(masterPoolAmount.toString()).toJSON()};};export const fetchUserPendingRewards=async account=>{const calls=nonMasterPools.map(p=>({address:getAddress(p.contractAddress),name:'pendingReward',params:[account]}));const res=await multicall(sousChefABI,calls);const pendingRewards=nonMasterPools.reduce((acc,pool,index)=>({...acc,[pool.sousId]:new BigNumber(res[index]).toJSON()}),{});// Cake / Cake pool\nconst pendingReward=await masterChefContract.pendingCake('0',account);return{...pendingRewards,0:new BigNumber(pendingReward.toString()).toJSON()};};","map":{"version":3,"names":["poolsConfig","sousChefABI","erc20ABI","multicall","getMasterchefContract","getAddress","simpleRpcProvider","BigNumber","nonBnbPools","filter","p","stakingToken","symbol","bnbPools","nonMasterPools","sousId","masterChefContract","fetchPoolsAllowance","account","calls","map","address","name","params","contractAddress","allowances","reduce","acc","pool","index","toJSON","fetchUserBalances","tokenBalancesRaw","tokenBalances","bnbBalance","getBalance","bnbBalances","toString","fetchUserStakeBalances","userInfo","stakedBalances","amount","_hex","masterPoolAmount","fetchUserPendingRewards","res","pendingRewards","pendingReward","pendingCake"],"sources":["C:/Users/frkul/Documents/swapUI_pancake-frontend/src/state/pools/fetchPoolsUser.ts"],"sourcesContent":["import poolsConfig from 'config/constants/pools'\r\nimport sousChefABI from 'config/abi/sousChef.json'\r\nimport erc20ABI from 'config/abi/erc20.json'\r\nimport multicall from 'utils/multicall'\r\nimport { getMasterchefContract } from 'utils/contractHelpers'\r\nimport { getAddress } from 'utils/addressHelpers'\r\nimport { simpleRpcProvider } from 'utils/providers'\r\nimport BigNumber from 'bignumber.js'\r\n\r\n// Pool 0, Cake / Cake is a different kind of contract (master chef)\r\n// BNB pools use the native BNB token (wrapping ? unwrapping is done at the contract level)\r\nconst nonBnbPools = poolsConfig.filter((p) => p.stakingToken.symbol !== 'BNB')\r\nconst bnbPools = poolsConfig.filter((p) => p.stakingToken.symbol === 'BNB')\r\nconst nonMasterPools = poolsConfig.filter((p) => p.sousId !== 0)\r\nconst masterChefContract = getMasterchefContract()\r\n\r\nexport const fetchPoolsAllowance = async (account) => {\r\n  const calls = nonBnbPools.map((p) => ({\r\n    address: getAddress(p.stakingToken.address),\r\n    name: 'allowance',\r\n    params: [account, getAddress(p.contractAddress)],\r\n  }))\r\n\r\n  const allowances = await multicall(erc20ABI, calls)\r\n  return nonBnbPools.reduce(\r\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(allowances[index]).toJSON() }),\r\n    {},\r\n  )\r\n}\r\n\r\nexport const fetchUserBalances = async (account) => {\r\n  // Non BNB pools\r\n  const calls = nonBnbPools.map((p) => ({\r\n    address: getAddress(p.stakingToken.address),\r\n    name: 'balanceOf',\r\n    params: [account],\r\n  }))\r\n  const tokenBalancesRaw = await multicall(erc20ABI, calls)\r\n  const tokenBalances = nonBnbPools.reduce(\r\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(tokenBalancesRaw[index]).toJSON() }),\r\n    {},\r\n  )\r\n\r\n  // BNB pools\r\n  const bnbBalance = await simpleRpcProvider.getBalance(account)\r\n  const bnbBalances = bnbPools.reduce(\r\n    (acc, pool) => ({ ...acc, [pool.sousId]: new BigNumber(bnbBalance.toString()).toJSON() }),\r\n    {},\r\n  )\r\n\r\n  return { ...tokenBalances, ...bnbBalances }\r\n}\r\n\r\nexport const fetchUserStakeBalances = async (account) => {\r\n  const calls = nonMasterPools.map((p) => ({\r\n    address: getAddress(p.contractAddress),\r\n    name: 'userInfo',\r\n    params: [account],\r\n  }))\r\n  const userInfo = await multicall(sousChefABI, calls)\r\n  const stakedBalances = nonMasterPools.reduce(\r\n    (acc, pool, index) => ({\r\n      ...acc,\r\n      [pool.sousId]: new BigNumber(userInfo[index].amount._hex).toJSON(),\r\n    }),\r\n    {},\r\n  )\r\n\r\n  // Cake / Cake pool\r\n  const { amount: masterPoolAmount } = await masterChefContract.userInfo('0', account)\r\n\r\n  return { ...stakedBalances, 0: new BigNumber(masterPoolAmount.toString()).toJSON() }\r\n}\r\n\r\nexport const fetchUserPendingRewards = async (account) => {\r\n  const calls = nonMasterPools.map((p) => ({\r\n    address: getAddress(p.contractAddress),\r\n    name: 'pendingReward',\r\n    params: [account],\r\n  }))\r\n  const res = await multicall(sousChefABI, calls)\r\n  const pendingRewards = nonMasterPools.reduce(\r\n    (acc, pool, index) => ({\r\n      ...acc,\r\n      [pool.sousId]: new BigNumber(res[index]).toJSON(),\r\n    }),\r\n    {},\r\n  )\r\n\r\n  // Cake / Cake pool\r\n  const pendingReward = await masterChefContract.pendingCake('0', account)\r\n\r\n  return { ...pendingRewards, 0: new BigNumber(pendingReward.toString()).toJSON() }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}