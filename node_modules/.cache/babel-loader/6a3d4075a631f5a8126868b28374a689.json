{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useRef } from 'react';\n\n/**\r\n * Returns the previous value of the given value\r\n *\r\n * @see https://reactjs.org/docs/hooks-faq.html#how-to-get-the-previous-props-or-state\r\n */\nconst usePreviousValue = value => {\n  _s();\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  }, [value]);\n  return ref.current;\n};\n_s(usePreviousValue, \"8uVE59eA/r6b92xF80p7sH8rXLk=\");\nexport default usePreviousValue;","map":{"version":3,"names":["useEffect","useRef","usePreviousValue","value","_s","ref","current"],"sources":["C:/Users/Devrim/Documents/swapUIforProspBlast/src/hooks/usePreviousValue.ts"],"sourcesContent":["import { useEffect, useRef } from 'react'\r\n\r\n/**\r\n * Returns the previous value of the given value\r\n *\r\n * @see https://reactjs.org/docs/hooks-faq.html#how-to-get-the-previous-props-or-state\r\n */\r\nconst usePreviousValue = (value: any) => {\r\n  const ref = useRef()\r\n\r\n  useEffect(() => {\r\n    ref.current = value\r\n  }, [value])\r\n\r\n  return ref.current\r\n}\r\n\r\nexport default usePreviousValue\r\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,MAAM,QAAQ,OAAO;;AAEzC;AACA;AACA;AACA;AACA;AACA,MAAMC,gBAAgB,GAAIC,KAAU,IAAK;EAAAC,EAAA;EACvC,MAAMC,GAAG,GAAGJ,MAAM,CAAC,CAAC;EAEpBD,SAAS,CAAC,MAAM;IACdK,GAAG,CAACC,OAAO,GAAGH,KAAK;EACrB,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EAEX,OAAOE,GAAG,CAACC,OAAO;AACpB,CAAC;AAAAF,EAAA,CARKF,gBAAgB;AAUtB,eAAeA,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module"}