{"ast":null,"code":"import BigNumber from 'bignumber.js';\nimport { DEFAULT_GAS_LIMIT, DEFAULT_TOKEN_DECIMAL } from 'config';\nconst options = {\n  gasLimit: DEFAULT_GAS_LIMIT\n};\nexport const stakeFarm = async (masterChefContract, pid, amount) => {\n  const value = new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString();\n  if (pid === 0) {\n    const tx = await masterChefContract.enterStaking(value, options);\n    const receipt = await tx.wait();\n    return receipt.status;\n  }\n  const tx = await masterChefContract.deposit(pid, value, options);\n  const receipt = await tx.wait();\n  return receipt.status;\n};\nexport const unstakeFarm = async (masterChefContract, pid, amount) => {\n  const value = new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString();\n  if (pid === 0) {\n    const tx = await masterChefContract.leaveStaking(value, options);\n    const receipt = await tx.wait();\n    return receipt.status;\n  }\n  const tx = await masterChefContract.withdraw(pid, value, options);\n  const receipt = await tx.wait();\n  return receipt.status;\n};\nexport const harvestFarm = async (masterChefContract, pid) => {\n  if (pid === 0) {\n    const tx = await await masterChefContract.leaveStaking('0', options);\n    const receipt = await tx.wait();\n    return receipt.status;\n  }\n  const tx = await masterChefContract.deposit(pid, '0', options);\n  const receipt = await tx.wait();\n  return receipt.status;\n};","map":{"version":3,"names":["BigNumber","DEFAULT_GAS_LIMIT","DEFAULT_TOKEN_DECIMAL","options","gasLimit","stakeFarm","masterChefContract","pid","amount","value","times","toString","tx","enterStaking","receipt","wait","status","deposit","unstakeFarm","leaveStaking","withdraw","harvestFarm"],"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/utils/calls/farms.ts"],"sourcesContent":["import BigNumber from 'bignumber.js'\r\nimport { DEFAULT_GAS_LIMIT, DEFAULT_TOKEN_DECIMAL } from 'config'\r\n\r\nconst options = {\r\n  gasLimit: DEFAULT_GAS_LIMIT,\r\n}\r\n\r\nexport const stakeFarm = async (masterChefContract, pid, amount) => {\r\n  const value = new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString()\r\n  if (pid === 0) {\r\n    const tx = await masterChefContract.enterStaking(value, options)\r\n    const receipt = await tx.wait()\r\n    return receipt.status\r\n  }\r\n\r\n  const tx = await masterChefContract.deposit(pid, value, options)\r\n  const receipt = await tx.wait()\r\n  return receipt.status\r\n}\r\n\r\nexport const unstakeFarm = async (masterChefContract, pid, amount) => {\r\n  const value = new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString()\r\n  if (pid === 0) {\r\n    const tx = await masterChefContract.leaveStaking(value, options)\r\n    const receipt = await tx.wait()\r\n    return receipt.status\r\n  }\r\n\r\n  const tx = await masterChefContract.withdraw(pid, value, options)\r\n  const receipt = await tx.wait()\r\n  return receipt.status\r\n}\r\n\r\nexport const harvestFarm = async (masterChefContract, pid) => {\r\n  if (pid === 0) {\r\n    const tx = await await masterChefContract.leaveStaking('0', options)\r\n    const receipt = await tx.wait()\r\n    return receipt.status\r\n  }\r\n\r\n  const tx = await masterChefContract.deposit(pid, '0', options)\r\n  const receipt = await tx.wait()\r\n  return receipt.status\r\n}\r\n"],"mappings":"AAAA,OAAOA,SAAS,MAAM,cAAc;AACpC,SAASC,iBAAiB,EAAEC,qBAAqB,QAAQ,QAAQ;AAEjE,MAAMC,OAAO,GAAG;EACdC,QAAQ,EAAEH;AACZ,CAAC;AAED,OAAO,MAAMI,SAAS,GAAG,MAAAA,CAAOC,kBAAkB,EAAEC,GAAG,EAAEC,MAAM,KAAK;EAClE,MAAMC,KAAK,GAAG,IAAIT,SAAS,CAACQ,MAAM,CAAC,CAACE,KAAK,CAACR,qBAAqB,CAAC,CAACS,QAAQ,CAAC,CAAC;EAC3E,IAAIJ,GAAG,KAAK,CAAC,EAAE;IACb,MAAMK,EAAE,GAAG,MAAMN,kBAAkB,CAACO,YAAY,CAACJ,KAAK,EAAEN,OAAO,CAAC;IAChE,MAAMW,OAAO,GAAG,MAAMF,EAAE,CAACG,IAAI,CAAC,CAAC;IAC/B,OAAOD,OAAO,CAACE,MAAM;EACvB;EAEA,MAAMJ,EAAE,GAAG,MAAMN,kBAAkB,CAACW,OAAO,CAACV,GAAG,EAAEE,KAAK,EAAEN,OAAO,CAAC;EAChE,MAAMW,OAAO,GAAG,MAAMF,EAAE,CAACG,IAAI,CAAC,CAAC;EAC/B,OAAOD,OAAO,CAACE,MAAM;AACvB,CAAC;AAED,OAAO,MAAME,WAAW,GAAG,MAAAA,CAAOZ,kBAAkB,EAAEC,GAAG,EAAEC,MAAM,KAAK;EACpE,MAAMC,KAAK,GAAG,IAAIT,SAAS,CAACQ,MAAM,CAAC,CAACE,KAAK,CAACR,qBAAqB,CAAC,CAACS,QAAQ,CAAC,CAAC;EAC3E,IAAIJ,GAAG,KAAK,CAAC,EAAE;IACb,MAAMK,EAAE,GAAG,MAAMN,kBAAkB,CAACa,YAAY,CAACV,KAAK,EAAEN,OAAO,CAAC;IAChE,MAAMW,OAAO,GAAG,MAAMF,EAAE,CAACG,IAAI,CAAC,CAAC;IAC/B,OAAOD,OAAO,CAACE,MAAM;EACvB;EAEA,MAAMJ,EAAE,GAAG,MAAMN,kBAAkB,CAACc,QAAQ,CAACb,GAAG,EAAEE,KAAK,EAAEN,OAAO,CAAC;EACjE,MAAMW,OAAO,GAAG,MAAMF,EAAE,CAACG,IAAI,CAAC,CAAC;EAC/B,OAAOD,OAAO,CAACE,MAAM;AACvB,CAAC;AAED,OAAO,MAAMK,WAAW,GAAG,MAAAA,CAAOf,kBAAkB,EAAEC,GAAG,KAAK;EAC5D,IAAIA,GAAG,KAAK,CAAC,EAAE;IACb,MAAMK,EAAE,GAAG,MAAM,MAAMN,kBAAkB,CAACa,YAAY,CAAC,GAAG,EAAEhB,OAAO,CAAC;IACpE,MAAMW,OAAO,GAAG,MAAMF,EAAE,CAACG,IAAI,CAAC,CAAC;IAC/B,OAAOD,OAAO,CAACE,MAAM;EACvB;EAEA,MAAMJ,EAAE,GAAG,MAAMN,kBAAkB,CAACW,OAAO,CAACV,GAAG,EAAE,GAAG,EAAEJ,OAAO,CAAC;EAC9D,MAAMW,OAAO,GAAG,MAAMF,EAAE,CAACG,IAAI,CAAC,CAAC;EAC/B,OAAOD,OAAO,CAACE,MAAM;AACvB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}