{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Devrim\\\\Documents\\\\swapUIforProspBlast\\\\src\\\\views\\\\Predictions\\\\History.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Flex, Spinner, Text } from '@pancakeswap/uikit';\nimport { useWeb3React } from '@web3-react/core';\nimport styled from 'styled-components';\nimport ConnectWalletButton from 'components/ConnectWalletButton';\nimport { useTranslation } from 'contexts/Localization';\nimport { fetchHistory } from 'state/predictions';\nimport { getUnclaimedWinningBets } from 'state/predictions/helpers';\nimport { HistoryFilter } from 'state/types';\nimport { useAppDispatch } from 'state';\nimport { useGetCurrentEpoch, useGetHistoryByAccount, useGetHistoryFilter, useGetIsFetchingHistory, useIsHistoryPaneOpen } from 'state/hooks';\nimport { Header, HistoryTabs } from './components/History';\nimport RoundsTab from './components/History/RoundsTab';\nimport PnlTab from './components/History/PnlTab/PnlTab';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledHistory = styled.div`\n  background-color: ${({\n  theme\n}) => theme.card.background};\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n`;\n_c = StyledHistory;\nconst BetWrapper = styled.div`\n  flex: 1;\n  height: 100%;\n  overflow-y: auto;\n  position: relative;\n`;\n_c2 = BetWrapper;\nconst SpinnerWrapper = styled.div`\n  align-items: center;\n  background-color: ${({\n  theme\n}) => theme.card.background};\n  display: flex;\n  left: 0;\n  height: 100%;\n  justify-content: center;\n  position: absolute;\n  top: 0;\n  width: 100%;\n`;\n_c3 = SpinnerWrapper;\nconst History = () => {\n  _s();\n  const {\n    account\n  } = useWeb3React();\n  const dispatch = useAppDispatch();\n  const isHistoryPaneOpen = useIsHistoryPaneOpen();\n  const isFetchingHistory = useGetIsFetchingHistory();\n  const historyFilter = useGetHistoryFilter();\n  const currentEpoch = useGetCurrentEpoch();\n  const {\n    t\n  } = useTranslation();\n  const bets = useGetHistoryByAccount(account);\n  const [activeTab, setActiveTab] = useState(HistoryTabs.ROUNDS);\n  useEffect(() => {\n    if (account && isHistoryPaneOpen) {\n      dispatch(fetchHistory({\n        account\n      }));\n    }\n  }, [account, currentEpoch, isHistoryPaneOpen, dispatch]);\n\n  // Currently the api cannot filter by unclaimed AND won so we do it here\n  // when the user has selected Uncollected only include positions they won\n  const results = historyFilter === HistoryFilter.UNCOLLECTED ? getUnclaimedWinningBets(bets) : bets;\n  const hasBetHistory = results && results.length > 0;\n  let activeTabComponent = null;\n  switch (activeTab) {\n    case HistoryTabs.PNL:\n      activeTabComponent = /*#__PURE__*/_jsxDEV(PnlTab, {\n        hasBetHistory: hasBetHistory,\n        bets: results\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 28\n      }, this);\n      break;\n    case HistoryTabs.ROUNDS:\n    default:\n      activeTabComponent = /*#__PURE__*/_jsxDEV(RoundsTab, {\n        hasBetHistory: hasBetHistory,\n        bets: results\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 28\n      }, this);\n      break;\n  }\n  if (!account) {\n    activeTabComponent = /*#__PURE__*/_jsxDEV(Flex, {\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      flexDirection: \"column\",\n      mt: \"32px\",\n      children: [/*#__PURE__*/_jsxDEV(ConnectWalletButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        mt: \"8px\",\n        children: t('Connect your wallet to view your prediction history')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(StyledHistory, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      activeTab: activeTab,\n      setActiveTab: setActiveTab\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BetWrapper, {\n      children: isFetchingHistory ? /*#__PURE__*/_jsxDEV(SpinnerWrapper, {\n        children: /*#__PURE__*/_jsxDEV(Spinner, {\n          size: 72\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this) : activeTabComponent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n_s(History, \"dP1/17/b/GVlch+QjueWdutWqs0=\", false, function () {\n  return [useWeb3React, useAppDispatch, useIsHistoryPaneOpen, useGetIsFetchingHistory, useGetHistoryFilter, useGetCurrentEpoch, useTranslation, useGetHistoryByAccount];\n});\n_c4 = History;\nexport default History;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"StyledHistory\");\n$RefreshReg$(_c2, \"BetWrapper\");\n$RefreshReg$(_c3, \"SpinnerWrapper\");\n$RefreshReg$(_c4, \"History\");","map":{"version":3,"names":["React","useEffect","useState","Flex","Spinner","Text","useWeb3React","styled","ConnectWalletButton","useTranslation","fetchHistory","getUnclaimedWinningBets","HistoryFilter","useAppDispatch","useGetCurrentEpoch","useGetHistoryByAccount","useGetHistoryFilter","useGetIsFetchingHistory","useIsHistoryPaneOpen","Header","HistoryTabs","RoundsTab","PnlTab","jsxDEV","_jsxDEV","StyledHistory","div","theme","card","background","_c","BetWrapper","_c2","SpinnerWrapper","_c3","History","_s","account","dispatch","isHistoryPaneOpen","isFetchingHistory","historyFilter","currentEpoch","t","bets","activeTab","setActiveTab","ROUNDS","results","UNCOLLECTED","hasBetHistory","length","activeTabComponent","PNL","fileName","_jsxFileName","lineNumber","columnNumber","justifyContent","alignItems","flexDirection","mt","children","size","_c4","$RefreshReg$"],"sources":["C:/Users/Devrim/Documents/swapUIforProspBlast/src/views/Predictions/History.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { Flex, Spinner, Text } from '@pancakeswap/uikit'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport styled from 'styled-components'\r\nimport ConnectWalletButton from 'components/ConnectWalletButton'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { fetchHistory } from 'state/predictions'\r\nimport { getUnclaimedWinningBets } from 'state/predictions/helpers'\r\nimport { HistoryFilter } from 'state/types'\r\nimport { useAppDispatch } from 'state'\r\nimport {\r\n  useGetCurrentEpoch,\r\n  useGetHistoryByAccount,\r\n  useGetHistoryFilter,\r\n  useGetIsFetchingHistory,\r\n  useIsHistoryPaneOpen,\r\n} from 'state/hooks'\r\nimport { Header, HistoryTabs } from './components/History'\r\nimport RoundsTab from './components/History/RoundsTab'\r\nimport PnlTab from './components/History/PnlTab/PnlTab'\r\n\r\nconst StyledHistory = styled.div`\r\n  background-color: ${({ theme }) => theme.card.background};\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n`\r\n\r\nconst BetWrapper = styled.div`\r\n  flex: 1;\r\n  height: 100%;\r\n  overflow-y: auto;\r\n  position: relative;\r\n`\r\n\r\nconst SpinnerWrapper = styled.div`\r\n  align-items: center;\r\n  background-color: ${({ theme }) => theme.card.background};\r\n  display: flex;\r\n  left: 0;\r\n  height: 100%;\r\n  justify-content: center;\r\n  position: absolute;\r\n  top: 0;\r\n  width: 100%;\r\n`\r\n\r\nconst History = () => {\r\n  const { account } = useWeb3React()\r\n  const dispatch = useAppDispatch()\r\n  const isHistoryPaneOpen = useIsHistoryPaneOpen()\r\n  const isFetchingHistory = useGetIsFetchingHistory()\r\n  const historyFilter = useGetHistoryFilter()\r\n  const currentEpoch = useGetCurrentEpoch()\r\n  const { t } = useTranslation()\r\n  const bets = useGetHistoryByAccount(account)\r\n  const [activeTab, setActiveTab] = useState(HistoryTabs.ROUNDS)\r\n\r\n  useEffect(() => {\r\n    if (account && isHistoryPaneOpen) {\r\n      dispatch(fetchHistory({ account }))\r\n    }\r\n  }, [account, currentEpoch, isHistoryPaneOpen, dispatch])\r\n\r\n  // Currently the api cannot filter by unclaimed AND won so we do it here\r\n  // when the user has selected Uncollected only include positions they won\r\n  const results = historyFilter === HistoryFilter.UNCOLLECTED ? getUnclaimedWinningBets(bets) : bets\r\n\r\n  const hasBetHistory = results && results.length > 0\r\n\r\n  let activeTabComponent = null\r\n\r\n  switch (activeTab) {\r\n    case HistoryTabs.PNL:\r\n      activeTabComponent = <PnlTab hasBetHistory={hasBetHistory} bets={results} />\r\n      break\r\n    case HistoryTabs.ROUNDS:\r\n    default:\r\n      activeTabComponent = <RoundsTab hasBetHistory={hasBetHistory} bets={results} />\r\n      break\r\n  }\r\n\r\n  if (!account) {\r\n    activeTabComponent = (\r\n      <Flex justifyContent=\"center\" alignItems=\"center\" flexDirection=\"column\" mt=\"32px\">\r\n        <ConnectWalletButton />\r\n        <Text mt=\"8px\">{t('Connect your wallet to view your prediction history')}</Text>\r\n      </Flex>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <StyledHistory>\r\n      <Header activeTab={activeTab} setActiveTab={setActiveTab} />\r\n      <BetWrapper>\r\n        {isFetchingHistory ? (\r\n          <SpinnerWrapper>\r\n            <Spinner size={72} />\r\n          </SpinnerWrapper>\r\n        ) : (\r\n          activeTabComponent\r\n        )}\r\n      </BetWrapper>\r\n    </StyledHistory>\r\n  )\r\n}\r\n\r\nexport default History\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}