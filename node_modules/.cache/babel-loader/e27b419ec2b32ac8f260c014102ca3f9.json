{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\frkul\\\\Documents\\\\swapUI_pancake-frontend\\\\src\\\\views\\\\Voting\\\\components\\\\VoteDetailsModal.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Box, Flex, Modal, Button, Spinner } from '@pancakeswap/uikit';\nimport { useTranslation } from 'contexts/Localization';\nimport useTheme from 'hooks/useTheme';\nimport useGetVotingPower from '../hooks/useGetVotingPower';\nimport DetailsView from './CastVoteModal/DetailsView';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst VoteDetailsModal = ({\n  block,\n  onDismiss\n}) => {\n  _s();\n  const {\n    t\n  } = useTranslation();\n  const [modalIsOpen, setModalIsOpen] = useState(true);\n  const {\n    isLoading,\n    total,\n    cakeBalance,\n    cakeVaultBalance,\n    cakePoolBalance,\n    poolsBalance,\n    cakeBnbLpBalance\n  } = useGetVotingPower(block, modalIsOpen);\n  const {\n    theme\n  } = useTheme();\n  const handleDismiss = () => {\n    setModalIsOpen(false);\n    onDismiss();\n  };\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    title: t('Voting Power'),\n    onDismiss: handleDismiss,\n    headerBackground: theme.colors.gradients.cardHeader,\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      mb: \"24px\",\n      width: \"320px\",\n      children: isLoading ? /*#__PURE__*/_jsxDEV(Flex, {\n        height: \"450px\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Spinner, {\n          size: 80\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(DetailsView, {\n          total: total,\n          cakeBalance: cakeBalance,\n          cakeVaultBalance: cakeVaultBalance,\n          cakePoolBalance: cakePoolBalance,\n          poolsBalance: poolsBalance,\n          cakeBnbLpBalance: cakeBnbLpBalance\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: onDismiss,\n          width: \"100%\",\n          mt: \"16px\",\n          children: t('Close')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(VoteDetailsModal, \"Y6hPOshRhG4EtwVANEP/vwKGZ28=\", false, function () {\n  return [useTranslation, useGetVotingPower, useTheme];\n});\n_c = VoteDetailsModal;\nexport default VoteDetailsModal;\nvar _c;\n$RefreshReg$(_c, \"VoteDetailsModal\");","map":{"version":3,"names":["React","useState","Box","Flex","Modal","Button","Spinner","useTranslation","useTheme","useGetVotingPower","DetailsView","jsxDEV","_jsxDEV","Fragment","_Fragment","VoteDetailsModal","block","onDismiss","_s","t","modalIsOpen","setModalIsOpen","isLoading","total","cakeBalance","cakeVaultBalance","cakePoolBalance","poolsBalance","cakeBnbLpBalance","theme","handleDismiss","title","headerBackground","colors","gradients","cardHeader","children","mb","width","height","alignItems","justifyContent","size","fileName","_jsxFileName","lineNumber","columnNumber","variant","onClick","mt","_c","$RefreshReg$"],"sources":["C:/Users/frkul/Documents/swapUI_pancake-frontend/src/views/Voting/components/VoteDetailsModal.tsx"],"sourcesContent":["import React, { useState } from 'react'\r\nimport { Box, Flex, InjectedModalProps, Modal, Button, Spinner } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useTheme from 'hooks/useTheme'\r\nimport useGetVotingPower from '../hooks/useGetVotingPower'\r\nimport DetailsView from './CastVoteModal/DetailsView'\r\n\r\ninterface VoteDetailsModalProps extends InjectedModalProps {\r\n  block: number\r\n}\r\n\r\nconst VoteDetailsModal: React.FC<VoteDetailsModalProps> = ({ block, onDismiss }) => {\r\n  const { t } = useTranslation()\r\n  const [modalIsOpen, setModalIsOpen] = useState(true)\r\n  const { isLoading, total, cakeBalance, cakeVaultBalance, cakePoolBalance, poolsBalance, cakeBnbLpBalance } =\r\n    useGetVotingPower(block, modalIsOpen)\r\n  const { theme } = useTheme()\r\n\r\n  const handleDismiss = () => {\r\n    setModalIsOpen(false)\r\n    onDismiss()\r\n  }\r\n\r\n  return (\r\n    <Modal title={t('Voting Power')} onDismiss={handleDismiss} headerBackground={theme.colors.gradients.cardHeader}>\r\n      <Box mb=\"24px\" width=\"320px\">\r\n        {isLoading ? (\r\n          <Flex height=\"450px\" alignItems=\"center\" justifyContent=\"center\">\r\n            <Spinner size={80} />\r\n          </Flex>\r\n        ) : (\r\n          <>\r\n            <DetailsView\r\n              total={total}\r\n              cakeBalance={cakeBalance}\r\n              cakeVaultBalance={cakeVaultBalance}\r\n              cakePoolBalance={cakePoolBalance}\r\n              poolsBalance={poolsBalance}\r\n              cakeBnbLpBalance={cakeBnbLpBalance}\r\n            />\r\n            <Button variant=\"secondary\" onClick={onDismiss} width=\"100%\" mt=\"16px\">\r\n              {t('Close')}\r\n            </Button>\r\n          </>\r\n        )}\r\n      </Box>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default VoteDetailsModal\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,GAAG,EAAEC,IAAI,EAAsBC,KAAK,EAAEC,MAAM,EAAEC,OAAO,QAAQ,oBAAoB;AAC1F,SAASC,cAAc,QAAQ,uBAAuB;AACtD,OAAOC,QAAQ,MAAM,gBAAgB;AACrC,OAAOC,iBAAiB,MAAM,4BAA4B;AAC1D,OAAOC,WAAW,MAAM,6BAA6B;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAMrD,MAAMC,gBAAiD,GAAGA,CAAC;EAAEC,KAAK;EAAEC;AAAU,CAAC,KAAK;EAAAC,EAAA;EAClF,MAAM;IAAEC;EAAE,CAAC,GAAGZ,cAAc,CAAC,CAAC;EAC9B,MAAM,CAACa,WAAW,EAAEC,cAAc,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM;IAAEqB,SAAS;IAAEC,KAAK;IAAEC,WAAW;IAAEC,gBAAgB;IAAEC,eAAe;IAAEC,YAAY;IAAEC;EAAiB,CAAC,GACxGnB,iBAAiB,CAACO,KAAK,EAAEI,WAAW,CAAC;EACvC,MAAM;IAAES;EAAM,CAAC,GAAGrB,QAAQ,CAAC,CAAC;EAE5B,MAAMsB,aAAa,GAAGA,CAAA,KAAM;IAC1BT,cAAc,CAAC,KAAK,CAAC;IACrBJ,SAAS,CAAC,CAAC;EACb,CAAC;EAED,oBACEL,OAAA,CAACR,KAAK;IAAC2B,KAAK,EAAEZ,CAAC,CAAC,cAAc,CAAE;IAACF,SAAS,EAAEa,aAAc;IAACE,gBAAgB,EAAEH,KAAK,CAACI,MAAM,CAACC,SAAS,CAACC,UAAW;IAAAC,QAAA,eAC7GxB,OAAA,CAACV,GAAG;MAACmC,EAAE,EAAC,MAAM;MAACC,KAAK,EAAC,OAAO;MAAAF,QAAA,EACzBd,SAAS,gBACRV,OAAA,CAACT,IAAI;QAACoC,MAAM,EAAC,OAAO;QAACC,UAAU,EAAC,QAAQ;QAACC,cAAc,EAAC,QAAQ;QAAAL,QAAA,eAC9DxB,OAAA,CAACN,OAAO;UAACoC,IAAI,EAAE;QAAG;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjB,CAAC,gBAEPlC,OAAA,CAAAE,SAAA;QAAAsB,QAAA,gBACExB,OAAA,CAACF,WAAW;UACVa,KAAK,EAAEA,KAAM;UACbC,WAAW,EAAEA,WAAY;UACzBC,gBAAgB,EAAEA,gBAAiB;UACnCC,eAAe,EAAEA,eAAgB;UACjCC,YAAY,EAAEA,YAAa;UAC3BC,gBAAgB,EAAEA;QAAiB;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpC,CAAC,eACFlC,OAAA,CAACP,MAAM;UAAC0C,OAAO,EAAC,WAAW;UAACC,OAAO,EAAE/B,SAAU;UAACqB,KAAK,EAAC,MAAM;UAACW,EAAE,EAAC,MAAM;UAAAb,QAAA,EACnEjB,CAAC,CAAC,OAAO;QAAC;UAAAwB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC;MAAA,eACT;IACH;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEZ,CAAC;AAAA5B,EAAA,CArCKH,gBAAiD;EAAA,QACvCR,cAAc,EAG1BE,iBAAiB,EACDD,QAAQ;AAAA;AAAA0C,EAAA,GALtBnC,gBAAiD;AAuCvD,eAAeA,gBAAgB;AAAA,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}