{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\frkul\\\\Documents\\\\swapUI_pancake-frontend\\\\src\\\\views\\\\Lottery\\\\components\\\\BuyTicketsModal\\\\BuyTicketsModal.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useMemo, useCallback } from 'react';\nimport styled from 'styled-components';\nimport BigNumber from 'bignumber.js';\nimport { ethers } from 'ethers';\nimport { Modal, Text, Flex, HelpIcon, BalanceInput, Ticket, useTooltip, Skeleton, Button, ArrowForwardIcon } from '@pancakeswap/uikit';\nimport { useTranslation } from 'contexts/Localization';\nimport { useWeb3React } from '@web3-react/core';\nimport { getFullDisplayBalance } from 'utils/formatBalance';\nimport { getCakeAddress } from 'utils/addressHelpers';\nimport { BIG_ZERO, ethersToBigNumber } from 'utils/bigNumber';\nimport { useAppDispatch } from 'state';\nimport { usePriceCakeBusd } from 'state/farms/hooks';\nimport { useLottery } from 'state/lottery/hooks';\nimport { fetchUserTicketsAndLotteries } from 'state/lottery';\nimport useTheme from 'hooks/useTheme';\nimport useTokenBalance, { FetchStatus } from 'hooks/useTokenBalance';\nimport useApproveConfirmTransaction from 'hooks/useApproveConfirmTransaction';\nimport { useCake, useLotteryV2Contract } from 'hooks/useContract';\nimport useToast from 'hooks/useToast';\nimport ConnectWalletButton from 'components/ConnectWalletButton';\nimport ApproveConfirmButtons, { ButtonArrangement } from 'views/Profile/components/ApproveConfirmButtons';\nimport NumTicketsToBuyButton from './NumTicketsToBuyButton';\nimport EditNumbersModal from './EditNumbersModal';\nimport { useTicketsReducer } from './useTicketsReducer';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst StyledModal = styled(Modal)`\n  min-width: 280px;\n  max-width: 320px;\n`;\n_c = StyledModal;\nconst ShortcutButtonsWrapper = styled(Flex)`\n  justify-content: space-between;\n  margin-top: 8px;\n  margin-bottom: 24px;\n  display: ${({\n  isVisible\n}) => isVisible ? 'flex' : 'none'};\n`;\n_c2 = ShortcutButtonsWrapper;\nvar BuyingStage;\n(function (BuyingStage) {\n  BuyingStage[\"BUY\"] = \"Buy\";\n  BuyingStage[\"EDIT\"] = \"Edit\";\n})(BuyingStage || (BuyingStage = {}));\nconst BuyTicketsModal = ({\n  onDismiss\n}) => {\n  _s();\n  const {\n    account\n  } = useWeb3React();\n  const {\n    t\n  } = useTranslation();\n  const {\n    theme\n  } = useTheme();\n  const {\n    maxNumberTicketsPerBuyOrClaim,\n    currentLotteryId,\n    currentRound: {\n      priceTicketInCake,\n      discountDivisor,\n      userTickets: {\n        tickets: userCurrentTickets\n      }\n    }\n  } = useLottery();\n  const [ticketsToBuy, setTicketsToBuy] = useState('');\n  const [discountValue, setDiscountValue] = useState('');\n  const [totalCost, setTotalCost] = useState('');\n  const [ticketCostBeforeDiscount, setTicketCostBeforeDiscount] = useState('');\n  const [buyingStage, setBuyingStage] = useState(BuyingStage.BUY);\n  const [maxPossibleTicketPurchase, setMaxPossibleTicketPurchase] = useState(BIG_ZERO);\n  const [maxTicketPurchaseExceeded, setMaxTicketPurchaseExceeded] = useState(false);\n  const [userNotEnoughCake, setUserNotEnoughCake] = useState(false);\n  const lotteryContract = useLotteryV2Contract();\n  const cakeContract = useCake();\n  const {\n    toastSuccess\n  } = useToast();\n  const {\n    balance: userCake,\n    fetchStatus\n  } = useTokenBalance(getCakeAddress());\n  // balance from useTokenBalance causes rerenders in effects as a new BigNumber is instanciated on each render, hence memoising it using the stringified value below.\n  const stringifiedUserCake = userCake.toJSON();\n  const memoisedUserCake = useMemo(() => new BigNumber(stringifiedUserCake), [stringifiedUserCake]);\n  const cakePriceBusd = usePriceCakeBusd();\n  const dispatch = useAppDispatch();\n  const hasFetchedBalance = fetchStatus === FetchStatus.SUCCESS;\n  const userCakeDisplayBalance = getFullDisplayBalance(userCake, 18, 3);\n  const TooltipComponent = () => /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Text, {\n      mb: \"16px\",\n      children: t('Buying multiple tickets in a single transaction gives a discount. The discount increases in a linear way, up to the maximum of 100 tickets:')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Text, {\n      children: t('2 tickets: 0.05%')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Text, {\n      children: t('50 tickets: 2.45%')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Text, {\n      children: t('100 tickets: 4.95%')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n  const {\n    targetRef,\n    tooltip,\n    tooltipVisible\n  } = useTooltip( /*#__PURE__*/_jsxDEV(TooltipComponent, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 61\n  }, this), {\n    placement: 'bottom-end',\n    tooltipOffset: [20, 10]\n  });\n  const limitNumberByMaxTicketsPerBuy = useCallback(number => {\n    return number.gt(maxNumberTicketsPerBuyOrClaim) ? maxNumberTicketsPerBuyOrClaim : number;\n  }, [maxNumberTicketsPerBuyOrClaim]);\n  const getTicketCostAfterDiscount = useCallback(numberTickets => {\n    const totalAfterDiscount = priceTicketInCake.times(numberTickets).times(discountDivisor.plus(1).minus(numberTickets)).div(discountDivisor);\n    return totalAfterDiscount;\n  }, [discountDivisor, priceTicketInCake]);\n  const getMaxTicketBuyWithDiscount = useCallback(numberTickets => {\n    const costAfterDiscount = getTicketCostAfterDiscount(numberTickets);\n    const costBeforeDiscount = priceTicketInCake.times(numberTickets);\n    const discountAmount = costBeforeDiscount.minus(costAfterDiscount);\n    const ticketsBoughtWithDiscount = discountAmount.div(priceTicketInCake);\n    const overallTicketBuy = numberTickets.plus(ticketsBoughtWithDiscount);\n    return {\n      overallTicketBuy,\n      ticketsBoughtWithDiscount\n    };\n  }, [getTicketCostAfterDiscount, priceTicketInCake]);\n  const validateInput = useCallback(inputNumber => {\n    const limitedNumberTickets = limitNumberByMaxTicketsPerBuy(inputNumber);\n    const cakeCostAfterDiscount = getTicketCostAfterDiscount(limitedNumberTickets);\n    if (cakeCostAfterDiscount.gt(userCake)) {\n      setUserNotEnoughCake(true);\n    } else if (limitedNumberTickets.eq(maxNumberTicketsPerBuyOrClaim)) {\n      setMaxTicketPurchaseExceeded(true);\n    } else {\n      setUserNotEnoughCake(false);\n      setMaxTicketPurchaseExceeded(false);\n    }\n  }, [limitNumberByMaxTicketsPerBuy, getTicketCostAfterDiscount, maxNumberTicketsPerBuyOrClaim, userCake]);\n  useEffect(() => {\n    const getMaxPossiblePurchase = () => {\n      const maxBalancePurchase = memoisedUserCake.div(priceTicketInCake);\n      const limitedMaxPurchase = limitNumberByMaxTicketsPerBuy(maxBalancePurchase);\n      let maxPurchase;\n\n      // If the users' max CAKE balance purchase is less than the contract limit - factor the discount logic into the max number of tickets they can purchase\n      if (limitedMaxPurchase.lt(maxNumberTicketsPerBuyOrClaim)) {\n        // Get max tickets purchaseble with the users' balance, as well as using the discount to buy tickets\n        const {\n          overallTicketBuy: maxPlusDiscountTickets\n        } = getMaxTicketBuyWithDiscount(limitedMaxPurchase);\n\n        // Knowing how many tickets they can buy when counting the discount - plug that total in, and see how much that total will get discounted\n        const {\n          ticketsBoughtWithDiscount: secondTicketDiscountBuy\n        } = getMaxTicketBuyWithDiscount(maxPlusDiscountTickets);\n\n        // Add the additional tickets that can be bought with the discount, to the original max purchase\n        maxPurchase = limitedMaxPurchase.plus(secondTicketDiscountBuy);\n      } else {\n        maxPurchase = limitedMaxPurchase;\n      }\n      if (hasFetchedBalance && maxPurchase.lt(1)) {\n        setUserNotEnoughCake(true);\n      } else {\n        setUserNotEnoughCake(false);\n      }\n      setMaxPossibleTicketPurchase(maxPurchase);\n    };\n    getMaxPossiblePurchase();\n  }, [maxNumberTicketsPerBuyOrClaim, priceTicketInCake, memoisedUserCake, limitNumberByMaxTicketsPerBuy, getTicketCostAfterDiscount, getMaxTicketBuyWithDiscount, hasFetchedBalance]);\n  useEffect(() => {\n    const numberOfTicketsToBuy = new BigNumber(ticketsToBuy);\n    const costAfterDiscount = getTicketCostAfterDiscount(numberOfTicketsToBuy);\n    const costBeforeDiscount = priceTicketInCake.times(numberOfTicketsToBuy);\n    const discountBeingApplied = costBeforeDiscount.minus(costAfterDiscount);\n    setTicketCostBeforeDiscount(costBeforeDiscount.gt(0) ? getFullDisplayBalance(costBeforeDiscount) : '0');\n    setTotalCost(costAfterDiscount.gt(0) ? getFullDisplayBalance(costAfterDiscount) : '0');\n    setDiscountValue(discountBeingApplied.gt(0) ? getFullDisplayBalance(discountBeingApplied, 18, 5) : '0');\n  }, [ticketsToBuy, priceTicketInCake, discountDivisor, getTicketCostAfterDiscount]);\n  const getNumTicketsByPercentage = percentage => {\n    const percentageOfMaxTickets = maxPossibleTicketPurchase.gt(0) ? maxPossibleTicketPurchase.div(new BigNumber(100)).times(new BigNumber(percentage)) : BIG_ZERO;\n    return Math.floor(percentageOfMaxTickets.toNumber());\n  };\n  const tenPercentOfBalance = getNumTicketsByPercentage(10);\n  const twentyFivePercentOfBalance = getNumTicketsByPercentage(25);\n  const fiftyPercentOfBalance = getNumTicketsByPercentage(50);\n  const oneHundredPercentOfBalance = getNumTicketsByPercentage(100);\n  const handleInputChange = input => {\n    // Force input to integer\n    const inputAsInt = parseInt(input, 10);\n    const inputAsBN = new BigNumber(inputAsInt);\n    const limitedNumberTickets = limitNumberByMaxTicketsPerBuy(inputAsBN);\n    validateInput(inputAsBN);\n    setTicketsToBuy(inputAsInt ? limitedNumberTickets.toString() : '');\n  };\n  const handleNumberButtonClick = number => {\n    setTicketsToBuy(number.toFixed());\n    setUserNotEnoughCake(false);\n    setMaxTicketPurchaseExceeded(false);\n  };\n  const [updateTicket, randomize, tickets, allComplete, getTicketsForPurchase] = useTicketsReducer(parseInt(ticketsToBuy, 10), userCurrentTickets);\n  const {\n    isApproving,\n    isApproved,\n    isConfirmed,\n    isConfirming,\n    handleApprove,\n    handleConfirm\n  } = useApproveConfirmTransaction({\n    onRequiresApproval: async () => {\n      try {\n        const response = await cakeContract.allowance(account, lotteryContract.address);\n        const currentAllowance = ethersToBigNumber(response);\n        return currentAllowance.gt(0);\n      } catch (error) {\n        return false;\n      }\n    },\n    onApprove: () => {\n      return cakeContract.approve(lotteryContract.address, ethers.constants.MaxUint256);\n    },\n    onApproveSuccess: async () => {\n      toastSuccess(t('Contract enabled - you can now purchase tickets'));\n    },\n    onConfirm: () => {\n      const ticketsForPurchase = getTicketsForPurchase();\n      return lotteryContract.buyTickets(currentLotteryId, ticketsForPurchase);\n    },\n    onSuccess: async () => {\n      onDismiss();\n      dispatch(fetchUserTicketsAndLotteries({\n        account,\n        currentLotteryId\n      }));\n      toastSuccess(t('Lottery tickets purchased!'));\n    }\n  });\n  const getErrorMessage = () => {\n    if (userNotEnoughCake) return t('Insufficient CAKE balance');\n    return t('The maximum number of tickets you can buy in one transaction is %maxTickets%', {\n      maxTickets: maxNumberTicketsPerBuyOrClaim.toString()\n    });\n  };\n  const percentageDiscount = () => {\n    const percentageAsBn = new BigNumber(discountValue).div(new BigNumber(ticketCostBeforeDiscount)).times(100);\n    if (percentageAsBn.isNaN() || percentageAsBn.eq(0)) {\n      return 0;\n    }\n    return percentageAsBn.toNumber().toFixed(2);\n  };\n  const disableBuying = !isApproved || isConfirmed || userNotEnoughCake || !ticketsToBuy || new BigNumber(ticketsToBuy).lte(0) || getTicketsForPurchase().length !== parseInt(ticketsToBuy, 10);\n  if (buyingStage === BuyingStage.EDIT) {\n    return /*#__PURE__*/_jsxDEV(EditNumbersModal, {\n      totalCost: totalCost,\n      updateTicket: updateTicket,\n      randomize: randomize,\n      tickets: tickets,\n      allComplete: allComplete,\n      onConfirm: handleConfirm,\n      isConfirming: isConfirming,\n      onDismiss: () => setBuyingStage(BuyingStage.BUY)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(StyledModal, {\n    title: t('Buy Tickets'),\n    onDismiss: onDismiss,\n    headerBackground: theme.colors.gradients.cardHeader,\n    children: [tooltipVisible && tooltip, /*#__PURE__*/_jsxDEV(Flex, {\n      alignItems: \"center\",\n      justifyContent: \"space-between\",\n      mb: \"8px\",\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        color: \"textSubtle\",\n        children: [t('Buy'), \":\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        alignItems: \"center\",\n        minWidth: \"70px\",\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          mr: \"4px\",\n          bold: true,\n          children: t('Tickets')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Ticket, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BalanceInput, {\n      isWarning: userNotEnoughCake || maxTicketPurchaseExceeded,\n      placeholder: \"0\",\n      value: ticketsToBuy,\n      onUserInput: handleInputChange,\n      currencyValue: cakePriceBusd.gt(0) && `~${ticketsToBuy ? getFullDisplayBalance(priceTicketInCake.times(new BigNumber(ticketsToBuy))) : '0.00'} CAKE`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Flex, {\n      alignItems: \"center\",\n      justifyContent: \"flex-end\",\n      mt: \"4px\",\n      mb: \"12px\",\n      children: /*#__PURE__*/_jsxDEV(Flex, {\n        justifyContent: \"flex-end\",\n        flexDirection: \"column\",\n        children: [(userNotEnoughCake || maxTicketPurchaseExceeded) && /*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"12px\",\n          color: \"failure\",\n          children: getErrorMessage()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Flex, {\n          justifyContent: \"flex-end\",\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            fontSize: \"12px\",\n            color: \"textSubtle\",\n            mr: \"4px\",\n            children: [\"CAKE \", t('Balance'), \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 13\n          }, this), hasFetchedBalance ? /*#__PURE__*/_jsxDEV(Text, {\n            fontSize: \"12px\",\n            color: \"textSubtle\",\n            children: userCakeDisplayBalance\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(Skeleton, {\n            width: 50,\n            height: 12\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 7\n    }, this), !hasFetchedBalance ? /*#__PURE__*/_jsxDEV(Skeleton, {\n      width: \"100%\",\n      height: 20,\n      mt: \"8px\",\n      mb: \"24px\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(ShortcutButtonsWrapper, {\n      isVisible: hasFetchedBalance && oneHundredPercentOfBalance >= 1,\n      children: [tenPercentOfBalance >= 1 && /*#__PURE__*/_jsxDEV(NumTicketsToBuyButton, {\n        onClick: () => handleNumberButtonClick(tenPercentOfBalance),\n        children: hasFetchedBalance ? tenPercentOfBalance : ``\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 13\n      }, this), twentyFivePercentOfBalance >= 1 && /*#__PURE__*/_jsxDEV(NumTicketsToBuyButton, {\n        onClick: () => handleNumberButtonClick(twentyFivePercentOfBalance),\n        children: hasFetchedBalance ? twentyFivePercentOfBalance : ``\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 13\n      }, this), fiftyPercentOfBalance >= 1 && /*#__PURE__*/_jsxDEV(NumTicketsToBuyButton, {\n        onClick: () => handleNumberButtonClick(fiftyPercentOfBalance),\n        children: hasFetchedBalance ? fiftyPercentOfBalance : ``\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 13\n      }, this), oneHundredPercentOfBalance >= 1 && /*#__PURE__*/_jsxDEV(NumTicketsToBuyButton, {\n        onClick: () => handleNumberButtonClick(oneHundredPercentOfBalance),\n        children: \"MAX\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Flex, {\n      flexDirection: \"column\",\n      children: [/*#__PURE__*/_jsxDEV(Flex, {\n        mb: \"8px\",\n        justifyContent: \"space-between\",\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          color: \"textSubtle\",\n          fontSize: \"14px\",\n          children: [t('Cost'), \" (CAKE)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          color: \"textSubtle\",\n          fontSize: \"14px\",\n          children: [priceTicketInCake && getFullDisplayBalance(priceTicketInCake.times(ticketsToBuy || 0)), \" CAKE\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        mb: \"8px\",\n        justifyContent: \"space-between\",\n        children: [/*#__PURE__*/_jsxDEV(Flex, {\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            display: \"inline\",\n            bold: true,\n            fontSize: \"14px\",\n            mr: \"4px\",\n            children: [discountValue && totalCost ? percentageDiscount() : 0, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            display: \"inline\",\n            color: \"textSubtle\",\n            fontSize: \"14px\",\n            children: t('Bulk discount')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Flex, {\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            ref: targetRef,\n            children: /*#__PURE__*/_jsxDEV(HelpIcon, {\n              ml: \"4px\",\n              width: \"14px\",\n              height: \"14px\",\n              color: \"textSubtle\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 392,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"14px\",\n          color: \"textSubtle\",\n          children: [\"~\", discountValue, \" CAKE\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        borderTop: `1px solid ${theme.colors.cardBorder}`,\n        pt: \"8px\",\n        mb: \"24px\",\n        justifyContent: \"space-between\",\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          color: \"textSubtle\",\n          fontSize: \"16px\",\n          children: t('You pay')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"16px\",\n          bold: true,\n          children: [\"~\", totalCost, \" CAKE\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 9\n      }, this), account ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(ApproveConfirmButtons, {\n          isApproveDisabled: isApproved,\n          isApproving: isApproving,\n          isConfirmDisabled: disableBuying,\n          isConfirming: isConfirming,\n          onApprove: handleApprove,\n          onConfirm: handleConfirm,\n          buttonArrangement: ButtonArrangement.SEQUENTIAL,\n          confirmLabel: t('Buy Instantly')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 13\n        }, this), isApproved && /*#__PURE__*/_jsxDEV(Button, {\n          id: `lottery_buy_ins_${ticketsToBuy}`,\n          variant: \"secondary\",\n          mt: \"8px\",\n          disabled: disableBuying || isConfirming,\n          onClick: () => {\n            setBuyingStage(BuyingStage.EDIT);\n          },\n          children: /*#__PURE__*/_jsxDEV(Flex, {\n            alignItems: \"center\",\n            children: [t('View/Edit Numbers'), ' ', /*#__PURE__*/_jsxDEV(ArrowForwardIcon, {\n              mt: \"2px\",\n              color: disableBuying || isConfirming ? 'disabled' : 'primary',\n              height: \"24px\",\n              width: \"24px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 432,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 430,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(ConnectWalletButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        mt: \"24px\",\n        fontSize: \"12px\",\n        color: \"textSubtle\",\n        children: t('\"Buy Instantly\" chooses random numbers, with no duplicates among your tickets. Prices are set before each round starts, equal to $5 at that time. Purchases are final.')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 305,\n    columnNumber: 5\n  }, this);\n};\n_s(BuyTicketsModal, \"funczYmkHxOexoqU7lMfX/ASW3c=\", false, function () {\n  return [useWeb3React, useTranslation, useTheme, useLottery, useLotteryV2Contract, useCake, useToast, useTokenBalance, usePriceCakeBusd, useAppDispatch, useTooltip, useTicketsReducer, useApproveConfirmTransaction];\n});\n_c3 = BuyTicketsModal;\nexport default BuyTicketsModal;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"StyledModal\");\n$RefreshReg$(_c2, \"ShortcutButtonsWrapper\");\n$RefreshReg$(_c3, \"BuyTicketsModal\");","map":{"version":3,"names":["React","useEffect","useState","useMemo","useCallback","styled","BigNumber","ethers","Modal","Text","Flex","HelpIcon","BalanceInput","Ticket","useTooltip","Skeleton","Button","ArrowForwardIcon","useTranslation","useWeb3React","getFullDisplayBalance","getCakeAddress","BIG_ZERO","ethersToBigNumber","useAppDispatch","usePriceCakeBusd","useLottery","fetchUserTicketsAndLotteries","useTheme","useTokenBalance","FetchStatus","useApproveConfirmTransaction","useCake","useLotteryV2Contract","useToast","ConnectWalletButton","ApproveConfirmButtons","ButtonArrangement","NumTicketsToBuyButton","EditNumbersModal","useTicketsReducer","jsxDEV","_jsxDEV","Fragment","_Fragment","StyledModal","_c","ShortcutButtonsWrapper","isVisible","_c2","BuyingStage","BuyTicketsModal","onDismiss","_s","account","t","theme","maxNumberTicketsPerBuyOrClaim","currentLotteryId","currentRound","priceTicketInCake","discountDivisor","userTickets","tickets","userCurrentTickets","ticketsToBuy","setTicketsToBuy","discountValue","setDiscountValue","totalCost","setTotalCost","ticketCostBeforeDiscount","setTicketCostBeforeDiscount","buyingStage","setBuyingStage","BUY","maxPossibleTicketPurchase","setMaxPossibleTicketPurchase","maxTicketPurchaseExceeded","setMaxTicketPurchaseExceeded","userNotEnoughCake","setUserNotEnoughCake","lotteryContract","cakeContract","toastSuccess","balance","userCake","fetchStatus","stringifiedUserCake","toJSON","memoisedUserCake","cakePriceBusd","dispatch","hasFetchedBalance","SUCCESS","userCakeDisplayBalance","TooltipComponent","children","mb","fileName","_jsxFileName","lineNumber","columnNumber","targetRef","tooltip","tooltipVisible","placement","tooltipOffset","limitNumberByMaxTicketsPerBuy","number","gt","getTicketCostAfterDiscount","numberTickets","totalAfterDiscount","times","plus","minus","div","getMaxTicketBuyWithDiscount","costAfterDiscount","costBeforeDiscount","discountAmount","ticketsBoughtWithDiscount","overallTicketBuy","validateInput","inputNumber","limitedNumberTickets","cakeCostAfterDiscount","eq","getMaxPossiblePurchase","maxBalancePurchase","limitedMaxPurchase","maxPurchase","lt","maxPlusDiscountTickets","secondTicketDiscountBuy","numberOfTicketsToBuy","discountBeingApplied","getNumTicketsByPercentage","percentage","percentageOfMaxTickets","Math","floor","toNumber","tenPercentOfBalance","twentyFivePercentOfBalance","fiftyPercentOfBalance","oneHundredPercentOfBalance","handleInputChange","input","inputAsInt","parseInt","inputAsBN","toString","handleNumberButtonClick","toFixed","updateTicket","randomize","allComplete","getTicketsForPurchase","isApproving","isApproved","isConfirmed","isConfirming","handleApprove","handleConfirm","onRequiresApproval","response","allowance","address","currentAllowance","error","onApprove","approve","constants","MaxUint256","onApproveSuccess","onConfirm","ticketsForPurchase","buyTickets","onSuccess","getErrorMessage","maxTickets","percentageDiscount","percentageAsBn","isNaN","disableBuying","lte","length","EDIT","title","headerBackground","colors","gradients","cardHeader","alignItems","justifyContent","color","minWidth","mr","bold","isWarning","placeholder","value","onUserInput","currencyValue","mt","flexDirection","fontSize","width","height","onClick","display","ref","ml","borderTop","cardBorder","pt","isApproveDisabled","isConfirmDisabled","buttonArrangement","SEQUENTIAL","confirmLabel","id","variant","disabled","_c3","$RefreshReg$"],"sources":["C:/Users/frkul/Documents/swapUI_pancake-frontend/src/views/Lottery/components/BuyTicketsModal/BuyTicketsModal.tsx"],"sourcesContent":["import React, { useEffect, useState, useMemo, useCallback } from 'react'\r\nimport styled from 'styled-components'\r\nimport BigNumber from 'bignumber.js'\r\nimport { ethers } from 'ethers'\r\nimport {\r\n  Modal,\r\n  Text,\r\n  Flex,\r\n  HelpIcon,\r\n  BalanceInput,\r\n  Ticket,\r\n  useTooltip,\r\n  Skeleton,\r\n  Button,\r\n  ArrowForwardIcon,\r\n} from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { getFullDisplayBalance } from 'utils/formatBalance'\r\nimport { getCakeAddress } from 'utils/addressHelpers'\r\nimport { BIG_ZERO, ethersToBigNumber } from 'utils/bigNumber'\r\nimport { useAppDispatch } from 'state'\r\nimport { usePriceCakeBusd } from 'state/farms/hooks'\r\nimport { useLottery } from 'state/lottery/hooks'\r\nimport { fetchUserTicketsAndLotteries } from 'state/lottery'\r\nimport useTheme from 'hooks/useTheme'\r\nimport useTokenBalance, { FetchStatus } from 'hooks/useTokenBalance'\r\nimport useApproveConfirmTransaction from 'hooks/useApproveConfirmTransaction'\r\nimport { useCake, useLotteryV2Contract } from 'hooks/useContract'\r\nimport useToast from 'hooks/useToast'\r\nimport ConnectWalletButton from 'components/ConnectWalletButton'\r\nimport ApproveConfirmButtons, { ButtonArrangement } from 'views/Profile/components/ApproveConfirmButtons'\r\nimport NumTicketsToBuyButton from './NumTicketsToBuyButton'\r\nimport EditNumbersModal from './EditNumbersModal'\r\nimport { useTicketsReducer } from './useTicketsReducer'\r\n\r\nconst StyledModal = styled(Modal)`\r\n  min-width: 280px;\r\n  max-width: 320px;\r\n`\r\n\r\nconst ShortcutButtonsWrapper = styled(Flex)<{ isVisible: boolean }>`\r\n  justify-content: space-between;\r\n  margin-top: 8px;\r\n  margin-bottom: 24px;\r\n  display: ${({ isVisible }) => (isVisible ? 'flex' : 'none')};\r\n`\r\n\r\ninterface BuyTicketsModalProps {\r\n  onDismiss?: () => void\r\n}\r\n\r\nenum BuyingStage {\r\n  BUY = 'Buy',\r\n  EDIT = 'Edit',\r\n}\r\n\r\nconst BuyTicketsModal: React.FC<BuyTicketsModalProps> = ({ onDismiss }) => {\r\n  const { account } = useWeb3React()\r\n  const { t } = useTranslation()\r\n  const { theme } = useTheme()\r\n  const {\r\n    maxNumberTicketsPerBuyOrClaim,\r\n    currentLotteryId,\r\n    currentRound: {\r\n      priceTicketInCake,\r\n      discountDivisor,\r\n      userTickets: { tickets: userCurrentTickets },\r\n    },\r\n  } = useLottery()\r\n  const [ticketsToBuy, setTicketsToBuy] = useState('')\r\n  const [discountValue, setDiscountValue] = useState('')\r\n  const [totalCost, setTotalCost] = useState('')\r\n  const [ticketCostBeforeDiscount, setTicketCostBeforeDiscount] = useState('')\r\n  const [buyingStage, setBuyingStage] = useState<BuyingStage>(BuyingStage.BUY)\r\n  const [maxPossibleTicketPurchase, setMaxPossibleTicketPurchase] = useState(BIG_ZERO)\r\n  const [maxTicketPurchaseExceeded, setMaxTicketPurchaseExceeded] = useState(false)\r\n  const [userNotEnoughCake, setUserNotEnoughCake] = useState(false)\r\n  const lotteryContract = useLotteryV2Contract()\r\n  const cakeContract = useCake()\r\n  const { toastSuccess } = useToast()\r\n  const { balance: userCake, fetchStatus } = useTokenBalance(getCakeAddress())\r\n  // balance from useTokenBalance causes rerenders in effects as a new BigNumber is instanciated on each render, hence memoising it using the stringified value below.\r\n  const stringifiedUserCake = userCake.toJSON()\r\n  const memoisedUserCake = useMemo(() => new BigNumber(stringifiedUserCake), [stringifiedUserCake])\r\n\r\n  const cakePriceBusd = usePriceCakeBusd()\r\n  const dispatch = useAppDispatch()\r\n  const hasFetchedBalance = fetchStatus === FetchStatus.SUCCESS\r\n  const userCakeDisplayBalance = getFullDisplayBalance(userCake, 18, 3)\r\n\r\n  const TooltipComponent = () => (\r\n    <>\r\n      <Text mb=\"16px\">\r\n        {t(\r\n          'Buying multiple tickets in a single transaction gives a discount. The discount increases in a linear way, up to the maximum of 100 tickets:',\r\n        )}\r\n      </Text>\r\n      <Text>{t('2 tickets: 0.05%')}</Text>\r\n      <Text>{t('50 tickets: 2.45%')}</Text>\r\n      <Text>{t('100 tickets: 4.95%')}</Text>\r\n    </>\r\n  )\r\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(<TooltipComponent />, {\r\n    placement: 'bottom-end',\r\n    tooltipOffset: [20, 10],\r\n  })\r\n\r\n  const limitNumberByMaxTicketsPerBuy = useCallback(\r\n    (number: BigNumber) => {\r\n      return number.gt(maxNumberTicketsPerBuyOrClaim) ? maxNumberTicketsPerBuyOrClaim : number\r\n    },\r\n    [maxNumberTicketsPerBuyOrClaim],\r\n  )\r\n\r\n  const getTicketCostAfterDiscount = useCallback(\r\n    (numberTickets: BigNumber) => {\r\n      const totalAfterDiscount = priceTicketInCake\r\n        .times(numberTickets)\r\n        .times(discountDivisor.plus(1).minus(numberTickets))\r\n        .div(discountDivisor)\r\n      return totalAfterDiscount\r\n    },\r\n    [discountDivisor, priceTicketInCake],\r\n  )\r\n\r\n  const getMaxTicketBuyWithDiscount = useCallback(\r\n    (numberTickets: BigNumber) => {\r\n      const costAfterDiscount = getTicketCostAfterDiscount(numberTickets)\r\n      const costBeforeDiscount = priceTicketInCake.times(numberTickets)\r\n      const discountAmount = costBeforeDiscount.minus(costAfterDiscount)\r\n      const ticketsBoughtWithDiscount = discountAmount.div(priceTicketInCake)\r\n      const overallTicketBuy = numberTickets.plus(ticketsBoughtWithDiscount)\r\n      return { overallTicketBuy, ticketsBoughtWithDiscount }\r\n    },\r\n    [getTicketCostAfterDiscount, priceTicketInCake],\r\n  )\r\n\r\n  const validateInput = useCallback(\r\n    (inputNumber: BigNumber) => {\r\n      const limitedNumberTickets = limitNumberByMaxTicketsPerBuy(inputNumber)\r\n      const cakeCostAfterDiscount = getTicketCostAfterDiscount(limitedNumberTickets)\r\n\r\n      if (cakeCostAfterDiscount.gt(userCake)) {\r\n        setUserNotEnoughCake(true)\r\n      } else if (limitedNumberTickets.eq(maxNumberTicketsPerBuyOrClaim)) {\r\n        setMaxTicketPurchaseExceeded(true)\r\n      } else {\r\n        setUserNotEnoughCake(false)\r\n        setMaxTicketPurchaseExceeded(false)\r\n      }\r\n    },\r\n    [limitNumberByMaxTicketsPerBuy, getTicketCostAfterDiscount, maxNumberTicketsPerBuyOrClaim, userCake],\r\n  )\r\n\r\n  useEffect(() => {\r\n    const getMaxPossiblePurchase = () => {\r\n      const maxBalancePurchase = memoisedUserCake.div(priceTicketInCake)\r\n      const limitedMaxPurchase = limitNumberByMaxTicketsPerBuy(maxBalancePurchase)\r\n      let maxPurchase\r\n\r\n      // If the users' max CAKE balance purchase is less than the contract limit - factor the discount logic into the max number of tickets they can purchase\r\n      if (limitedMaxPurchase.lt(maxNumberTicketsPerBuyOrClaim)) {\r\n        // Get max tickets purchaseble with the users' balance, as well as using the discount to buy tickets\r\n        const { overallTicketBuy: maxPlusDiscountTickets } = getMaxTicketBuyWithDiscount(limitedMaxPurchase)\r\n\r\n        // Knowing how many tickets they can buy when counting the discount - plug that total in, and see how much that total will get discounted\r\n        const { ticketsBoughtWithDiscount: secondTicketDiscountBuy } =\r\n          getMaxTicketBuyWithDiscount(maxPlusDiscountTickets)\r\n\r\n        // Add the additional tickets that can be bought with the discount, to the original max purchase\r\n        maxPurchase = limitedMaxPurchase.plus(secondTicketDiscountBuy)\r\n      } else {\r\n        maxPurchase = limitedMaxPurchase\r\n      }\r\n\r\n      if (hasFetchedBalance && maxPurchase.lt(1)) {\r\n        setUserNotEnoughCake(true)\r\n      } else {\r\n        setUserNotEnoughCake(false)\r\n      }\r\n\r\n      setMaxPossibleTicketPurchase(maxPurchase)\r\n    }\r\n    getMaxPossiblePurchase()\r\n  }, [\r\n    maxNumberTicketsPerBuyOrClaim,\r\n    priceTicketInCake,\r\n    memoisedUserCake,\r\n    limitNumberByMaxTicketsPerBuy,\r\n    getTicketCostAfterDiscount,\r\n    getMaxTicketBuyWithDiscount,\r\n    hasFetchedBalance,\r\n  ])\r\n\r\n  useEffect(() => {\r\n    const numberOfTicketsToBuy = new BigNumber(ticketsToBuy)\r\n    const costAfterDiscount = getTicketCostAfterDiscount(numberOfTicketsToBuy)\r\n    const costBeforeDiscount = priceTicketInCake.times(numberOfTicketsToBuy)\r\n    const discountBeingApplied = costBeforeDiscount.minus(costAfterDiscount)\r\n    setTicketCostBeforeDiscount(costBeforeDiscount.gt(0) ? getFullDisplayBalance(costBeforeDiscount) : '0')\r\n    setTotalCost(costAfterDiscount.gt(0) ? getFullDisplayBalance(costAfterDiscount) : '0')\r\n    setDiscountValue(discountBeingApplied.gt(0) ? getFullDisplayBalance(discountBeingApplied, 18, 5) : '0')\r\n  }, [ticketsToBuy, priceTicketInCake, discountDivisor, getTicketCostAfterDiscount])\r\n\r\n  const getNumTicketsByPercentage = (percentage: number): number => {\r\n    const percentageOfMaxTickets = maxPossibleTicketPurchase.gt(0)\r\n      ? maxPossibleTicketPurchase.div(new BigNumber(100)).times(new BigNumber(percentage))\r\n      : BIG_ZERO\r\n    return Math.floor(percentageOfMaxTickets.toNumber())\r\n  }\r\n\r\n  const tenPercentOfBalance = getNumTicketsByPercentage(10)\r\n  const twentyFivePercentOfBalance = getNumTicketsByPercentage(25)\r\n  const fiftyPercentOfBalance = getNumTicketsByPercentage(50)\r\n  const oneHundredPercentOfBalance = getNumTicketsByPercentage(100)\r\n\r\n  const handleInputChange = (input: string) => {\r\n    // Force input to integer\r\n    const inputAsInt = parseInt(input, 10)\r\n    const inputAsBN = new BigNumber(inputAsInt)\r\n    const limitedNumberTickets = limitNumberByMaxTicketsPerBuy(inputAsBN)\r\n    validateInput(inputAsBN)\r\n    setTicketsToBuy(inputAsInt ? limitedNumberTickets.toString() : '')\r\n  }\r\n\r\n  const handleNumberButtonClick = (number: number) => {\r\n    setTicketsToBuy(number.toFixed())\r\n    setUserNotEnoughCake(false)\r\n    setMaxTicketPurchaseExceeded(false)\r\n  }\r\n\r\n  const [updateTicket, randomize, tickets, allComplete, getTicketsForPurchase] = useTicketsReducer(\r\n    parseInt(ticketsToBuy, 10),\r\n    userCurrentTickets,\r\n  )\r\n\r\n  const { isApproving, isApproved, isConfirmed, isConfirming, handleApprove, handleConfirm } =\r\n    useApproveConfirmTransaction({\r\n      onRequiresApproval: async () => {\r\n        try {\r\n          const response = await cakeContract.allowance(account, lotteryContract.address)\r\n          const currentAllowance = ethersToBigNumber(response)\r\n          return currentAllowance.gt(0)\r\n        } catch (error) {\r\n          return false\r\n        }\r\n      },\r\n      onApprove: () => {\r\n        return cakeContract.approve(lotteryContract.address, ethers.constants.MaxUint256)\r\n      },\r\n      onApproveSuccess: async () => {\r\n        toastSuccess(t('Contract enabled - you can now purchase tickets'))\r\n      },\r\n      onConfirm: () => {\r\n        const ticketsForPurchase = getTicketsForPurchase()\r\n        return lotteryContract.buyTickets(currentLotteryId, ticketsForPurchase)\r\n      },\r\n      onSuccess: async () => {\r\n        onDismiss()\r\n        dispatch(fetchUserTicketsAndLotteries({ account, currentLotteryId }))\r\n        toastSuccess(t('Lottery tickets purchased!'))\r\n      },\r\n    })\r\n\r\n  const getErrorMessage = () => {\r\n    if (userNotEnoughCake) return t('Insufficient CAKE balance')\r\n    return t('The maximum number of tickets you can buy in one transaction is %maxTickets%', {\r\n      maxTickets: maxNumberTicketsPerBuyOrClaim.toString(),\r\n    })\r\n  }\r\n\r\n  const percentageDiscount = () => {\r\n    const percentageAsBn = new BigNumber(discountValue).div(new BigNumber(ticketCostBeforeDiscount)).times(100)\r\n    if (percentageAsBn.isNaN() || percentageAsBn.eq(0)) {\r\n      return 0\r\n    }\r\n    return percentageAsBn.toNumber().toFixed(2)\r\n  }\r\n\r\n  const disableBuying =\r\n    !isApproved ||\r\n    isConfirmed ||\r\n    userNotEnoughCake ||\r\n    !ticketsToBuy ||\r\n    new BigNumber(ticketsToBuy).lte(0) ||\r\n    getTicketsForPurchase().length !== parseInt(ticketsToBuy, 10)\r\n\r\n  if (buyingStage === BuyingStage.EDIT) {\r\n    return (\r\n      <EditNumbersModal\r\n        totalCost={totalCost}\r\n        updateTicket={updateTicket}\r\n        randomize={randomize}\r\n        tickets={tickets}\r\n        allComplete={allComplete}\r\n        onConfirm={handleConfirm}\r\n        isConfirming={isConfirming}\r\n        onDismiss={() => setBuyingStage(BuyingStage.BUY)}\r\n      />\r\n    )\r\n  }\r\n\r\n  return (\r\n    <StyledModal title={t('Buy Tickets')} onDismiss={onDismiss} headerBackground={theme.colors.gradients.cardHeader}>\r\n      {tooltipVisible && tooltip}\r\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\r\n        <Text color=\"textSubtle\">{t('Buy')}:</Text>\r\n        <Flex alignItems=\"center\" minWidth=\"70px\">\r\n          <Text mr=\"4px\" bold>\r\n            {t('Tickets')}\r\n          </Text>\r\n          <Ticket />\r\n        </Flex>\r\n      </Flex>\r\n      <BalanceInput\r\n        isWarning={userNotEnoughCake || maxTicketPurchaseExceeded}\r\n        placeholder=\"0\"\r\n        value={ticketsToBuy}\r\n        onUserInput={handleInputChange}\r\n        currencyValue={\r\n          cakePriceBusd.gt(0) &&\r\n          `~${ticketsToBuy ? getFullDisplayBalance(priceTicketInCake.times(new BigNumber(ticketsToBuy))) : '0.00'} CAKE`\r\n        }\r\n      />\r\n      <Flex alignItems=\"center\" justifyContent=\"flex-end\" mt=\"4px\" mb=\"12px\">\r\n        <Flex justifyContent=\"flex-end\" flexDirection=\"column\">\r\n          {(userNotEnoughCake || maxTicketPurchaseExceeded) && (\r\n            <Text fontSize=\"12px\" color=\"failure\">\r\n              {getErrorMessage()}\r\n            </Text>\r\n          )}\r\n          <Flex justifyContent=\"flex-end\">\r\n            <Text fontSize=\"12px\" color=\"textSubtle\" mr=\"4px\">\r\n              CAKE {t('Balance')}:\r\n            </Text>\r\n            {hasFetchedBalance ? (\r\n              <Text fontSize=\"12px\" color=\"textSubtle\">\r\n                {userCakeDisplayBalance}\r\n              </Text>\r\n            ) : (\r\n              <Skeleton width={50} height={12} />\r\n            )}\r\n          </Flex>\r\n        </Flex>\r\n      </Flex>\r\n\r\n      {!hasFetchedBalance ? (\r\n        <Skeleton width=\"100%\" height={20} mt=\"8px\" mb=\"24px\" />\r\n      ) : (\r\n        <ShortcutButtonsWrapper isVisible={hasFetchedBalance && oneHundredPercentOfBalance >= 1}>\r\n          {tenPercentOfBalance >= 1 && (\r\n            <NumTicketsToBuyButton onClick={() => handleNumberButtonClick(tenPercentOfBalance)}>\r\n              {hasFetchedBalance ? tenPercentOfBalance : ``}\r\n            </NumTicketsToBuyButton>\r\n          )}\r\n          {twentyFivePercentOfBalance >= 1 && (\r\n            <NumTicketsToBuyButton onClick={() => handleNumberButtonClick(twentyFivePercentOfBalance)}>\r\n              {hasFetchedBalance ? twentyFivePercentOfBalance : ``}\r\n            </NumTicketsToBuyButton>\r\n          )}\r\n          {fiftyPercentOfBalance >= 1 && (\r\n            <NumTicketsToBuyButton onClick={() => handleNumberButtonClick(fiftyPercentOfBalance)}>\r\n              {hasFetchedBalance ? fiftyPercentOfBalance : ``}\r\n            </NumTicketsToBuyButton>\r\n          )}\r\n          {oneHundredPercentOfBalance >= 1 && (\r\n            <NumTicketsToBuyButton onClick={() => handleNumberButtonClick(oneHundredPercentOfBalance)}>\r\n              MAX\r\n            </NumTicketsToBuyButton>\r\n          )}\r\n        </ShortcutButtonsWrapper>\r\n      )}\r\n      <Flex flexDirection=\"column\">\r\n        <Flex mb=\"8px\" justifyContent=\"space-between\">\r\n          <Text color=\"textSubtle\" fontSize=\"14px\">\r\n            {t('Cost')} (CAKE)\r\n          </Text>\r\n          <Text color=\"textSubtle\" fontSize=\"14px\">\r\n            {priceTicketInCake && getFullDisplayBalance(priceTicketInCake.times(ticketsToBuy || 0))} CAKE\r\n          </Text>\r\n        </Flex>\r\n        <Flex mb=\"8px\" justifyContent=\"space-between\">\r\n          <Flex>\r\n            <Text display=\"inline\" bold fontSize=\"14px\" mr=\"4px\">\r\n              {discountValue && totalCost ? percentageDiscount() : 0}%\r\n            </Text>\r\n            <Text display=\"inline\" color=\"textSubtle\" fontSize=\"14px\">\r\n              {t('Bulk discount')}\r\n            </Text>\r\n            <Flex alignItems=\"center\" justifyContent=\"center\" ref={targetRef}>\r\n              <HelpIcon ml=\"4px\" width=\"14px\" height=\"14px\" color=\"textSubtle\" />\r\n            </Flex>\r\n          </Flex>\r\n          <Text fontSize=\"14px\" color=\"textSubtle\">\r\n            ~{discountValue} CAKE\r\n          </Text>\r\n        </Flex>\r\n        <Flex borderTop={`1px solid ${theme.colors.cardBorder}`} pt=\"8px\" mb=\"24px\" justifyContent=\"space-between\">\r\n          <Text color=\"textSubtle\" fontSize=\"16px\">\r\n            {t('You pay')}\r\n          </Text>\r\n          <Text fontSize=\"16px\" bold>\r\n            ~{totalCost} CAKE\r\n          </Text>\r\n        </Flex>\r\n\r\n        {account ? (\r\n          <>\r\n            <ApproveConfirmButtons\r\n              isApproveDisabled={isApproved}\r\n              isApproving={isApproving}\r\n              isConfirmDisabled={disableBuying}\r\n              isConfirming={isConfirming}\r\n              onApprove={handleApprove}\r\n              onConfirm={handleConfirm}\r\n              buttonArrangement={ButtonArrangement.SEQUENTIAL}\r\n              confirmLabel={t('Buy Instantly')}\r\n            />\r\n            {isApproved && (\r\n              <Button\r\n                id={`lottery_buy_ins_${ticketsToBuy}`}\r\n                variant=\"secondary\"\r\n                mt=\"8px\"\r\n                disabled={disableBuying || isConfirming}\r\n                onClick={() => {\r\n                  setBuyingStage(BuyingStage.EDIT)\r\n                }}\r\n              >\r\n                <Flex alignItems=\"center\">\r\n                  {t('View/Edit Numbers')}{' '}\r\n                  <ArrowForwardIcon\r\n                    mt=\"2px\"\r\n                    color={disableBuying || isConfirming ? 'disabled' : 'primary'}\r\n                    height=\"24px\"\r\n                    width=\"24px\"\r\n                  />\r\n                </Flex>\r\n              </Button>\r\n            )}\r\n          </>\r\n        ) : (\r\n          <ConnectWalletButton />\r\n        )}\r\n\r\n        <Text mt=\"24px\" fontSize=\"12px\" color=\"textSubtle\">\r\n          {t(\r\n            '\"Buy Instantly\" chooses random numbers, with no duplicates among your tickets. Prices are set before each round starts, equal to $5 at that time. Purchases are final.',\r\n          )}\r\n        </Text>\r\n      </Flex>\r\n    </StyledModal>\r\n  )\r\n}\r\n\r\nexport default BuyTicketsModal\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}