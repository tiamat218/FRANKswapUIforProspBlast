{"ast":null,"code":"import _taggedTemplateLiteral from\"C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject;import BigNumber from'bignumber.js';import React from'react';import styled from'styled-components';import{BIG_ZERO}from'utils/bigNumber';import{Flex,Text,Box}from'@pancakeswap/uikit';import{useTranslation}from'contexts/Localization';import{PoolCategory}from'config/constants/types';import ApprovalAction from'./ApprovalAction';import StakeActions from'./StakeActions';import HarvestActions from'./HarvestActions';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const InlineText=styled(Text)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  display: inline;\\n\"])));const CardActions=_ref=>{let{pool,stakedBalance}=_ref;const{sousId,stakingToken,earningToken,harvest,poolCategory,userData,earningTokenPrice}=pool;// Pools using native BNB behave differently than pools using a token\nconst isBnbPool=poolCategory===PoolCategory.BINANCE;const{t}=useTranslation();const allowance=(userData===null||userData===void 0?void 0:userData.allowance)?new BigNumber(userData.allowance):BIG_ZERO;const stakingTokenBalance=(userData===null||userData===void 0?void 0:userData.stakingTokenBalance)?new BigNumber(userData.stakingTokenBalance):BIG_ZERO;const earnings=(userData===null||userData===void 0?void 0:userData.pendingReward)?new BigNumber(userData.pendingReward):BIG_ZERO;const needsApproval=!allowance.gt(0)&&!isBnbPool;const isStaked=stakedBalance.gt(0);const isLoading=!userData;return/*#__PURE__*/_jsx(Flex,{flexDirection:\"column\",children:/*#__PURE__*/_jsxs(Flex,{flexDirection:\"column\",children:[harvest&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(Box,{display:\"inline\",children:[/*#__PURE__*/_jsx(InlineText,{color:\"secondary\",textTransform:\"uppercase\",bold:true,fontSize:\"12px\",children:\"\".concat(earningToken.symbol,\" \")}),/*#__PURE__*/_jsx(InlineText,{color:\"textSubtle\",textTransform:\"uppercase\",bold:true,fontSize:\"12px\",children:t('Earned')})]}),/*#__PURE__*/_jsx(HarvestActions,{earnings:earnings,earningToken:earningToken,sousId:sousId,earningTokenPrice:earningTokenPrice,isBnbPool:isBnbPool,isLoading:isLoading})]}),/*#__PURE__*/_jsxs(Box,{display:\"inline\",children:[/*#__PURE__*/_jsxs(InlineText,{color:isStaked?'secondary':'textSubtle',textTransform:\"uppercase\",bold:true,fontSize:\"12px\",children:[isStaked?stakingToken.symbol:t('Stake'),' ']}),/*#__PURE__*/_jsx(InlineText,{color:isStaked?'textSubtle':'secondary',textTransform:\"uppercase\",bold:true,fontSize:\"12px\",children:isStaked?t('Staked'):\"\".concat(stakingToken.symbol)})]}),needsApproval?/*#__PURE__*/_jsx(ApprovalAction,{pool:pool,isLoading:isLoading}):/*#__PURE__*/_jsx(StakeActions,{isLoading:isLoading,pool:pool,stakingTokenBalance:stakingTokenBalance,stakedBalance:stakedBalance,isBnbPool:isBnbPool,isStaked:isStaked})]})});};export default CardActions;","map":{"version":3,"names":["BigNumber","React","styled","BIG_ZERO","Flex","Text","Box","useTranslation","PoolCategory","ApprovalAction","StakeActions","HarvestActions","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","InlineText","_templateObject","_taggedTemplateLiteral","CardActions","_ref","pool","stakedBalance","sousId","stakingToken","earningToken","harvest","poolCategory","userData","earningTokenPrice","isBnbPool","BINANCE","t","allowance","stakingTokenBalance","earnings","pendingReward","needsApproval","gt","isStaked","isLoading","flexDirection","children","display","color","textTransform","bold","fontSize","concat","symbol"],"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/views/Pools/components/PoolCard/CardActions/index.tsx"],"sourcesContent":["import BigNumber from 'bignumber.js'\r\nimport React from 'react'\r\nimport styled from 'styled-components'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\nimport { Flex, Text, Box } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { PoolCategory } from 'config/constants/types'\r\nimport { Pool } from 'state/types'\r\nimport ApprovalAction from './ApprovalAction'\r\nimport StakeActions from './StakeActions'\r\nimport HarvestActions from './HarvestActions'\r\n\r\nconst InlineText = styled(Text)`\r\n  display: inline;\r\n`\r\n\r\ninterface CardActionsProps {\r\n  pool: Pool\r\n  stakedBalance: BigNumber\r\n}\r\n\r\nconst CardActions: React.FC<CardActionsProps> = ({ pool, stakedBalance }) => {\r\n  const { sousId, stakingToken, earningToken, harvest, poolCategory, userData, earningTokenPrice } = pool\r\n  // Pools using native BNB behave differently than pools using a token\r\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\r\n  const { t } = useTranslation()\r\n  const allowance = userData?.allowance ? new BigNumber(userData.allowance) : BIG_ZERO\r\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\r\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\r\n  const needsApproval = !allowance.gt(0) && !isBnbPool\r\n  const isStaked = stakedBalance.gt(0)\r\n  const isLoading = !userData\r\n\r\n  return (\r\n    <Flex flexDirection=\"column\">\r\n      <Flex flexDirection=\"column\">\r\n        {harvest && (\r\n          <>\r\n            <Box display=\"inline\">\r\n              <InlineText color=\"secondary\" textTransform=\"uppercase\" bold fontSize=\"12px\">\r\n                {`${earningToken.symbol} `}\r\n              </InlineText>\r\n              <InlineText color=\"textSubtle\" textTransform=\"uppercase\" bold fontSize=\"12px\">\r\n                {t('Earned')}\r\n              </InlineText>\r\n            </Box>\r\n            <HarvestActions\r\n              earnings={earnings}\r\n              earningToken={earningToken}\r\n              sousId={sousId}\r\n              earningTokenPrice={earningTokenPrice}\r\n              isBnbPool={isBnbPool}\r\n              isLoading={isLoading}\r\n            />\r\n          </>\r\n        )}\r\n        <Box display=\"inline\">\r\n          <InlineText color={isStaked ? 'secondary' : 'textSubtle'} textTransform=\"uppercase\" bold fontSize=\"12px\">\r\n            {isStaked ? stakingToken.symbol : t('Stake')}{' '}\r\n          </InlineText>\r\n          <InlineText color={isStaked ? 'textSubtle' : 'secondary'} textTransform=\"uppercase\" bold fontSize=\"12px\">\r\n            {isStaked ? t('Staked') : `${stakingToken.symbol}`}\r\n          </InlineText>\r\n        </Box>\r\n        {needsApproval ? (\r\n          <ApprovalAction pool={pool} isLoading={isLoading} />\r\n        ) : (\r\n          <StakeActions\r\n            isLoading={isLoading}\r\n            pool={pool}\r\n            stakingTokenBalance={stakingTokenBalance}\r\n            stakedBalance={stakedBalance}\r\n            isBnbPool={isBnbPool}\r\n            isStaked={isStaked}\r\n          />\r\n        )}\r\n      </Flex>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default CardActions\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}