{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Devrim\\\\Documents\\\\swapUIforProspBlast\\\\src\\\\views\\\\Predictions\\\\components\\\\History\\\\PnlTab\\\\SummaryRow.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Flex, Text } from '@pancakeswap/uikit';\nimport { useTranslation } from 'contexts/Localization';\nimport { formatBnb } from '../helpers';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst summaryTypeColors = {\n  won: 'success',\n  lost: 'failure',\n  entered: 'text'\n};\nconst summaryTypeSigns = {\n  won: '+',\n  lost: '-',\n  entered: ''\n};\nconst SummaryRow = ({\n  type,\n  summary,\n  bnbBusdPrice\n}) => {\n  _s();\n  const {\n    t\n  } = useTranslation();\n  const color = summaryTypeColors[type];\n  const {\n    rounds,\n    amount\n  } = summary[type];\n  const totalRounds = summary.entered.rounds;\n  const roundsInPercents = (rounds * 100 / totalRounds).toFixed(2);\n  const typeTranslationKey = type.charAt(0).toUpperCase() + type.slice(1);\n  const displayAmount = type === 'won' ? summary[type].payout : amount;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Text, {\n      mt: \"16px\",\n      bold: true,\n      color: \"textSubtle\",\n      children: t(typeTranslationKey)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Flex, {\n      children: [/*#__PURE__*/_jsxDEV(Flex, {\n        flex: \"2\",\n        flexDirection: \"column\",\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          bold: true,\n          fontSize: \"20px\",\n          color: color,\n          children: [rounds, \" \", t('Rounds').toLocaleLowerCase()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"12px\",\n          color: \"textSubtle\",\n          children: type === 'entered' ? t('Total').toLocaleLowerCase() : `${roundsInPercents}%`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        flex: \"3\",\n        flexDirection: \"column\",\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          bold: true,\n          fontSize: \"20px\",\n          color: color,\n          children: `${summaryTypeSigns[type]}${formatBnb(displayAmount)} BNB`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"12px\",\n          color: \"textSubtle\",\n          children: `~$${formatBnb(bnbBusdPrice.times(displayAmount).toNumber())}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(SummaryRow, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n_c = SummaryRow;\nexport default SummaryRow;\nvar _c;\n$RefreshReg$(_c, \"SummaryRow\");","map":{"version":3,"names":["React","Flex","Text","useTranslation","formatBnb","jsxDEV","_jsxDEV","Fragment","_Fragment","summaryTypeColors","won","lost","entered","summaryTypeSigns","SummaryRow","type","summary","bnbBusdPrice","_s","t","color","rounds","amount","totalRounds","roundsInPercents","toFixed","typeTranslationKey","charAt","toUpperCase","slice","displayAmount","payout","children","mt","bold","fileName","_jsxFileName","lineNumber","columnNumber","flex","flexDirection","fontSize","toLocaleLowerCase","times","toNumber","_c","$RefreshReg$"],"sources":["C:/Users/Devrim/Documents/swapUIforProspBlast/src/views/Predictions/components/History/PnlTab/SummaryRow.tsx"],"sourcesContent":["import React from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Flex, Text } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { formatBnb } from '../helpers'\r\n\r\ntype SummaryType = 'won' | 'lost' | 'entered'\r\n\r\ninterface SummaryRowProps {\r\n  type: SummaryType\r\n  summary: any\r\n  bnbBusdPrice: BigNumber\r\n}\r\n\r\nconst summaryTypeColors = {\r\n  won: 'success',\r\n  lost: 'failure',\r\n  entered: 'text',\r\n}\r\n\r\nconst summaryTypeSigns = {\r\n  won: '+',\r\n  lost: '-',\r\n  entered: '',\r\n}\r\n\r\nconst SummaryRow: React.FC<SummaryRowProps> = ({ type, summary, bnbBusdPrice }) => {\r\n  const { t } = useTranslation()\r\n\r\n  const color = summaryTypeColors[type]\r\n  const { rounds, amount } = summary[type]\r\n  const totalRounds = summary.entered.rounds\r\n  const roundsInPercents = ((rounds * 100) / totalRounds).toFixed(2)\r\n  const typeTranslationKey = type.charAt(0).toUpperCase() + type.slice(1)\r\n  const displayAmount = type === 'won' ? summary[type].payout : amount\r\n\r\n  return (\r\n    <>\r\n      <Text mt=\"16px\" bold color=\"textSubtle\">\r\n        {t(typeTranslationKey)}\r\n      </Text>\r\n      <Flex>\r\n        <Flex flex=\"2\" flexDirection=\"column\">\r\n          <Text bold fontSize=\"20px\" color={color}>\r\n            {rounds} {t('Rounds').toLocaleLowerCase()}\r\n          </Text>\r\n          <Text fontSize=\"12px\" color=\"textSubtle\">\r\n            {type === 'entered' ? t('Total').toLocaleLowerCase() : `${roundsInPercents}%`}\r\n          </Text>\r\n        </Flex>\r\n        <Flex flex=\"3\" flexDirection=\"column\">\r\n          <Text bold fontSize=\"20px\" color={color}>\r\n            {`${summaryTypeSigns[type]}${formatBnb(displayAmount)} BNB`}\r\n          </Text>\r\n          <Text fontSize=\"12px\" color=\"textSubtle\">\r\n            {`~$${formatBnb(bnbBusdPrice.times(displayAmount).toNumber())}`}\r\n          </Text>\r\n        </Flex>\r\n      </Flex>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default SummaryRow\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}