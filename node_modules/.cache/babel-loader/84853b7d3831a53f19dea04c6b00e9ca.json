{"ast":null,"code":"import merge from 'lodash/merge';\nimport teamsList from 'config/constants/teams';\nimport { getProfileContract } from 'utils/contractHelpers';\nimport { multicallv2 } from 'utils/multicall';\nimport profileABI from 'config/abi/pancakeProfile.json';\nimport { getPancakeProfileAddress } from 'utils/addressHelpers';\nconst profileContract = getProfileContract();\nexport const getTeam = async teamId => {\n  try {\n    const {\n      0: teamName,\n      2: numberUsers,\n      3: numberPoints,\n      4: isJoinable\n    } = await profileContract.getTeamProfile(teamId);\n    const staticTeamInfo = teamsList.find(staticTeam => staticTeam.id === teamId);\n    return merge({}, staticTeamInfo, {\n      isJoinable,\n      name: teamName,\n      users: numberUsers.toNumber(),\n      points: numberPoints.toNumber()\n    });\n  } catch (error) {\n    return null;\n  }\n};\n\n/**\r\n * Gets on-chain data and merges it with the existing static list of teams\r\n */\nexport const getTeams = async () => {\n  try {\n    const teamsById = teamsList.reduce((accum, team) => {\n      return {\n        ...accum,\n        [team.id]: team\n      };\n    }, {});\n    const nbTeams = await profileContract.numberTeams();\n    const calls = [];\n    for (let i = 1; i <= nbTeams; i++) {\n      calls.push({\n        address: getPancakeProfileAddress(),\n        name: 'getTeamProfile',\n        params: [i]\n      });\n    }\n    const teamData = await multicallv2(profileABI, calls);\n    const onChainTeamData = teamData.reduce((accum, team, index) => {\n      const {\n        0: teamName,\n        2: numberUsers,\n        3: numberPoints,\n        4: isJoinable\n      } = team;\n      return {\n        ...accum,\n        [index + 1]: {\n          name: teamName,\n          users: numberUsers.toNumber(),\n          points: numberPoints.toNumber(),\n          isJoinable\n        }\n      };\n    }, {});\n    return merge({}, teamsById, onChainTeamData);\n  } catch (error) {\n    return null;\n  }\n};","map":{"version":3,"names":["merge","teamsList","getProfileContract","multicallv2","profileABI","getPancakeProfileAddress","profileContract","getTeam","teamId","teamName","numberUsers","numberPoints","isJoinable","getTeamProfile","staticTeamInfo","find","staticTeam","id","name","users","toNumber","points","error","getTeams","teamsById","reduce","accum","team","nbTeams","numberTeams","calls","i","push","address","params","teamData","onChainTeamData","index"],"sources":["C:/Users/frkul/Documents/swapUI_pancake-frontend/src/state/teams/helpers.ts"],"sourcesContent":["import merge from 'lodash/merge'\r\nimport teamsList from 'config/constants/teams'\r\nimport { getProfileContract } from 'utils/contractHelpers'\r\nimport { Team } from 'config/constants/types'\r\nimport { multicallv2 } from 'utils/multicall'\r\nimport { TeamsById } from 'state/types'\r\nimport profileABI from 'config/abi/pancakeProfile.json'\r\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\r\n\r\nconst profileContract = getProfileContract()\r\n\r\nexport const getTeam = async (teamId: number): Promise<Team> => {\r\n  try {\r\n    const { 0: teamName, 2: numberUsers, 3: numberPoints, 4: isJoinable } = await profileContract.getTeamProfile(teamId)\r\n    const staticTeamInfo = teamsList.find((staticTeam) => staticTeam.id === teamId)\r\n\r\n    return merge({}, staticTeamInfo, {\r\n      isJoinable,\r\n      name: teamName,\r\n      users: numberUsers.toNumber(),\r\n      points: numberPoints.toNumber(),\r\n    })\r\n  } catch (error) {\r\n    return null\r\n  }\r\n}\r\n\r\n/**\r\n * Gets on-chain data and merges it with the existing static list of teams\r\n */\r\nexport const getTeams = async (): Promise<TeamsById> => {\r\n  try {\r\n    const teamsById = teamsList.reduce((accum, team) => {\r\n      return {\r\n        ...accum,\r\n        [team.id]: team,\r\n      }\r\n    }, {})\r\n    const nbTeams = await profileContract.numberTeams()\r\n\r\n    const calls = []\r\n    for (let i = 1; i <= nbTeams; i++) {\r\n      calls.push({\r\n        address: getPancakeProfileAddress(),\r\n        name: 'getTeamProfile',\r\n        params: [i],\r\n      })\r\n    }\r\n    const teamData = await multicallv2(profileABI, calls)\r\n\r\n    const onChainTeamData = teamData.reduce((accum, team, index) => {\r\n      const { 0: teamName, 2: numberUsers, 3: numberPoints, 4: isJoinable } = team\r\n\r\n      return {\r\n        ...accum,\r\n        [index + 1]: {\r\n          name: teamName,\r\n          users: numberUsers.toNumber(),\r\n          points: numberPoints.toNumber(),\r\n          isJoinable,\r\n        },\r\n      }\r\n    }, {})\r\n\r\n    return merge({}, teamsById, onChainTeamData)\r\n  } catch (error) {\r\n    return null\r\n  }\r\n}\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,cAAc;AAChC,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,SAASC,kBAAkB,QAAQ,uBAAuB;AAE1D,SAASC,WAAW,QAAQ,iBAAiB;AAE7C,OAAOC,UAAU,MAAM,gCAAgC;AACvD,SAASC,wBAAwB,QAAQ,sBAAsB;AAE/D,MAAMC,eAAe,GAAGJ,kBAAkB,CAAC,CAAC;AAE5C,OAAO,MAAMK,OAAO,GAAG,MAAOC,MAAc,IAAoB;EAC9D,IAAI;IACF,MAAM;MAAE,CAAC,EAAEC,QAAQ;MAAE,CAAC,EAAEC,WAAW;MAAE,CAAC,EAAEC,YAAY;MAAE,CAAC,EAAEC;IAAW,CAAC,GAAG,MAAMN,eAAe,CAACO,cAAc,CAACL,MAAM,CAAC;IACpH,MAAMM,cAAc,GAAGb,SAAS,CAACc,IAAI,CAAEC,UAAU,IAAKA,UAAU,CAACC,EAAE,KAAKT,MAAM,CAAC;IAE/E,OAAOR,KAAK,CAAC,CAAC,CAAC,EAAEc,cAAc,EAAE;MAC/BF,UAAU;MACVM,IAAI,EAAET,QAAQ;MACdU,KAAK,EAAET,WAAW,CAACU,QAAQ,CAAC,CAAC;MAC7BC,MAAM,EAAEV,YAAY,CAACS,QAAQ,CAAC;IAChC,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOE,KAAK,EAAE;IACd,OAAO,IAAI;EACb;AACF,CAAC;;AAED;AACA;AACA;AACA,OAAO,MAAMC,QAAQ,GAAG,MAAAA,CAAA,KAAgC;EACtD,IAAI;IACF,MAAMC,SAAS,GAAGvB,SAAS,CAACwB,MAAM,CAAC,CAACC,KAAK,EAAEC,IAAI,KAAK;MAClD,OAAO;QACL,GAAGD,KAAK;QACR,CAACC,IAAI,CAACV,EAAE,GAAGU;MACb,CAAC;IACH,CAAC,EAAE,CAAC,CAAC,CAAC;IACN,MAAMC,OAAO,GAAG,MAAMtB,eAAe,CAACuB,WAAW,CAAC,CAAC;IAEnD,MAAMC,KAAK,GAAG,EAAE;IAChB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIH,OAAO,EAAEG,CAAC,EAAE,EAAE;MACjCD,KAAK,CAACE,IAAI,CAAC;QACTC,OAAO,EAAE5B,wBAAwB,CAAC,CAAC;QACnCa,IAAI,EAAE,gBAAgB;QACtBgB,MAAM,EAAE,CAACH,CAAC;MACZ,CAAC,CAAC;IACJ;IACA,MAAMI,QAAQ,GAAG,MAAMhC,WAAW,CAACC,UAAU,EAAE0B,KAAK,CAAC;IAErD,MAAMM,eAAe,GAAGD,QAAQ,CAACV,MAAM,CAAC,CAACC,KAAK,EAAEC,IAAI,EAAEU,KAAK,KAAK;MAC9D,MAAM;QAAE,CAAC,EAAE5B,QAAQ;QAAE,CAAC,EAAEC,WAAW;QAAE,CAAC,EAAEC,YAAY;QAAE,CAAC,EAAEC;MAAW,CAAC,GAAGe,IAAI;MAE5E,OAAO;QACL,GAAGD,KAAK;QACR,CAACW,KAAK,GAAG,CAAC,GAAG;UACXnB,IAAI,EAAET,QAAQ;UACdU,KAAK,EAAET,WAAW,CAACU,QAAQ,CAAC,CAAC;UAC7BC,MAAM,EAAEV,YAAY,CAACS,QAAQ,CAAC,CAAC;UAC/BR;QACF;MACF,CAAC;IACH,CAAC,EAAE,CAAC,CAAC,CAAC;IAEN,OAAOZ,KAAK,CAAC,CAAC,CAAC,EAAEwB,SAAS,EAAEY,eAAe,CAAC;EAC9C,CAAC,CAAC,OAAOd,KAAK,EAAE;IACd,OAAO,IAAI;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}