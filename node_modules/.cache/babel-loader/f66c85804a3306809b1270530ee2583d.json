{"ast":null,"code":"import _taggedTemplateLiteral from\"C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2,_templateObject3,_templateObject4,_templateObject5,_templateObject6,_templateObject7;import React,{useEffect,useRef}from'react';import styled from'styled-components';import Split from'split-grid';import{ArrowDownIcon,Button,ChartIcon}from'@pancakeswap/uikit';import debounce from'lodash/debounce';import delay from'lodash/delay';import{useAppDispatch}from'state';import{useGetPredictionsStatus,useIsChartPaneOpen,useIsHistoryPaneOpen}from'state/hooks';import{setChartPaneState}from'state/predictions';import{PredictionStatus}from'state/types';import{useTranslation}from'contexts/Localization';import TradingView from'./components/TradingView';import{ErrorNotification,PauseNotification}from'./components/Notification';import History from'./History';import Positions from'./Positions';// The value to set the chart when the user clicks the chart tab at the bottom\nimport{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const GRID_TEMPLATE_ROW='1.2fr 12px .8fr';const ExpandChartButton=styled(Button)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  background-color: \",\";\\n  border-bottom-left-radius: 0;\\n  border-bottom-right-radius: 0;\\n  bottom: 12px;\\n  color: \",\";\\n  display: none;\\n  left: 32px;\\n  position: absolute;\\n  z-index: 50;\\n\\n  &:hover:not(:disabled):not(.pancake-button--disabled):not(.pancake-button--disabled):not(:active) {\\n    background-color: \",\";\\n    opacity: 1;\\n  }\\n\\n  \",\" {\\n    display: inline-flex;\\n  }\\n\"])),_ref=>{let{theme}=_ref;return theme.card.background;},_ref2=>{let{theme}=_ref2;return theme.colors.text;},_ref3=>{let{theme}=_ref3;return theme.card.background;},_ref4=>{let{theme}=_ref4;return theme.mediaQueries.lg;});const SplitWrapper=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  display: grid;\\n  grid-template-columns: 1fr;\\n  grid-template-rows: 1fr 12px 0;\\n  flex: 1;\\n  overflow: hidden;\\n\"])));const ChartPane=styled.div(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  overflow: hidden;\\n  position: relative;\\n\"])));const HistoryPane=styled.div(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n  flex: none;\\n  overflow: hidden;\\n  transition: width 200ms ease-in-out;\\n  width: \",\";\\n\"])),_ref5=>{let{isHistoryPaneOpen}=_ref5;return isHistoryPaneOpen?'384px':0;});const StyledDesktop=styled.div(_templateObject5||(_templateObject5=_taggedTemplateLiteral([\"\\n  display: none;\\n\\n  \",\" {\\n    display: flex;\\n    height: 100%;\\n  }\\n\"])),_ref6=>{let{theme}=_ref6;return theme.mediaQueries.lg;});const PositionPane=styled.div(_templateObject6||(_templateObject6=_taggedTemplateLiteral([\"\\n  align-items: center;\\n  display: flex;\\n  max-width: 100%;\\n  overflow-y: auto;\\n  overflow-x: hidden;\\n\\n  & > div {\\n    flex: 1;\\n    overflow: hidden;\\n  }\\n\"])));const Gutter=styled.div(_templateObject7||(_templateObject7=_taggedTemplateLiteral([\"\\n  background: \",\";\\n  cursor: row-resize;\\n  height: 12px;\\n  position: relative;\\n\\n  &:before {\\n    background-color: \",\";\\n    border-radius: 8px;\\n    content: '';\\n    height: 4px;\\n    left: 50%;\\n    margin-left: -32px;\\n    position: absolute;\\n    top: 4px;\\n    width: 64px;\\n  }\\n\"])),_ref7=>{let{theme}=_ref7;return theme.colors.dropdown;},_ref8=>{let{theme}=_ref8;return theme.colors.textSubtle;});const Desktop=()=>{const splitWrapperRef=useRef();const chartRef=useRef();const gutterRef=useRef();const isHistoryPaneOpen=useIsHistoryPaneOpen();const isChartPaneOpen=useIsChartPaneOpen();const dispatch=useAppDispatch();const{t}=useTranslation();const status=useGetPredictionsStatus();const toggleChartPane=()=>{const newChartPaneState=!isChartPaneOpen;if(newChartPaneState){splitWrapperRef.current.style.transition='grid-template-rows 150ms';splitWrapperRef.current.style.gridTemplateRows=GRID_TEMPLATE_ROW;// Purely comedic: We only want to animate if we are clicking the open chart button\n// If we keep the transition on the resizing becomes very choppy\ndelay(()=>{splitWrapperRef.current.style.transition='';},150);}dispatch(setChartPaneState(newChartPaneState));};useEffect(()=>{const threshold=100;const handleDrag=debounce(()=>{const{height}=chartRef.current.getBoundingClientRect();// If the height of the chart pane goes below the \"snapOffset\" threshold mark the chart pane as closed\ndispatch(setChartPaneState(height>threshold));},50);const split=Split({dragInterval:1,snapOffset:threshold,onDrag:handleDrag,rowGutters:[{track:1,element:gutterRef.current}]});return()=>{split.destroy();};},[gutterRef,chartRef,dispatch]);return/*#__PURE__*/_jsxs(_Fragment,{children:[!isChartPaneOpen&&/*#__PURE__*/_jsx(ExpandChartButton,{variant:\"tertiary\",scale:\"sm\",startIcon:isChartPaneOpen?/*#__PURE__*/_jsx(ArrowDownIcon,{}):/*#__PURE__*/_jsx(ChartIcon,{}),onClick:toggleChartPane,children:isChartPaneOpen?t('Close'):t('Charts')}),/*#__PURE__*/_jsxs(StyledDesktop,{children:[/*#__PURE__*/_jsxs(SplitWrapper,{ref:splitWrapperRef,children:[/*#__PURE__*/_jsxs(PositionPane,{children:[status===PredictionStatus.ERROR&&/*#__PURE__*/_jsx(ErrorNotification,{}),status===PredictionStatus.PAUSED&&/*#__PURE__*/_jsx(PauseNotification,{}),status===PredictionStatus.LIVE&&/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Positions,{})})]}),/*#__PURE__*/_jsx(Gutter,{ref:gutterRef}),/*#__PURE__*/_jsx(ChartPane,{ref:chartRef,children:/*#__PURE__*/_jsx(TradingView,{})})]}),/*#__PURE__*/_jsx(HistoryPane,{isHistoryPaneOpen:isHistoryPaneOpen,children:/*#__PURE__*/_jsx(History,{})})]})]});};export default Desktop;","map":{"version":3,"names":["React","useEffect","useRef","styled","Split","ArrowDownIcon","Button","ChartIcon","debounce","delay","useAppDispatch","useGetPredictionsStatus","useIsChartPaneOpen","useIsHistoryPaneOpen","setChartPaneState","PredictionStatus","useTranslation","TradingView","ErrorNotification","PauseNotification","History","Positions","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","GRID_TEMPLATE_ROW","ExpandChartButton","_templateObject","_taggedTemplateLiteral","_ref","theme","card","background","_ref2","colors","text","_ref3","_ref4","mediaQueries","lg","SplitWrapper","div","_templateObject2","ChartPane","_templateObject3","HistoryPane","_templateObject4","_ref5","isHistoryPaneOpen","StyledDesktop","_templateObject5","_ref6","PositionPane","_templateObject6","Gutter","_templateObject7","_ref7","dropdown","_ref8","textSubtle","Desktop","splitWrapperRef","chartRef","gutterRef","isChartPaneOpen","dispatch","t","status","toggleChartPane","newChartPaneState","current","style","transition","gridTemplateRows","threshold","handleDrag","height","getBoundingClientRect","split","dragInterval","snapOffset","onDrag","rowGutters","track","element","destroy","children","variant","scale","startIcon","onClick","ref","ERROR","PAUSED","LIVE"],"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/views/Predictions/Desktop.tsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react'\r\nimport styled from 'styled-components'\r\nimport Split from 'split-grid'\r\nimport { ArrowDownIcon, Button, ChartIcon } from '@pancakeswap/uikit'\r\nimport debounce from 'lodash/debounce'\r\nimport delay from 'lodash/delay'\r\nimport { useAppDispatch } from 'state'\r\nimport { useGetPredictionsStatus, useIsChartPaneOpen, useIsHistoryPaneOpen } from 'state/hooks'\r\nimport { setChartPaneState } from 'state/predictions'\r\nimport { PredictionStatus } from 'state/types'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport TradingView from './components/TradingView'\r\nimport { ErrorNotification, PauseNotification } from './components/Notification'\r\nimport History from './History'\r\nimport Positions from './Positions'\r\n\r\n// The value to set the chart when the user clicks the chart tab at the bottom\r\nconst GRID_TEMPLATE_ROW = '1.2fr 12px .8fr'\r\n\r\nconst ExpandChartButton = styled(Button)`\r\n  background-color: ${({ theme }) => theme.card.background};\r\n  border-bottom-left-radius: 0;\r\n  border-bottom-right-radius: 0;\r\n  bottom: 12px;\r\n  color: ${({ theme }) => theme.colors.text};\r\n  display: none;\r\n  left: 32px;\r\n  position: absolute;\r\n  z-index: 50;\r\n\r\n  &:hover:not(:disabled):not(.pancake-button--disabled):not(.pancake-button--disabled):not(:active) {\r\n    background-color: ${({ theme }) => theme.card.background};\r\n    opacity: 1;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    display: inline-flex;\r\n  }\r\n`\r\n\r\nconst SplitWrapper = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr;\r\n  grid-template-rows: 1fr 12px 0;\r\n  flex: 1;\r\n  overflow: hidden;\r\n`\r\n\r\nconst ChartPane = styled.div`\r\n  overflow: hidden;\r\n  position: relative;\r\n`\r\n\r\nconst HistoryPane = styled.div<{ isHistoryPaneOpen: boolean }>`\r\n  flex: none;\r\n  overflow: hidden;\r\n  transition: width 200ms ease-in-out;\r\n  width: ${({ isHistoryPaneOpen }) => (isHistoryPaneOpen ? '384px' : 0)};\r\n`\r\n\r\nconst StyledDesktop = styled.div`\r\n  display: none;\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    display: flex;\r\n    height: 100%;\r\n  }\r\n`\r\n\r\nconst PositionPane = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  max-width: 100%;\r\n  overflow-y: auto;\r\n  overflow-x: hidden;\r\n\r\n  & > div {\r\n    flex: 1;\r\n    overflow: hidden;\r\n  }\r\n`\r\n\r\nconst Gutter = styled.div`\r\n  background: ${({ theme }) => theme.colors.dropdown};\r\n  cursor: row-resize;\r\n  height: 12px;\r\n  position: relative;\r\n\r\n  &:before {\r\n    background-color: ${({ theme }) => theme.colors.textSubtle};\r\n    border-radius: 8px;\r\n    content: '';\r\n    height: 4px;\r\n    left: 50%;\r\n    margin-left: -32px;\r\n    position: absolute;\r\n    top: 4px;\r\n    width: 64px;\r\n  }\r\n`\r\n\r\nconst Desktop: React.FC = () => {\r\n  const splitWrapperRef = useRef<HTMLDivElement>()\r\n  const chartRef = useRef<HTMLDivElement>()\r\n  const gutterRef = useRef<HTMLDivElement>()\r\n  const isHistoryPaneOpen = useIsHistoryPaneOpen()\r\n  const isChartPaneOpen = useIsChartPaneOpen()\r\n  const dispatch = useAppDispatch()\r\n  const { t } = useTranslation()\r\n  const status = useGetPredictionsStatus()\r\n\r\n  const toggleChartPane = () => {\r\n    const newChartPaneState = !isChartPaneOpen\r\n\r\n    if (newChartPaneState) {\r\n      splitWrapperRef.current.style.transition = 'grid-template-rows 150ms'\r\n      splitWrapperRef.current.style.gridTemplateRows = GRID_TEMPLATE_ROW\r\n\r\n      // Purely comedic: We only want to animate if we are clicking the open chart button\r\n      // If we keep the transition on the resizing becomes very choppy\r\n      delay(() => {\r\n        splitWrapperRef.current.style.transition = ''\r\n      }, 150)\r\n    }\r\n\r\n    dispatch(setChartPaneState(newChartPaneState))\r\n  }\r\n\r\n  useEffect(() => {\r\n    const threshold = 100\r\n    const handleDrag = debounce(() => {\r\n      const { height } = chartRef.current.getBoundingClientRect()\r\n\r\n      // If the height of the chart pane goes below the \"snapOffset\" threshold mark the chart pane as closed\r\n      dispatch(setChartPaneState(height > threshold))\r\n    }, 50)\r\n\r\n    const split = Split({\r\n      dragInterval: 1,\r\n      snapOffset: threshold,\r\n      onDrag: handleDrag,\r\n      rowGutters: [\r\n        {\r\n          track: 1,\r\n          element: gutterRef.current,\r\n        },\r\n      ],\r\n    })\r\n\r\n    return () => {\r\n      split.destroy()\r\n    }\r\n  }, [gutterRef, chartRef, dispatch])\r\n\r\n  return (\r\n    <>\r\n      {!isChartPaneOpen && (\r\n        <ExpandChartButton\r\n          variant=\"tertiary\"\r\n          scale=\"sm\"\r\n          startIcon={isChartPaneOpen ? <ArrowDownIcon /> : <ChartIcon />}\r\n          onClick={toggleChartPane}\r\n        >\r\n          {isChartPaneOpen ? t('Close') : t('Charts')}\r\n        </ExpandChartButton>\r\n      )}\r\n      <StyledDesktop>\r\n        <SplitWrapper ref={splitWrapperRef}>\r\n          <PositionPane>\r\n            {status === PredictionStatus.ERROR && <ErrorNotification />}\r\n            {status === PredictionStatus.PAUSED && <PauseNotification />}\r\n            {status === PredictionStatus.LIVE && (\r\n              <div>\r\n                <Positions />\r\n              </div>\r\n            )}\r\n          </PositionPane>\r\n          <Gutter ref={gutterRef} />\r\n          <ChartPane ref={chartRef}>\r\n            <TradingView />\r\n          </ChartPane>\r\n        </SplitWrapper>\r\n        <HistoryPane isHistoryPaneOpen={isHistoryPaneOpen}>\r\n          <History />\r\n        </HistoryPane>\r\n      </StyledDesktop>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Desktop\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}