{"ast":null,"code":"const MINUTE_IN_SECONDS = 60;\nconst HOUR_IN_SECONDS = 3600;\nconst DAY_IN_SECONDS = 86400;\nconst MONTH_IN_SECONDS = 2629800;\nconst YEAR_IN_SECONDS = 31557600;\n\n/**\r\n * Format number of seconds into year, month, day, hour, minute, seconds\r\n *\r\n * @param seconds\r\n */\nconst getTimePeriods = seconds => {\n  let delta = Math.abs(seconds);\n  const timeLeft = {\n    years: 0,\n    months: 0,\n    days: 0,\n    hours: 0,\n    minutes: 0,\n    seconds: 0\n  };\n  if (delta >= YEAR_IN_SECONDS) {\n    timeLeft.years = Math.floor(delta / YEAR_IN_SECONDS);\n    delta -= timeLeft.years * YEAR_IN_SECONDS;\n  }\n  if (delta >= MONTH_IN_SECONDS) {\n    timeLeft.months = Math.floor(delta / MONTH_IN_SECONDS);\n    delta -= timeLeft.months * MONTH_IN_SECONDS;\n  }\n  if (delta >= DAY_IN_SECONDS) {\n    timeLeft.days = Math.floor(delta / DAY_IN_SECONDS);\n    delta -= timeLeft.days * DAY_IN_SECONDS;\n  }\n  if (delta >= HOUR_IN_SECONDS) {\n    timeLeft.hours = Math.floor(delta / HOUR_IN_SECONDS);\n    delta -= timeLeft.hours * HOUR_IN_SECONDS;\n  }\n  if (delta >= MINUTE_IN_SECONDS) {\n    timeLeft.minutes = Math.floor(delta / MINUTE_IN_SECONDS);\n    delta -= timeLeft.minutes * MINUTE_IN_SECONDS;\n  }\n  timeLeft.seconds = delta;\n  return timeLeft;\n};\nexport default getTimePeriods;","map":{"version":3,"names":["MINUTE_IN_SECONDS","HOUR_IN_SECONDS","DAY_IN_SECONDS","MONTH_IN_SECONDS","YEAR_IN_SECONDS","getTimePeriods","seconds","delta","Math","abs","timeLeft","years","months","days","hours","minutes","floor"],"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/utils/getTimePeriods.ts"],"sourcesContent":["const MINUTE_IN_SECONDS = 60\r\nconst HOUR_IN_SECONDS = 3600\r\nconst DAY_IN_SECONDS = 86400\r\nconst MONTH_IN_SECONDS = 2629800\r\nconst YEAR_IN_SECONDS = 31557600\r\n\r\n/**\r\n * Format number of seconds into year, month, day, hour, minute, seconds\r\n *\r\n * @param seconds\r\n */\r\nconst getTimePeriods = (seconds: number) => {\r\n  let delta = Math.abs(seconds)\r\n  const timeLeft = {\r\n    years: 0,\r\n    months: 0,\r\n    days: 0,\r\n    hours: 0,\r\n    minutes: 0,\r\n    seconds: 0,\r\n  }\r\n\r\n  if (delta >= YEAR_IN_SECONDS) {\r\n    timeLeft.years = Math.floor(delta / YEAR_IN_SECONDS)\r\n    delta -= timeLeft.years * YEAR_IN_SECONDS\r\n  }\r\n\r\n  if (delta >= MONTH_IN_SECONDS) {\r\n    timeLeft.months = Math.floor(delta / MONTH_IN_SECONDS)\r\n    delta -= timeLeft.months * MONTH_IN_SECONDS\r\n  }\r\n\r\n  if (delta >= DAY_IN_SECONDS) {\r\n    timeLeft.days = Math.floor(delta / DAY_IN_SECONDS)\r\n    delta -= timeLeft.days * DAY_IN_SECONDS\r\n  }\r\n\r\n  if (delta >= HOUR_IN_SECONDS) {\r\n    timeLeft.hours = Math.floor(delta / HOUR_IN_SECONDS)\r\n    delta -= timeLeft.hours * HOUR_IN_SECONDS\r\n  }\r\n\r\n  if (delta >= MINUTE_IN_SECONDS) {\r\n    timeLeft.minutes = Math.floor(delta / MINUTE_IN_SECONDS)\r\n    delta -= timeLeft.minutes * MINUTE_IN_SECONDS\r\n  }\r\n\r\n  timeLeft.seconds = delta\r\n\r\n  return timeLeft\r\n}\r\n\r\nexport default getTimePeriods\r\n"],"mappings":"AAAA,MAAMA,iBAAiB,GAAG,EAAE;AAC5B,MAAMC,eAAe,GAAG,IAAI;AAC5B,MAAMC,cAAc,GAAG,KAAK;AAC5B,MAAMC,gBAAgB,GAAG,OAAO;AAChC,MAAMC,eAAe,GAAG,QAAQ;;AAEhC;AACA;AACA;AACA;AACA;AACA,MAAMC,cAAc,GAAIC,OAAe,IAAK;EAC1C,IAAIC,KAAK,GAAGC,IAAI,CAACC,GAAG,CAACH,OAAO,CAAC;EAC7B,MAAMI,QAAQ,GAAG;IACfC,KAAK,EAAE,CAAC;IACRC,MAAM,EAAE,CAAC;IACTC,IAAI,EAAE,CAAC;IACPC,KAAK,EAAE,CAAC;IACRC,OAAO,EAAE,CAAC;IACVT,OAAO,EAAE;EACX,CAAC;EAED,IAAIC,KAAK,IAAIH,eAAe,EAAE;IAC5BM,QAAQ,CAACC,KAAK,GAAGH,IAAI,CAACQ,KAAK,CAACT,KAAK,GAAGH,eAAe,CAAC;IACpDG,KAAK,IAAIG,QAAQ,CAACC,KAAK,GAAGP,eAAe;EAC3C;EAEA,IAAIG,KAAK,IAAIJ,gBAAgB,EAAE;IAC7BO,QAAQ,CAACE,MAAM,GAAGJ,IAAI,CAACQ,KAAK,CAACT,KAAK,GAAGJ,gBAAgB,CAAC;IACtDI,KAAK,IAAIG,QAAQ,CAACE,MAAM,GAAGT,gBAAgB;EAC7C;EAEA,IAAII,KAAK,IAAIL,cAAc,EAAE;IAC3BQ,QAAQ,CAACG,IAAI,GAAGL,IAAI,CAACQ,KAAK,CAACT,KAAK,GAAGL,cAAc,CAAC;IAClDK,KAAK,IAAIG,QAAQ,CAACG,IAAI,GAAGX,cAAc;EACzC;EAEA,IAAIK,KAAK,IAAIN,eAAe,EAAE;IAC5BS,QAAQ,CAACI,KAAK,GAAGN,IAAI,CAACQ,KAAK,CAACT,KAAK,GAAGN,eAAe,CAAC;IACpDM,KAAK,IAAIG,QAAQ,CAACI,KAAK,GAAGb,eAAe;EAC3C;EAEA,IAAIM,KAAK,IAAIP,iBAAiB,EAAE;IAC9BU,QAAQ,CAACK,OAAO,GAAGP,IAAI,CAACQ,KAAK,CAACT,KAAK,GAAGP,iBAAiB,CAAC;IACxDO,KAAK,IAAIG,QAAQ,CAACK,OAAO,GAAGf,iBAAiB;EAC/C;EAEAU,QAAQ,CAACJ,OAAO,GAAGC,KAAK;EAExB,OAAOG,QAAQ;AACjB,CAAC;AAED,eAAeL,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module"}