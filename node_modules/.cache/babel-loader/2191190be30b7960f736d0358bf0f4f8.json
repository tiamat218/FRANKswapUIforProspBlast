{"ast":null,"code":"import{namehash}from'ethers/lib/utils';import{useMemo}from'react';import{useSingleCallResult}from'../../state/multicall/hooks';import{isAddress}from'../../utils';import isZero from'../../utils/isZero';import{useENSRegistrarContract,useENSResolverContract}from'../useContract';import useDebounce from'../useDebounce';export default function useENSName(address){var _resolverAddress$resu,_name$result$,_name$result;const debouncedAddress=useDebounce(address,200);const ensNodeArgument=useMemo(()=>{if(!debouncedAddress||!isAddress(debouncedAddress))return[undefined];try{return[namehash(\"\".concat(debouncedAddress.toLowerCase().substr(2),\".addr.reverse\"))];}catch(error){console.error('Invalid address for ENS name lookup:',error);return[undefined];}},[debouncedAddress]);const registrarContract=useENSRegistrarContract(false);const resolverAddress=useSingleCallResult(registrarContract,'resolver',ensNodeArgument);const resolverAddressResult=(_resolverAddress$resu=resolverAddress.result)===null||_resolverAddress$resu===void 0?void 0:_resolverAddress$resu[0];const resolverContract=useENSResolverContract(resolverAddressResult||undefined,false);const name=useSingleCallResult(resolverContract,'name',ensNodeArgument);const isResolverAddressValid=resolverAddressResult&&!isZero(resolverAddressResult);return{ENSName:isResolverAddressValid?(_name$result$=(_name$result=name.result)===null||_name$result===void 0?void 0:_name$result[0])!==null&&_name$result$!==void 0?_name$result$:null:null,loading:resolverAddress.loading||name.loading};}","map":{"version":3,"names":["namehash","useMemo","useSingleCallResult","isAddress","isZero","useENSRegistrarContract","useENSResolverContract","useDebounce","useENSName","address","_resolverAddress$resu","_name$result$","_name$result","debouncedAddress","ensNodeArgument","undefined","concat","toLowerCase","substr","error","console","registrarContract","resolverAddress","resolverAddressResult","result","resolverContract","name","isResolverAddressValid","ENSName","loading"],"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/hooks/ENS/useENSName.ts"],"sourcesContent":["import { namehash } from 'ethers/lib/utils'\r\nimport { useMemo } from 'react'\r\nimport { useSingleCallResult } from '../../state/multicall/hooks'\r\nimport { isAddress } from '../../utils'\r\nimport isZero from '../../utils/isZero'\r\nimport { useENSRegistrarContract, useENSResolverContract } from '../useContract'\r\nimport useDebounce from '../useDebounce'\r\n\r\nexport default function useENSName(address?: string): { ENSName: string | null; loading: boolean } {\r\n  const debouncedAddress = useDebounce(address, 200)\r\n  const ensNodeArgument = useMemo(() => {\r\n    if (!debouncedAddress || !isAddress(debouncedAddress)) return [undefined]\r\n    try {\r\n      return [namehash(`${debouncedAddress.toLowerCase().substr(2)}.addr.reverse`)]\r\n    } catch (error) {\r\n      console.error('Invalid address for ENS name lookup:', error)\r\n      return [undefined]\r\n    }\r\n  }, [debouncedAddress])\r\n\r\n  const registrarContract = useENSRegistrarContract(false)\r\n  const resolverAddress = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument)\r\n  const resolverAddressResult = resolverAddress.result?.[0]\r\n\r\n  const resolverContract = useENSResolverContract(resolverAddressResult || undefined, false)\r\n  const name = useSingleCallResult(resolverContract, 'name', ensNodeArgument)\r\n\r\n  const isResolverAddressValid = resolverAddressResult && !isZero(resolverAddressResult)\r\n\r\n  return {\r\n    ENSName: isResolverAddressValid ? name.result?.[0] ?? null : null,\r\n    loading: resolverAddress.loading || name.loading,\r\n  }\r\n}\r\n"],"mappings":"AAAA,OAASA,QAAQ,KAAQ,kBAAkB,CAC3C,OAASC,OAAO,KAAQ,OAAO,CAC/B,OAASC,mBAAmB,KAAQ,6BAA6B,CACjE,OAASC,SAAS,KAAQ,aAAa,CACvC,MAAO,CAAAC,MAAM,KAAM,oBAAoB,CACvC,OAASC,uBAAuB,CAAEC,sBAAsB,KAAQ,gBAAgB,CAChF,MAAO,CAAAC,WAAW,KAAM,gBAAgB,CAExC,cAAe,SAAS,CAAAC,UAAUA,CAACC,OAAgB,CAAgD,KAAAC,qBAAA,CAAAC,aAAA,CAAAC,YAAA,CACjG,KAAM,CAAAC,gBAAgB,CAAGN,WAAW,CAACE,OAAO,CAAE,GAAG,CAAC,CAClD,KAAM,CAAAK,eAAe,CAAGb,OAAO,CAAC,IAAM,CACpC,GAAI,CAACY,gBAAgB,EAAI,CAACV,SAAS,CAACU,gBAAgB,CAAC,CAAE,MAAO,CAACE,SAAS,CAAC,CACzE,GAAI,CACF,MAAO,CAACf,QAAQ,IAAAgB,MAAA,CAAIH,gBAAgB,CAACI,WAAW,CAAC,CAAC,CAACC,MAAM,CAAC,CAAC,CAAC,iBAAe,CAAC,CAAC,CAC/E,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,sCAAsC,CAAEA,KAAK,CAAC,CAC5D,MAAO,CAACJ,SAAS,CAAC,CACpB,CACF,CAAC,CAAE,CAACF,gBAAgB,CAAC,CAAC,CAEtB,KAAM,CAAAQ,iBAAiB,CAAGhB,uBAAuB,CAAC,KAAK,CAAC,CACxD,KAAM,CAAAiB,eAAe,CAAGpB,mBAAmB,CAACmB,iBAAiB,CAAE,UAAU,CAAEP,eAAe,CAAC,CAC3F,KAAM,CAAAS,qBAAqB,EAAAb,qBAAA,CAAGY,eAAe,CAACE,MAAM,UAAAd,qBAAA,iBAAtBA,qBAAA,CAAyB,CAAC,CAAC,CAEzD,KAAM,CAAAe,gBAAgB,CAAGnB,sBAAsB,CAACiB,qBAAqB,EAAIR,SAAS,CAAE,KAAK,CAAC,CAC1F,KAAM,CAAAW,IAAI,CAAGxB,mBAAmB,CAACuB,gBAAgB,CAAE,MAAM,CAAEX,eAAe,CAAC,CAE3E,KAAM,CAAAa,sBAAsB,CAAGJ,qBAAqB,EAAI,CAACnB,MAAM,CAACmB,qBAAqB,CAAC,CAEtF,MAAO,CACLK,OAAO,CAAED,sBAAsB,EAAAhB,aAAA,EAAAC,YAAA,CAAGc,IAAI,CAACF,MAAM,UAAAZ,YAAA,iBAAXA,YAAA,CAAc,CAAC,CAAC,UAAAD,aAAA,UAAAA,aAAA,CAAI,IAAI,CAAG,IAAI,CACjEkB,OAAO,CAAEP,eAAe,CAACO,OAAO,EAAIH,IAAI,CAACG,OAC3C,CAAC,CACH","ignoreList":[]},"metadata":{},"sourceType":"module"}