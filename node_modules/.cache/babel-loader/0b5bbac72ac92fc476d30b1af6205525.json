{"ast":null,"code":"var _s = $RefreshSig$();\nimport identity from 'lodash/identity';\nimport { useEffect, useState } from 'react';\nconst defaultOptions = {\n  hydrate: identity,\n  dehydrate: identity\n};\n\n/**\r\n * Same as \"useState\" but saves the value to local storage each time it changes\r\n */\nconst usePersistState = (initialValue, userOptions) => {\n  _s();\n  const {\n    localStorageKey,\n    hydrate,\n    dehydrate\n  } = {\n    ...defaultOptions,\n    ...userOptions\n  };\n  const [value, setValue] = useState(() => {\n    try {\n      const valueFromLS = localStorage.getItem(localStorageKey);\n      return valueFromLS ? hydrate(JSON.parse(valueFromLS)) : initialValue;\n    } catch (error) {\n      return initialValue;\n    }\n  });\n  useEffect(() => {\n    localStorage.setItem(localStorageKey, JSON.stringify(dehydrate(value)));\n  }, [value, localStorageKey, dehydrate]);\n  return [value, setValue];\n};\n_s(usePersistState, \"Om4B//B98GckC3PyxPFRxYJWHiE=\");\nexport default usePersistState;","map":{"version":3,"names":["identity","useEffect","useState","defaultOptions","hydrate","dehydrate","usePersistState","initialValue","userOptions","_s","localStorageKey","value","setValue","valueFromLS","localStorage","getItem","JSON","parse","error","setItem","stringify"],"sources":["C:/Users/frkul/Documents/swapUI_pancake-frontend/src/hooks/usePersistState.ts"],"sourcesContent":["import identity from 'lodash/identity'\r\nimport { useEffect, useState } from 'react'\r\n\r\ninterface UsePersistStateOptions {\r\n  localStorageKey: string\r\n  hydrate?: (value: any) => any\r\n  dehydrate?: (value: any) => any\r\n}\r\n\r\nconst defaultOptions = {\r\n  hydrate: identity,\r\n  dehydrate: identity,\r\n}\r\n\r\n/**\r\n * Same as \"useState\" but saves the value to local storage each time it changes\r\n */\r\nconst usePersistState = (initialValue: any, userOptions: UsePersistStateOptions) => {\r\n  const { localStorageKey, hydrate, dehydrate } = { ...defaultOptions, ...userOptions }\r\n  const [value, setValue] = useState(() => {\r\n    try {\r\n      const valueFromLS = localStorage.getItem(localStorageKey)\r\n\r\n      return valueFromLS ? hydrate(JSON.parse(valueFromLS)) : initialValue\r\n    } catch (error) {\r\n      return initialValue\r\n    }\r\n  })\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(localStorageKey, JSON.stringify(dehydrate(value)))\r\n  }, [value, localStorageKey, dehydrate])\r\n\r\n  return [value, setValue]\r\n}\r\n\r\nexport default usePersistState\r\n"],"mappings":";AAAA,OAAOA,QAAQ,MAAM,iBAAiB;AACtC,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAQ3C,MAAMC,cAAc,GAAG;EACrBC,OAAO,EAAEJ,QAAQ;EACjBK,SAAS,EAAEL;AACb,CAAC;;AAED;AACA;AACA;AACA,MAAMM,eAAe,GAAGA,CAACC,YAAiB,EAAEC,WAAmC,KAAK;EAAAC,EAAA;EAClF,MAAM;IAAEC,eAAe;IAAEN,OAAO;IAAEC;EAAU,CAAC,GAAG;IAAE,GAAGF,cAAc;IAAE,GAAGK;EAAY,CAAC;EACrF,MAAM,CAACG,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,MAAM;IACvC,IAAI;MACF,MAAMW,WAAW,GAAGC,YAAY,CAACC,OAAO,CAACL,eAAe,CAAC;MAEzD,OAAOG,WAAW,GAAGT,OAAO,CAACY,IAAI,CAACC,KAAK,CAACJ,WAAW,CAAC,CAAC,GAAGN,YAAY;IACtE,CAAC,CAAC,OAAOW,KAAK,EAAE;MACd,OAAOX,YAAY;IACrB;EACF,CAAC,CAAC;EAEFN,SAAS,CAAC,MAAM;IACda,YAAY,CAACK,OAAO,CAACT,eAAe,EAAEM,IAAI,CAACI,SAAS,CAACf,SAAS,CAACM,KAAK,CAAC,CAAC,CAAC;EACzE,CAAC,EAAE,CAACA,KAAK,EAAED,eAAe,EAAEL,SAAS,CAAC,CAAC;EAEvC,OAAO,CAACM,KAAK,EAAEC,QAAQ,CAAC;AAC1B,CAAC;AAAAH,EAAA,CAjBKH,eAAe;AAmBrB,eAAeA,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module"}