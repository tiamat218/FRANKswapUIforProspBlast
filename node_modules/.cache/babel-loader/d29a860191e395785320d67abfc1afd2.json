{"ast":null,"code":"import React from'react';import{useTranslation}from'contexts/Localization';import{Card,CardBody,CardHeader,Text,useTooltip,HelpIcon,Flex}from'@pancakeswap/uikit';import{PoolIds}from'config/constants/types';import{useProfile}from'state/profile/hooks';import IfoCardTokens from'./IfoCardTokens';import IfoCardActions from'./IfoCardActions';import IfoCardDetails from'./IfoCardDetails';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const cardConfig={[PoolIds.poolBasic]:{title:'Basic Sale',variant:'blue',tooltip:'Every person can only commit a limited amount, but may expect a higher return per token committed.'},[PoolIds.poolUnlimited]:{title:'Unlimited Sale',variant:'violet',tooltip:'No limits on the amount you can commit. Additional fee applies when claiming.'}};const SmallCard=_ref=>{let{poolId,ifo,publicIfoData,walletIfoData,onApprove,enableStatus}=_ref;const{t}=useTranslation();const config=cardConfig[poolId];const{hasProfile,isLoading:isProfileLoading}=useProfile();const{targetRef,tooltip,tooltipVisible}=useTooltip(t(config.tooltip),{placement:'bottom'});const isLoading=isProfileLoading||publicIfoData.status==='idle';return/*#__PURE__*/_jsxs(_Fragment,{children:[tooltipVisible&&tooltip,/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(CardHeader,{variant:config.variant,children:/*#__PURE__*/_jsxs(Flex,{justifyContent:\"space-between\",alignItems:\"center\",children:[/*#__PURE__*/_jsx(Text,{bold:true,fontSize:\"20px\",children:t(config.title)}),/*#__PURE__*/_jsx(\"div\",{ref:targetRef,children:/*#__PURE__*/_jsx(HelpIcon,{})})]})}),/*#__PURE__*/_jsxs(CardBody,{children:[/*#__PURE__*/_jsx(IfoCardTokens,{poolId:poolId,ifo:ifo,publicIfoData:publicIfoData,walletIfoData:walletIfoData,hasProfile:hasProfile,isLoading:isLoading,onApprove:onApprove,enableStatus:enableStatus}),/*#__PURE__*/_jsx(IfoCardActions,{poolId:poolId,ifo:ifo,publicIfoData:publicIfoData,walletIfoData:walletIfoData,hasProfile:hasProfile,isLoading:isLoading}),/*#__PURE__*/_jsx(IfoCardDetails,{poolId:poolId,ifo:ifo,publicIfoData:publicIfoData})]})]})]});};export default SmallCard;","map":{"version":3,"names":["React","useTranslation","Card","CardBody","CardHeader","Text","useTooltip","HelpIcon","Flex","PoolIds","useProfile","IfoCardTokens","IfoCardActions","IfoCardDetails","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","cardConfig","poolBasic","title","variant","tooltip","poolUnlimited","SmallCard","_ref","poolId","ifo","publicIfoData","walletIfoData","onApprove","enableStatus","t","config","hasProfile","isLoading","isProfileLoading","targetRef","tooltipVisible","placement","status","children","justifyContent","alignItems","bold","fontSize","ref"],"sources":["C:/Users/frkul/Documents/swapUI_pancake-frontend/src/views/Ifos/components/IfoFoldableCard/IfoPoolCard/index.tsx"],"sourcesContent":["import React from 'react'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { Card, CardBody, CardHeader, Text, useTooltip, HelpIcon, Flex } from '@pancakeswap/uikit'\r\nimport { Ifo, PoolIds } from 'config/constants/types'\r\nimport { useProfile } from 'state/profile/hooks'\r\nimport { PublicIfoData, WalletIfoData } from 'views/Ifos/types'\r\nimport { EnableStatus } from '../types'\r\nimport IfoCardTokens from './IfoCardTokens'\r\nimport IfoCardActions from './IfoCardActions'\r\nimport IfoCardDetails from './IfoCardDetails'\r\n\r\ninterface IfoCardProps {\r\n  poolId: PoolIds\r\n  ifo: Ifo\r\n  publicIfoData: PublicIfoData\r\n  walletIfoData: WalletIfoData\r\n  onApprove: () => Promise<any>\r\n  enableStatus: EnableStatus\r\n}\r\n\r\ninterface CardConfig {\r\n  [key: string]: {\r\n    title: string\r\n    variant: 'blue' | 'violet'\r\n    tooltip: string\r\n  }\r\n}\r\n\r\nconst cardConfig: CardConfig = {\r\n  [PoolIds.poolBasic]: {\r\n    title: 'Basic Sale',\r\n    variant: 'blue',\r\n    tooltip: 'Every person can only commit a limited amount, but may expect a higher return per token committed.',\r\n  },\r\n  [PoolIds.poolUnlimited]: {\r\n    title: 'Unlimited Sale',\r\n    variant: 'violet',\r\n    tooltip: 'No limits on the amount you can commit. Additional fee applies when claiming.',\r\n  },\r\n}\r\n\r\nconst SmallCard: React.FC<IfoCardProps> = ({ poolId, ifo, publicIfoData, walletIfoData, onApprove, enableStatus }) => {\r\n  const { t } = useTranslation()\r\n  const config = cardConfig[poolId]\r\n  const { hasProfile, isLoading: isProfileLoading } = useProfile()\r\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(t(config.tooltip), { placement: 'bottom' })\r\n\r\n  const isLoading = isProfileLoading || publicIfoData.status === 'idle'\r\n\r\n  return (\r\n    <>\r\n      {tooltipVisible && tooltip}\r\n      <Card>\r\n        <CardHeader variant={config.variant}>\r\n          <Flex justifyContent=\"space-between\" alignItems=\"center\">\r\n            <Text bold fontSize=\"20px\">\r\n              {t(config.title)}\r\n            </Text>\r\n            <div ref={targetRef}>\r\n              <HelpIcon />\r\n            </div>\r\n          </Flex>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <IfoCardTokens\r\n            poolId={poolId}\r\n            ifo={ifo}\r\n            publicIfoData={publicIfoData}\r\n            walletIfoData={walletIfoData}\r\n            hasProfile={hasProfile}\r\n            isLoading={isLoading}\r\n            onApprove={onApprove}\r\n            enableStatus={enableStatus}\r\n          />\r\n          <IfoCardActions\r\n            poolId={poolId}\r\n            ifo={ifo}\r\n            publicIfoData={publicIfoData}\r\n            walletIfoData={walletIfoData}\r\n            hasProfile={hasProfile}\r\n            isLoading={isLoading}\r\n          />\r\n          <IfoCardDetails poolId={poolId} ifo={ifo} publicIfoData={publicIfoData} />\r\n        </CardBody>\r\n      </Card>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default SmallCard\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}