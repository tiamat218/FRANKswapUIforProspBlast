{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Devrim\\\\Documents\\\\FRANKswapUIforProspBlast\\\\src\\\\views\\\\Home\\\\components\\\\FarmStakingCard.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { Heading, Card, CardBody } from '@pancakeswap/uikit';\nimport { useWeb3React } from '@web3-react/core';\nimport { useTranslation } from 'contexts/Localization';\nimport { useMasterchef } from 'hooks/useContract';\nimport useToast from 'hooks/useToast';\nimport CakeWalletBalance from './CakeWalletBalance';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledFarmStakingCard = styled(Card)`\n  background-image: url('/images/cake-bg.svg');\n  background-repeat: no-repeat;\n  background-position: top right;\n  min-height: 376px;\n`;\n_c = StyledFarmStakingCard;\nconst Block = styled.div`\n  margin-bottom: 16px;\n`;\n_c2 = Block;\nconst CardImage = styled.img`\n  margin-bottom: 16px;\n`;\n_c3 = CardImage;\nconst Label = styled.div`\n  color: ${({\n  theme\n}) => theme.colors.textSubtle};\n  font-size: 14px;\n`;\n_c4 = Label;\nconst Actions = styled.div`\n  margin-top: 24px;\n`;\n\nconst FarmedStakingCard = () => {\n  _s();\n\n  const [pendingTx, setPendingTx] = useState(false);\n  const {\n    account\n  } = useWeb3React();\n  const {\n    t\n  } = useTranslation();\n  const {\n    toastSuccess,\n    toastError\n  } = useToast(); // const farmsWithBalance = useFarmsWithBalance()\n\n  const masterChefContract = useMasterchef(); // const balancesWithValue = farmsWithBalance.filter((balanceType) => balanceType.balance.gt(0))\n\n  return /*#__PURE__*/_jsxDEV(StyledFarmStakingCard, {\n    children: /*#__PURE__*/_jsxDEV(CardBody, {\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        scale: \"xl\",\n        mb: \"24px\",\n        children: t('Farms & Staking')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardImage, {\n        src: \"/images/cake.svg\",\n        alt: \"cake logo\",\n        width: 64,\n        height: 64\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Block, {\n        children: /*#__PURE__*/_jsxDEV(Label, {\n          children: [t('CAKE to Harvest'), \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Block, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          children: [t('CAKE in Wallet'), \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CakeWalletBalance, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FarmedStakingCard, \"FYe6mUOFo3CdzYycno0o0YAnezM=\", false, function () {\n  return [useWeb3React, useTranslation, useToast, useMasterchef];\n});\n\n_c5 = FarmedStakingCard;\nexport default FarmedStakingCard;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"StyledFarmStakingCard\");\n$RefreshReg$(_c2, \"Block\");\n$RefreshReg$(_c3, \"CardImage\");\n$RefreshReg$(_c4, \"Label\");\n$RefreshReg$(_c5, \"FarmedStakingCard\");","map":{"version":3,"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/views/Home/components/FarmStakingCard.tsx"],"names":["React","useState","styled","Heading","Card","CardBody","useWeb3React","useTranslation","useMasterchef","useToast","CakeWalletBalance","StyledFarmStakingCard","Block","div","CardImage","img","Label","theme","colors","textSubtle","Actions","FarmedStakingCard","pendingTx","setPendingTx","account","t","toastSuccess","toastError","masterChefContract"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAA6C,OAA7C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,OAAT,EAAkBC,IAAlB,EAAwBC,QAAxB,QAAgD,oBAAhD;AAEA,SAASC,YAAT,QAA6B,kBAA7B;AACA,SAASC,cAAT,QAA+B,uBAA/B;AAEA,SAASC,aAAT,QAA8B,mBAA9B;AACA,OAAOC,QAAP,MAAqB,gBAArB;AAGA,OAAOC,iBAAP,MAA8B,qBAA9B;;AAEA,MAAMC,qBAAqB,GAAGT,MAAM,CAACE,IAAD,CAAO;AAC3C;AACA;AACA;AACA;AACA,CALA;KAAMO,qB;AAON,MAAMC,KAAK,GAAGV,MAAM,CAACW,GAAI;AACzB;AACA,CAFA;MAAMD,K;AAIN,MAAME,SAAS,GAAGZ,MAAM,CAACa,GAAI;AAC7B;AACA,CAFA;MAAMD,S;AAIN,MAAME,KAAK,GAAGd,MAAM,CAACW,GAAI;AACzB,WAAW,CAAC;AAAEI,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,MAAN,CAAaC,UAAW;AAClD;AACA,CAHA;MAAMH,K;AAKN,MAAMI,OAAO,GAAGlB,MAAM,CAACW,GAAI;AAC3B;AACA,CAFA;;AAIA,MAAMQ,iBAAiB,GAAG,MAAM;AAAA;;AAC9B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BtB,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM;AAAEuB,IAAAA;AAAF,MAAclB,YAAY,EAAhC;AACA,QAAM;AAAEmB,IAAAA;AAAF,MAAQlB,cAAc,EAA5B;AACA,QAAM;AAAEmB,IAAAA,YAAF;AAAgBC,IAAAA;AAAhB,MAA+BlB,QAAQ,EAA7C,CAJ8B,CAK9B;;AACA,QAAMmB,kBAAkB,GAAGpB,aAAa,EAAxC,CAN8B,CAO9B;;AAGA,sBACE,QAAC,qBAAD;AAAA,2BACE,QAAC,QAAD;AAAA,8BACE,QAAC,OAAD;AAAS,QAAA,KAAK,EAAC,IAAf;AAAoB,QAAA,EAAE,EAAC,MAAvB;AAAA,kBACGiB,CAAC,CAAC,iBAAD;AADJ;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,SAAD;AAAW,QAAA,GAAG,EAAC,kBAAf;AAAkC,QAAA,GAAG,EAAC,WAAtC;AAAkD,QAAA,KAAK,EAAE,EAAzD;AAA6D,QAAA,MAAM,EAAE;AAArE;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE,QAAC,KAAD;AAAA,+BACE,QAAC,KAAD;AAAA,qBAAQA,CAAC,CAAC,iBAAD,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cALF,eAQE,QAAC,KAAD;AAAA,gCACE,QAAC,KAAD;AAAA,qBAAQA,CAAC,CAAC,gBAAD,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CA5BD;;GAAMJ,iB;UAEgBf,Y,EACNC,c,EACuBE,Q,EAEVD,a;;;MANvBa,iB;AA8BN,eAAeA,iBAAf","sourcesContent":["import React, { useState, useCallback } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Heading, Card, CardBody, Button } from '@pancakeswap/uikit'\r\nimport { harvestFarm } from 'utils/calls'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useFarmsWithBalance from 'views/Home/hooks/useFarmsWithBalance'\r\nimport { useMasterchef } from 'hooks/useContract'\r\nimport useToast from 'hooks/useToast'\r\nimport ConnectWalletButton from 'components/ConnectWalletButton'\r\nimport CakeHarvestBalance from './CakeHarvestBalance'\r\nimport CakeWalletBalance from './CakeWalletBalance'\r\n\r\nconst StyledFarmStakingCard = styled(Card)`\r\n  background-image: url('/images/cake-bg.svg');\r\n  background-repeat: no-repeat;\r\n  background-position: top right;\r\n  min-height: 376px;\r\n`\r\n\r\nconst Block = styled.div`\r\n  margin-bottom: 16px;\r\n`\r\n\r\nconst CardImage = styled.img`\r\n  margin-bottom: 16px;\r\n`\r\n\r\nconst Label = styled.div`\r\n  color: ${({ theme }) => theme.colors.textSubtle};\r\n  font-size: 14px;\r\n`\r\n\r\nconst Actions = styled.div`\r\n  margin-top: 24px;\r\n`\r\n\r\nconst FarmedStakingCard = () => {\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const { account } = useWeb3React()\r\n  const { t } = useTranslation()\r\n  const { toastSuccess, toastError } = useToast()\r\n  // const farmsWithBalance = useFarmsWithBalance()\r\n  const masterChefContract = useMasterchef()\r\n  // const balancesWithValue = farmsWithBalance.filter((balanceType) => balanceType.balance.gt(0))\r\n\r\n\r\n  return (\r\n    <StyledFarmStakingCard>\r\n      <CardBody>\r\n        <Heading scale=\"xl\" mb=\"24px\">\r\n          {t('Farms & Staking')}\r\n        </Heading>\r\n        <CardImage src=\"/images/cake.svg\" alt=\"cake logo\" width={64} height={64} />\r\n        <Block>\r\n          <Label>{t('CAKE to Harvest')}:</Label>\r\n        </Block>\r\n        <Block>\r\n          <Label>{t('CAKE in Wallet')}:</Label>\r\n          <CakeWalletBalance />\r\n        </Block>\r\n\r\n      </CardBody>\r\n    </StyledFarmStakingCard>\r\n  )\r\n}\r\n\r\nexport default FarmedStakingCard\r\n"]},"metadata":{},"sourceType":"module"}