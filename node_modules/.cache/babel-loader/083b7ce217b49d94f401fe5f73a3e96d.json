{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Devrim\\\\Documents\\\\FRANKswapUIforProspBlast\\\\src\\\\views\\\\Pools\\\\components\\\\PoolsTable\\\\Cells\\\\TotalStakedCell.tsx\",\n  _s = $RefreshSig$();\nimport React, { useMemo } from 'react';\nimport { Flex, Skeleton, Text } from '@pancakeswap/uikit';\nimport styled from 'styled-components';\nimport { useTranslation } from 'contexts/Localization';\nimport BigNumber from 'bignumber.js';\nimport Balance from 'components/Balance';\nimport { useCakeVault } from 'state/pools/hooks';\nimport { getBalanceNumber } from 'utils/formatBalance';\nimport BaseCell, { CellContent } from './BaseCell';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledCell = styled(BaseCell)`\n  flex: 2 0 100px;\n`;\n_c = StyledCell;\nconst TotalStakedCell = ({\n  pool\n}) => {\n  _s();\n  const {\n    t\n  } = useTranslation();\n  const {\n    sousId,\n    stakingToken,\n    totalStaked,\n    isAutoVault\n  } = pool;\n  const {\n    totalCakeInVault\n  } = useCakeVault();\n  const isManualCakePool = sousId === 0;\n  const totalStakedBalance = useMemo(() => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals);\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault);\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals);\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals);\n  }, [isAutoVault, totalCakeInVault, isManualCakePool, totalStaked, stakingToken.decimals]);\n  return /*#__PURE__*/_jsxDEV(StyledCell, {\n    role: \"cell\",\n    children: /*#__PURE__*/_jsxDEV(CellContent, {\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        fontSize: \"12px\",\n        color: \"textSubtle\",\n        textAlign: \"left\",\n        children: t('Total staked')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), totalStaked && totalStaked.gte(0) ? /*#__PURE__*/_jsxDEV(Flex, {\n        height: \"20px\",\n        alignItems: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Balance, {\n          fontSize: \"16px\",\n          value: totalStakedBalance,\n          decimals: 0,\n          unit: ` ${stakingToken.symbol}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Skeleton, {\n        width: \"80px\",\n        height: \"16px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(TotalStakedCell, \"u7fwO+UC39P1NqbdWzZ3dMnoTOQ=\", false, function () {\n  return [useTranslation, useCakeVault];\n});\n_c2 = TotalStakedCell;\nexport default TotalStakedCell;\nvar _c, _c2;\n$RefreshReg$(_c, \"StyledCell\");\n$RefreshReg$(_c2, \"TotalStakedCell\");","map":{"version":3,"names":["React","useMemo","Flex","Skeleton","Text","styled","useTranslation","BigNumber","Balance","useCakeVault","getBalanceNumber","BaseCell","CellContent","jsxDEV","_jsxDEV","StyledCell","_c","TotalStakedCell","pool","_s","t","sousId","stakingToken","totalStaked","isAutoVault","totalCakeInVault","isManualCakePool","totalStakedBalance","decimals","manualCakeTotalMinusAutoVault","minus","role","children","fontSize","color","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","gte","height","alignItems","value","unit","symbol","width","_c2","$RefreshReg$"],"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/views/Pools/components/PoolsTable/Cells/TotalStakedCell.tsx"],"sourcesContent":["import React, { useMemo } from 'react'\r\nimport { Flex, Skeleton, Text } from '@pancakeswap/uikit'\r\nimport styled from 'styled-components'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport BigNumber from 'bignumber.js'\r\nimport Balance from 'components/Balance'\r\nimport { Pool } from 'state/types'\r\nimport { useCakeVault } from 'state/pools/hooks'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport BaseCell, { CellContent } from './BaseCell'\r\n\r\ninterface TotalStakedCellProps {\r\n  pool: Pool\r\n}\r\n\r\nconst StyledCell = styled(BaseCell)`\r\n  flex: 2 0 100px;\r\n`\r\n\r\nconst TotalStakedCell: React.FC<TotalStakedCellProps> = ({ pool }) => {\r\n  const { t } = useTranslation()\r\n  const { sousId, stakingToken, totalStaked, isAutoVault } = pool\r\n  const { totalCakeInVault } = useCakeVault()\r\n\r\n  const isManualCakePool = sousId === 0\r\n\r\n  const totalStakedBalance = useMemo(() => {\r\n    if (isAutoVault) {\r\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\r\n    }\r\n    if (isManualCakePool) {\r\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\r\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\r\n    }\r\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\r\n  }, [isAutoVault, totalCakeInVault, isManualCakePool, totalStaked, stakingToken.decimals])\r\n\r\n  return (\r\n    <StyledCell role=\"cell\">\r\n      <CellContent>\r\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\r\n          {t('Total staked')}\r\n        </Text>\r\n        {totalStaked && totalStaked.gte(0) ? (\r\n          <Flex height=\"20px\" alignItems=\"center\">\r\n            <Balance fontSize=\"16px\" value={totalStakedBalance} decimals={0} unit={` ${stakingToken.symbol}`} />\r\n          </Flex>\r\n        ) : (\r\n          <Skeleton width=\"80px\" height=\"16px\" />\r\n        )}\r\n      </CellContent>\r\n    </StyledCell>\r\n  )\r\n}\r\n\r\nexport default TotalStakedCell\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}