{"ast":null,"code":"import{ethers}from'ethers';import{BetPosition}from'state/types';import{formatBigNumber,formatBigNumberToFixed}from'utils/formatBalance';import getTimePeriods from'utils/getTimePeriods';export const formatUsdv2=usd=>{return\"$\".concat(formatBigNumberToFixed(usd,3,8));};export const formatBnbv2=bnb=>{const value=bnb||ethers.BigNumber.from(0);return formatBigNumberToFixed(value,4);};export const padTime=num=>num.toString().padStart(2,'0');export const formatRoundTime=secondsBetweenBlocks=>{const{hours,minutes,seconds}=getTimePeriods(secondsBetweenBlocks);const minutesSeconds=\"\".concat(padTime(minutes),\":\").concat(padTime(seconds));if(hours>0){return\"\".concat(padTime(hours),\":\").concat(minutesSeconds);}return minutesSeconds;};export const getHasRoundFailed=(round,blockNumber)=>{if(!round.endBlock){return false;}return blockNumber>round.endBlock&&round.oracleCalled===false;};export const getMultiplierv2=(total,amount)=>{if(!total){return ethers.FixedNumber.from(0);}if(total.eq(0)||amount.eq(0)){return ethers.FixedNumber.from(0);}const rewardAmountFixed=ethers.FixedNumber.from(total);const multiplierAmountFixed=ethers.FixedNumber.from(amount);return rewardAmountFixed.divUnsafe(multiplierAmountFixed);};export const getPayoutv2=(ledger,round)=>{if(!ledger||!round){return ethers.FixedNumber.from(0);}const{bullAmount,bearAmount,rewardAmount}=round;const{amount,position}=ledger;const amountFixed=ethers.FixedNumber.from(formatBigNumber(amount));const multiplier=getMultiplierv2(rewardAmount,position===BetPosition.BULL?bullAmount:bearAmount);return amountFixed.mulUnsafe(multiplier);};export const getNetPayoutv2=(ledger,round)=>{if(!ledger||!round){return ethers.FixedNumber.from(0);}const payout=getPayoutv2(ledger,round);const amount=ethers.FixedNumber.from(formatBigNumber(ledger.amount));return payout.subUnsafe(amount);};export const getPriceDifference=(price,lockPrice)=>{if(!price||!lockPrice){return ethers.BigNumber.from(0);}return price.sub(lockPrice);};","map":{"version":3,"names":["ethers","BetPosition","formatBigNumber","formatBigNumberToFixed","getTimePeriods","formatUsdv2","usd","concat","formatBnbv2","bnb","value","BigNumber","from","padTime","num","toString","padStart","formatRoundTime","secondsBetweenBlocks","hours","minutes","seconds","minutesSeconds","getHasRoundFailed","round","blockNumber","endBlock","oracleCalled","getMultiplierv2","total","amount","FixedNumber","eq","rewardAmountFixed","multiplierAmountFixed","divUnsafe","getPayoutv2","ledger","bullAmount","bearAmount","rewardAmount","position","amountFixed","multiplier","BULL","mulUnsafe","getNetPayoutv2","payout","subUnsafe","getPriceDifference","price","lockPrice","sub"],"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/views/Predictions/helpers.ts"],"sourcesContent":["import { ethers } from 'ethers'\r\nimport { BetPosition, NodeLedger, NodeRound } from 'state/types'\r\nimport { formatBigNumber, formatBigNumberToFixed } from 'utils/formatBalance'\r\nimport getTimePeriods from 'utils/getTimePeriods'\r\n\r\nexport const formatUsdv2 = (usd: ethers.BigNumber) => {\r\n  return `$${formatBigNumberToFixed(usd, 3, 8)}`\r\n}\r\n\r\nexport const formatBnbv2 = (bnb: ethers.BigNumber) => {\r\n  const value = bnb || ethers.BigNumber.from(0)\r\n  return formatBigNumberToFixed(value, 4)\r\n}\r\n\r\nexport const padTime = (num: number) => num.toString().padStart(2, '0')\r\n\r\nexport const formatRoundTime = (secondsBetweenBlocks: number) => {\r\n  const { hours, minutes, seconds } = getTimePeriods(secondsBetweenBlocks)\r\n  const minutesSeconds = `${padTime(minutes)}:${padTime(seconds)}`\r\n\r\n  if (hours > 0) {\r\n    return `${padTime(hours)}:${minutesSeconds}`\r\n  }\r\n\r\n  return minutesSeconds\r\n}\r\n\r\nexport const getHasRoundFailed = (round: NodeRound, blockNumber: number) => {\r\n  if (!round.endBlock) {\r\n    return false\r\n  }\r\n\r\n  return blockNumber > round.endBlock && round.oracleCalled === false\r\n}\r\n\r\nexport const getMultiplierv2 = (total: ethers.BigNumber, amount: ethers.BigNumber) => {\r\n  if (!total) {\r\n    return ethers.FixedNumber.from(0)\r\n  }\r\n\r\n  if (total.eq(0) || amount.eq(0)) {\r\n    return ethers.FixedNumber.from(0)\r\n  }\r\n\r\n  const rewardAmountFixed = ethers.FixedNumber.from(total)\r\n  const multiplierAmountFixed = ethers.FixedNumber.from(amount)\r\n\r\n  return rewardAmountFixed.divUnsafe(multiplierAmountFixed)\r\n}\r\n\r\nexport const getPayoutv2 = (ledger: NodeLedger, round: NodeRound) => {\r\n  if (!ledger || !round) {\r\n    return ethers.FixedNumber.from(0)\r\n  }\r\n\r\n  const { bullAmount, bearAmount, rewardAmount } = round\r\n  const { amount, position } = ledger\r\n\r\n  const amountFixed = ethers.FixedNumber.from(formatBigNumber(amount))\r\n  const multiplier = getMultiplierv2(rewardAmount, position === BetPosition.BULL ? bullAmount : bearAmount)\r\n  return amountFixed.mulUnsafe(multiplier)\r\n}\r\n\r\nexport const getNetPayoutv2 = (ledger: NodeLedger, round: NodeRound) => {\r\n  if (!ledger || !round) {\r\n    return ethers.FixedNumber.from(0)\r\n  }\r\n\r\n  const payout = getPayoutv2(ledger, round)\r\n  const amount = ethers.FixedNumber.from(formatBigNumber(ledger.amount))\r\n\r\n  return payout.subUnsafe(amount)\r\n}\r\n\r\nexport const getPriceDifference = (price: ethers.BigNumber, lockPrice: ethers.BigNumber) => {\r\n  if (!price || !lockPrice) {\r\n    return ethers.BigNumber.from(0)\r\n  }\r\n\r\n  return price.sub(lockPrice)\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}