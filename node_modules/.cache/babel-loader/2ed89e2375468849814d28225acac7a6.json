{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Devrim\\\\Documents\\\\FRANKswapUIforProspBlast\\\\src\\\\views\\\\Ifos\\\\components\\\\IfoFoldableCard\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { Card, CardHeader, CardBody, CardFooter, CardRibbon, ExpandableButton, Progress, Button, ChevronUpIcon } from '@pancakeswap/uikit';\nimport BigNumber from 'bignumber.js';\nimport { useWeb3React } from '@web3-react/core';\nimport { PoolIds } from 'config/constants/types';\nimport { useERC20 } from 'hooks/useContract';\nimport useToast from 'hooks/useToast';\nimport { useTranslation } from 'contexts/Localization';\nimport { getAddress } from 'utils/addressHelpers';\nimport { EnableStatus } from './types';\nimport IfoPoolCard from './IfoPoolCard';\nimport Timer from './Timer';\nimport Achievement from './Achievement';\nimport useIfoApprove from '../../hooks/useIfoApprove';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getRibbonComponent = (ifo, status, t) => {\n  if (status === 'coming_soon') {\n    return /*#__PURE__*/_jsxDEV(CardRibbon, {\n      variantColor: \"textDisabled\",\n      ribbonPosition: \"left\",\n      text: t('Coming Soon')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (status === 'live' || status === 'finished' && ifo.isActive) {\n    return /*#__PURE__*/_jsxDEV(CardRibbon, {\n      variantColor: \"primary\",\n      ribbonPosition: \"left\",\n      style: {\n        textTransform: 'uppercase'\n      },\n      text: status === 'live' ? `${t('Live')}!` : `${t('Finished')}!`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this);\n  }\n\n  return null;\n};\n\nconst StyledCard = styled(Card)`\n  max-width: 736px;\n  width: 100%;\n  margin: auto;\n`;\n_c = StyledCard;\nconst Header = styled(CardHeader)`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n  height: 112px;\n  background-repeat: no-repeat;\n  background-size: cover;\n  background-position: center;\n  background-image: ${({\n  ifoId\n}) => `url('/images/ifos/${ifoId}-bg.svg')`};\n`;\n_c2 = Header;\nconst FoldableContent = styled.div`\n  display: ${({\n  isVisible\n}) => isVisible ? 'block' : 'none'};\n  background: ${({\n  isActive,\n  theme\n}) => isActive ? theme.colors.gradients.bubblegum : theme.colors.dropdown};\n`;\n_c3 = FoldableContent;\nconst CardsWrapper = styled.div`\n  display: grid;\n  grid-gap: 32px;\n  grid-template-columns: 1fr;\n  margin-bottom: 32px;\n  ${({\n  theme\n}) => theme.mediaQueries.md} {\n    grid-template-columns: ${({\n  singleCard\n}) => singleCard ? '1fr' : '1fr 1fr'};\n    justify-items: ${({\n  singleCard\n}) => singleCard ? 'center' : 'unset'};\n  }\n`;\n_c4 = CardsWrapper;\nconst StyledCardBody = styled(CardBody)`\n  padding: 24px 16px;\n  ${({\n  theme\n}) => theme.mediaQueries.md} {\n    padding: 24px;\n  }\n`;\n_c5 = StyledCardBody;\nconst StyledCardFooter = styled(CardFooter)`\n  text-align: center;\n  padding: 8px;\n  background: ${({\n  theme\n}) => theme.colors.backgroundAlt};\n`;\n_c6 = StyledCardFooter;\n\nconst IfoFoldableCard = ({\n  ifo,\n  publicIfoData,\n  walletIfoData,\n  isInitiallyVisible\n}) => {\n  _s();\n\n  const [isVisible, setIsVisible] = useState(isInitiallyVisible);\n  const [enableStatus, setEnableStatus] = useState(EnableStatus.DISABLED);\n  const {\n    t\n  } = useTranslation();\n  const {\n    account\n  } = useWeb3React();\n  const raisingTokenContract = useERC20(getAddress(ifo.currency.address));\n  const Ribbon = getRibbonComponent(ifo, publicIfoData.status, t);\n  const isActive = publicIfoData.status !== 'finished' && ifo.isActive;\n  const {\n    contract\n  } = walletIfoData;\n  const onApprove = useIfoApprove(raisingTokenContract, contract.address);\n  const {\n    toastSuccess\n  } = useToast();\n\n  const handleApprove = async () => {\n    try {\n      setEnableStatus(EnableStatus.IS_ENABLING);\n      await onApprove();\n      setEnableStatus(EnableStatus.ENABLED);\n      toastSuccess(t('Successfully Enabled!'), t('You can now participate in the %symbol% IFO.', {\n        symbol: ifo.token.symbol\n      }));\n    } catch (error) {\n      setEnableStatus(EnableStatus.DISABLED);\n    }\n  };\n\n  useEffect(() => {\n    const checkAllowance = async () => {\n      try {\n        const response = await raisingTokenContract.allowance(account, contract.address);\n        const currentAllowance = new BigNumber(response.toString());\n        setEnableStatus(currentAllowance.lte(0) ? EnableStatus.DISABLED : EnableStatus.ENABLED);\n      } catch (error) {\n        setEnableStatus(EnableStatus.DISABLED);\n      }\n    };\n\n    if (account) {\n      checkAllowance();\n    }\n  }, [account, raisingTokenContract, contract, setEnableStatus]);\n  return /*#__PURE__*/_jsxDEV(StyledCard, {\n    ribbon: Ribbon,\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      ifoId: ifo.id,\n      children: /*#__PURE__*/_jsxDEV(ExpandableButton, {\n        expanded: isVisible,\n        onClick: () => setIsVisible(prev => !prev)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FoldableContent, {\n      isVisible: isVisible,\n      isActive: publicIfoData.status !== 'idle' && isActive,\n      children: [isActive && /*#__PURE__*/_jsxDEV(Progress, {\n        variant: \"flat\",\n        primaryStep: publicIfoData.progress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(StyledCardBody, {\n        children: [isActive && /*#__PURE__*/_jsxDEV(Timer, {\n          publicIfoData: publicIfoData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 24\n        }, this), /*#__PURE__*/_jsxDEV(CardsWrapper, {\n          singleCard: !publicIfoData.poolBasic || !walletIfoData.poolBasic,\n          children: [publicIfoData.poolBasic && walletIfoData.poolBasic && /*#__PURE__*/_jsxDEV(IfoPoolCard, {\n            poolId: PoolIds.poolBasic,\n            ifo: ifo,\n            publicIfoData: publicIfoData,\n            walletIfoData: walletIfoData,\n            onApprove: handleApprove,\n            enableStatus: enableStatus\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(IfoPoolCard, {\n            poolId: PoolIds.poolUnlimited,\n            ifo: ifo,\n            publicIfoData: publicIfoData,\n            walletIfoData: walletIfoData,\n            onApprove: handleApprove,\n            enableStatus: enableStatus\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Achievement, {\n          ifo: ifo,\n          publicIfoData: publicIfoData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StyledCardFooter, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"text\",\n          endIcon: /*#__PURE__*/_jsxDEV(ChevronUpIcon, {\n            color: \"primary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 43\n          }, this),\n          onClick: () => setIsVisible(false),\n          children: t('Close')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 5\n  }, this);\n};\n\n_s(IfoFoldableCard, \"EGO7ZSz9W6JFSH0SQbfoJrXQ7GI=\", false, function () {\n  return [useTranslation, useWeb3React, useERC20, useIfoApprove, useToast];\n});\n\n_c7 = IfoFoldableCard;\nexport default IfoFoldableCard;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n\n$RefreshReg$(_c, \"StyledCard\");\n$RefreshReg$(_c2, \"Header\");\n$RefreshReg$(_c3, \"FoldableContent\");\n$RefreshReg$(_c4, \"CardsWrapper\");\n$RefreshReg$(_c5, \"StyledCardBody\");\n$RefreshReg$(_c6, \"StyledCardFooter\");\n$RefreshReg$(_c7, \"IfoFoldableCard\");","map":{"version":3,"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/views/Ifos/components/IfoFoldableCard/index.tsx"],"names":["React","useEffect","useState","styled","Card","CardHeader","CardBody","CardFooter","CardRibbon","ExpandableButton","Progress","Button","ChevronUpIcon","BigNumber","useWeb3React","PoolIds","useERC20","useToast","useTranslation","getAddress","EnableStatus","IfoPoolCard","Timer","Achievement","useIfoApprove","getRibbonComponent","ifo","status","t","isActive","textTransform","StyledCard","Header","ifoId","FoldableContent","div","isVisible","theme","colors","gradients","bubblegum","dropdown","CardsWrapper","mediaQueries","md","singleCard","StyledCardBody","StyledCardFooter","backgroundAlt","IfoFoldableCard","publicIfoData","walletIfoData","isInitiallyVisible","setIsVisible","enableStatus","setEnableStatus","DISABLED","account","raisingTokenContract","currency","address","Ribbon","contract","onApprove","toastSuccess","handleApprove","IS_ENABLING","ENABLED","symbol","token","error","checkAllowance","response","allowance","currentAllowance","toString","lte","id","prev","progress","poolBasic","poolUnlimited"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardFooter,\r\n  CardRibbon,\r\n  ExpandableButton,\r\n  Progress,\r\n  Button,\r\n  ChevronUpIcon,\r\n} from '@pancakeswap/uikit'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { Ifo, IfoStatus, PoolIds } from 'config/constants/types'\r\nimport { PublicIfoData, WalletIfoData } from 'views/Ifos/types'\r\nimport { useERC20 } from 'hooks/useContract'\r\nimport useToast from 'hooks/useToast'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { getAddress } from 'utils/addressHelpers'\r\nimport { EnableStatus } from './types'\r\nimport IfoPoolCard from './IfoPoolCard'\r\nimport Timer from './Timer'\r\nimport Achievement from './Achievement'\r\nimport useIfoApprove from '../../hooks/useIfoApprove'\r\n\r\ninterface IfoFoldableCardProps {\r\n  ifo: Ifo\r\n  publicIfoData: PublicIfoData\r\n  walletIfoData: WalletIfoData\r\n  isInitiallyVisible: boolean\r\n}\r\n\r\nconst getRibbonComponent = (ifo: Ifo, status: IfoStatus, t: any) => {\r\n  if (status === 'coming_soon') {\r\n    return <CardRibbon variantColor=\"textDisabled\" ribbonPosition=\"left\" text={t('Coming Soon')} />\r\n  }\r\n\r\n  if (status === 'live' || (status === 'finished' && ifo.isActive)) {\r\n    return (\r\n      <CardRibbon\r\n        variantColor=\"primary\"\r\n        ribbonPosition=\"left\"\r\n        style={{ textTransform: 'uppercase' }}\r\n        text={status === 'live' ? `${t('Live')}!` : `${t('Finished')}!`}\r\n      />\r\n    )\r\n  }\r\n\r\n  return null\r\n}\r\n\r\nconst StyledCard = styled(Card)`\r\n  max-width: 736px;\r\n  width: 100%;\r\n  margin: auto;\r\n`\r\n\r\nconst Header = styled(CardHeader)<{ ifoId: string }>`\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  align-items: center;\r\n  height: 112px;\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n  background-position: center;\r\n  background-image: ${({ ifoId }) => `url('/images/ifos/${ifoId}-bg.svg')`};\r\n`\r\n\r\nconst FoldableContent = styled.div<{ isVisible: boolean; isActive: boolean }>`\r\n  display: ${({ isVisible }) => (isVisible ? 'block' : 'none')};\r\n  background: ${({ isActive, theme }) => (isActive ? theme.colors.gradients.bubblegum : theme.colors.dropdown)};\r\n`\r\n\r\nconst CardsWrapper = styled.div<{ singleCard: boolean }>`\r\n  display: grid;\r\n  grid-gap: 32px;\r\n  grid-template-columns: 1fr;\r\n  margin-bottom: 32px;\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    grid-template-columns: ${({ singleCard }) => (singleCard ? '1fr' : '1fr 1fr')};\r\n    justify-items: ${({ singleCard }) => (singleCard ? 'center' : 'unset')};\r\n  }\r\n`\r\n\r\nconst StyledCardBody = styled(CardBody)`\r\n  padding: 24px 16px;\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    padding: 24px;\r\n  }\r\n`\r\n\r\nconst StyledCardFooter = styled(CardFooter)`\r\n  text-align: center;\r\n  padding: 8px;\r\n  background: ${({ theme }) => theme.colors.backgroundAlt};\r\n`\r\n\r\nconst IfoFoldableCard: React.FC<IfoFoldableCardProps> = ({ ifo, publicIfoData, walletIfoData, isInitiallyVisible }) => {\r\n  const [isVisible, setIsVisible] = useState(isInitiallyVisible)\r\n  const [enableStatus, setEnableStatus] = useState(EnableStatus.DISABLED)\r\n  const { t } = useTranslation()\r\n  const { account } = useWeb3React()\r\n  const raisingTokenContract = useERC20(getAddress(ifo.currency.address))\r\n  const Ribbon = getRibbonComponent(ifo, publicIfoData.status, t)\r\n  const isActive = publicIfoData.status !== 'finished' && ifo.isActive\r\n  const { contract } = walletIfoData\r\n  const onApprove = useIfoApprove(raisingTokenContract, contract.address)\r\n  const { toastSuccess } = useToast()\r\n\r\n  const handleApprove = async () => {\r\n    try {\r\n      setEnableStatus(EnableStatus.IS_ENABLING)\r\n\r\n      await onApprove()\r\n\r\n      setEnableStatus(EnableStatus.ENABLED)\r\n      toastSuccess(\r\n        t('Successfully Enabled!'),\r\n        t('You can now participate in the %symbol% IFO.', { symbol: ifo.token.symbol }),\r\n      )\r\n    } catch (error) {\r\n      setEnableStatus(EnableStatus.DISABLED)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    const checkAllowance = async () => {\r\n      try {\r\n        const response = await raisingTokenContract.allowance(account, contract.address)\r\n        const currentAllowance = new BigNumber(response.toString())\r\n        setEnableStatus(currentAllowance.lte(0) ? EnableStatus.DISABLED : EnableStatus.ENABLED)\r\n      } catch (error) {\r\n        setEnableStatus(EnableStatus.DISABLED)\r\n      }\r\n    }\r\n\r\n    if (account) {\r\n      checkAllowance()\r\n    }\r\n  }, [account, raisingTokenContract, contract, setEnableStatus])\r\n\r\n  return (\r\n    <StyledCard ribbon={Ribbon}>\r\n      <Header ifoId={ifo.id}>\r\n        <ExpandableButton expanded={isVisible} onClick={() => setIsVisible((prev) => !prev)} />\r\n      </Header>\r\n      <FoldableContent isVisible={isVisible} isActive={publicIfoData.status !== 'idle' && isActive}>\r\n        {isActive && <Progress variant=\"flat\" primaryStep={publicIfoData.progress} />}\r\n        <StyledCardBody>\r\n          {isActive && <Timer publicIfoData={publicIfoData} />}\r\n          <CardsWrapper singleCard={!publicIfoData.poolBasic || !walletIfoData.poolBasic}>\r\n            {publicIfoData.poolBasic && walletIfoData.poolBasic && (\r\n              <IfoPoolCard\r\n                poolId={PoolIds.poolBasic}\r\n                ifo={ifo}\r\n                publicIfoData={publicIfoData}\r\n                walletIfoData={walletIfoData}\r\n                onApprove={handleApprove}\r\n                enableStatus={enableStatus}\r\n              />\r\n            )}\r\n            <IfoPoolCard\r\n              poolId={PoolIds.poolUnlimited}\r\n              ifo={ifo}\r\n              publicIfoData={publicIfoData}\r\n              walletIfoData={walletIfoData}\r\n              onApprove={handleApprove}\r\n              enableStatus={enableStatus}\r\n            />\r\n          </CardsWrapper>\r\n          <Achievement ifo={ifo} publicIfoData={publicIfoData} />\r\n        </StyledCardBody>\r\n        <StyledCardFooter>\r\n          <Button variant=\"text\" endIcon={<ChevronUpIcon color=\"primary\" />} onClick={() => setIsVisible(false)}>\r\n            {t('Close')}\r\n          </Button>\r\n        </StyledCardFooter>\r\n      </FoldableContent>\r\n    </StyledCard>\r\n  )\r\n}\r\n\r\nexport default IfoFoldableCard\r\n"]},"metadata":{},"sourceType":"module"}