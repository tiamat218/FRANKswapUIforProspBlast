{"ast":null,"code":"import{useMemo}from'react';import{isAddress}from'../../utils';export function filterTokens(tokens,search){if(search.length===0)return tokens;const searchingAddress=isAddress(search);if(searchingAddress){return tokens.filter(token=>token.address===searchingAddress);}const lowerSearchParts=search.toLowerCase().split(/\\s+/).filter(s=>s.length>0);if(lowerSearchParts.length===0){return tokens;}const matchesSearch=s=>{const sParts=s.toLowerCase().split(/\\s+/).filter(s_=>s_.length>0);return lowerSearchParts.every(p=>p.length===0||sParts.some(sp=>sp.startsWith(p)||sp.endsWith(p)));};return tokens.filter(token=>{const{symbol,name}=token;return symbol&&matchesSearch(symbol)||name&&matchesSearch(name);});}export function useSortedTokensByQuery(tokens,searchQuery){return useMemo(()=>{if(!tokens){return[];}const symbolMatch=searchQuery.toLowerCase().split(/\\s+/).filter(s=>s.length>0);if(symbolMatch.length>1){return tokens;}const exactMatches=[];const symbolSubtrings=[];const rest=[];// sort tokens by exact match -> subtring on symbol match -> rest\ntokens.map(token=>{var _token$symbol,_token$symbol2;if(((_token$symbol=token.symbol)===null||_token$symbol===void 0?void 0:_token$symbol.toLowerCase())===symbolMatch[0]){return exactMatches.push(token);}if((_token$symbol2=token.symbol)===null||_token$symbol2===void 0?void 0:_token$symbol2.toLowerCase().startsWith(searchQuery.toLowerCase().trim())){return symbolSubtrings.push(token);}return rest.push(token);});return[...exactMatches,...symbolSubtrings,...rest];},[tokens,searchQuery]);}","map":{"version":3,"names":["useMemo","isAddress","filterTokens","tokens","search","length","searchingAddress","filter","token","address","lowerSearchParts","toLowerCase","split","s","matchesSearch","sParts","s_","every","p","some","sp","startsWith","endsWith","symbol","name","useSortedTokensByQuery","searchQuery","symbolMatch","exactMatches","symbolSubtrings","rest","map","_token$symbol","_token$symbol2","push","trim"],"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/components/SearchModal/filtering.ts"],"sourcesContent":["import { useMemo } from 'react'\r\nimport { Token } from '@pancakeswap/sdk'\r\nimport { isAddress } from '../../utils'\r\n\r\nexport function filterTokens(tokens: Token[], search: string): Token[] {\r\n  if (search.length === 0) return tokens\r\n\r\n  const searchingAddress = isAddress(search)\r\n\r\n  if (searchingAddress) {\r\n    return tokens.filter((token) => token.address === searchingAddress)\r\n  }\r\n\r\n  const lowerSearchParts = search\r\n    .toLowerCase()\r\n    .split(/\\s+/)\r\n    .filter((s) => s.length > 0)\r\n\r\n  if (lowerSearchParts.length === 0) {\r\n    return tokens\r\n  }\r\n\r\n  const matchesSearch = (s: string): boolean => {\r\n    const sParts = s\r\n      .toLowerCase()\r\n      .split(/\\s+/)\r\n      .filter((s_) => s_.length > 0)\r\n\r\n    return lowerSearchParts.every((p) => p.length === 0 || sParts.some((sp) => sp.startsWith(p) || sp.endsWith(p)))\r\n  }\r\n\r\n  return tokens.filter((token) => {\r\n    const { symbol, name } = token\r\n    return (symbol && matchesSearch(symbol)) || (name && matchesSearch(name))\r\n  })\r\n}\r\n\r\nexport function useSortedTokensByQuery(tokens: Token[] | undefined, searchQuery: string): Token[] {\r\n  return useMemo(() => {\r\n    if (!tokens) {\r\n      return []\r\n    }\r\n\r\n    const symbolMatch = searchQuery\r\n      .toLowerCase()\r\n      .split(/\\s+/)\r\n      .filter((s) => s.length > 0)\r\n\r\n    if (symbolMatch.length > 1) {\r\n      return tokens\r\n    }\r\n\r\n    const exactMatches: Token[] = []\r\n    const symbolSubtrings: Token[] = []\r\n    const rest: Token[] = []\r\n\r\n    // sort tokens by exact match -> subtring on symbol match -> rest\r\n    tokens.map((token) => {\r\n      if (token.symbol?.toLowerCase() === symbolMatch[0]) {\r\n        return exactMatches.push(token)\r\n      }\r\n      if (token.symbol?.toLowerCase().startsWith(searchQuery.toLowerCase().trim())) {\r\n        return symbolSubtrings.push(token)\r\n      }\r\n      return rest.push(token)\r\n    })\r\n\r\n    return [...exactMatches, ...symbolSubtrings, ...rest]\r\n  }, [tokens, searchQuery])\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}