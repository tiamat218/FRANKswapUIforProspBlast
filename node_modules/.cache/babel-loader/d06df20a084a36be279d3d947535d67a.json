{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Devrim\\\\Documents\\\\FRANKswapUIforProspBlast\\\\src\\\\views\\\\Predictions\\\\components\\\\History\\\\RoundsTab.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { orderBy } from 'lodash';\nimport { Box, Heading, Text } from '@pancakeswap/uikit';\nimport { useTranslation } from 'contexts/Localization';\nimport HistoricalBet from './HistoricalBet';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst RoundsTab = ({\n  hasBetHistory,\n  bets\n}) => {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  return hasBetHistory ? /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: orderBy(bets, ['round.epoch'], ['desc']).map(bet => /*#__PURE__*/_jsxDEV(HistoricalBet, {\n      bet: bet\n    }, bet.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this))\n  }, void 0, false) : /*#__PURE__*/_jsxDEV(Box, {\n    p: \"24px\",\n    children: [/*#__PURE__*/_jsxDEV(Heading, {\n      size: \"lg\",\n      textAlign: \"center\",\n      mb: \"8px\",\n      children: t('No prediction history available')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Text, {\n      as: \"p\",\n      textAlign: \"center\",\n      children: t('If you are sure you should see history here, make sure you’re connected to the correct wallet and try again.')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RoundsTab, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n\n_c = RoundsTab;\nexport default RoundsTab;\n\nvar _c;\n\n$RefreshReg$(_c, \"RoundsTab\");","map":{"version":3,"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/views/Predictions/components/History/RoundsTab.tsx"],"names":["React","orderBy","Box","Heading","Text","useTranslation","HistoricalBet","RoundsTab","hasBetHistory","bets","t","map","bet","id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,QAAxB;AACA,SAASC,GAAT,EAAcC,OAAd,EAAuBC,IAAvB,QAAmC,oBAAnC;AACA,SAASC,cAAT,QAA+B,uBAA/B;AAEA,OAAOC,aAAP,MAA0B,iBAA1B;;;;AAOA,MAAMC,SAAmC,GAAG,CAAC;AAAEC,EAAAA,aAAF;AAAiBC,EAAAA;AAAjB,CAAD,KAA6B;AAAA;;AACvE,QAAM;AAAEC,IAAAA;AAAF,MAAQL,cAAc,EAA5B;AAEA,SAAOG,aAAa,gBAClB;AAAA,cACGP,OAAO,CAACQ,IAAD,EAAO,CAAC,aAAD,CAAP,EAAwB,CAAC,MAAD,CAAxB,CAAP,CAAyCE,GAAzC,CAA8CC,GAAD,iBAC5C,QAAC,aAAD;AAA4B,MAAA,GAAG,EAAEA;AAAjC,OAAoBA,GAAG,CAACC,EAAxB;AAAA;AAAA;AAAA;AAAA,YADD;AADH,mBADkB,gBAOlB,QAAC,GAAD;AAAK,IAAA,CAAC,EAAC,MAAP;AAAA,4BACE,QAAC,OAAD;AAAS,MAAA,IAAI,EAAC,IAAd;AAAmB,MAAA,SAAS,EAAC,QAA7B;AAAsC,MAAA,EAAE,EAAC,KAAzC;AAAA,gBACGH,CAAC,CAAC,iCAAD;AADJ;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,IAAD;AAAM,MAAA,EAAE,EAAC,GAAT;AAAa,MAAA,SAAS,EAAC,QAAvB;AAAA,gBACGA,CAAC,CACA,8GADA;AADJ;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UAPF;AAkBD,CArBD;;GAAMH,S;UACUF,c;;;KADVE,S;AAuBN,eAAeA,SAAf","sourcesContent":["import React from 'react'\r\nimport { orderBy } from 'lodash'\r\nimport { Box, Heading, Text } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { Bet } from 'state/types'\r\nimport HistoricalBet from './HistoricalBet'\r\n\r\ninterface RoundsTabProps {\r\n  hasBetHistory: boolean\r\n  bets: Bet[]\r\n}\r\n\r\nconst RoundsTab: React.FC<RoundsTabProps> = ({ hasBetHistory, bets }) => {\r\n  const { t } = useTranslation()\r\n\r\n  return hasBetHistory ? (\r\n    <>\r\n      {orderBy(bets, ['round.epoch'], ['desc']).map((bet) => (\r\n        <HistoricalBet key={bet.id} bet={bet} />\r\n      ))}\r\n    </>\r\n  ) : (\r\n    <Box p=\"24px\">\r\n      <Heading size=\"lg\" textAlign=\"center\" mb=\"8px\">\r\n        {t('No prediction history available')}\r\n      </Heading>\r\n      <Text as=\"p\" textAlign=\"center\">\r\n        {t(\r\n          'If you are sure you should see history here, make sure you’re connected to the correct wallet and try again.',\r\n        )}\r\n      </Text>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default RoundsTab\r\n"]},"metadata":{},"sourceType":"module"}