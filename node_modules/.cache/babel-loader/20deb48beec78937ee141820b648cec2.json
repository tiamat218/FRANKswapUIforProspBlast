{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\frkul\\\\Documents\\\\swapUI_pancake-frontend\\\\src\\\\views\\\\Home\\\\components\\\\CardValue.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { useCountUp } from 'react-countup';\nimport { Text } from '@pancakeswap/uikit';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CardValue = ({\n  value,\n  decimals,\n  fontSize = '40px',\n  lineHeight = '1',\n  prefix = '',\n  bold = true,\n  color = 'text'\n}) => {\n  _s();\n  const {\n    countUp,\n    update\n  } = useCountUp({\n    start: 0,\n    end: value,\n    duration: 1,\n    separator: ',',\n    decimals:\n    // eslint-disable-next-line no-nested-ternary\n    decimals !== undefined ? decimals : value < 0 ? 4 : value > 1e5 ? 0 : 3\n  });\n  const updateValue = useRef(update);\n  useEffect(() => {\n    updateValue.current(value);\n  }, [value, updateValue]);\n  return /*#__PURE__*/_jsxDEV(Text, {\n    bold: bold,\n    fontSize: fontSize,\n    style: {\n      lineHeight\n    },\n    color: color,\n    children: [prefix, countUp]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(CardValue, \"PzfhtUu9EKDAhST1Og4mXJ0Px3g=\", false, function () {\n  return [useCountUp];\n});\n_c = CardValue;\nexport default CardValue;\nvar _c;\n$RefreshReg$(_c, \"CardValue\");","map":{"version":3,"names":["React","useEffect","useRef","useCountUp","Text","jsxDEV","_jsxDEV","CardValue","value","decimals","fontSize","lineHeight","prefix","bold","color","_s","countUp","update","start","end","duration","separator","undefined","updateValue","current","style","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/frkul/Documents/swapUI_pancake-frontend/src/views/Home/components/CardValue.tsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react'\r\nimport { useCountUp } from 'react-countup'\r\nimport { Text } from '@pancakeswap/uikit'\r\n\r\nexport interface CardValueProps {\r\n  value: number\r\n  decimals?: number\r\n  fontSize?: string\r\n  lineHeight?: string\r\n  prefix?: string\r\n  bold?: boolean\r\n  color?: string\r\n}\r\n\r\nconst CardValue: React.FC<CardValueProps> = ({\r\n  value,\r\n  decimals,\r\n  fontSize = '40px',\r\n  lineHeight = '1',\r\n  prefix = '',\r\n  bold = true,\r\n  color = 'text',\r\n}) => {\r\n  const { countUp, update } = useCountUp({\r\n    start: 0,\r\n    end: value,\r\n    duration: 1,\r\n    separator: ',',\r\n    decimals:\r\n      // eslint-disable-next-line no-nested-ternary\r\n      decimals !== undefined ? decimals : value < 0 ? 4 : value > 1e5 ? 0 : 3,\r\n  })\r\n\r\n  const updateValue = useRef(update)\r\n\r\n  useEffect(() => {\r\n    updateValue.current(value)\r\n  }, [value, updateValue])\r\n\r\n  return (\r\n    <Text bold={bold} fontSize={fontSize} style={{ lineHeight }} color={color}>\r\n      {prefix}\r\n      {countUp}\r\n    </Text>\r\n  )\r\n}\r\n\r\nexport default CardValue\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,SAASC,UAAU,QAAQ,eAAe;AAC1C,SAASC,IAAI,QAAQ,oBAAoB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAYzC,MAAMC,SAAmC,GAAGA,CAAC;EAC3CC,KAAK;EACLC,QAAQ;EACRC,QAAQ,GAAG,MAAM;EACjBC,UAAU,GAAG,GAAG;EAChBC,MAAM,GAAG,EAAE;EACXC,IAAI,GAAG,IAAI;EACXC,KAAK,GAAG;AACV,CAAC,KAAK;EAAAC,EAAA;EACJ,MAAM;IAAEC,OAAO;IAAEC;EAAO,CAAC,GAAGd,UAAU,CAAC;IACrCe,KAAK,EAAE,CAAC;IACRC,GAAG,EAAEX,KAAK;IACVY,QAAQ,EAAE,CAAC;IACXC,SAAS,EAAE,GAAG;IACdZ,QAAQ;IACN;IACAA,QAAQ,KAAKa,SAAS,GAAGb,QAAQ,GAAGD,KAAK,GAAG,CAAC,GAAG,CAAC,GAAGA,KAAK,GAAG,GAAG,GAAG,CAAC,GAAG;EAC1E,CAAC,CAAC;EAEF,MAAMe,WAAW,GAAGrB,MAAM,CAACe,MAAM,CAAC;EAElChB,SAAS,CAAC,MAAM;IACdsB,WAAW,CAACC,OAAO,CAAChB,KAAK,CAAC;EAC5B,CAAC,EAAE,CAACA,KAAK,EAAEe,WAAW,CAAC,CAAC;EAExB,oBACEjB,OAAA,CAACF,IAAI;IAACS,IAAI,EAAEA,IAAK;IAACH,QAAQ,EAAEA,QAAS;IAACe,KAAK,EAAE;MAAEd;IAAW,CAAE;IAACG,KAAK,EAAEA,KAAM;IAAAY,QAAA,GACvEd,MAAM,EACNI,OAAO;EAAA;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEX,CAAC;AAAAf,EAAA,CA/BKR,SAAmC;EAAA,QASXJ,UAAU;AAAA;AAAA4B,EAAA,GATlCxB,SAAmC;AAiCzC,eAAeA,SAAS;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}