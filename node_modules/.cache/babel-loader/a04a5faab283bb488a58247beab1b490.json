{"ast":null,"code":"import { TICKET_LIMIT_PER_REQUEST } from 'config/constants/lottery';\nimport { getLotteryV2Contract } from 'utils/contractHelpers';\nconst lotteryContract = getLotteryV2Contract();\nexport const processRawTicketsResponse = ticketsResponse => {\n  const [ticketIds, ticketNumbers, ticketStatuses] = ticketsResponse;\n  if ((ticketIds === null || ticketIds === void 0 ? void 0 : ticketIds.length) > 0) {\n    return ticketIds.map((ticketId, index) => {\n      return {\n        id: ticketId.toString(),\n        number: ticketNumbers[index].toString(),\n        status: ticketStatuses[index]\n      };\n    });\n  }\n  return [];\n};\nexport const viewUserInfoForLotteryId = async (account, lotteryId, cursor, perRequestLimit) => {\n  try {\n    const data = await lotteryContract.viewUserInfoForLotteryId(account, lotteryId, cursor, perRequestLimit);\n    return processRawTicketsResponse(data);\n  } catch (error) {\n    console.error('viewUserInfoForLotteryId', error);\n    return null;\n  }\n};\nexport const fetchUserTicketsForOneRound = async (account, lotteryId) => {\n  let cursor = 0;\n  let numReturned = TICKET_LIMIT_PER_REQUEST;\n  const ticketData = [];\n  while (numReturned === TICKET_LIMIT_PER_REQUEST) {\n    // eslint-disable-next-line no-await-in-loop\n    const response = await viewUserInfoForLotteryId(account, lotteryId, cursor, TICKET_LIMIT_PER_REQUEST);\n    cursor += TICKET_LIMIT_PER_REQUEST;\n    numReturned = response.length;\n    ticketData.push(...response);\n  }\n  return ticketData;\n};\nexport const fetchUserTicketsForMultipleRounds = async (idsToCheck, account) => {\n  const ticketsForMultipleRounds = [];\n  for (let i = 0; i < idsToCheck.length; i += 1) {\n    const roundId = idsToCheck[i];\n    // eslint-disable-next-line no-await-in-loop\n    const ticketsForRound = await fetchUserTicketsForOneRound(account, roundId);\n    ticketsForMultipleRounds.push({\n      roundId,\n      userTickets: ticketsForRound\n    });\n  }\n  return ticketsForMultipleRounds;\n};","map":{"version":3,"names":["TICKET_LIMIT_PER_REQUEST","getLotteryV2Contract","lotteryContract","processRawTicketsResponse","ticketsResponse","ticketIds","ticketNumbers","ticketStatuses","length","map","ticketId","index","id","toString","number","status","viewUserInfoForLotteryId","account","lotteryId","cursor","perRequestLimit","data","error","console","fetchUserTicketsForOneRound","numReturned","ticketData","response","push","fetchUserTicketsForMultipleRounds","idsToCheck","ticketsForMultipleRounds","i","roundId","ticketsForRound","userTickets"],"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/state/lottery/getUserTicketsData.ts"],"sourcesContent":["import { TICKET_LIMIT_PER_REQUEST } from 'config/constants/lottery'\r\nimport { LotteryTicket } from 'config/constants/types'\r\nimport { UserTicketsResponse } from 'state/types'\r\nimport { getLotteryV2Contract } from 'utils/contractHelpers'\r\n\r\nconst lotteryContract = getLotteryV2Contract()\r\n\r\nexport const processRawTicketsResponse = (ticketsResponse: UserTicketsResponse): LotteryTicket[] => {\r\n  const [ticketIds, ticketNumbers, ticketStatuses] = ticketsResponse\r\n\r\n  if (ticketIds?.length > 0) {\r\n    return ticketIds.map((ticketId, index) => {\r\n      return {\r\n        id: ticketId.toString(),\r\n        number: ticketNumbers[index].toString(),\r\n        status: ticketStatuses[index],\r\n      }\r\n    })\r\n  }\r\n  return []\r\n}\r\n\r\nexport const viewUserInfoForLotteryId = async (\r\n  account: string,\r\n  lotteryId: string,\r\n  cursor: number,\r\n  perRequestLimit: number,\r\n): Promise<LotteryTicket[]> => {\r\n  try {\r\n    const data = await lotteryContract.viewUserInfoForLotteryId(account, lotteryId, cursor, perRequestLimit)\r\n    return processRawTicketsResponse(data)\r\n  } catch (error) {\r\n    console.error('viewUserInfoForLotteryId', error)\r\n    return null\r\n  }\r\n}\r\n\r\nexport const fetchUserTicketsForOneRound = async (account: string, lotteryId: string): Promise<LotteryTicket[]> => {\r\n  let cursor = 0\r\n  let numReturned = TICKET_LIMIT_PER_REQUEST\r\n  const ticketData = []\r\n\r\n  while (numReturned === TICKET_LIMIT_PER_REQUEST) {\r\n    // eslint-disable-next-line no-await-in-loop\r\n    const response = await viewUserInfoForLotteryId(account, lotteryId, cursor, TICKET_LIMIT_PER_REQUEST)\r\n    cursor += TICKET_LIMIT_PER_REQUEST\r\n    numReturned = response.length\r\n    ticketData.push(...response)\r\n  }\r\n\r\n  return ticketData\r\n}\r\n\r\nexport const fetchUserTicketsForMultipleRounds = async (\r\n  idsToCheck: string[],\r\n  account: string,\r\n): Promise<{ roundId: string; userTickets: LotteryTicket[] }[]> => {\r\n  const ticketsForMultipleRounds = []\r\n  for (let i = 0; i < idsToCheck.length; i += 1) {\r\n    const roundId = idsToCheck[i]\r\n    // eslint-disable-next-line no-await-in-loop\r\n    const ticketsForRound = await fetchUserTicketsForOneRound(account, roundId)\r\n    ticketsForMultipleRounds.push({\r\n      roundId,\r\n      userTickets: ticketsForRound,\r\n    })\r\n  }\r\n  return ticketsForMultipleRounds\r\n}\r\n"],"mappings":"AAAA,SAASA,wBAAwB,QAAQ,0BAA0B;AAGnE,SAASC,oBAAoB,QAAQ,uBAAuB;AAE5D,MAAMC,eAAe,GAAGD,oBAAoB,CAAC,CAAC;AAE9C,OAAO,MAAME,yBAAyB,GAAIC,eAAoC,IAAsB;EAClG,MAAM,CAACC,SAAS,EAAEC,aAAa,EAAEC,cAAc,CAAC,GAAGH,eAAe;EAElE,IAAI,CAAAC,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEG,MAAM,IAAG,CAAC,EAAE;IACzB,OAAOH,SAAS,CAACI,GAAG,CAAC,CAACC,QAAQ,EAAEC,KAAK,KAAK;MACxC,OAAO;QACLC,EAAE,EAAEF,QAAQ,CAACG,QAAQ,CAAC,CAAC;QACvBC,MAAM,EAAER,aAAa,CAACK,KAAK,CAAC,CAACE,QAAQ,CAAC,CAAC;QACvCE,MAAM,EAAER,cAAc,CAACI,KAAK;MAC9B,CAAC;IACH,CAAC,CAAC;EACJ;EACA,OAAO,EAAE;AACX,CAAC;AAED,OAAO,MAAMK,wBAAwB,GAAG,MAAAA,CACtCC,OAAe,EACfC,SAAiB,EACjBC,MAAc,EACdC,eAAuB,KACM;EAC7B,IAAI;IACF,MAAMC,IAAI,GAAG,MAAMnB,eAAe,CAACc,wBAAwB,CAACC,OAAO,EAAEC,SAAS,EAAEC,MAAM,EAAEC,eAAe,CAAC;IACxG,OAAOjB,yBAAyB,CAACkB,IAAI,CAAC;EACxC,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAChD,OAAO,IAAI;EACb;AACF,CAAC;AAED,OAAO,MAAME,2BAA2B,GAAG,MAAAA,CAAOP,OAAe,EAAEC,SAAiB,KAA+B;EACjH,IAAIC,MAAM,GAAG,CAAC;EACd,IAAIM,WAAW,GAAGzB,wBAAwB;EAC1C,MAAM0B,UAAU,GAAG,EAAE;EAErB,OAAOD,WAAW,KAAKzB,wBAAwB,EAAE;IAC/C;IACA,MAAM2B,QAAQ,GAAG,MAAMX,wBAAwB,CAACC,OAAO,EAAEC,SAAS,EAAEC,MAAM,EAAEnB,wBAAwB,CAAC;IACrGmB,MAAM,IAAInB,wBAAwB;IAClCyB,WAAW,GAAGE,QAAQ,CAACnB,MAAM;IAC7BkB,UAAU,CAACE,IAAI,CAAC,GAAGD,QAAQ,CAAC;EAC9B;EAEA,OAAOD,UAAU;AACnB,CAAC;AAED,OAAO,MAAMG,iCAAiC,GAAG,MAAAA,CAC/CC,UAAoB,EACpBb,OAAe,KACkD;EACjE,MAAMc,wBAAwB,GAAG,EAAE;EACnC,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,UAAU,CAACtB,MAAM,EAAEwB,CAAC,IAAI,CAAC,EAAE;IAC7C,MAAMC,OAAO,GAAGH,UAAU,CAACE,CAAC,CAAC;IAC7B;IACA,MAAME,eAAe,GAAG,MAAMV,2BAA2B,CAACP,OAAO,EAAEgB,OAAO,CAAC;IAC3EF,wBAAwB,CAACH,IAAI,CAAC;MAC5BK,OAAO;MACPE,WAAW,EAAED;IACf,CAAC,CAAC;EACJ;EACA,OAAOH,wBAAwB;AACjC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}