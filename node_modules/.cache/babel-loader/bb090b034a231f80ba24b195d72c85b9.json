{"ast":null,"code":"import React,{useEffect,useMemo,useState}from'react';import{ArrowBackIcon,CardBody,CardHeader,Flex,Heading,IconButton,Button,BinanceIcon,Text,BalanceInput,Slider,Box,AutoRenewIcon}from'@pancakeswap/uikit';import{ethers}from'ethers';import{parseUnits}from'ethers/lib/utils';import{useWeb3React}from'@web3-react/core';import{useGetMinBetAmount}from'state/hooks';import{useTranslation}from'contexts/Localization';import{usePredictionsContract}from'hooks/useContract';import{useGetBnbBalance}from'hooks/useTokenBalance';import useToast from'hooks/useToast';import{BetPosition}from'state/types';import{formatBigNumber,formatFixedNumber}from'utils/formatBalance';import ConnectWalletButton from'components/ConnectWalletButton';import PositionTag from'../PositionTag';import useSwiper from'../../hooks/useSwiper';import FlexRow from'../FlexRow';import Card from'./Card';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";// /!\\ TEMPORARY /!\\\n// Set default gasPrice (6 gwei) when calling BetBull/BetBear before new contract is released fixing this 'issue'.\n// TODO: Remove on beta-v2 smart contract release.\nconst gasPrice=parseUnits('6','gwei');const dust=parseUnits('0.01',18);const percentShortcuts=[10,25,50,75];const getButtonProps=(value,bnbBalance,minBetAmountBalance)=>{const hasSufficientBalance=()=>{if(value.gt(0)){return value.lte(bnbBalance);}return bnbBalance.gt(0);};if(!hasSufficientBalance()){return{key:'Insufficient BNB balance',disabled:true};}if(value.eq(0)){return{key:'Enter an amount',disabled:true};}return{key:'Confirm',disabled:value.lt(minBetAmountBalance)};};const getValueAsEthersBn=value=>{const valueAsFloat=parseFloat(value);return Number.isNaN(valueAsFloat)?ethers.BigNumber.from(0):parseUnits(value);};const SetPositionCard=_ref=>{let{position,togglePosition,onBack,onSuccess}=_ref;const[value,setValue]=useState('');const[isTxPending,setIsTxPending]=useState(false);const[errorMessage,setErrorMessage]=useState(null);const[percent,setPercent]=useState(0);const{account}=useWeb3React();const{swiper}=useSwiper();const{balance:bnbBalance}=useGetBnbBalance();const minBetAmount=useGetMinBetAmount();const{t}=useTranslation();const{toastError}=useToast();const predictionsContract=usePredictionsContract();// Convert bnb balance to ethers.BigNumber\nconst bnbBalanceAsBn=useMemo(()=>{return ethers.BigNumber.from(bnbBalance.toString());},[bnbBalance]);const maxBalance=useMemo(()=>{return bnbBalanceAsBn.gt(dust)?bnbBalanceAsBn.sub(dust):dust;},[bnbBalanceAsBn]);const balanceDisplay=formatBigNumber(bnbBalanceAsBn);const valueAsBn=getValueAsEthersBn(value);const showFieldWarning=account&&valueAsBn.gt(0)&&errorMessage!==null;const handleInputChange=input=>{const inputAsBn=getValueAsEthersBn(input);if(inputAsBn.eq(0)){setPercent(0);}else{const inputAsFn=ethers.FixedNumber.from(inputAsBn);const maxValueAsFn=ethers.FixedNumber.from(maxBalance);const hundredAsFn=ethers.FixedNumber.from(100);const percentage=inputAsFn.divUnsafe(maxValueAsFn).mulUnsafe(hundredAsFn);const percentageAsFloat=percentage.toUnsafeFloat();setPercent(percentageAsFloat>100?100:percentageAsFloat);}setValue(input);};const handlePercentChange=sliderPercent=>{if(sliderPercent>0){const maxValueAsFn=ethers.FixedNumber.from(maxBalance);const hundredAsFn=ethers.FixedNumber.from(100);const sliderPercentAsFn=ethers.FixedNumber.from(sliderPercent.toFixed(18)).divUnsafe(hundredAsFn);const balancePercentage=maxValueAsFn.mulUnsafe(sliderPercentAsFn);setValue(formatFixedNumber(balancePercentage));}else{setValue('');}setPercent(sliderPercent);};// Clear value\nconst handleGoBack=()=>{setValue('');setPercent(0);onBack();};// Disable the swiper events to avoid conflicts\nconst handleMouseOver=()=>{swiper.keyboard.disable();swiper.mousewheel.disable();swiper.detachEvents();};const handleMouseOut=()=>{swiper.keyboard.enable();swiper.mousewheel.enable();swiper.attachEvents();};const{key,disabled}=getButtonProps(valueAsBn,maxBalance,minBetAmount);const handleEnterPosition=async()=>{const betMethod=position===BetPosition.BULL?'betBull':'betBear';try{const tx=await predictionsContract[betMethod]({value:valueAsBn.toString(),gasPrice});setIsTxPending(true);const receipt=await tx.wait();onSuccess(valueAsBn.toString(),receipt.transactionHash);}catch{toastError(t('Error'),t('Please try again. Confirm the transaction and make sure you are paying enough gas!'));}finally{setIsTxPending(false);}};// Warnings\nuseEffect(()=>{const inputAmount=getValueAsEthersBn(value);const hasSufficientBalance=inputAmount.gt(0)&&inputAmount.lte(maxBalance);if(!hasSufficientBalance){setErrorMessage({key:'Insufficient BNB balance'});}else if(inputAmount.gt(0)&&inputAmount.lt(minBetAmount)){setErrorMessage({key:'A minimum amount of %num% %token% is required',data:{num:formatBigNumber(minBetAmount),token:'BNB'}});}else{setErrorMessage(null);}},[value,maxBalance,minBetAmount,setErrorMessage]);return/*#__PURE__*/_jsxs(Card,{onMouseOver:handleMouseOver,onMouseOut:handleMouseOut,children:[/*#__PURE__*/_jsx(CardHeader,{p:\"16px\",children:/*#__PURE__*/_jsxs(Flex,{alignItems:\"center\",children:[/*#__PURE__*/_jsx(IconButton,{variant:\"text\",scale:\"sm\",onClick:handleGoBack,mr:\"8px\",children:/*#__PURE__*/_jsx(ArrowBackIcon,{width:\"24px\"})}),/*#__PURE__*/_jsx(FlexRow,{children:/*#__PURE__*/_jsx(Heading,{scale:\"md\",children:t('Set Position')})}),/*#__PURE__*/_jsx(PositionTag,{betPosition:position,onClick:togglePosition,children:position===BetPosition.BULL?t('Up'):t('Down')})]})}),/*#__PURE__*/_jsxs(CardBody,{py:\"16px\",children:[/*#__PURE__*/_jsxs(Flex,{alignItems:\"center\",justifyContent:\"space-between\",mb:\"8px\",children:[/*#__PURE__*/_jsxs(Text,{textAlign:\"right\",color:\"textSubtle\",children:[t('Commit'),\":\"]}),/*#__PURE__*/_jsxs(Flex,{alignItems:\"center\",children:[/*#__PURE__*/_jsx(BinanceIcon,{mr:\"4px  \"}),/*#__PURE__*/_jsx(Text,{bold:true,textTransform:\"uppercase\",children:\"BNB\"})]})]}),/*#__PURE__*/_jsx(BalanceInput,{value:value,onUserInput:handleInputChange,isWarning:showFieldWarning,inputProps:{disabled:!account||isTxPending}}),showFieldWarning&&/*#__PURE__*/_jsx(Text,{color:\"failure\",fontSize:\"12px\",mt:\"4px\",textAlign:\"right\",children:t(errorMessage.key,errorMessage.data)}),/*#__PURE__*/_jsx(Text,{textAlign:\"right\",mb:\"16px\",color:\"textSubtle\",fontSize:\"12px\",style:{height:'18px'},children:account&&t('Balance: %balance%',{balance:balanceDisplay})}),/*#__PURE__*/_jsx(Slider,{name:\"balance\",min:0,max:100,value:percent,onValueChanged:handlePercentChange,valueLabel:account?\"\".concat(percent.toFixed(percent>0?1:0),\"%\"):'',step:0.01,disabled:!account||isTxPending,mb:\"4px\",className:!account||isTxPending?'':'swiper-no-swiping'}),/*#__PURE__*/_jsxs(Flex,{alignItems:\"center\",justifyContent:\"space-between\",mb:\"16px\",children:[percentShortcuts.map(percentShortcut=>{const handleClick=()=>{handlePercentChange(percentShortcut);};return/*#__PURE__*/_jsx(Button,{scale:\"xs\",variant:\"tertiary\",onClick:handleClick,disabled:!account||isTxPending,style:{flex:1},children:\"\".concat(percentShortcut,\"%\")},percentShortcut);}),/*#__PURE__*/_jsx(Button,{scale:\"xs\",variant:\"tertiary\",onClick:()=>handlePercentChange(100),disabled:!account||isTxPending,children:t('Max')})]}),/*#__PURE__*/_jsx(Box,{mb:\"8px\",children:account?/*#__PURE__*/_jsx(Button,{width:\"100%\",disabled:!account||disabled,onClick:handleEnterPosition,isLoading:isTxPending,endIcon:isTxPending?/*#__PURE__*/_jsx(AutoRenewIcon,{color:\"currentColor\",spin:true}):null,children:t(key)}):/*#__PURE__*/_jsx(ConnectWalletButton,{width:\"100%\"})}),/*#__PURE__*/_jsx(Text,{as:\"p\",fontSize:\"12px\",lineHeight:1,color:\"textSubtle\",children:t('You wonâ€™t be able to remove or change your position once you enter it.')})]})]});};export default SetPositionCard;","map":{"version":3,"names":["React","useEffect","useMemo","useState","ArrowBackIcon","CardBody","CardHeader","Flex","Heading","IconButton","Button","BinanceIcon","Text","BalanceInput","Slider","Box","AutoRenewIcon","ethers","parseUnits","useWeb3React","useGetMinBetAmount","useTranslation","usePredictionsContract","useGetBnbBalance","useToast","BetPosition","formatBigNumber","formatFixedNumber","ConnectWalletButton","PositionTag","useSwiper","FlexRow","Card","jsx","_jsx","jsxs","_jsxs","gasPrice","dust","percentShortcuts","getButtonProps","value","bnbBalance","minBetAmountBalance","hasSufficientBalance","gt","lte","key","disabled","eq","lt","getValueAsEthersBn","valueAsFloat","parseFloat","Number","isNaN","BigNumber","from","SetPositionCard","_ref","position","togglePosition","onBack","onSuccess","setValue","isTxPending","setIsTxPending","errorMessage","setErrorMessage","percent","setPercent","account","swiper","balance","minBetAmount","t","toastError","predictionsContract","bnbBalanceAsBn","toString","maxBalance","sub","balanceDisplay","valueAsBn","showFieldWarning","handleInputChange","input","inputAsBn","inputAsFn","FixedNumber","maxValueAsFn","hundredAsFn","percentage","divUnsafe","mulUnsafe","percentageAsFloat","toUnsafeFloat","handlePercentChange","sliderPercent","sliderPercentAsFn","toFixed","balancePercentage","handleGoBack","handleMouseOver","keyboard","disable","mousewheel","detachEvents","handleMouseOut","enable","attachEvents","handleEnterPosition","betMethod","BULL","tx","receipt","wait","transactionHash","inputAmount","data","num","token","onMouseOver","onMouseOut","children","p","alignItems","variant","scale","onClick","mr","width","betPosition","py","justifyContent","mb","textAlign","color","bold","textTransform","onUserInput","isWarning","inputProps","fontSize","mt","style","height","name","min","max","onValueChanged","valueLabel","concat","step","className","map","percentShortcut","handleClick","flex","isLoading","endIcon","spin","as","lineHeight"],"sources":["C:/Users/frkul/Documents/swapUI_pancake-frontend/src/views/Predictions/components/RoundCard/SetPositionCard.tsx"],"sourcesContent":["import React, { useEffect, useMemo, useState } from 'react'\r\nimport {\r\n  ArrowBackIcon,\r\n  CardBody,\r\n  CardHeader,\r\n  Flex,\r\n  Heading,\r\n  IconButton,\r\n  Button,\r\n  BinanceIcon,\r\n  Text,\r\n  BalanceInput,\r\n  Slider,\r\n  Box,\r\n  AutoRenewIcon,\r\n} from '@pancakeswap/uikit'\r\nimport { ethers } from 'ethers'\r\nimport { parseUnits } from 'ethers/lib/utils'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useGetMinBetAmount } from 'state/hooks'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { usePredictionsContract } from 'hooks/useContract'\r\nimport { useGetBnbBalance } from 'hooks/useTokenBalance'\r\nimport useToast from 'hooks/useToast'\r\nimport { BetPosition } from 'state/types'\r\nimport { formatBigNumber, formatFixedNumber } from 'utils/formatBalance'\r\nimport ConnectWalletButton from 'components/ConnectWalletButton'\r\nimport PositionTag from '../PositionTag'\r\nimport useSwiper from '../../hooks/useSwiper'\r\nimport FlexRow from '../FlexRow'\r\nimport Card from './Card'\r\n\r\ninterface SetPositionCardProps {\r\n  position: BetPosition\r\n  togglePosition: () => void\r\n  onBack: () => void\r\n  onSuccess: (decimalValue: string, hash: string) => Promise<void>\r\n}\r\n\r\n// /!\\ TEMPORARY /!\\\r\n// Set default gasPrice (6 gwei) when calling BetBull/BetBear before new contract is released fixing this 'issue'.\r\n// TODO: Remove on beta-v2 smart contract release.\r\nconst gasPrice = parseUnits('6', 'gwei')\r\nconst dust = parseUnits('0.01', 18)\r\nconst percentShortcuts = [10, 25, 50, 75]\r\n\r\nconst getButtonProps = (\r\n  value: ethers.BigNumber,\r\n  bnbBalance: ethers.BigNumber,\r\n  minBetAmountBalance: ethers.BigNumber,\r\n) => {\r\n  const hasSufficientBalance = () => {\r\n    if (value.gt(0)) {\r\n      return value.lte(bnbBalance)\r\n    }\r\n    return bnbBalance.gt(0)\r\n  }\r\n\r\n  if (!hasSufficientBalance()) {\r\n    return { key: 'Insufficient BNB balance', disabled: true }\r\n  }\r\n\r\n  if (value.eq(0)) {\r\n    return { key: 'Enter an amount', disabled: true }\r\n  }\r\n\r\n  return { key: 'Confirm', disabled: value.lt(minBetAmountBalance) }\r\n}\r\n\r\nconst getValueAsEthersBn = (value: string) => {\r\n  const valueAsFloat = parseFloat(value)\r\n  return Number.isNaN(valueAsFloat) ? ethers.BigNumber.from(0) : parseUnits(value)\r\n}\r\n\r\nconst SetPositionCard: React.FC<SetPositionCardProps> = ({ position, togglePosition, onBack, onSuccess }) => {\r\n  const [value, setValue] = useState('')\r\n  const [isTxPending, setIsTxPending] = useState(false)\r\n  const [errorMessage, setErrorMessage] = useState(null)\r\n  const [percent, setPercent] = useState(0)\r\n\r\n  const { account } = useWeb3React()\r\n  const { swiper } = useSwiper()\r\n  const { balance: bnbBalance } = useGetBnbBalance()\r\n  const minBetAmount = useGetMinBetAmount()\r\n  const { t } = useTranslation()\r\n  const { toastError } = useToast()\r\n  const predictionsContract = usePredictionsContract()\r\n\r\n  // Convert bnb balance to ethers.BigNumber\r\n  const bnbBalanceAsBn = useMemo(() => {\r\n    return ethers.BigNumber.from(bnbBalance.toString())\r\n  }, [bnbBalance])\r\n  const maxBalance = useMemo(() => {\r\n    return bnbBalanceAsBn.gt(dust) ? bnbBalanceAsBn.sub(dust) : dust\r\n  }, [bnbBalanceAsBn])\r\n  const balanceDisplay = formatBigNumber(bnbBalanceAsBn)\r\n\r\n  const valueAsBn = getValueAsEthersBn(value)\r\n  const showFieldWarning = account && valueAsBn.gt(0) && errorMessage !== null\r\n\r\n  const handleInputChange = (input: string) => {\r\n    const inputAsBn = getValueAsEthersBn(input)\r\n\r\n    if (inputAsBn.eq(0)) {\r\n      setPercent(0)\r\n    } else {\r\n      const inputAsFn = ethers.FixedNumber.from(inputAsBn)\r\n      const maxValueAsFn = ethers.FixedNumber.from(maxBalance)\r\n      const hundredAsFn = ethers.FixedNumber.from(100)\r\n      const percentage = inputAsFn.divUnsafe(maxValueAsFn).mulUnsafe(hundredAsFn)\r\n      const percentageAsFloat = percentage.toUnsafeFloat()\r\n\r\n      setPercent(percentageAsFloat > 100 ? 100 : percentageAsFloat)\r\n    }\r\n    setValue(input)\r\n  }\r\n\r\n  const handlePercentChange = (sliderPercent: number) => {\r\n    if (sliderPercent > 0) {\r\n      const maxValueAsFn = ethers.FixedNumber.from(maxBalance)\r\n      const hundredAsFn = ethers.FixedNumber.from(100)\r\n      const sliderPercentAsFn = ethers.FixedNumber.from(sliderPercent.toFixed(18)).divUnsafe(hundredAsFn)\r\n      const balancePercentage = maxValueAsFn.mulUnsafe(sliderPercentAsFn)\r\n      setValue(formatFixedNumber(balancePercentage))\r\n    } else {\r\n      setValue('')\r\n    }\r\n    setPercent(sliderPercent)\r\n  }\r\n\r\n  // Clear value\r\n  const handleGoBack = () => {\r\n    setValue('')\r\n    setPercent(0)\r\n    onBack()\r\n  }\r\n\r\n  // Disable the swiper events to avoid conflicts\r\n  const handleMouseOver = () => {\r\n    swiper.keyboard.disable()\r\n    swiper.mousewheel.disable()\r\n    swiper.detachEvents()\r\n  }\r\n\r\n  const handleMouseOut = () => {\r\n    swiper.keyboard.enable()\r\n    swiper.mousewheel.enable()\r\n    swiper.attachEvents()\r\n  }\r\n\r\n  const { key, disabled } = getButtonProps(valueAsBn, maxBalance, minBetAmount)\r\n\r\n  const handleEnterPosition = async () => {\r\n    const betMethod = position === BetPosition.BULL ? 'betBull' : 'betBear'\r\n\r\n    try {\r\n      const tx = await predictionsContract[betMethod]({ value: valueAsBn.toString(), gasPrice })\r\n      setIsTxPending(true)\r\n      const receipt = await tx.wait()\r\n      onSuccess(valueAsBn.toString(), receipt.transactionHash as string)\r\n    } catch {\r\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\r\n    } finally {\r\n      setIsTxPending(false)\r\n    }\r\n  }\r\n\r\n  // Warnings\r\n  useEffect(() => {\r\n    const inputAmount = getValueAsEthersBn(value)\r\n    const hasSufficientBalance = inputAmount.gt(0) && inputAmount.lte(maxBalance)\r\n\r\n    if (!hasSufficientBalance) {\r\n      setErrorMessage({ key: 'Insufficient BNB balance' })\r\n    } else if (inputAmount.gt(0) && inputAmount.lt(minBetAmount)) {\r\n      setErrorMessage({\r\n        key: 'A minimum amount of %num% %token% is required',\r\n        data: { num: formatBigNumber(minBetAmount), token: 'BNB' },\r\n      })\r\n    } else {\r\n      setErrorMessage(null)\r\n    }\r\n  }, [value, maxBalance, minBetAmount, setErrorMessage])\r\n\r\n  return (\r\n    <Card onMouseOver={handleMouseOver} onMouseOut={handleMouseOut}>\r\n      <CardHeader p=\"16px\">\r\n        <Flex alignItems=\"center\">\r\n          <IconButton variant=\"text\" scale=\"sm\" onClick={handleGoBack} mr=\"8px\">\r\n            <ArrowBackIcon width=\"24px\" />\r\n          </IconButton>\r\n          <FlexRow>\r\n            <Heading scale=\"md\">{t('Set Position')}</Heading>\r\n          </FlexRow>\r\n          <PositionTag betPosition={position} onClick={togglePosition}>\r\n            {position === BetPosition.BULL ? t('Up') : t('Down')}\r\n          </PositionTag>\r\n        </Flex>\r\n      </CardHeader>\r\n      <CardBody py=\"16px\">\r\n        <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\r\n          <Text textAlign=\"right\" color=\"textSubtle\">\r\n            {t('Commit')}:\r\n          </Text>\r\n          <Flex alignItems=\"center\">\r\n            <BinanceIcon mr=\"4px  \" />\r\n            <Text bold textTransform=\"uppercase\">\r\n              BNB\r\n            </Text>\r\n          </Flex>\r\n        </Flex>\r\n        <BalanceInput\r\n          value={value}\r\n          onUserInput={handleInputChange}\r\n          isWarning={showFieldWarning}\r\n          inputProps={{ disabled: !account || isTxPending }}\r\n        />\r\n        {showFieldWarning && (\r\n          <Text color=\"failure\" fontSize=\"12px\" mt=\"4px\" textAlign=\"right\">\r\n            {t(errorMessage.key, errorMessage.data)}\r\n          </Text>\r\n        )}\r\n        <Text textAlign=\"right\" mb=\"16px\" color=\"textSubtle\" fontSize=\"12px\" style={{ height: '18px' }}>\r\n          {account && t('Balance: %balance%', { balance: balanceDisplay })}\r\n        </Text>\r\n        <Slider\r\n          name=\"balance\"\r\n          min={0}\r\n          max={100}\r\n          value={percent}\r\n          onValueChanged={handlePercentChange}\r\n          valueLabel={account ? `${percent.toFixed(percent > 0 ? 1 : 0)}%` : ''}\r\n          step={0.01}\r\n          disabled={!account || isTxPending}\r\n          mb=\"4px\"\r\n          className={!account || isTxPending ? '' : 'swiper-no-swiping'}\r\n        />\r\n        <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"16px\">\r\n          {percentShortcuts.map((percentShortcut) => {\r\n            const handleClick = () => {\r\n              handlePercentChange(percentShortcut)\r\n            }\r\n\r\n            return (\r\n              <Button\r\n                key={percentShortcut}\r\n                scale=\"xs\"\r\n                variant=\"tertiary\"\r\n                onClick={handleClick}\r\n                disabled={!account || isTxPending}\r\n                style={{ flex: 1 }}\r\n              >\r\n                {`${percentShortcut}%`}\r\n              </Button>\r\n            )\r\n          })}\r\n          <Button\r\n            scale=\"xs\"\r\n            variant=\"tertiary\"\r\n            onClick={() => handlePercentChange(100)}\r\n            disabled={!account || isTxPending}\r\n          >\r\n            {t('Max')}\r\n          </Button>\r\n        </Flex>\r\n        <Box mb=\"8px\">\r\n          {account ? (\r\n            <Button\r\n              width=\"100%\"\r\n              disabled={!account || disabled}\r\n              onClick={handleEnterPosition}\r\n              isLoading={isTxPending}\r\n              endIcon={isTxPending ? <AutoRenewIcon color=\"currentColor\" spin /> : null}\r\n            >\r\n              {t(key)}\r\n            </Button>\r\n          ) : (\r\n            <ConnectWalletButton width=\"100%\" />\r\n          )}\r\n        </Box>\r\n        <Text as=\"p\" fontSize=\"12px\" lineHeight={1} color=\"textSubtle\">\r\n          {t('You wonâ€™t be able to remove or change your position once you enter it.')}\r\n        </Text>\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default SetPositionCard\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,OAAO,CAAEC,QAAQ,KAAQ,OAAO,CAC3D,OACEC,aAAa,CACbC,QAAQ,CACRC,UAAU,CACVC,IAAI,CACJC,OAAO,CACPC,UAAU,CACVC,MAAM,CACNC,WAAW,CACXC,IAAI,CACJC,YAAY,CACZC,MAAM,CACNC,GAAG,CACHC,aAAa,KACR,oBAAoB,CAC3B,OAASC,MAAM,KAAQ,QAAQ,CAC/B,OAASC,UAAU,KAAQ,kBAAkB,CAC7C,OAASC,YAAY,KAAQ,kBAAkB,CAC/C,OAASC,kBAAkB,KAAQ,aAAa,CAChD,OAASC,cAAc,KAAQ,uBAAuB,CACtD,OAASC,sBAAsB,KAAQ,mBAAmB,CAC1D,OAASC,gBAAgB,KAAQ,uBAAuB,CACxD,MAAO,CAAAC,QAAQ,KAAM,gBAAgB,CACrC,OAASC,WAAW,KAAQ,aAAa,CACzC,OAASC,eAAe,CAAEC,iBAAiB,KAAQ,qBAAqB,CACxE,MAAO,CAAAC,mBAAmB,KAAM,gCAAgC,CAChE,MAAO,CAAAC,WAAW,KAAM,gBAAgB,CACxC,MAAO,CAAAC,SAAS,KAAM,uBAAuB,CAC7C,MAAO,CAAAC,OAAO,KAAM,YAAY,CAChC,MAAO,CAAAC,IAAI,KAAM,QAAQ,QAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBASzB;AACA;AACA;AACA,KAAM,CAAAC,QAAQ,CAAGnB,UAAU,CAAC,GAAG,CAAE,MAAM,CAAC,CACxC,KAAM,CAAAoB,IAAI,CAAGpB,UAAU,CAAC,MAAM,CAAE,EAAE,CAAC,CACnC,KAAM,CAAAqB,gBAAgB,CAAG,CAAC,EAAE,CAAE,EAAE,CAAE,EAAE,CAAE,EAAE,CAAC,CAEzC,KAAM,CAAAC,cAAc,CAAGA,CACrBC,KAAuB,CACvBC,UAA4B,CAC5BC,mBAAqC,GAClC,CACH,KAAM,CAAAC,oBAAoB,CAAGA,CAAA,GAAM,CACjC,GAAIH,KAAK,CAACI,EAAE,CAAC,CAAC,CAAC,CAAE,CACf,MAAO,CAAAJ,KAAK,CAACK,GAAG,CAACJ,UAAU,CAAC,CAC9B,CACA,MAAO,CAAAA,UAAU,CAACG,EAAE,CAAC,CAAC,CAAC,CACzB,CAAC,CAED,GAAI,CAACD,oBAAoB,CAAC,CAAC,CAAE,CAC3B,MAAO,CAAEG,GAAG,CAAE,0BAA0B,CAAEC,QAAQ,CAAE,IAAK,CAAC,CAC5D,CAEA,GAAIP,KAAK,CAACQ,EAAE,CAAC,CAAC,CAAC,CAAE,CACf,MAAO,CAAEF,GAAG,CAAE,iBAAiB,CAAEC,QAAQ,CAAE,IAAK,CAAC,CACnD,CAEA,MAAO,CAAED,GAAG,CAAE,SAAS,CAAEC,QAAQ,CAAEP,KAAK,CAACS,EAAE,CAACP,mBAAmB,CAAE,CAAC,CACpE,CAAC,CAED,KAAM,CAAAQ,kBAAkB,CAAIV,KAAa,EAAK,CAC5C,KAAM,CAAAW,YAAY,CAAGC,UAAU,CAACZ,KAAK,CAAC,CACtC,MAAO,CAAAa,MAAM,CAACC,KAAK,CAACH,YAAY,CAAC,CAAGnC,MAAM,CAACuC,SAAS,CAACC,IAAI,CAAC,CAAC,CAAC,CAAGvC,UAAU,CAACuB,KAAK,CAAC,CAClF,CAAC,CAED,KAAM,CAAAiB,eAA+C,CAAGC,IAAA,EAAqD,IAApD,CAAEC,QAAQ,CAAEC,cAAc,CAAEC,MAAM,CAAEC,SAAU,CAAC,CAAAJ,IAAA,CACtG,KAAM,CAAClB,KAAK,CAAEuB,QAAQ,CAAC,CAAG7D,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAAC8D,WAAW,CAAEC,cAAc,CAAC,CAAG/D,QAAQ,CAAC,KAAK,CAAC,CACrD,KAAM,CAACgE,YAAY,CAAEC,eAAe,CAAC,CAAGjE,QAAQ,CAAC,IAAI,CAAC,CACtD,KAAM,CAACkE,OAAO,CAAEC,UAAU,CAAC,CAAGnE,QAAQ,CAAC,CAAC,CAAC,CAEzC,KAAM,CAAEoE,OAAQ,CAAC,CAAGpD,YAAY,CAAC,CAAC,CAClC,KAAM,CAAEqD,MAAO,CAAC,CAAG1C,SAAS,CAAC,CAAC,CAC9B,KAAM,CAAE2C,OAAO,CAAE/B,UAAW,CAAC,CAAGnB,gBAAgB,CAAC,CAAC,CAClD,KAAM,CAAAmD,YAAY,CAAGtD,kBAAkB,CAAC,CAAC,CACzC,KAAM,CAAEuD,CAAE,CAAC,CAAGtD,cAAc,CAAC,CAAC,CAC9B,KAAM,CAAEuD,UAAW,CAAC,CAAGpD,QAAQ,CAAC,CAAC,CACjC,KAAM,CAAAqD,mBAAmB,CAAGvD,sBAAsB,CAAC,CAAC,CAEpD;AACA,KAAM,CAAAwD,cAAc,CAAG5E,OAAO,CAAC,IAAM,CACnC,MAAO,CAAAe,MAAM,CAACuC,SAAS,CAACC,IAAI,CAACf,UAAU,CAACqC,QAAQ,CAAC,CAAC,CAAC,CACrD,CAAC,CAAE,CAACrC,UAAU,CAAC,CAAC,CAChB,KAAM,CAAAsC,UAAU,CAAG9E,OAAO,CAAC,IAAM,CAC/B,MAAO,CAAA4E,cAAc,CAACjC,EAAE,CAACP,IAAI,CAAC,CAAGwC,cAAc,CAACG,GAAG,CAAC3C,IAAI,CAAC,CAAGA,IAAI,CAClE,CAAC,CAAE,CAACwC,cAAc,CAAC,CAAC,CACpB,KAAM,CAAAI,cAAc,CAAGxD,eAAe,CAACoD,cAAc,CAAC,CAEtD,KAAM,CAAAK,SAAS,CAAGhC,kBAAkB,CAACV,KAAK,CAAC,CAC3C,KAAM,CAAA2C,gBAAgB,CAAGb,OAAO,EAAIY,SAAS,CAACtC,EAAE,CAAC,CAAC,CAAC,EAAIsB,YAAY,GAAK,IAAI,CAE5E,KAAM,CAAAkB,iBAAiB,CAAIC,KAAa,EAAK,CAC3C,KAAM,CAAAC,SAAS,CAAGpC,kBAAkB,CAACmC,KAAK,CAAC,CAE3C,GAAIC,SAAS,CAACtC,EAAE,CAAC,CAAC,CAAC,CAAE,CACnBqB,UAAU,CAAC,CAAC,CAAC,CACf,CAAC,IAAM,CACL,KAAM,CAAAkB,SAAS,CAAGvE,MAAM,CAACwE,WAAW,CAAChC,IAAI,CAAC8B,SAAS,CAAC,CACpD,KAAM,CAAAG,YAAY,CAAGzE,MAAM,CAACwE,WAAW,CAAChC,IAAI,CAACuB,UAAU,CAAC,CACxD,KAAM,CAAAW,WAAW,CAAG1E,MAAM,CAACwE,WAAW,CAAChC,IAAI,CAAC,GAAG,CAAC,CAChD,KAAM,CAAAmC,UAAU,CAAGJ,SAAS,CAACK,SAAS,CAACH,YAAY,CAAC,CAACI,SAAS,CAACH,WAAW,CAAC,CAC3E,KAAM,CAAAI,iBAAiB,CAAGH,UAAU,CAACI,aAAa,CAAC,CAAC,CAEpD1B,UAAU,CAACyB,iBAAiB,CAAG,GAAG,CAAG,GAAG,CAAGA,iBAAiB,CAAC,CAC/D,CACA/B,QAAQ,CAACsB,KAAK,CAAC,CACjB,CAAC,CAED,KAAM,CAAAW,mBAAmB,CAAIC,aAAqB,EAAK,CACrD,GAAIA,aAAa,CAAG,CAAC,CAAE,CACrB,KAAM,CAAAR,YAAY,CAAGzE,MAAM,CAACwE,WAAW,CAAChC,IAAI,CAACuB,UAAU,CAAC,CACxD,KAAM,CAAAW,WAAW,CAAG1E,MAAM,CAACwE,WAAW,CAAChC,IAAI,CAAC,GAAG,CAAC,CAChD,KAAM,CAAA0C,iBAAiB,CAAGlF,MAAM,CAACwE,WAAW,CAAChC,IAAI,CAACyC,aAAa,CAACE,OAAO,CAAC,EAAE,CAAC,CAAC,CAACP,SAAS,CAACF,WAAW,CAAC,CACnG,KAAM,CAAAU,iBAAiB,CAAGX,YAAY,CAACI,SAAS,CAACK,iBAAiB,CAAC,CACnEnC,QAAQ,CAACrC,iBAAiB,CAAC0E,iBAAiB,CAAC,CAAC,CAChD,CAAC,IAAM,CACLrC,QAAQ,CAAC,EAAE,CAAC,CACd,CACAM,UAAU,CAAC4B,aAAa,CAAC,CAC3B,CAAC,CAED;AACA,KAAM,CAAAI,YAAY,CAAGA,CAAA,GAAM,CACzBtC,QAAQ,CAAC,EAAE,CAAC,CACZM,UAAU,CAAC,CAAC,CAAC,CACbR,MAAM,CAAC,CAAC,CACV,CAAC,CAED;AACA,KAAM,CAAAyC,eAAe,CAAGA,CAAA,GAAM,CAC5B/B,MAAM,CAACgC,QAAQ,CAACC,OAAO,CAAC,CAAC,CACzBjC,MAAM,CAACkC,UAAU,CAACD,OAAO,CAAC,CAAC,CAC3BjC,MAAM,CAACmC,YAAY,CAAC,CAAC,CACvB,CAAC,CAED,KAAM,CAAAC,cAAc,CAAGA,CAAA,GAAM,CAC3BpC,MAAM,CAACgC,QAAQ,CAACK,MAAM,CAAC,CAAC,CACxBrC,MAAM,CAACkC,UAAU,CAACG,MAAM,CAAC,CAAC,CAC1BrC,MAAM,CAACsC,YAAY,CAAC,CAAC,CACvB,CAAC,CAED,KAAM,CAAE/D,GAAG,CAAEC,QAAS,CAAC,CAAGR,cAAc,CAAC2C,SAAS,CAAEH,UAAU,CAAEN,YAAY,CAAC,CAE7E,KAAM,CAAAqC,mBAAmB,CAAG,KAAAA,CAAA,GAAY,CACtC,KAAM,CAAAC,SAAS,CAAGpD,QAAQ,GAAKnC,WAAW,CAACwF,IAAI,CAAG,SAAS,CAAG,SAAS,CAEvE,GAAI,CACF,KAAM,CAAAC,EAAE,CAAG,KAAM,CAAArC,mBAAmB,CAACmC,SAAS,CAAC,CAAC,CAAEvE,KAAK,CAAE0C,SAAS,CAACJ,QAAQ,CAAC,CAAC,CAAE1C,QAAS,CAAC,CAAC,CAC1F6B,cAAc,CAAC,IAAI,CAAC,CACpB,KAAM,CAAAiD,OAAO,CAAG,KAAM,CAAAD,EAAE,CAACE,IAAI,CAAC,CAAC,CAC/BrD,SAAS,CAACoB,SAAS,CAACJ,QAAQ,CAAC,CAAC,CAAEoC,OAAO,CAACE,eAAyB,CAAC,CACpE,CAAE,KAAM,CACNzC,UAAU,CAACD,CAAC,CAAC,OAAO,CAAC,CAAEA,CAAC,CAAC,oFAAoF,CAAC,CAAC,CACjH,CAAC,OAAS,CACRT,cAAc,CAAC,KAAK,CAAC,CACvB,CACF,CAAC,CAED;AACAjE,SAAS,CAAC,IAAM,CACd,KAAM,CAAAqH,WAAW,CAAGnE,kBAAkB,CAACV,KAAK,CAAC,CAC7C,KAAM,CAAAG,oBAAoB,CAAG0E,WAAW,CAACzE,EAAE,CAAC,CAAC,CAAC,EAAIyE,WAAW,CAACxE,GAAG,CAACkC,UAAU,CAAC,CAE7E,GAAI,CAACpC,oBAAoB,CAAE,CACzBwB,eAAe,CAAC,CAAErB,GAAG,CAAE,0BAA2B,CAAC,CAAC,CACtD,CAAC,IAAM,IAAIuE,WAAW,CAACzE,EAAE,CAAC,CAAC,CAAC,EAAIyE,WAAW,CAACpE,EAAE,CAACwB,YAAY,CAAC,CAAE,CAC5DN,eAAe,CAAC,CACdrB,GAAG,CAAE,+CAA+C,CACpDwE,IAAI,CAAE,CAAEC,GAAG,CAAE9F,eAAe,CAACgD,YAAY,CAAC,CAAE+C,KAAK,CAAE,KAAM,CAC3D,CAAC,CAAC,CACJ,CAAC,IAAM,CACLrD,eAAe,CAAC,IAAI,CAAC,CACvB,CACF,CAAC,CAAE,CAAC3B,KAAK,CAAEuC,UAAU,CAAEN,YAAY,CAAEN,eAAe,CAAC,CAAC,CAEtD,mBACEhC,KAAA,CAACJ,IAAI,EAAC0F,WAAW,CAAEnB,eAAgB,CAACoB,UAAU,CAAEf,cAAe,CAAAgB,QAAA,eAC7D1F,IAAA,CAAC5B,UAAU,EAACuH,CAAC,CAAC,MAAM,CAAAD,QAAA,cAClBxF,KAAA,CAAC7B,IAAI,EAACuH,UAAU,CAAC,QAAQ,CAAAF,QAAA,eACvB1F,IAAA,CAACzB,UAAU,EAACsH,OAAO,CAAC,MAAM,CAACC,KAAK,CAAC,IAAI,CAACC,OAAO,CAAE3B,YAAa,CAAC4B,EAAE,CAAC,KAAK,CAAAN,QAAA,cACnE1F,IAAA,CAAC9B,aAAa,EAAC+H,KAAK,CAAC,MAAM,CAAE,CAAC,CACpB,CAAC,cACbjG,IAAA,CAACH,OAAO,EAAA6F,QAAA,cACN1F,IAAA,CAAC1B,OAAO,EAACwH,KAAK,CAAC,IAAI,CAAAJ,QAAA,CAAEjD,CAAC,CAAC,cAAc,CAAC,CAAU,CAAC,CAC1C,CAAC,cACVzC,IAAA,CAACL,WAAW,EAACuG,WAAW,CAAExE,QAAS,CAACqE,OAAO,CAAEpE,cAAe,CAAA+D,QAAA,CACzDhE,QAAQ,GAAKnC,WAAW,CAACwF,IAAI,CAAGtC,CAAC,CAAC,IAAI,CAAC,CAAGA,CAAC,CAAC,MAAM,CAAC,CACzC,CAAC,EACV,CAAC,CACG,CAAC,cACbvC,KAAA,CAAC/B,QAAQ,EAACgI,EAAE,CAAC,MAAM,CAAAT,QAAA,eACjBxF,KAAA,CAAC7B,IAAI,EAACuH,UAAU,CAAC,QAAQ,CAACQ,cAAc,CAAC,eAAe,CAACC,EAAE,CAAC,KAAK,CAAAX,QAAA,eAC/DxF,KAAA,CAACxB,IAAI,EAAC4H,SAAS,CAAC,OAAO,CAACC,KAAK,CAAC,YAAY,CAAAb,QAAA,EACvCjD,CAAC,CAAC,QAAQ,CAAC,CAAC,GACf,EAAM,CAAC,cACPvC,KAAA,CAAC7B,IAAI,EAACuH,UAAU,CAAC,QAAQ,CAAAF,QAAA,eACvB1F,IAAA,CAACvB,WAAW,EAACuH,EAAE,CAAC,OAAO,CAAE,CAAC,cAC1BhG,IAAA,CAACtB,IAAI,EAAC8H,IAAI,MAACC,aAAa,CAAC,WAAW,CAAAf,QAAA,CAAC,KAErC,CAAM,CAAC,EACH,CAAC,EACH,CAAC,cACP1F,IAAA,CAACrB,YAAY,EACX4B,KAAK,CAAEA,KAAM,CACbmG,WAAW,CAAEvD,iBAAkB,CAC/BwD,SAAS,CAAEzD,gBAAiB,CAC5B0D,UAAU,CAAE,CAAE9F,QAAQ,CAAE,CAACuB,OAAO,EAAIN,WAAY,CAAE,CACnD,CAAC,CACDmB,gBAAgB,eACflD,IAAA,CAACtB,IAAI,EAAC6H,KAAK,CAAC,SAAS,CAACM,QAAQ,CAAC,MAAM,CAACC,EAAE,CAAC,KAAK,CAACR,SAAS,CAAC,OAAO,CAAAZ,QAAA,CAC7DjD,CAAC,CAACR,YAAY,CAACpB,GAAG,CAAEoB,YAAY,CAACoD,IAAI,CAAC,CACnC,CACP,cACDrF,IAAA,CAACtB,IAAI,EAAC4H,SAAS,CAAC,OAAO,CAACD,EAAE,CAAC,MAAM,CAACE,KAAK,CAAC,YAAY,CAACM,QAAQ,CAAC,MAAM,CAACE,KAAK,CAAE,CAAEC,MAAM,CAAE,MAAO,CAAE,CAAAtB,QAAA,CAC5FrD,OAAO,EAAII,CAAC,CAAC,oBAAoB,CAAE,CAAEF,OAAO,CAAES,cAAe,CAAC,CAAC,CAC5D,CAAC,cACPhD,IAAA,CAACpB,MAAM,EACLqI,IAAI,CAAC,SAAS,CACdC,GAAG,CAAE,CAAE,CACPC,GAAG,CAAE,GAAI,CACT5G,KAAK,CAAE4B,OAAQ,CACfiF,cAAc,CAAErD,mBAAoB,CACpCsD,UAAU,CAAEhF,OAAO,IAAAiF,MAAA,CAAMnF,OAAO,CAAC+B,OAAO,CAAC/B,OAAO,CAAG,CAAC,CAAG,CAAC,CAAG,CAAC,CAAC,MAAM,EAAG,CACtEoF,IAAI,CAAE,IAAK,CACXzG,QAAQ,CAAE,CAACuB,OAAO,EAAIN,WAAY,CAClCsE,EAAE,CAAC,KAAK,CACRmB,SAAS,CAAE,CAACnF,OAAO,EAAIN,WAAW,CAAG,EAAE,CAAG,mBAAoB,CAC/D,CAAC,cACF7B,KAAA,CAAC7B,IAAI,EAACuH,UAAU,CAAC,QAAQ,CAACQ,cAAc,CAAC,eAAe,CAACC,EAAE,CAAC,MAAM,CAAAX,QAAA,EAC/DrF,gBAAgB,CAACoH,GAAG,CAAEC,eAAe,EAAK,CACzC,KAAM,CAAAC,WAAW,CAAGA,CAAA,GAAM,CACxB5D,mBAAmB,CAAC2D,eAAe,CAAC,CACtC,CAAC,CAED,mBACE1H,IAAA,CAACxB,MAAM,EAELsH,KAAK,CAAC,IAAI,CACVD,OAAO,CAAC,UAAU,CAClBE,OAAO,CAAE4B,WAAY,CACrB7G,QAAQ,CAAE,CAACuB,OAAO,EAAIN,WAAY,CAClCgF,KAAK,CAAE,CAAEa,IAAI,CAAE,CAAE,CAAE,CAAAlC,QAAA,IAAA4B,MAAA,CAEfI,eAAe,OAPdA,eAQC,CAAC,CAEb,CAAC,CAAC,cACF1H,IAAA,CAACxB,MAAM,EACLsH,KAAK,CAAC,IAAI,CACVD,OAAO,CAAC,UAAU,CAClBE,OAAO,CAAEA,CAAA,GAAMhC,mBAAmB,CAAC,GAAG,CAAE,CACxCjD,QAAQ,CAAE,CAACuB,OAAO,EAAIN,WAAY,CAAA2D,QAAA,CAEjCjD,CAAC,CAAC,KAAK,CAAC,CACH,CAAC,EACL,CAAC,cACPzC,IAAA,CAACnB,GAAG,EAACwH,EAAE,CAAC,KAAK,CAAAX,QAAA,CACVrD,OAAO,cACNrC,IAAA,CAACxB,MAAM,EACLyH,KAAK,CAAC,MAAM,CACZnF,QAAQ,CAAE,CAACuB,OAAO,EAAIvB,QAAS,CAC/BiF,OAAO,CAAElB,mBAAoB,CAC7BgD,SAAS,CAAE9F,WAAY,CACvB+F,OAAO,CAAE/F,WAAW,cAAG/B,IAAA,CAAClB,aAAa,EAACyH,KAAK,CAAC,cAAc,CAACwB,IAAI,MAAE,CAAC,CAAG,IAAK,CAAArC,QAAA,CAEzEjD,CAAC,CAAC5B,GAAG,CAAC,CACD,CAAC,cAETb,IAAA,CAACN,mBAAmB,EAACuG,KAAK,CAAC,MAAM,CAAE,CACpC,CACE,CAAC,cACNjG,IAAA,CAACtB,IAAI,EAACsJ,EAAE,CAAC,GAAG,CAACnB,QAAQ,CAAC,MAAM,CAACoB,UAAU,CAAE,CAAE,CAAC1B,KAAK,CAAC,YAAY,CAAAb,QAAA,CAC3DjD,CAAC,CAAC,wEAAwE,CAAC,CACxE,CAAC,EACC,CAAC,EACP,CAAC,CAEX,CAAC,CAED,cAAe,CAAAjB,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module"}