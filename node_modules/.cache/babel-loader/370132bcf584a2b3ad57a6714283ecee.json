{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Devrim\\\\Documents\\\\swapUIforProspBlast\\\\src\\\\views\\\\Predictions\\\\components\\\\RoundCard\\\\SetPositionCard.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { ArrowBackIcon, CardBody, CardHeader, Flex, Heading, IconButton, Button, BinanceIcon, Text, BalanceInput, Slider, Box, AutoRenewIcon } from '@pancakeswap/uikit';\nimport { ethers } from 'ethers';\nimport { parseUnits } from 'ethers/lib/utils';\nimport { useWeb3React } from '@web3-react/core';\nimport { useGetMinBetAmount } from 'state/hooks';\nimport { useTranslation } from 'contexts/Localization';\nimport { usePredictionsContract } from 'hooks/useContract';\nimport { useGetBnbBalance } from 'hooks/useTokenBalance';\nimport useToast from 'hooks/useToast';\nimport { BetPosition } from 'state/types';\nimport { formatBigNumber, formatFixedNumber } from 'utils/formatBalance';\nimport ConnectWalletButton from 'components/ConnectWalletButton';\nimport PositionTag from '../PositionTag';\nimport useSwiper from '../../hooks/useSwiper';\nimport FlexRow from '../FlexRow';\nimport Card from './Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// /!\\ TEMPORARY /!\\\n// Set default gasPrice (6 gwei) when calling BetBull/BetBear before new contract is released fixing this 'issue'.\n// TODO: Remove on beta-v2 smart contract release.\nconst gasPrice = parseUnits('6', 'gwei');\nconst dust = parseUnits('0.01', 18);\nconst percentShortcuts = [10, 25, 50, 75];\nconst getButtonProps = (value, bnbBalance, minBetAmountBalance) => {\n  const hasSufficientBalance = () => {\n    if (value.gt(0)) {\n      return value.lte(bnbBalance);\n    }\n    return bnbBalance.gt(0);\n  };\n  if (!hasSufficientBalance()) {\n    return {\n      key: 'Insufficient BNB balance',\n      disabled: true\n    };\n  }\n  if (value.eq(0)) {\n    return {\n      key: 'Enter an amount',\n      disabled: true\n    };\n  }\n  return {\n    key: 'Confirm',\n    disabled: value.lt(minBetAmountBalance)\n  };\n};\nconst getValueAsEthersBn = value => {\n  const valueAsFloat = parseFloat(value);\n  return Number.isNaN(valueAsFloat) ? ethers.BigNumber.from(0) : parseUnits(value);\n};\nconst SetPositionCard = ({\n  position,\n  togglePosition,\n  onBack,\n  onSuccess\n}) => {\n  _s();\n  const [value, setValue] = useState('');\n  const [isTxPending, setIsTxPending] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [percent, setPercent] = useState(0);\n  const {\n    account\n  } = useWeb3React();\n  const {\n    swiper\n  } = useSwiper();\n  const {\n    balance: bnbBalance\n  } = useGetBnbBalance();\n  const minBetAmount = useGetMinBetAmount();\n  const {\n    t\n  } = useTranslation();\n  const {\n    toastError\n  } = useToast();\n  const predictionsContract = usePredictionsContract();\n\n  // Convert bnb balance to ethers.BigNumber\n  const bnbBalanceAsBn = useMemo(() => {\n    return ethers.BigNumber.from(bnbBalance.toString());\n  }, [bnbBalance]);\n  const maxBalance = useMemo(() => {\n    return bnbBalanceAsBn.gt(dust) ? bnbBalanceAsBn.sub(dust) : dust;\n  }, [bnbBalanceAsBn]);\n  const balanceDisplay = formatBigNumber(bnbBalanceAsBn);\n  const valueAsBn = getValueAsEthersBn(value);\n  const showFieldWarning = account && valueAsBn.gt(0) && errorMessage !== null;\n  const handleInputChange = input => {\n    const inputAsBn = getValueAsEthersBn(input);\n    if (inputAsBn.eq(0)) {\n      setPercent(0);\n    } else {\n      const inputAsFn = ethers.FixedNumber.from(inputAsBn);\n      const maxValueAsFn = ethers.FixedNumber.from(maxBalance);\n      const hundredAsFn = ethers.FixedNumber.from(100);\n      const percentage = inputAsFn.divUnsafe(maxValueAsFn).mulUnsafe(hundredAsFn);\n      const percentageAsFloat = percentage.toUnsafeFloat();\n      setPercent(percentageAsFloat > 100 ? 100 : percentageAsFloat);\n    }\n    setValue(input);\n  };\n  const handlePercentChange = sliderPercent => {\n    if (sliderPercent > 0) {\n      const maxValueAsFn = ethers.FixedNumber.from(maxBalance);\n      const hundredAsFn = ethers.FixedNumber.from(100);\n      const sliderPercentAsFn = ethers.FixedNumber.from(sliderPercent.toFixed(18)).divUnsafe(hundredAsFn);\n      const balancePercentage = maxValueAsFn.mulUnsafe(sliderPercentAsFn);\n      setValue(formatFixedNumber(balancePercentage));\n    } else {\n      setValue('');\n    }\n    setPercent(sliderPercent);\n  };\n\n  // Clear value\n  const handleGoBack = () => {\n    setValue('');\n    setPercent(0);\n    onBack();\n  };\n\n  // Disable the swiper events to avoid conflicts\n  const handleMouseOver = () => {\n    swiper.keyboard.disable();\n    swiper.mousewheel.disable();\n    swiper.detachEvents();\n  };\n  const handleMouseOut = () => {\n    swiper.keyboard.enable();\n    swiper.mousewheel.enable();\n    swiper.attachEvents();\n  };\n  const {\n    key,\n    disabled\n  } = getButtonProps(valueAsBn, maxBalance, minBetAmount);\n  const handleEnterPosition = async () => {\n    const betMethod = position === BetPosition.BULL ? 'betBull' : 'betBear';\n    try {\n      const tx = await predictionsContract[betMethod]({\n        value: valueAsBn.toString(),\n        gasPrice\n      });\n      setIsTxPending(true);\n      const receipt = await tx.wait();\n      onSuccess(valueAsBn.toString(), receipt.transactionHash);\n    } catch {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'));\n    } finally {\n      setIsTxPending(false);\n    }\n  };\n\n  // Warnings\n  useEffect(() => {\n    const inputAmount = getValueAsEthersBn(value);\n    const hasSufficientBalance = inputAmount.gt(0) && inputAmount.lte(maxBalance);\n    if (!hasSufficientBalance) {\n      setErrorMessage({\n        key: 'Insufficient BNB balance'\n      });\n    } else if (inputAmount.gt(0) && inputAmount.lt(minBetAmount)) {\n      setErrorMessage({\n        key: 'A minimum amount of %num% %token% is required',\n        data: {\n          num: formatBigNumber(minBetAmount),\n          token: 'BNB'\n        }\n      });\n    } else {\n      setErrorMessage(null);\n    }\n  }, [value, maxBalance, minBetAmount, setErrorMessage]);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    onMouseOver: handleMouseOver,\n    onMouseOut: handleMouseOut,\n    children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n      p: \"16px\",\n      children: /*#__PURE__*/_jsxDEV(Flex, {\n        alignItems: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          variant: \"text\",\n          scale: \"sm\",\n          onClick: handleGoBack,\n          mr: \"8px\",\n          children: /*#__PURE__*/_jsxDEV(ArrowBackIcon, {\n            width: \"24px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FlexRow, {\n          children: /*#__PURE__*/_jsxDEV(Heading, {\n            scale: \"md\",\n            children: t('Set Position')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PositionTag, {\n          betPosition: position,\n          onClick: togglePosition,\n          children: position === BetPosition.BULL ? t('Up') : t('Down')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n      py: \"16px\",\n      children: [/*#__PURE__*/_jsxDEV(Flex, {\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n        mb: \"8px\",\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          textAlign: \"right\",\n          color: \"textSubtle\",\n          children: [t('Commit'), \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Flex, {\n          alignItems: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(BinanceIcon, {\n            mr: \"4px  \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            bold: true,\n            textTransform: \"uppercase\",\n            children: \"BNB\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(BalanceInput, {\n        value: value,\n        onUserInput: handleInputChange,\n        isWarning: showFieldWarning,\n        inputProps: {\n          disabled: !account || isTxPending\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this), showFieldWarning && /*#__PURE__*/_jsxDEV(Text, {\n        color: \"failure\",\n        fontSize: \"12px\",\n        mt: \"4px\",\n        textAlign: \"right\",\n        children: t(errorMessage.key, errorMessage.data)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        textAlign: \"right\",\n        mb: \"16px\",\n        color: \"textSubtle\",\n        fontSize: \"12px\",\n        style: {\n          height: '18px'\n        },\n        children: account && t('Balance: %balance%', {\n          balance: balanceDisplay\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Slider, {\n        name: \"balance\",\n        min: 0,\n        max: 100,\n        value: percent,\n        onValueChanged: handlePercentChange,\n        valueLabel: account ? `${percent.toFixed(percent > 0 ? 1 : 0)}%` : '',\n        step: 0.01,\n        disabled: !account || isTxPending,\n        mb: \"4px\",\n        className: !account || isTxPending ? '' : 'swiper-no-swiping'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n        mb: \"16px\",\n        children: [percentShortcuts.map(percentShortcut => {\n          const handleClick = () => {\n            handlePercentChange(percentShortcut);\n          };\n          return /*#__PURE__*/_jsxDEV(Button, {\n            scale: \"xs\",\n            variant: \"tertiary\",\n            onClick: handleClick,\n            disabled: !account || isTxPending,\n            style: {\n              flex: 1\n            },\n            children: `${percentShortcut}%`\n          }, percentShortcut, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 15\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(Button, {\n          scale: \"xs\",\n          variant: \"tertiary\",\n          onClick: () => handlePercentChange(100),\n          disabled: !account || isTxPending,\n          children: t('Max')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        mb: \"8px\",\n        children: account ? /*#__PURE__*/_jsxDEV(Button, {\n          width: \"100%\",\n          disabled: !account || disabled,\n          onClick: handleEnterPosition,\n          isLoading: isTxPending,\n          endIcon: isTxPending ? /*#__PURE__*/_jsxDEV(AutoRenewIcon, {\n            color: \"currentColor\",\n            spin: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 38\n          }, this) : null,\n          children: t(key)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(ConnectWalletButton, {\n          width: \"100%\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        as: \"p\",\n        fontSize: \"12px\",\n        lineHeight: 1,\n        color: \"textSubtle\",\n        children: t('You won’t be able to remove or change your position once you enter it.')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 186,\n    columnNumber: 5\n  }, this);\n};\n_s(SetPositionCard, \"VTTTI6IEsledEjC5QxIo0FIqFCE=\", false, function () {\n  return [useWeb3React, useSwiper, useGetBnbBalance, useGetMinBetAmount, useTranslation, useToast, usePredictionsContract];\n});\n_c = SetPositionCard;\nexport default SetPositionCard;\nvar _c;\n$RefreshReg$(_c, \"SetPositionCard\");","map":{"version":3,"names":["React","useEffect","useMemo","useState","ArrowBackIcon","CardBody","CardHeader","Flex","Heading","IconButton","Button","BinanceIcon","Text","BalanceInput","Slider","Box","AutoRenewIcon","ethers","parseUnits","useWeb3React","useGetMinBetAmount","useTranslation","usePredictionsContract","useGetBnbBalance","useToast","BetPosition","formatBigNumber","formatFixedNumber","ConnectWalletButton","PositionTag","useSwiper","FlexRow","Card","jsxDEV","_jsxDEV","gasPrice","dust","percentShortcuts","getButtonProps","value","bnbBalance","minBetAmountBalance","hasSufficientBalance","gt","lte","key","disabled","eq","lt","getValueAsEthersBn","valueAsFloat","parseFloat","Number","isNaN","BigNumber","from","SetPositionCard","position","togglePosition","onBack","onSuccess","_s","setValue","isTxPending","setIsTxPending","errorMessage","setErrorMessage","percent","setPercent","account","swiper","balance","minBetAmount","t","toastError","predictionsContract","bnbBalanceAsBn","toString","maxBalance","sub","balanceDisplay","valueAsBn","showFieldWarning","handleInputChange","input","inputAsBn","inputAsFn","FixedNumber","maxValueAsFn","hundredAsFn","percentage","divUnsafe","mulUnsafe","percentageAsFloat","toUnsafeFloat","handlePercentChange","sliderPercent","sliderPercentAsFn","toFixed","balancePercentage","handleGoBack","handleMouseOver","keyboard","disable","mousewheel","detachEvents","handleMouseOut","enable","attachEvents","handleEnterPosition","betMethod","BULL","tx","receipt","wait","transactionHash","inputAmount","data","num","token","onMouseOver","onMouseOut","children","p","alignItems","variant","scale","onClick","mr","width","fileName","_jsxFileName","lineNumber","columnNumber","betPosition","py","justifyContent","mb","textAlign","color","bold","textTransform","onUserInput","isWarning","inputProps","fontSize","mt","style","height","name","min","max","onValueChanged","valueLabel","step","className","map","percentShortcut","handleClick","flex","isLoading","endIcon","spin","as","lineHeight","_c","$RefreshReg$"],"sources":["C:/Users/Devrim/Documents/swapUIforProspBlast/src/views/Predictions/components/RoundCard/SetPositionCard.tsx"],"sourcesContent":["import React, { useEffect, useMemo, useState } from 'react'\r\nimport {\r\n  ArrowBackIcon,\r\n  CardBody,\r\n  CardHeader,\r\n  Flex,\r\n  Heading,\r\n  IconButton,\r\n  Button,\r\n  BinanceIcon,\r\n  Text,\r\n  BalanceInput,\r\n  Slider,\r\n  Box,\r\n  AutoRenewIcon,\r\n} from '@pancakeswap/uikit'\r\nimport { ethers } from 'ethers'\r\nimport { parseUnits } from 'ethers/lib/utils'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useGetMinBetAmount } from 'state/hooks'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { usePredictionsContract } from 'hooks/useContract'\r\nimport { useGetBnbBalance } from 'hooks/useTokenBalance'\r\nimport useToast from 'hooks/useToast'\r\nimport { BetPosition } from 'state/types'\r\nimport { formatBigNumber, formatFixedNumber } from 'utils/formatBalance'\r\nimport ConnectWalletButton from 'components/ConnectWalletButton'\r\nimport PositionTag from '../PositionTag'\r\nimport useSwiper from '../../hooks/useSwiper'\r\nimport FlexRow from '../FlexRow'\r\nimport Card from './Card'\r\n\r\ninterface SetPositionCardProps {\r\n  position: BetPosition\r\n  togglePosition: () => void\r\n  onBack: () => void\r\n  onSuccess: (decimalValue: string, hash: string) => Promise<void>\r\n}\r\n\r\n// /!\\ TEMPORARY /!\\\r\n// Set default gasPrice (6 gwei) when calling BetBull/BetBear before new contract is released fixing this 'issue'.\r\n// TODO: Remove on beta-v2 smart contract release.\r\nconst gasPrice = parseUnits('6', 'gwei')\r\nconst dust = parseUnits('0.01', 18)\r\nconst percentShortcuts = [10, 25, 50, 75]\r\n\r\nconst getButtonProps = (\r\n  value: ethers.BigNumber,\r\n  bnbBalance: ethers.BigNumber,\r\n  minBetAmountBalance: ethers.BigNumber,\r\n) => {\r\n  const hasSufficientBalance = () => {\r\n    if (value.gt(0)) {\r\n      return value.lte(bnbBalance)\r\n    }\r\n    return bnbBalance.gt(0)\r\n  }\r\n\r\n  if (!hasSufficientBalance()) {\r\n    return { key: 'Insufficient BNB balance', disabled: true }\r\n  }\r\n\r\n  if (value.eq(0)) {\r\n    return { key: 'Enter an amount', disabled: true }\r\n  }\r\n\r\n  return { key: 'Confirm', disabled: value.lt(minBetAmountBalance) }\r\n}\r\n\r\nconst getValueAsEthersBn = (value: string) => {\r\n  const valueAsFloat = parseFloat(value)\r\n  return Number.isNaN(valueAsFloat) ? ethers.BigNumber.from(0) : parseUnits(value)\r\n}\r\n\r\nconst SetPositionCard: React.FC<SetPositionCardProps> = ({ position, togglePosition, onBack, onSuccess }) => {\r\n  const [value, setValue] = useState('')\r\n  const [isTxPending, setIsTxPending] = useState(false)\r\n  const [errorMessage, setErrorMessage] = useState(null)\r\n  const [percent, setPercent] = useState(0)\r\n\r\n  const { account } = useWeb3React()\r\n  const { swiper } = useSwiper()\r\n  const { balance: bnbBalance } = useGetBnbBalance()\r\n  const minBetAmount = useGetMinBetAmount()\r\n  const { t } = useTranslation()\r\n  const { toastError } = useToast()\r\n  const predictionsContract = usePredictionsContract()\r\n\r\n  // Convert bnb balance to ethers.BigNumber\r\n  const bnbBalanceAsBn = useMemo(() => {\r\n    return ethers.BigNumber.from(bnbBalance.toString())\r\n  }, [bnbBalance])\r\n  const maxBalance = useMemo(() => {\r\n    return bnbBalanceAsBn.gt(dust) ? bnbBalanceAsBn.sub(dust) : dust\r\n  }, [bnbBalanceAsBn])\r\n  const balanceDisplay = formatBigNumber(bnbBalanceAsBn)\r\n\r\n  const valueAsBn = getValueAsEthersBn(value)\r\n  const showFieldWarning = account && valueAsBn.gt(0) && errorMessage !== null\r\n\r\n  const handleInputChange = (input: string) => {\r\n    const inputAsBn = getValueAsEthersBn(input)\r\n\r\n    if (inputAsBn.eq(0)) {\r\n      setPercent(0)\r\n    } else {\r\n      const inputAsFn = ethers.FixedNumber.from(inputAsBn)\r\n      const maxValueAsFn = ethers.FixedNumber.from(maxBalance)\r\n      const hundredAsFn = ethers.FixedNumber.from(100)\r\n      const percentage = inputAsFn.divUnsafe(maxValueAsFn).mulUnsafe(hundredAsFn)\r\n      const percentageAsFloat = percentage.toUnsafeFloat()\r\n\r\n      setPercent(percentageAsFloat > 100 ? 100 : percentageAsFloat)\r\n    }\r\n    setValue(input)\r\n  }\r\n\r\n  const handlePercentChange = (sliderPercent: number) => {\r\n    if (sliderPercent > 0) {\r\n      const maxValueAsFn = ethers.FixedNumber.from(maxBalance)\r\n      const hundredAsFn = ethers.FixedNumber.from(100)\r\n      const sliderPercentAsFn = ethers.FixedNumber.from(sliderPercent.toFixed(18)).divUnsafe(hundredAsFn)\r\n      const balancePercentage = maxValueAsFn.mulUnsafe(sliderPercentAsFn)\r\n      setValue(formatFixedNumber(balancePercentage))\r\n    } else {\r\n      setValue('')\r\n    }\r\n    setPercent(sliderPercent)\r\n  }\r\n\r\n  // Clear value\r\n  const handleGoBack = () => {\r\n    setValue('')\r\n    setPercent(0)\r\n    onBack()\r\n  }\r\n\r\n  // Disable the swiper events to avoid conflicts\r\n  const handleMouseOver = () => {\r\n    swiper.keyboard.disable()\r\n    swiper.mousewheel.disable()\r\n    swiper.detachEvents()\r\n  }\r\n\r\n  const handleMouseOut = () => {\r\n    swiper.keyboard.enable()\r\n    swiper.mousewheel.enable()\r\n    swiper.attachEvents()\r\n  }\r\n\r\n  const { key, disabled } = getButtonProps(valueAsBn, maxBalance, minBetAmount)\r\n\r\n  const handleEnterPosition = async () => {\r\n    const betMethod = position === BetPosition.BULL ? 'betBull' : 'betBear'\r\n\r\n    try {\r\n      const tx = await predictionsContract[betMethod]({ value: valueAsBn.toString(), gasPrice })\r\n      setIsTxPending(true)\r\n      const receipt = await tx.wait()\r\n      onSuccess(valueAsBn.toString(), receipt.transactionHash as string)\r\n    } catch {\r\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\r\n    } finally {\r\n      setIsTxPending(false)\r\n    }\r\n  }\r\n\r\n  // Warnings\r\n  useEffect(() => {\r\n    const inputAmount = getValueAsEthersBn(value)\r\n    const hasSufficientBalance = inputAmount.gt(0) && inputAmount.lte(maxBalance)\r\n\r\n    if (!hasSufficientBalance) {\r\n      setErrorMessage({ key: 'Insufficient BNB balance' })\r\n    } else if (inputAmount.gt(0) && inputAmount.lt(minBetAmount)) {\r\n      setErrorMessage({\r\n        key: 'A minimum amount of %num% %token% is required',\r\n        data: { num: formatBigNumber(minBetAmount), token: 'BNB' },\r\n      })\r\n    } else {\r\n      setErrorMessage(null)\r\n    }\r\n  }, [value, maxBalance, minBetAmount, setErrorMessage])\r\n\r\n  return (\r\n    <Card onMouseOver={handleMouseOver} onMouseOut={handleMouseOut}>\r\n      <CardHeader p=\"16px\">\r\n        <Flex alignItems=\"center\">\r\n          <IconButton variant=\"text\" scale=\"sm\" onClick={handleGoBack} mr=\"8px\">\r\n            <ArrowBackIcon width=\"24px\" />\r\n          </IconButton>\r\n          <FlexRow>\r\n            <Heading scale=\"md\">{t('Set Position')}</Heading>\r\n          </FlexRow>\r\n          <PositionTag betPosition={position} onClick={togglePosition}>\r\n            {position === BetPosition.BULL ? t('Up') : t('Down')}\r\n          </PositionTag>\r\n        </Flex>\r\n      </CardHeader>\r\n      <CardBody py=\"16px\">\r\n        <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\r\n          <Text textAlign=\"right\" color=\"textSubtle\">\r\n            {t('Commit')}:\r\n          </Text>\r\n          <Flex alignItems=\"center\">\r\n            <BinanceIcon mr=\"4px  \" />\r\n            <Text bold textTransform=\"uppercase\">\r\n              BNB\r\n            </Text>\r\n          </Flex>\r\n        </Flex>\r\n        <BalanceInput\r\n          value={value}\r\n          onUserInput={handleInputChange}\r\n          isWarning={showFieldWarning}\r\n          inputProps={{ disabled: !account || isTxPending }}\r\n        />\r\n        {showFieldWarning && (\r\n          <Text color=\"failure\" fontSize=\"12px\" mt=\"4px\" textAlign=\"right\">\r\n            {t(errorMessage.key, errorMessage.data)}\r\n          </Text>\r\n        )}\r\n        <Text textAlign=\"right\" mb=\"16px\" color=\"textSubtle\" fontSize=\"12px\" style={{ height: '18px' }}>\r\n          {account && t('Balance: %balance%', { balance: balanceDisplay })}\r\n        </Text>\r\n        <Slider\r\n          name=\"balance\"\r\n          min={0}\r\n          max={100}\r\n          value={percent}\r\n          onValueChanged={handlePercentChange}\r\n          valueLabel={account ? `${percent.toFixed(percent > 0 ? 1 : 0)}%` : ''}\r\n          step={0.01}\r\n          disabled={!account || isTxPending}\r\n          mb=\"4px\"\r\n          className={!account || isTxPending ? '' : 'swiper-no-swiping'}\r\n        />\r\n        <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"16px\">\r\n          {percentShortcuts.map((percentShortcut) => {\r\n            const handleClick = () => {\r\n              handlePercentChange(percentShortcut)\r\n            }\r\n\r\n            return (\r\n              <Button\r\n                key={percentShortcut}\r\n                scale=\"xs\"\r\n                variant=\"tertiary\"\r\n                onClick={handleClick}\r\n                disabled={!account || isTxPending}\r\n                style={{ flex: 1 }}\r\n              >\r\n                {`${percentShortcut}%`}\r\n              </Button>\r\n            )\r\n          })}\r\n          <Button\r\n            scale=\"xs\"\r\n            variant=\"tertiary\"\r\n            onClick={() => handlePercentChange(100)}\r\n            disabled={!account || isTxPending}\r\n          >\r\n            {t('Max')}\r\n          </Button>\r\n        </Flex>\r\n        <Box mb=\"8px\">\r\n          {account ? (\r\n            <Button\r\n              width=\"100%\"\r\n              disabled={!account || disabled}\r\n              onClick={handleEnterPosition}\r\n              isLoading={isTxPending}\r\n              endIcon={isTxPending ? <AutoRenewIcon color=\"currentColor\" spin /> : null}\r\n            >\r\n              {t(key)}\r\n            </Button>\r\n          ) : (\r\n            <ConnectWalletButton width=\"100%\" />\r\n          )}\r\n        </Box>\r\n        <Text as=\"p\" fontSize=\"12px\" lineHeight={1} color=\"textSubtle\">\r\n          {t('You won’t be able to remove or change your position once you enter it.')}\r\n        </Text>\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default SetPositionCard\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}