{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Devrim\\\\Documents\\\\FRANKswapUIforProspBlast\\\\src\\\\views\\\\Predictions\\\\components\\\\TradingView.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { Box } from '@pancakeswap/uikit';\nimport { useTheme } from 'styled-components';\nimport { useTranslation } from 'contexts/Localization';\n\n/**\r\n * When the script tag is injected the TradingView object is not immediately\r\n * available on the window. So we listen for when it gets set\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst tradingViewListener = async () => new Promise(resolve => Object.defineProperty(window, 'TradingView', {\n  configurable: true,\n  set(value) {\n    this.tv = value;\n    resolve(value);\n  }\n}));\nconst initializeTradingView = (TradingViewObj, theme, localeCode) => {\n  /* eslint-disable new-cap */\n  /* eslint-disable no-new */\n  // @ts-ignore\n  new TradingViewObj.widget({\n    autosize: true,\n    height: '100%',\n    symbol: 'BINANCE:BNBUSDT',\n    interval: '5',\n    timezone: 'Etc/UTC',\n    theme: theme.isDark ? 'dark' : 'light',\n    style: '1',\n    locale: localeCode,\n    toolbar_bg: '#f1f3f6',\n    enable_publishing: false,\n    allow_symbol_change: true,\n    container_id: 'tradingview_b239c'\n  });\n};\nconst TradingView = () => {\n  _s();\n  const {\n    currentLanguage\n  } = useTranslation();\n  const theme = useTheme();\n  useEffect(() => {\n    // @ts-ignore\n    if (window.TradingView) {\n      // @ts-ignore\n      initializeTradingView(window.TradingView, theme, currentLanguage.code);\n    } else {\n      tradingViewListener().then(tv => {\n        initializeTradingView(tv, theme, currentLanguage.code);\n      });\n    }\n  }, [theme, currentLanguage]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    overflow: \"hidden\",\n    className: \"tradingview_container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"tradingview_b239c\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(TradingView, \"OkCMeLjZVO85Rc/FXqWd7KVZ4Ek=\", false, function () {\n  return [useTranslation, useTheme];\n});\n_c = TradingView;\nexport default TradingView;\nvar _c;\n$RefreshReg$(_c, \"TradingView\");","map":{"version":3,"names":["React","useEffect","Box","useTheme","useTranslation","jsxDEV","_jsxDEV","tradingViewListener","Promise","resolve","Object","defineProperty","window","configurable","set","value","tv","initializeTradingView","TradingViewObj","theme","localeCode","widget","autosize","height","symbol","interval","timezone","isDark","style","locale","toolbar_bg","enable_publishing","allow_symbol_change","container_id","TradingView","_s","currentLanguage","code","then","overflow","className","children","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/views/Predictions/components/TradingView.tsx"],"sourcesContent":["import React, { useEffect } from 'react'\r\nimport { Box } from '@pancakeswap/uikit'\r\nimport { DefaultTheme, useTheme } from 'styled-components'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\n/**\r\n * When the script tag is injected the TradingView object is not immediately\r\n * available on the window. So we listen for when it gets set\r\n */\r\nconst tradingViewListener = async () =>\r\n  new Promise<void>((resolve) =>\r\n    Object.defineProperty(window, 'TradingView', {\r\n      configurable: true,\r\n      set(value) {\r\n        this.tv = value\r\n        resolve(value)\r\n      },\r\n    }),\r\n  )\r\n\r\nconst initializeTradingView = (TradingViewObj: any, theme: DefaultTheme, localeCode: string) => {\r\n  /* eslint-disable new-cap */\r\n  /* eslint-disable no-new */\r\n  // @ts-ignore\r\n  new TradingViewObj.widget({\r\n    autosize: true,\r\n    height: '100%',\r\n    symbol: 'BINANCE:BNBUSDT',\r\n    interval: '5',\r\n    timezone: 'Etc/UTC',\r\n    theme: theme.isDark ? 'dark' : 'light',\r\n    style: '1',\r\n    locale: localeCode,\r\n    toolbar_bg: '#f1f3f6',\r\n    enable_publishing: false,\r\n    allow_symbol_change: true,\r\n    container_id: 'tradingview_b239c',\r\n  })\r\n}\r\n\r\nconst TradingView = () => {\r\n  const { currentLanguage } = useTranslation()\r\n  const theme = useTheme()\r\n\r\n  useEffect(() => {\r\n    // @ts-ignore\r\n    if (window.TradingView) {\r\n      // @ts-ignore\r\n      initializeTradingView(window.TradingView, theme, currentLanguage.code)\r\n    } else {\r\n      tradingViewListener().then((tv) => {\r\n        initializeTradingView(tv, theme, currentLanguage.code)\r\n      })\r\n    }\r\n  }, [theme, currentLanguage])\r\n\r\n  return (\r\n    <Box overflow=\"hidden\" className=\"tradingview_container\">\r\n      <div id=\"tradingview_b239c\" />\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default TradingView\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,GAAG,QAAQ,oBAAoB;AACxC,SAAuBC,QAAQ,QAAQ,mBAAmB;AAC1D,SAASC,cAAc,QAAQ,uBAAuB;;AAEtD;AACA;AACA;AACA;AAHA,SAAAC,MAAA,IAAAC,OAAA;AAIA,MAAMC,mBAAmB,GAAG,MAAAA,CAAA,KAC1B,IAAIC,OAAO,CAAQC,OAAO,IACxBC,MAAM,CAACC,cAAc,CAACC,MAAM,EAAE,aAAa,EAAE;EAC3CC,YAAY,EAAE,IAAI;EAClBC,GAAGA,CAACC,KAAK,EAAE;IACT,IAAI,CAACC,EAAE,GAAGD,KAAK;IACfN,OAAO,CAACM,KAAK,CAAC;EAChB;AACF,CAAC,CACH,CAAC;AAEH,MAAME,qBAAqB,GAAGA,CAACC,cAAmB,EAAEC,KAAmB,EAAEC,UAAkB,KAAK;EAC9F;EACA;EACA;EACA,IAAIF,cAAc,CAACG,MAAM,CAAC;IACxBC,QAAQ,EAAE,IAAI;IACdC,MAAM,EAAE,MAAM;IACdC,MAAM,EAAE,iBAAiB;IACzBC,QAAQ,EAAE,GAAG;IACbC,QAAQ,EAAE,SAAS;IACnBP,KAAK,EAAEA,KAAK,CAACQ,MAAM,GAAG,MAAM,GAAG,OAAO;IACtCC,KAAK,EAAE,GAAG;IACVC,MAAM,EAAET,UAAU;IAClBU,UAAU,EAAE,SAAS;IACrBC,iBAAiB,EAAE,KAAK;IACxBC,mBAAmB,EAAE,IAAI;IACzBC,YAAY,EAAE;EAChB,CAAC,CAAC;AACJ,CAAC;AAED,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM;IAAEC;EAAgB,CAAC,GAAGhC,cAAc,CAAC,CAAC;EAC5C,MAAMe,KAAK,GAAGhB,QAAQ,CAAC,CAAC;EAExBF,SAAS,CAAC,MAAM;IACd;IACA,IAAIW,MAAM,CAACsB,WAAW,EAAE;MACtB;MACAjB,qBAAqB,CAACL,MAAM,CAACsB,WAAW,EAAEf,KAAK,EAAEiB,eAAe,CAACC,IAAI,CAAC;IACxE,CAAC,MAAM;MACL9B,mBAAmB,CAAC,CAAC,CAAC+B,IAAI,CAAEtB,EAAE,IAAK;QACjCC,qBAAqB,CAACD,EAAE,EAAEG,KAAK,EAAEiB,eAAe,CAACC,IAAI,CAAC;MACxD,CAAC,CAAC;IACJ;EACF,CAAC,EAAE,CAAClB,KAAK,EAAEiB,eAAe,CAAC,CAAC;EAE5B,oBACE9B,OAAA,CAACJ,GAAG;IAACqC,QAAQ,EAAC,QAAQ;IAACC,SAAS,EAAC,uBAAuB;IAAAC,QAAA,eACtDnC,OAAA;MAAKoC,EAAE,EAAC;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3B,CAAC;AAEV,CAAC;AAAAX,EAAA,CArBKD,WAAW;EAAA,QACa9B,cAAc,EAC5BD,QAAQ;AAAA;AAAA4C,EAAA,GAFlBb,WAAW;AAuBjB,eAAeA,WAAW;AAAA,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}