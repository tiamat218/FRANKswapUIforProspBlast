{"ast":null,"code":"import { ethers } from 'ethers';\nimport { BetPosition } from 'state/types';\nimport { formatBigNumber, formatBigNumberToFixed } from 'utils/formatBalance';\nimport getTimePeriods from 'utils/getTimePeriods';\nexport const formatUsdv2 = usd => {\n  return `$${formatBigNumberToFixed(usd, 3, 8)}`;\n};\nexport const formatBnbv2 = bnb => {\n  const value = bnb || ethers.BigNumber.from(0);\n  return formatBigNumberToFixed(value, 4);\n};\nexport const padTime = num => num.toString().padStart(2, '0');\nexport const formatRoundTime = secondsBetweenBlocks => {\n  const {\n    hours,\n    minutes,\n    seconds\n  } = getTimePeriods(secondsBetweenBlocks);\n  const minutesSeconds = `${padTime(minutes)}:${padTime(seconds)}`;\n  if (hours > 0) {\n    return `${padTime(hours)}:${minutesSeconds}`;\n  }\n  return minutesSeconds;\n};\nexport const getHasRoundFailed = (round, blockNumber) => {\n  if (!round.endBlock) {\n    return false;\n  }\n  return blockNumber > round.endBlock && round.oracleCalled === false;\n};\nexport const getMultiplierv2 = (total, amount) => {\n  if (!total) {\n    return ethers.FixedNumber.from(0);\n  }\n  if (total.eq(0) || amount.eq(0)) {\n    return ethers.FixedNumber.from(0);\n  }\n  const rewardAmountFixed = ethers.FixedNumber.from(total);\n  const multiplierAmountFixed = ethers.FixedNumber.from(amount);\n  return rewardAmountFixed.divUnsafe(multiplierAmountFixed);\n};\nexport const getPayoutv2 = (ledger, round) => {\n  if (!ledger || !round) {\n    return ethers.FixedNumber.from(0);\n  }\n  const {\n    bullAmount,\n    bearAmount,\n    rewardAmount\n  } = round;\n  const {\n    amount,\n    position\n  } = ledger;\n  const amountFixed = ethers.FixedNumber.from(formatBigNumber(amount));\n  const multiplier = getMultiplierv2(rewardAmount, position === BetPosition.BULL ? bullAmount : bearAmount);\n  return amountFixed.mulUnsafe(multiplier);\n};\nexport const getNetPayoutv2 = (ledger, round) => {\n  if (!ledger || !round) {\n    return ethers.FixedNumber.from(0);\n  }\n  const payout = getPayoutv2(ledger, round);\n  const amount = ethers.FixedNumber.from(formatBigNumber(ledger.amount));\n  return payout.subUnsafe(amount);\n};\nexport const getPriceDifference = (price, lockPrice) => {\n  if (!price || !lockPrice) {\n    return ethers.BigNumber.from(0);\n  }\n  return price.sub(lockPrice);\n};","map":{"version":3,"names":["ethers","BetPosition","formatBigNumber","formatBigNumberToFixed","getTimePeriods","formatUsdv2","usd","formatBnbv2","bnb","value","BigNumber","from","padTime","num","toString","padStart","formatRoundTime","secondsBetweenBlocks","hours","minutes","seconds","minutesSeconds","getHasRoundFailed","round","blockNumber","endBlock","oracleCalled","getMultiplierv2","total","amount","FixedNumber","eq","rewardAmountFixed","multiplierAmountFixed","divUnsafe","getPayoutv2","ledger","bullAmount","bearAmount","rewardAmount","position","amountFixed","multiplier","BULL","mulUnsafe","getNetPayoutv2","payout","subUnsafe","getPriceDifference","price","lockPrice","sub"],"sources":["C:/Users/Devrim/Documents/swapUIforProspBlast/src/views/Predictions/helpers.ts"],"sourcesContent":["import { ethers } from 'ethers'\r\nimport { BetPosition, NodeLedger, NodeRound } from 'state/types'\r\nimport { formatBigNumber, formatBigNumberToFixed } from 'utils/formatBalance'\r\nimport getTimePeriods from 'utils/getTimePeriods'\r\n\r\nexport const formatUsdv2 = (usd: ethers.BigNumber) => {\r\n  return `$${formatBigNumberToFixed(usd, 3, 8)}`\r\n}\r\n\r\nexport const formatBnbv2 = (bnb: ethers.BigNumber) => {\r\n  const value = bnb || ethers.BigNumber.from(0)\r\n  return formatBigNumberToFixed(value, 4)\r\n}\r\n\r\nexport const padTime = (num: number) => num.toString().padStart(2, '0')\r\n\r\nexport const formatRoundTime = (secondsBetweenBlocks: number) => {\r\n  const { hours, minutes, seconds } = getTimePeriods(secondsBetweenBlocks)\r\n  const minutesSeconds = `${padTime(minutes)}:${padTime(seconds)}`\r\n\r\n  if (hours > 0) {\r\n    return `${padTime(hours)}:${minutesSeconds}`\r\n  }\r\n\r\n  return minutesSeconds\r\n}\r\n\r\nexport const getHasRoundFailed = (round: NodeRound, blockNumber: number) => {\r\n  if (!round.endBlock) {\r\n    return false\r\n  }\r\n\r\n  return blockNumber > round.endBlock && round.oracleCalled === false\r\n}\r\n\r\nexport const getMultiplierv2 = (total: ethers.BigNumber, amount: ethers.BigNumber) => {\r\n  if (!total) {\r\n    return ethers.FixedNumber.from(0)\r\n  }\r\n\r\n  if (total.eq(0) || amount.eq(0)) {\r\n    return ethers.FixedNumber.from(0)\r\n  }\r\n\r\n  const rewardAmountFixed = ethers.FixedNumber.from(total)\r\n  const multiplierAmountFixed = ethers.FixedNumber.from(amount)\r\n\r\n  return rewardAmountFixed.divUnsafe(multiplierAmountFixed)\r\n}\r\n\r\nexport const getPayoutv2 = (ledger: NodeLedger, round: NodeRound) => {\r\n  if (!ledger || !round) {\r\n    return ethers.FixedNumber.from(0)\r\n  }\r\n\r\n  const { bullAmount, bearAmount, rewardAmount } = round\r\n  const { amount, position } = ledger\r\n\r\n  const amountFixed = ethers.FixedNumber.from(formatBigNumber(amount))\r\n  const multiplier = getMultiplierv2(rewardAmount, position === BetPosition.BULL ? bullAmount : bearAmount)\r\n  return amountFixed.mulUnsafe(multiplier)\r\n}\r\n\r\nexport const getNetPayoutv2 = (ledger: NodeLedger, round: NodeRound) => {\r\n  if (!ledger || !round) {\r\n    return ethers.FixedNumber.from(0)\r\n  }\r\n\r\n  const payout = getPayoutv2(ledger, round)\r\n  const amount = ethers.FixedNumber.from(formatBigNumber(ledger.amount))\r\n\r\n  return payout.subUnsafe(amount)\r\n}\r\n\r\nexport const getPriceDifference = (price: ethers.BigNumber, lockPrice: ethers.BigNumber) => {\r\n  if (!price || !lockPrice) {\r\n    return ethers.BigNumber.from(0)\r\n  }\r\n\r\n  return price.sub(lockPrice)\r\n}\r\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,QAAQ;AAC/B,SAASC,WAAW,QAA+B,aAAa;AAChE,SAASC,eAAe,EAAEC,sBAAsB,QAAQ,qBAAqB;AAC7E,OAAOC,cAAc,MAAM,sBAAsB;AAEjD,OAAO,MAAMC,WAAW,GAAIC,GAAqB,IAAK;EACpD,OAAO,IAAIH,sBAAsB,CAACG,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE;AAChD,CAAC;AAED,OAAO,MAAMC,WAAW,GAAIC,GAAqB,IAAK;EACpD,MAAMC,KAAK,GAAGD,GAAG,IAAIR,MAAM,CAACU,SAAS,CAACC,IAAI,CAAC,CAAC,CAAC;EAC7C,OAAOR,sBAAsB,CAACM,KAAK,EAAE,CAAC,CAAC;AACzC,CAAC;AAED,OAAO,MAAMG,OAAO,GAAIC,GAAW,IAAKA,GAAG,CAACC,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;AAEvE,OAAO,MAAMC,eAAe,GAAIC,oBAA4B,IAAK;EAC/D,MAAM;IAAEC,KAAK;IAAEC,OAAO;IAAEC;EAAQ,CAAC,GAAGhB,cAAc,CAACa,oBAAoB,CAAC;EACxE,MAAMI,cAAc,GAAG,GAAGT,OAAO,CAACO,OAAO,CAAC,IAAIP,OAAO,CAACQ,OAAO,CAAC,EAAE;EAEhE,IAAIF,KAAK,GAAG,CAAC,EAAE;IACb,OAAO,GAAGN,OAAO,CAACM,KAAK,CAAC,IAAIG,cAAc,EAAE;EAC9C;EAEA,OAAOA,cAAc;AACvB,CAAC;AAED,OAAO,MAAMC,iBAAiB,GAAGA,CAACC,KAAgB,EAAEC,WAAmB,KAAK;EAC1E,IAAI,CAACD,KAAK,CAACE,QAAQ,EAAE;IACnB,OAAO,KAAK;EACd;EAEA,OAAOD,WAAW,GAAGD,KAAK,CAACE,QAAQ,IAAIF,KAAK,CAACG,YAAY,KAAK,KAAK;AACrE,CAAC;AAED,OAAO,MAAMC,eAAe,GAAGA,CAACC,KAAuB,EAAEC,MAAwB,KAAK;EACpF,IAAI,CAACD,KAAK,EAAE;IACV,OAAO5B,MAAM,CAAC8B,WAAW,CAACnB,IAAI,CAAC,CAAC,CAAC;EACnC;EAEA,IAAIiB,KAAK,CAACG,EAAE,CAAC,CAAC,CAAC,IAAIF,MAAM,CAACE,EAAE,CAAC,CAAC,CAAC,EAAE;IAC/B,OAAO/B,MAAM,CAAC8B,WAAW,CAACnB,IAAI,CAAC,CAAC,CAAC;EACnC;EAEA,MAAMqB,iBAAiB,GAAGhC,MAAM,CAAC8B,WAAW,CAACnB,IAAI,CAACiB,KAAK,CAAC;EACxD,MAAMK,qBAAqB,GAAGjC,MAAM,CAAC8B,WAAW,CAACnB,IAAI,CAACkB,MAAM,CAAC;EAE7D,OAAOG,iBAAiB,CAACE,SAAS,CAACD,qBAAqB,CAAC;AAC3D,CAAC;AAED,OAAO,MAAME,WAAW,GAAGA,CAACC,MAAkB,EAAEb,KAAgB,KAAK;EACnE,IAAI,CAACa,MAAM,IAAI,CAACb,KAAK,EAAE;IACrB,OAAOvB,MAAM,CAAC8B,WAAW,CAACnB,IAAI,CAAC,CAAC,CAAC;EACnC;EAEA,MAAM;IAAE0B,UAAU;IAAEC,UAAU;IAAEC;EAAa,CAAC,GAAGhB,KAAK;EACtD,MAAM;IAAEM,MAAM;IAAEW;EAAS,CAAC,GAAGJ,MAAM;EAEnC,MAAMK,WAAW,GAAGzC,MAAM,CAAC8B,WAAW,CAACnB,IAAI,CAACT,eAAe,CAAC2B,MAAM,CAAC,CAAC;EACpE,MAAMa,UAAU,GAAGf,eAAe,CAACY,YAAY,EAAEC,QAAQ,KAAKvC,WAAW,CAAC0C,IAAI,GAAGN,UAAU,GAAGC,UAAU,CAAC;EACzG,OAAOG,WAAW,CAACG,SAAS,CAACF,UAAU,CAAC;AAC1C,CAAC;AAED,OAAO,MAAMG,cAAc,GAAGA,CAACT,MAAkB,EAAEb,KAAgB,KAAK;EACtE,IAAI,CAACa,MAAM,IAAI,CAACb,KAAK,EAAE;IACrB,OAAOvB,MAAM,CAAC8B,WAAW,CAACnB,IAAI,CAAC,CAAC,CAAC;EACnC;EAEA,MAAMmC,MAAM,GAAGX,WAAW,CAACC,MAAM,EAAEb,KAAK,CAAC;EACzC,MAAMM,MAAM,GAAG7B,MAAM,CAAC8B,WAAW,CAACnB,IAAI,CAACT,eAAe,CAACkC,MAAM,CAACP,MAAM,CAAC,CAAC;EAEtE,OAAOiB,MAAM,CAACC,SAAS,CAAClB,MAAM,CAAC;AACjC,CAAC;AAED,OAAO,MAAMmB,kBAAkB,GAAGA,CAACC,KAAuB,EAAEC,SAA2B,KAAK;EAC1F,IAAI,CAACD,KAAK,IAAI,CAACC,SAAS,EAAE;IACxB,OAAOlD,MAAM,CAACU,SAAS,CAACC,IAAI,CAAC,CAAC,CAAC;EACjC;EAEA,OAAOsC,KAAK,CAACE,GAAG,CAACD,SAAS,CAAC;AAC7B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}