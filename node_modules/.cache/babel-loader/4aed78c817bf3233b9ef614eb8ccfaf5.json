{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Devrim\\\\Documents\\\\FRANKswapUIforProspBlast\\\\src\\\\views\\\\Voting\\\\components\\\\VoteDetailsModal.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Box, Flex, Modal, Button, Spinner } from '@pancakeswap/uikit';\nimport { useTranslation } from 'contexts/Localization';\nimport useTheme from 'hooks/useTheme';\nimport useGetVotingPower from '../hooks/useGetVotingPower';\nimport DetailsView from './CastVoteModal/DetailsView';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst VoteDetailsModal = ({\n  block,\n  onDismiss\n}) => {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  const [modalIsOpen, setModalIsOpen] = useState(true);\n  const {\n    isLoading,\n    total,\n    cakeBalance,\n    cakeVaultBalance,\n    cakePoolBalance,\n    poolsBalance,\n    cakeBnbLpBalance\n  } = useGetVotingPower(block, modalIsOpen);\n  const {\n    theme\n  } = useTheme();\n\n  const handleDismiss = () => {\n    setModalIsOpen(false);\n    onDismiss();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    title: t('Voting Power'),\n    onDismiss: handleDismiss,\n    headerBackground: theme.colors.gradients.cardHeader,\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      mb: \"24px\",\n      width: \"320px\",\n      children: isLoading ? /*#__PURE__*/_jsxDEV(Flex, {\n        height: \"450px\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Spinner, {\n          size: 80\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(DetailsView, {\n          total: total,\n          cakeBalance: cakeBalance,\n          cakeVaultBalance: cakeVaultBalance,\n          cakePoolBalance: cakePoolBalance,\n          poolsBalance: poolsBalance,\n          cakeBnbLpBalance: cakeBnbLpBalance\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: onDismiss,\n          width: \"100%\",\n          mt: \"16px\",\n          children: t('Close')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_s(VoteDetailsModal, \"Y6hPOshRhG4EtwVANEP/vwKGZ28=\", false, function () {\n  return [useTranslation, useGetVotingPower, useTheme];\n});\n\n_c = VoteDetailsModal;\nexport default VoteDetailsModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"VoteDetailsModal\");","map":{"version":3,"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/views/Voting/components/VoteDetailsModal.tsx"],"names":["React","useState","Box","Flex","Modal","Button","Spinner","useTranslation","useTheme","useGetVotingPower","DetailsView","VoteDetailsModal","block","onDismiss","t","modalIsOpen","setModalIsOpen","isLoading","total","cakeBalance","cakeVaultBalance","cakePoolBalance","poolsBalance","cakeBnbLpBalance","theme","handleDismiss","colors","gradients","cardHeader"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,GAAT,EAAcC,IAAd,EAAwCC,KAAxC,EAA+CC,MAA/C,EAAuDC,OAAvD,QAAsE,oBAAtE;AACA,SAASC,cAAT,QAA+B,uBAA/B;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAOC,iBAAP,MAA8B,4BAA9B;AACA,OAAOC,WAAP,MAAwB,6BAAxB;;;;AAMA,MAAMC,gBAAiD,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAA0B;AAAA;;AAClF,QAAM;AAAEC,IAAAA;AAAF,MAAQP,cAAc,EAA5B;AACA,QAAM,CAACQ,WAAD,EAAcC,cAAd,IAAgCf,QAAQ,CAAC,IAAD,CAA9C;AACA,QAAM;AAAEgB,IAAAA,SAAF;AAAaC,IAAAA,KAAb;AAAoBC,IAAAA,WAApB;AAAiCC,IAAAA,gBAAjC;AAAmDC,IAAAA,eAAnD;AAAoEC,IAAAA,YAApE;AAAkFC,IAAAA;AAAlF,MACJd,iBAAiB,CAACG,KAAD,EAAQG,WAAR,CADnB;AAEA,QAAM;AAAES,IAAAA;AAAF,MAAYhB,QAAQ,EAA1B;;AAEA,QAAMiB,aAAa,GAAG,MAAM;AAC1BT,IAAAA,cAAc,CAAC,KAAD,CAAd;AACAH,IAAAA,SAAS;AACV,GAHD;;AAKA,sBACE,QAAC,KAAD;AAAO,IAAA,KAAK,EAAEC,CAAC,CAAC,cAAD,CAAf;AAAiC,IAAA,SAAS,EAAEW,aAA5C;AAA2D,IAAA,gBAAgB,EAAED,KAAK,CAACE,MAAN,CAAaC,SAAb,CAAuBC,UAApG;AAAA,2BACE,QAAC,GAAD;AAAK,MAAA,EAAE,EAAC,MAAR;AAAe,MAAA,KAAK,EAAC,OAArB;AAAA,gBACGX,SAAS,gBACR,QAAC,IAAD;AAAM,QAAA,MAAM,EAAC,OAAb;AAAqB,QAAA,UAAU,EAAC,QAAhC;AAAyC,QAAA,cAAc,EAAC,QAAxD;AAAA,+BACE,QAAC,OAAD;AAAS,UAAA,IAAI,EAAE;AAAf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADQ,gBAKR;AAAA,gCACE,QAAC,WAAD;AACE,UAAA,KAAK,EAAEC,KADT;AAEE,UAAA,WAAW,EAAEC,WAFf;AAGE,UAAA,gBAAgB,EAAEC,gBAHpB;AAIE,UAAA,eAAe,EAAEC,eAJnB;AAKE,UAAA,YAAY,EAAEC,YALhB;AAME,UAAA,gBAAgB,EAAEC;AANpB;AAAA;AAAA;AAAA;AAAA,gBADF,eASE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,WAAhB;AAA4B,UAAA,OAAO,EAAEV,SAArC;AAAgD,UAAA,KAAK,EAAC,MAAtD;AAA6D,UAAA,EAAE,EAAC,MAAhE;AAAA,oBACGC,CAAC,CAAC,OAAD;AADJ;AAAA;AAAA;AAAA;AAAA,gBATF;AAAA;AANJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD,CArCD;;GAAMH,gB;UACUJ,c,EAGZE,iB,EACgBD,Q;;;KALdG,gB;AAuCN,eAAeA,gBAAf","sourcesContent":["import React, { useState } from 'react'\r\nimport { Box, Flex, InjectedModalProps, Modal, Button, Spinner } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useTheme from 'hooks/useTheme'\r\nimport useGetVotingPower from '../hooks/useGetVotingPower'\r\nimport DetailsView from './CastVoteModal/DetailsView'\r\n\r\ninterface VoteDetailsModalProps extends InjectedModalProps {\r\n  block: number\r\n}\r\n\r\nconst VoteDetailsModal: React.FC<VoteDetailsModalProps> = ({ block, onDismiss }) => {\r\n  const { t } = useTranslation()\r\n  const [modalIsOpen, setModalIsOpen] = useState(true)\r\n  const { isLoading, total, cakeBalance, cakeVaultBalance, cakePoolBalance, poolsBalance, cakeBnbLpBalance } =\r\n    useGetVotingPower(block, modalIsOpen)\r\n  const { theme } = useTheme()\r\n\r\n  const handleDismiss = () => {\r\n    setModalIsOpen(false)\r\n    onDismiss()\r\n  }\r\n\r\n  return (\r\n    <Modal title={t('Voting Power')} onDismiss={handleDismiss} headerBackground={theme.colors.gradients.cardHeader}>\r\n      <Box mb=\"24px\" width=\"320px\">\r\n        {isLoading ? (\r\n          <Flex height=\"450px\" alignItems=\"center\" justifyContent=\"center\">\r\n            <Spinner size={80} />\r\n          </Flex>\r\n        ) : (\r\n          <>\r\n            <DetailsView\r\n              total={total}\r\n              cakeBalance={cakeBalance}\r\n              cakeVaultBalance={cakeVaultBalance}\r\n              cakePoolBalance={cakePoolBalance}\r\n              poolsBalance={poolsBalance}\r\n              cakeBnbLpBalance={cakeBnbLpBalance}\r\n            />\r\n            <Button variant=\"secondary\" onClick={onDismiss} width=\"100%\" mt=\"16px\">\r\n              {t('Close')}\r\n            </Button>\r\n          </>\r\n        )}\r\n      </Box>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default VoteDetailsModal\r\n"]},"metadata":{},"sourceType":"module"}