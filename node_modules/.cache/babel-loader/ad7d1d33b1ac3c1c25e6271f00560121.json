{"ast":null,"code":"import{useMemo}from'react';import{useAllTokenBalances}from'../../state/wallet/hooks';// compare two token amounts with highest one coming first\nfunction balanceComparator(balanceA,balanceB){if(balanceA&&balanceB){return balanceA.greaterThan(balanceB)?-1:balanceA.equalTo(balanceB)?0:1;}if(balanceA&&balanceA.greaterThan('0')){return-1;}if(balanceB&&balanceB.greaterThan('0')){return 1;}return 0;}function getTokenComparator(balances){return function sortTokens(tokenA,tokenB){// -1 = a is first\n// 1 = b is first\n// sort by balances\nconst balanceA=balances[tokenA.address];const balanceB=balances[tokenB.address];const balanceComp=balanceComparator(balanceA,balanceB);if(balanceComp!==0)return balanceComp;if(tokenA.symbol&&tokenB.symbol){// sort by symbol\nreturn tokenA.symbol.toLowerCase()<tokenB.symbol.toLowerCase()?-1:1;}return tokenA.symbol?-1:tokenB.symbol?-1:0;};}function useTokenComparator(inverted){const balances=useAllTokenBalances();const comparator=useMemo(()=>getTokenComparator(balances!==null&&balances!==void 0?balances:{}),[balances]);return useMemo(()=>{if(inverted){return(tokenA,tokenB)=>comparator(tokenA,tokenB)*-1;}return comparator;},[inverted,comparator]);}export default useTokenComparator;","map":{"version":3,"names":["useMemo","useAllTokenBalances","balanceComparator","balanceA","balanceB","greaterThan","equalTo","getTokenComparator","balances","sortTokens","tokenA","tokenB","address","balanceComp","symbol","toLowerCase","useTokenComparator","inverted","comparator"],"sources":["C:/Users/frkul/Documents/swapUI_pancake-frontend/src/components/SearchModal/sorting.ts"],"sourcesContent":["import { Token, TokenAmount } from '@pancakeswap/sdk'\r\nimport { useMemo } from 'react'\r\nimport { useAllTokenBalances } from '../../state/wallet/hooks'\r\n\r\n// compare two token amounts with highest one coming first\r\nfunction balanceComparator(balanceA?: TokenAmount, balanceB?: TokenAmount) {\r\n  if (balanceA && balanceB) {\r\n    return balanceA.greaterThan(balanceB) ? -1 : balanceA.equalTo(balanceB) ? 0 : 1\r\n  }\r\n  if (balanceA && balanceA.greaterThan('0')) {\r\n    return -1\r\n  }\r\n  if (balanceB && balanceB.greaterThan('0')) {\r\n    return 1\r\n  }\r\n  return 0\r\n}\r\n\r\nfunction getTokenComparator(balances: {\r\n  [tokenAddress: string]: TokenAmount | undefined\r\n}): (tokenA: Token, tokenB: Token) => number {\r\n  return function sortTokens(tokenA: Token, tokenB: Token): number {\r\n    // -1 = a is first\r\n    // 1 = b is first\r\n\r\n    // sort by balances\r\n    const balanceA = balances[tokenA.address]\r\n    const balanceB = balances[tokenB.address]\r\n\r\n    const balanceComp = balanceComparator(balanceA, balanceB)\r\n    if (balanceComp !== 0) return balanceComp\r\n\r\n    if (tokenA.symbol && tokenB.symbol) {\r\n      // sort by symbol\r\n      return tokenA.symbol.toLowerCase() < tokenB.symbol.toLowerCase() ? -1 : 1\r\n    }\r\n    return tokenA.symbol ? -1 : tokenB.symbol ? -1 : 0\r\n  }\r\n}\r\n\r\nfunction useTokenComparator(inverted: boolean): (tokenA: Token, tokenB: Token) => number {\r\n  const balances = useAllTokenBalances()\r\n  const comparator = useMemo(() => getTokenComparator(balances ?? {}), [balances])\r\n  return useMemo(() => {\r\n    if (inverted) {\r\n      return (tokenA: Token, tokenB: Token) => comparator(tokenA, tokenB) * -1\r\n    }\r\n    return comparator\r\n  }, [inverted, comparator])\r\n}\r\n\r\nexport default useTokenComparator\r\n"],"mappings":"AACA,OAASA,OAAO,KAAQ,OAAO,CAC/B,OAASC,mBAAmB,KAAQ,0BAA0B,CAE9D;AACA,QAAS,CAAAC,iBAAiBA,CAACC,QAAsB,CAAEC,QAAsB,CAAE,CACzE,GAAID,QAAQ,EAAIC,QAAQ,CAAE,CACxB,MAAO,CAAAD,QAAQ,CAACE,WAAW,CAACD,QAAQ,CAAC,CAAG,CAAC,CAAC,CAAGD,QAAQ,CAACG,OAAO,CAACF,QAAQ,CAAC,CAAG,CAAC,CAAG,CAAC,CACjF,CACA,GAAID,QAAQ,EAAIA,QAAQ,CAACE,WAAW,CAAC,GAAG,CAAC,CAAE,CACzC,MAAO,CAAC,CAAC,CACX,CACA,GAAID,QAAQ,EAAIA,QAAQ,CAACC,WAAW,CAAC,GAAG,CAAC,CAAE,CACzC,MAAO,EAAC,CACV,CACA,MAAO,EAAC,CACV,CAEA,QAAS,CAAAE,kBAAkBA,CAACC,QAE3B,CAA4C,CAC3C,MAAO,SAAS,CAAAC,UAAUA,CAACC,MAAa,CAAEC,MAAa,CAAU,CAC/D;AACA;AAEA;AACA,KAAM,CAAAR,QAAQ,CAAGK,QAAQ,CAACE,MAAM,CAACE,OAAO,CAAC,CACzC,KAAM,CAAAR,QAAQ,CAAGI,QAAQ,CAACG,MAAM,CAACC,OAAO,CAAC,CAEzC,KAAM,CAAAC,WAAW,CAAGX,iBAAiB,CAACC,QAAQ,CAAEC,QAAQ,CAAC,CACzD,GAAIS,WAAW,GAAK,CAAC,CAAE,MAAO,CAAAA,WAAW,CAEzC,GAAIH,MAAM,CAACI,MAAM,EAAIH,MAAM,CAACG,MAAM,CAAE,CAClC;AACA,MAAO,CAAAJ,MAAM,CAACI,MAAM,CAACC,WAAW,CAAC,CAAC,CAAGJ,MAAM,CAACG,MAAM,CAACC,WAAW,CAAC,CAAC,CAAG,CAAC,CAAC,CAAG,CAAC,CAC3E,CACA,MAAO,CAAAL,MAAM,CAACI,MAAM,CAAG,CAAC,CAAC,CAAGH,MAAM,CAACG,MAAM,CAAG,CAAC,CAAC,CAAG,CAAC,CACpD,CAAC,CACH,CAEA,QAAS,CAAAE,kBAAkBA,CAACC,QAAiB,CAA4C,CACvF,KAAM,CAAAT,QAAQ,CAAGP,mBAAmB,CAAC,CAAC,CACtC,KAAM,CAAAiB,UAAU,CAAGlB,OAAO,CAAC,IAAMO,kBAAkB,CAACC,QAAQ,SAARA,QAAQ,UAARA,QAAQ,CAAI,CAAC,CAAC,CAAC,CAAE,CAACA,QAAQ,CAAC,CAAC,CAChF,MAAO,CAAAR,OAAO,CAAC,IAAM,CACnB,GAAIiB,QAAQ,CAAE,CACZ,MAAO,CAACP,MAAa,CAAEC,MAAa,GAAKO,UAAU,CAACR,MAAM,CAAEC,MAAM,CAAC,CAAG,CAAC,CAAC,CAC1E,CACA,MAAO,CAAAO,UAAU,CACnB,CAAC,CAAE,CAACD,QAAQ,CAAEC,UAAU,CAAC,CAAC,CAC5B,CAEA,cAAe,CAAAF,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"module"}