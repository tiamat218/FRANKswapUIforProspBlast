{"ast":null,"code":"import React from'react';import{Progress}from'@pancakeswap/uikit';import{useBlock}from'state/block/hooks';import{jsx as _jsx}from\"react/jsx-runtime\";const BlockProgress=_ref=>{let{startBlock,endBlock,...props}=_ref;const{currentBlock}=useBlock();const rawProgress=(currentBlock-startBlock)/(endBlock-startBlock)*100;const progress=rawProgress<=100?rawProgress:100;return/*#__PURE__*/_jsx(Progress,{primaryStep:progress,...props});};export default BlockProgress;","map":{"version":3,"names":["React","Progress","useBlock","jsx","_jsx","BlockProgress","_ref","startBlock","endBlock","props","currentBlock","rawProgress","progress","primaryStep"],"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/components/BlockProgress.tsx"],"sourcesContent":["import React from 'react'\r\nimport { Progress, ProgressProps } from '@pancakeswap/uikit'\r\nimport { useBlock } from 'state/block/hooks'\r\n\r\ninterface BlockProgressProps extends ProgressProps {\r\n  startBlock: number\r\n  endBlock: number\r\n}\r\n\r\nconst BlockProgress: React.FC<BlockProgressProps> = ({ startBlock, endBlock, ...props }) => {\r\n  const { currentBlock } = useBlock()\r\n  const rawProgress = ((currentBlock - startBlock) / (endBlock - startBlock)) * 100\r\n  const progress = rawProgress <= 100 ? rawProgress : 100\r\n\r\n  return <Progress primaryStep={progress} {...props} />\r\n}\r\n\r\nexport default BlockProgress\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,QAAQ,KAAuB,oBAAoB,CAC5D,OAASC,QAAQ,KAAQ,mBAAmB,QAAAC,GAAA,IAAAC,IAAA,yBAO5C,KAAM,CAAAC,aAA2C,CAAGC,IAAA,EAAwC,IAAvC,CAAEC,UAAU,CAAEC,QAAQ,CAAE,GAAGC,KAAM,CAAC,CAAAH,IAAA,CACrF,KAAM,CAAEI,YAAa,CAAC,CAAGR,QAAQ,CAAC,CAAC,CACnC,KAAM,CAAAS,WAAW,CAAI,CAACD,YAAY,CAAGH,UAAU,GAAKC,QAAQ,CAAGD,UAAU,CAAC,CAAI,GAAG,CACjF,KAAM,CAAAK,QAAQ,CAAGD,WAAW,EAAI,GAAG,CAAGA,WAAW,CAAG,GAAG,CAEvD,mBAAOP,IAAA,CAACH,QAAQ,EAACY,WAAW,CAAED,QAAS,IAAKH,KAAK,CAAG,CAAC,CACvD,CAAC,CAED,cAAe,CAAAJ,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module"}