{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\frkul\\\\Documents\\\\swapUI_pancake-frontend\\\\src\\\\components\\\\Balance.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport CountUp from 'react-countup';\nimport { Text } from '@pancakeswap/uikit';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Balance = ({\n  value,\n  color = 'text',\n  decimals = 3,\n  isDisabled = false,\n  unit,\n  prefix,\n  onClick,\n  ...props\n}) => {\n  _s();\n  const previousValue = useRef(0);\n  useEffect(() => {\n    previousValue.current = value;\n  }, [value]);\n  return /*#__PURE__*/_jsxDEV(Text, {\n    color: isDisabled ? 'textDisabled' : color,\n    onClick: onClick,\n    ...props,\n    children: /*#__PURE__*/_jsxDEV(CountUp, {\n      start: previousValue.current,\n      end: value,\n      prefix: prefix,\n      suffix: unit,\n      decimals: decimals,\n      duration: 1,\n      separator: \",\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(Balance, \"7sxqKrCAfH7mvAmhUempIz0vd8c=\");\n_c = Balance;\nexport default Balance;\nvar _c;\n$RefreshReg$(_c, \"Balance\");","map":{"version":3,"names":["React","useEffect","useRef","CountUp","Text","jsxDEV","_jsxDEV","Balance","value","color","decimals","isDisabled","unit","prefix","onClick","props","_s","previousValue","current","children","start","end","suffix","duration","separator","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/frkul/Documents/swapUI_pancake-frontend/src/components/Balance.tsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react'\r\nimport CountUp from 'react-countup'\r\nimport { Text, TextProps } from '@pancakeswap/uikit'\r\n\r\ninterface BalanceProps extends TextProps {\r\n  value: number\r\n  decimals?: number\r\n  unit?: string\r\n  isDisabled?: boolean\r\n  prefix?: string\r\n  onClick?: (event: React.MouseEvent<HTMLElement>) => void\r\n}\r\n\r\nconst Balance: React.FC<BalanceProps> = ({\r\n  value,\r\n  color = 'text',\r\n  decimals = 3,\r\n  isDisabled = false,\r\n  unit,\r\n  prefix,\r\n  onClick,\r\n  ...props\r\n}) => {\r\n  const previousValue = useRef(0)\r\n\r\n  useEffect(() => {\r\n    previousValue.current = value\r\n  }, [value])\r\n\r\n  return (\r\n    <Text color={isDisabled ? 'textDisabled' : color} onClick={onClick} {...props}>\r\n      <CountUp\r\n        start={previousValue.current}\r\n        end={value}\r\n        prefix={prefix}\r\n        suffix={unit}\r\n        decimals={decimals}\r\n        duration={1}\r\n        separator=\",\"\r\n      />\r\n    </Text>\r\n  )\r\n}\r\n\r\nexport default Balance\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,OAAOC,OAAO,MAAM,eAAe;AACnC,SAASC,IAAI,QAAmB,oBAAoB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAWpD,MAAMC,OAA+B,GAAGA,CAAC;EACvCC,KAAK;EACLC,KAAK,GAAG,MAAM;EACdC,QAAQ,GAAG,CAAC;EACZC,UAAU,GAAG,KAAK;EAClBC,IAAI;EACJC,MAAM;EACNC,OAAO;EACP,GAAGC;AACL,CAAC,KAAK;EAAAC,EAAA;EACJ,MAAMC,aAAa,GAAGf,MAAM,CAAC,CAAC,CAAC;EAE/BD,SAAS,CAAC,MAAM;IACdgB,aAAa,CAACC,OAAO,GAAGV,KAAK;EAC/B,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EAEX,oBACEF,OAAA,CAACF,IAAI;IAACK,KAAK,EAAEE,UAAU,GAAG,cAAc,GAAGF,KAAM;IAACK,OAAO,EAAEA,OAAQ;IAAA,GAAKC,KAAK;IAAAI,QAAA,eAC3Eb,OAAA,CAACH,OAAO;MACNiB,KAAK,EAAEH,aAAa,CAACC,OAAQ;MAC7BG,GAAG,EAAEb,KAAM;MACXK,MAAM,EAAEA,MAAO;MACfS,MAAM,EAAEV,IAAK;MACbF,QAAQ,EAAEA,QAAS;MACnBa,QAAQ,EAAE,CAAE;MACZC,SAAS,EAAC;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACd;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEX,CAAC;AAAAZ,EAAA,CA7BKT,OAA+B;AAAAsB,EAAA,GAA/BtB,OAA+B;AA+BrC,eAAeA,OAAO;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}