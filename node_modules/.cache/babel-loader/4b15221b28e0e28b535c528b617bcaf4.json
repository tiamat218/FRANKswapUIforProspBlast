{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Devrim\\\\Documents\\\\FRANKswapUIforProspBlast\\\\src\\\\views\\\\Voting\\\\components\\\\Proposals\\\\TabMenu.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport styled from 'styled-components';\nimport { TabMenu as UIKitTabMenu, Tab, Flex, VerifiedIcon, CommunityIcon } from '@pancakeswap/uikit';\nimport { useTranslation } from 'contexts/Localization';\nimport { ProposalType } from 'state/types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledTabMenu = styled.div`\n  background-color: ${({\n  theme\n}) => theme.colors.input};\n  padding-top: 16px;\n`;\n_c = StyledTabMenu;\nconst getIndexFromType = proposalType => {\n  switch (proposalType) {\n    case ProposalType.COMMUNITY:\n      return 1;\n    case ProposalType.ALL:\n      return 2;\n    case ProposalType.CORE:\n    default:\n      return 0;\n  }\n};\nconst getTypeFromIndex = index => {\n  switch (index) {\n    case 1:\n      return ProposalType.COMMUNITY;\n    case 2:\n      return ProposalType.ALL;\n    default:\n      return ProposalType.CORE;\n  }\n};\nconst TabMenu = ({\n  proposalType,\n  onTypeChange\n}) => {\n  _s();\n  const {\n    t\n  } = useTranslation();\n  const handleItemClick = index => {\n    onTypeChange(getTypeFromIndex(index));\n  };\n  return /*#__PURE__*/_jsxDEV(StyledTabMenu, {\n    children: /*#__PURE__*/_jsxDEV(UIKitTabMenu, {\n      activeIndex: getIndexFromType(proposalType),\n      onItemClick: handleItemClick,\n      children: [/*#__PURE__*/_jsxDEV(Tab, {\n        children: /*#__PURE__*/_jsxDEV(Flex, {\n          alignItems: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(VerifiedIcon, {\n            color: \"currentColor\",\n            mr: \"4px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), t('Core')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tab, {\n        children: [' ', /*#__PURE__*/_jsxDEV(Flex, {\n          alignItems: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(CommunityIcon, {\n            color: \"currentColor\",\n            mr: \"4px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), t('Community')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tab, {\n        children: \"All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(TabMenu, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n_c2 = TabMenu;\nexport default TabMenu;\nvar _c, _c2;\n$RefreshReg$(_c, \"StyledTabMenu\");\n$RefreshReg$(_c2, \"TabMenu\");","map":{"version":3,"names":["React","styled","TabMenu","UIKitTabMenu","Tab","Flex","VerifiedIcon","CommunityIcon","useTranslation","ProposalType","jsxDEV","_jsxDEV","StyledTabMenu","div","theme","colors","input","_c","getIndexFromType","proposalType","COMMUNITY","ALL","CORE","getTypeFromIndex","index","onTypeChange","_s","t","handleItemClick","children","activeIndex","onItemClick","alignItems","color","mr","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/views/Voting/components/Proposals/TabMenu.tsx"],"sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { TabMenu as UIKitTabMenu, Tab, Flex, VerifiedIcon, CommunityIcon } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { ProposalType } from 'state/types'\r\n\r\ninterface TabMenuProps {\r\n  proposalType: ProposalType\r\n  onTypeChange: (proposalType: ProposalType) => void\r\n}\r\n\r\nconst StyledTabMenu = styled.div`\r\n  background-color: ${({ theme }) => theme.colors.input};\r\n  padding-top: 16px;\r\n`\r\n\r\nconst getIndexFromType = (proposalType: ProposalType) => {\r\n  switch (proposalType) {\r\n    case ProposalType.COMMUNITY:\r\n      return 1\r\n    case ProposalType.ALL:\r\n      return 2\r\n    case ProposalType.CORE:\r\n    default:\r\n      return 0\r\n  }\r\n}\r\n\r\nconst getTypeFromIndex = (index: number) => {\r\n  switch (index) {\r\n    case 1:\r\n      return ProposalType.COMMUNITY\r\n    case 2:\r\n      return ProposalType.ALL\r\n    default:\r\n      return ProposalType.CORE\r\n  }\r\n}\r\n\r\nconst TabMenu: React.FC<TabMenuProps> = ({ proposalType, onTypeChange }) => {\r\n  const { t } = useTranslation()\r\n  const handleItemClick = (index: number) => {\r\n    onTypeChange(getTypeFromIndex(index))\r\n  }\r\n\r\n  return (\r\n    <StyledTabMenu>\r\n      <UIKitTabMenu activeIndex={getIndexFromType(proposalType)} onItemClick={handleItemClick}>\r\n        <Tab>\r\n          <Flex alignItems=\"center\">\r\n            <VerifiedIcon color=\"currentColor\" mr=\"4px\" />\r\n            {t('Core')}\r\n          </Flex>\r\n        </Tab>\r\n        <Tab>\r\n          {' '}\r\n          <Flex alignItems=\"center\">\r\n            <CommunityIcon color=\"currentColor\" mr=\"4px\" />\r\n            {t('Community')}\r\n          </Flex>\r\n        </Tab>\r\n        <Tab>All</Tab>\r\n      </UIKitTabMenu>\r\n    </StyledTabMenu>\r\n  )\r\n}\r\n\r\nexport default TabMenu\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}