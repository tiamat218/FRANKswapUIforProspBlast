{"ast":null,"code":"import { ChainId } from '@pancakeswap/sdk';\nimport addresses from 'config/constants/contracts';\nimport tokens from 'config/constants/tokens';\nexport const getAddress = address => {\n  const chainId = process.env.REACT_APP_CHAIN_ID;\n  return address[chainId] ? address[chainId] : address[ChainId.MAINNET];\n};\nexport const getCakeAddress = () => {\n  return getAddress(tokens.cake.address);\n};\nexport const getMasterChefAddress = () => {\n  return getAddress(addresses.masterChef);\n};\nexport const getMulticallAddress = () => {\n  return getAddress(addresses.multiCall);\n};\nexport const getWbnbAddress = () => {\n  return getAddress(tokens.wbnb.address);\n};\nexport const getLotteryV2Address = () => {\n  return getAddress(addresses.lotteryV2);\n};\nexport const getPancakeProfileAddress = () => {\n  return getAddress(addresses.pancakeProfile);\n};\nexport const getPancakeRabbitsAddress = () => {\n  return getAddress(addresses.pancakeRabbits);\n};\nexport const getBunnyFactoryAddress = () => {\n  return getAddress(addresses.bunnyFactory);\n};\nexport const getClaimRefundAddress = () => {\n  return getAddress(addresses.claimRefund);\n};\nexport const getPointCenterIfoAddress = () => {\n  return getAddress(addresses.pointCenterIfo);\n};\nexport const getBunnySpecialAddress = () => {\n  return getAddress(addresses.bunnySpecial);\n};\nexport const getTradingCompetitionAddress = () => {\n  return getAddress(addresses.tradingCompetition);\n};\nexport const getEasterNftAddress = () => {\n  return getAddress(addresses.easterNft);\n};\nexport const getCakeVaultAddress = () => {\n  return getAddress(addresses.cakeVault);\n};\nexport const getPredictionsAddress = () => {\n  return getAddress(addresses.predictions);\n};\nexport const getChainlinkOracleAddress = () => {\n  return getAddress(addresses.chainlinkOracle);\n};\nexport const getBunnySpecialCakeVaultAddress = () => {\n  return getAddress(addresses.bunnySpecialCakeVault);\n};\nexport const getBunnySpecialPredictionAddress = () => {\n  return getAddress(addresses.bunnySpecialPrediction);\n};","map":{"version":3,"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/utils/addressHelpers.ts"],"names":["ChainId","addresses","tokens","getAddress","address","chainId","process","env","REACT_APP_CHAIN_ID","MAINNET","getCakeAddress","cake","getMasterChefAddress","masterChef","getMulticallAddress","multiCall","getWbnbAddress","wbnb","getLotteryV2Address","lotteryV2","getPancakeProfileAddress","pancakeProfile","getPancakeRabbitsAddress","pancakeRabbits","getBunnyFactoryAddress","bunnyFactory","getClaimRefundAddress","claimRefund","getPointCenterIfoAddress","pointCenterIfo","getBunnySpecialAddress","bunnySpecial","getTradingCompetitionAddress","tradingCompetition","getEasterNftAddress","easterNft","getCakeVaultAddress","cakeVault","getPredictionsAddress","predictions","getChainlinkOracleAddress","chainlinkOracle","getBunnySpecialCakeVaultAddress","bunnySpecialCakeVault","getBunnySpecialPredictionAddress","bunnySpecialPrediction"],"mappings":"AAAA,SAASA,OAAT,QAAwB,kBAAxB;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AAGA,OAAO,MAAMC,UAAU,GAAIC,OAAD,IAA8B;AACtD,QAAMC,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYC,kBAA5B;AACA,SAAOJ,OAAO,CAACC,OAAD,CAAP,GAAmBD,OAAO,CAACC,OAAD,CAA1B,GAAsCD,OAAO,CAACJ,OAAO,CAACS,OAAT,CAApD;AACD,CAHM;AAKP,OAAO,MAAMC,cAAc,GAAG,MAAM;AAClC,SAAOP,UAAU,CAACD,MAAM,CAACS,IAAP,CAAYP,OAAb,CAAjB;AACD,CAFM;AAGP,OAAO,MAAMQ,oBAAoB,GAAG,MAAM;AACxC,SAAOT,UAAU,CAACF,SAAS,CAACY,UAAX,CAAjB;AACD,CAFM;AAGP,OAAO,MAAMC,mBAAmB,GAAG,MAAM;AACvC,SAAOX,UAAU,CAACF,SAAS,CAACc,SAAX,CAAjB;AACD,CAFM;AAGP,OAAO,MAAMC,cAAc,GAAG,MAAM;AAClC,SAAOb,UAAU,CAACD,MAAM,CAACe,IAAP,CAAYb,OAAb,CAAjB;AACD,CAFM;AAGP,OAAO,MAAMc,mBAAmB,GAAG,MAAM;AACvC,SAAOf,UAAU,CAACF,SAAS,CAACkB,SAAX,CAAjB;AACD,CAFM;AAGP,OAAO,MAAMC,wBAAwB,GAAG,MAAM;AAC5C,SAAOjB,UAAU,CAACF,SAAS,CAACoB,cAAX,CAAjB;AACD,CAFM;AAGP,OAAO,MAAMC,wBAAwB,GAAG,MAAM;AAC5C,SAAOnB,UAAU,CAACF,SAAS,CAACsB,cAAX,CAAjB;AACD,CAFM;AAGP,OAAO,MAAMC,sBAAsB,GAAG,MAAM;AAC1C,SAAOrB,UAAU,CAACF,SAAS,CAACwB,YAAX,CAAjB;AACD,CAFM;AAGP,OAAO,MAAMC,qBAAqB,GAAG,MAAM;AACzC,SAAOvB,UAAU,CAACF,SAAS,CAAC0B,WAAX,CAAjB;AACD,CAFM;AAGP,OAAO,MAAMC,wBAAwB,GAAG,MAAM;AAC5C,SAAOzB,UAAU,CAACF,SAAS,CAAC4B,cAAX,CAAjB;AACD,CAFM;AAGP,OAAO,MAAMC,sBAAsB,GAAG,MAAM;AAC1C,SAAO3B,UAAU,CAACF,SAAS,CAAC8B,YAAX,CAAjB;AACD,CAFM;AAGP,OAAO,MAAMC,4BAA4B,GAAG,MAAM;AAChD,SAAO7B,UAAU,CAACF,SAAS,CAACgC,kBAAX,CAAjB;AACD,CAFM;AAGP,OAAO,MAAMC,mBAAmB,GAAG,MAAM;AACvC,SAAO/B,UAAU,CAACF,SAAS,CAACkC,SAAX,CAAjB;AACD,CAFM;AAGP,OAAO,MAAMC,mBAAmB,GAAG,MAAM;AACvC,SAAOjC,UAAU,CAACF,SAAS,CAACoC,SAAX,CAAjB;AACD,CAFM;AAGP,OAAO,MAAMC,qBAAqB,GAAG,MAAM;AACzC,SAAOnC,UAAU,CAACF,SAAS,CAACsC,WAAX,CAAjB;AACD,CAFM;AAGP,OAAO,MAAMC,yBAAyB,GAAG,MAAM;AAC7C,SAAOrC,UAAU,CAACF,SAAS,CAACwC,eAAX,CAAjB;AACD,CAFM;AAGP,OAAO,MAAMC,+BAA+B,GAAG,MAAM;AACnD,SAAOvC,UAAU,CAACF,SAAS,CAAC0C,qBAAX,CAAjB;AACD,CAFM;AAGP,OAAO,MAAMC,gCAAgC,GAAG,MAAM;AACpD,SAAOzC,UAAU,CAACF,SAAS,CAAC4C,sBAAX,CAAjB;AACD,CAFM","sourcesContent":["import { ChainId } from '@pancakeswap/sdk'\r\nimport addresses from 'config/constants/contracts'\r\nimport tokens from 'config/constants/tokens'\r\nimport { Address } from 'config/constants/types'\r\n\r\nexport const getAddress = (address: Address): string => {\r\n  const chainId = process.env.REACT_APP_CHAIN_ID\r\n  return address[chainId] ? address[chainId] : address[ChainId.MAINNET]\r\n}\r\n\r\nexport const getCakeAddress = () => {\r\n  return getAddress(tokens.cake.address)\r\n}\r\nexport const getMasterChefAddress = () => {\r\n  return getAddress(addresses.masterChef)\r\n}\r\nexport const getMulticallAddress = () => {\r\n  return getAddress(addresses.multiCall)\r\n}\r\nexport const getWbnbAddress = () => {\r\n  return getAddress(tokens.wbnb.address)\r\n}\r\nexport const getLotteryV2Address = () => {\r\n  return getAddress(addresses.lotteryV2)\r\n}\r\nexport const getPancakeProfileAddress = () => {\r\n  return getAddress(addresses.pancakeProfile)\r\n}\r\nexport const getPancakeRabbitsAddress = () => {\r\n  return getAddress(addresses.pancakeRabbits)\r\n}\r\nexport const getBunnyFactoryAddress = () => {\r\n  return getAddress(addresses.bunnyFactory)\r\n}\r\nexport const getClaimRefundAddress = () => {\r\n  return getAddress(addresses.claimRefund)\r\n}\r\nexport const getPointCenterIfoAddress = () => {\r\n  return getAddress(addresses.pointCenterIfo)\r\n}\r\nexport const getBunnySpecialAddress = () => {\r\n  return getAddress(addresses.bunnySpecial)\r\n}\r\nexport const getTradingCompetitionAddress = () => {\r\n  return getAddress(addresses.tradingCompetition)\r\n}\r\nexport const getEasterNftAddress = () => {\r\n  return getAddress(addresses.easterNft)\r\n}\r\nexport const getCakeVaultAddress = () => {\r\n  return getAddress(addresses.cakeVault)\r\n}\r\nexport const getPredictionsAddress = () => {\r\n  return getAddress(addresses.predictions)\r\n}\r\nexport const getChainlinkOracleAddress = () => {\r\n  return getAddress(addresses.chainlinkOracle)\r\n}\r\nexport const getBunnySpecialCakeVaultAddress = () => {\r\n  return getAddress(addresses.bunnySpecialCakeVault)\r\n}\r\nexport const getBunnySpecialPredictionAddress = () => {\r\n  return getAddress(addresses.bunnySpecialPrediction)\r\n}\r\n"]},"metadata":{},"sourceType":"module"}