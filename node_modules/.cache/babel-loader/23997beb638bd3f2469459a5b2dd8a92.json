{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Devrim\\\\Documents\\\\FRANKswapUIforProspBlast\\\\src\\\\views\\\\Swap\\\\components\\\\AddressInputPanel.tsx\",\n  _s = $RefreshSig$();\nimport React, { useCallback } from 'react';\nimport styled from 'styled-components';\nimport { Text, Link } from '@pancakeswap/uikit';\nimport { useTranslation } from 'contexts/Localization';\nimport useENS from '../../../hooks/ENS/useENS';\nimport useActiveWeb3React from '../../../hooks/useActiveWeb3React';\nimport { AutoColumn } from '../../../components/Layout/Column';\nimport { RowBetween } from '../../../components/Layout/Row';\nimport { getBscScanLink } from '../../../utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InputPanel = styled.div`\n  display: flex;\n  flex-flow: column nowrap;\n  position: relative;\n  border-radius: 1.25rem;\n  background-color: ${({\n  theme\n}) => theme.colors.backgroundAlt};\n  z-index: 1;\n  width: 100%;\n`;\n_c = InputPanel;\nconst ContainerRow = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 1.25rem;\n  border: 1px solid ${({\n  error,\n  theme\n}) => error ? theme.colors.failure : theme.colors.background};\n  transition: border-color 300ms ${({\n  error\n}) => error ? 'step-end' : 'step-start'},\n    color 500ms ${({\n  error\n}) => error ? 'step-end' : 'step-start'};\n  background-color: ${({\n  theme\n}) => theme.colors.backgroundAlt};\n`;\n_c2 = ContainerRow;\nconst InputContainer = styled.div`\n  flex: 1;\n  padding: 1rem;\n`;\n_c3 = InputContainer;\nconst Input = styled.input`\n  font-size: 1.25rem;\n  outline: none;\n  border: none;\n  flex: 1 1 auto;\n  width: 0;\n  background-color: ${({\n  theme\n}) => theme.colors.backgroundAlt};\n  transition: color 300ms ${({\n  error\n}) => error ? 'step-end' : 'step-start'};\n  color: ${({\n  error,\n  theme\n}) => error ? theme.colors.failure : theme.colors.primary};\n  overflow: hidden;\n  text-overflow: ellipsis;\n  font-weight: 500;\n  width: 100%;\n  ::placeholder {\n    color: ${({\n  theme\n}) => theme.colors.textDisabled};\n  }\n  padding: 0px;\n  -webkit-appearance: textfield;\n\n  ::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n\n  ::-webkit-outer-spin-button,\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n\n  ::placeholder {\n    color: ${({\n  theme\n}) => theme.colors.textDisabled};\n  }\n`;\n_c4 = Input;\nexport default function AddressInputPanel({\n  id,\n  value,\n  onChange\n}) {\n  _s();\n  const {\n    chainId\n  } = useActiveWeb3React();\n  const {\n    t\n  } = useTranslation();\n  const {\n    address,\n    loading,\n    name\n  } = useENS(value);\n  const handleInput = useCallback(event => {\n    const input = event.target.value;\n    const withoutSpaces = input.replace(/\\s+/g, '');\n    onChange(withoutSpaces);\n  }, [onChange]);\n  const error = Boolean(value.length > 0 && !loading && !address);\n  return /*#__PURE__*/_jsxDEV(InputPanel, {\n    id: id,\n    children: /*#__PURE__*/_jsxDEV(ContainerRow, {\n      error: error,\n      children: /*#__PURE__*/_jsxDEV(InputContainer, {\n        children: /*#__PURE__*/_jsxDEV(AutoColumn, {\n          gap: \"md\",\n          children: [/*#__PURE__*/_jsxDEV(RowBetween, {\n            children: [/*#__PURE__*/_jsxDEV(Text, {\n              children: t('Recipient')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this), address && chainId && /*#__PURE__*/_jsxDEV(Link, {\n              external: true,\n              small: true,\n              href: getBscScanLink(name !== null && name !== void 0 ? name : address, 'address', chainId),\n              children: [\"(\", t('View on BscScan'), \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            className: \"recipient-address-input\",\n            type: \"text\",\n            autoComplete: \"off\",\n            autoCorrect: \"off\",\n            autoCapitalize: \"off\",\n            spellCheck: \"false\",\n            placeholder: t('Wallet Address or ENS name'),\n            error: error,\n            pattern: \"^(0x[a-fA-F0-9]{40})$\",\n            onChange: handleInput,\n            value: value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n}\n_s(AddressInputPanel, \"Ekla7r100kPJlfuvm4VIBijlD1E=\", false, function () {\n  return [useActiveWeb3React, useTranslation, useENS];\n});\n_c5 = AddressInputPanel;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"InputPanel\");\n$RefreshReg$(_c2, \"ContainerRow\");\n$RefreshReg$(_c3, \"InputContainer\");\n$RefreshReg$(_c4, \"Input\");\n$RefreshReg$(_c5, \"AddressInputPanel\");","map":{"version":3,"names":["React","useCallback","styled","Text","Link","useTranslation","useENS","useActiveWeb3React","AutoColumn","RowBetween","getBscScanLink","jsxDEV","_jsxDEV","InputPanel","div","theme","colors","backgroundAlt","_c","ContainerRow","error","failure","background","_c2","InputContainer","_c3","Input","input","primary","textDisabled","_c4","AddressInputPanel","id","value","onChange","_s","chainId","t","address","loading","name","handleInput","event","target","withoutSpaces","replace","Boolean","length","children","gap","fileName","_jsxFileName","lineNumber","columnNumber","external","small","href","className","type","autoComplete","autoCorrect","autoCapitalize","spellCheck","placeholder","pattern","_c5","$RefreshReg$"],"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/views/Swap/components/AddressInputPanel.tsx"],"sourcesContent":["import React, { useCallback } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text, Link } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useENS from '../../../hooks/ENS/useENS'\r\nimport useActiveWeb3React from '../../../hooks/useActiveWeb3React'\r\nimport { AutoColumn } from '../../../components/Layout/Column'\r\nimport { RowBetween } from '../../../components/Layout/Row'\r\nimport { getBscScanLink } from '../../../utils'\r\n\r\nconst InputPanel = styled.div`\r\n  display: flex;\r\n  flex-flow: column nowrap;\r\n  position: relative;\r\n  border-radius: 1.25rem;\r\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\r\n  z-index: 1;\r\n  width: 100%;\r\n`\r\n\r\nconst ContainerRow = styled.div<{ error: boolean }>`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border-radius: 1.25rem;\r\n  border: 1px solid ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.background)};\r\n  transition: border-color 300ms ${({ error }) => (error ? 'step-end' : 'step-start')},\r\n    color 500ms ${({ error }) => (error ? 'step-end' : 'step-start')};\r\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\r\n`\r\n\r\nconst InputContainer = styled.div`\r\n  flex: 1;\r\n  padding: 1rem;\r\n`\r\n\r\nconst Input = styled.input<{ error?: boolean }>`\r\n  font-size: 1.25rem;\r\n  outline: none;\r\n  border: none;\r\n  flex: 1 1 auto;\r\n  width: 0;\r\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\r\n  transition: color 300ms ${({ error }) => (error ? 'step-end' : 'step-start')};\r\n  color: ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.primary)};\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  font-weight: 500;\r\n  width: 100%;\r\n  ::placeholder {\r\n    color: ${({ theme }) => theme.colors.textDisabled};\r\n  }\r\n  padding: 0px;\r\n  -webkit-appearance: textfield;\r\n\r\n  ::-webkit-search-decoration {\r\n    -webkit-appearance: none;\r\n  }\r\n\r\n  ::-webkit-outer-spin-button,\r\n  ::-webkit-inner-spin-button {\r\n    -webkit-appearance: none;\r\n  }\r\n\r\n  ::placeholder {\r\n    color: ${({ theme }) => theme.colors.textDisabled};\r\n  }\r\n`\r\n\r\nexport default function AddressInputPanel({\r\n  id,\r\n  value,\r\n  onChange,\r\n}: {\r\n  id?: string\r\n  // the typed string value\r\n  value: string\r\n  // triggers whenever the typed value changes\r\n  onChange: (value: string) => void\r\n}) {\r\n  const { chainId } = useActiveWeb3React()\r\n\r\n  const { t } = useTranslation()\r\n\r\n  const { address, loading, name } = useENS(value)\r\n\r\n  const handleInput = useCallback(\r\n    (event) => {\r\n      const input = event.target.value\r\n      const withoutSpaces = input.replace(/\\s+/g, '')\r\n      onChange(withoutSpaces)\r\n    },\r\n    [onChange],\r\n  )\r\n\r\n  const error = Boolean(value.length > 0 && !loading && !address)\r\n\r\n  return (\r\n    <InputPanel id={id}>\r\n      <ContainerRow error={error}>\r\n        <InputContainer>\r\n          <AutoColumn gap=\"md\">\r\n            <RowBetween>\r\n              <Text>{t('Recipient')}</Text>\r\n              {address && chainId && (\r\n                <Link external small href={getBscScanLink(name ?? address, 'address', chainId)}>\r\n                  ({t('View on BscScan')})\r\n                </Link>\r\n              )}\r\n            </RowBetween>\r\n            <Input\r\n              className=\"recipient-address-input\"\r\n              type=\"text\"\r\n              autoComplete=\"off\"\r\n              autoCorrect=\"off\"\r\n              autoCapitalize=\"off\"\r\n              spellCheck=\"false\"\r\n              placeholder={t('Wallet Address or ENS name')}\r\n              error={error}\r\n              pattern=\"^(0x[a-fA-F0-9]{40})$\"\r\n              onChange={handleInput}\r\n              value={value}\r\n            />\r\n          </AutoColumn>\r\n        </InputContainer>\r\n      </ContainerRow>\r\n    </InputPanel>\r\n  )\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}