{"ast":null,"code":"import _taggedTemplateLiteral from\"C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject;import React from'react';import styled from'styled-components';import{BlockIcon,CheckmarkCircleIcon,Flex,CrownIcon,Text,TeamPlayerIcon,TrophyGoldIcon,Skeleton}from'@pancakeswap/uikit';import{useTranslation}from'contexts/Localization';import{useCompetitionCakeRewards,getRewardGroupAchievements}from'../../helpers';import{BoldTd,Td,StyledPrizeTable}from'../StyledPrizeTable';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const StyledThead=styled.thead(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  border-bottom: 2px solid \",\";\\n\"])),_ref=>{let{theme}=_ref;return theme.colors.cardBorder;});const UserPrizeGrid=_ref2=>{let{userTradingInformation}=_ref2;const{t}=useTranslation();const{userRewardGroup,userCakeRewards,userPointReward,canClaimNFT}=userTradingInformation;const{cakeReward,dollarValueOfCakeReward}=useCompetitionCakeRewards(userCakeRewards);const{champion,teamPlayer}=getRewardGroupAchievements(userRewardGroup);return/*#__PURE__*/_jsxs(StyledPrizeTable,{children:[/*#__PURE__*/_jsx(StyledThead,{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:t('CAKE Prizes')}),/*#__PURE__*/_jsx(\"th\",{children:t('Achievements')}),/*#__PURE__*/_jsx(\"th\",{children:t('NFT')})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(BoldTd,{children:/*#__PURE__*/_jsxs(Flex,{flexDirection:\"column\",children:[/*#__PURE__*/_jsx(Text,{bold:true,children:cakeReward.toFixed(2)}),dollarValueOfCakeReward?/*#__PURE__*/_jsxs(Text,{fontSize:\"12px\",color:\"textSubtle\",children:[\"~\",dollarValueOfCakeReward,\" USD\"]}):/*#__PURE__*/_jsx(Skeleton,{height:24,width:80})]})}),/*#__PURE__*/_jsx(Td,{children:/*#__PURE__*/_jsxs(Flex,{alignItems:\"center\",flexWrap:\"wrap\",justifyContent:\"center\",width:\"100%\",children:[champion&&/*#__PURE__*/_jsx(CrownIcon,{mr:[0,'4px']}),teamPlayer&&/*#__PURE__*/_jsx(TeamPlayerIcon,{mr:[0,'4px']}),/*#__PURE__*/_jsx(TrophyGoldIcon,{mr:[0,'4px']}),/*#__PURE__*/_jsxs(Text,{fontSize:\"12px\",color:\"textSubtle\",textTransform:\"lowercase\",children:[\"+ \",userPointReward,\" \",t('Points')]})]})}),/*#__PURE__*/_jsx(Td,{children:canClaimNFT?/*#__PURE__*/_jsx(CheckmarkCircleIcon,{color:\"success\"}):/*#__PURE__*/_jsx(BlockIcon,{color:\"textDisabled\"})})]})})]});};export default UserPrizeGrid;","map":{"version":3,"names":["React","styled","BlockIcon","CheckmarkCircleIcon","Flex","CrownIcon","Text","TeamPlayerIcon","TrophyGoldIcon","Skeleton","useTranslation","useCompetitionCakeRewards","getRewardGroupAchievements","BoldTd","Td","StyledPrizeTable","jsx","_jsx","jsxs","_jsxs","StyledThead","thead","_templateObject","_taggedTemplateLiteral","_ref","theme","colors","cardBorder","UserPrizeGrid","_ref2","userTradingInformation","t","userRewardGroup","userCakeRewards","userPointReward","canClaimNFT","cakeReward","dollarValueOfCakeReward","champion","teamPlayer","children","flexDirection","bold","toFixed","fontSize","color","height","width","alignItems","flexWrap","justifyContent","mr","textTransform"],"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/views/TradingCompetition/components/YourScore/UserPrizeGrid.tsx"],"sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\nimport {\r\n  BlockIcon,\r\n  CheckmarkCircleIcon,\r\n  Flex,\r\n  CrownIcon,\r\n  Text,\r\n  TeamPlayerIcon,\r\n  TrophyGoldIcon,\r\n  Skeleton,\r\n} from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { UserTradingInformationProps } from '../../types'\r\nimport { useCompetitionCakeRewards, getRewardGroupAchievements } from '../../helpers'\r\nimport { BoldTd, Td, StyledPrizeTable } from '../StyledPrizeTable'\r\n\r\nconst StyledThead = styled.thead`\r\n  border-bottom: 2px solid ${({ theme }) => theme.colors.cardBorder};\r\n`\r\n\r\nconst UserPrizeGrid: React.FC<{ userTradingInformation?: UserTradingInformationProps }> = ({\r\n  userTradingInformation,\r\n}) => {\r\n  const { t } = useTranslation()\r\n  const { userRewardGroup, userCakeRewards, userPointReward, canClaimNFT } = userTradingInformation\r\n  const { cakeReward, dollarValueOfCakeReward } = useCompetitionCakeRewards(userCakeRewards)\r\n  const { champion, teamPlayer } = getRewardGroupAchievements(userRewardGroup)\r\n\r\n  return (\r\n    <StyledPrizeTable>\r\n      <StyledThead>\r\n        <tr>\r\n          <th>{t('CAKE Prizes')}</th>\r\n          <th>{t('Achievements')}</th>\r\n          <th>{t('NFT')}</th>\r\n        </tr>\r\n      </StyledThead>\r\n      <tbody>\r\n        <tr>\r\n          <BoldTd>\r\n            <Flex flexDirection=\"column\">\r\n              <Text bold>{cakeReward.toFixed(2)}</Text>\r\n              {dollarValueOfCakeReward ? (\r\n                <Text fontSize=\"12px\" color=\"textSubtle\">\r\n                  ~{dollarValueOfCakeReward} USD\r\n                </Text>\r\n              ) : (\r\n                <Skeleton height={24} width={80} />\r\n              )}\r\n            </Flex>\r\n          </BoldTd>\r\n          <Td>\r\n            <Flex alignItems=\"center\" flexWrap=\"wrap\" justifyContent=\"center\" width=\"100%\">\r\n              {champion && <CrownIcon mr={[0, '4px']} />}\r\n              {teamPlayer && <TeamPlayerIcon mr={[0, '4px']} />}\r\n              <TrophyGoldIcon mr={[0, '4px']} />\r\n              <Text fontSize=\"12px\" color=\"textSubtle\" textTransform=\"lowercase\">\r\n                + {userPointReward} {t('Points')}\r\n              </Text>\r\n            </Flex>\r\n          </Td>\r\n          <Td>{canClaimNFT ? <CheckmarkCircleIcon color=\"success\" /> : <BlockIcon color=\"textDisabled\" />}</Td>\r\n        </tr>\r\n      </tbody>\r\n    </StyledPrizeTable>\r\n  )\r\n}\r\n\r\nexport default UserPrizeGrid\r\n"],"mappings":"6MAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,MAAO,CAAAC,MAAM,KAAM,mBAAmB,CACtC,OACEC,SAAS,CACTC,mBAAmB,CACnBC,IAAI,CACJC,SAAS,CACTC,IAAI,CACJC,cAAc,CACdC,cAAc,CACdC,QAAQ,KACH,oBAAoB,CAC3B,OAASC,cAAc,KAAQ,uBAAuB,CAEtD,OAASC,yBAAyB,CAAEC,0BAA0B,KAAQ,eAAe,CACrF,OAASC,MAAM,CAAEC,EAAE,CAAEC,gBAAgB,KAAQ,qBAAqB,QAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAElE,KAAM,CAAAC,WAAW,CAAGnB,MAAM,CAACoB,KAAK,CAAAC,eAAA,GAAAA,eAAA,CAAAC,sBAAA,2CACHC,IAAA,MAAC,CAAEC,KAAM,CAAC,CAAAD,IAAA,OAAK,CAAAC,KAAK,CAACC,MAAM,CAACC,UAAU,GAClE,CAED,KAAM,CAAAC,aAAiF,CAAGC,KAAA,EAEpF,IAFqF,CACzFC,sBACF,CAAC,CAAAD,KAAA,CACC,KAAM,CAAEE,CAAE,CAAC,CAAGrB,cAAc,CAAC,CAAC,CAC9B,KAAM,CAAEsB,eAAe,CAAEC,eAAe,CAAEC,eAAe,CAAEC,WAAY,CAAC,CAAGL,sBAAsB,CACjG,KAAM,CAAEM,UAAU,CAAEC,uBAAwB,CAAC,CAAG1B,yBAAyB,CAACsB,eAAe,CAAC,CAC1F,KAAM,CAAEK,QAAQ,CAAEC,UAAW,CAAC,CAAG3B,0BAA0B,CAACoB,eAAe,CAAC,CAE5E,mBACEb,KAAA,CAACJ,gBAAgB,EAAAyB,QAAA,eACfvB,IAAA,CAACG,WAAW,EAAAoB,QAAA,cACVrB,KAAA,OAAAqB,QAAA,eACEvB,IAAA,OAAAuB,QAAA,CAAKT,CAAC,CAAC,aAAa,CAAC,CAAK,CAAC,cAC3Bd,IAAA,OAAAuB,QAAA,CAAKT,CAAC,CAAC,cAAc,CAAC,CAAK,CAAC,cAC5Bd,IAAA,OAAAuB,QAAA,CAAKT,CAAC,CAAC,KAAK,CAAC,CAAK,CAAC,EACjB,CAAC,CACM,CAAC,cACdd,IAAA,UAAAuB,QAAA,cACErB,KAAA,OAAAqB,QAAA,eACEvB,IAAA,CAACJ,MAAM,EAAA2B,QAAA,cACLrB,KAAA,CAACf,IAAI,EAACqC,aAAa,CAAC,QAAQ,CAAAD,QAAA,eAC1BvB,IAAA,CAACX,IAAI,EAACoC,IAAI,MAAAF,QAAA,CAAEJ,UAAU,CAACO,OAAO,CAAC,CAAC,CAAC,CAAO,CAAC,CACxCN,uBAAuB,cACtBlB,KAAA,CAACb,IAAI,EAACsC,QAAQ,CAAC,MAAM,CAACC,KAAK,CAAC,YAAY,CAAAL,QAAA,EAAC,GACtC,CAACH,uBAAuB,CAAC,MAC5B,EAAM,CAAC,cAEPpB,IAAA,CAACR,QAAQ,EAACqC,MAAM,CAAE,EAAG,CAACC,KAAK,CAAE,EAAG,CAAE,CACnC,EACG,CAAC,CACD,CAAC,cACT9B,IAAA,CAACH,EAAE,EAAA0B,QAAA,cACDrB,KAAA,CAACf,IAAI,EAAC4C,UAAU,CAAC,QAAQ,CAACC,QAAQ,CAAC,MAAM,CAACC,cAAc,CAAC,QAAQ,CAACH,KAAK,CAAC,MAAM,CAAAP,QAAA,EAC3EF,QAAQ,eAAIrB,IAAA,CAACZ,SAAS,EAAC8C,EAAE,CAAE,CAAC,CAAC,CAAE,KAAK,CAAE,CAAE,CAAC,CACzCZ,UAAU,eAAItB,IAAA,CAACV,cAAc,EAAC4C,EAAE,CAAE,CAAC,CAAC,CAAE,KAAK,CAAE,CAAE,CAAC,cACjDlC,IAAA,CAACT,cAAc,EAAC2C,EAAE,CAAE,CAAC,CAAC,CAAE,KAAK,CAAE,CAAE,CAAC,cAClChC,KAAA,CAACb,IAAI,EAACsC,QAAQ,CAAC,MAAM,CAACC,KAAK,CAAC,YAAY,CAACO,aAAa,CAAC,WAAW,CAAAZ,QAAA,EAAC,IAC/D,CAACN,eAAe,CAAC,GAAC,CAACH,CAAC,CAAC,QAAQ,CAAC,EAC5B,CAAC,EACH,CAAC,CACL,CAAC,cACLd,IAAA,CAACH,EAAE,EAAA0B,QAAA,CAAEL,WAAW,cAAGlB,IAAA,CAACd,mBAAmB,EAAC0C,KAAK,CAAC,SAAS,CAAE,CAAC,cAAG5B,IAAA,CAACf,SAAS,EAAC2C,KAAK,CAAC,cAAc,CAAE,CAAC,CAAK,CAAC,EACnG,CAAC,CACA,CAAC,EACQ,CAAC,CAEvB,CAAC,CAED,cAAe,CAAAjB,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module"}