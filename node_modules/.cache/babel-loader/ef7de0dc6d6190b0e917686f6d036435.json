{"ast":null,"code":"import React from'react';import orderBy from'lodash/orderBy';import{useWeb3React}from'@web3-react/core';import nfts from'config/constants/nfts';import{useAppDispatch}from'state';import{fetchWalletNfts}from'state/collectibles';import{useGetCollectibles}from'state/hooks';import NftCard from'./NftCard';import NftGrid from'./NftGrid';import EasterNftCard from'./NftCard/EasterNftCard';/**\r\n * A map of bunnyIds to special campaigns (NFT distribution)\r\n * Each NftCard is responsible for checking it's own claim status\r\n *\r\n */import{jsx as _jsx}from\"react/jsx-runtime\";const nftComponents={'easter-storm':EasterNftCard,'easter-flipper':EasterNftCard,'easter-caker':EasterNftCard};const NftList=()=>{const{tokenIds}=useGetCollectibles();const dispatch=useAppDispatch();const{account}=useWeb3React();const handleRefresh=()=>{dispatch(fetchWalletNfts(account));};return/*#__PURE__*/_jsx(NftGrid,{children:orderBy(nfts,'sortOrder').map(nft=>{const Card=nftComponents[nft.identifier]||NftCard;return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Card,{nft:nft,tokenIds:tokenIds[nft.identifier],refresh:handleRefresh})},nft.name);})});};export default NftList;","map":{"version":3,"names":["React","orderBy","useWeb3React","nfts","useAppDispatch","fetchWalletNfts","useGetCollectibles","NftCard","NftGrid","EasterNftCard","jsx","_jsx","nftComponents","NftList","tokenIds","dispatch","account","handleRefresh","children","map","nft","Card","identifier","refresh","name"],"sources":["C:/Users/frkul/Documents/swapUI_pancake-frontend/src/views/Collectibles/components/NftList.tsx"],"sourcesContent":["import React from 'react'\r\nimport orderBy from 'lodash/orderBy'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport nfts from 'config/constants/nfts'\r\nimport { useAppDispatch } from 'state'\r\nimport { fetchWalletNfts } from 'state/collectibles'\r\nimport { useGetCollectibles } from 'state/hooks'\r\nimport NftCard from './NftCard'\r\nimport NftGrid from './NftGrid'\r\nimport EasterNftCard from './NftCard/EasterNftCard'\r\n\r\n/**\r\n * A map of bunnyIds to special campaigns (NFT distribution)\r\n * Each NftCard is responsible for checking it's own claim status\r\n *\r\n */\r\nconst nftComponents = {\r\n  'easter-storm': EasterNftCard,\r\n  'easter-flipper': EasterNftCard,\r\n  'easter-caker': EasterNftCard,\r\n}\r\n\r\nconst NftList = () => {\r\n  const { tokenIds } = useGetCollectibles()\r\n  const dispatch = useAppDispatch()\r\n  const { account } = useWeb3React()\r\n\r\n  const handleRefresh = () => {\r\n    dispatch(fetchWalletNfts(account))\r\n  }\r\n\r\n  return (\r\n    <NftGrid>\r\n      {orderBy(nfts, 'sortOrder').map((nft) => {\r\n        const Card = nftComponents[nft.identifier] || NftCard\r\n\r\n        return (\r\n          <div key={nft.name}>\r\n            <Card nft={nft} tokenIds={tokenIds[nft.identifier]} refresh={handleRefresh} />\r\n          </div>\r\n        )\r\n      })}\r\n    </NftGrid>\r\n  )\r\n}\r\n\r\nexport default NftList\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,MAAO,CAAAC,OAAO,KAAM,gBAAgB,CACpC,OAASC,YAAY,KAAQ,kBAAkB,CAC/C,MAAO,CAAAC,IAAI,KAAM,uBAAuB,CACxC,OAASC,cAAc,KAAQ,OAAO,CACtC,OAASC,eAAe,KAAQ,oBAAoB,CACpD,OAASC,kBAAkB,KAAQ,aAAa,CAChD,MAAO,CAAAC,OAAO,KAAM,WAAW,CAC/B,MAAO,CAAAC,OAAO,KAAM,WAAW,CAC/B,MAAO,CAAAC,aAAa,KAAM,yBAAyB,CAEnD;AACA;AACA;AACA;AACA,GAJA,OAAAC,GAAA,IAAAC,IAAA,yBAKA,KAAM,CAAAC,aAAa,CAAG,CACpB,cAAc,CAAEH,aAAa,CAC7B,gBAAgB,CAAEA,aAAa,CAC/B,cAAc,CAAEA,aAClB,CAAC,CAED,KAAM,CAAAI,OAAO,CAAGA,CAAA,GAAM,CACpB,KAAM,CAAEC,QAAS,CAAC,CAAGR,kBAAkB,CAAC,CAAC,CACzC,KAAM,CAAAS,QAAQ,CAAGX,cAAc,CAAC,CAAC,CACjC,KAAM,CAAEY,OAAQ,CAAC,CAAGd,YAAY,CAAC,CAAC,CAElC,KAAM,CAAAe,aAAa,CAAGA,CAAA,GAAM,CAC1BF,QAAQ,CAACV,eAAe,CAACW,OAAO,CAAC,CAAC,CACpC,CAAC,CAED,mBACEL,IAAA,CAACH,OAAO,EAAAU,QAAA,CACLjB,OAAO,CAACE,IAAI,CAAE,WAAW,CAAC,CAACgB,GAAG,CAAEC,GAAG,EAAK,CACvC,KAAM,CAAAC,IAAI,CAAGT,aAAa,CAACQ,GAAG,CAACE,UAAU,CAAC,EAAIf,OAAO,CAErD,mBACEI,IAAA,QAAAO,QAAA,cACEP,IAAA,CAACU,IAAI,EAACD,GAAG,CAAEA,GAAI,CAACN,QAAQ,CAAEA,QAAQ,CAACM,GAAG,CAACE,UAAU,CAAE,CAACC,OAAO,CAAEN,aAAc,CAAE,CAAC,EADtEG,GAAG,CAACI,IAET,CAAC,CAEV,CAAC,CAAC,CACK,CAAC,CAEd,CAAC,CAED,cAAe,CAAAX,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module"}