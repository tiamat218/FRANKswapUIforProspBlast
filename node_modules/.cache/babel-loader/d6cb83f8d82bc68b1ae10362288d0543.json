{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Devrim\\\\Documents\\\\FRANKswapUIforProspBlast\\\\src\\\\components\\\\SearchModal\\\\ImportRow.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Button, Text, CheckmarkCircleIcon } from '@pancakeswap/uikit';\nimport { AutoRow, RowFixed } from 'components/Layout/Row';\nimport { AutoColumn } from 'components/Layout/Column';\nimport CurrencyLogo from 'components/Logo/CurrencyLogo';\nimport { ListLogo } from 'components/Logo';\nimport useActiveWeb3React from 'hooks/useActiveWeb3React';\nimport { useCombinedInactiveList } from 'state/lists/hooks';\nimport styled from 'styled-components';\nimport { useIsUserAddedToken, useIsTokenActive } from 'hooks/Tokens';\nimport { useTranslation } from 'contexts/Localization';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TokenSection = styled.div`\n  padding: 4px 20px;\n  height: 56px;\n  display: grid;\n  grid-template-columns: auto minmax(auto, 1fr) auto;\n  grid-gap: 16px;\n  align-items: center;\n\n  opacity: ${({\n  dim\n}) => dim ? '0.4' : '1'};\n`;\n_c = TokenSection;\nconst CheckIcon = styled(CheckmarkCircleIcon)`\n  height: 16px;\n  width: 16px;\n  margin-right: 6px;\n  stroke: ${({\n  theme\n}) => theme.colors.success};\n`;\n_c2 = CheckIcon;\nconst NameOverflow = styled.div`\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  max-width: 140px;\n  font-size: 12px;\n`;\n_c3 = NameOverflow;\nexport default function ImportRow({\n  token,\n  style,\n  dim,\n  showImportView,\n  setImportToken\n}) {\n  _s();\n\n  var _inactiveTokenList$ch, _inactiveTokenList$ch2;\n\n  // gloabls\n  const {\n    chainId\n  } = useActiveWeb3React();\n  const {\n    t\n  } = useTranslation(); // check if token comes from list\n\n  const inactiveTokenList = useCombinedInactiveList();\n  const list = chainId && (inactiveTokenList === null || inactiveTokenList === void 0 ? void 0 : (_inactiveTokenList$ch = inactiveTokenList[chainId]) === null || _inactiveTokenList$ch === void 0 ? void 0 : (_inactiveTokenList$ch2 = _inactiveTokenList$ch[token.address]) === null || _inactiveTokenList$ch2 === void 0 ? void 0 : _inactiveTokenList$ch2.list); // check if already active on list or local storage tokens\n\n  const isAdded = useIsUserAddedToken(token);\n  const isActive = useIsTokenActive(token);\n  return /*#__PURE__*/_jsxDEV(TokenSection, {\n    style: style,\n    children: [/*#__PURE__*/_jsxDEV(CurrencyLogo, {\n      currency: token,\n      size: \"24px\",\n      style: {\n        opacity: dim ? '0.6' : '1'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AutoColumn, {\n      gap: \"4px\",\n      style: {\n        opacity: dim ? '0.6' : '1'\n      },\n      children: [/*#__PURE__*/_jsxDEV(AutoRow, {\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          children: token.symbol\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          color: \"textDisabled\",\n          ml: \"8px\",\n          children: /*#__PURE__*/_jsxDEV(NameOverflow, {\n            title: token.name,\n            children: token.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), list && list.logoURI && /*#__PURE__*/_jsxDEV(RowFixed, {\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          small: true,\n          mr: \"4px\",\n          color: \"textSubtle\",\n          children: [t('via'), \" \", list.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ListLogo, {\n          logoURI: list.logoURI,\n          size: \"12px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), !isActive && !isAdded ? /*#__PURE__*/_jsxDEV(Button, {\n      width: \"fit-content\",\n      onClick: () => {\n        if (setImportToken) {\n          setImportToken(token);\n        }\n\n        showImportView();\n      },\n      children: t('Import')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(RowFixed, {\n      style: {\n        minWidth: 'fit-content'\n      },\n      children: [/*#__PURE__*/_jsxDEV(CheckIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        color: \"success\",\n        children: \"Active\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ImportRow, \"k6VBbn8Dq7VAfH9UmbWAqWe75KI=\", false, function () {\n  return [useActiveWeb3React, useTranslation, useCombinedInactiveList, useIsUserAddedToken, useIsTokenActive];\n});\n\n_c4 = ImportRow;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"TokenSection\");\n$RefreshReg$(_c2, \"CheckIcon\");\n$RefreshReg$(_c3, \"NameOverflow\");\n$RefreshReg$(_c4, \"ImportRow\");","map":{"version":3,"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/components/SearchModal/ImportRow.tsx"],"names":["React","Button","Text","CheckmarkCircleIcon","AutoRow","RowFixed","AutoColumn","CurrencyLogo","ListLogo","useActiveWeb3React","useCombinedInactiveList","styled","useIsUserAddedToken","useIsTokenActive","useTranslation","TokenSection","div","dim","CheckIcon","theme","colors","success","NameOverflow","ImportRow","token","style","showImportView","setImportToken","chainId","t","inactiveTokenList","list","address","isAdded","isActive","opacity","symbol","name","logoURI","minWidth"],"mappings":"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","sourcesContent":["import React, { CSSProperties } from 'react'\r\nimport { Token } from '@pancakeswap/sdk'\r\nimport { Button, Text, CheckmarkCircleIcon } from '@pancakeswap/uikit'\r\nimport { AutoRow, RowFixed } from 'components/Layout/Row'\r\nimport { AutoColumn } from 'components/Layout/Column'\r\nimport CurrencyLogo from 'components/Logo/CurrencyLogo'\r\nimport { ListLogo } from 'components/Logo'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport { useCombinedInactiveList } from 'state/lists/hooks'\r\nimport styled from 'styled-components'\r\nimport { useIsUserAddedToken, useIsTokenActive } from 'hooks/Tokens'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\nconst TokenSection = styled.div<{ dim?: boolean }>`\r\n  padding: 4px 20px;\r\n  height: 56px;\r\n  display: grid;\r\n  grid-template-columns: auto minmax(auto, 1fr) auto;\r\n  grid-gap: 16px;\r\n  align-items: center;\r\n\r\n  opacity: ${({ dim }) => (dim ? '0.4' : '1')};\r\n`\r\n\r\nconst CheckIcon = styled(CheckmarkCircleIcon)`\r\n  height: 16px;\r\n  width: 16px;\r\n  margin-right: 6px;\r\n  stroke: ${({ theme }) => theme.colors.success};\r\n`\r\n\r\nconst NameOverflow = styled.div`\r\n  white-space: nowrap;\r\n  text-overflow: ellipsis;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  max-width: 140px;\r\n  font-size: 12px;\r\n`\r\n\r\nexport default function ImportRow({\r\n  token,\r\n  style,\r\n  dim,\r\n  showImportView,\r\n  setImportToken,\r\n}: {\r\n  token: Token\r\n  style?: CSSProperties\r\n  dim?: boolean\r\n  showImportView: () => void\r\n  setImportToken: (token: Token) => void\r\n}) {\r\n  // gloabls\r\n  const { chainId } = useActiveWeb3React()\r\n\r\n  const { t } = useTranslation()\r\n\r\n  // check if token comes from list\r\n  const inactiveTokenList = useCombinedInactiveList()\r\n  const list = chainId && inactiveTokenList?.[chainId]?.[token.address]?.list\r\n\r\n  // check if already active on list or local storage tokens\r\n  const isAdded = useIsUserAddedToken(token)\r\n  const isActive = useIsTokenActive(token)\r\n\r\n  return (\r\n    <TokenSection style={style}>\r\n      <CurrencyLogo currency={token} size=\"24px\" style={{ opacity: dim ? '0.6' : '1' }} />\r\n      <AutoColumn gap=\"4px\" style={{ opacity: dim ? '0.6' : '1' }}>\r\n        <AutoRow>\r\n          <Text>{token.symbol}</Text>\r\n          <Text color=\"textDisabled\" ml=\"8px\">\r\n            <NameOverflow title={token.name}>{token.name}</NameOverflow>\r\n          </Text>\r\n        </AutoRow>\r\n        {list && list.logoURI && (\r\n          <RowFixed>\r\n            <Text small mr=\"4px\" color=\"textSubtle\">\r\n              {t('via')} {list.name}\r\n            </Text>\r\n            <ListLogo logoURI={list.logoURI} size=\"12px\" />\r\n          </RowFixed>\r\n        )}\r\n      </AutoColumn>\r\n      {!isActive && !isAdded ? (\r\n        <Button\r\n          width=\"fit-content\"\r\n          onClick={() => {\r\n            if (setImportToken) {\r\n              setImportToken(token)\r\n            }\r\n            showImportView()\r\n          }}\r\n        >\r\n          {t('Import')}\r\n        </Button>\r\n      ) : (\r\n        <RowFixed style={{ minWidth: 'fit-content' }}>\r\n          <CheckIcon />\r\n          <Text color=\"success\">Active</Text>\r\n        </RowFixed>\r\n      )}\r\n    </TokenSection>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}