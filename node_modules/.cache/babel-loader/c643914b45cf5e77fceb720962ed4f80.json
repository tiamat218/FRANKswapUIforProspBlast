{"ast":null,"code":"import _taggedTemplateLiteral from\"C:/Users/frkul/Documents/swapUI_pancake-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject;import React,{useEffect,useState}from'react';import styled from'styled-components';import{Modal,Text,Flex,Image,Button,Slider,BalanceInput,AutoRenewIcon,Link}from'@pancakeswap/uikit';import{useTranslation}from'contexts/Localization';import useTheme from'hooks/useTheme';import useToast from'hooks/useToast';import BigNumber from'bignumber.js';import{getFullDisplayBalance,formatNumber,getDecimalAmount}from'utils/formatBalance';import{getAddress}from'utils/addressHelpers';import PercentageButton from'./PercentageButton';import useStakePool from'../../../hooks/useStakePool';import useUnstakePool from'../../../hooks/useUnstakePool';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const StyledLink=styled(Link)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  width: 100%;\\n\"])));const StakeModal=_ref=>{let{isBnbPool,pool,stakingTokenBalance,stakingTokenPrice,isRemovingStake=false,onDismiss}=_ref;const{sousId,stakingToken,userData,stakingLimit,earningToken}=pool;const{t}=useTranslation();const{theme}=useTheme();const{onStake}=useStakePool(sousId,isBnbPool);const{onUnstake}=useUnstakePool(sousId,pool.enableEmergencyWithdraw);const{toastSuccess,toastError}=useToast();const[pendingTx,setPendingTx]=useState(false);const[stakeAmount,setStakeAmount]=useState('');const[hasReachedStakeLimit,setHasReachedStakedLimit]=useState(false);const[percent,setPercent]=useState(0);const getCalculatedStakingLimit=()=>{if(isRemovingStake){return userData.stakedBalance;}return stakingLimit.gt(0)&&stakingTokenBalance.gt(stakingLimit)?stakingLimit:stakingTokenBalance;};const usdValueStaked=stakeAmount&&formatNumber(new BigNumber(stakeAmount).times(stakingTokenPrice).toNumber());useEffect(()=>{if(stakingLimit.gt(0)&&!isRemovingStake){const fullDecimalStakeAmount=getDecimalAmount(new BigNumber(stakeAmount),stakingToken.decimals);setHasReachedStakedLimit(fullDecimalStakeAmount.plus(userData.stakedBalance).gt(stakingLimit));}},[stakeAmount,stakingLimit,userData,stakingToken,isRemovingStake,setHasReachedStakedLimit]);const handleStakeInputChange=input=>{if(input){const convertedInput=getDecimalAmount(new BigNumber(input),stakingToken.decimals);const percentage=Math.floor(convertedInput.dividedBy(getCalculatedStakingLimit()).multipliedBy(100).toNumber());setPercent(Math.min(percentage,100));}else{setPercent(0);}setStakeAmount(input);};const handleChangePercent=sliderPercent=>{if(sliderPercent>0){const percentageOfStakingMax=getCalculatedStakingLimit().dividedBy(100).multipliedBy(sliderPercent);const amountToStake=getFullDisplayBalance(percentageOfStakingMax,stakingToken.decimals,stakingToken.decimals);setStakeAmount(amountToStake);}else{setStakeAmount('');}setPercent(sliderPercent);};const handleConfirmClick=async()=>{setPendingTx(true);if(isRemovingStake){// unstaking\ntry{await onUnstake(stakeAmount,stakingToken.decimals);toastSuccess(\"\".concat(t('Unstaked'),\"!\"),t('Your %symbol% earnings have also been harvested to your wallet!',{symbol:earningToken.symbol}));setPendingTx(false);onDismiss();}catch(e){toastError(t('Error'),t('Please try again. Confirm the transaction and make sure you are paying enough gas!'));setPendingTx(false);}}else{try{// staking\nawait onStake(stakeAmount,stakingToken.decimals);toastSuccess(\"\".concat(t('Staked'),\"!\"),t('Your %symbol% funds have been staked in the pool!',{symbol:stakingToken.symbol}));setPendingTx(false);onDismiss();}catch(e){toastError(t('Error'),t('Please try again. Confirm the transaction and make sure you are paying enough gas!'));setPendingTx(false);}}};return/*#__PURE__*/_jsxs(Modal,{title:isRemovingStake?t('Unstake'):t('Stake in Pool'),onDismiss:onDismiss,headerBackground:theme.colors.gradients.cardHeader,children:[stakingLimit.gt(0)&&!isRemovingStake&&/*#__PURE__*/_jsx(Text,{color:\"secondary\",bold:true,mb:\"24px\",style:{textAlign:'center'},fontSize:\"16px\",children:t('Max stake for this pool: %amount% %token%',{amount:getFullDisplayBalance(stakingLimit,stakingToken.decimals,0),token:stakingToken.symbol})}),/*#__PURE__*/_jsxs(Flex,{alignItems:\"center\",justifyContent:\"space-between\",mb:\"8px\",children:[/*#__PURE__*/_jsxs(Text,{bold:true,children:[isRemovingStake?t('Unstake'):t('Stake'),\":\"]}),/*#__PURE__*/_jsxs(Flex,{alignItems:\"center\",minWidth:\"70px\",children:[/*#__PURE__*/_jsx(Image,{src:\"/images/tokens/\".concat(getAddress(stakingToken.address),\".png\"),width:24,height:24,alt:stakingToken.symbol}),/*#__PURE__*/_jsx(Text,{ml:\"4px\",bold:true,children:stakingToken.symbol})]})]}),/*#__PURE__*/_jsx(BalanceInput,{value:stakeAmount,onUserInput:handleStakeInputChange,currencyValue:stakingTokenPrice!==0&&\"~\".concat(usdValueStaked||0,\" USD\"),isWarning:hasReachedStakeLimit,decimals:stakingToken.decimals}),hasReachedStakeLimit&&/*#__PURE__*/_jsx(Text,{color:\"failure\",fontSize:\"12px\",style:{textAlign:'right'},mt:\"4px\",children:t('Maximum total stake: %amount% %token%',{amount:getFullDisplayBalance(new BigNumber(stakingLimit),stakingToken.decimals,0),token:stakingToken.symbol})}),/*#__PURE__*/_jsx(Text,{ml:\"auto\",color:\"textSubtle\",fontSize:\"12px\",mb:\"8px\",children:t('Balance: %balance%',{balance:getFullDisplayBalance(getCalculatedStakingLimit(),stakingToken.decimals)})}),/*#__PURE__*/_jsx(Slider,{min:0,max:100,value:percent,onValueChanged:handleChangePercent,name:\"stake\",valueLabel:\"\".concat(percent,\"%\"),step:1}),/*#__PURE__*/_jsxs(Flex,{alignItems:\"center\",justifyContent:\"space-between\",mt:\"8px\",children:[/*#__PURE__*/_jsx(PercentageButton,{onClick:()=>handleChangePercent(25),children:\"25%\"}),/*#__PURE__*/_jsx(PercentageButton,{onClick:()=>handleChangePercent(50),children:\"50%\"}),/*#__PURE__*/_jsx(PercentageButton,{onClick:()=>handleChangePercent(75),children:\"75%\"}),/*#__PURE__*/_jsx(PercentageButton,{onClick:()=>handleChangePercent(100),children:t('Max')})]}),/*#__PURE__*/_jsx(Button,{isLoading:pendingTx,endIcon:pendingTx?/*#__PURE__*/_jsx(AutoRenewIcon,{spin:true,color:\"currentColor\"}):null,onClick:handleConfirmClick,disabled:!stakeAmount||parseFloat(stakeAmount)===0||hasReachedStakeLimit,mt:\"24px\",children:pendingTx?t('Confirming'):t('Confirm')}),!isRemovingStake&&/*#__PURE__*/_jsx(StyledLink,{external:true,href:\"/swap\",children:/*#__PURE__*/_jsx(Button,{width:\"100%\",mt:\"8px\",variant:\"secondary\",children:t('Get %symbol%',{symbol:stakingToken.symbol})})})]});};export default StakeModal;","map":{"version":3,"names":["React","useEffect","useState","styled","Modal","Text","Flex","Image","Button","Slider","BalanceInput","AutoRenewIcon","Link","useTranslation","useTheme","useToast","BigNumber","getFullDisplayBalance","formatNumber","getDecimalAmount","getAddress","PercentageButton","useStakePool","useUnstakePool","jsx","_jsx","jsxs","_jsxs","StyledLink","_templateObject","_taggedTemplateLiteral","StakeModal","_ref","isBnbPool","pool","stakingTokenBalance","stakingTokenPrice","isRemovingStake","onDismiss","sousId","stakingToken","userData","stakingLimit","earningToken","t","theme","onStake","onUnstake","enableEmergencyWithdraw","toastSuccess","toastError","pendingTx","setPendingTx","stakeAmount","setStakeAmount","hasReachedStakeLimit","setHasReachedStakedLimit","percent","setPercent","getCalculatedStakingLimit","stakedBalance","gt","usdValueStaked","times","toNumber","fullDecimalStakeAmount","decimals","plus","handleStakeInputChange","input","convertedInput","percentage","Math","floor","dividedBy","multipliedBy","min","handleChangePercent","sliderPercent","percentageOfStakingMax","amountToStake","handleConfirmClick","concat","symbol","e","title","headerBackground","colors","gradients","cardHeader","children","color","bold","mb","style","textAlign","fontSize","amount","token","alignItems","justifyContent","minWidth","src","address","width","height","alt","ml","value","onUserInput","currencyValue","isWarning","mt","balance","max","onValueChanged","name","valueLabel","step","onClick","isLoading","endIcon","spin","disabled","parseFloat","external","href","variant"],"sources":["C:/Users/frkul/Documents/swapUI_pancake-frontend/src/views/Pools/components/PoolCard/Modals/StakeModal.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Modal, Text, Flex, Image, Button, Slider, BalanceInput, AutoRenewIcon, Link } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useTheme from 'hooks/useTheme'\r\nimport useToast from 'hooks/useToast'\r\nimport BigNumber from 'bignumber.js'\r\nimport { getFullDisplayBalance, formatNumber, getDecimalAmount } from 'utils/formatBalance'\r\nimport { Pool } from 'state/types'\r\nimport { getAddress } from 'utils/addressHelpers'\r\nimport PercentageButton from './PercentageButton'\r\nimport useStakePool from '../../../hooks/useStakePool'\r\nimport useUnstakePool from '../../../hooks/useUnstakePool'\r\n\r\ninterface StakeModalProps {\r\n  isBnbPool: boolean\r\n  pool: Pool\r\n  stakingTokenBalance: BigNumber\r\n  stakingTokenPrice: number\r\n  isRemovingStake?: boolean\r\n  onDismiss?: () => void\r\n}\r\n\r\nconst StyledLink = styled(Link)`\r\n  width: 100%;\r\n`\r\n\r\nconst StakeModal: React.FC<StakeModalProps> = ({\r\n  isBnbPool,\r\n  pool,\r\n  stakingTokenBalance,\r\n  stakingTokenPrice,\r\n  isRemovingStake = false,\r\n  onDismiss,\r\n}) => {\r\n  const { sousId, stakingToken, userData, stakingLimit, earningToken } = pool\r\n  const { t } = useTranslation()\r\n  const { theme } = useTheme()\r\n  const { onStake } = useStakePool(sousId, isBnbPool)\r\n  const { onUnstake } = useUnstakePool(sousId, pool.enableEmergencyWithdraw)\r\n  const { toastSuccess, toastError } = useToast()\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const [stakeAmount, setStakeAmount] = useState('')\r\n  const [hasReachedStakeLimit, setHasReachedStakedLimit] = useState(false)\r\n  const [percent, setPercent] = useState(0)\r\n  const getCalculatedStakingLimit = () => {\r\n    if (isRemovingStake) {\r\n      return userData.stakedBalance\r\n    }\r\n    return stakingLimit.gt(0) && stakingTokenBalance.gt(stakingLimit) ? stakingLimit : stakingTokenBalance\r\n  }\r\n\r\n  const usdValueStaked = stakeAmount && formatNumber(new BigNumber(stakeAmount).times(stakingTokenPrice).toNumber())\r\n\r\n  useEffect(() => {\r\n    if (stakingLimit.gt(0) && !isRemovingStake) {\r\n      const fullDecimalStakeAmount = getDecimalAmount(new BigNumber(stakeAmount), stakingToken.decimals)\r\n      setHasReachedStakedLimit(fullDecimalStakeAmount.plus(userData.stakedBalance).gt(stakingLimit))\r\n    }\r\n  }, [stakeAmount, stakingLimit, userData, stakingToken, isRemovingStake, setHasReachedStakedLimit])\r\n\r\n  const handleStakeInputChange = (input: string) => {\r\n    if (input) {\r\n      const convertedInput = getDecimalAmount(new BigNumber(input), stakingToken.decimals)\r\n      const percentage = Math.floor(convertedInput.dividedBy(getCalculatedStakingLimit()).multipliedBy(100).toNumber())\r\n      setPercent(Math.min(percentage, 100))\r\n    } else {\r\n      setPercent(0)\r\n    }\r\n    setStakeAmount(input)\r\n  }\r\n\r\n  const handleChangePercent = (sliderPercent: number) => {\r\n    if (sliderPercent > 0) {\r\n      const percentageOfStakingMax = getCalculatedStakingLimit().dividedBy(100).multipliedBy(sliderPercent)\r\n      const amountToStake = getFullDisplayBalance(percentageOfStakingMax, stakingToken.decimals, stakingToken.decimals)\r\n      setStakeAmount(amountToStake)\r\n    } else {\r\n      setStakeAmount('')\r\n    }\r\n    setPercent(sliderPercent)\r\n  }\r\n\r\n  const handleConfirmClick = async () => {\r\n    setPendingTx(true)\r\n\r\n    if (isRemovingStake) {\r\n      // unstaking\r\n      try {\r\n        await onUnstake(stakeAmount, stakingToken.decimals)\r\n        toastSuccess(\r\n          `${t('Unstaked')}!`,\r\n          t('Your %symbol% earnings have also been harvested to your wallet!', {\r\n            symbol: earningToken.symbol,\r\n          }),\r\n        )\r\n        setPendingTx(false)\r\n        onDismiss()\r\n      } catch (e) {\r\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\r\n        setPendingTx(false)\r\n      }\r\n    } else {\r\n      try {\r\n        // staking\r\n        await onStake(stakeAmount, stakingToken.decimals)\r\n        toastSuccess(\r\n          `${t('Staked')}!`,\r\n          t('Your %symbol% funds have been staked in the pool!', {\r\n            symbol: stakingToken.symbol,\r\n          }),\r\n        )\r\n        setPendingTx(false)\r\n        onDismiss()\r\n      } catch (e) {\r\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\r\n        setPendingTx(false)\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      title={isRemovingStake ? t('Unstake') : t('Stake in Pool')}\r\n      onDismiss={onDismiss}\r\n      headerBackground={theme.colors.gradients.cardHeader}\r\n    >\r\n      {stakingLimit.gt(0) && !isRemovingStake && (\r\n        <Text color=\"secondary\" bold mb=\"24px\" style={{ textAlign: 'center' }} fontSize=\"16px\">\r\n          {t('Max stake for this pool: %amount% %token%', {\r\n            amount: getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0),\r\n            token: stakingToken.symbol,\r\n          })}\r\n        </Text>\r\n      )}\r\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\r\n        <Text bold>{isRemovingStake ? t('Unstake') : t('Stake')}:</Text>\r\n        <Flex alignItems=\"center\" minWidth=\"70px\">\r\n          <Image\r\n            src={`/images/tokens/${getAddress(stakingToken.address)}.png`}\r\n            width={24}\r\n            height={24}\r\n            alt={stakingToken.symbol}\r\n          />\r\n          <Text ml=\"4px\" bold>\r\n            {stakingToken.symbol}\r\n          </Text>\r\n        </Flex>\r\n      </Flex>\r\n      <BalanceInput\r\n        value={stakeAmount}\r\n        onUserInput={handleStakeInputChange}\r\n        currencyValue={stakingTokenPrice !== 0 && `~${usdValueStaked || 0} USD`}\r\n        isWarning={hasReachedStakeLimit}\r\n        decimals={stakingToken.decimals}\r\n      />\r\n      {hasReachedStakeLimit && (\r\n        <Text color=\"failure\" fontSize=\"12px\" style={{ textAlign: 'right' }} mt=\"4px\">\r\n          {t('Maximum total stake: %amount% %token%', {\r\n            amount: getFullDisplayBalance(new BigNumber(stakingLimit), stakingToken.decimals, 0),\r\n            token: stakingToken.symbol,\r\n          })}\r\n        </Text>\r\n      )}\r\n      <Text ml=\"auto\" color=\"textSubtle\" fontSize=\"12px\" mb=\"8px\">\r\n        {t('Balance: %balance%', {\r\n          balance: getFullDisplayBalance(getCalculatedStakingLimit(), stakingToken.decimals),\r\n        })}\r\n      </Text>\r\n      <Slider\r\n        min={0}\r\n        max={100}\r\n        value={percent}\r\n        onValueChanged={handleChangePercent}\r\n        name=\"stake\"\r\n        valueLabel={`${percent}%`}\r\n        step={1}\r\n      />\r\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mt=\"8px\">\r\n        <PercentageButton onClick={() => handleChangePercent(25)}>25%</PercentageButton>\r\n        <PercentageButton onClick={() => handleChangePercent(50)}>50%</PercentageButton>\r\n        <PercentageButton onClick={() => handleChangePercent(75)}>75%</PercentageButton>\r\n        <PercentageButton onClick={() => handleChangePercent(100)}>{t('Max')}</PercentageButton>\r\n      </Flex>\r\n      <Button\r\n        isLoading={pendingTx}\r\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\r\n        onClick={handleConfirmClick}\r\n        disabled={!stakeAmount || parseFloat(stakeAmount) === 0 || hasReachedStakeLimit}\r\n        mt=\"24px\"\r\n      >\r\n        {pendingTx ? t('Confirming') : t('Confirm')}\r\n      </Button>\r\n      {!isRemovingStake && (\r\n        <StyledLink external href=\"/swap\">\r\n          <Button width=\"100%\" mt=\"8px\" variant=\"secondary\">\r\n            {t('Get %symbol%', { symbol: stakingToken.symbol })}\r\n          </Button>\r\n        </StyledLink>\r\n      )}\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default StakeModal\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}