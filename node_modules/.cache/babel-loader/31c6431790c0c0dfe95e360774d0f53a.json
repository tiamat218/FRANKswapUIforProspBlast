{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Devrim\\\\Documents\\\\FRANKswapUIforProspBlast\\\\src\\\\views\\\\Pools\\\\components\\\\PoolCard\\\\CardActions\\\\HarvestActions.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Flex, Text, Button, Heading, useModal, Skeleton } from '@pancakeswap/uikit';\nimport { useTranslation } from 'contexts/Localization';\nimport { getFullDisplayBalance, getBalanceNumber, formatNumber } from 'utils/formatBalance';\nimport Balance from 'components/Balance';\nimport CollectModal from '../Modals/CollectModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst HarvestActions = ({\n  earnings,\n  earningToken,\n  sousId,\n  isBnbPool,\n  earningTokenPrice,\n  isLoading = false\n}) => {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  const earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals);\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3);\n  const earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals);\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals);\n  const hasEarnings = earnings.toNumber() > 0;\n  const isCompoundPool = sousId === 0;\n  const [onPresentCollect] = useModal( /*#__PURE__*/_jsxDEV(CollectModal, {\n    formattedBalance: formattedBalance,\n    fullBalance: fullBalance,\n    earningToken: earningToken,\n    earningsDollarValue: earningTokenDollarBalance,\n    sousId: sousId,\n    isBnbPool: isBnbPool,\n    isCompoundPool: isCompoundPool\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    mb: \"16px\",\n    children: [/*#__PURE__*/_jsxDEV(Flex, {\n      flexDirection: \"column\",\n      children: isLoading ? /*#__PURE__*/_jsxDEV(Skeleton, {\n        width: \"80px\",\n        height: \"48px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: hasEarnings ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Balance, {\n            bold: true,\n            fontSize: \"20px\",\n            decimals: 5,\n            value: earningTokenBalance\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 17\n          }, this), earningTokenPrice > 0 && /*#__PURE__*/_jsxDEV(Balance, {\n            display: \"inline\",\n            fontSize: \"12px\",\n            color: \"textSubtle\",\n            decimals: 2,\n            prefix: \"~\",\n            value: earningTokenDollarBalance,\n            unit: \" USD\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Heading, {\n            color: \"textDisabled\",\n            children: \"0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            fontSize: \"12px\",\n            color: \"textDisabled\",\n            children: \"0 USD\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)\n      }, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      disabled: !hasEarnings,\n      onClick: onPresentCollect,\n      children: isCompoundPool ? t('Collect') : t('Harvest')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n_s(HarvestActions, \"Z61VsLnZIUqiVnKiqd73JIjC0QQ=\", false, function () {\n  return [useTranslation, useModal];\n});\n\n_c = HarvestActions;\nexport default HarvestActions;\n\nvar _c;\n\n$RefreshReg$(_c, \"HarvestActions\");","map":{"version":3,"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/views/Pools/components/PoolCard/CardActions/HarvestActions.tsx"],"names":["React","Flex","Text","Button","Heading","useModal","Skeleton","useTranslation","getFullDisplayBalance","getBalanceNumber","formatNumber","Balance","CollectModal","HarvestActions","earnings","earningToken","sousId","isBnbPool","earningTokenPrice","isLoading","t","earningTokenBalance","decimals","formattedBalance","earningTokenDollarBalance","multipliedBy","fullBalance","hasEarnings","toNumber","isCompoundPool","onPresentCollect"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Flex, Text, Button, Heading, useModal, Skeleton } from '@pancakeswap/uikit'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Token } from 'config/constants/types'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { getFullDisplayBalance, getBalanceNumber, formatNumber } from 'utils/formatBalance'\r\nimport Balance from 'components/Balance'\r\nimport CollectModal from '../Modals/CollectModal'\r\n\r\ninterface HarvestActionsProps {\r\n  earnings: BigNumber\r\n  earningToken: Token\r\n  sousId: number\r\n  earningTokenPrice: number\r\n  isBnbPool: boolean\r\n  isLoading?: boolean\r\n}\r\n\r\nconst HarvestActions: React.FC<HarvestActionsProps> = ({\r\n  earnings,\r\n  earningToken,\r\n  sousId,\r\n  isBnbPool,\r\n  earningTokenPrice,\r\n  isLoading = false,\r\n}) => {\r\n  const { t } = useTranslation()\r\n  const earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\r\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\r\n\r\n  const earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\r\n\r\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\r\n  const hasEarnings = earnings.toNumber() > 0\r\n  const isCompoundPool = sousId === 0\r\n\r\n  const [onPresentCollect] = useModal(\r\n    <CollectModal\r\n      formattedBalance={formattedBalance}\r\n      fullBalance={fullBalance}\r\n      earningToken={earningToken}\r\n      earningsDollarValue={earningTokenDollarBalance}\r\n      sousId={sousId}\r\n      isBnbPool={isBnbPool}\r\n      isCompoundPool={isCompoundPool}\r\n    />,\r\n  )\r\n\r\n  return (\r\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"16px\">\r\n      <Flex flexDirection=\"column\">\r\n        {isLoading ? (\r\n          <Skeleton width=\"80px\" height=\"48px\" />\r\n        ) : (\r\n          <>\r\n            {hasEarnings ? (\r\n              <>\r\n                <Balance bold fontSize=\"20px\" decimals={5} value={earningTokenBalance} />\r\n                {earningTokenPrice > 0 && (\r\n                  <Balance\r\n                    display=\"inline\"\r\n                    fontSize=\"12px\"\r\n                    color=\"textSubtle\"\r\n                    decimals={2}\r\n                    prefix=\"~\"\r\n                    value={earningTokenDollarBalance}\r\n                    unit=\" USD\"\r\n                  />\r\n                )}\r\n              </>\r\n            ) : (\r\n              <>\r\n                <Heading color=\"textDisabled\">0</Heading>\r\n                <Text fontSize=\"12px\" color=\"textDisabled\">\r\n                  0 USD\r\n                </Text>\r\n              </>\r\n            )}\r\n          </>\r\n        )}\r\n      </Flex>\r\n      <Button disabled={!hasEarnings} onClick={onPresentCollect}>\r\n        {isCompoundPool ? t('Collect') : t('Harvest')}\r\n      </Button>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default HarvestActions\r\n"]},"metadata":{},"sourceType":"module"}