{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Devrim\\\\Documents\\\\FRANKswapUIforProspBlast\\\\src\\\\views\\\\Pools\\\\components\\\\CakeVaultCard\\\\RecentCakeProfitBalance.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Text, TooltipText, useTooltip } from '@pancakeswap/uikit';\nimport { useTranslation } from 'contexts/Localization';\nimport Balance from 'components/Balance';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst RecentCakeProfitBalance = ({\n  cakeToDisplay,\n  dollarValueToDisplay,\n  dateStringToDisplay\n}) => {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  const {\n    targetRef,\n    tooltip,\n    tooltipVisible\n  } = useTooltip( /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Balance, {\n      fontSize: \"16px\",\n      value: cakeToDisplay,\n      decimals: 3,\n      bold: true,\n      unit: \" CAKE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Balance, {\n      fontSize: \"16px\",\n      value: dollarValueToDisplay,\n      decimals: 2,\n      bold: true,\n      prefix: \"~$\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), t('Earned since your last action'), /*#__PURE__*/_jsxDEV(Text, {\n      children: dateStringToDisplay\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true), {\n    placement: 'bottom-end'\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [tooltipVisible && tooltip, /*#__PURE__*/_jsxDEV(TooltipText, {\n      ref: targetRef,\n      small: true,\n      children: /*#__PURE__*/_jsxDEV(Balance, {\n        fontSize: \"14px\",\n        value: cakeToDisplay\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(RecentCakeProfitBalance, \"GSMeUTDR148KmhQO/xuGuRK/xHM=\", false, function () {\n  return [useTranslation, useTooltip];\n});\n\n_c = RecentCakeProfitBalance;\nexport default RecentCakeProfitBalance;\n\nvar _c;\n\n$RefreshReg$(_c, \"RecentCakeProfitBalance\");","map":{"version":3,"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/views/Pools/components/CakeVaultCard/RecentCakeProfitBalance.tsx"],"names":["React","Text","TooltipText","useTooltip","useTranslation","Balance","RecentCakeProfitBalance","cakeToDisplay","dollarValueToDisplay","dateStringToDisplay","t","targetRef","tooltip","tooltipVisible","placement"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,WAAf,EAA4BC,UAA5B,QAA8C,oBAA9C;AACA,SAASC,cAAT,QAA+B,uBAA/B;AACA,OAAOC,OAAP,MAAoB,oBAApB;;;;AAQA,MAAMC,uBAA+D,GAAG,CAAC;AACvEC,EAAAA,aADuE;AAEvEC,EAAAA,oBAFuE;AAGvEC,EAAAA;AAHuE,CAAD,KAIlE;AAAA;;AACJ,QAAM;AAAEC,IAAAA;AAAF,MAAQN,cAAc,EAA5B;AAEA,QAAM;AAAEO,IAAAA,SAAF;AAAaC,IAAAA,OAAb;AAAsBC,IAAAA;AAAtB,MAAyCV,UAAU,eACvD;AAAA,4BACE,QAAC,OAAD;AAAS,MAAA,QAAQ,EAAC,MAAlB;AAAyB,MAAA,KAAK,EAAEI,aAAhC;AAA+C,MAAA,QAAQ,EAAE,CAAzD;AAA4D,MAAA,IAAI,MAAhE;AAAiE,MAAA,IAAI,EAAC;AAAtE;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,OAAD;AAAS,MAAA,QAAQ,EAAC,MAAlB;AAAyB,MAAA,KAAK,EAAEC,oBAAhC;AAAsD,MAAA,QAAQ,EAAE,CAAhE;AAAmE,MAAA,IAAI,MAAvE;AAAwE,MAAA,MAAM,EAAC;AAA/E;AAAA;AAAA;AAAA;AAAA,YAFF,EAGGE,CAAC,CAAC,+BAAD,CAHJ,eAIE,QAAC,IAAD;AAAA,gBAAOD;AAAP;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA,kBADuD,EAOvD;AACEK,IAAAA,SAAS,EAAE;AADb,GAPuD,CAAzD;AAYA,sBACE;AAAA,eACGD,cAAc,IAAID,OADrB,eAEE,QAAC,WAAD;AAAa,MAAA,GAAG,EAAED,SAAlB;AAA6B,MAAA,KAAK,MAAlC;AAAA,6BACE,QAAC,OAAD;AAAS,QAAA,QAAQ,EAAC,MAAlB;AAAyB,QAAA,KAAK,EAAEJ;AAAhC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAQD,CA3BD;;GAAMD,uB;UAKUF,c,EAEiCD,U;;;KAP3CG,uB;AA6BN,eAAeA,uBAAf","sourcesContent":["import React from 'react'\r\nimport { Text, TooltipText, useTooltip } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport Balance from 'components/Balance'\r\n\r\ninterface RecentCakeProfitBalanceProps {\r\n  cakeToDisplay: number\r\n  dollarValueToDisplay: number\r\n  dateStringToDisplay: string\r\n}\r\n\r\nconst RecentCakeProfitBalance: React.FC<RecentCakeProfitBalanceProps> = ({\r\n  cakeToDisplay,\r\n  dollarValueToDisplay,\r\n  dateStringToDisplay,\r\n}) => {\r\n  const { t } = useTranslation()\r\n\r\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\r\n    <>\r\n      <Balance fontSize=\"16px\" value={cakeToDisplay} decimals={3} bold unit=\" CAKE\" />\r\n      <Balance fontSize=\"16px\" value={dollarValueToDisplay} decimals={2} bold prefix=\"~$\" />\r\n      {t('Earned since your last action')}\r\n      <Text>{dateStringToDisplay}</Text>\r\n    </>,\r\n    {\r\n      placement: 'bottom-end',\r\n    },\r\n  )\r\n\r\n  return (\r\n    <>\r\n      {tooltipVisible && tooltip}\r\n      <TooltipText ref={targetRef} small>\r\n        <Balance fontSize=\"14px\" value={cakeToDisplay} />\r\n      </TooltipText>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default RecentCakeProfitBalance\r\n"]},"metadata":{},"sourceType":"module"}