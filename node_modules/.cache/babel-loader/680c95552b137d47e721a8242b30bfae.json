{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Devrim\\\\Documents\\\\FRANKswapUIforProspBlast\\\\src\\\\views\\\\Pools\\\\components\\\\CakeVaultCard\\\\FeeSummary.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Text, Flex, useTooltip, TooltipText } from '@pancakeswap/uikit';\nimport { useTranslation } from 'contexts/Localization';\nimport { useCakeVault } from 'state/pools/hooks';\nimport UnstakingFeeCountdownRow from './UnstakingFeeCountdownRow';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst FeeSummary = ({\n  stakingTokenSymbol,\n  stakeAmount\n}) => {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  const {\n    fees: {\n      withdrawalFee\n    }\n  } = useCakeVault();\n  const feeAsDecimal = withdrawalFee / 100;\n  const feeInCake = (parseFloat(stakeAmount) * (feeAsDecimal / 100)).toFixed(4);\n  const {\n    targetRef,\n    tooltip,\n    tooltipVisible\n  } = useTooltip( /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Text, {\n      bold: true,\n      mb: \"4px\",\n      children: t('Unstaking fee: %fee%%', {\n        fee: feeAsDecimal\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Text, {\n      children: t('Only applies within 3 days of staking. Unstaking after 3 days will not include a fee. Timer resets every time you stake new CAKE in the pool.')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true), {\n    placement: 'top-start'\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Flex, {\n      mt: \"24px\",\n      alignItems: \"center\",\n      justifyContent: \"space-between\",\n      children: [tooltipVisible && tooltip, /*#__PURE__*/_jsxDEV(TooltipText, {\n        ref: targetRef,\n        small: true,\n        children: t('Unstaking Fee')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        fontSize: \"14px\",\n        children: [stakeAmount ? feeInCake : '-', \" \", stakingTokenSymbol]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UnstakingFeeCountdownRow, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(FeeSummary, \"qEwjUWAhAvIekiWTolM7CN3wiEY=\", false, function () {\n  return [useTranslation, useCakeVault, useTooltip];\n});\n\n_c = FeeSummary;\nexport default FeeSummary;\n\nvar _c;\n\n$RefreshReg$(_c, \"FeeSummary\");","map":{"version":3,"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/views/Pools/components/CakeVaultCard/FeeSummary.tsx"],"names":["React","Text","Flex","useTooltip","TooltipText","useTranslation","useCakeVault","UnstakingFeeCountdownRow","FeeSummary","stakingTokenSymbol","stakeAmount","t","fees","withdrawalFee","feeAsDecimal","feeInCake","parseFloat","toFixed","targetRef","tooltip","tooltipVisible","fee","placement"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,UAArB,EAAiCC,WAAjC,QAAoD,oBAApD;AACA,SAASC,cAAT,QAA+B,uBAA/B;AACA,SAASC,YAAT,QAA6B,mBAA7B;AACA,OAAOC,wBAAP,MAAqC,4BAArC;;;;AAOA,MAAMC,UAAqC,GAAG,CAAC;AAAEC,EAAAA,kBAAF;AAAsBC,EAAAA;AAAtB,CAAD,KAAyC;AAAA;;AACrF,QAAM;AAAEC,IAAAA;AAAF,MAAQN,cAAc,EAA5B;AACA,QAAM;AACJO,IAAAA,IAAI,EAAE;AAAEC,MAAAA;AAAF;AADF,MAEFP,YAAY,EAFhB;AAGA,QAAMQ,YAAY,GAAGD,aAAa,GAAG,GAArC;AACA,QAAME,SAAS,GAAG,CAACC,UAAU,CAACN,WAAD,CAAV,IAA2BI,YAAY,GAAG,GAA1C,CAAD,EAAiDG,OAAjD,CAAyD,CAAzD,CAAlB;AACA,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,OAAb;AAAsBC,IAAAA;AAAtB,MAAyCjB,UAAU,eACvD;AAAA,4BACE,QAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAC,KAAd;AAAA,gBACGQ,CAAC,CAAC,uBAAD,EAA0B;AAAEU,QAAAA,GAAG,EAAEP;AAAP,OAA1B;AADJ;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,IAAD;AAAA,gBACGH,CAAC,CACA,+IADA;AADJ;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA,kBADuD,EAWvD;AAAEW,IAAAA,SAAS,EAAE;AAAb,GAXuD,CAAzD;AAcA,sBACE;AAAA,4BACE,QAAC,IAAD;AAAM,MAAA,EAAE,EAAC,MAAT;AAAgB,MAAA,UAAU,EAAC,QAA3B;AAAoC,MAAA,cAAc,EAAC,eAAnD;AAAA,iBACGF,cAAc,IAAID,OADrB,eAEE,QAAC,WAAD;AAAa,QAAA,GAAG,EAAED,SAAlB;AAA6B,QAAA,KAAK,MAAlC;AAAA,kBACGP,CAAC,CAAC,eAAD;AADJ;AAAA;AAAA;AAAA;AAAA,cAFF,eAKE,QAAC,IAAD;AAAM,QAAA,QAAQ,EAAC,MAAf;AAAA,mBACGD,WAAW,GAAGK,SAAH,GAAe,GAD7B,OACmCN,kBADnC;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAUE,QAAC,wBAAD;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA,kBADF;AAcD,CAnCD;;GAAMD,U;UACUH,c,EAGVC,Y,EAG2CH,U;;;KAP3CK,U;AAqCN,eAAeA,UAAf","sourcesContent":["import React from 'react'\r\nimport { Text, Flex, useTooltip, TooltipText } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useCakeVault } from 'state/pools/hooks'\r\nimport UnstakingFeeCountdownRow from './UnstakingFeeCountdownRow'\r\n\r\ninterface FeeSummaryProps {\r\n  stakingTokenSymbol: string\r\n  stakeAmount: string\r\n}\r\n\r\nconst FeeSummary: React.FC<FeeSummaryProps> = ({ stakingTokenSymbol, stakeAmount }) => {\r\n  const { t } = useTranslation()\r\n  const {\r\n    fees: { withdrawalFee },\r\n  } = useCakeVault()\r\n  const feeAsDecimal = withdrawalFee / 100\r\n  const feeInCake = (parseFloat(stakeAmount) * (feeAsDecimal / 100)).toFixed(4)\r\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\r\n    <>\r\n      <Text bold mb=\"4px\">\r\n        {t('Unstaking fee: %fee%%', { fee: feeAsDecimal })}\r\n      </Text>\r\n      <Text>\r\n        {t(\r\n          'Only applies within 3 days of staking. Unstaking after 3 days will not include a fee. Timer resets every time you stake new CAKE in the pool.',\r\n        )}\r\n      </Text>\r\n    </>,\r\n    { placement: 'top-start' },\r\n  )\r\n\r\n  return (\r\n    <>\r\n      <Flex mt=\"24px\" alignItems=\"center\" justifyContent=\"space-between\">\r\n        {tooltipVisible && tooltip}\r\n        <TooltipText ref={targetRef} small>\r\n          {t('Unstaking Fee')}\r\n        </TooltipText>\r\n        <Text fontSize=\"14px\">\r\n          {stakeAmount ? feeInCake : '-'} {stakingTokenSymbol}\r\n        </Text>\r\n      </Flex>\r\n      <UnstakingFeeCountdownRow />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default FeeSummary\r\n"]},"metadata":{},"sourceType":"module"}