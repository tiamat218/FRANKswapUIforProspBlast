{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\frkul\\\\Documents\\\\swapUI_pancake-frontend\\\\src\\\\views\\\\Pools\\\\components\\\\CakeVaultCard\\\\index.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport styled from 'styled-components';\nimport { Box, CardBody, Flex, Text, useMatchBreakpoints } from '@pancakeswap/uikit';\nimport { useTranslation } from 'contexts/Localization';\nimport { useWeb3React } from '@web3-react/core';\nimport ConnectWalletButton from 'components/ConnectWalletButton';\nimport tokens from 'config/constants/tokens';\nimport { useCakeVault } from 'state/pools/hooks';\nimport AprRow from '../PoolCard/AprRow';\nimport { StyledCard, StyledCardInner } from '../PoolCard/StyledCard';\nimport CardFooter from '../PoolCard/CardFooter';\nimport StyledCardHeader from '../PoolCard/StyledCardHeader';\nimport VaultCardActions from './VaultCardActions';\nimport UnstakingFeeCountdownRow from './UnstakingFeeCountdownRow';\nimport RecentCakeProfitRow from './RecentCakeProfitRow';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst StyledCardBody = styled(CardBody)`\n  min-height: ${({\n  isLoading\n}) => isLoading ? '0' : '254px'};\n`;\n_c = StyledCardBody;\nconst CakeVaultCard = ({\n  pool,\n  showStakedOnly\n}) => {\n  _s();\n  const {\n    t\n  } = useTranslation();\n  const {\n    isXl\n  } = useMatchBreakpoints();\n  const {\n    account\n  } = useWeb3React();\n  const {\n    userData: {\n      userShares,\n      isLoading: isVaultUserDataLoading\n    },\n    fees: {\n      performanceFee\n    }\n  } = useCakeVault();\n  const accountHasSharesStaked = userShares && userShares.gt(0);\n  const isLoading = !pool.userData || isVaultUserDataLoading;\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100;\n  if (showStakedOnly && !accountHasSharesStaked) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(StyledCard, {\n    isPromoted: {\n      isDesktop: isXl\n    },\n    children: /*#__PURE__*/_jsxDEV(StyledCardInner, {\n      children: [/*#__PURE__*/_jsxDEV(StyledCardHeader, {\n        isStaking: accountHasSharesStaked,\n        isAutoVault: true,\n        earningToken: tokens.cake,\n        stakingToken: tokens.cake\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StyledCardBody, {\n        isLoading: isLoading,\n        children: [/*#__PURE__*/_jsxDEV(AprRow, {\n          pool: pool,\n          performanceFee: performanceFeeAsDecimal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          mt: \"24px\",\n          children: /*#__PURE__*/_jsxDEV(RecentCakeProfitRow, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          mt: \"8px\",\n          children: /*#__PURE__*/_jsxDEV(UnstakingFeeCountdownRow, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Flex, {\n          mt: \"32px\",\n          flexDirection: \"column\",\n          children: account ? /*#__PURE__*/_jsxDEV(VaultCardActions, {\n            pool: pool,\n            accountHasSharesStaked: accountHasSharesStaked,\n            isLoading: isLoading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Text, {\n              mb: \"10px\",\n              textTransform: \"uppercase\",\n              fontSize: \"12px\",\n              color: \"textSubtle\",\n              bold: true,\n              children: t('Start earning')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ConnectWalletButton, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardFooter, {\n        pool: pool,\n        account: account\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(CakeVaultCard, \"gw8xFSt3VqMGzXtX1kEDOVsOrPk=\", false, function () {\n  return [useTranslation, useMatchBreakpoints, useWeb3React, useCakeVault];\n});\n_c2 = CakeVaultCard;\nexport default CakeVaultCard;\nvar _c, _c2;\n$RefreshReg$(_c, \"StyledCardBody\");\n$RefreshReg$(_c2, \"CakeVaultCard\");","map":{"version":3,"names":["React","styled","Box","CardBody","Flex","Text","useMatchBreakpoints","useTranslation","useWeb3React","ConnectWalletButton","tokens","useCakeVault","AprRow","StyledCard","StyledCardInner","CardFooter","StyledCardHeader","VaultCardActions","UnstakingFeeCountdownRow","RecentCakeProfitRow","jsxDEV","_jsxDEV","Fragment","_Fragment","StyledCardBody","isLoading","_c","CakeVaultCard","pool","showStakedOnly","_s","t","isXl","account","userData","userShares","isVaultUserDataLoading","fees","performanceFee","accountHasSharesStaked","gt","performanceFeeAsDecimal","isPromoted","isDesktop","children","isStaking","isAutoVault","earningToken","cake","stakingToken","fileName","_jsxFileName","lineNumber","columnNumber","mt","flexDirection","mb","textTransform","fontSize","color","bold","_c2","$RefreshReg$"],"sources":["C:/Users/frkul/Documents/swapUI_pancake-frontend/src/views/Pools/components/CakeVaultCard/index.tsx"],"sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Box, CardBody, Flex, Text, useMatchBreakpoints } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport ConnectWalletButton from 'components/ConnectWalletButton'\r\nimport tokens from 'config/constants/tokens'\r\nimport { useCakeVault } from 'state/pools/hooks'\r\nimport { Pool } from 'state/types'\r\nimport AprRow from '../PoolCard/AprRow'\r\nimport { StyledCard, StyledCardInner } from '../PoolCard/StyledCard'\r\nimport CardFooter from '../PoolCard/CardFooter'\r\nimport StyledCardHeader from '../PoolCard/StyledCardHeader'\r\nimport VaultCardActions from './VaultCardActions'\r\nimport UnstakingFeeCountdownRow from './UnstakingFeeCountdownRow'\r\nimport RecentCakeProfitRow from './RecentCakeProfitRow'\r\n\r\nconst StyledCardBody = styled(CardBody)<{ isLoading: boolean }>`\r\n  min-height: ${({ isLoading }) => (isLoading ? '0' : '254px')};\r\n`\r\n\r\ninterface CakeVaultProps {\r\n  pool: Pool\r\n  showStakedOnly: boolean\r\n}\r\n\r\nconst CakeVaultCard: React.FC<CakeVaultProps> = ({ pool, showStakedOnly }) => {\r\n  const { t } = useTranslation()\r\n  const { isXl } = useMatchBreakpoints()\r\n  const { account } = useWeb3React()\r\n  const {\r\n    userData: { userShares, isLoading: isVaultUserDataLoading },\r\n    fees: { performanceFee },\r\n  } = useCakeVault()\r\n\r\n  const accountHasSharesStaked = userShares && userShares.gt(0)\r\n  const isLoading = !pool.userData || isVaultUserDataLoading\r\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\r\n\r\n  if (showStakedOnly && !accountHasSharesStaked) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <StyledCard isPromoted={{ isDesktop: isXl }}>\r\n      <StyledCardInner>\r\n        <StyledCardHeader\r\n          isStaking={accountHasSharesStaked}\r\n          isAutoVault\r\n          earningToken={tokens.cake}\r\n          stakingToken={tokens.cake}\r\n        />\r\n        <StyledCardBody isLoading={isLoading}>\r\n          <AprRow pool={pool} performanceFee={performanceFeeAsDecimal} />\r\n          <Box mt=\"24px\">\r\n            <RecentCakeProfitRow />\r\n          </Box>\r\n          <Box mt=\"8px\">\r\n            <UnstakingFeeCountdownRow />\r\n          </Box>\r\n          <Flex mt=\"32px\" flexDirection=\"column\">\r\n            {account ? (\r\n              <VaultCardActions pool={pool} accountHasSharesStaked={accountHasSharesStaked} isLoading={isLoading} />\r\n            ) : (\r\n              <>\r\n                <Text mb=\"10px\" textTransform=\"uppercase\" fontSize=\"12px\" color=\"textSubtle\" bold>\r\n                  {t('Start earning')}\r\n                </Text>\r\n                <ConnectWalletButton />\r\n              </>\r\n            )}\r\n          </Flex>\r\n        </StyledCardBody>\r\n        <CardFooter pool={pool} account={account} />\r\n      </StyledCardInner>\r\n    </StyledCard>\r\n  )\r\n}\r\n\r\nexport default CakeVaultCard\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}