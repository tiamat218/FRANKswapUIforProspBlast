{"ast":null,"code":"import { random } from 'lodash';\n\n/**\r\n * Generate a specific number of unique, randomised 7-digit lottery numbers between 1000000 & 1999999\r\n */\nconst generateTicketNumbers = (numberOfTickets, userCurrentTickets, minNumber = 1000000, maxNumber = 1999999) => {\n  // Populate array with existing tickets (if they have them) to ensure no duplicates when generating new numbers\n  const existingTicketNumbers = (userCurrentTickets === null || userCurrentTickets === void 0 ? void 0 : userCurrentTickets.length) > 0 ? userCurrentTickets.map(ticket => {\n    return parseInt(ticket === null || ticket === void 0 ? void 0 : ticket.number);\n  }) : [];\n  const generatedTicketNumbers = [...existingTicketNumbers];\n  for (let count = 0; count < numberOfTickets; count++) {\n    let randomNumber = random(minNumber, maxNumber);\n    while (generatedTicketNumbers.includes(randomNumber)) {\n      // Catch for duplicates - generate a new number until the array doesn't include the random number generated\n      randomNumber = random(minNumber, maxNumber);\n    }\n    generatedTicketNumbers.push(randomNumber);\n  }\n\n  // Filter out the users' existing tickets\n  const ticketsToBuy = (userCurrentTickets === null || userCurrentTickets === void 0 ? void 0 : userCurrentTickets.length) > 0 ? generatedTicketNumbers.filter(ticketNumber => {\n    return !existingTicketNumbers.includes(ticketNumber);\n  }) : generatedTicketNumbers;\n  return ticketsToBuy;\n};\nexport default generateTicketNumbers;","map":{"version":3,"names":["random","generateTicketNumbers","numberOfTickets","userCurrentTickets","minNumber","maxNumber","existingTicketNumbers","length","map","ticket","parseInt","number","generatedTicketNumbers","count","randomNumber","includes","push","ticketsToBuy","filter","ticketNumber"],"sources":["C:/Users/Devrim/Documents/swapUIforProspBlast/src/views/Lottery/components/BuyTicketsModal/generateTicketNumbers.tsx"],"sourcesContent":["import { LotteryTicket } from 'config/constants/types'\r\nimport { random } from 'lodash'\r\n\r\n/**\r\n * Generate a specific number of unique, randomised 7-digit lottery numbers between 1000000 & 1999999\r\n */\r\nconst generateTicketNumbers = (\r\n  numberOfTickets: number,\r\n  userCurrentTickets?: LotteryTicket[],\r\n  minNumber = 1000000,\r\n  maxNumber = 1999999,\r\n): number[] => {\r\n  // Populate array with existing tickets (if they have them) to ensure no duplicates when generating new numbers\r\n  const existingTicketNumbers =\r\n    userCurrentTickets?.length > 0\r\n      ? userCurrentTickets.map((ticket) => {\r\n          return parseInt(ticket?.number)\r\n        })\r\n      : []\r\n  const generatedTicketNumbers = [...existingTicketNumbers]\r\n\r\n  for (let count = 0; count < numberOfTickets; count++) {\r\n    let randomNumber = random(minNumber, maxNumber)\r\n    while (generatedTicketNumbers.includes(randomNumber)) {\r\n      // Catch for duplicates - generate a new number until the array doesn't include the random number generated\r\n      randomNumber = random(minNumber, maxNumber)\r\n    }\r\n    generatedTicketNumbers.push(randomNumber)\r\n  }\r\n\r\n  // Filter out the users' existing tickets\r\n  const ticketsToBuy =\r\n    userCurrentTickets?.length > 0\r\n      ? generatedTicketNumbers.filter((ticketNumber) => {\r\n          return !existingTicketNumbers.includes(ticketNumber)\r\n        })\r\n      : generatedTicketNumbers\r\n\r\n  return ticketsToBuy\r\n}\r\n\r\nexport default generateTicketNumbers\r\n"],"mappings":"AACA,SAASA,MAAM,QAAQ,QAAQ;;AAE/B;AACA;AACA;AACA,MAAMC,qBAAqB,GAAGA,CAC5BC,eAAuB,EACvBC,kBAAoC,EACpCC,SAAS,GAAG,OAAO,EACnBC,SAAS,GAAG,OAAO,KACN;EACb;EACA,MAAMC,qBAAqB,GACzB,CAAAH,kBAAkB,aAAlBA,kBAAkB,uBAAlBA,kBAAkB,CAAEI,MAAM,IAAG,CAAC,GAC1BJ,kBAAkB,CAACK,GAAG,CAAEC,MAAM,IAAK;IACjC,OAAOC,QAAQ,CAACD,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEE,MAAM,CAAC;EACjC,CAAC,CAAC,GACF,EAAE;EACR,MAAMC,sBAAsB,GAAG,CAAC,GAAGN,qBAAqB,CAAC;EAEzD,KAAK,IAAIO,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAGX,eAAe,EAAEW,KAAK,EAAE,EAAE;IACpD,IAAIC,YAAY,GAAGd,MAAM,CAACI,SAAS,EAAEC,SAAS,CAAC;IAC/C,OAAOO,sBAAsB,CAACG,QAAQ,CAACD,YAAY,CAAC,EAAE;MACpD;MACAA,YAAY,GAAGd,MAAM,CAACI,SAAS,EAAEC,SAAS,CAAC;IAC7C;IACAO,sBAAsB,CAACI,IAAI,CAACF,YAAY,CAAC;EAC3C;;EAEA;EACA,MAAMG,YAAY,GAChB,CAAAd,kBAAkB,aAAlBA,kBAAkB,uBAAlBA,kBAAkB,CAAEI,MAAM,IAAG,CAAC,GAC1BK,sBAAsB,CAACM,MAAM,CAAEC,YAAY,IAAK;IAC9C,OAAO,CAACb,qBAAqB,CAACS,QAAQ,CAACI,YAAY,CAAC;EACtD,CAAC,CAAC,GACFP,sBAAsB;EAE5B,OAAOK,YAAY;AACrB,CAAC;AAED,eAAehB,qBAAqB","ignoreList":[]},"metadata":{},"sourceType":"module"}