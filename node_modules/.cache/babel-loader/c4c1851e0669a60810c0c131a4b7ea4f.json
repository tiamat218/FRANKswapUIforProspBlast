{"ast":null,"code":"import _taggedTemplateLiteral from\"C:/Users/frkul/Documents/swapUI_pancake-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject;import React,{useCallback,useEffect,useMemo,useState}from'react';import styled from'styled-components';import{JSBI,Token}from'@pancakeswap/sdk';import{Button,Text,ArrowDownIcon,Box,useModal}from'@pancakeswap/uikit';import{useIsTransactionUnsupported}from'hooks/Trades';import UnsupportedCurrencyFooter from'components/UnsupportedCurrencyFooter';import{useTranslation}from'contexts/Localization';import SwapWarningTokens from'config/constants/swapWarningTokens';import{getAddress}from'utils/addressHelpers';import AddressInputPanel from'./components/AddressInputPanel';import{GreyCard}from'../../components/Card';import Column,{AutoColumn}from'../../components/Layout/Column';import ConfirmSwapModal from'./components/ConfirmSwapModal';import CurrencyInputPanel from'../../components/CurrencyInputPanel';import{AutoRow,RowBetween}from'../../components/Layout/Row';import AdvancedSwapDetailsDropdown from'./components/AdvancedSwapDetailsDropdown';import confirmPriceImpactWithoutFee from'./components/confirmPriceImpactWithoutFee';import{ArrowWrapper,SwapCallbackError,Wrapper}from'./components/styleds';import TradePrice from'./components/TradePrice';import ImportTokenWarningModal from'./components/ImportTokenWarningModal';import ProgressSteps from'./components/ProgressSteps';import{AppHeader,AppBody}from'../../components/App';import ConnectWalletButton from'../../components/ConnectWalletButton';import{INITIAL_ALLOWED_SLIPPAGE}from'../../config/constants';import useActiveWeb3React from'../../hooks/useActiveWeb3React';import{useCurrency,useAllTokens}from'../../hooks/Tokens';import{ApprovalState,useApproveCallbackFromTrade}from'../../hooks/useApproveCallback';import{useSwapCallback}from'../../hooks/useSwapCallback';import useWrapCallback,{WrapType}from'../../hooks/useWrapCallback';import{Field}from'../../state/swap/actions';import{useDefaultsFromURLSearch,useDerivedSwapInfo,useSwapActionHandlers,useSwapState}from'../../state/swap/hooks';import{useExpertModeManager,useUserSlippageTolerance,useUserSingleHopOnly}from'../../state/user/hooks';import{maxAmountSpend}from'../../utils/maxAmountSpend';import{computeTradePriceBreakdown,warningSeverity}from'../../utils/prices';import CircleLoader from'../../components/Loader/CircleLoader';import Page from'../Page';import SwapWarningModal from'./components/SwapWarningModal';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const Label=styled(Text)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  font-size: 12px;\\n  font-weight: bold;\\n  color: \",\";\\n\"])),_ref=>{let{theme}=_ref;return theme.colors.secondary;});export default function Swap(_ref2){var _parsedAmounts$indepe,_parsedAmounts$indepe2,_parsedAmounts$depend,_parsedAmounts$depend2,_parsedAmounts$indepe3,_parsedAmounts$Field$,_currencies$Field$INP,_currencies$Field$INP2;let{history}=_ref2;const loadedUrlParams=useDefaultsFromURLSearch();const{t}=useTranslation();// token warning stuff\nconst[loadedInputCurrency,loadedOutputCurrency]=[useCurrency(loadedUrlParams===null||loadedUrlParams===void 0?void 0:loadedUrlParams.inputCurrencyId),useCurrency(loadedUrlParams===null||loadedUrlParams===void 0?void 0:loadedUrlParams.outputCurrencyId)];const urlLoadedTokens=useMemo(()=>{var _filter,_ref3;return(_filter=(_ref3=[loadedInputCurrency,loadedOutputCurrency])===null||_ref3===void 0?void 0:_ref3.filter(c=>c instanceof Token))!==null&&_filter!==void 0?_filter:[];},[loadedInputCurrency,loadedOutputCurrency]);// dismiss warning if all imported tokens are in active lists\nconst defaultTokens=useAllTokens();const importTokensNotInDefault=urlLoadedTokens&&urlLoadedTokens.filter(token=>{return!(token.address in defaultTokens);});const{account}=useActiveWeb3React();// for expert mode\nconst[isExpertMode]=useExpertModeManager();// get custom setting values for user\nconst[allowedSlippage]=useUserSlippageTolerance();// swap state\nconst{independentField,typedValue,recipient}=useSwapState();const{v2Trade,currencyBalances,parsedAmount,currencies,inputError:swapInputError}=useDerivedSwapInfo();const{wrapType,execute:onWrap,inputError:wrapInputError}=useWrapCallback(currencies[Field.INPUT],currencies[Field.OUTPUT],typedValue);const showWrap=wrapType!==WrapType.NOT_APPLICABLE;const trade=showWrap?undefined:v2Trade;const parsedAmounts=showWrap?{[Field.INPUT]:parsedAmount,[Field.OUTPUT]:parsedAmount}:{[Field.INPUT]:independentField===Field.INPUT?parsedAmount:trade===null||trade===void 0?void 0:trade.inputAmount,[Field.OUTPUT]:independentField===Field.OUTPUT?parsedAmount:trade===null||trade===void 0?void 0:trade.outputAmount};const{onSwitchTokens,onCurrencySelection,onUserInput,onChangeRecipient}=useSwapActionHandlers();const isValid=!swapInputError;const dependentField=independentField===Field.INPUT?Field.OUTPUT:Field.INPUT;const handleTypeInput=useCallback(value=>{onUserInput(Field.INPUT,value);},[onUserInput]);const handleTypeOutput=useCallback(value=>{onUserInput(Field.OUTPUT,value);},[onUserInput]);// modal and loading\nconst[{tradeToConfirm,swapErrorMessage,attemptingTxn,txHash},setSwapState]=useState({tradeToConfirm:undefined,attemptingTxn:false,swapErrorMessage:undefined,txHash:undefined});const formattedAmounts={[independentField]:typedValue,[dependentField]:showWrap?(_parsedAmounts$indepe=(_parsedAmounts$indepe2=parsedAmounts[independentField])===null||_parsedAmounts$indepe2===void 0?void 0:_parsedAmounts$indepe2.toExact())!==null&&_parsedAmounts$indepe!==void 0?_parsedAmounts$indepe:'':(_parsedAmounts$depend=(_parsedAmounts$depend2=parsedAmounts[dependentField])===null||_parsedAmounts$depend2===void 0?void 0:_parsedAmounts$depend2.toSignificant(6))!==null&&_parsedAmounts$depend!==void 0?_parsedAmounts$depend:''};const route=trade===null||trade===void 0?void 0:trade.route;const userHasSpecifiedInputOutput=Boolean(currencies[Field.INPUT]&&currencies[Field.OUTPUT]&&((_parsedAmounts$indepe3=parsedAmounts[independentField])===null||_parsedAmounts$indepe3===void 0?void 0:_parsedAmounts$indepe3.greaterThan(JSBI.BigInt(0))));const noRoute=!route;// check whether the user has approved the router on the input token\nconst[approval,approveCallback]=useApproveCallbackFromTrade(trade,allowedSlippage);// check if user has gone through approval process, used to show two step buttons, reset on token change\nconst[approvalSubmitted,setApprovalSubmitted]=useState(false);// mark when a user has submitted an approval, reset onTokenSelection for input field\nuseEffect(()=>{if(approval===ApprovalState.PENDING){setApprovalSubmitted(true);}},[approval,approvalSubmitted]);const maxAmountInput=maxAmountSpend(currencyBalances[Field.INPUT]);const atMaxAmountInput=Boolean(maxAmountInput&&((_parsedAmounts$Field$=parsedAmounts[Field.INPUT])===null||_parsedAmounts$Field$===void 0?void 0:_parsedAmounts$Field$.equalTo(maxAmountInput)));// the callback to execute the swap\nconst{callback:swapCallback,error:swapCallbackError}=useSwapCallback(trade,allowedSlippage,recipient);const{priceImpactWithoutFee}=computeTradePriceBreakdown(trade);const[singleHopOnly]=useUserSingleHopOnly();const handleSwap=useCallback(()=>{if(priceImpactWithoutFee&&!confirmPriceImpactWithoutFee(priceImpactWithoutFee)){return;}if(!swapCallback){return;}setSwapState({attemptingTxn:true,tradeToConfirm,swapErrorMessage:undefined,txHash:undefined});swapCallback().then(hash=>{setSwapState({attemptingTxn:false,tradeToConfirm,swapErrorMessage:undefined,txHash:hash});}).catch(error=>{setSwapState({attemptingTxn:false,tradeToConfirm,swapErrorMessage:error.message,txHash:undefined});});},[priceImpactWithoutFee,swapCallback,tradeToConfirm]);// errors\nconst[showInverted,setShowInverted]=useState(false);// warnings on slippage\nconst priceImpactSeverity=warningSeverity(priceImpactWithoutFee);// show approve flow when: no error on inputs, not approved or pending, or approved in current session\n// never show if price impact is above threshold in non expert mode\nconst showApproveFlow=!swapInputError&&(approval===ApprovalState.NOT_APPROVED||approval===ApprovalState.PENDING||approvalSubmitted&&approval===ApprovalState.APPROVED)&&!(priceImpactSeverity>3&&!isExpertMode);const handleConfirmDismiss=useCallback(()=>{setSwapState({tradeToConfirm,attemptingTxn,swapErrorMessage,txHash});// if there was a tx hash, we want to clear the input\nif(txHash){onUserInput(Field.INPUT,'');}},[attemptingTxn,onUserInput,swapErrorMessage,tradeToConfirm,txHash]);const handleAcceptChanges=useCallback(()=>{setSwapState({tradeToConfirm:trade,swapErrorMessage,txHash,attemptingTxn});},[attemptingTxn,swapErrorMessage,trade,txHash]);// swap warning state\nconst[swapWarningCurrency,setSwapWarningCurrency]=useState(null);const[onPresentSwapWarningModal]=useModal(/*#__PURE__*/_jsx(SwapWarningModal,{swapCurrency:swapWarningCurrency}));const shouldShowSwapWarning=swapCurrency=>{const isWarningToken=Object.entries(SwapWarningTokens).find(warningTokenConfig=>{const warningTokenData=warningTokenConfig[1];const warningTokenAddress=getAddress(warningTokenData.address);return swapCurrency.address===warningTokenAddress;});return Boolean(isWarningToken);};useEffect(()=>{if(swapWarningCurrency){onPresentSwapWarningModal();}// eslint-disable-next-line react-hooks/exhaustive-deps\n},[swapWarningCurrency]);const handleInputSelect=useCallback(inputCurrency=>{setApprovalSubmitted(false);// reset 2 step UI for approvals\nonCurrencySelection(Field.INPUT,inputCurrency);const showSwapWarning=shouldShowSwapWarning(inputCurrency);if(showSwapWarning){setSwapWarningCurrency(inputCurrency);}else{setSwapWarningCurrency(null);}},[onCurrencySelection]);const handleMaxInput=useCallback(()=>{if(maxAmountInput){onUserInput(Field.INPUT,maxAmountInput.toExact());}},[maxAmountInput,onUserInput]);const handleOutputSelect=useCallback(outputCurrency=>{onCurrencySelection(Field.OUTPUT,outputCurrency);const showSwapWarning=shouldShowSwapWarning(outputCurrency);if(showSwapWarning){setSwapWarningCurrency(outputCurrency);}else{setSwapWarningCurrency(null);}},[onCurrencySelection]);const swapIsUnsupported=useIsTransactionUnsupported(currencies===null||currencies===void 0?void 0:currencies.INPUT,currencies===null||currencies===void 0?void 0:currencies.OUTPUT);const[onPresentImportTokenWarningModal]=useModal(/*#__PURE__*/_jsx(ImportTokenWarningModal,{tokens:importTokensNotInDefault,onCancel:()=>history.push('/swap/')}));useEffect(()=>{if(importTokensNotInDefault.length>0){onPresentImportTokenWarningModal();}// eslint-disable-next-line react-hooks/exhaustive-deps\n},[importTokensNotInDefault.length]);const[onPresentConfirmModal]=useModal(/*#__PURE__*/_jsx(ConfirmSwapModal,{trade:trade,originalTrade:tradeToConfirm,onAcceptChanges:handleAcceptChanges,attemptingTxn:attemptingTxn,txHash:txHash,recipient:recipient,allowedSlippage:allowedSlippage,onConfirm:handleSwap,swapErrorMessage:swapErrorMessage,customOnDismiss:handleConfirmDismiss}),true,true,'confirmSwapModal');return/*#__PURE__*/_jsxs(Page,{children:[/*#__PURE__*/_jsxs(AppBody,{children:[/*#__PURE__*/_jsx(AppHeader,{title:t('Exchange'),subtitle:t('Trade tokens in an instant')}),/*#__PURE__*/_jsxs(Wrapper,{id:\"swap-page\",children:[/*#__PURE__*/_jsxs(AutoColumn,{gap:\"md\",children:[/*#__PURE__*/_jsx(CurrencyInputPanel,{label:independentField===Field.OUTPUT&&!showWrap&&trade?t('From (estimated)'):t('From'),value:formattedAmounts[Field.INPUT],showMaxButton:!atMaxAmountInput,currency:currencies[Field.INPUT],onUserInput:handleTypeInput,onMax:handleMaxInput,onCurrencySelect:handleInputSelect,otherCurrency:currencies[Field.OUTPUT],id:\"swap-currency-input\"}),/*#__PURE__*/_jsx(AutoColumn,{justify:\"space-between\",children:/*#__PURE__*/_jsxs(AutoRow,{justify:isExpertMode?'space-between':'center',style:{padding:'0 1rem'},children:[/*#__PURE__*/_jsx(ArrowWrapper,{clickable:true,children:/*#__PURE__*/_jsx(ArrowDownIcon,{width:\"16px\",onClick:()=>{setApprovalSubmitted(false);// reset 2 step UI for approvals\nonSwitchTokens();},color:currencies[Field.INPUT]&&currencies[Field.OUTPUT]?'primary':'text'})}),recipient===null&&!showWrap&&isExpertMode?/*#__PURE__*/_jsx(Button,{variant:\"text\",id:\"add-recipient-button\",onClick:()=>onChangeRecipient(''),children:t('+ Add a send (optional)')}):null]})}),/*#__PURE__*/_jsx(CurrencyInputPanel,{value:formattedAmounts[Field.OUTPUT],onUserInput:handleTypeOutput,label:independentField===Field.INPUT&&!showWrap&&trade?t('To (estimated)'):t('To'),showMaxButton:false,currency:currencies[Field.OUTPUT],onCurrencySelect:handleOutputSelect,otherCurrency:currencies[Field.INPUT],id:\"swap-currency-output\"}),isExpertMode&&recipient!==null&&!showWrap?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(AutoRow,{justify:\"space-between\",style:{padding:'0 1rem'},children:[/*#__PURE__*/_jsx(ArrowWrapper,{clickable:false,children:/*#__PURE__*/_jsx(ArrowDownIcon,{width:\"16px\"})}),/*#__PURE__*/_jsx(Button,{variant:\"text\",id:\"remove-recipient-button\",onClick:()=>onChangeRecipient(null),children:t('- Remove send')})]}),/*#__PURE__*/_jsx(AddressInputPanel,{id:\"recipient\",value:recipient,onChange:onChangeRecipient})]}):null,showWrap?null:/*#__PURE__*/_jsxs(AutoColumn,{gap:\"8px\",style:{padding:'0 16px'},children:[Boolean(trade)&&/*#__PURE__*/_jsxs(RowBetween,{align:\"center\",children:[/*#__PURE__*/_jsx(Label,{children:t('Price')}),/*#__PURE__*/_jsx(TradePrice,{price:trade===null||trade===void 0?void 0:trade.executionPrice,showInverted:showInverted,setShowInverted:setShowInverted})]}),allowedSlippage!==INITIAL_ALLOWED_SLIPPAGE&&/*#__PURE__*/_jsxs(RowBetween,{align:\"center\",children:[/*#__PURE__*/_jsx(Label,{children:t('Slippage Tolerance')}),/*#__PURE__*/_jsxs(Text,{bold:true,color:\"primary\",children:[allowedSlippage/100,\"%\"]})]})]})]}),/*#__PURE__*/_jsxs(Box,{mt:\"1rem\",children:[swapIsUnsupported?/*#__PURE__*/_jsx(Button,{width:\"100%\",disabled:true,mb:\"4px\",children:t('Unsupported Asset')}):!account?/*#__PURE__*/_jsx(ConnectWalletButton,{width:\"100%\"}):showWrap?/*#__PURE__*/_jsx(Button,{width:\"100%\",disabled:Boolean(wrapInputError),onClick:onWrap,children:wrapInputError!==null&&wrapInputError!==void 0?wrapInputError:wrapType===WrapType.WRAP?'Wrap':wrapType===WrapType.UNWRAP?'Unwrap':null}):noRoute&&userHasSpecifiedInputOutput?/*#__PURE__*/_jsxs(GreyCard,{style:{textAlign:'center'},children:[/*#__PURE__*/_jsx(Text,{color:\"textSubtle\",mb:\"4px\",children:t('Insufficient liquidity for this trade.')}),singleHopOnly&&/*#__PURE__*/_jsx(Text,{color:\"textSubtle\",mb:\"4px\",children:t('Try enabling multi-hop trades.')})]}):showApproveFlow?/*#__PURE__*/_jsxs(RowBetween,{children:[/*#__PURE__*/_jsx(Button,{variant:approval===ApprovalState.APPROVED?'success':'primary',onClick:approveCallback,disabled:approval!==ApprovalState.NOT_APPROVED||approvalSubmitted,width:\"48%\",children:approval===ApprovalState.PENDING?/*#__PURE__*/_jsxs(AutoRow,{gap:\"6px\",justify:\"center\",children:[t('Enabling'),\" \",/*#__PURE__*/_jsx(CircleLoader,{stroke:\"white\"})]}):approvalSubmitted&&approval===ApprovalState.APPROVED?t('Enabled'):t('Enable %asset%',{asset:(_currencies$Field$INP=(_currencies$Field$INP2=currencies[Field.INPUT])===null||_currencies$Field$INP2===void 0?void 0:_currencies$Field$INP2.symbol)!==null&&_currencies$Field$INP!==void 0?_currencies$Field$INP:''})}),/*#__PURE__*/_jsx(Button,{variant:isValid&&priceImpactSeverity>2?'danger':'primary',onClick:()=>{if(isExpertMode){handleSwap();}else{setSwapState({tradeToConfirm:trade,attemptingTxn:false,swapErrorMessage:undefined,txHash:undefined});onPresentConfirmModal();}},width:\"48%\",id:\"swap-button\",disabled:!isValid||approval!==ApprovalState.APPROVED||priceImpactSeverity>3&&!isExpertMode,children:priceImpactSeverity>3&&!isExpertMode?t('Price Impact High'):priceImpactSeverity>2?t('Swap Anyway'):t('Swap')})]}):/*#__PURE__*/_jsx(Button,{variant:isValid&&priceImpactSeverity>2&&!swapCallbackError?'danger':'primary',onClick:()=>{if(isExpertMode){handleSwap();}else{setSwapState({tradeToConfirm:trade,attemptingTxn:false,swapErrorMessage:undefined,txHash:undefined});onPresentConfirmModal();}},id:\"swap-button\",width:\"100%\",disabled:!isValid||priceImpactSeverity>3&&!isExpertMode||!!swapCallbackError,children:swapInputError||(priceImpactSeverity>3&&!isExpertMode?\"Price Impact Too High\":priceImpactSeverity>2?t('Swap Anyway'):t('Swap'))}),showApproveFlow&&/*#__PURE__*/_jsx(Column,{style:{marginTop:'1rem'},children:/*#__PURE__*/_jsx(ProgressSteps,{steps:[approval===ApprovalState.APPROVED]})}),isExpertMode&&swapErrorMessage?/*#__PURE__*/_jsx(SwapCallbackError,{error:swapErrorMessage}):null]})]})]}),!swapIsUnsupported?/*#__PURE__*/_jsx(AdvancedSwapDetailsDropdown,{trade:trade}):/*#__PURE__*/_jsx(UnsupportedCurrencyFooter,{currencies:[currencies.INPUT,currencies.OUTPUT]})]});}","map":{"version":3,"names":["React","useCallback","useEffect","useMemo","useState","styled","JSBI","Token","Button","Text","ArrowDownIcon","Box","useModal","useIsTransactionUnsupported","UnsupportedCurrencyFooter","useTranslation","SwapWarningTokens","getAddress","AddressInputPanel","GreyCard","Column","AutoColumn","ConfirmSwapModal","CurrencyInputPanel","AutoRow","RowBetween","AdvancedSwapDetailsDropdown","confirmPriceImpactWithoutFee","ArrowWrapper","SwapCallbackError","Wrapper","TradePrice","ImportTokenWarningModal","ProgressSteps","AppHeader","AppBody","ConnectWalletButton","INITIAL_ALLOWED_SLIPPAGE","useActiveWeb3React","useCurrency","useAllTokens","ApprovalState","useApproveCallbackFromTrade","useSwapCallback","useWrapCallback","WrapType","Field","useDefaultsFromURLSearch","useDerivedSwapInfo","useSwapActionHandlers","useSwapState","useExpertModeManager","useUserSlippageTolerance","useUserSingleHopOnly","maxAmountSpend","computeTradePriceBreakdown","warningSeverity","CircleLoader","Page","SwapWarningModal","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Label","_templateObject","_taggedTemplateLiteral","_ref","theme","colors","secondary","Swap","_ref2","_parsedAmounts$indepe","_parsedAmounts$indepe2","_parsedAmounts$depend","_parsedAmounts$depend2","_parsedAmounts$indepe3","_parsedAmounts$Field$","_currencies$Field$INP","_currencies$Field$INP2","history","loadedUrlParams","t","loadedInputCurrency","loadedOutputCurrency","inputCurrencyId","outputCurrencyId","urlLoadedTokens","_filter","_ref3","filter","c","defaultTokens","importTokensNotInDefault","token","address","account","isExpertMode","allowedSlippage","independentField","typedValue","recipient","v2Trade","currencyBalances","parsedAmount","currencies","inputError","swapInputError","wrapType","execute","onWrap","wrapInputError","INPUT","OUTPUT","showWrap","NOT_APPLICABLE","trade","undefined","parsedAmounts","inputAmount","outputAmount","onSwitchTokens","onCurrencySelection","onUserInput","onChangeRecipient","isValid","dependentField","handleTypeInput","value","handleTypeOutput","tradeToConfirm","swapErrorMessage","attemptingTxn","txHash","setSwapState","formattedAmounts","toExact","toSignificant","route","userHasSpecifiedInputOutput","Boolean","greaterThan","BigInt","noRoute","approval","approveCallback","approvalSubmitted","setApprovalSubmitted","PENDING","maxAmountInput","atMaxAmountInput","equalTo","callback","swapCallback","error","swapCallbackError","priceImpactWithoutFee","singleHopOnly","handleSwap","then","hash","catch","message","showInverted","setShowInverted","priceImpactSeverity","showApproveFlow","NOT_APPROVED","APPROVED","handleConfirmDismiss","handleAcceptChanges","swapWarningCurrency","setSwapWarningCurrency","onPresentSwapWarningModal","swapCurrency","shouldShowSwapWarning","isWarningToken","Object","entries","find","warningTokenConfig","warningTokenData","warningTokenAddress","handleInputSelect","inputCurrency","showSwapWarning","handleMaxInput","handleOutputSelect","outputCurrency","swapIsUnsupported","onPresentImportTokenWarningModal","tokens","onCancel","push","length","onPresentConfirmModal","originalTrade","onAcceptChanges","onConfirm","customOnDismiss","children","title","subtitle","id","gap","label","showMaxButton","currency","onMax","onCurrencySelect","otherCurrency","justify","style","padding","clickable","width","onClick","color","variant","onChange","align","price","executionPrice","bold","mt","disabled","mb","WRAP","UNWRAP","textAlign","stroke","asset","symbol","marginTop","steps"],"sources":["C:/Users/frkul/Documents/swapUI_pancake-frontend/src/views/Swap/index.tsx"],"sourcesContent":["import React, { useCallback, useEffect, useMemo, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { CurrencyAmount, JSBI, Token, Trade } from '@pancakeswap/sdk'\r\nimport { Button, Text, ArrowDownIcon, Box, useModal } from '@pancakeswap/uikit'\r\nimport { useIsTransactionUnsupported } from 'hooks/Trades'\r\nimport UnsupportedCurrencyFooter from 'components/UnsupportedCurrencyFooter'\r\nimport { RouteComponentProps } from 'react-router-dom'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport SwapWarningTokens from 'config/constants/swapWarningTokens'\r\nimport { getAddress } from 'utils/addressHelpers'\r\nimport AddressInputPanel from './components/AddressInputPanel'\r\nimport { GreyCard } from '../../components/Card'\r\nimport Column, { AutoColumn } from '../../components/Layout/Column'\r\nimport ConfirmSwapModal from './components/ConfirmSwapModal'\r\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel'\r\nimport { AutoRow, RowBetween } from '../../components/Layout/Row'\r\nimport AdvancedSwapDetailsDropdown from './components/AdvancedSwapDetailsDropdown'\r\nimport confirmPriceImpactWithoutFee from './components/confirmPriceImpactWithoutFee'\r\nimport { ArrowWrapper, SwapCallbackError, Wrapper } from './components/styleds'\r\nimport TradePrice from './components/TradePrice'\r\nimport ImportTokenWarningModal from './components/ImportTokenWarningModal'\r\nimport ProgressSteps from './components/ProgressSteps'\r\nimport { AppHeader, AppBody } from '../../components/App'\r\nimport ConnectWalletButton from '../../components/ConnectWalletButton'\r\n\r\nimport { INITIAL_ALLOWED_SLIPPAGE } from '../../config/constants'\r\nimport useActiveWeb3React from '../../hooks/useActiveWeb3React'\r\nimport { useCurrency, useAllTokens } from '../../hooks/Tokens'\r\nimport { ApprovalState, useApproveCallbackFromTrade } from '../../hooks/useApproveCallback'\r\nimport { useSwapCallback } from '../../hooks/useSwapCallback'\r\nimport useWrapCallback, { WrapType } from '../../hooks/useWrapCallback'\r\nimport { Field } from '../../state/swap/actions'\r\nimport {\r\n  useDefaultsFromURLSearch,\r\n  useDerivedSwapInfo,\r\n  useSwapActionHandlers,\r\n  useSwapState,\r\n} from '../../state/swap/hooks'\r\nimport { useExpertModeManager, useUserSlippageTolerance, useUserSingleHopOnly } from '../../state/user/hooks'\r\nimport { maxAmountSpend } from '../../utils/maxAmountSpend'\r\nimport { computeTradePriceBreakdown, warningSeverity } from '../../utils/prices'\r\nimport CircleLoader from '../../components/Loader/CircleLoader'\r\nimport Page from '../Page'\r\nimport SwapWarningModal from './components/SwapWarningModal'\r\n\r\nconst Label = styled(Text)`\r\n  font-size: 12px;\r\n  font-weight: bold;\r\n  color: ${({ theme }) => theme.colors.secondary};\r\n`\r\n\r\nexport default function Swap({ history }: RouteComponentProps) {\r\n  const loadedUrlParams = useDefaultsFromURLSearch()\r\n\r\n  const { t } = useTranslation()\r\n\r\n  // token warning stuff\r\n  const [loadedInputCurrency, loadedOutputCurrency] = [\r\n    useCurrency(loadedUrlParams?.inputCurrencyId),\r\n    useCurrency(loadedUrlParams?.outputCurrencyId),\r\n  ]\r\n  const urlLoadedTokens: Token[] = useMemo(\r\n    () => [loadedInputCurrency, loadedOutputCurrency]?.filter((c): c is Token => c instanceof Token) ?? [],\r\n    [loadedInputCurrency, loadedOutputCurrency],\r\n  )\r\n\r\n  // dismiss warning if all imported tokens are in active lists\r\n  const defaultTokens = useAllTokens()\r\n  const importTokensNotInDefault =\r\n    urlLoadedTokens &&\r\n    urlLoadedTokens.filter((token: Token) => {\r\n      return !(token.address in defaultTokens)\r\n    })\r\n\r\n  const { account } = useActiveWeb3React()\r\n\r\n  // for expert mode\r\n  const [isExpertMode] = useExpertModeManager()\r\n\r\n  // get custom setting values for user\r\n  const [allowedSlippage] = useUserSlippageTolerance()\r\n\r\n  // swap state\r\n  const { independentField, typedValue, recipient } = useSwapState()\r\n  const { v2Trade, currencyBalances, parsedAmount, currencies, inputError: swapInputError } = useDerivedSwapInfo()\r\n\r\n  const {\r\n    wrapType,\r\n    execute: onWrap,\r\n    inputError: wrapInputError,\r\n  } = useWrapCallback(currencies[Field.INPUT], currencies[Field.OUTPUT], typedValue)\r\n  const showWrap: boolean = wrapType !== WrapType.NOT_APPLICABLE\r\n  const trade = showWrap ? undefined : v2Trade\r\n\r\n  const parsedAmounts = showWrap\r\n    ? {\r\n        [Field.INPUT]: parsedAmount,\r\n        [Field.OUTPUT]: parsedAmount,\r\n      }\r\n    : {\r\n        [Field.INPUT]: independentField === Field.INPUT ? parsedAmount : trade?.inputAmount,\r\n        [Field.OUTPUT]: independentField === Field.OUTPUT ? parsedAmount : trade?.outputAmount,\r\n      }\r\n\r\n  const { onSwitchTokens, onCurrencySelection, onUserInput, onChangeRecipient } = useSwapActionHandlers()\r\n  const isValid = !swapInputError\r\n  const dependentField: Field = independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT\r\n\r\n  const handleTypeInput = useCallback(\r\n    (value: string) => {\r\n      onUserInput(Field.INPUT, value)\r\n    },\r\n    [onUserInput],\r\n  )\r\n  const handleTypeOutput = useCallback(\r\n    (value: string) => {\r\n      onUserInput(Field.OUTPUT, value)\r\n    },\r\n    [onUserInput],\r\n  )\r\n\r\n  // modal and loading\r\n  const [{ tradeToConfirm, swapErrorMessage, attemptingTxn, txHash }, setSwapState] = useState<{\r\n    tradeToConfirm: Trade | undefined\r\n    attemptingTxn: boolean\r\n    swapErrorMessage: string | undefined\r\n    txHash: string | undefined\r\n  }>({\r\n    tradeToConfirm: undefined,\r\n    attemptingTxn: false,\r\n    swapErrorMessage: undefined,\r\n    txHash: undefined,\r\n  })\r\n\r\n  const formattedAmounts = {\r\n    [independentField]: typedValue,\r\n    [dependentField]: showWrap\r\n      ? parsedAmounts[independentField]?.toExact() ?? ''\r\n      : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\r\n  }\r\n\r\n  const route = trade?.route\r\n  const userHasSpecifiedInputOutput = Boolean(\r\n    currencies[Field.INPUT] && currencies[Field.OUTPUT] && parsedAmounts[independentField]?.greaterThan(JSBI.BigInt(0)),\r\n  )\r\n  const noRoute = !route\r\n\r\n  // check whether the user has approved the router on the input token\r\n  const [approval, approveCallback] = useApproveCallbackFromTrade(trade, allowedSlippage)\r\n\r\n  // check if user has gone through approval process, used to show two step buttons, reset on token change\r\n  const [approvalSubmitted, setApprovalSubmitted] = useState<boolean>(false)\r\n\r\n  // mark when a user has submitted an approval, reset onTokenSelection for input field\r\n  useEffect(() => {\r\n    if (approval === ApprovalState.PENDING) {\r\n      setApprovalSubmitted(true)\r\n    }\r\n  }, [approval, approvalSubmitted])\r\n\r\n  const maxAmountInput: CurrencyAmount | undefined = maxAmountSpend(currencyBalances[Field.INPUT])\r\n  const atMaxAmountInput = Boolean(maxAmountInput && parsedAmounts[Field.INPUT]?.equalTo(maxAmountInput))\r\n\r\n  // the callback to execute the swap\r\n  const { callback: swapCallback, error: swapCallbackError } = useSwapCallback(trade, allowedSlippage, recipient)\r\n\r\n  const { priceImpactWithoutFee } = computeTradePriceBreakdown(trade)\r\n\r\n  const [singleHopOnly] = useUserSingleHopOnly()\r\n\r\n  const handleSwap = useCallback(() => {\r\n    if (priceImpactWithoutFee && !confirmPriceImpactWithoutFee(priceImpactWithoutFee)) {\r\n      return\r\n    }\r\n    if (!swapCallback) {\r\n      return\r\n    }\r\n    setSwapState({ attemptingTxn: true, tradeToConfirm, swapErrorMessage: undefined, txHash: undefined })\r\n    swapCallback()\r\n      .then((hash) => {\r\n        setSwapState({ attemptingTxn: false, tradeToConfirm, swapErrorMessage: undefined, txHash: hash })\r\n      })\r\n      .catch((error) => {\r\n        setSwapState({\r\n          attemptingTxn: false,\r\n          tradeToConfirm,\r\n          swapErrorMessage: error.message,\r\n          txHash: undefined,\r\n        })\r\n      })\r\n  }, [priceImpactWithoutFee, swapCallback, tradeToConfirm])\r\n\r\n  // errors\r\n  const [showInverted, setShowInverted] = useState<boolean>(false)\r\n\r\n  // warnings on slippage\r\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee)\r\n\r\n  // show approve flow when: no error on inputs, not approved or pending, or approved in current session\r\n  // never show if price impact is above threshold in non expert mode\r\n  const showApproveFlow =\r\n    !swapInputError &&\r\n    (approval === ApprovalState.NOT_APPROVED ||\r\n      approval === ApprovalState.PENDING ||\r\n      (approvalSubmitted && approval === ApprovalState.APPROVED)) &&\r\n    !(priceImpactSeverity > 3 && !isExpertMode)\r\n\r\n  const handleConfirmDismiss = useCallback(() => {\r\n    setSwapState({ tradeToConfirm, attemptingTxn, swapErrorMessage, txHash })\r\n    // if there was a tx hash, we want to clear the input\r\n    if (txHash) {\r\n      onUserInput(Field.INPUT, '')\r\n    }\r\n  }, [attemptingTxn, onUserInput, swapErrorMessage, tradeToConfirm, txHash])\r\n\r\n  const handleAcceptChanges = useCallback(() => {\r\n    setSwapState({ tradeToConfirm: trade, swapErrorMessage, txHash, attemptingTxn })\r\n  }, [attemptingTxn, swapErrorMessage, trade, txHash])\r\n\r\n  // swap warning state\r\n  const [swapWarningCurrency, setSwapWarningCurrency] = useState(null)\r\n  const [onPresentSwapWarningModal] = useModal(<SwapWarningModal swapCurrency={swapWarningCurrency} />)\r\n\r\n  const shouldShowSwapWarning = (swapCurrency) => {\r\n    const isWarningToken = Object.entries(SwapWarningTokens).find((warningTokenConfig) => {\r\n      const warningTokenData = warningTokenConfig[1]\r\n      const warningTokenAddress = getAddress(warningTokenData.address)\r\n      return swapCurrency.address === warningTokenAddress\r\n    })\r\n    return Boolean(isWarningToken)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (swapWarningCurrency) {\r\n      onPresentSwapWarningModal()\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [swapWarningCurrency])\r\n\r\n  const handleInputSelect = useCallback(\r\n    (inputCurrency) => {\r\n      setApprovalSubmitted(false) // reset 2 step UI for approvals\r\n      onCurrencySelection(Field.INPUT, inputCurrency)\r\n      const showSwapWarning = shouldShowSwapWarning(inputCurrency)\r\n      if (showSwapWarning) {\r\n        setSwapWarningCurrency(inputCurrency)\r\n      } else {\r\n        setSwapWarningCurrency(null)\r\n      }\r\n    },\r\n    [onCurrencySelection],\r\n  )\r\n\r\n  const handleMaxInput = useCallback(() => {\r\n    if (maxAmountInput) {\r\n      onUserInput(Field.INPUT, maxAmountInput.toExact())\r\n    }\r\n  }, [maxAmountInput, onUserInput])\r\n\r\n  const handleOutputSelect = useCallback(\r\n    (outputCurrency) => {\r\n      onCurrencySelection(Field.OUTPUT, outputCurrency)\r\n      const showSwapWarning = shouldShowSwapWarning(outputCurrency)\r\n      if (showSwapWarning) {\r\n        setSwapWarningCurrency(outputCurrency)\r\n      } else {\r\n        setSwapWarningCurrency(null)\r\n      }\r\n    },\r\n\r\n    [onCurrencySelection],\r\n  )\r\n\r\n  const swapIsUnsupported = useIsTransactionUnsupported(currencies?.INPUT, currencies?.OUTPUT)\r\n\r\n  const [onPresentImportTokenWarningModal] = useModal(\r\n    <ImportTokenWarningModal tokens={importTokensNotInDefault} onCancel={() => history.push('/swap/')} />,\r\n  )\r\n\r\n  useEffect(() => {\r\n    if (importTokensNotInDefault.length > 0) {\r\n      onPresentImportTokenWarningModal()\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [importTokensNotInDefault.length])\r\n\r\n  const [onPresentConfirmModal] = useModal(\r\n    <ConfirmSwapModal\r\n      trade={trade}\r\n      originalTrade={tradeToConfirm}\r\n      onAcceptChanges={handleAcceptChanges}\r\n      attemptingTxn={attemptingTxn}\r\n      txHash={txHash}\r\n      recipient={recipient}\r\n      allowedSlippage={allowedSlippage}\r\n      onConfirm={handleSwap}\r\n      swapErrorMessage={swapErrorMessage}\r\n      customOnDismiss={handleConfirmDismiss}\r\n    />,\r\n    true,\r\n    true,\r\n    'confirmSwapModal',\r\n  )\r\n\r\n  return (\r\n    <Page>\r\n      <AppBody>\r\n        <AppHeader title={t('Exchange')} subtitle={t('Trade tokens in an instant')} />\r\n        <Wrapper id=\"swap-page\">\r\n          <AutoColumn gap=\"md\">\r\n            <CurrencyInputPanel\r\n              label={independentField === Field.OUTPUT && !showWrap && trade ? t('From (estimated)') : t('From')}\r\n              value={formattedAmounts[Field.INPUT]}\r\n              showMaxButton={!atMaxAmountInput}\r\n              currency={currencies[Field.INPUT]}\r\n              onUserInput={handleTypeInput}\r\n              onMax={handleMaxInput}\r\n              onCurrencySelect={handleInputSelect}\r\n              otherCurrency={currencies[Field.OUTPUT]}\r\n              id=\"swap-currency-input\"\r\n            />\r\n            <AutoColumn justify=\"space-between\">\r\n              <AutoRow justify={isExpertMode ? 'space-between' : 'center'} style={{ padding: '0 1rem' }}>\r\n                <ArrowWrapper clickable>\r\n                  <ArrowDownIcon\r\n                    width=\"16px\"\r\n                    onClick={() => {\r\n                      setApprovalSubmitted(false) // reset 2 step UI for approvals\r\n                      onSwitchTokens()\r\n                    }}\r\n                    color={currencies[Field.INPUT] && currencies[Field.OUTPUT] ? 'primary' : 'text'}\r\n                  />\r\n                </ArrowWrapper>\r\n                {recipient === null && !showWrap && isExpertMode ? (\r\n                  <Button variant=\"text\" id=\"add-recipient-button\" onClick={() => onChangeRecipient('')}>\r\n                    {t('+ Add a send (optional)')}\r\n                  </Button>\r\n                ) : null}\r\n              </AutoRow>\r\n            </AutoColumn>\r\n            <CurrencyInputPanel\r\n              value={formattedAmounts[Field.OUTPUT]}\r\n              onUserInput={handleTypeOutput}\r\n              label={independentField === Field.INPUT && !showWrap && trade ? t('To (estimated)') : t('To')}\r\n              showMaxButton={false}\r\n              currency={currencies[Field.OUTPUT]}\r\n              onCurrencySelect={handleOutputSelect}\r\n              otherCurrency={currencies[Field.INPUT]}\r\n              id=\"swap-currency-output\"\r\n            />\r\n\r\n            {isExpertMode && recipient !== null && !showWrap ? (\r\n              <>\r\n                <AutoRow justify=\"space-between\" style={{ padding: '0 1rem' }}>\r\n                  <ArrowWrapper clickable={false}>\r\n                    <ArrowDownIcon width=\"16px\" />\r\n                  </ArrowWrapper>\r\n                  <Button variant=\"text\" id=\"remove-recipient-button\" onClick={() => onChangeRecipient(null)}>\r\n                    {t('- Remove send')}\r\n                  </Button>\r\n                </AutoRow>\r\n                <AddressInputPanel id=\"recipient\" value={recipient} onChange={onChangeRecipient} />\r\n              </>\r\n            ) : null}\r\n\r\n            {showWrap ? null : (\r\n              <AutoColumn gap=\"8px\" style={{ padding: '0 16px' }}>\r\n                {Boolean(trade) && (\r\n                  <RowBetween align=\"center\">\r\n                    <Label>{t('Price')}</Label>\r\n                    <TradePrice\r\n                      price={trade?.executionPrice}\r\n                      showInverted={showInverted}\r\n                      setShowInverted={setShowInverted}\r\n                    />\r\n                  </RowBetween>\r\n                )}\r\n                {allowedSlippage !== INITIAL_ALLOWED_SLIPPAGE && (\r\n                  <RowBetween align=\"center\">\r\n                    <Label>{t('Slippage Tolerance')}</Label>\r\n                    <Text bold color=\"primary\">\r\n                      {allowedSlippage / 100}%\r\n                    </Text>\r\n                  </RowBetween>\r\n                )}\r\n              </AutoColumn>\r\n            )}\r\n          </AutoColumn>\r\n          <Box mt=\"1rem\">\r\n            {swapIsUnsupported ? (\r\n              <Button width=\"100%\" disabled mb=\"4px\">\r\n                {t('Unsupported Asset')}\r\n              </Button>\r\n            ) : !account ? (\r\n              <ConnectWalletButton width=\"100%\" />\r\n            ) : showWrap ? (\r\n              <Button width=\"100%\" disabled={Boolean(wrapInputError)} onClick={onWrap}>\r\n                {wrapInputError ??\r\n                  (wrapType === WrapType.WRAP ? 'Wrap' : wrapType === WrapType.UNWRAP ? 'Unwrap' : null)}\r\n              </Button>\r\n            ) : noRoute && userHasSpecifiedInputOutput ? (\r\n              <GreyCard style={{ textAlign: 'center' }}>\r\n                <Text color=\"textSubtle\" mb=\"4px\">\r\n                  {t('Insufficient liquidity for this trade.')}\r\n                </Text>\r\n                {singleHopOnly && (\r\n                  <Text color=\"textSubtle\" mb=\"4px\">\r\n                    {t('Try enabling multi-hop trades.')}\r\n                  </Text>\r\n                )}\r\n              </GreyCard>\r\n            ) : showApproveFlow ? (\r\n              <RowBetween>\r\n                <Button\r\n                  variant={approval === ApprovalState.APPROVED ? 'success' : 'primary'}\r\n                  onClick={approveCallback}\r\n                  disabled={approval !== ApprovalState.NOT_APPROVED || approvalSubmitted}\r\n                  width=\"48%\"\r\n                >\r\n                  {approval === ApprovalState.PENDING ? (\r\n                    <AutoRow gap=\"6px\" justify=\"center\">\r\n                      {t('Enabling')} <CircleLoader stroke=\"white\" />\r\n                    </AutoRow>\r\n                  ) : approvalSubmitted && approval === ApprovalState.APPROVED ? (\r\n                    t('Enabled')\r\n                  ) : (\r\n                    t('Enable %asset%', { asset: currencies[Field.INPUT]?.symbol ?? '' })\r\n                  )}\r\n                </Button>\r\n                <Button\r\n                  variant={isValid && priceImpactSeverity > 2 ? 'danger' : 'primary'}\r\n                  onClick={() => {\r\n                    if (isExpertMode) {\r\n                      handleSwap()\r\n                    } else {\r\n                      setSwapState({\r\n                        tradeToConfirm: trade,\r\n                        attemptingTxn: false,\r\n                        swapErrorMessage: undefined,\r\n                        txHash: undefined,\r\n                      })\r\n                      onPresentConfirmModal()\r\n                    }\r\n                  }}\r\n                  width=\"48%\"\r\n                  id=\"swap-button\"\r\n                  disabled={\r\n                    !isValid || approval !== ApprovalState.APPROVED || (priceImpactSeverity > 3 && !isExpertMode)\r\n                  }\r\n                >\r\n                  {priceImpactSeverity > 3 && !isExpertMode\r\n                    ? t('Price Impact High')\r\n                    : priceImpactSeverity > 2\r\n                    ? t('Swap Anyway')\r\n                    : t('Swap')}\r\n                </Button>\r\n              </RowBetween>\r\n            ) : (\r\n              <Button\r\n                variant={isValid && priceImpactSeverity > 2 && !swapCallbackError ? 'danger' : 'primary'}\r\n                onClick={() => {\r\n                  if (isExpertMode) {\r\n                    handleSwap()\r\n                  } else {\r\n                    setSwapState({\r\n                      tradeToConfirm: trade,\r\n                      attemptingTxn: false,\r\n                      swapErrorMessage: undefined,\r\n                      txHash: undefined,\r\n                    })\r\n                    onPresentConfirmModal()\r\n                  }\r\n                }}\r\n                id=\"swap-button\"\r\n                width=\"100%\"\r\n                disabled={!isValid || (priceImpactSeverity > 3 && !isExpertMode) || !!swapCallbackError}\r\n              >\r\n                {swapInputError ||\r\n                  (priceImpactSeverity > 3 && !isExpertMode\r\n                    ? `Price Impact Too High`\r\n                    : priceImpactSeverity > 2\r\n                    ? t('Swap Anyway')\r\n                    : t('Swap'))}\r\n              </Button>\r\n            )}\r\n            {showApproveFlow && (\r\n              <Column style={{ marginTop: '1rem' }}>\r\n                <ProgressSteps steps={[approval === ApprovalState.APPROVED]} />\r\n              </Column>\r\n            )}\r\n            {isExpertMode && swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\r\n          </Box>\r\n        </Wrapper>\r\n      </AppBody>\r\n      {!swapIsUnsupported ? (\r\n        <AdvancedSwapDetailsDropdown trade={trade} />\r\n      ) : (\r\n        <UnsupportedCurrencyFooter currencies={[currencies.INPUT, currencies.OUTPUT]} />\r\n      )}\r\n    </Page>\r\n  )\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}