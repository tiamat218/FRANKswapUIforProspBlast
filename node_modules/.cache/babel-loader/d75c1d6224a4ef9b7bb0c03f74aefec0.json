{"ast":null,"code":"import identity from'lodash/identity';import{useEffect,useState}from'react';const defaultOptions={hydrate:identity,dehydrate:identity};/**\r\n * Same as \"useState\" but saves the value to local storage each time it changes\r\n */const usePersistState=(initialValue,userOptions)=>{const{localStorageKey,hydrate,dehydrate}={...defaultOptions,...userOptions};const[value,setValue]=useState(()=>{try{const valueFromLS=localStorage.getItem(localStorageKey);return valueFromLS?hydrate(JSON.parse(valueFromLS)):initialValue;}catch(error){return initialValue;}});useEffect(()=>{localStorage.setItem(localStorageKey,JSON.stringify(dehydrate(value)));},[value,localStorageKey,dehydrate]);return[value,setValue];};export default usePersistState;","map":{"version":3,"names":["identity","useEffect","useState","defaultOptions","hydrate","dehydrate","usePersistState","initialValue","userOptions","localStorageKey","value","setValue","valueFromLS","localStorage","getItem","JSON","parse","error","setItem","stringify"],"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/hooks/usePersistState.ts"],"sourcesContent":["import identity from 'lodash/identity'\r\nimport { useEffect, useState } from 'react'\r\n\r\ninterface UsePersistStateOptions {\r\n  localStorageKey: string\r\n  hydrate?: (value: any) => any\r\n  dehydrate?: (value: any) => any\r\n}\r\n\r\nconst defaultOptions = {\r\n  hydrate: identity,\r\n  dehydrate: identity,\r\n}\r\n\r\n/**\r\n * Same as \"useState\" but saves the value to local storage each time it changes\r\n */\r\nconst usePersistState = (initialValue: any, userOptions: UsePersistStateOptions) => {\r\n  const { localStorageKey, hydrate, dehydrate } = { ...defaultOptions, ...userOptions }\r\n  const [value, setValue] = useState(() => {\r\n    try {\r\n      const valueFromLS = localStorage.getItem(localStorageKey)\r\n\r\n      return valueFromLS ? hydrate(JSON.parse(valueFromLS)) : initialValue\r\n    } catch (error) {\r\n      return initialValue\r\n    }\r\n  })\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(localStorageKey, JSON.stringify(dehydrate(value)))\r\n  }, [value, localStorageKey, dehydrate])\r\n\r\n  return [value, setValue]\r\n}\r\n\r\nexport default usePersistState\r\n"],"mappings":"AAAA,MAAO,CAAAA,QAAQ,KAAM,iBAAiB,CACtC,OAASC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAQ3C,KAAM,CAAAC,cAAc,CAAG,CACrBC,OAAO,CAAEJ,QAAQ,CACjBK,SAAS,CAAEL,QACb,CAAC,CAED;AACA;AACA,GACA,KAAM,CAAAM,eAAe,CAAGA,CAACC,YAAiB,CAAEC,WAAmC,GAAK,CAClF,KAAM,CAAEC,eAAe,CAAEL,OAAO,CAAEC,SAAU,CAAC,CAAG,CAAE,GAAGF,cAAc,CAAE,GAAGK,WAAY,CAAC,CACrF,KAAM,CAACE,KAAK,CAAEC,QAAQ,CAAC,CAAGT,QAAQ,CAAC,IAAM,CACvC,GAAI,CACF,KAAM,CAAAU,WAAW,CAAGC,YAAY,CAACC,OAAO,CAACL,eAAe,CAAC,CAEzD,MAAO,CAAAG,WAAW,CAAGR,OAAO,CAACW,IAAI,CAACC,KAAK,CAACJ,WAAW,CAAC,CAAC,CAAGL,YAAY,CACtE,CAAE,MAAOU,KAAK,CAAE,CACd,MAAO,CAAAV,YAAY,CACrB,CACF,CAAC,CAAC,CAEFN,SAAS,CAAC,IAAM,CACdY,YAAY,CAACK,OAAO,CAACT,eAAe,CAAEM,IAAI,CAACI,SAAS,CAACd,SAAS,CAACK,KAAK,CAAC,CAAC,CAAC,CACzE,CAAC,CAAE,CAACA,KAAK,CAAED,eAAe,CAAEJ,SAAS,CAAC,CAAC,CAEvC,MAAO,CAACK,KAAK,CAAEC,QAAQ,CAAC,CAC1B,CAAC,CAED,cAAe,CAAAL,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module"}