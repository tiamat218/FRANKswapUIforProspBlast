{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Devrim\\\\Documents\\\\FRANKswapUIforProspBlast\\\\src\\\\views\\\\Pools\\\\components\\\\PoolsTable\\\\PoolRow.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { useMatchBreakpoints } from '@pancakeswap/uikit';\nimport { useCakeVault } from 'state/pools/hooks';\nimport useDelayedUnmount from 'hooks/useDelayedUnmount';\nimport NameCell from './Cells/NameCell';\nimport EarningsCell from './Cells/EarningsCell';\nimport AprCell from './Cells/AprCell';\nimport TotalStakedCell from './Cells/TotalStakedCell';\nimport EndsInCell from './Cells/EndsInCell';\nimport ExpandActionCell from './Cells/ExpandActionCell';\nimport ActionPanel from './ActionPanel/ActionPanel';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst StyledRow = styled.div`\n  background-color: transparent;\n  display: flex;\n  cursor: pointer;\n`;\n_c = StyledRow;\nconst PoolRow = ({\n  pool,\n  account,\n  userDataLoaded\n}) => {\n  _s();\n  const {\n    isXs,\n    isSm,\n    isMd,\n    isLg,\n    isXl\n  } = useMatchBreakpoints();\n  const [expanded, setExpanded] = useState(false);\n  const shouldRenderActionPanel = useDelayedUnmount(expanded, 300);\n  const toggleExpanded = () => {\n    setExpanded(prev => !prev);\n  };\n  const {\n    fees: {\n      performanceFee\n    }\n  } = useCakeVault();\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(StyledRow, {\n      role: \"row\",\n      onClick: toggleExpanded,\n      children: [/*#__PURE__*/_jsxDEV(NameCell, {\n        pool: pool\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EarningsCell, {\n        pool: pool,\n        account: account,\n        userDataLoaded: userDataLoaded\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AprCell, {\n        pool: pool,\n        performanceFee: performanceFeeAsDecimal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), (isLg || isXl) && /*#__PURE__*/_jsxDEV(TotalStakedCell, {\n        pool: pool\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 28\n      }, this), isXl && /*#__PURE__*/_jsxDEV(EndsInCell, {\n        pool: pool\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(ExpandActionCell, {\n        expanded: expanded,\n        isFullLayout: isMd || isLg || isXl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), shouldRenderActionPanel && /*#__PURE__*/_jsxDEV(ActionPanel, {\n      account: account,\n      pool: pool,\n      userDataLoaded: userDataLoaded,\n      expanded: expanded,\n      breakpoints: {\n        isXs,\n        isSm,\n        isMd,\n        isLg,\n        isXl\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(PoolRow, \"AVkLBqL6QlKmQ5CF72MGiDexeYs=\", false, function () {\n  return [useMatchBreakpoints, useDelayedUnmount, useCakeVault];\n});\n_c2 = PoolRow;\nexport default PoolRow;\nvar _c, _c2;\n$RefreshReg$(_c, \"StyledRow\");\n$RefreshReg$(_c2, \"PoolRow\");","map":{"version":3,"names":["React","useState","styled","useMatchBreakpoints","useCakeVault","useDelayedUnmount","NameCell","EarningsCell","AprCell","TotalStakedCell","EndsInCell","ExpandActionCell","ActionPanel","jsxDEV","_jsxDEV","Fragment","_Fragment","StyledRow","div","_c","PoolRow","pool","account","userDataLoaded","_s","isXs","isSm","isMd","isLg","isXl","expanded","setExpanded","shouldRenderActionPanel","toggleExpanded","prev","fees","performanceFee","performanceFeeAsDecimal","children","role","onClick","fileName","_jsxFileName","lineNumber","columnNumber","isFullLayout","breakpoints","_c2","$RefreshReg$"],"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/views/Pools/components/PoolsTable/PoolRow.tsx"],"sourcesContent":["import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { useMatchBreakpoints } from '@pancakeswap/uikit'\r\nimport { Pool } from 'state/types'\r\nimport { useCakeVault } from 'state/pools/hooks'\r\nimport useDelayedUnmount from 'hooks/useDelayedUnmount'\r\nimport NameCell from './Cells/NameCell'\r\nimport EarningsCell from './Cells/EarningsCell'\r\nimport AprCell from './Cells/AprCell'\r\nimport TotalStakedCell from './Cells/TotalStakedCell'\r\nimport EndsInCell from './Cells/EndsInCell'\r\nimport ExpandActionCell from './Cells/ExpandActionCell'\r\nimport ActionPanel from './ActionPanel/ActionPanel'\r\n\r\ninterface PoolRowProps {\r\n  pool: Pool\r\n  account: string\r\n  userDataLoaded: boolean\r\n}\r\n\r\nconst StyledRow = styled.div`\r\n  background-color: transparent;\r\n  display: flex;\r\n  cursor: pointer;\r\n`\r\n\r\nconst PoolRow: React.FC<PoolRowProps> = ({ pool, account, userDataLoaded }) => {\r\n  const { isXs, isSm, isMd, isLg, isXl } = useMatchBreakpoints()\r\n  const [expanded, setExpanded] = useState(false)\r\n  const shouldRenderActionPanel = useDelayedUnmount(expanded, 300)\r\n\r\n  const toggleExpanded = () => {\r\n    setExpanded((prev) => !prev)\r\n  }\r\n\r\n  const {\r\n    fees: { performanceFee },\r\n  } = useCakeVault()\r\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\r\n\r\n  return (\r\n    <>\r\n      <StyledRow role=\"row\" onClick={toggleExpanded}>\r\n        <NameCell pool={pool} />\r\n        <EarningsCell pool={pool} account={account} userDataLoaded={userDataLoaded} />\r\n        <AprCell pool={pool} performanceFee={performanceFeeAsDecimal} />\r\n        {(isLg || isXl) && <TotalStakedCell pool={pool} />}\r\n        {isXl && <EndsInCell pool={pool} />}\r\n        <ExpandActionCell expanded={expanded} isFullLayout={isMd || isLg || isXl} />\r\n      </StyledRow>\r\n      {shouldRenderActionPanel && (\r\n        <ActionPanel\r\n          account={account}\r\n          pool={pool}\r\n          userDataLoaded={userDataLoaded}\r\n          expanded={expanded}\r\n          breakpoints={{ isXs, isSm, isMd, isLg, isXl }}\r\n        />\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PoolRow\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}