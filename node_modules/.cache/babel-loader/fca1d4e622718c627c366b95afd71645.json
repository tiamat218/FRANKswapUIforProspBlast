{"ast":null,"code":"import _taggedTemplateLiteral from\"C:/Users/frkul/Documents/swapUI_pancake-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2,_templateObject3;import React,{useState}from'react';import styled from'styled-components';import{ExpandableLabel,Flex,Text}from'@pancakeswap/uikit';import{useTranslation}from'contexts/Localization';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Wrapper=styled(Flex)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  cursor: pointer;\\n\"])));const StyledExpandableLabelWrapper=styled(Flex)(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  button {\\n    align-items: center;\\n    justify-content: flex-start;\\n  }\\n\"])));const StyledChildrenFlex=styled(Flex)(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  overflow: hidden;\\n  height: \",\";\\n  padding-bottom: \",\";\\n  border-bottom: 1px solid \",\";\\n\"])),_ref=>{let{isExpanded}=_ref;return isExpanded?'100%':'0px';},_ref2=>{let{isExpanded}=_ref2;return isExpanded?'16px':'0px';},_ref3=>{let{theme}=_ref3;return theme.colors.inputSecondary;});const FoldableText=_ref4=>{let{title,children,...props}=_ref4;const{t}=useTranslation();const[isExpanded,setIsExpanded]=useState(false);return/*#__PURE__*/_jsxs(Wrapper,{...props,flexDirection:\"column\",onClick:()=>setIsExpanded(!isExpanded),children:[/*#__PURE__*/_jsxs(Flex,{justifyContent:\"space-between\",alignItems:\"center\",pb:\"16px\",children:[/*#__PURE__*/_jsx(Text,{fontWeight:\"bold\",children:title}),/*#__PURE__*/_jsx(StyledExpandableLabelWrapper,{children:/*#__PURE__*/_jsx(ExpandableLabel,{expanded:isExpanded,onClick:()=>setIsExpanded(!isExpanded),children:isExpanded?t('Hide'):t('Details')})})]}),/*#__PURE__*/_jsx(StyledChildrenFlex,{isExpanded:isExpanded,flexDirection:\"column\",children:children})]});};export default FoldableText;","map":{"version":3,"names":["React","useState","styled","ExpandableLabel","Flex","Text","useTranslation","jsx","_jsx","jsxs","_jsxs","Wrapper","_templateObject","_taggedTemplateLiteral","StyledExpandableLabelWrapper","_templateObject2","StyledChildrenFlex","_templateObject3","_ref","isExpanded","_ref2","_ref3","theme","colors","inputSecondary","FoldableText","_ref4","title","children","props","t","setIsExpanded","flexDirection","onClick","justifyContent","alignItems","pb","fontWeight","expanded"],"sources":["C:/Users/frkul/Documents/swapUI_pancake-frontend/src/components/FoldableText/index.tsx"],"sourcesContent":["import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { ExpandableLabel, Flex, FlexProps, Text } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\ninterface FoldableTextProps extends FlexProps {\r\n  title?: string\r\n}\r\n\r\nconst Wrapper = styled(Flex)`\r\n  cursor: pointer;\r\n`\r\n\r\nconst StyledExpandableLabelWrapper = styled(Flex)`\r\n  button {\r\n    align-items: center;\r\n    justify-content: flex-start;\r\n  }\r\n`\r\n\r\nconst StyledChildrenFlex = styled(Flex)<{ isExpanded?: boolean }>`\r\n  overflow: hidden;\r\n  height: ${({ isExpanded }) => (isExpanded ? '100%' : '0px')};\r\n  padding-bottom: ${({ isExpanded }) => (isExpanded ? '16px' : '0px')};\r\n  border-bottom: 1px solid ${({ theme }) => theme.colors.inputSecondary};\r\n`\r\n\r\nconst FoldableText: React.FC<FoldableTextProps> = ({ title, children, ...props }) => {\r\n  const { t } = useTranslation()\r\n  const [isExpanded, setIsExpanded] = useState(false)\r\n\r\n  return (\r\n    <Wrapper {...props} flexDirection=\"column\" onClick={() => setIsExpanded(!isExpanded)}>\r\n      <Flex justifyContent=\"space-between\" alignItems=\"center\" pb=\"16px\">\r\n        <Text fontWeight=\"bold\">{title}</Text>\r\n        <StyledExpandableLabelWrapper>\r\n          <ExpandableLabel expanded={isExpanded} onClick={() => setIsExpanded(!isExpanded)}>\r\n            {isExpanded ? t('Hide') : t('Details')}\r\n          </ExpandableLabel>\r\n        </StyledExpandableLabelWrapper>\r\n      </Flex>\r\n      <StyledChildrenFlex isExpanded={isExpanded} flexDirection=\"column\">\r\n        {children}\r\n      </StyledChildrenFlex>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default FoldableText\r\n"],"mappings":"6OAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,CAAAC,MAAM,KAAM,mBAAmB,CACtC,OAASC,eAAe,CAAEC,IAAI,CAAaC,IAAI,KAAQ,oBAAoB,CAC3E,OAASC,cAAc,KAAQ,uBAAuB,QAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAMtD,KAAM,CAAAC,OAAO,CAAGT,MAAM,CAACE,IAAI,CAAC,CAAAQ,eAAA,GAAAA,eAAA,CAAAC,sBAAA,8BAE3B,CAED,KAAM,CAAAC,4BAA4B,CAAGZ,MAAM,CAACE,IAAI,CAAC,CAAAW,gBAAA,GAAAA,gBAAA,CAAAF,sBAAA,uFAKhD,CAED,KAAM,CAAAG,kBAAkB,CAAGd,MAAM,CAACE,IAAI,CAAC,CAAAa,gBAAA,GAAAA,gBAAA,CAAAJ,sBAAA,wGAE3BK,IAAA,MAAC,CAAEC,UAAW,CAAC,CAAAD,IAAA,OAAM,CAAAC,UAAU,CAAG,MAAM,CAAG,KAAK,EAAC,CACzCC,KAAA,MAAC,CAAED,UAAW,CAAC,CAAAC,KAAA,OAAM,CAAAD,UAAU,CAAG,MAAM,CAAG,KAAK,EAAC,CACxCE,KAAA,MAAC,CAAEC,KAAM,CAAC,CAAAD,KAAA,OAAK,CAAAC,KAAK,CAACC,MAAM,CAACC,cAAc,GACtE,CAED,KAAM,CAAAC,YAAyC,CAAGC,KAAA,EAAmC,IAAlC,CAAEC,KAAK,CAAEC,QAAQ,CAAE,GAAGC,KAAM,CAAC,CAAAH,KAAA,CAC9E,KAAM,CAAEI,CAAE,CAAC,CAAGxB,cAAc,CAAC,CAAC,CAC9B,KAAM,CAACa,UAAU,CAAEY,aAAa,CAAC,CAAG9B,QAAQ,CAAC,KAAK,CAAC,CAEnD,mBACES,KAAA,CAACC,OAAO,KAAKkB,KAAK,CAAEG,aAAa,CAAC,QAAQ,CAACC,OAAO,CAAEA,CAAA,GAAMF,aAAa,CAAC,CAACZ,UAAU,CAAE,CAAAS,QAAA,eACnFlB,KAAA,CAACN,IAAI,EAAC8B,cAAc,CAAC,eAAe,CAACC,UAAU,CAAC,QAAQ,CAACC,EAAE,CAAC,MAAM,CAAAR,QAAA,eAChEpB,IAAA,CAACH,IAAI,EAACgC,UAAU,CAAC,MAAM,CAAAT,QAAA,CAAED,KAAK,CAAO,CAAC,cACtCnB,IAAA,CAACM,4BAA4B,EAAAc,QAAA,cAC3BpB,IAAA,CAACL,eAAe,EAACmC,QAAQ,CAAEnB,UAAW,CAACc,OAAO,CAAEA,CAAA,GAAMF,aAAa,CAAC,CAACZ,UAAU,CAAE,CAAAS,QAAA,CAC9ET,UAAU,CAAGW,CAAC,CAAC,MAAM,CAAC,CAAGA,CAAC,CAAC,SAAS,CAAC,CACvB,CAAC,CACU,CAAC,EAC3B,CAAC,cACPtB,IAAA,CAACQ,kBAAkB,EAACG,UAAU,CAAEA,UAAW,CAACa,aAAa,CAAC,QAAQ,CAAAJ,QAAA,CAC/DA,QAAQ,CACS,CAAC,EACd,CAAC,CAEd,CAAC,CAED,cAAe,CAAAH,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module"}