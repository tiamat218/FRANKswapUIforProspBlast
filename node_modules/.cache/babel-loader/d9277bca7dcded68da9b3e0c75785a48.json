{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Devrim\\\\Documents\\\\FRANKswapUIforProspBlast\\\\src\\\\views\\\\Predictions\\\\components\\\\RoundCard\\\\EnteredTag.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport { CheckmarkCircleIcon, CheckmarkCircleFillIcon, Tag, useTooltip } from '@pancakeswap/uikit';\nimport { useTranslation } from 'contexts/Localization';\nimport { formatBnbv2 } from '../../helpers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst StyledEnteredTag = styled(Tag)`\n  font-weight: bold;\n  text-transform: uppercase;\n  background: ${({\n  theme\n}) => theme.colors.background};\n`;\n_c = StyledEnteredTag;\n\nconst EnteredTag = ({\n  amount,\n  hasClaimed = false\n}) => {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  const {\n    targetRef,\n    tooltipVisible,\n    tooltip\n  } = useTooltip( /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      whiteSpace: 'nowrap'\n    },\n    children: `${formatBnbv2(amount)} BNB`\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this), {\n    placement: 'bottom'\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      ref: targetRef,\n      children: [/*#__PURE__*/_jsxDEV(StyledEnteredTag, {\n        variant: \"secondary\",\n        outline: !hasClaimed,\n        startIcon: hasClaimed ? /*#__PURE__*/_jsxDEV(CheckmarkCircleFillIcon, {\n          width: \"18px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 35\n        }, this) : /*#__PURE__*/_jsxDEV(CheckmarkCircleIcon, {\n          width: \"18px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 78\n        }, this),\n        children: hasClaimed ? t('Claimed') : t('Entered')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), ' ']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), ' ', tooltipVisible && tooltip]\n  }, void 0, true);\n};\n\n_s(EnteredTag, \"dT7/5xuQD+c5fIpoRLpehDsm8gY=\", false, function () {\n  return [useTranslation, useTooltip];\n});\n\n_c2 = EnteredTag;\nexport default EnteredTag;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"StyledEnteredTag\");\n$RefreshReg$(_c2, \"EnteredTag\");","map":{"version":3,"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/views/Predictions/components/RoundCard/EnteredTag.tsx"],"names":["React","styled","CheckmarkCircleIcon","CheckmarkCircleFillIcon","Tag","useTooltip","useTranslation","formatBnbv2","StyledEnteredTag","theme","colors","background","EnteredTag","amount","hasClaimed","t","targetRef","tooltipVisible","tooltip","whiteSpace","placement"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,mBAAT,EAA8BC,uBAA9B,EAAuDC,GAAvD,EAA4DC,UAA5D,QAA8E,oBAA9E;AACA,SAASC,cAAT,QAA+B,uBAA/B;AACA,SAASC,WAAT,QAA4B,eAA5B;;;AAOA,MAAMC,gBAAgB,GAAGP,MAAM,CAACG,GAAD,CAAM;AACrC;AACA;AACA,gBAAgB,CAAC;AAAEK,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,MAAN,CAAaC,UAAW;AACvD,CAJA;KAAMH,gB;;AAMN,MAAMI,UAAqC,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,UAAU,GAAG;AAAvB,CAAD,KAAoC;AAAA;;AAChF,QAAM;AAAEC,IAAAA;AAAF,MAAQT,cAAc,EAA5B;AACA,QAAM;AAAEU,IAAAA,SAAF;AAAaC,IAAAA,cAAb;AAA6BC,IAAAA;AAA7B,MAAyCb,UAAU,eACvD;AAAK,IAAA,KAAK,EAAE;AAAEc,MAAAA,UAAU,EAAE;AAAd,KAAZ;AAAA,cAAwC,GAAEZ,WAAW,CAACM,MAAD,CAAS;AAA9D;AAAA;AAAA;AAAA;AAAA,UADuD,EAEvD;AAAEO,IAAAA,SAAS,EAAE;AAAb,GAFuD,CAAzD;AAKA,sBACE;AAAA,4BACE;AAAM,MAAA,GAAG,EAAEJ,SAAX;AAAA,8BACE,QAAC,gBAAD;AACE,QAAA,OAAO,EAAC,WADV;AAEE,QAAA,OAAO,EAAE,CAACF,UAFZ;AAGE,QAAA,SAAS,EAAEA,UAAU,gBAAG,QAAC,uBAAD;AAAyB,UAAA,KAAK,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA,gBAAH,gBAA8C,QAAC,mBAAD;AAAqB,UAAA,KAAK,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,gBAHrE;AAAA,kBAKGA,UAAU,GAAGC,CAAC,CAAC,SAAD,CAAJ,GAAkBA,CAAC,CAAC,SAAD;AALhC;AAAA;AAAA;AAAA;AAAA,cADF,EAOsB,GAPtB;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EASU,GATV,EAUGE,cAAc,IAAIC,OAVrB;AAAA,kBADF;AAcD,CArBD;;GAAMN,U;UACUN,c,EACiCD,U;;;MAF3CO,U;AAuBN,eAAeA,UAAf","sourcesContent":["import React from 'react'\r\nimport { ethers } from 'ethers'\r\nimport styled from 'styled-components'\r\nimport { CheckmarkCircleIcon, CheckmarkCircleFillIcon, Tag, useTooltip } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { formatBnbv2 } from '../../helpers'\r\n\r\ninterface EnteredTagProps {\r\n  amount?: ethers.BigNumber\r\n  hasClaimed?: boolean\r\n}\r\n\r\nconst StyledEnteredTag = styled(Tag)`\r\n  font-weight: bold;\r\n  text-transform: uppercase;\r\n  background: ${({ theme }) => theme.colors.background};\r\n`\r\n\r\nconst EnteredTag: React.FC<EnteredTagProps> = ({ amount, hasClaimed = false }) => {\r\n  const { t } = useTranslation()\r\n  const { targetRef, tooltipVisible, tooltip } = useTooltip(\r\n    <div style={{ whiteSpace: 'nowrap' }}>{`${formatBnbv2(amount)} BNB`}</div>,\r\n    { placement: 'bottom' },\r\n  )\r\n\r\n  return (\r\n    <>\r\n      <span ref={targetRef}>\r\n        <StyledEnteredTag\r\n          variant=\"secondary\"\r\n          outline={!hasClaimed}\r\n          startIcon={hasClaimed ? <CheckmarkCircleFillIcon width=\"18px\" /> : <CheckmarkCircleIcon width=\"18px\" />}\r\n        >\r\n          {hasClaimed ? t('Claimed') : t('Entered')}\r\n        </StyledEnteredTag>{' '}\r\n      </span>{' '}\r\n      {tooltipVisible && tooltip}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default EnteredTag\r\n"]},"metadata":{},"sourceType":"module"}