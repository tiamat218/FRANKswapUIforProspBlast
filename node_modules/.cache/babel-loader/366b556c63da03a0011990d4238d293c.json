{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Devrim\\\\Documents\\\\swapUIforProspBlast\\\\src\\\\views\\\\AddLiquidity\\\\index.tsx\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useState } from 'react';\nimport { BigNumber } from '@ethersproject/bignumber';\nimport { currencyEquals, ETHER, WETH } from '@pancakeswap/sdk';\nimport { Button, Text, Flex, AddIcon, CardBody, Message, useModal } from '@pancakeswap/uikit';\nimport { useIsTransactionUnsupported } from 'hooks/Trades';\nimport { useTranslation } from 'contexts/Localization';\nimport UnsupportedCurrencyFooter from 'components/UnsupportedCurrencyFooter';\nimport useActiveWeb3React from 'hooks/useActiveWeb3React';\nimport { LightCard } from '../../components/Card';\nimport { AutoColumn, ColumnCenter } from '../../components/Layout/Column';\nimport TransactionConfirmationModal, { ConfirmationModalContent } from '../../components/TransactionConfirmationModal';\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel';\nimport { DoubleCurrencyLogo } from '../../components/Logo';\nimport { AppHeader, AppBody } from '../../components/App';\nimport { MinimalPositionCard } from '../../components/PositionCard';\nimport Row, { RowBetween } from '../../components/Layout/Row';\nimport ConnectWalletButton from '../../components/ConnectWalletButton';\nimport { ROUTER_ADDRESS } from '../../config/constants';\nimport { PairState } from '../../hooks/usePairs';\nimport { useCurrency } from '../../hooks/Tokens';\nimport { ApprovalState, useApproveCallback } from '../../hooks/useApproveCallback';\nimport useTransactionDeadline from '../../hooks/useTransactionDeadline';\nimport { Field } from '../../state/mint/actions';\nimport { useDerivedMintInfo, useMintActionHandlers, useMintState } from '../../state/mint/hooks';\nimport { useTransactionAdder } from '../../state/transactions/hooks';\nimport { useIsExpertMode, useUserSlippageTolerance } from '../../state/user/hooks';\nimport { calculateGasMargin, calculateSlippageAmount, getRouterContract } from '../../utils';\nimport { maxAmountSpend } from '../../utils/maxAmountSpend';\nimport { wrappedCurrency } from '../../utils/wrappedCurrency';\nimport Dots from '../../components/Loader/Dots';\nimport ConfirmAddModalBottom from './ConfirmAddModalBottom';\nimport { currencyId } from '../../utils/currencyId';\nimport PoolPriceBar from './PoolPriceBar';\nimport Page from '../Page';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function AddLiquidity({\n  match: {\n    params: {\n      currencyIdA,\n      currencyIdB\n    }\n  },\n  history\n}) {\n  _s();\n  var _parsedAmounts$depend, _parsedAmounts$depend2, _parsedAmounts$Field$3, _parsedAmounts$Field$4, _currencies$Field$CUR7, _currencies$Field$CUR8, _parsedAmounts$Field$5, _parsedAmounts$Field$6, _currencies$Field$CUR9, _currencies$Field$CUR10, _currencies$Field$CUR11, _currencies$Field$CUR12, _currencies$Field$CUR13, _currencies$Field$CUR14;\n  const {\n    account,\n    chainId,\n    library\n  } = useActiveWeb3React();\n  const {\n    t\n  } = useTranslation();\n  const currencyA = useCurrency(currencyIdA);\n  const currencyB = useCurrency(currencyIdB);\n  const oneCurrencyIsWETH = Boolean(chainId && (currencyA && currencyEquals(currencyA, WETH[chainId]) || currencyB && currencyEquals(currencyB, WETH[chainId])));\n  const expertMode = useIsExpertMode();\n\n  // mint state\n  const {\n    independentField,\n    typedValue,\n    otherTypedValue\n  } = useMintState();\n  const {\n    dependentField,\n    currencies,\n    pair,\n    pairState,\n    currencyBalances,\n    parsedAmounts,\n    price,\n    noLiquidity,\n    liquidityMinted,\n    poolTokenPercentage,\n    error\n  } = useDerivedMintInfo(currencyA !== null && currencyA !== void 0 ? currencyA : undefined, currencyB !== null && currencyB !== void 0 ? currencyB : undefined);\n  const {\n    onFieldAInput,\n    onFieldBInput\n  } = useMintActionHandlers(noLiquidity);\n  const isValid = !error;\n\n  // modal and loading\n  const [attemptingTxn, setAttemptingTxn] = useState(false); // clicked confirm\n\n  // txn values\n  const deadline = useTransactionDeadline(); // custom from users settings\n  const [allowedSlippage] = useUserSlippageTolerance(); // custom from users\n  const [txHash, setTxHash] = useState('');\n\n  // get formatted amounts\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: noLiquidity ? otherTypedValue : (_parsedAmounts$depend = (_parsedAmounts$depend2 = parsedAmounts[dependentField]) === null || _parsedAmounts$depend2 === void 0 ? void 0 : _parsedAmounts$depend2.toSignificant(6)) !== null && _parsedAmounts$depend !== void 0 ? _parsedAmounts$depend : ''\n  };\n\n  // get the max amounts user can add\n  const maxAmounts = [Field.CURRENCY_A, Field.CURRENCY_B].reduce((accumulator, field) => {\n    return {\n      ...accumulator,\n      [field]: maxAmountSpend(currencyBalances[field])\n    };\n  }, {});\n  const atMaxAmounts = [Field.CURRENCY_A, Field.CURRENCY_B].reduce((accumulator, field) => {\n    var _maxAmounts$field, _parsedAmounts$field;\n    return {\n      ...accumulator,\n      [field]: (_maxAmounts$field = maxAmounts[field]) === null || _maxAmounts$field === void 0 ? void 0 : _maxAmounts$field.equalTo((_parsedAmounts$field = parsedAmounts[field]) !== null && _parsedAmounts$field !== void 0 ? _parsedAmounts$field : '0')\n    };\n  }, {});\n\n  // check whether the user has approved the router on the tokens\n  const [approvalA, approveACallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_A], ROUTER_ADDRESS);\n  const [approvalB, approveBCallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_B], ROUTER_ADDRESS);\n  const addTransaction = useTransactionAdder();\n  async function onAdd() {\n    if (!chainId || !library || !account) return;\n    const router = getRouterContract(chainId, library, account);\n    const {\n      [Field.CURRENCY_A]: parsedAmountA,\n      [Field.CURRENCY_B]: parsedAmountB\n    } = parsedAmounts;\n    if (!parsedAmountA || !parsedAmountB || !currencyA || !currencyB || !deadline) {\n      return;\n    }\n    const amountsMin = {\n      [Field.CURRENCY_A]: calculateSlippageAmount(parsedAmountA, noLiquidity ? 0 : allowedSlippage)[0],\n      [Field.CURRENCY_B]: calculateSlippageAmount(parsedAmountB, noLiquidity ? 0 : allowedSlippage)[0]\n    };\n    let estimate;\n    let method;\n    let args;\n    let value;\n    if (currencyA === ETHER || currencyB === ETHER) {\n      var _wrappedCurrency$addr, _wrappedCurrency;\n      const tokenBIsETH = currencyB === ETHER;\n      estimate = router.estimateGas.addLiquidityETH;\n      method = router.addLiquidityETH;\n      args = [(_wrappedCurrency$addr = (_wrappedCurrency = wrappedCurrency(tokenBIsETH ? currencyA : currencyB, chainId)) === null || _wrappedCurrency === void 0 ? void 0 : _wrappedCurrency.address) !== null && _wrappedCurrency$addr !== void 0 ? _wrappedCurrency$addr : '',\n      // token\n      (tokenBIsETH ? parsedAmountA : parsedAmountB).raw.toString(),\n      // token desired\n      amountsMin[tokenBIsETH ? Field.CURRENCY_A : Field.CURRENCY_B].toString(),\n      // token min\n      amountsMin[tokenBIsETH ? Field.CURRENCY_B : Field.CURRENCY_A].toString(),\n      // eth min\n      account, deadline.toHexString()];\n      value = BigNumber.from((tokenBIsETH ? parsedAmountB : parsedAmountA).raw.toString());\n    } else {\n      var _wrappedCurrency$addr2, _wrappedCurrency2, _wrappedCurrency$addr3, _wrappedCurrency3;\n      estimate = router.estimateGas.addLiquidity;\n      method = router.addLiquidity;\n      args = [(_wrappedCurrency$addr2 = (_wrappedCurrency2 = wrappedCurrency(currencyA, chainId)) === null || _wrappedCurrency2 === void 0 ? void 0 : _wrappedCurrency2.address) !== null && _wrappedCurrency$addr2 !== void 0 ? _wrappedCurrency$addr2 : '', (_wrappedCurrency$addr3 = (_wrappedCurrency3 = wrappedCurrency(currencyB, chainId)) === null || _wrappedCurrency3 === void 0 ? void 0 : _wrappedCurrency3.address) !== null && _wrappedCurrency$addr3 !== void 0 ? _wrappedCurrency$addr3 : '', parsedAmountA.raw.toString(), parsedAmountB.raw.toString(), amountsMin[Field.CURRENCY_A].toString(), amountsMin[Field.CURRENCY_B].toString(), account, deadline.toHexString()];\n      value = null;\n    }\n    setAttemptingTxn(true);\n    await estimate(...args, value ? {\n      value\n    } : {}).then(estimatedGasLimit => method(...args, {\n      ...(value ? {\n        value\n      } : {}),\n      gasLimit: calculateGasMargin(estimatedGasLimit)\n    }).then(response => {\n      var _parsedAmounts$Field$, _currencies$Field$CUR, _parsedAmounts$Field$2, _currencies$Field$CUR2;\n      setAttemptingTxn(false);\n      addTransaction(response, {\n        summary: `Add ${(_parsedAmounts$Field$ = parsedAmounts[Field.CURRENCY_A]) === null || _parsedAmounts$Field$ === void 0 ? void 0 : _parsedAmounts$Field$.toSignificant(3)} ${(_currencies$Field$CUR = currencies[Field.CURRENCY_A]) === null || _currencies$Field$CUR === void 0 ? void 0 : _currencies$Field$CUR.symbol} and ${(_parsedAmounts$Field$2 = parsedAmounts[Field.CURRENCY_B]) === null || _parsedAmounts$Field$2 === void 0 ? void 0 : _parsedAmounts$Field$2.toSignificant(3)} ${(_currencies$Field$CUR2 = currencies[Field.CURRENCY_B]) === null || _currencies$Field$CUR2 === void 0 ? void 0 : _currencies$Field$CUR2.symbol}`\n      });\n      setTxHash(response.hash);\n    })).catch(err => {\n      setAttemptingTxn(false);\n      // we only care if the error is something _other_ than the user rejected the tx\n      if ((err === null || err === void 0 ? void 0 : err.code) !== 4001) {\n        console.error(err);\n      }\n    });\n  }\n  const modalHeader = () => {\n    var _currencies$Field$CUR3, _currencies$Field$CUR4, _currencies$Field$CUR5, _currencies$Field$CUR6;\n    return noLiquidity ? /*#__PURE__*/_jsxDEV(Flex, {\n      alignItems: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        fontSize: \"48px\",\n        marginRight: \"10px\",\n        children: `${(_currencies$Field$CUR3 = currencies[Field.CURRENCY_A]) === null || _currencies$Field$CUR3 === void 0 ? void 0 : _currencies$Field$CUR3.symbol}/${(_currencies$Field$CUR4 = currencies[Field.CURRENCY_B]) === null || _currencies$Field$CUR4 === void 0 ? void 0 : _currencies$Field$CUR4.symbol}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DoubleCurrencyLogo, {\n        currency0: currencies[Field.CURRENCY_A],\n        currency1: currencies[Field.CURRENCY_B],\n        size: 30\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(AutoColumn, {\n      children: [/*#__PURE__*/_jsxDEV(Flex, {\n        alignItems: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"48px\",\n          marginRight: \"10px\",\n          children: liquidityMinted === null || liquidityMinted === void 0 ? void 0 : liquidityMinted.toSignificant(6)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DoubleCurrencyLogo, {\n          currency0: currencies[Field.CURRENCY_A],\n          currency1: currencies[Field.CURRENCY_B],\n          size: 30\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"24px\",\n          children: `${(_currencies$Field$CUR5 = currencies[Field.CURRENCY_A]) === null || _currencies$Field$CUR5 === void 0 ? void 0 : _currencies$Field$CUR5.symbol}/${(_currencies$Field$CUR6 = currencies[Field.CURRENCY_B]) === null || _currencies$Field$CUR6 === void 0 ? void 0 : _currencies$Field$CUR6.symbol} Pool Tokens`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        small: true,\n        textAlign: \"left\",\n        my: \"24px\",\n        children: t('Output is estimated. If the price changes by more than %slippage%% your transaction will revert.', {\n          slippage: allowedSlippage / 100\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this);\n  };\n  const modalBottom = () => {\n    return /*#__PURE__*/_jsxDEV(ConfirmAddModalBottom, {\n      price: price,\n      currencies: currencies,\n      parsedAmounts: parsedAmounts,\n      noLiquidity: noLiquidity,\n      onAdd: onAdd,\n      poolTokenPercentage: poolTokenPercentage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }, this);\n  };\n  const pendingText = t('Supplying %amountA% %symbolA% and %amountB% %symbolB%', {\n    amountA: (_parsedAmounts$Field$3 = (_parsedAmounts$Field$4 = parsedAmounts[Field.CURRENCY_A]) === null || _parsedAmounts$Field$4 === void 0 ? void 0 : _parsedAmounts$Field$4.toSignificant(6)) !== null && _parsedAmounts$Field$3 !== void 0 ? _parsedAmounts$Field$3 : '',\n    symbolA: (_currencies$Field$CUR7 = (_currencies$Field$CUR8 = currencies[Field.CURRENCY_A]) === null || _currencies$Field$CUR8 === void 0 ? void 0 : _currencies$Field$CUR8.symbol) !== null && _currencies$Field$CUR7 !== void 0 ? _currencies$Field$CUR7 : '',\n    amountB: (_parsedAmounts$Field$5 = (_parsedAmounts$Field$6 = parsedAmounts[Field.CURRENCY_B]) === null || _parsedAmounts$Field$6 === void 0 ? void 0 : _parsedAmounts$Field$6.toSignificant(6)) !== null && _parsedAmounts$Field$5 !== void 0 ? _parsedAmounts$Field$5 : '',\n    symbolB: (_currencies$Field$CUR9 = (_currencies$Field$CUR10 = currencies[Field.CURRENCY_B]) === null || _currencies$Field$CUR10 === void 0 ? void 0 : _currencies$Field$CUR10.symbol) !== null && _currencies$Field$CUR9 !== void 0 ? _currencies$Field$CUR9 : ''\n  });\n  const handleCurrencyASelect = useCallback(currencyA_ => {\n    const newCurrencyIdA = currencyId(currencyA_);\n    if (newCurrencyIdA === currencyIdB) {\n      history.push(`/add/${currencyIdB}/${currencyIdA}`);\n    } else {\n      history.push(`/add/${newCurrencyIdA}/${currencyIdB}`);\n    }\n  }, [currencyIdB, history, currencyIdA]);\n  const handleCurrencyBSelect = useCallback(currencyB_ => {\n    const newCurrencyIdB = currencyId(currencyB_);\n    if (currencyIdA === newCurrencyIdB) {\n      if (currencyIdB) {\n        history.push(`/add/${currencyIdB}/${newCurrencyIdB}`);\n      } else {\n        history.push(`/add/${newCurrencyIdB}`);\n      }\n    } else {\n      history.push(`/add/${currencyIdA || 'BNB'}/${newCurrencyIdB}`);\n    }\n  }, [currencyIdA, history, currencyIdB]);\n  const handleDismissConfirmation = useCallback(() => {\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onFieldAInput('');\n    }\n    setTxHash('');\n  }, [onFieldAInput, txHash]);\n  const addIsUnsupported = useIsTransactionUnsupported(currencies === null || currencies === void 0 ? void 0 : currencies.CURRENCY_A, currencies === null || currencies === void 0 ? void 0 : currencies.CURRENCY_B);\n  const [onPresentAddLiquidityModal] = useModal( /*#__PURE__*/_jsxDEV(TransactionConfirmationModal, {\n    title: noLiquidity ? t('You are creating a pool') : t('You will receive'),\n    customOnDismiss: handleDismissConfirmation,\n    attemptingTxn: attemptingTxn,\n    hash: txHash,\n    content: () => /*#__PURE__*/_jsxDEV(ConfirmationModalContent, {\n      topContent: modalHeader,\n      bottomContent: modalBottom\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 22\n    }, this),\n    pendingText: pendingText,\n    currencyToAdd: pair === null || pair === void 0 ? void 0 : pair.liquidityToken\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 291,\n    columnNumber: 5\n  }, this), true, true, 'addLiquidityModal');\n  return /*#__PURE__*/_jsxDEV(Page, {\n    children: [/*#__PURE__*/_jsxDEV(AppBody, {\n      children: [/*#__PURE__*/_jsxDEV(AppHeader, {\n        title: t('Add Liquidity'),\n        subtitle: t('Add liquidity to receive LP tokens'),\n        helper: t('Liquidity providers earn a 0.17% trading fee on all trades made for that token pair, proportional to their share of the liquidity pool.'),\n        backTo: \"/pool\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n        children: /*#__PURE__*/_jsxDEV(AutoColumn, {\n          gap: \"20px\",\n          children: [noLiquidity && /*#__PURE__*/_jsxDEV(ColumnCenter, {\n            children: /*#__PURE__*/_jsxDEV(Message, {\n              variant: \"warning\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(Text, {\n                  bold: true,\n                  mb: \"8px\",\n                  children: t('You are the first liquidity provider.')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 322,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Text, {\n                  mb: \"8px\",\n                  children: t('The ratio of tokens you add will set the price of this pool.')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 325,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Text, {\n                  children: t('Once you are happy with the rate click supply to review.')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 326,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 321,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(CurrencyInputPanel, {\n            value: formattedAmounts[Field.CURRENCY_A],\n            onUserInput: onFieldAInput,\n            onMax: () => {\n              var _maxAmounts$Field$CUR, _maxAmounts$Field$CUR2;\n              onFieldAInput((_maxAmounts$Field$CUR = (_maxAmounts$Field$CUR2 = maxAmounts[Field.CURRENCY_A]) === null || _maxAmounts$Field$CUR2 === void 0 ? void 0 : _maxAmounts$Field$CUR2.toExact()) !== null && _maxAmounts$Field$CUR !== void 0 ? _maxAmounts$Field$CUR : '');\n            },\n            onCurrencySelect: handleCurrencyASelect,\n            showMaxButton: !atMaxAmounts[Field.CURRENCY_A],\n            currency: currencies[Field.CURRENCY_A],\n            id: \"add-liquidity-input-tokena\",\n            showCommonBases: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ColumnCenter, {\n            children: /*#__PURE__*/_jsxDEV(AddIcon, {\n              width: \"16px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CurrencyInputPanel, {\n            value: formattedAmounts[Field.CURRENCY_B],\n            onUserInput: onFieldBInput,\n            onCurrencySelect: handleCurrencyBSelect,\n            onMax: () => {\n              var _maxAmounts$Field$CUR3, _maxAmounts$Field$CUR4;\n              onFieldBInput((_maxAmounts$Field$CUR3 = (_maxAmounts$Field$CUR4 = maxAmounts[Field.CURRENCY_B]) === null || _maxAmounts$Field$CUR4 === void 0 ? void 0 : _maxAmounts$Field$CUR4.toExact()) !== null && _maxAmounts$Field$CUR3 !== void 0 ? _maxAmounts$Field$CUR3 : '');\n            },\n            showMaxButton: !atMaxAmounts[Field.CURRENCY_B],\n            currency: currencies[Field.CURRENCY_B],\n            id: \"add-liquidity-input-tokenb\",\n            showCommonBases: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 13\n          }, this), currencies[Field.CURRENCY_A] && currencies[Field.CURRENCY_B] && pairState !== PairState.INVALID && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(LightCard, {\n              padding: \"0px\",\n              borderRadius: \"20px\",\n              children: [/*#__PURE__*/_jsxDEV(RowBetween, {\n                padding: \"1rem\",\n                children: /*#__PURE__*/_jsxDEV(Text, {\n                  fontSize: \"14px\",\n                  children: noLiquidity ? t('Initial prices and pool share') : t('Prices and pool share')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 362,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 361,\n                columnNumber: 19\n              }, this), ' ', /*#__PURE__*/_jsxDEV(LightCard, {\n                padding: \"1rem\",\n                borderRadius: \"20px\",\n                children: /*#__PURE__*/_jsxDEV(PoolPriceBar, {\n                  currencies: currencies,\n                  poolTokenPercentage: poolTokenPercentage,\n                  noLiquidity: noLiquidity,\n                  price: price\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 367,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 366,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 360,\n              columnNumber: 17\n            }, this)\n          }, void 0, false), addIsUnsupported ? /*#__PURE__*/_jsxDEV(Button, {\n            disabled: true,\n            mb: \"4px\",\n            children: t('Unsupported Asset')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 15\n          }, this) : !account ? /*#__PURE__*/_jsxDEV(ConnectWalletButton, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 383,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(AutoColumn, {\n            gap: \"md\",\n            children: [(approvalA === ApprovalState.NOT_APPROVED || approvalA === ApprovalState.PENDING || approvalB === ApprovalState.NOT_APPROVED || approvalB === ApprovalState.PENDING) && isValid && /*#__PURE__*/_jsxDEV(RowBetween, {\n              children: [approvalA !== ApprovalState.APPROVED && /*#__PURE__*/_jsxDEV(Button, {\n                onClick: approveACallback,\n                disabled: approvalA === ApprovalState.PENDING,\n                width: approvalB !== ApprovalState.APPROVED ? '48%' : '100%',\n                children: approvalA === ApprovalState.PENDING ? /*#__PURE__*/_jsxDEV(Dots, {\n                  children: t('Enabling %asset%', {\n                    asset: (_currencies$Field$CUR11 = currencies[Field.CURRENCY_A]) === null || _currencies$Field$CUR11 === void 0 ? void 0 : _currencies$Field$CUR11.symbol\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 399,\n                  columnNumber: 29\n                }, this) : t('Enable %asset%', {\n                  asset: (_currencies$Field$CUR12 = currencies[Field.CURRENCY_A]) === null || _currencies$Field$CUR12 === void 0 ? void 0 : _currencies$Field$CUR12.symbol\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 393,\n                columnNumber: 25\n              }, this), approvalB !== ApprovalState.APPROVED && /*#__PURE__*/_jsxDEV(Button, {\n                onClick: approveBCallback,\n                disabled: approvalB === ApprovalState.PENDING,\n                width: approvalA !== ApprovalState.APPROVED ? '48%' : '100%',\n                children: approvalB === ApprovalState.PENDING ? /*#__PURE__*/_jsxDEV(Dots, {\n                  children: t('Enabling %asset%', {\n                    asset: (_currencies$Field$CUR13 = currencies[Field.CURRENCY_B]) === null || _currencies$Field$CUR13 === void 0 ? void 0 : _currencies$Field$CUR13.symbol\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 412,\n                  columnNumber: 29\n                }, this) : t('Enable %asset%', {\n                  asset: (_currencies$Field$CUR14 = currencies[Field.CURRENCY_B]) === null || _currencies$Field$CUR14 === void 0 ? void 0 : _currencies$Field$CUR14.symbol\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 406,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 391,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: !isValid && !!parsedAmounts[Field.CURRENCY_A] && !!parsedAmounts[Field.CURRENCY_B] ? 'danger' : 'primary',\n              onClick: () => {\n                if (expertMode) {\n                  onAdd();\n                } else {\n                  onPresentAddLiquidityModal();\n                }\n              },\n              disabled: !isValid || approvalA !== ApprovalState.APPROVED || approvalB !== ApprovalState.APPROVED,\n              children: error !== null && error !== void 0 ? error : t('Supply')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 420,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 7\n    }, this), !addIsUnsupported ? pair && !noLiquidity && pairState !== PairState.INVALID ? /*#__PURE__*/_jsxDEV(AutoColumn, {\n      style: {\n        minWidth: '20rem',\n        width: '100%',\n        maxWidth: '400px',\n        marginTop: '1rem'\n      },\n      children: /*#__PURE__*/_jsxDEV(MinimalPositionCard, {\n        showUnwrapped: oneCurrencyIsWETH,\n        pair: pair\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 11\n    }, this) : null : /*#__PURE__*/_jsxDEV(UnsupportedCurrencyFooter, {\n      currencies: [currencies.CURRENCY_A, currencies.CURRENCY_B]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 449,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 306,\n    columnNumber: 5\n  }, this);\n}\n_s(AddLiquidity, \"3wP3NXxarL7wM3VTSu+1t0I4pCQ=\", false, function () {\n  return [useActiveWeb3React, useTranslation, useCurrency, useCurrency, useIsExpertMode, useMintState, useDerivedMintInfo, useMintActionHandlers, useTransactionDeadline, useUserSlippageTolerance, useApproveCallback, useApproveCallback, useTransactionAdder, useIsTransactionUnsupported, useModal];\n});\n_c = AddLiquidity;\nvar _c;\n$RefreshReg$(_c, \"AddLiquidity\");","map":{"version":3,"names":["React","useCallback","useState","BigNumber","currencyEquals","ETHER","WETH","Button","Text","Flex","AddIcon","CardBody","Message","useModal","useIsTransactionUnsupported","useTranslation","UnsupportedCurrencyFooter","useActiveWeb3React","LightCard","AutoColumn","ColumnCenter","TransactionConfirmationModal","ConfirmationModalContent","CurrencyInputPanel","DoubleCurrencyLogo","AppHeader","AppBody","MinimalPositionCard","Row","RowBetween","ConnectWalletButton","ROUTER_ADDRESS","PairState","useCurrency","ApprovalState","useApproveCallback","useTransactionDeadline","Field","useDerivedMintInfo","useMintActionHandlers","useMintState","useTransactionAdder","useIsExpertMode","useUserSlippageTolerance","calculateGasMargin","calculateSlippageAmount","getRouterContract","maxAmountSpend","wrappedCurrency","Dots","ConfirmAddModalBottom","currencyId","PoolPriceBar","Page","jsxDEV","_jsxDEV","Fragment","_Fragment","AddLiquidity","match","params","currencyIdA","currencyIdB","history","_s","_parsedAmounts$depend","_parsedAmounts$depend2","_parsedAmounts$Field$3","_parsedAmounts$Field$4","_currencies$Field$CUR7","_currencies$Field$CUR8","_parsedAmounts$Field$5","_parsedAmounts$Field$6","_currencies$Field$CUR9","_currencies$Field$CUR10","_currencies$Field$CUR11","_currencies$Field$CUR12","_currencies$Field$CUR13","_currencies$Field$CUR14","account","chainId","library","t","currencyA","currencyB","oneCurrencyIsWETH","Boolean","expertMode","independentField","typedValue","otherTypedValue","dependentField","currencies","pair","pairState","currencyBalances","parsedAmounts","price","noLiquidity","liquidityMinted","poolTokenPercentage","error","undefined","onFieldAInput","onFieldBInput","isValid","attemptingTxn","setAttemptingTxn","deadline","allowedSlippage","txHash","setTxHash","formattedAmounts","toSignificant","maxAmounts","CURRENCY_A","CURRENCY_B","reduce","accumulator","field","atMaxAmounts","_maxAmounts$field","_parsedAmounts$field","equalTo","approvalA","approveACallback","approvalB","approveBCallback","addTransaction","onAdd","router","parsedAmountA","parsedAmountB","amountsMin","estimate","method","args","value","_wrappedCurrency$addr","_wrappedCurrency","tokenBIsETH","estimateGas","addLiquidityETH","address","raw","toString","toHexString","from","_wrappedCurrency$addr2","_wrappedCurrency2","_wrappedCurrency$addr3","_wrappedCurrency3","addLiquidity","then","estimatedGasLimit","gasLimit","response","_parsedAmounts$Field$","_currencies$Field$CUR","_parsedAmounts$Field$2","_currencies$Field$CUR2","summary","symbol","hash","catch","err","code","console","modalHeader","_currencies$Field$CUR3","_currencies$Field$CUR4","_currencies$Field$CUR5","_currencies$Field$CUR6","alignItems","children","fontSize","marginRight","fileName","_jsxFileName","lineNumber","columnNumber","currency0","currency1","size","small","textAlign","my","slippage","modalBottom","pendingText","amountA","symbolA","amountB","symbolB","handleCurrencyASelect","currencyA_","newCurrencyIdA","push","handleCurrencyBSelect","currencyB_","newCurrencyIdB","handleDismissConfirmation","addIsUnsupported","onPresentAddLiquidityModal","title","customOnDismiss","content","topContent","bottomContent","currencyToAdd","liquidityToken","subtitle","helper","backTo","gap","variant","bold","mb","onUserInput","onMax","_maxAmounts$Field$CUR","_maxAmounts$Field$CUR2","toExact","onCurrencySelect","showMaxButton","currency","id","showCommonBases","width","_maxAmounts$Field$CUR3","_maxAmounts$Field$CUR4","INVALID","padding","borderRadius","disabled","NOT_APPROVED","PENDING","APPROVED","onClick","asset","style","minWidth","maxWidth","marginTop","showUnwrapped","_c","$RefreshReg$"],"sources":["C:/Users/Devrim/Documents/swapUIforProspBlast/src/views/AddLiquidity/index.tsx"],"sourcesContent":["import React, { useCallback, useState } from 'react'\r\nimport { BigNumber } from '@ethersproject/bignumber'\r\nimport { TransactionResponse } from '@ethersproject/providers'\r\nimport { Currency, currencyEquals, ETHER, TokenAmount, WETH } from '@pancakeswap/sdk'\r\nimport { Button, Text, Flex, AddIcon, CardBody, Message, useModal } from '@pancakeswap/uikit'\r\nimport { RouteComponentProps } from 'react-router-dom'\r\nimport { useIsTransactionUnsupported } from 'hooks/Trades'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport UnsupportedCurrencyFooter from 'components/UnsupportedCurrencyFooter'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport { LightCard } from '../../components/Card'\r\nimport { AutoColumn, ColumnCenter } from '../../components/Layout/Column'\r\nimport TransactionConfirmationModal, { ConfirmationModalContent } from '../../components/TransactionConfirmationModal'\r\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel'\r\nimport { DoubleCurrencyLogo } from '../../components/Logo'\r\nimport { AppHeader, AppBody } from '../../components/App'\r\nimport { MinimalPositionCard } from '../../components/PositionCard'\r\nimport Row, { RowBetween } from '../../components/Layout/Row'\r\nimport ConnectWalletButton from '../../components/ConnectWalletButton'\r\n\r\nimport { ROUTER_ADDRESS } from '../../config/constants'\r\nimport { PairState } from '../../hooks/usePairs'\r\nimport { useCurrency } from '../../hooks/Tokens'\r\nimport { ApprovalState, useApproveCallback } from '../../hooks/useApproveCallback'\r\nimport useTransactionDeadline from '../../hooks/useTransactionDeadline'\r\nimport { Field } from '../../state/mint/actions'\r\nimport { useDerivedMintInfo, useMintActionHandlers, useMintState } from '../../state/mint/hooks'\r\n\r\nimport { useTransactionAdder } from '../../state/transactions/hooks'\r\nimport { useIsExpertMode, useUserSlippageTolerance } from '../../state/user/hooks'\r\nimport { calculateGasMargin, calculateSlippageAmount, getRouterContract } from '../../utils'\r\nimport { maxAmountSpend } from '../../utils/maxAmountSpend'\r\nimport { wrappedCurrency } from '../../utils/wrappedCurrency'\r\nimport Dots from '../../components/Loader/Dots'\r\nimport ConfirmAddModalBottom from './ConfirmAddModalBottom'\r\nimport { currencyId } from '../../utils/currencyId'\r\nimport PoolPriceBar from './PoolPriceBar'\r\nimport Page from '../Page'\r\n\r\nexport default function AddLiquidity({\r\n  match: {\r\n    params: { currencyIdA, currencyIdB },\r\n  },\r\n  history,\r\n}: RouteComponentProps<{ currencyIdA?: string; currencyIdB?: string }>) {\r\n  const { account, chainId, library } = useActiveWeb3React()\r\n  const { t } = useTranslation()\r\n\r\n  const currencyA = useCurrency(currencyIdA)\r\n  const currencyB = useCurrency(currencyIdB)\r\n\r\n  const oneCurrencyIsWETH = Boolean(\r\n    chainId &&\r\n      ((currencyA && currencyEquals(currencyA, WETH[chainId])) ||\r\n        (currencyB && currencyEquals(currencyB, WETH[chainId]))),\r\n  )\r\n\r\n  const expertMode = useIsExpertMode()\r\n\r\n  // mint state\r\n  const { independentField, typedValue, otherTypedValue } = useMintState()\r\n  const {\r\n    dependentField,\r\n    currencies,\r\n    pair,\r\n    pairState,\r\n    currencyBalances,\r\n    parsedAmounts,\r\n    price,\r\n    noLiquidity,\r\n    liquidityMinted,\r\n    poolTokenPercentage,\r\n    error,\r\n  } = useDerivedMintInfo(currencyA ?? undefined, currencyB ?? undefined)\r\n\r\n  const { onFieldAInput, onFieldBInput } = useMintActionHandlers(noLiquidity)\r\n\r\n  const isValid = !error\r\n\r\n  // modal and loading\r\n  const [attemptingTxn, setAttemptingTxn] = useState<boolean>(false) // clicked confirm\r\n\r\n  // txn values\r\n  const deadline = useTransactionDeadline() // custom from users settings\r\n  const [allowedSlippage] = useUserSlippageTolerance() // custom from users\r\n  const [txHash, setTxHash] = useState<string>('')\r\n\r\n  // get formatted amounts\r\n  const formattedAmounts = {\r\n    [independentField]: typedValue,\r\n    [dependentField]: noLiquidity ? otherTypedValue : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\r\n  }\r\n\r\n  // get the max amounts user can add\r\n  const maxAmounts: { [field in Field]?: TokenAmount } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\r\n    (accumulator, field) => {\r\n      return {\r\n        ...accumulator,\r\n        [field]: maxAmountSpend(currencyBalances[field]),\r\n      }\r\n    },\r\n    {},\r\n  )\r\n\r\n  const atMaxAmounts: { [field in Field]?: TokenAmount } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\r\n    (accumulator, field) => {\r\n      return {\r\n        ...accumulator,\r\n        [field]: maxAmounts[field]?.equalTo(parsedAmounts[field] ?? '0'),\r\n      }\r\n    },\r\n    {},\r\n  )\r\n\r\n  // check whether the user has approved the router on the tokens\r\n  const [approvalA, approveACallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_A], ROUTER_ADDRESS)\r\n  const [approvalB, approveBCallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_B], ROUTER_ADDRESS)\r\n\r\n  const addTransaction = useTransactionAdder()\r\n\r\n  async function onAdd() {\r\n    if (!chainId || !library || !account) return\r\n    const router = getRouterContract(chainId, library, account)\r\n\r\n    const { [Field.CURRENCY_A]: parsedAmountA, [Field.CURRENCY_B]: parsedAmountB } = parsedAmounts\r\n    if (!parsedAmountA || !parsedAmountB || !currencyA || !currencyB || !deadline) {\r\n      return\r\n    }\r\n\r\n    const amountsMin = {\r\n      [Field.CURRENCY_A]: calculateSlippageAmount(parsedAmountA, noLiquidity ? 0 : allowedSlippage)[0],\r\n      [Field.CURRENCY_B]: calculateSlippageAmount(parsedAmountB, noLiquidity ? 0 : allowedSlippage)[0],\r\n    }\r\n\r\n    let estimate\r\n    let method: (...args: any) => Promise<TransactionResponse>\r\n    let args: Array<string | string[] | number>\r\n    let value: BigNumber | null\r\n    if (currencyA === ETHER || currencyB === ETHER) {\r\n      const tokenBIsETH = currencyB === ETHER\r\n      estimate = router.estimateGas.addLiquidityETH\r\n      method = router.addLiquidityETH\r\n      args = [\r\n        wrappedCurrency(tokenBIsETH ? currencyA : currencyB, chainId)?.address ?? '', // token\r\n        (tokenBIsETH ? parsedAmountA : parsedAmountB).raw.toString(), // token desired\r\n        amountsMin[tokenBIsETH ? Field.CURRENCY_A : Field.CURRENCY_B].toString(), // token min\r\n        amountsMin[tokenBIsETH ? Field.CURRENCY_B : Field.CURRENCY_A].toString(), // eth min\r\n        account,\r\n        deadline.toHexString(),\r\n      ]\r\n      value = BigNumber.from((tokenBIsETH ? parsedAmountB : parsedAmountA).raw.toString())\r\n    } else {\r\n      estimate = router.estimateGas.addLiquidity\r\n      method = router.addLiquidity\r\n      args = [\r\n        wrappedCurrency(currencyA, chainId)?.address ?? '',\r\n        wrappedCurrency(currencyB, chainId)?.address ?? '',\r\n        parsedAmountA.raw.toString(),\r\n        parsedAmountB.raw.toString(),\r\n        amountsMin[Field.CURRENCY_A].toString(),\r\n        amountsMin[Field.CURRENCY_B].toString(),\r\n        account,\r\n        deadline.toHexString(),\r\n      ]\r\n      value = null\r\n    }\r\n\r\n    setAttemptingTxn(true)\r\n    await estimate(...args, value ? { value } : {})\r\n      .then((estimatedGasLimit) =>\r\n        method(...args, {\r\n          ...(value ? { value } : {}),\r\n          gasLimit: calculateGasMargin(estimatedGasLimit),\r\n        }).then((response) => {\r\n          setAttemptingTxn(false)\r\n\r\n          addTransaction(response, {\r\n            summary: `Add ${parsedAmounts[Field.CURRENCY_A]?.toSignificant(3)} ${\r\n              currencies[Field.CURRENCY_A]?.symbol\r\n            } and ${parsedAmounts[Field.CURRENCY_B]?.toSignificant(3)} ${currencies[Field.CURRENCY_B]?.symbol}`,\r\n          })\r\n\r\n          setTxHash(response.hash)\r\n        }),\r\n      )\r\n      .catch((err) => {\r\n        setAttemptingTxn(false)\r\n        // we only care if the error is something _other_ than the user rejected the tx\r\n        if (err?.code !== 4001) {\r\n          console.error(err)\r\n        }\r\n      })\r\n  }\r\n\r\n  const modalHeader = () => {\r\n    return noLiquidity ? (\r\n      <Flex alignItems=\"center\">\r\n        <Text fontSize=\"48px\" marginRight=\"10px\">\r\n          {`${currencies[Field.CURRENCY_A]?.symbol}/${currencies[Field.CURRENCY_B]?.symbol}`}\r\n        </Text>\r\n        <DoubleCurrencyLogo\r\n          currency0={currencies[Field.CURRENCY_A]}\r\n          currency1={currencies[Field.CURRENCY_B]}\r\n          size={30}\r\n        />\r\n      </Flex>\r\n    ) : (\r\n      <AutoColumn>\r\n        <Flex alignItems=\"center\">\r\n          <Text fontSize=\"48px\" marginRight=\"10px\">\r\n            {liquidityMinted?.toSignificant(6)}\r\n          </Text>\r\n          <DoubleCurrencyLogo\r\n            currency0={currencies[Field.CURRENCY_A]}\r\n            currency1={currencies[Field.CURRENCY_B]}\r\n            size={30}\r\n          />\r\n        </Flex>\r\n        <Row>\r\n          <Text fontSize=\"24px\">\r\n            {`${currencies[Field.CURRENCY_A]?.symbol}/${currencies[Field.CURRENCY_B]?.symbol} Pool Tokens`}\r\n          </Text>\r\n        </Row>\r\n        <Text small textAlign=\"left\" my=\"24px\">\r\n          {t('Output is estimated. If the price changes by more than %slippage%% your transaction will revert.', {\r\n            slippage: allowedSlippage / 100,\r\n          })}\r\n        </Text>\r\n      </AutoColumn>\r\n    )\r\n  }\r\n\r\n  const modalBottom = () => {\r\n    return (\r\n      <ConfirmAddModalBottom\r\n        price={price}\r\n        currencies={currencies}\r\n        parsedAmounts={parsedAmounts}\r\n        noLiquidity={noLiquidity}\r\n        onAdd={onAdd}\r\n        poolTokenPercentage={poolTokenPercentage}\r\n      />\r\n    )\r\n  }\r\n\r\n  const pendingText = t('Supplying %amountA% %symbolA% and %amountB% %symbolB%', {\r\n    amountA: parsedAmounts[Field.CURRENCY_A]?.toSignificant(6) ?? '',\r\n    symbolA: currencies[Field.CURRENCY_A]?.symbol ?? '',\r\n    amountB: parsedAmounts[Field.CURRENCY_B]?.toSignificant(6) ?? '',\r\n    symbolB: currencies[Field.CURRENCY_B]?.symbol ?? '',\r\n  })\r\n\r\n  const handleCurrencyASelect = useCallback(\r\n    (currencyA_: Currency) => {\r\n      const newCurrencyIdA = currencyId(currencyA_)\r\n      if (newCurrencyIdA === currencyIdB) {\r\n        history.push(`/add/${currencyIdB}/${currencyIdA}`)\r\n      } else {\r\n        history.push(`/add/${newCurrencyIdA}/${currencyIdB}`)\r\n      }\r\n    },\r\n    [currencyIdB, history, currencyIdA],\r\n  )\r\n  const handleCurrencyBSelect = useCallback(\r\n    (currencyB_: Currency) => {\r\n      const newCurrencyIdB = currencyId(currencyB_)\r\n      if (currencyIdA === newCurrencyIdB) {\r\n        if (currencyIdB) {\r\n          history.push(`/add/${currencyIdB}/${newCurrencyIdB}`)\r\n        } else {\r\n          history.push(`/add/${newCurrencyIdB}`)\r\n        }\r\n      } else {\r\n        history.push(`/add/${currencyIdA || 'BNB'}/${newCurrencyIdB}`)\r\n      }\r\n    },\r\n    [currencyIdA, history, currencyIdB],\r\n  )\r\n\r\n  const handleDismissConfirmation = useCallback(() => {\r\n    // if there was a tx hash, we want to clear the input\r\n    if (txHash) {\r\n      onFieldAInput('')\r\n    }\r\n    setTxHash('')\r\n  }, [onFieldAInput, txHash])\r\n\r\n  const addIsUnsupported = useIsTransactionUnsupported(currencies?.CURRENCY_A, currencies?.CURRENCY_B)\r\n\r\n  const [onPresentAddLiquidityModal] = useModal(\r\n    <TransactionConfirmationModal\r\n      title={noLiquidity ? t('You are creating a pool') : t('You will receive')}\r\n      customOnDismiss={handleDismissConfirmation}\r\n      attemptingTxn={attemptingTxn}\r\n      hash={txHash}\r\n      content={() => <ConfirmationModalContent topContent={modalHeader} bottomContent={modalBottom} />}\r\n      pendingText={pendingText}\r\n      currencyToAdd={pair?.liquidityToken}\r\n    />,\r\n    true,\r\n    true,\r\n    'addLiquidityModal',\r\n  )\r\n\r\n  return (\r\n    <Page>\r\n      <AppBody>\r\n        <AppHeader\r\n          title={t('Add Liquidity')}\r\n          subtitle={t('Add liquidity to receive LP tokens')}\r\n          helper={t(\r\n            'Liquidity providers earn a 0.17% trading fee on all trades made for that token pair, proportional to their share of the liquidity pool.',\r\n          )}\r\n          backTo=\"/pool\"\r\n        />\r\n        <CardBody>\r\n          <AutoColumn gap=\"20px\">\r\n            {noLiquidity && (\r\n              <ColumnCenter>\r\n                <Message variant=\"warning\">\r\n                  <div>\r\n                    <Text bold mb=\"8px\">\r\n                      {t('You are the first liquidity provider.')}\r\n                    </Text>\r\n                    <Text mb=\"8px\">{t('The ratio of tokens you add will set the price of this pool.')}</Text>\r\n                    <Text>{t('Once you are happy with the rate click supply to review.')}</Text>\r\n                  </div>\r\n                </Message>\r\n              </ColumnCenter>\r\n            )}\r\n            <CurrencyInputPanel\r\n              value={formattedAmounts[Field.CURRENCY_A]}\r\n              onUserInput={onFieldAInput}\r\n              onMax={() => {\r\n                onFieldAInput(maxAmounts[Field.CURRENCY_A]?.toExact() ?? '')\r\n              }}\r\n              onCurrencySelect={handleCurrencyASelect}\r\n              showMaxButton={!atMaxAmounts[Field.CURRENCY_A]}\r\n              currency={currencies[Field.CURRENCY_A]}\r\n              id=\"add-liquidity-input-tokena\"\r\n              showCommonBases\r\n            />\r\n            <ColumnCenter>\r\n              <AddIcon width=\"16px\" />\r\n            </ColumnCenter>\r\n            <CurrencyInputPanel\r\n              value={formattedAmounts[Field.CURRENCY_B]}\r\n              onUserInput={onFieldBInput}\r\n              onCurrencySelect={handleCurrencyBSelect}\r\n              onMax={() => {\r\n                onFieldBInput(maxAmounts[Field.CURRENCY_B]?.toExact() ?? '')\r\n              }}\r\n              showMaxButton={!atMaxAmounts[Field.CURRENCY_B]}\r\n              currency={currencies[Field.CURRENCY_B]}\r\n              id=\"add-liquidity-input-tokenb\"\r\n              showCommonBases\r\n            />\r\n            {currencies[Field.CURRENCY_A] && currencies[Field.CURRENCY_B] && pairState !== PairState.INVALID && (\r\n              <>\r\n                <LightCard padding=\"0px\" borderRadius=\"20px\">\r\n                  <RowBetween padding=\"1rem\">\r\n                    <Text fontSize=\"14px\">\r\n                      {noLiquidity ? t('Initial prices and pool share') : t('Prices and pool share')}\r\n                    </Text>\r\n                  </RowBetween>{' '}\r\n                  <LightCard padding=\"1rem\" borderRadius=\"20px\">\r\n                    <PoolPriceBar\r\n                      currencies={currencies}\r\n                      poolTokenPercentage={poolTokenPercentage}\r\n                      noLiquidity={noLiquidity}\r\n                      price={price}\r\n                    />\r\n                  </LightCard>\r\n                </LightCard>\r\n              </>\r\n            )}\r\n\r\n            {addIsUnsupported ? (\r\n              <Button disabled mb=\"4px\">\r\n                {t('Unsupported Asset')}\r\n              </Button>\r\n            ) : !account ? (\r\n              <ConnectWalletButton />\r\n            ) : (\r\n              <AutoColumn gap=\"md\">\r\n                {(approvalA === ApprovalState.NOT_APPROVED ||\r\n                  approvalA === ApprovalState.PENDING ||\r\n                  approvalB === ApprovalState.NOT_APPROVED ||\r\n                  approvalB === ApprovalState.PENDING) &&\r\n                  isValid && (\r\n                    <RowBetween>\r\n                      {approvalA !== ApprovalState.APPROVED && (\r\n                        <Button\r\n                          onClick={approveACallback}\r\n                          disabled={approvalA === ApprovalState.PENDING}\r\n                          width={approvalB !== ApprovalState.APPROVED ? '48%' : '100%'}\r\n                        >\r\n                          {approvalA === ApprovalState.PENDING ? (\r\n                            <Dots>{t('Enabling %asset%', { asset: currencies[Field.CURRENCY_A]?.symbol })}</Dots>\r\n                          ) : (\r\n                            t('Enable %asset%', { asset: currencies[Field.CURRENCY_A]?.symbol })\r\n                          )}\r\n                        </Button>\r\n                      )}\r\n                      {approvalB !== ApprovalState.APPROVED && (\r\n                        <Button\r\n                          onClick={approveBCallback}\r\n                          disabled={approvalB === ApprovalState.PENDING}\r\n                          width={approvalA !== ApprovalState.APPROVED ? '48%' : '100%'}\r\n                        >\r\n                          {approvalB === ApprovalState.PENDING ? (\r\n                            <Dots>{t('Enabling %asset%', { asset: currencies[Field.CURRENCY_B]?.symbol })}</Dots>\r\n                          ) : (\r\n                            t('Enable %asset%', { asset: currencies[Field.CURRENCY_B]?.symbol })\r\n                          )}\r\n                        </Button>\r\n                      )}\r\n                    </RowBetween>\r\n                  )}\r\n                <Button\r\n                  variant={\r\n                    !isValid && !!parsedAmounts[Field.CURRENCY_A] && !!parsedAmounts[Field.CURRENCY_B]\r\n                      ? 'danger'\r\n                      : 'primary'\r\n                  }\r\n                  onClick={() => {\r\n                    if (expertMode) {\r\n                      onAdd()\r\n                    } else {\r\n                      onPresentAddLiquidityModal()\r\n                    }\r\n                  }}\r\n                  disabled={!isValid || approvalA !== ApprovalState.APPROVED || approvalB !== ApprovalState.APPROVED}\r\n                >\r\n                  {error ?? t('Supply')}\r\n                </Button>\r\n              </AutoColumn>\r\n            )}\r\n          </AutoColumn>\r\n        </CardBody>\r\n      </AppBody>\r\n      {!addIsUnsupported ? (\r\n        pair && !noLiquidity && pairState !== PairState.INVALID ? (\r\n          <AutoColumn style={{ minWidth: '20rem', width: '100%', maxWidth: '400px', marginTop: '1rem' }}>\r\n            <MinimalPositionCard showUnwrapped={oneCurrencyIsWETH} pair={pair} />\r\n          </AutoColumn>\r\n        ) : null\r\n      ) : (\r\n        <UnsupportedCurrencyFooter currencies={[currencies.CURRENCY_A, currencies.CURRENCY_B]} />\r\n      )}\r\n    </Page>\r\n  )\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}