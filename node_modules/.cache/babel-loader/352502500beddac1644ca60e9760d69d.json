{"ast":null,"code":"/* eslint-disable no-case-declarations */\n/**\r\n * Given a URI that may be ipfs, ipns, http, or https protocol, return the fetch-able http(s) URLs for the same content\r\n * @param uri to convert to fetch-able http url\r\n */\nexport default function uriToHttp(uri) {\n  var _uri$match, _uri$match2;\n  const protocol = uri.split(':')[0].toLowerCase();\n  switch (protocol) {\n    case 'https':\n      return [uri];\n    case 'http':\n      return [`https${uri.substr(4)}`, uri];\n    case 'ipfs':\n      const hash = (_uri$match = uri.match(/^ipfs:(\\/\\/)?(.*)$/i)) === null || _uri$match === void 0 ? void 0 : _uri$match[2];\n      return [`https://cloudflare-ipfs.com/ipfs/${hash}/`, `https://ipfs.io/ipfs/${hash}/`];\n    case 'ipns':\n      const name = (_uri$match2 = uri.match(/^ipns:(\\/\\/)?(.*)$/i)) === null || _uri$match2 === void 0 ? void 0 : _uri$match2[2];\n      return [`https://cloudflare-ipfs.com/ipns/${name}/`, `https://ipfs.io/ipns/${name}/`];\n    default:\n      return [];\n  }\n}","map":{"version":3,"names":["uriToHttp","uri","_uri$match","_uri$match2","protocol","split","toLowerCase","substr","hash","match","name"],"sources":["C:/Users/frkul/Documents/swapUI_pancake-frontend/src/utils/uriToHttp.ts"],"sourcesContent":["/* eslint-disable no-case-declarations */\r\n/**\r\n * Given a URI that may be ipfs, ipns, http, or https protocol, return the fetch-able http(s) URLs for the same content\r\n * @param uri to convert to fetch-able http url\r\n */\r\nexport default function uriToHttp(uri: string): string[] {\r\n  const protocol = uri.split(':')[0].toLowerCase()\r\n  switch (protocol) {\r\n    case 'https':\r\n      return [uri]\r\n    case 'http':\r\n      return [`https${uri.substr(4)}`, uri]\r\n    case 'ipfs':\r\n      const hash = uri.match(/^ipfs:(\\/\\/)?(.*)$/i)?.[2]\r\n      return [`https://cloudflare-ipfs.com/ipfs/${hash}/`, `https://ipfs.io/ipfs/${hash}/`]\r\n    case 'ipns':\r\n      const name = uri.match(/^ipns:(\\/\\/)?(.*)$/i)?.[2]\r\n      return [`https://cloudflare-ipfs.com/ipns/${name}/`, `https://ipfs.io/ipns/${name}/`]\r\n    default:\r\n      return []\r\n  }\r\n}\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASA,SAASA,CAACC,GAAW,EAAY;EAAA,IAAAC,UAAA,EAAAC,WAAA;EACvD,MAAMC,QAAQ,GAAGH,GAAG,CAACI,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;EAChD,QAAQF,QAAQ;IACd,KAAK,OAAO;MACV,OAAO,CAACH,GAAG,CAAC;IACd,KAAK,MAAM;MACT,OAAO,CAAC,QAAQA,GAAG,CAACM,MAAM,CAAC,CAAC,CAAC,EAAE,EAAEN,GAAG,CAAC;IACvC,KAAK,MAAM;MACT,MAAMO,IAAI,IAAAN,UAAA,GAAGD,GAAG,CAACQ,KAAK,CAAC,qBAAqB,CAAC,cAAAP,UAAA,uBAAhCA,UAAA,CAAmC,CAAC,CAAC;MAClD,OAAO,CAAC,oCAAoCM,IAAI,GAAG,EAAE,wBAAwBA,IAAI,GAAG,CAAC;IACvF,KAAK,MAAM;MACT,MAAME,IAAI,IAAAP,WAAA,GAAGF,GAAG,CAACQ,KAAK,CAAC,qBAAqB,CAAC,cAAAN,WAAA,uBAAhCA,WAAA,CAAmC,CAAC,CAAC;MAClD,OAAO,CAAC,oCAAoCO,IAAI,GAAG,EAAE,wBAAwBA,IAAI,GAAG,CAAC;IACvF;MACE,OAAO,EAAE;EACb;AACF","ignoreList":[]},"metadata":{},"sourceType":"module"}