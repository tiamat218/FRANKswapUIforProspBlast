{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Devrim\\\\Documents\\\\FRANKswapUIforProspBlast\\\\src\\\\views\\\\Lottery\\\\components\\\\PreviousRoundCard\\\\FooterExpanded.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport styled from 'styled-components';\nimport BigNumber from 'bignumber.js';\nimport { Flex, Skeleton, Heading, Box, Text } from '@pancakeswap/uikit';\nimport { useTranslation } from 'contexts/Localization';\nimport { usePriceCakeBusd } from 'state/farms/hooks';\nimport { useGetLotteryGraphDataById } from 'state/lottery/hooks';\nimport { formatNumber, getBalanceNumber } from 'utils/formatBalance';\nimport Balance from 'components/Balance';\nimport RewardBrackets from '../RewardBrackets';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst NextDrawWrapper = styled(Flex)`\n  background: ${({\n  theme\n}) => theme.colors.background};\n  padding: 24px;\n  flex-direction: column;\n\n  ${({\n  theme\n}) => theme.mediaQueries.sm} {\n    flex-direction: row;\n  }\n`;\n_c = NextDrawWrapper;\nconst PreviousRoundCardFooter = ({\n  lotteryData,\n  lotteryId\n}) => {\n  _s();\n  const {\n    t\n  } = useTranslation();\n  const lotteryGraphData = useGetLotteryGraphDataById(lotteryId);\n  const cakePriceBusd = usePriceCakeBusd();\n  let prizeInBusd = new BigNumber(NaN);\n  if (lotteryData) {\n    const {\n      amountCollectedInCake\n    } = lotteryData;\n    prizeInBusd = amountCollectedInCake.times(cakePriceBusd);\n  }\n  const getPrizeBalances = () => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [prizeInBusd.isNaN() ? /*#__PURE__*/_jsxDEV(Skeleton, {\n        my: \"7px\",\n        height: 40,\n        width: 200\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Heading, {\n        scale: \"xl\",\n        lineHeight: \"1\",\n        color: \"secondary\",\n        children: [\"~$\", formatNumber(getBalanceNumber(prizeInBusd), 0, 0)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), prizeInBusd.isNaN() ? /*#__PURE__*/_jsxDEV(Skeleton, {\n        my: \"2px\",\n        height: 14,\n        width: 90\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Balance, {\n        fontSize: \"14px\",\n        color: \"textSubtle\",\n        unit: \" CAKE\",\n        value: getBalanceNumber(lotteryData === null || lotteryData === void 0 ? void 0 : lotteryData.amountCollectedInCake),\n        decimals: 0\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true);\n  };\n  return /*#__PURE__*/_jsxDEV(NextDrawWrapper, {\n    children: [/*#__PURE__*/_jsxDEV(Flex, {\n      mr: \"24px\",\n      flexDirection: \"column\",\n      justifyContent: \"space-between\",\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(Heading, {\n          children: t('Prize pot')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), getPrizeBalances()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        mb: \"24px\",\n        children: /*#__PURE__*/_jsxDEV(Flex, {\n          children: /*#__PURE__*/_jsxDEV(Text, {\n            fontSize: \"14px\",\n            display: \"inline\",\n            children: [t('Total players this round'), \":\", ' ', lotteryData && lotteryGraphData.totalUsers ? lotteryGraphData.totalUsers.toLocaleString() : /*#__PURE__*/_jsxDEV(Skeleton, {\n              height: 14,\n              width: 31\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RewardBrackets, {\n      lotteryData: lotteryData,\n      isHistoricRound: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(PreviousRoundCardFooter, \"K3/THwZZDLds/pFY+GbTYUO4RfI=\", false, function () {\n  return [useTranslation, useGetLotteryGraphDataById, usePriceCakeBusd];\n});\n_c2 = PreviousRoundCardFooter;\nexport default PreviousRoundCardFooter;\nvar _c, _c2;\n$RefreshReg$(_c, \"NextDrawWrapper\");\n$RefreshReg$(_c2, \"PreviousRoundCardFooter\");","map":{"version":3,"names":["React","styled","BigNumber","Flex","Skeleton","Heading","Box","Text","useTranslation","usePriceCakeBusd","useGetLotteryGraphDataById","formatNumber","getBalanceNumber","Balance","RewardBrackets","jsxDEV","_jsxDEV","Fragment","_Fragment","NextDrawWrapper","theme","colors","background","mediaQueries","sm","_c","PreviousRoundCardFooter","lotteryData","lotteryId","_s","t","lotteryGraphData","cakePriceBusd","prizeInBusd","NaN","amountCollectedInCake","times","getPrizeBalances","children","isNaN","my","height","width","fileName","_jsxFileName","lineNumber","columnNumber","scale","lineHeight","color","fontSize","unit","value","decimals","mr","flexDirection","justifyContent","mb","display","totalUsers","toLocaleString","isHistoricRound","_c2","$RefreshReg$"],"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/views/Lottery/components/PreviousRoundCard/FooterExpanded.tsx"],"sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Flex, Skeleton, Heading, Box, Text } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { LotteryRound } from 'state/types'\r\nimport { usePriceCakeBusd } from 'state/farms/hooks'\r\nimport { useGetLotteryGraphDataById } from 'state/lottery/hooks'\r\nimport { formatNumber, getBalanceNumber } from 'utils/formatBalance'\r\nimport Balance from 'components/Balance'\r\nimport RewardBrackets from '../RewardBrackets'\r\n\r\nconst NextDrawWrapper = styled(Flex)`\r\n  background: ${({ theme }) => theme.colors.background};\r\n  padding: 24px;\r\n  flex-direction: column;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    flex-direction: row;\r\n  }\r\n`\r\n\r\nconst PreviousRoundCardFooter: React.FC<{ lotteryData: LotteryRound; lotteryId: string }> = ({\r\n  lotteryData,\r\n  lotteryId,\r\n}) => {\r\n  const { t } = useTranslation()\r\n  const lotteryGraphData = useGetLotteryGraphDataById(lotteryId)\r\n  const cakePriceBusd = usePriceCakeBusd()\r\n\r\n  let prizeInBusd = new BigNumber(NaN)\r\n  if (lotteryData) {\r\n    const { amountCollectedInCake } = lotteryData\r\n    prizeInBusd = amountCollectedInCake.times(cakePriceBusd)\r\n  }\r\n\r\n  const getPrizeBalances = () => {\r\n    return (\r\n      <>\r\n        {prizeInBusd.isNaN() ? (\r\n          <Skeleton my=\"7px\" height={40} width={200} />\r\n        ) : (\r\n          <Heading scale=\"xl\" lineHeight=\"1\" color=\"secondary\">\r\n            ~${formatNumber(getBalanceNumber(prizeInBusd), 0, 0)}\r\n          </Heading>\r\n        )}\r\n        {prizeInBusd.isNaN() ? (\r\n          <Skeleton my=\"2px\" height={14} width={90} />\r\n        ) : (\r\n          <Balance\r\n            fontSize=\"14px\"\r\n            color=\"textSubtle\"\r\n            unit=\" CAKE\"\r\n            value={getBalanceNumber(lotteryData?.amountCollectedInCake)}\r\n            decimals={0}\r\n          />\r\n        )}\r\n      </>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <NextDrawWrapper>\r\n      <Flex mr=\"24px\" flexDirection=\"column\" justifyContent=\"space-between\">\r\n        <Box>\r\n          <Heading>{t('Prize pot')}</Heading>\r\n          {getPrizeBalances()}\r\n        </Box>\r\n        <Box mb=\"24px\">\r\n          <Flex>\r\n            <Text fontSize=\"14px\" display=\"inline\">\r\n              {t('Total players this round')}:{' '}\r\n              {lotteryData && lotteryGraphData.totalUsers ? (\r\n                lotteryGraphData.totalUsers.toLocaleString()\r\n              ) : (\r\n                <Skeleton height={14} width={31} />\r\n              )}\r\n            </Text>\r\n          </Flex>\r\n        </Box>\r\n      </Flex>\r\n      <RewardBrackets lotteryData={lotteryData} isHistoricRound />\r\n    </NextDrawWrapper>\r\n  )\r\n}\r\n\r\nexport default PreviousRoundCardFooter\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}