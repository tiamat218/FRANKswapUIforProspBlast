{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Devrim\\\\Documents\\\\FRANKswapUIforProspBlast\\\\src\\\\views\\\\Ifos\\\\components\\\\IfoFoldableCard\\\\Timer.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useTranslation } from 'contexts/Localization';\nimport { getBscScanLink } from 'utils';\nimport { Flex, Link, PocketWatchIcon, Text, Skeleton } from '@pancakeswap/uikit';\nimport getTimePeriods from 'utils/getTimePeriods';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Timer = ({\n  publicIfoData\n}) => {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  const {\n    status,\n    secondsUntilStart,\n    secondsUntilEnd,\n    startBlockNum\n  } = publicIfoData;\n  const countdownToUse = status === 'coming_soon' ? secondsUntilStart : secondsUntilEnd;\n  const timeUntil = getTimePeriods(countdownToUse);\n  const suffix = status === 'coming_soon' ? t('Start').toLowerCase() : t('Finish').toLowerCase();\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    justifyContent: \"center\",\n    mb: \"32px\",\n    children: status === 'idle' ? /*#__PURE__*/_jsxDEV(Skeleton, {\n      animation: \"pulse\",\n      variant: \"rect\",\n      width: \"100%\",\n      height: \"48px\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(PocketWatchIcon, {\n        width: \"48px\",\n        mr: \"16px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        alignItems: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          bold: true,\n          mr: \"16px\",\n          children: [suffix, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          children: t('%day%d %hour%h %minute%m', {\n            day: timeUntil.days,\n            hour: timeUntil.hours,\n            minute: timeUntil.minutes\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          href: getBscScanLink(startBlockNum, 'countdown'),\n          target: \"blank\",\n          rel: \"noopener noreferrer\",\n          ml: \"8px\",\n          textTransform: \"lowercase\",\n          children: `(${t('Blocks')})`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Timer, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n\n_c = Timer;\nexport default Timer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/views/Ifos/components/IfoFoldableCard/Timer.tsx"],"names":["React","useTranslation","getBscScanLink","Flex","Link","PocketWatchIcon","Text","Skeleton","getTimePeriods","Timer","publicIfoData","t","status","secondsUntilStart","secondsUntilEnd","startBlockNum","countdownToUse","timeUntil","suffix","toLowerCase","day","days","hour","hours","minute","minutes"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,QAA+B,uBAA/B;AACA,SAASC,cAAT,QAA+B,OAA/B;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,eAArB,EAAsCC,IAAtC,EAA4CC,QAA5C,QAA4D,oBAA5D;AACA,OAAOC,cAAP,MAA2B,sBAA3B;;;;AAOA,MAAMC,KAAsB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAuB;AAAA;;AACpD,QAAM;AAAEC,IAAAA;AAAF,MAAQV,cAAc,EAA5B;AACA,QAAM;AAAEW,IAAAA,MAAF;AAAUC,IAAAA,iBAAV;AAA6BC,IAAAA,eAA7B;AAA8CC,IAAAA;AAA9C,MAAgEL,aAAtE;AACA,QAAMM,cAAc,GAAGJ,MAAM,KAAK,aAAX,GAA2BC,iBAA3B,GAA+CC,eAAtE;AACA,QAAMG,SAAS,GAAGT,cAAc,CAACQ,cAAD,CAAhC;AACA,QAAME,MAAM,GAAGN,MAAM,KAAK,aAAX,GAA2BD,CAAC,CAAC,OAAD,CAAD,CAAWQ,WAAX,EAA3B,GAAsDR,CAAC,CAAC,QAAD,CAAD,CAAYQ,WAAZ,EAArE;AACA,sBACE,QAAC,IAAD;AAAM,IAAA,cAAc,EAAC,QAArB;AAA8B,IAAA,EAAE,EAAC,MAAjC;AAAA,cACGP,MAAM,KAAK,MAAX,gBACC,QAAC,QAAD;AAAU,MAAA,SAAS,EAAC,OAApB;AAA4B,MAAA,OAAO,EAAC,MAApC;AAA2C,MAAA,KAAK,EAAC,MAAjD;AAAwD,MAAA,MAAM,EAAC;AAA/D;AAAA;AAAA;AAAA;AAAA,YADD,gBAGC;AAAA,8BACE,QAAC,eAAD;AAAiB,QAAA,KAAK,EAAC,MAAvB;AAA8B,QAAA,EAAE,EAAC;AAAjC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,IAAD;AAAM,QAAA,UAAU,EAAC,QAAjB;AAAA,gCACE,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAC,MAAd;AAAA,qBACGM,MADH;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,IAAD;AAAA,oBACGP,CAAC,CAAC,0BAAD,EAA6B;AAC7BS,YAAAA,GAAG,EAAEH,SAAS,CAACI,IADc;AAE7BC,YAAAA,IAAI,EAAEL,SAAS,CAACM,KAFa;AAG7BC,YAAAA,MAAM,EAAEP,SAAS,CAACQ;AAHW,WAA7B;AADJ;AAAA;AAAA;AAAA;AAAA,gBAJF,eAWE,QAAC,IAAD;AACE,UAAA,IAAI,EAAEvB,cAAc,CAACa,aAAD,EAAgB,WAAhB,CADtB;AAEE,UAAA,MAAM,EAAC,OAFT;AAGE,UAAA,GAAG,EAAC,qBAHN;AAIE,UAAA,EAAE,EAAC,KAJL;AAKE,UAAA,aAAa,EAAC,WALhB;AAAA,oBAOI,IAAGJ,CAAC,CAAC,QAAD,CAAW;AAPnB;AAAA;AAAA;AAAA;AAAA,gBAXF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,UADF;AAgCD,CAtCD;;GAAMF,K;UACUR,c;;;KADVQ,K;AAwCN,eAAeA,KAAf","sourcesContent":["import React from 'react'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { getBscScanLink } from 'utils'\r\nimport { Flex, Link, PocketWatchIcon, Text, Skeleton } from '@pancakeswap/uikit'\r\nimport getTimePeriods from 'utils/getTimePeriods'\r\nimport { PublicIfoData } from 'views/Ifos/types'\r\n\r\ninterface Props {\r\n  publicIfoData: PublicIfoData\r\n}\r\n\r\nconst Timer: React.FC<Props> = ({ publicIfoData }) => {\r\n  const { t } = useTranslation()\r\n  const { status, secondsUntilStart, secondsUntilEnd, startBlockNum } = publicIfoData\r\n  const countdownToUse = status === 'coming_soon' ? secondsUntilStart : secondsUntilEnd\r\n  const timeUntil = getTimePeriods(countdownToUse)\r\n  const suffix = status === 'coming_soon' ? t('Start').toLowerCase() : t('Finish').toLowerCase()\r\n  return (\r\n    <Flex justifyContent=\"center\" mb=\"32px\">\r\n      {status === 'idle' ? (\r\n        <Skeleton animation=\"pulse\" variant=\"rect\" width=\"100%\" height=\"48px\" />\r\n      ) : (\r\n        <>\r\n          <PocketWatchIcon width=\"48px\" mr=\"16px\" />\r\n          <Flex alignItems=\"center\">\r\n            <Text bold mr=\"16px\">\r\n              {suffix}:\r\n            </Text>\r\n            <Text>\r\n              {t('%day%d %hour%h %minute%m', {\r\n                day: timeUntil.days,\r\n                hour: timeUntil.hours,\r\n                minute: timeUntil.minutes,\r\n              })}\r\n            </Text>\r\n            <Link\r\n              href={getBscScanLink(startBlockNum, 'countdown')}\r\n              target=\"blank\"\r\n              rel=\"noopener noreferrer\"\r\n              ml=\"8px\"\r\n              textTransform=\"lowercase\"\r\n            >\r\n              {`(${t('Blocks')})`}\r\n            </Link>\r\n          </Flex>\r\n        </>\r\n      )}\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default Timer\r\n"]},"metadata":{},"sourceType":"module"}