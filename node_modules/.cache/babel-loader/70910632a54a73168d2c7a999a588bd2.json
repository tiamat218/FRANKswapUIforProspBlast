{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useGetCurrentRoundBlockNumber, useGetIntervalBlocks } from 'state/hooks';\nimport useBlockCountdown from 'hooks/useGetBlockCountdown';\n\n/**\r\n * Returns a countdown in seconds of a given block\r\n */\nconst useRoundCountdown = (intervalsToAdd = 1) => {\n  _s();\n  const interval = useGetIntervalBlocks();\n  const currentRoundBlockNum = useGetCurrentRoundBlockNumber();\n  const blocksToAdd = intervalsToAdd * interval;\n  const seconds = useBlockCountdown(currentRoundBlockNum + blocksToAdd);\n  return seconds;\n};\n_s(useRoundCountdown, \"OHiZxaZ3wV3fX630LKQwIIMvH9c=\", false, function () {\n  return [useGetIntervalBlocks, useGetCurrentRoundBlockNumber, useBlockCountdown];\n});\nexport default useRoundCountdown;","map":{"version":3,"names":["useGetCurrentRoundBlockNumber","useGetIntervalBlocks","useBlockCountdown","useRoundCountdown","intervalsToAdd","_s","interval","currentRoundBlockNum","blocksToAdd","seconds"],"sources":["C:/Users/Devrim/Documents/swapUIforProspBlast/src/views/Predictions/hooks/useRoundCountdown.ts"],"sourcesContent":["import { useGetCurrentRoundBlockNumber, useGetIntervalBlocks } from 'state/hooks'\r\nimport useBlockCountdown from 'hooks/useGetBlockCountdown'\r\n\r\n/**\r\n * Returns a countdown in seconds of a given block\r\n */\r\nconst useRoundCountdown = (intervalsToAdd = 1) => {\r\n  const interval = useGetIntervalBlocks()\r\n  const currentRoundBlockNum = useGetCurrentRoundBlockNumber()\r\n  const blocksToAdd = intervalsToAdd * interval\r\n  const seconds = useBlockCountdown(currentRoundBlockNum + blocksToAdd)\r\n\r\n  return seconds\r\n}\r\n\r\nexport default useRoundCountdown\r\n"],"mappings":";AAAA,SAASA,6BAA6B,EAAEC,oBAAoB,QAAQ,aAAa;AACjF,OAAOC,iBAAiB,MAAM,4BAA4B;;AAE1D;AACA;AACA;AACA,MAAMC,iBAAiB,GAAGA,CAACC,cAAc,GAAG,CAAC,KAAK;EAAAC,EAAA;EAChD,MAAMC,QAAQ,GAAGL,oBAAoB,CAAC,CAAC;EACvC,MAAMM,oBAAoB,GAAGP,6BAA6B,CAAC,CAAC;EAC5D,MAAMQ,WAAW,GAAGJ,cAAc,GAAGE,QAAQ;EAC7C,MAAMG,OAAO,GAAGP,iBAAiB,CAACK,oBAAoB,GAAGC,WAAW,CAAC;EAErE,OAAOC,OAAO;AAChB,CAAC;AAAAJ,EAAA,CAPKF,iBAAiB;EAAA,QACJF,oBAAoB,EACRD,6BAA6B,EAE1CE,iBAAiB;AAAA;AAKnC,eAAeC,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module"}