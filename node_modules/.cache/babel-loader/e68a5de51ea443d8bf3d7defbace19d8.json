{"ast":null,"code":"import _taggedTemplateLiteral from\"C:/Users/frkul/Documents/swapUI_pancake-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject;import React,{useState}from'react';import styled from'styled-components';import{useMatchBreakpoints}from'@pancakeswap/uikit';import{useCakeVault}from'state/pools/hooks';import useDelayedUnmount from'hooks/useDelayedUnmount';import NameCell from'./Cells/NameCell';import EarningsCell from'./Cells/EarningsCell';import AprCell from'./Cells/AprCell';import TotalStakedCell from'./Cells/TotalStakedCell';import EndsInCell from'./Cells/EndsInCell';import ExpandActionCell from'./Cells/ExpandActionCell';import ActionPanel from'./ActionPanel/ActionPanel';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const StyledRow=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  background-color: transparent;\\n  display: flex;\\n  cursor: pointer;\\n\"])));const PoolRow=_ref=>{let{pool,account,userDataLoaded}=_ref;const{isXs,isSm,isMd,isLg,isXl}=useMatchBreakpoints();const[expanded,setExpanded]=useState(false);const shouldRenderActionPanel=useDelayedUnmount(expanded,300);const toggleExpanded=()=>{setExpanded(prev=>!prev);};const{fees:{performanceFee}}=useCakeVault();const performanceFeeAsDecimal=performanceFee&&performanceFee/100;return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(StyledRow,{role:\"row\",onClick:toggleExpanded,children:[/*#__PURE__*/_jsx(NameCell,{pool:pool}),/*#__PURE__*/_jsx(EarningsCell,{pool:pool,account:account,userDataLoaded:userDataLoaded}),/*#__PURE__*/_jsx(AprCell,{pool:pool,performanceFee:performanceFeeAsDecimal}),(isLg||isXl)&&/*#__PURE__*/_jsx(TotalStakedCell,{pool:pool}),isXl&&/*#__PURE__*/_jsx(EndsInCell,{pool:pool}),/*#__PURE__*/_jsx(ExpandActionCell,{expanded:expanded,isFullLayout:isMd||isLg||isXl})]}),shouldRenderActionPanel&&/*#__PURE__*/_jsx(ActionPanel,{account:account,pool:pool,userDataLoaded:userDataLoaded,expanded:expanded,breakpoints:{isXs,isSm,isMd,isLg,isXl}})]});};export default PoolRow;","map":{"version":3,"names":["React","useState","styled","useMatchBreakpoints","useCakeVault","useDelayedUnmount","NameCell","EarningsCell","AprCell","TotalStakedCell","EndsInCell","ExpandActionCell","ActionPanel","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","StyledRow","div","_templateObject","_taggedTemplateLiteral","PoolRow","_ref","pool","account","userDataLoaded","isXs","isSm","isMd","isLg","isXl","expanded","setExpanded","shouldRenderActionPanel","toggleExpanded","prev","fees","performanceFee","performanceFeeAsDecimal","children","role","onClick","isFullLayout","breakpoints"],"sources":["C:/Users/frkul/Documents/swapUI_pancake-frontend/src/views/Pools/components/PoolsTable/PoolRow.tsx"],"sourcesContent":["import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { useMatchBreakpoints } from '@pancakeswap/uikit'\r\nimport { Pool } from 'state/types'\r\nimport { useCakeVault } from 'state/pools/hooks'\r\nimport useDelayedUnmount from 'hooks/useDelayedUnmount'\r\nimport NameCell from './Cells/NameCell'\r\nimport EarningsCell from './Cells/EarningsCell'\r\nimport AprCell from './Cells/AprCell'\r\nimport TotalStakedCell from './Cells/TotalStakedCell'\r\nimport EndsInCell from './Cells/EndsInCell'\r\nimport ExpandActionCell from './Cells/ExpandActionCell'\r\nimport ActionPanel from './ActionPanel/ActionPanel'\r\n\r\ninterface PoolRowProps {\r\n  pool: Pool\r\n  account: string\r\n  userDataLoaded: boolean\r\n}\r\n\r\nconst StyledRow = styled.div`\r\n  background-color: transparent;\r\n  display: flex;\r\n  cursor: pointer;\r\n`\r\n\r\nconst PoolRow: React.FC<PoolRowProps> = ({ pool, account, userDataLoaded }) => {\r\n  const { isXs, isSm, isMd, isLg, isXl } = useMatchBreakpoints()\r\n  const [expanded, setExpanded] = useState(false)\r\n  const shouldRenderActionPanel = useDelayedUnmount(expanded, 300)\r\n\r\n  const toggleExpanded = () => {\r\n    setExpanded((prev) => !prev)\r\n  }\r\n\r\n  const {\r\n    fees: { performanceFee },\r\n  } = useCakeVault()\r\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\r\n\r\n  return (\r\n    <>\r\n      <StyledRow role=\"row\" onClick={toggleExpanded}>\r\n        <NameCell pool={pool} />\r\n        <EarningsCell pool={pool} account={account} userDataLoaded={userDataLoaded} />\r\n        <AprCell pool={pool} performanceFee={performanceFeeAsDecimal} />\r\n        {(isLg || isXl) && <TotalStakedCell pool={pool} />}\r\n        {isXl && <EndsInCell pool={pool} />}\r\n        <ExpandActionCell expanded={expanded} isFullLayout={isMd || isLg || isXl} />\r\n      </StyledRow>\r\n      {shouldRenderActionPanel && (\r\n        <ActionPanel\r\n          account={account}\r\n          pool={pool}\r\n          userDataLoaded={userDataLoaded}\r\n          expanded={expanded}\r\n          breakpoints={{ isXs, isSm, isMd, isLg, isXl }}\r\n        />\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PoolRow\r\n"],"mappings":"2MAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,CAAAC,MAAM,KAAM,mBAAmB,CACtC,OAASC,mBAAmB,KAAQ,oBAAoB,CAExD,OAASC,YAAY,KAAQ,mBAAmB,CAChD,MAAO,CAAAC,iBAAiB,KAAM,yBAAyB,CACvD,MAAO,CAAAC,QAAQ,KAAM,kBAAkB,CACvC,MAAO,CAAAC,YAAY,KAAM,sBAAsB,CAC/C,MAAO,CAAAC,OAAO,KAAM,iBAAiB,CACrC,MAAO,CAAAC,eAAe,KAAM,yBAAyB,CACrD,MAAO,CAAAC,UAAU,KAAM,oBAAoB,CAC3C,MAAO,CAAAC,gBAAgB,KAAM,0BAA0B,CACvD,MAAO,CAAAC,WAAW,KAAM,2BAA2B,QAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,CAAAC,QAAA,IAAAC,SAAA,yBAQnD,KAAM,CAAAC,SAAS,CAAGjB,MAAM,CAACkB,GAAG,CAAAC,eAAA,GAAAA,eAAA,CAAAC,sBAAA,kFAI3B,CAED,KAAM,CAAAC,OAA+B,CAAGC,IAAA,EAAuC,IAAtC,CAAEC,IAAI,CAAEC,OAAO,CAAEC,cAAe,CAAC,CAAAH,IAAA,CACxE,KAAM,CAAEI,IAAI,CAAEC,IAAI,CAAEC,IAAI,CAAEC,IAAI,CAAEC,IAAK,CAAC,CAAG7B,mBAAmB,CAAC,CAAC,CAC9D,KAAM,CAAC8B,QAAQ,CAAEC,WAAW,CAAC,CAAGjC,QAAQ,CAAC,KAAK,CAAC,CAC/C,KAAM,CAAAkC,uBAAuB,CAAG9B,iBAAiB,CAAC4B,QAAQ,CAAE,GAAG,CAAC,CAEhE,KAAM,CAAAG,cAAc,CAAGA,CAAA,GAAM,CAC3BF,WAAW,CAAEG,IAAI,EAAK,CAACA,IAAI,CAAC,CAC9B,CAAC,CAED,KAAM,CACJC,IAAI,CAAE,CAAEC,cAAe,CACzB,CAAC,CAAGnC,YAAY,CAAC,CAAC,CAClB,KAAM,CAAAoC,uBAAuB,CAAGD,cAAc,EAAIA,cAAc,CAAG,GAAG,CAEtE,mBACEvB,KAAA,CAAAE,SAAA,EAAAuB,QAAA,eACEzB,KAAA,CAACG,SAAS,EAACuB,IAAI,CAAC,KAAK,CAACC,OAAO,CAAEP,cAAe,CAAAK,QAAA,eAC5C3B,IAAA,CAACR,QAAQ,EAACmB,IAAI,CAAEA,IAAK,CAAE,CAAC,cACxBX,IAAA,CAACP,YAAY,EAACkB,IAAI,CAAEA,IAAK,CAACC,OAAO,CAAEA,OAAQ,CAACC,cAAc,CAAEA,cAAe,CAAE,CAAC,cAC9Eb,IAAA,CAACN,OAAO,EAACiB,IAAI,CAAEA,IAAK,CAACc,cAAc,CAAEC,uBAAwB,CAAE,CAAC,CAC/D,CAACT,IAAI,EAAIC,IAAI,gBAAKlB,IAAA,CAACL,eAAe,EAACgB,IAAI,CAAEA,IAAK,CAAE,CAAC,CACjDO,IAAI,eAAIlB,IAAA,CAACJ,UAAU,EAACe,IAAI,CAAEA,IAAK,CAAE,CAAC,cACnCX,IAAA,CAACH,gBAAgB,EAACsB,QAAQ,CAAEA,QAAS,CAACW,YAAY,CAAEd,IAAI,EAAIC,IAAI,EAAIC,IAAK,CAAE,CAAC,EACnE,CAAC,CACXG,uBAAuB,eACtBrB,IAAA,CAACF,WAAW,EACVc,OAAO,CAAEA,OAAQ,CACjBD,IAAI,CAAEA,IAAK,CACXE,cAAc,CAAEA,cAAe,CAC/BM,QAAQ,CAAEA,QAAS,CACnBY,WAAW,CAAE,CAAEjB,IAAI,CAAEC,IAAI,CAAEC,IAAI,CAAEC,IAAI,CAAEC,IAAK,CAAE,CAC/C,CACF,EACD,CAAC,CAEP,CAAC,CAED,cAAe,CAAAT,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module"}