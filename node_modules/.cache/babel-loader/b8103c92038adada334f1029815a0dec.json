{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Devrim\\\\Documents\\\\swapUIforProspBlast\\\\src\\\\views\\\\Farms\\\\components\\\\FarmTable\\\\Actions\\\\StakedAction.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback } from 'react';\nimport styled from 'styled-components';\nimport { Button, useModal, IconButton, AddIcon, MinusIcon, Skeleton, Text } from '@pancakeswap/uikit';\nimport { useLocation } from 'react-router-dom';\nimport { BigNumber } from 'bignumber.js';\nimport ConnectWalletButton from 'components/ConnectWalletButton';\nimport Balance from 'components/Balance';\nimport { useWeb3React } from '@web3-react/core';\nimport { useFarmUser, useLpTokenPrice } from 'state/farms/hooks';\nimport { fetchFarmUserDataAsync } from 'state/farms';\nimport { useTranslation } from 'contexts/Localization';\nimport { useERC20 } from 'hooks/useContract';\nimport { BASE_ADD_LIQUIDITY_URL } from 'config';\nimport { useAppDispatch } from 'state';\nimport { getAddress } from 'utils/addressHelpers';\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts';\nimport { getBalanceAmount, getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance';\nimport useUnstakeFarms from '../../../hooks/useUnstakeFarms';\nimport DepositModal from '../../DepositModal';\nimport WithdrawModal from '../../WithdrawModal';\nimport useStakeFarms from '../../../hooks/useStakeFarms';\nimport useApproveFarm from '../../../hooks/useApproveFarm';\nimport { ActionContainer, ActionTitles, ActionContent, Earned } from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst IconButtonWrapper = styled.div`\n  display: flex;\n`;\n_c = IconButtonWrapper;\nconst Staked = ({\n  pid,\n  lpSymbol,\n  lpAddresses,\n  quoteToken,\n  token,\n  userDataReady\n}) => {\n  _s();\n  const {\n    t\n  } = useTranslation();\n  const {\n    account\n  } = useWeb3React();\n  const [requestedApproval, setRequestedApproval] = useState(false);\n  const {\n    allowance,\n    tokenBalance,\n    stakedBalance\n  } = useFarmUser(pid);\n  const {\n    onStake\n  } = useStakeFarms(pid);\n  const {\n    onUnstake\n  } = useUnstakeFarms(pid);\n  const location = useLocation();\n  const lpPrice = useLpTokenPrice(lpSymbol);\n  const isApproved = account && allowance && allowance.isGreaterThan(0);\n  const lpAddress = getAddress(lpAddresses);\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({\n    quoteTokenAddress: quoteToken.address,\n    tokenAddress: token.address\n  });\n  const addLiquidityUrl = `${BASE_ADD_LIQUIDITY_URL}/${liquidityUrlPathParts}`;\n  const handleStake = async amount => {\n    await onStake(amount);\n    dispatch(fetchFarmUserDataAsync({\n      account,\n      pids: [pid]\n    }));\n  };\n  const handleUnstake = async amount => {\n    await onUnstake(amount);\n    dispatch(fetchFarmUserDataAsync({\n      account,\n      pids: [pid]\n    }));\n  };\n  const displayBalance = useCallback(() => {\n    const stakedBalanceBigNumber = getBalanceAmount(stakedBalance);\n    if (stakedBalanceBigNumber.gt(0) && stakedBalanceBigNumber.lt(0.0000001)) {\n      return stakedBalanceBigNumber.toFixed(10, BigNumber.ROUND_DOWN);\n    }\n    if (stakedBalanceBigNumber.gt(0) && stakedBalanceBigNumber.lt(0.0001)) {\n      return getFullDisplayBalance(stakedBalance).toLocaleString();\n    }\n    return stakedBalanceBigNumber.toFixed(3, BigNumber.ROUND_DOWN);\n  }, [stakedBalance]);\n  const [onPresentDeposit] = useModal( /*#__PURE__*/_jsxDEV(DepositModal, {\n    max: tokenBalance,\n    onConfirm: handleStake,\n    tokenName: lpSymbol,\n    addLiquidityUrl: addLiquidityUrl\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this));\n  const [onPresentWithdraw] = useModal( /*#__PURE__*/_jsxDEV(WithdrawModal, {\n    max: stakedBalance,\n    onConfirm: handleUnstake,\n    tokenName: lpSymbol\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this));\n  const lpContract = useERC20(lpAddress);\n  const dispatch = useAppDispatch();\n  const {\n    onApprove\n  } = useApproveFarm(lpContract);\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true);\n      await onApprove();\n      dispatch(fetchFarmUserDataAsync({\n        account,\n        pids: [pid]\n      }));\n      setRequestedApproval(false);\n    } catch (e) {\n      console.error(e);\n    }\n  }, [onApprove, dispatch, account, pid]);\n  if (!account) {\n    return /*#__PURE__*/_jsxDEV(ActionContainer, {\n      children: [/*#__PURE__*/_jsxDEV(ActionTitles, {\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          bold: true,\n          textTransform: \"uppercase\",\n          color: \"textSubtle\",\n          fontSize: \"12px\",\n          children: t('Start Farming')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ActionContent, {\n        children: /*#__PURE__*/_jsxDEV(ConnectWalletButton, {\n          width: \"100%\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this);\n  }\n  if (isApproved) {\n    if (stakedBalance.gt(0)) {\n      return /*#__PURE__*/_jsxDEV(ActionContainer, {\n        children: [/*#__PURE__*/_jsxDEV(ActionTitles, {\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            bold: true,\n            textTransform: \"uppercase\",\n            color: \"secondary\",\n            fontSize: \"12px\",\n            pr: \"4px\",\n            children: lpSymbol\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            bold: true,\n            textTransform: \"uppercase\",\n            color: \"textSubtle\",\n            fontSize: \"12px\",\n            children: t('Staked')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ActionContent, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Earned, {\n              children: displayBalance()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 15\n            }, this), stakedBalance.gt(0) && lpPrice.gt(0) && /*#__PURE__*/_jsxDEV(Balance, {\n              fontSize: \"12px\",\n              color: \"textSubtle\",\n              decimals: 2,\n              value: getBalanceNumber(lpPrice.times(stakedBalance)),\n              unit: \" USD\",\n              prefix: \"~\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(IconButtonWrapper, {\n            children: [/*#__PURE__*/_jsxDEV(IconButton, {\n              variant: \"secondary\",\n              onClick: onPresentWithdraw,\n              mr: \"6px\",\n              children: /*#__PURE__*/_jsxDEV(MinusIcon, {\n                color: \"primary\",\n                width: \"14px\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n              variant: \"secondary\",\n              onClick: onPresentDeposit,\n              disabled: ['history', 'archived'].some(item => location.pathname.includes(item)),\n              children: /*#__PURE__*/_jsxDEV(AddIcon, {\n                color: \"primary\",\n                width: \"14px\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(ActionContainer, {\n      children: [/*#__PURE__*/_jsxDEV(ActionTitles, {\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          bold: true,\n          textTransform: \"uppercase\",\n          color: \"textSubtle\",\n          fontSize: \"12px\",\n          pr: \"4px\",\n          children: t('Stake').toUpperCase()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          bold: true,\n          textTransform: \"uppercase\",\n          color: \"secondary\",\n          fontSize: \"12px\",\n          children: lpSymbol\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ActionContent, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          width: \"100%\",\n          onClick: onPresentDeposit,\n          variant: \"secondary\",\n          disabled: ['history', 'archived'].some(item => location.pathname.includes(item)),\n          children: t('Stake LP')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this);\n  }\n  if (!userDataReady) {\n    return /*#__PURE__*/_jsxDEV(ActionContainer, {\n      children: [/*#__PURE__*/_jsxDEV(ActionTitles, {\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          bold: true,\n          textTransform: \"uppercase\",\n          color: \"textSubtle\",\n          fontSize: \"12px\",\n          children: t('Start Farming')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ActionContent, {\n        children: /*#__PURE__*/_jsxDEV(Skeleton, {\n          width: 180,\n          marginBottom: 28,\n          marginTop: 14\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(ActionContainer, {\n    children: [/*#__PURE__*/_jsxDEV(ActionTitles, {\n      children: /*#__PURE__*/_jsxDEV(Text, {\n        bold: true,\n        textTransform: \"uppercase\",\n        color: \"textSubtle\",\n        fontSize: \"12px\",\n        children: t('Enable Farm')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ActionContent, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        width: \"100%\",\n        disabled: requestedApproval,\n        onClick: handleApprove,\n        variant: \"secondary\",\n        children: t('Enable')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 201,\n    columnNumber: 5\n  }, this);\n};\n_s(Staked, \"gjruC51cSwC/N0Ir7OmMDT+5hCs=\", false, function () {\n  return [useTranslation, useWeb3React, useFarmUser, useStakeFarms, useUnstakeFarms, useLocation, useLpTokenPrice, useModal, useModal, useERC20, useAppDispatch, useApproveFarm];\n});\n_c2 = Staked;\nexport default Staked;\nvar _c, _c2;\n$RefreshReg$(_c, \"IconButtonWrapper\");\n$RefreshReg$(_c2, \"Staked\");","map":{"version":3,"names":["React","useState","useCallback","styled","Button","useModal","IconButton","AddIcon","MinusIcon","Skeleton","Text","useLocation","BigNumber","ConnectWalletButton","Balance","useWeb3React","useFarmUser","useLpTokenPrice","fetchFarmUserDataAsync","useTranslation","useERC20","BASE_ADD_LIQUIDITY_URL","useAppDispatch","getAddress","getLiquidityUrlPathParts","getBalanceAmount","getBalanceNumber","getFullDisplayBalance","useUnstakeFarms","DepositModal","WithdrawModal","useStakeFarms","useApproveFarm","ActionContainer","ActionTitles","ActionContent","Earned","jsxDEV","_jsxDEV","IconButtonWrapper","div","_c","Staked","pid","lpSymbol","lpAddresses","quoteToken","token","userDataReady","_s","t","account","requestedApproval","setRequestedApproval","allowance","tokenBalance","stakedBalance","onStake","onUnstake","location","lpPrice","isApproved","isGreaterThan","lpAddress","liquidityUrlPathParts","quoteTokenAddress","address","tokenAddress","addLiquidityUrl","handleStake","amount","dispatch","pids","handleUnstake","displayBalance","stakedBalanceBigNumber","gt","lt","toFixed","ROUND_DOWN","toLocaleString","onPresentDeposit","max","onConfirm","tokenName","fileName","_jsxFileName","lineNumber","columnNumber","onPresentWithdraw","lpContract","onApprove","handleApprove","e","console","error","children","bold","textTransform","color","fontSize","width","pr","decimals","value","times","unit","prefix","variant","onClick","mr","disabled","some","item","pathname","includes","toUpperCase","marginBottom","marginTop","_c2","$RefreshReg$"],"sources":["C:/Users/Devrim/Documents/swapUIforProspBlast/src/views/Farms/components/FarmTable/Actions/StakedAction.tsx"],"sourcesContent":["import React, { useState, useCallback } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button, useModal, IconButton, AddIcon, MinusIcon, Skeleton, Text } from '@pancakeswap/uikit'\r\nimport { useLocation } from 'react-router-dom'\r\nimport { BigNumber } from 'bignumber.js'\r\nimport ConnectWalletButton from 'components/ConnectWalletButton'\r\nimport Balance from 'components/Balance'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useFarmUser, useLpTokenPrice } from 'state/farms/hooks'\r\nimport { fetchFarmUserDataAsync } from 'state/farms'\r\nimport { FarmWithStakedValue } from 'views/Farms/components/FarmCard/FarmCard'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useERC20 } from 'hooks/useContract'\r\nimport { BASE_ADD_LIQUIDITY_URL } from 'config'\r\nimport { useAppDispatch } from 'state'\r\nimport { getAddress } from 'utils/addressHelpers'\r\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts'\r\nimport { getBalanceAmount, getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\r\nimport useUnstakeFarms from '../../../hooks/useUnstakeFarms'\r\nimport DepositModal from '../../DepositModal'\r\nimport WithdrawModal from '../../WithdrawModal'\r\nimport useStakeFarms from '../../../hooks/useStakeFarms'\r\nimport useApproveFarm from '../../../hooks/useApproveFarm'\r\nimport { ActionContainer, ActionTitles, ActionContent, Earned } from './styles'\r\n\r\nconst IconButtonWrapper = styled.div`\r\n  display: flex;\r\n`\r\n\r\ninterface StackedActionProps extends FarmWithStakedValue {\r\n  userDataReady: boolean\r\n}\r\n\r\nconst Staked: React.FunctionComponent<StackedActionProps> = ({\r\n  pid,\r\n  lpSymbol,\r\n  lpAddresses,\r\n  quoteToken,\r\n  token,\r\n  userDataReady,\r\n}) => {\r\n  const { t } = useTranslation()\r\n  const { account } = useWeb3React()\r\n  const [requestedApproval, setRequestedApproval] = useState(false)\r\n  const { allowance, tokenBalance, stakedBalance } = useFarmUser(pid)\r\n  const { onStake } = useStakeFarms(pid)\r\n  const { onUnstake } = useUnstakeFarms(pid)\r\n  const location = useLocation()\r\n  const lpPrice = useLpTokenPrice(lpSymbol)\r\n\r\n  const isApproved = account && allowance && allowance.isGreaterThan(0)\r\n\r\n  const lpAddress = getAddress(lpAddresses)\r\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({\r\n    quoteTokenAddress: quoteToken.address,\r\n    tokenAddress: token.address,\r\n  })\r\n  const addLiquidityUrl = `${BASE_ADD_LIQUIDITY_URL}/${liquidityUrlPathParts}`\r\n\r\n  const handleStake = async (amount: string) => {\r\n    await onStake(amount)\r\n    dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\r\n  }\r\n\r\n  const handleUnstake = async (amount: string) => {\r\n    await onUnstake(amount)\r\n    dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\r\n  }\r\n\r\n  const displayBalance = useCallback(() => {\r\n    const stakedBalanceBigNumber = getBalanceAmount(stakedBalance)\r\n    if (stakedBalanceBigNumber.gt(0) && stakedBalanceBigNumber.lt(0.0000001)) {\r\n      return stakedBalanceBigNumber.toFixed(10, BigNumber.ROUND_DOWN)\r\n    }\r\n    if (stakedBalanceBigNumber.gt(0) && stakedBalanceBigNumber.lt(0.0001)) {\r\n      return getFullDisplayBalance(stakedBalance).toLocaleString()\r\n    }\r\n    return stakedBalanceBigNumber.toFixed(3, BigNumber.ROUND_DOWN)\r\n  }, [stakedBalance])\r\n\r\n  const [onPresentDeposit] = useModal(\r\n    <DepositModal max={tokenBalance} onConfirm={handleStake} tokenName={lpSymbol} addLiquidityUrl={addLiquidityUrl} />,\r\n  )\r\n  const [onPresentWithdraw] = useModal(\r\n    <WithdrawModal max={stakedBalance} onConfirm={handleUnstake} tokenName={lpSymbol} />,\r\n  )\r\n  const lpContract = useERC20(lpAddress)\r\n  const dispatch = useAppDispatch()\r\n  const { onApprove } = useApproveFarm(lpContract)\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      setRequestedApproval(true)\r\n      await onApprove()\r\n      dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\r\n\r\n      setRequestedApproval(false)\r\n    } catch (e) {\r\n      console.error(e)\r\n    }\r\n  }, [onApprove, dispatch, account, pid])\r\n\r\n  if (!account) {\r\n    return (\r\n      <ActionContainer>\r\n        <ActionTitles>\r\n          <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\r\n            {t('Start Farming')}\r\n          </Text>\r\n        </ActionTitles>\r\n        <ActionContent>\r\n          <ConnectWalletButton width=\"100%\" />\r\n        </ActionContent>\r\n      </ActionContainer>\r\n    )\r\n  }\r\n\r\n  if (isApproved) {\r\n    if (stakedBalance.gt(0)) {\r\n      return (\r\n        <ActionContainer>\r\n          <ActionTitles>\r\n            <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\" pr=\"4px\">\r\n              {lpSymbol}\r\n            </Text>\r\n            <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\r\n              {t('Staked')}\r\n            </Text>\r\n          </ActionTitles>\r\n          <ActionContent>\r\n            <div>\r\n              <Earned>{displayBalance()}</Earned>\r\n              {stakedBalance.gt(0) && lpPrice.gt(0) && (\r\n                <Balance\r\n                  fontSize=\"12px\"\r\n                  color=\"textSubtle\"\r\n                  decimals={2}\r\n                  value={getBalanceNumber(lpPrice.times(stakedBalance))}\r\n                  unit=\" USD\"\r\n                  prefix=\"~\"\r\n                />\r\n              )}\r\n            </div>\r\n            <IconButtonWrapper>\r\n              <IconButton variant=\"secondary\" onClick={onPresentWithdraw} mr=\"6px\">\r\n                <MinusIcon color=\"primary\" width=\"14px\" />\r\n              </IconButton>\r\n              <IconButton\r\n                variant=\"secondary\"\r\n                onClick={onPresentDeposit}\r\n                disabled={['history', 'archived'].some((item) => location.pathname.includes(item))}\r\n              >\r\n                <AddIcon color=\"primary\" width=\"14px\" />\r\n              </IconButton>\r\n            </IconButtonWrapper>\r\n          </ActionContent>\r\n        </ActionContainer>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <ActionContainer>\r\n        <ActionTitles>\r\n          <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\" pr=\"4px\">\r\n            {t('Stake').toUpperCase()}\r\n          </Text>\r\n          <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\">\r\n            {lpSymbol}\r\n          </Text>\r\n        </ActionTitles>\r\n        <ActionContent>\r\n          <Button\r\n            width=\"100%\"\r\n            onClick={onPresentDeposit}\r\n            variant=\"secondary\"\r\n            disabled={['history', 'archived'].some((item) => location.pathname.includes(item))}\r\n          >\r\n            {t('Stake LP')}\r\n          </Button>\r\n        </ActionContent>\r\n      </ActionContainer>\r\n    )\r\n  }\r\n\r\n  if (!userDataReady) {\r\n    return (\r\n      <ActionContainer>\r\n        <ActionTitles>\r\n          <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\r\n            {t('Start Farming')}\r\n          </Text>\r\n        </ActionTitles>\r\n        <ActionContent>\r\n          <Skeleton width={180} marginBottom={28} marginTop={14} />\r\n        </ActionContent>\r\n      </ActionContainer>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <ActionContainer>\r\n      <ActionTitles>\r\n        <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\r\n          {t('Enable Farm')}\r\n        </Text>\r\n      </ActionTitles>\r\n      <ActionContent>\r\n        <Button width=\"100%\" disabled={requestedApproval} onClick={handleApprove} variant=\"secondary\">\r\n          {t('Enable')}\r\n        </Button>\r\n      </ActionContent>\r\n    </ActionContainer>\r\n  )\r\n}\r\n\r\nexport default Staked\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}