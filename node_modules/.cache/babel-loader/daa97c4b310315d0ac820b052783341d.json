{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Devrim\\\\Documents\\\\FRANKswapUIforProspBlast\\\\src\\\\views\\\\Predictions\\\\context\\\\SwiperProvider.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SwiperContext = /*#__PURE__*/createContext(undefined);\n\nconst SwiperProvider = ({\n  children\n}) => {\n  _s();\n\n  const [swiper, setSwiper] = useState(null);\n\n  const destroySwiper = () => {\n    if (swiper) {\n      swiper.destroy();\n      setSwiper(null);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(SwiperContext.Provider, {\n    value: {\n      swiper,\n      setSwiper,\n      destroySwiper\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 10\n  }, this);\n};\n\n_s(SwiperProvider, \"jjNuDYzn6ZtlmPjCBkxO1R+7Bl0=\");\n\n_c = SwiperProvider;\nexport default SwiperProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"SwiperProvider\");","map":{"version":3,"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/views/Predictions/context/SwiperProvider.tsx"],"names":["React","createContext","useState","SwiperContext","undefined","SwiperProvider","children","swiper","setSwiper","destroySwiper","destroy"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAAyCC,QAAzC,QAAyD,OAAzD;;AASA,OAAO,MAAMC,aAAa,gBAAGF,aAAa,CAAUG,SAAV,CAAnC;;AAEP,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AACvC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAa,IAAb,CAApC;;AAEA,QAAMO,aAAa,GAAG,MAAM;AAC1B,QAAIF,MAAJ,EAAY;AACVA,MAAAA,MAAM,CAACG,OAAP;AACAF,MAAAA,SAAS,CAAC,IAAD,CAAT;AACD;AACF,GALD;;AAOA,sBAAO,QAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAE;AAAED,MAAAA,MAAF;AAAUC,MAAAA,SAAV;AAAqBC,MAAAA;AAArB,KAA/B;AAAA,cAAsEH;AAAtE;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAXD;;GAAMD,c;;KAAAA,c;AAaN,eAAeA,cAAf","sourcesContent":["import React, { createContext, Dispatch, useState } from 'react'\r\nimport SwiperCore from 'swiper'\r\n\r\ninterface Context {\r\n  swiper: SwiperCore\r\n  setSwiper: Dispatch<React.SetStateAction<SwiperCore>>\r\n  destroySwiper: () => void\r\n}\r\n\r\nexport const SwiperContext = createContext<Context>(undefined)\r\n\r\nconst SwiperProvider = ({ children }) => {\r\n  const [swiper, setSwiper] = useState<SwiperCore>(null)\r\n\r\n  const destroySwiper = () => {\r\n    if (swiper) {\r\n      swiper.destroy()\r\n      setSwiper(null)\r\n    }\r\n  }\r\n\r\n  return <SwiperContext.Provider value={{ swiper, setSwiper, destroySwiper }}>{children}</SwiperContext.Provider>\r\n}\r\n\r\nexport default SwiperProvider\r\n"]},"metadata":{},"sourceType":"module"}