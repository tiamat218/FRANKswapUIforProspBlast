{"ast":null,"code":"import React from'react';import{CardBody,Text,WaitIcon}from'@pancakeswap/uikit';import{useTranslation}from'contexts/Localization';import{BetPosition}from'state/types';import{useGetCurrentEpoch,useGetTotalIntervalBlocks}from'state/hooks';import{formatRoundTime}from'../../helpers';import useRoundCountdown from'../../hooks/useRoundCountdown';import{RoundResultBox}from'../RoundResult';import MultiplierArrow from'./MultiplierArrow';import Card from'./Card';import CardHeader from'./CardHeader';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const SoonRoundCard=_ref=>{let{round}=_ref;const{t}=useTranslation();const interval=useGetTotalIntervalBlocks();const currentEpoch=useGetCurrentEpoch();const estimatedEndBlock=round.startBlock+interval;const seconds=useRoundCountdown(round.epoch-currentEpoch+1);const countdown=formatRoundTime(seconds);return/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(CardHeader,{status:\"soon\",icon:/*#__PURE__*/_jsx(WaitIcon,{mr:\"4px\",width:\"21px\"}),title:t('Later'),epoch:round.epoch,blockNumber:estimatedEndBlock}),/*#__PURE__*/_jsxs(CardBody,{p:\"16px\",children:[/*#__PURE__*/_jsx(MultiplierArrow,{isDisabled:true}),/*#__PURE__*/_jsx(RoundResultBox,{children:/*#__PURE__*/_jsxs(Text,{textAlign:\"center\",children:[/*#__PURE__*/_jsx(Text,{bold:true,children:t('Entry starts')}),/*#__PURE__*/_jsx(Text,{fontSize:\"24px\",bold:true,children:\"~\".concat(countdown)})]})}),/*#__PURE__*/_jsx(MultiplierArrow,{betPosition:BetPosition.BEAR,isDisabled:true})]})]});};export default SoonRoundCard;","map":{"version":3,"names":["React","CardBody","Text","WaitIcon","useTranslation","BetPosition","useGetCurrentEpoch","useGetTotalIntervalBlocks","formatRoundTime","useRoundCountdown","RoundResultBox","MultiplierArrow","Card","CardHeader","jsx","_jsx","jsxs","_jsxs","SoonRoundCard","_ref","round","t","interval","currentEpoch","estimatedEndBlock","startBlock","seconds","epoch","countdown","children","status","icon","mr","width","title","blockNumber","p","isDisabled","textAlign","bold","fontSize","concat","betPosition","BEAR"],"sources":["C:/Users/frkul/Documents/swapUI_pancake-frontend/src/views/Predictions/components/RoundCard/SoonRoundCard.tsx"],"sourcesContent":["import React from 'react'\r\nimport { CardBody, Text, WaitIcon } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { NodeRound, BetPosition } from 'state/types'\r\nimport { useGetCurrentEpoch, useGetTotalIntervalBlocks } from 'state/hooks'\r\nimport { formatRoundTime } from '../../helpers'\r\nimport useRoundCountdown from '../../hooks/useRoundCountdown'\r\nimport { RoundResultBox } from '../RoundResult'\r\nimport MultiplierArrow from './MultiplierArrow'\r\nimport Card from './Card'\r\nimport CardHeader from './CardHeader'\r\n\r\ninterface SoonRoundCardProps {\r\n  round: NodeRound\r\n}\r\n\r\nconst SoonRoundCard: React.FC<SoonRoundCardProps> = ({ round }) => {\r\n  const { t } = useTranslation()\r\n  const interval = useGetTotalIntervalBlocks()\r\n  const currentEpoch = useGetCurrentEpoch()\r\n  const estimatedEndBlock = round.startBlock + interval\r\n  const seconds = useRoundCountdown(round.epoch - currentEpoch + 1)\r\n  const countdown = formatRoundTime(seconds)\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader\r\n        status=\"soon\"\r\n        icon={<WaitIcon mr=\"4px\" width=\"21px\" />}\r\n        title={t('Later')}\r\n        epoch={round.epoch}\r\n        blockNumber={estimatedEndBlock}\r\n      />\r\n      <CardBody p=\"16px\">\r\n        <MultiplierArrow isDisabled />\r\n        <RoundResultBox>\r\n          <Text textAlign=\"center\">\r\n            <Text bold>{t('Entry starts')}</Text>\r\n            <Text fontSize=\"24px\" bold>\r\n              {`~${countdown}`}\r\n            </Text>\r\n          </Text>\r\n        </RoundResultBox>\r\n        <MultiplierArrow betPosition={BetPosition.BEAR} isDisabled />\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default SoonRoundCard\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,QAAQ,CAAEC,IAAI,CAAEC,QAAQ,KAAQ,oBAAoB,CAC7D,OAASC,cAAc,KAAQ,uBAAuB,CACtD,OAAoBC,WAAW,KAAQ,aAAa,CACpD,OAASC,kBAAkB,CAAEC,yBAAyB,KAAQ,aAAa,CAC3E,OAASC,eAAe,KAAQ,eAAe,CAC/C,MAAO,CAAAC,iBAAiB,KAAM,+BAA+B,CAC7D,OAASC,cAAc,KAAQ,gBAAgB,CAC/C,MAAO,CAAAC,eAAe,KAAM,mBAAmB,CAC/C,MAAO,CAAAC,IAAI,KAAM,QAAQ,CACzB,MAAO,CAAAC,UAAU,KAAM,cAAc,QAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAMrC,KAAM,CAAAC,aAA2C,CAAGC,IAAA,EAAe,IAAd,CAAEC,KAAM,CAAC,CAAAD,IAAA,CAC5D,KAAM,CAAEE,CAAE,CAAC,CAAGjB,cAAc,CAAC,CAAC,CAC9B,KAAM,CAAAkB,QAAQ,CAAGf,yBAAyB,CAAC,CAAC,CAC5C,KAAM,CAAAgB,YAAY,CAAGjB,kBAAkB,CAAC,CAAC,CACzC,KAAM,CAAAkB,iBAAiB,CAAGJ,KAAK,CAACK,UAAU,CAAGH,QAAQ,CACrD,KAAM,CAAAI,OAAO,CAAGjB,iBAAiB,CAACW,KAAK,CAACO,KAAK,CAAGJ,YAAY,CAAG,CAAC,CAAC,CACjE,KAAM,CAAAK,SAAS,CAAGpB,eAAe,CAACkB,OAAO,CAAC,CAE1C,mBACET,KAAA,CAACL,IAAI,EAAAiB,QAAA,eACHd,IAAA,CAACF,UAAU,EACTiB,MAAM,CAAC,MAAM,CACbC,IAAI,cAAEhB,IAAA,CAACZ,QAAQ,EAAC6B,EAAE,CAAC,KAAK,CAACC,KAAK,CAAC,MAAM,CAAE,CAAE,CACzCC,KAAK,CAAEb,CAAC,CAAC,OAAO,CAAE,CAClBM,KAAK,CAAEP,KAAK,CAACO,KAAM,CACnBQ,WAAW,CAAEX,iBAAkB,CAChC,CAAC,cACFP,KAAA,CAAChB,QAAQ,EAACmC,CAAC,CAAC,MAAM,CAAAP,QAAA,eAChBd,IAAA,CAACJ,eAAe,EAAC0B,UAAU,MAAE,CAAC,cAC9BtB,IAAA,CAACL,cAAc,EAAAmB,QAAA,cACbZ,KAAA,CAACf,IAAI,EAACoC,SAAS,CAAC,QAAQ,CAAAT,QAAA,eACtBd,IAAA,CAACb,IAAI,EAACqC,IAAI,MAAAV,QAAA,CAAER,CAAC,CAAC,cAAc,CAAC,CAAO,CAAC,cACrCN,IAAA,CAACb,IAAI,EAACsC,QAAQ,CAAC,MAAM,CAACD,IAAI,MAAAV,QAAA,KAAAY,MAAA,CACnBb,SAAS,EACV,CAAC,EACH,CAAC,CACO,CAAC,cACjBb,IAAA,CAACJ,eAAe,EAAC+B,WAAW,CAAErC,WAAW,CAACsC,IAAK,CAACN,UAAU,MAAE,CAAC,EACrD,CAAC,EACP,CAAC,CAEX,CAAC,CAED,cAAe,CAAAnB,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module"}