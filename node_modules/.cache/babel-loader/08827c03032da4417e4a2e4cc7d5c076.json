{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Devrim\\\\Documents\\\\swapUIforProspBlast\\\\src\\\\views\\\\Predictions\\\\components\\\\RoundCard\\\\CollectWinningsOverlay.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport styled from 'styled-components';\nimport { Flex, TrophyGoldIcon } from '@pancakeswap/uikit';\nimport { useGetIsClaimable } from 'state/hooks';\nimport { useTranslation } from 'contexts/Localization';\nimport CollectWinningsButton from '../CollectWinningsButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Wrapper = styled(Flex)`\n  background-color: ${({\n  theme\n}) => theme.colors.secondary};\n  left: 0;\n  position: absolute;\n  width: 100%;\n  z-index: 30;\n\n  ${({\n  isBottom\n}) => {\n  return isBottom ? `\n      border-radius: 0 0 16px 16px;\n      bottom: 0;\n    ` : `\n      top: 37px; // Card header height\n    `;\n}}\n`;\n_c = Wrapper;\nconst CollectWinningsOverlay = ({\n  epoch,\n  payout,\n  betAmount,\n  isBottom = false,\n  ...props\n}) => {\n  _s();\n  const {\n    t\n  } = useTranslation();\n  const isClaimable = useGetIsClaimable(epoch);\n  if (!isClaimable) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    alignItems: \"center\",\n    p: \"16px\",\n    isBottom: isBottom,\n    ...props,\n    children: [/*#__PURE__*/_jsxDEV(TrophyGoldIcon, {\n      width: \"64px\",\n      style: {\n        flex: 'none'\n      },\n      mr: \"8px\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CollectWinningsButton, {\n      payout: payout,\n      betAmount: betAmount,\n      epoch: epoch,\n      hasClaimed: false,\n      width: \"100%\",\n      children: t('Collect Winnings')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(CollectWinningsOverlay, \"tTkVZSVID0y3PqqpruOk7MnC8gI=\", false, function () {\n  return [useTranslation, useGetIsClaimable];\n});\n_c2 = CollectWinningsOverlay;\nexport default CollectWinningsOverlay;\nvar _c, _c2;\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"CollectWinningsOverlay\");","map":{"version":3,"names":["React","styled","Flex","TrophyGoldIcon","useGetIsClaimable","useTranslation","CollectWinningsButton","jsxDEV","_jsxDEV","Wrapper","theme","colors","secondary","isBottom","_c","CollectWinningsOverlay","epoch","payout","betAmount","props","_s","t","isClaimable","alignItems","p","children","width","style","flex","mr","fileName","_jsxFileName","lineNumber","columnNumber","hasClaimed","_c2","$RefreshReg$"],"sources":["C:/Users/Devrim/Documents/swapUIforProspBlast/src/views/Predictions/components/RoundCard/CollectWinningsOverlay.tsx"],"sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Flex, TrophyGoldIcon } from '@pancakeswap/uikit'\r\nimport { useGetIsClaimable } from 'state/hooks'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport CollectWinningsButton from '../CollectWinningsButton'\r\n\r\ninterface CollectWinningsOverlayProps {\r\n  epoch: number\r\n  payout: string\r\n  betAmount: string\r\n  isBottom?: boolean\r\n}\r\n\r\nconst Wrapper = styled(Flex)<{ isBottom: CollectWinningsOverlayProps['isBottom'] }>`\r\n  background-color: ${({ theme }) => theme.colors.secondary};\r\n  left: 0;\r\n  position: absolute;\r\n  width: 100%;\r\n  z-index: 30;\r\n\r\n  ${({ isBottom }) => {\r\n    return isBottom\r\n      ? `\r\n      border-radius: 0 0 16px 16px;\r\n      bottom: 0;\r\n    `\r\n      : `\r\n      top: 37px; // Card header height\r\n    `\r\n  }}\r\n`\r\n\r\nconst CollectWinningsOverlay: React.FC<CollectWinningsOverlayProps> = ({\r\n  epoch,\r\n  payout,\r\n  betAmount,\r\n  isBottom = false,\r\n  ...props\r\n}) => {\r\n  const { t } = useTranslation()\r\n  const isClaimable = useGetIsClaimable(epoch)\r\n\r\n  if (!isClaimable) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <Wrapper alignItems=\"center\" p=\"16px\" isBottom={isBottom} {...props}>\r\n      <TrophyGoldIcon width=\"64px\" style={{ flex: 'none' }} mr=\"8px\" />\r\n      <CollectWinningsButton payout={payout} betAmount={betAmount} epoch={epoch} hasClaimed={false} width=\"100%\">\r\n        {t('Collect Winnings')}\r\n      </CollectWinningsButton>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default CollectWinningsOverlay\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,IAAI,EAAEC,cAAc,QAAQ,oBAAoB;AACzD,SAASC,iBAAiB,QAAQ,aAAa;AAC/C,SAASC,cAAc,QAAQ,uBAAuB;AACtD,OAAOC,qBAAqB,MAAM,0BAA0B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAS5D,MAAMC,OAAO,GAAGR,MAAM,CAACC,IAAI,CAAwD;AACnF,sBAAsB,CAAC;EAAEQ;AAAM,CAAC,KAAKA,KAAK,CAACC,MAAM,CAACC,SAAS;AAC3D;AACA;AACA;AACA;AACA;AACA,IAAI,CAAC;EAAEC;AAAS,CAAC,KAAK;EAClB,OAAOA,QAAQ,GACX;AACR;AACA;AACA,KAAK,GACG;AACR;AACA,KAAK;AACH,CAAC;AACH,CAAC;AAAAC,EAAA,GAjBKL,OAAO;AAmBb,MAAMM,sBAA6D,GAAGA,CAAC;EACrEC,KAAK;EACLC,MAAM;EACNC,SAAS;EACTL,QAAQ,GAAG,KAAK;EAChB,GAAGM;AACL,CAAC,KAAK;EAAAC,EAAA;EACJ,MAAM;IAAEC;EAAE,CAAC,GAAGhB,cAAc,CAAC,CAAC;EAC9B,MAAMiB,WAAW,GAAGlB,iBAAiB,CAACY,KAAK,CAAC;EAE5C,IAAI,CAACM,WAAW,EAAE;IAChB,OAAO,IAAI;EACb;EAEA,oBACEd,OAAA,CAACC,OAAO;IAACc,UAAU,EAAC,QAAQ;IAACC,CAAC,EAAC,MAAM;IAACX,QAAQ,EAAEA,QAAS;IAAA,GAAKM,KAAK;IAAAM,QAAA,gBACjEjB,OAAA,CAACL,cAAc;MAACuB,KAAK,EAAC,MAAM;MAACC,KAAK,EAAE;QAAEC,IAAI,EAAE;MAAO,CAAE;MAACC,EAAE,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACjEzB,OAAA,CAACF,qBAAqB;MAACW,MAAM,EAAEA,MAAO;MAACC,SAAS,EAAEA,SAAU;MAACF,KAAK,EAAEA,KAAM;MAACkB,UAAU,EAAE,KAAM;MAACR,KAAK,EAAC,MAAM;MAAAD,QAAA,EACvGJ,CAAC,CAAC,kBAAkB;IAAC;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjB,CAAC;AAEd,CAAC;AAAAb,EAAA,CAtBKL,sBAA6D;EAAA,QAOnDV,cAAc,EACRD,iBAAiB;AAAA;AAAA+B,GAAA,GARjCpB,sBAA6D;AAwBnE,eAAeA,sBAAsB;AAAA,IAAAD,EAAA,EAAAqB,GAAA;AAAAC,YAAA,CAAAtB,EAAA;AAAAsB,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}