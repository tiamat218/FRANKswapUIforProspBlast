{"ast":null,"code":"import _taggedTemplateLiteral from\"C:/Users/frkul/Documents/swapUI_pancake-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2,_templateObject3;import React from'react';import styled from'styled-components';import{Card,CardBody,CardFooter,Flex,Skeleton,Button,LaurelLeftIcon,LaurelRightIcon,CheckmarkCircleIcon,useModal}from'@pancakeswap/uikit';import{CLAIM,OVER}from'config/constants/trading-competition/easterPhases';import ConnectWalletButton from'components/ConnectWalletButton';import{useTranslation}from'contexts/Localization';import UserPrizeGrid from'./UserPrizeGrid';import ClaimModal from'../ClaimModal';import CardUserInfo from'./CardUserInfo';import{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";const StyledCard=styled(Card)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  \",\" {\\n    min-width: 380px;\\n  }\\n\"])),_ref=>{let{theme}=_ref;return theme.mediaQueries.sm;});const StyledCardFooter=styled(CardFooter)(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  background: \",\";\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n\\n  svg {\\n    height: 32px;\\n    width: auto;\\n    fill: \",\";\\n  }\\n\"])),_ref2=>{let{theme}=_ref2;return theme.card.cardHeaderBackground.default;},_ref3=>{let{theme}=_ref3;return theme.colors.warning;});const StyledButton=styled(Button)(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  svg {\\n    margin-right: 4px;\\n    height: 20px;\\n    width: auto;\\n    fill: \",\";\\n  }\\n\"])),_ref4=>{let{theme}=_ref4;return theme.colors.textDisabled;});const ScoreCard=_ref5=>{let{hasRegistered,account,userTradingInformation,profile,isLoading,userLeaderboardInformation,currentPhase,userCanClaimPrizes,finishedAndPrizesClaimed,finishedAndNothingToClaim,onClaimSuccess}=_ref5;const{t}=useTranslation();const[onPresentClaimModal]=useModal(/*#__PURE__*/_jsx(ClaimModal,{userTradingInformation:userTradingInformation,onClaimSuccess:onClaimSuccess}),false);const isClaimButtonDisabled=Boolean(isLoading||finishedAndPrizesClaimed||finishedAndNothingToClaim);const{hasUserClaimed}=userTradingInformation;const getClaimButtonText=()=>{if(userCanClaimPrizes){return t('Claim prizes');}// User has already claimed prizes\nif(hasUserClaimed){return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(CheckmarkCircleIcon,{}),\" \",t('Prizes Claimed!')]});}// User has nothing to claim\nreturn t('Nothing to claim');};return/*#__PURE__*/_jsxs(StyledCard,{mt:\"24px\",children:[/*#__PURE__*/_jsx(CardBody,{children:isLoading?/*#__PURE__*/_jsx(Flex,{mt:\"24px\",justifyContent:\"center\",alignItems:\"center\",children:/*#__PURE__*/_jsx(Skeleton,{width:\"100%\",height:\"60px\"})}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(CardUserInfo,{hasRegistered:hasRegistered,account:account,profile:profile,userLeaderboardInformation:userLeaderboardInformation,currentPhase:currentPhase}),hasRegistered&&(currentPhase.state===CLAIM||currentPhase.state===OVER)&&/*#__PURE__*/_jsx(UserPrizeGrid,{userTradingInformation:userTradingInformation}),!account&&/*#__PURE__*/_jsx(Flex,{mt:\"24px\",justifyContent:\"center\",children:/*#__PURE__*/_jsx(ConnectWalletButton,{})})]})}),hasRegistered&&currentPhase.state===CLAIM&&/*#__PURE__*/_jsxs(StyledCardFooter,{children:[/*#__PURE__*/_jsx(LaurelLeftIcon,{}),/*#__PURE__*/_jsx(StyledButton,{disabled:isClaimButtonDisabled,mx:\"18px\",onClick:()=>onPresentClaimModal(),children:getClaimButtonText()}),/*#__PURE__*/_jsx(LaurelRightIcon,{})]})]});};export default ScoreCard;","map":{"version":3,"names":["React","styled","Card","CardBody","CardFooter","Flex","Skeleton","Button","LaurelLeftIcon","LaurelRightIcon","CheckmarkCircleIcon","useModal","CLAIM","OVER","ConnectWalletButton","useTranslation","UserPrizeGrid","ClaimModal","CardUserInfo","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","StyledCard","_templateObject","_taggedTemplateLiteral","_ref","theme","mediaQueries","sm","StyledCardFooter","_templateObject2","_ref2","card","cardHeaderBackground","default","_ref3","colors","warning","StyledButton","_templateObject3","_ref4","textDisabled","ScoreCard","_ref5","hasRegistered","account","userTradingInformation","profile","isLoading","userLeaderboardInformation","currentPhase","userCanClaimPrizes","finishedAndPrizesClaimed","finishedAndNothingToClaim","onClaimSuccess","t","onPresentClaimModal","isClaimButtonDisabled","Boolean","hasUserClaimed","getClaimButtonText","children","mt","justifyContent","alignItems","width","height","state","disabled","mx","onClick"],"sources":["C:/Users/frkul/Documents/swapUI_pancake-frontend/src/views/TradingCompetition/components/YourScore/ScoreCard.tsx"],"sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardFooter,\r\n  Flex,\r\n  Skeleton,\r\n  Button,\r\n  LaurelLeftIcon,\r\n  LaurelRightIcon,\r\n  CheckmarkCircleIcon,\r\n  useModal,\r\n} from '@pancakeswap/uikit'\r\nimport { CLAIM, OVER } from 'config/constants/trading-competition/easterPhases'\r\nimport ConnectWalletButton from 'components/ConnectWalletButton'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport UserPrizeGrid from './UserPrizeGrid'\r\nimport ClaimModal from '../ClaimModal'\r\nimport { YourScoreProps } from '../../types'\r\nimport CardUserInfo from './CardUserInfo'\r\n\r\nconst StyledCard = styled(Card)`\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    min-width: 380px;\r\n  }\r\n`\r\n\r\nconst StyledCardFooter = styled(CardFooter)`\r\n  background: ${({ theme }) => theme.card.cardHeaderBackground.default};\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  svg {\r\n    height: 32px;\r\n    width: auto;\r\n    fill: ${({ theme }) => theme.colors.warning};\r\n  }\r\n`\r\n\r\nconst StyledButton = styled(Button)`\r\n  svg {\r\n    margin-right: 4px;\r\n    height: 20px;\r\n    width: auto;\r\n    fill: ${({ theme }) => theme.colors.textDisabled};\r\n  }\r\n`\r\n\r\nconst ScoreCard: React.FC<YourScoreProps> = ({\r\n  hasRegistered,\r\n  account,\r\n  userTradingInformation,\r\n  profile,\r\n  isLoading,\r\n  userLeaderboardInformation,\r\n  currentPhase,\r\n  userCanClaimPrizes,\r\n  finishedAndPrizesClaimed,\r\n  finishedAndNothingToClaim,\r\n  onClaimSuccess,\r\n}) => {\r\n  const { t } = useTranslation()\r\n  const [onPresentClaimModal] = useModal(\r\n    <ClaimModal userTradingInformation={userTradingInformation} onClaimSuccess={onClaimSuccess} />,\r\n    false,\r\n  )\r\n  const isClaimButtonDisabled = Boolean(isLoading || finishedAndPrizesClaimed || finishedAndNothingToClaim)\r\n  const { hasUserClaimed } = userTradingInformation\r\n\r\n  const getClaimButtonText = () => {\r\n    if (userCanClaimPrizes) {\r\n      return t('Claim prizes')\r\n    }\r\n    // User has already claimed prizes\r\n    if (hasUserClaimed) {\r\n      return (\r\n        <>\r\n          <CheckmarkCircleIcon /> {t('Prizes Claimed!')}\r\n        </>\r\n      )\r\n    }\r\n    // User has nothing to claim\r\n    return t('Nothing to claim')\r\n  }\r\n\r\n  return (\r\n    <StyledCard mt=\"24px\">\r\n      <CardBody>\r\n        {isLoading ? (\r\n          <Flex mt=\"24px\" justifyContent=\"center\" alignItems=\"center\">\r\n            <Skeleton width=\"100%\" height=\"60px\" />\r\n          </Flex>\r\n        ) : (\r\n          <>\r\n            <CardUserInfo\r\n              hasRegistered={hasRegistered}\r\n              account={account}\r\n              profile={profile}\r\n              userLeaderboardInformation={userLeaderboardInformation}\r\n              currentPhase={currentPhase}\r\n            />\r\n            {hasRegistered && (currentPhase.state === CLAIM || currentPhase.state === OVER) && (\r\n              <UserPrizeGrid userTradingInformation={userTradingInformation} />\r\n            )}\r\n            {!account && (\r\n              <Flex mt=\"24px\" justifyContent=\"center\">\r\n                <ConnectWalletButton />\r\n              </Flex>\r\n            )}\r\n          </>\r\n        )}\r\n      </CardBody>\r\n      {hasRegistered && currentPhase.state === CLAIM && (\r\n        <StyledCardFooter>\r\n          <LaurelLeftIcon />\r\n          <StyledButton disabled={isClaimButtonDisabled} mx=\"18px\" onClick={() => onPresentClaimModal()}>\r\n            {getClaimButtonText()}\r\n          </StyledButton>\r\n          <LaurelRightIcon />\r\n        </StyledCardFooter>\r\n      )}\r\n    </StyledCard>\r\n  )\r\n}\r\n\r\nexport default ScoreCard\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}