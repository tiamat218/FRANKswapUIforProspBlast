{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Devrim\\\\Documents\\\\FRANKswapUIforProspBlast\\\\src\\\\views\\\\Lottery\\\\components\\\\CheckPrizesSection.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { Button, Heading, Flex, useModal, AutoRenewIcon } from '@pancakeswap/uikit';\nimport { useWeb3React } from '@web3-react/core';\nimport { LotteryStatus } from 'config/constants/types';\nimport { useTranslation } from 'contexts/Localization';\nimport { useGetUserLotteriesGraphData, useLottery } from 'state/lottery/hooks';\nimport ConnectWalletButton from 'components/ConnectWalletButton';\nimport ClaimPrizesModal from './ClaimPrizesModal';\nimport useGetUnclaimedRewards, { FetchStatus } from '../hooks/useGetUnclaimedRewards';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TicketImage = styled.img`\n  height: 60px;\n  ${({\n  theme\n}) => theme.mediaQueries.sm} {\n    height: 100px;\n  }\n`;\n_c = TicketImage;\nconst TornTicketImage = styled.img`\n  height: 54px;\n  ${({\n  theme\n}) => theme.mediaQueries.sm} {\n    height: 84px;\n  }\n`;\n_c2 = TornTicketImage;\n\nconst CheckPrizesSection = () => {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  const {\n    account\n  } = useWeb3React();\n  const {\n    isTransitioning,\n    currentRound: {\n      status\n    }\n  } = useLottery();\n  const {\n    fetchAllRewards,\n    unclaimedRewards,\n    fetchStatus\n  } = useGetUnclaimedRewards();\n  const userLotteryData = useGetUserLotteriesGraphData();\n  const [hasCheckedForRewards, setHasCheckedForRewards] = useState(false);\n  const [hasRewardsToClaim, setHasRewardsToClaim] = useState(false);\n  const [onPresentClaimModal] = useModal( /*#__PURE__*/_jsxDEV(ClaimPrizesModal, {\n    roundsToClaim: unclaimedRewards\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 42\n  }, this), false);\n  const isFetchingRewards = fetchStatus === FetchStatus.IN_PROGRESS;\n  const lotteryIsNotClaimable = status === LotteryStatus.CLOSE;\n  const isCheckNowDisabled = !userLotteryData.account || lotteryIsNotClaimable;\n  useEffect(() => {\n    if (fetchStatus === FetchStatus.SUCCESS) {\n      // Manage showing unclaimed rewards modal once per page load / once per lottery state change\n      if (unclaimedRewards.length > 0 && !hasCheckedForRewards) {\n        setHasRewardsToClaim(true);\n        setHasCheckedForRewards(true);\n        onPresentClaimModal();\n      }\n\n      if (unclaimedRewards.length === 0 && !hasCheckedForRewards) {\n        setHasRewardsToClaim(false);\n        setHasCheckedForRewards(true);\n      }\n    }\n  }, [unclaimedRewards, hasCheckedForRewards, fetchStatus, onPresentClaimModal]);\n  useEffect(() => {\n    // Clear local state on account change, or when lottery isTransitioning state changes\n    setHasRewardsToClaim(false);\n    setHasCheckedForRewards(false);\n  }, [account, isTransitioning]);\n\n  const getBody = () => {\n    if (!account) {\n      return /*#__PURE__*/_jsxDEV(Flex, {\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(TicketImage, {\n          src: \"/images/lottery/ticket-l.png\",\n          alt: \"lottery ticket\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Flex, {\n          mx: ['4px', null, '16px'],\n          flexDirection: \"column\",\n          alignItems: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(Heading, {\n            textAlign: \"center\",\n            color: \"#F4EEFF\",\n            children: t('Connect your wallet')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Heading, {\n            textAlign: \"center\",\n            color: \"#F4EEFF\",\n            mb: \"24px\",\n            children: t(\"to check if you've won!\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ConnectWalletButton, {\n            width: \"190px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TicketImage, {\n          src: \"/images/lottery/ticket-r.png\",\n          alt: \"lottery ticket\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this);\n    }\n\n    if (hasCheckedForRewards && !hasRewardsToClaim) {\n      return /*#__PURE__*/_jsxDEV(Flex, {\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(TornTicketImage, {\n          src: \"/images/lottery/torn-ticket-l.png\",\n          alt: \"torn lottery ticket\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Flex, {\n          mx: ['4px', null, '16px'],\n          flexDirection: \"column\",\n          children: [/*#__PURE__*/_jsxDEV(Heading, {\n            textAlign: \"center\",\n            color: \"#F4EEFF\",\n            children: [t('No prizes to collect'), \"...\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Heading, {\n            textAlign: \"center\",\n            color: \"#F4EEFF\",\n            children: t('Better luck next time!')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TornTicketImage, {\n          src: \"/images/lottery/torn-ticket-r.png\",\n          alt: \"torn lottery ticket\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this);\n    }\n\n    if (hasCheckedForRewards && hasRewardsToClaim) {\n      return /*#__PURE__*/_jsxDEV(Flex, {\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(TicketImage, {\n          src: \"/images/lottery/ticket-l.png\",\n          alt: \"lottery ticket\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Flex, {\n          mx: ['4px', null, '16px'],\n          flexDirection: \"column\",\n          children: [/*#__PURE__*/_jsxDEV(Heading, {\n            textAlign: \"center\",\n            color: \"#F4EEFF\",\n            children: t('Congratulations!')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Heading, {\n            textAlign: \"center\",\n            color: \"#F4EEFF\",\n            children: t('Why not play again')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TicketImage, {\n          src: \"/images/lottery/ticket-r.png\",\n          alt: \"lottery ticket\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this);\n    }\n\n    const checkNowText = () => {\n      if (lotteryIsNotClaimable) {\n        return `${t('Calculating rewards')}...`;\n      }\n\n      if (isFetchingRewards) {\n        return t('Checking');\n      }\n\n      return t('Check Now');\n    };\n\n    return /*#__PURE__*/_jsxDEV(Flex, {\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(TicketImage, {\n        src: \"/images/lottery/ticket-l.png\",\n        alt: \"lottery ticket\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        mx: ['4px', null, '16px'],\n        flexDirection: \"column\",\n        children: [/*#__PURE__*/_jsxDEV(Heading, {\n          textAlign: \"center\",\n          color: \"#F4EEFF\",\n          mb: \"24px\",\n          children: t('Are you a winner?')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          disabled: isCheckNowDisabled,\n          onClick: fetchAllRewards,\n          isLoading: isFetchingRewards,\n          endIcon: isFetchingRewards ? /*#__PURE__*/_jsxDEV(AutoRenewIcon, {\n            color: \"currentColor\",\n            spin: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 42\n          }, this) : null,\n          children: checkNowText()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TicketImage, {\n        src: \"/images/lottery/ticket-r.png\",\n        alt: \"lottery ticket\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    children: getBody()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 10\n  }, this);\n};\n\n_s(CheckPrizesSection, \"Dd2/q3ZKrWKWtkYwOQkkADW7rY4=\", false, function () {\n  return [useTranslation, useWeb3React, useLottery, useGetUnclaimedRewards, useGetUserLotteriesGraphData, useModal];\n});\n\n_c3 = CheckPrizesSection;\nexport default CheckPrizesSection;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"TicketImage\");\n$RefreshReg$(_c2, \"TornTicketImage\");\n$RefreshReg$(_c3, \"CheckPrizesSection\");","map":{"version":3,"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/views/Lottery/components/CheckPrizesSection.tsx"],"names":["React","useEffect","useState","styled","Button","Heading","Flex","useModal","AutoRenewIcon","useWeb3React","LotteryStatus","useTranslation","useGetUserLotteriesGraphData","useLottery","ConnectWalletButton","ClaimPrizesModal","useGetUnclaimedRewards","FetchStatus","TicketImage","img","theme","mediaQueries","sm","TornTicketImage","CheckPrizesSection","t","account","isTransitioning","currentRound","status","fetchAllRewards","unclaimedRewards","fetchStatus","userLotteryData","hasCheckedForRewards","setHasCheckedForRewards","hasRewardsToClaim","setHasRewardsToClaim","onPresentClaimModal","isFetchingRewards","IN_PROGRESS","lotteryIsNotClaimable","CLOSE","isCheckNowDisabled","SUCCESS","length","getBody","checkNowText"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button, Heading, Flex, useModal, AutoRenewIcon } from '@pancakeswap/uikit'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { LotteryStatus } from 'config/constants/types'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useGetUserLotteriesGraphData, useLottery } from 'state/lottery/hooks'\r\nimport ConnectWalletButton from 'components/ConnectWalletButton'\r\nimport ClaimPrizesModal from './ClaimPrizesModal'\r\nimport useGetUnclaimedRewards, { FetchStatus } from '../hooks/useGetUnclaimedRewards'\r\n\r\nconst TicketImage = styled.img`\r\n  height: 60px;\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    height: 100px;\r\n  }\r\n`\r\n\r\nconst TornTicketImage = styled.img`\r\n  height: 54px;\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    height: 84px;\r\n  }\r\n`\r\n\r\nconst CheckPrizesSection = () => {\r\n  const { t } = useTranslation()\r\n  const { account } = useWeb3React()\r\n  const {\r\n    isTransitioning,\r\n    currentRound: { status },\r\n  } = useLottery()\r\n  const { fetchAllRewards, unclaimedRewards, fetchStatus } = useGetUnclaimedRewards()\r\n  const userLotteryData = useGetUserLotteriesGraphData()\r\n  const [hasCheckedForRewards, setHasCheckedForRewards] = useState(false)\r\n  const [hasRewardsToClaim, setHasRewardsToClaim] = useState(false)\r\n  const [onPresentClaimModal] = useModal(<ClaimPrizesModal roundsToClaim={unclaimedRewards} />, false)\r\n  const isFetchingRewards = fetchStatus === FetchStatus.IN_PROGRESS\r\n  const lotteryIsNotClaimable = status === LotteryStatus.CLOSE\r\n  const isCheckNowDisabled = !userLotteryData.account || lotteryIsNotClaimable\r\n\r\n  useEffect(() => {\r\n    if (fetchStatus === FetchStatus.SUCCESS) {\r\n      // Manage showing unclaimed rewards modal once per page load / once per lottery state change\r\n      if (unclaimedRewards.length > 0 && !hasCheckedForRewards) {\r\n        setHasRewardsToClaim(true)\r\n        setHasCheckedForRewards(true)\r\n        onPresentClaimModal()\r\n      }\r\n\r\n      if (unclaimedRewards.length === 0 && !hasCheckedForRewards) {\r\n        setHasRewardsToClaim(false)\r\n        setHasCheckedForRewards(true)\r\n      }\r\n    }\r\n  }, [unclaimedRewards, hasCheckedForRewards, fetchStatus, onPresentClaimModal])\r\n\r\n  useEffect(() => {\r\n    // Clear local state on account change, or when lottery isTransitioning state changes\r\n    setHasRewardsToClaim(false)\r\n    setHasCheckedForRewards(false)\r\n  }, [account, isTransitioning])\r\n\r\n  const getBody = () => {\r\n    if (!account) {\r\n      return (\r\n        <Flex alignItems=\"center\" justifyContent=\"center\">\r\n          <TicketImage src=\"/images/lottery/ticket-l.png\" alt=\"lottery ticket\" />\r\n          <Flex mx={['4px', null, '16px']} flexDirection=\"column\" alignItems=\"center\">\r\n            <Heading textAlign=\"center\" color=\"#F4EEFF\">\r\n              {t('Connect your wallet')}\r\n            </Heading>\r\n            <Heading textAlign=\"center\" color=\"#F4EEFF\" mb=\"24px\">\r\n              {t(\"to check if you've won!\")}\r\n            </Heading>\r\n            <ConnectWalletButton width=\"190px\" />\r\n          </Flex>\r\n          <TicketImage src=\"/images/lottery/ticket-r.png\" alt=\"lottery ticket\" />\r\n        </Flex>\r\n      )\r\n    }\r\n    if (hasCheckedForRewards && !hasRewardsToClaim) {\r\n      return (\r\n        <Flex alignItems=\"center\" justifyContent=\"center\">\r\n          <TornTicketImage src=\"/images/lottery/torn-ticket-l.png\" alt=\"torn lottery ticket\" />\r\n          <Flex mx={['4px', null, '16px']} flexDirection=\"column\">\r\n            <Heading textAlign=\"center\" color=\"#F4EEFF\">\r\n              {t('No prizes to collect')}...\r\n            </Heading>\r\n            <Heading textAlign=\"center\" color=\"#F4EEFF\">\r\n              {t('Better luck next time!')}\r\n            </Heading>\r\n          </Flex>\r\n          <TornTicketImage src=\"/images/lottery/torn-ticket-r.png\" alt=\"torn lottery ticket\" />\r\n        </Flex>\r\n      )\r\n    }\r\n    if (hasCheckedForRewards && hasRewardsToClaim) {\r\n      return (\r\n        <Flex alignItems=\"center\" justifyContent=\"center\">\r\n          <TicketImage src=\"/images/lottery/ticket-l.png\" alt=\"lottery ticket\" />\r\n          <Flex mx={['4px', null, '16px']} flexDirection=\"column\">\r\n            <Heading textAlign=\"center\" color=\"#F4EEFF\">\r\n              {t('Congratulations!')}\r\n            </Heading>\r\n            <Heading textAlign=\"center\" color=\"#F4EEFF\">\r\n              {t('Why not play again')}\r\n            </Heading>\r\n          </Flex>\r\n          <TicketImage src=\"/images/lottery/ticket-r.png\" alt=\"lottery ticket\" />\r\n        </Flex>\r\n      )\r\n    }\r\n    const checkNowText = () => {\r\n      if (lotteryIsNotClaimable) {\r\n        return `${t('Calculating rewards')}...`\r\n      }\r\n      if (isFetchingRewards) {\r\n        return t('Checking')\r\n      }\r\n      return t('Check Now')\r\n    }\r\n    return (\r\n      <Flex alignItems=\"center\" justifyContent=\"center\">\r\n        <TicketImage src=\"/images/lottery/ticket-l.png\" alt=\"lottery ticket\" />\r\n        <Flex mx={['4px', null, '16px']} flexDirection=\"column\">\r\n          <Heading textAlign=\"center\" color=\"#F4EEFF\" mb=\"24px\">\r\n            {t('Are you a winner?')}\r\n          </Heading>\r\n          <Button\r\n            disabled={isCheckNowDisabled}\r\n            onClick={fetchAllRewards}\r\n            isLoading={isFetchingRewards}\r\n            endIcon={isFetchingRewards ? <AutoRenewIcon color=\"currentColor\" spin /> : null}\r\n          >\r\n            {checkNowText()}\r\n          </Button>\r\n        </Flex>\r\n        <TicketImage src=\"/images/lottery/ticket-r.png\" alt=\"lottery ticket\" />\r\n      </Flex>\r\n    )\r\n  }\r\n\r\n  return <Flex>{getBody()}</Flex>\r\n}\r\n\r\nexport default CheckPrizesSection\r\n"]},"metadata":{},"sourceType":"module"}