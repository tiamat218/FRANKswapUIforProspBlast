{"ast":null,"code":"import{createReducer}from'@reduxjs/toolkit';import{addMulticallListeners,errorFetchingMulticallResults,fetchingMulticallResults,removeMulticallListeners,toCallKey,updateMulticallResults}from'./actions';const initialState={callResults:{}};export default createReducer(initialState,builder=>builder.addCase(addMulticallListeners,(state,_ref)=>{var _listeners$chainId;let{payload:{calls,chainId,options:{blocksPerFetch=1}={}}}=_ref;const listeners=state.callListeners?state.callListeners:state.callListeners={};listeners[chainId]=(_listeners$chainId=listeners[chainId])!==null&&_listeners$chainId!==void 0?_listeners$chainId:{};calls.forEach(call=>{var _listeners$chainId$ca,_listeners$chainId$ca2;const callKey=toCallKey(call);listeners[chainId][callKey]=(_listeners$chainId$ca=listeners[chainId][callKey])!==null&&_listeners$chainId$ca!==void 0?_listeners$chainId$ca:{};listeners[chainId][callKey][blocksPerFetch]=((_listeners$chainId$ca2=listeners[chainId][callKey][blocksPerFetch])!==null&&_listeners$chainId$ca2!==void 0?_listeners$chainId$ca2:0)+1;});}).addCase(removeMulticallListeners,(state,_ref2)=>{let{payload:{chainId,calls,options:{blocksPerFetch=1}={}}}=_ref2;const listeners=state.callListeners?state.callListeners:state.callListeners={};if(!listeners[chainId])return;calls.forEach(call=>{const callKey=toCallKey(call);if(!listeners[chainId][callKey])return;if(!listeners[chainId][callKey][blocksPerFetch])return;if(listeners[chainId][callKey][blocksPerFetch]===1){delete listeners[chainId][callKey][blocksPerFetch];}else{listeners[chainId][callKey][blocksPerFetch]--;}});}).addCase(fetchingMulticallResults,(state,_ref3)=>{var _state$callResults$ch;let{payload:{chainId,fetchingBlockNumber,calls}}=_ref3;state.callResults[chainId]=(_state$callResults$ch=state.callResults[chainId])!==null&&_state$callResults$ch!==void 0?_state$callResults$ch:{};calls.forEach(call=>{const callKey=toCallKey(call);const current=state.callResults[chainId][callKey];if(!current){state.callResults[chainId][callKey]={fetchingBlockNumber};}else{var _current$fetchingBloc;if(((_current$fetchingBloc=current.fetchingBlockNumber)!==null&&_current$fetchingBloc!==void 0?_current$fetchingBloc:0)>=fetchingBlockNumber)return;state.callResults[chainId][callKey].fetchingBlockNumber=fetchingBlockNumber;}});}).addCase(errorFetchingMulticallResults,(state,_ref4)=>{var _state$callResults$ch2;let{payload:{fetchingBlockNumber,chainId,calls}}=_ref4;state.callResults[chainId]=(_state$callResults$ch2=state.callResults[chainId])!==null&&_state$callResults$ch2!==void 0?_state$callResults$ch2:{};calls.forEach(call=>{const callKey=toCallKey(call);const current=state.callResults[chainId][callKey];if(!current)return;// only should be dispatched if we are already fetching\nif(current.fetchingBlockNumber===fetchingBlockNumber){delete current.fetchingBlockNumber;current.data=null;current.blockNumber=fetchingBlockNumber;}});}).addCase(updateMulticallResults,(state,_ref5)=>{var _state$callResults$ch3;let{payload:{chainId,results,blockNumber}}=_ref5;state.callResults[chainId]=(_state$callResults$ch3=state.callResults[chainId])!==null&&_state$callResults$ch3!==void 0?_state$callResults$ch3:{};Object.keys(results).forEach(callKey=>{var _current$blockNumber;const current=state.callResults[chainId][callKey];if(((_current$blockNumber=current===null||current===void 0?void 0:current.blockNumber)!==null&&_current$blockNumber!==void 0?_current$blockNumber:0)>blockNumber)return;state.callResults[chainId][callKey]={data:results[callKey],blockNumber};});}));","map":{"version":3,"names":["createReducer","addMulticallListeners","errorFetchingMulticallResults","fetchingMulticallResults","removeMulticallListeners","toCallKey","updateMulticallResults","initialState","callResults","builder","addCase","state","_ref","_listeners$chainId","payload","calls","chainId","options","blocksPerFetch","listeners","callListeners","forEach","call","_listeners$chainId$ca","_listeners$chainId$ca2","callKey","_ref2","_ref3","_state$callResults$ch","fetchingBlockNumber","current","_current$fetchingBloc","_ref4","_state$callResults$ch2","data","blockNumber","_ref5","_state$callResults$ch3","results","Object","keys","_current$blockNumber"],"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/state/multicall/reducer.ts"],"sourcesContent":["import { createReducer } from '@reduxjs/toolkit'\r\nimport {\r\n  addMulticallListeners,\r\n  errorFetchingMulticallResults,\r\n  fetchingMulticallResults,\r\n  removeMulticallListeners,\r\n  toCallKey,\r\n  updateMulticallResults,\r\n} from './actions'\r\n\r\nexport interface MulticallState {\r\n  callListeners?: {\r\n    // on a per-chain basis\r\n    [chainId: number]: {\r\n      // stores for each call key the listeners' preferences\r\n      [callKey: string]: {\r\n        // stores how many listeners there are per each blocks per fetch preference\r\n        [blocksPerFetch: number]: number\r\n      }\r\n    }\r\n  }\r\n\r\n  callResults: {\r\n    [chainId: number]: {\r\n      [callKey: string]: {\r\n        data?: string | null\r\n        blockNumber?: number\r\n        fetchingBlockNumber?: number\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nconst initialState: MulticallState = {\r\n  callResults: {},\r\n}\r\n\r\nexport default createReducer(initialState, (builder) =>\r\n  builder\r\n    .addCase(addMulticallListeners, (state, { payload: { calls, chainId, options: { blocksPerFetch = 1 } = {} } }) => {\r\n      const listeners: MulticallState['callListeners'] = state.callListeners\r\n        ? state.callListeners\r\n        : (state.callListeners = {})\r\n      listeners[chainId] = listeners[chainId] ?? {}\r\n      calls.forEach((call) => {\r\n        const callKey = toCallKey(call)\r\n        listeners[chainId][callKey] = listeners[chainId][callKey] ?? {}\r\n        listeners[chainId][callKey][blocksPerFetch] = (listeners[chainId][callKey][blocksPerFetch] ?? 0) + 1\r\n      })\r\n    })\r\n    .addCase(\r\n      removeMulticallListeners,\r\n      (state, { payload: { chainId, calls, options: { blocksPerFetch = 1 } = {} } }) => {\r\n        const listeners: MulticallState['callListeners'] = state.callListeners\r\n          ? state.callListeners\r\n          : (state.callListeners = {})\r\n\r\n        if (!listeners[chainId]) return\r\n        calls.forEach((call) => {\r\n          const callKey = toCallKey(call)\r\n          if (!listeners[chainId][callKey]) return\r\n          if (!listeners[chainId][callKey][blocksPerFetch]) return\r\n\r\n          if (listeners[chainId][callKey][blocksPerFetch] === 1) {\r\n            delete listeners[chainId][callKey][blocksPerFetch]\r\n          } else {\r\n            listeners[chainId][callKey][blocksPerFetch]--\r\n          }\r\n        })\r\n      },\r\n    )\r\n    .addCase(fetchingMulticallResults, (state, { payload: { chainId, fetchingBlockNumber, calls } }) => {\r\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\r\n      calls.forEach((call) => {\r\n        const callKey = toCallKey(call)\r\n        const current = state.callResults[chainId][callKey]\r\n        if (!current) {\r\n          state.callResults[chainId][callKey] = {\r\n            fetchingBlockNumber,\r\n          }\r\n        } else {\r\n          if ((current.fetchingBlockNumber ?? 0) >= fetchingBlockNumber) return\r\n          state.callResults[chainId][callKey].fetchingBlockNumber = fetchingBlockNumber\r\n        }\r\n      })\r\n    })\r\n    .addCase(errorFetchingMulticallResults, (state, { payload: { fetchingBlockNumber, chainId, calls } }) => {\r\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\r\n      calls.forEach((call) => {\r\n        const callKey = toCallKey(call)\r\n        const current = state.callResults[chainId][callKey]\r\n        if (!current) return // only should be dispatched if we are already fetching\r\n        if (current.fetchingBlockNumber === fetchingBlockNumber) {\r\n          delete current.fetchingBlockNumber\r\n          current.data = null\r\n          current.blockNumber = fetchingBlockNumber\r\n        }\r\n      })\r\n    })\r\n    .addCase(updateMulticallResults, (state, { payload: { chainId, results, blockNumber } }) => {\r\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\r\n      Object.keys(results).forEach((callKey) => {\r\n        const current = state.callResults[chainId][callKey]\r\n        if ((current?.blockNumber ?? 0) > blockNumber) return\r\n        state.callResults[chainId][callKey] = {\r\n          data: results[callKey],\r\n          blockNumber,\r\n        }\r\n      })\r\n    }),\r\n)\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}