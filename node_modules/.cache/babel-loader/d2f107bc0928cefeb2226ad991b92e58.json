{"ast":null,"code":"import React from'react';import{Text,TooltipText,useTooltip}from'@pancakeswap/uikit';import{useTranslation}from'contexts/Localization';import Balance from'components/Balance';import{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";const RecentCakeProfitBalance=_ref=>{let{cakeToDisplay,dollarValueToDisplay,dateStringToDisplay}=_ref;const{t}=useTranslation();const{targetRef,tooltip,tooltipVisible}=useTooltip(/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Balance,{fontSize:\"16px\",value:cakeToDisplay,decimals:3,bold:true,unit:\" CAKE\"}),/*#__PURE__*/_jsx(Balance,{fontSize:\"16px\",value:dollarValueToDisplay,decimals:2,bold:true,prefix:\"~$\"}),t('Earned since your last action'),/*#__PURE__*/_jsx(Text,{children:dateStringToDisplay})]}),{placement:'bottom-end'});return/*#__PURE__*/_jsxs(_Fragment,{children:[tooltipVisible&&tooltip,/*#__PURE__*/_jsx(TooltipText,{ref:targetRef,small:true,children:/*#__PURE__*/_jsx(Balance,{fontSize:\"14px\",value:cakeToDisplay})})]});};export default RecentCakeProfitBalance;","map":{"version":3,"names":["React","Text","TooltipText","useTooltip","useTranslation","Balance","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","RecentCakeProfitBalance","_ref","cakeToDisplay","dollarValueToDisplay","dateStringToDisplay","t","targetRef","tooltip","tooltipVisible","children","fontSize","value","decimals","bold","unit","prefix","placement","ref","small"],"sources":["C:/Users/frkul/Documents/swapUI_pancake-frontend/src/views/Pools/components/CakeVaultCard/RecentCakeProfitBalance.tsx"],"sourcesContent":["import React from 'react'\r\nimport { Text, TooltipText, useTooltip } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport Balance from 'components/Balance'\r\n\r\ninterface RecentCakeProfitBalanceProps {\r\n  cakeToDisplay: number\r\n  dollarValueToDisplay: number\r\n  dateStringToDisplay: string\r\n}\r\n\r\nconst RecentCakeProfitBalance: React.FC<RecentCakeProfitBalanceProps> = ({\r\n  cakeToDisplay,\r\n  dollarValueToDisplay,\r\n  dateStringToDisplay,\r\n}) => {\r\n  const { t } = useTranslation()\r\n\r\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\r\n    <>\r\n      <Balance fontSize=\"16px\" value={cakeToDisplay} decimals={3} bold unit=\" CAKE\" />\r\n      <Balance fontSize=\"16px\" value={dollarValueToDisplay} decimals={2} bold prefix=\"~$\" />\r\n      {t('Earned since your last action')}\r\n      <Text>{dateStringToDisplay}</Text>\r\n    </>,\r\n    {\r\n      placement: 'bottom-end',\r\n    },\r\n  )\r\n\r\n  return (\r\n    <>\r\n      {tooltipVisible && tooltip}\r\n      <TooltipText ref={targetRef} small>\r\n        <Balance fontSize=\"14px\" value={cakeToDisplay} />\r\n      </TooltipText>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default RecentCakeProfitBalance\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,IAAI,CAAEC,WAAW,CAAEC,UAAU,KAAQ,oBAAoB,CAClE,OAASC,cAAc,KAAQ,uBAAuB,CACtD,MAAO,CAAAC,OAAO,KAAM,oBAAoB,QAAAC,GAAA,IAAAC,IAAA,CAAAC,QAAA,IAAAC,SAAA,CAAAC,IAAA,IAAAC,KAAA,yBAQxC,KAAM,CAAAC,uBAA+D,CAAGC,IAAA,EAIlE,IAJmE,CACvEC,aAAa,CACbC,oBAAoB,CACpBC,mBACF,CAAC,CAAAH,IAAA,CACC,KAAM,CAAEI,CAAE,CAAC,CAAGb,cAAc,CAAC,CAAC,CAE9B,KAAM,CAAEc,SAAS,CAAEC,OAAO,CAAEC,cAAe,CAAC,CAAGjB,UAAU,cACvDQ,KAAA,CAAAF,SAAA,EAAAY,QAAA,eACEd,IAAA,CAACF,OAAO,EAACiB,QAAQ,CAAC,MAAM,CAACC,KAAK,CAAET,aAAc,CAACU,QAAQ,CAAE,CAAE,CAACC,IAAI,MAACC,IAAI,CAAC,OAAO,CAAE,CAAC,cAChFnB,IAAA,CAACF,OAAO,EAACiB,QAAQ,CAAC,MAAM,CAACC,KAAK,CAAER,oBAAqB,CAACS,QAAQ,CAAE,CAAE,CAACC,IAAI,MAACE,MAAM,CAAC,IAAI,CAAE,CAAC,CACrFV,CAAC,CAAC,+BAA+B,CAAC,cACnCV,IAAA,CAACN,IAAI,EAAAoB,QAAA,CAAEL,mBAAmB,CAAO,CAAC,EAClC,CAAC,CACH,CACEY,SAAS,CAAE,YACb,CACF,CAAC,CAED,mBACEjB,KAAA,CAAAF,SAAA,EAAAY,QAAA,EACGD,cAAc,EAAID,OAAO,cAC1BZ,IAAA,CAACL,WAAW,EAAC2B,GAAG,CAAEX,SAAU,CAACY,KAAK,MAAAT,QAAA,cAChCd,IAAA,CAACF,OAAO,EAACiB,QAAQ,CAAC,MAAM,CAACC,KAAK,CAAET,aAAc,CAAE,CAAC,CACtC,CAAC,EACd,CAAC,CAEP,CAAC,CAED,cAAe,CAAAF,uBAAuB","ignoreList":[]},"metadata":{},"sourceType":"module"}