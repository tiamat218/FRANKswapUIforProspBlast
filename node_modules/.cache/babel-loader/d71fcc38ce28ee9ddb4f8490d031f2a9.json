{"ast":null,"code":"/* eslint-disable import/prefer-default-export */\nimport BigNumber from 'bignumber.js';\nimport pools from 'config/constants/pools';\nimport sousChefV2 from 'config/abi/sousChefV2.json';\nimport multicall from '../multicall';\nimport { simpleRpcProvider } from '../providers';\nimport { getAddress } from '../addressHelpers';\n\n/**\r\n * Returns the total number of pools that were active at a given block\r\n */\nexport const getActivePools = async block => {\n  const eligiblePools = pools.filter(pool => pool.sousId !== 0).filter(pool => pool.isFinished === false || pool.isFinished === undefined);\n  const blockNumber = block || (await simpleRpcProvider.getBlockNumber());\n  const startBlockCalls = eligiblePools.map(({\n    contractAddress\n  }) => ({\n    address: getAddress(contractAddress),\n    name: 'startBlock'\n  }));\n  const endBlockCalls = eligiblePools.map(({\n    contractAddress\n  }) => ({\n    address: getAddress(contractAddress),\n    name: 'bonusEndBlock'\n  }));\n  const startBlocks = await multicall(sousChefV2, startBlockCalls);\n  const endBlocks = await multicall(sousChefV2, endBlockCalls);\n  return eligiblePools.reduce((accum, poolCheck, index) => {\n    const startBlock = startBlocks[index] ? new BigNumber(startBlocks[index]) : null;\n    const endBlock = endBlocks[index] ? new BigNumber(endBlocks[index]) : null;\n    if (!startBlock || !endBlock) {\n      return accum;\n    }\n    if (startBlock.gte(blockNumber) || endBlock.lte(blockNumber)) {\n      return accum;\n    }\n    return [...accum, poolCheck];\n  }, []);\n};","map":{"version":3,"names":["BigNumber","pools","sousChefV2","multicall","simpleRpcProvider","getAddress","getActivePools","block","eligiblePools","filter","pool","sousId","isFinished","undefined","blockNumber","getBlockNumber","startBlockCalls","map","contractAddress","address","name","endBlockCalls","startBlocks","endBlocks","reduce","accum","poolCheck","index","startBlock","endBlock","gte","lte"],"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/utils/calls/pools.ts"],"sourcesContent":["/* eslint-disable import/prefer-default-export */\r\nimport BigNumber from 'bignumber.js'\r\nimport pools from 'config/constants/pools'\r\nimport sousChefV2 from 'config/abi/sousChefV2.json'\r\nimport multicall from '../multicall'\r\nimport { simpleRpcProvider } from '../providers'\r\nimport { getAddress } from '../addressHelpers'\r\n\r\n/**\r\n * Returns the total number of pools that were active at a given block\r\n */\r\nexport const getActivePools = async (block?: number) => {\r\n  const eligiblePools = pools\r\n    .filter((pool) => pool.sousId !== 0)\r\n    .filter((pool) => pool.isFinished === false || pool.isFinished === undefined)\r\n  const blockNumber = block || (await simpleRpcProvider.getBlockNumber())\r\n  const startBlockCalls = eligiblePools.map(({ contractAddress }) => ({\r\n    address: getAddress(contractAddress),\r\n    name: 'startBlock',\r\n  }))\r\n  const endBlockCalls = eligiblePools.map(({ contractAddress }) => ({\r\n    address: getAddress(contractAddress),\r\n    name: 'bonusEndBlock',\r\n  }))\r\n  const startBlocks = await multicall(sousChefV2, startBlockCalls)\r\n  const endBlocks = await multicall(sousChefV2, endBlockCalls)\r\n\r\n  return eligiblePools.reduce((accum, poolCheck, index) => {\r\n    const startBlock = startBlocks[index] ? new BigNumber(startBlocks[index]) : null\r\n    const endBlock = endBlocks[index] ? new BigNumber(endBlocks[index]) : null\r\n\r\n    if (!startBlock || !endBlock) {\r\n      return accum\r\n    }\r\n\r\n    if (startBlock.gte(blockNumber) || endBlock.lte(blockNumber)) {\r\n      return accum\r\n    }\r\n\r\n    return [...accum, poolCheck]\r\n  }, [])\r\n}\r\n"],"mappings":"AAAA;AACA,OAAOA,SAAS,MAAM,cAAc;AACpC,OAAOC,KAAK,MAAM,wBAAwB;AAC1C,OAAOC,UAAU,MAAM,4BAA4B;AACnD,OAAOC,SAAS,MAAM,cAAc;AACpC,SAASC,iBAAiB,QAAQ,cAAc;AAChD,SAASC,UAAU,QAAQ,mBAAmB;;AAE9C;AACA;AACA;AACA,OAAO,MAAMC,cAAc,GAAG,MAAOC,KAAc,IAAK;EACtD,MAAMC,aAAa,GAAGP,KAAK,CACxBQ,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACC,MAAM,KAAK,CAAC,CAAC,CACnCF,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACE,UAAU,KAAK,KAAK,IAAIF,IAAI,CAACE,UAAU,KAAKC,SAAS,CAAC;EAC/E,MAAMC,WAAW,GAAGP,KAAK,KAAK,MAAMH,iBAAiB,CAACW,cAAc,CAAC,CAAC,CAAC;EACvE,MAAMC,eAAe,GAAGR,aAAa,CAACS,GAAG,CAAC,CAAC;IAAEC;EAAgB,CAAC,MAAM;IAClEC,OAAO,EAAEd,UAAU,CAACa,eAAe,CAAC;IACpCE,IAAI,EAAE;EACR,CAAC,CAAC,CAAC;EACH,MAAMC,aAAa,GAAGb,aAAa,CAACS,GAAG,CAAC,CAAC;IAAEC;EAAgB,CAAC,MAAM;IAChEC,OAAO,EAAEd,UAAU,CAACa,eAAe,CAAC;IACpCE,IAAI,EAAE;EACR,CAAC,CAAC,CAAC;EACH,MAAME,WAAW,GAAG,MAAMnB,SAAS,CAACD,UAAU,EAAEc,eAAe,CAAC;EAChE,MAAMO,SAAS,GAAG,MAAMpB,SAAS,CAACD,UAAU,EAAEmB,aAAa,CAAC;EAE5D,OAAOb,aAAa,CAACgB,MAAM,CAAC,CAACC,KAAK,EAAEC,SAAS,EAAEC,KAAK,KAAK;IACvD,MAAMC,UAAU,GAAGN,WAAW,CAACK,KAAK,CAAC,GAAG,IAAI3B,SAAS,CAACsB,WAAW,CAACK,KAAK,CAAC,CAAC,GAAG,IAAI;IAChF,MAAME,QAAQ,GAAGN,SAAS,CAACI,KAAK,CAAC,GAAG,IAAI3B,SAAS,CAACuB,SAAS,CAACI,KAAK,CAAC,CAAC,GAAG,IAAI;IAE1E,IAAI,CAACC,UAAU,IAAI,CAACC,QAAQ,EAAE;MAC5B,OAAOJ,KAAK;IACd;IAEA,IAAIG,UAAU,CAACE,GAAG,CAAChB,WAAW,CAAC,IAAIe,QAAQ,CAACE,GAAG,CAACjB,WAAW,CAAC,EAAE;MAC5D,OAAOW,KAAK;IACd;IAEA,OAAO,CAAC,GAAGA,KAAK,EAAEC,SAAS,CAAC;EAC9B,CAAC,EAAE,EAAE,CAAC;AACR,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}