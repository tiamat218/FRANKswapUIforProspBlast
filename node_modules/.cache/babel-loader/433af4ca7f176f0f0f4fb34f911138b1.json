{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\frkul\\\\Documents\\\\swapUI_pancake-frontend\\\\src\\\\views\\\\Pools\\\\components\\\\CakeVaultCard\\\\RecentCakeProfitBalance.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Text, TooltipText, useTooltip } from '@pancakeswap/uikit';\nimport { useTranslation } from 'contexts/Localization';\nimport Balance from 'components/Balance';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst RecentCakeProfitBalance = ({\n  cakeToDisplay,\n  dollarValueToDisplay,\n  dateStringToDisplay\n}) => {\n  _s();\n  const {\n    t\n  } = useTranslation();\n  const {\n    targetRef,\n    tooltip,\n    tooltipVisible\n  } = useTooltip( /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Balance, {\n      fontSize: \"16px\",\n      value: cakeToDisplay,\n      decimals: 3,\n      bold: true,\n      unit: \" CAKE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Balance, {\n      fontSize: \"16px\",\n      value: dollarValueToDisplay,\n      decimals: 2,\n      bold: true,\n      prefix: \"~$\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), t('Earned since your last action'), /*#__PURE__*/_jsxDEV(Text, {\n      children: dateStringToDisplay\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true), {\n    placement: 'bottom-end'\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [tooltipVisible && tooltip, /*#__PURE__*/_jsxDEV(TooltipText, {\n      ref: targetRef,\n      small: true,\n      children: /*#__PURE__*/_jsxDEV(Balance, {\n        fontSize: \"14px\",\n        value: cakeToDisplay\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(RecentCakeProfitBalance, \"GSMeUTDR148KmhQO/xuGuRK/xHM=\", false, function () {\n  return [useTranslation, useTooltip];\n});\n_c = RecentCakeProfitBalance;\nexport default RecentCakeProfitBalance;\nvar _c;\n$RefreshReg$(_c, \"RecentCakeProfitBalance\");","map":{"version":3,"names":["React","Text","TooltipText","useTooltip","useTranslation","Balance","jsxDEV","_jsxDEV","Fragment","_Fragment","RecentCakeProfitBalance","cakeToDisplay","dollarValueToDisplay","dateStringToDisplay","_s","t","targetRef","tooltip","tooltipVisible","children","fontSize","value","decimals","bold","unit","fileName","_jsxFileName","lineNumber","columnNumber","prefix","placement","ref","small","_c","$RefreshReg$"],"sources":["C:/Users/frkul/Documents/swapUI_pancake-frontend/src/views/Pools/components/CakeVaultCard/RecentCakeProfitBalance.tsx"],"sourcesContent":["import React from 'react'\r\nimport { Text, TooltipText, useTooltip } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport Balance from 'components/Balance'\r\n\r\ninterface RecentCakeProfitBalanceProps {\r\n  cakeToDisplay: number\r\n  dollarValueToDisplay: number\r\n  dateStringToDisplay: string\r\n}\r\n\r\nconst RecentCakeProfitBalance: React.FC<RecentCakeProfitBalanceProps> = ({\r\n  cakeToDisplay,\r\n  dollarValueToDisplay,\r\n  dateStringToDisplay,\r\n}) => {\r\n  const { t } = useTranslation()\r\n\r\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\r\n    <>\r\n      <Balance fontSize=\"16px\" value={cakeToDisplay} decimals={3} bold unit=\" CAKE\" />\r\n      <Balance fontSize=\"16px\" value={dollarValueToDisplay} decimals={2} bold prefix=\"~$\" />\r\n      {t('Earned since your last action')}\r\n      <Text>{dateStringToDisplay}</Text>\r\n    </>,\r\n    {\r\n      placement: 'bottom-end',\r\n    },\r\n  )\r\n\r\n  return (\r\n    <>\r\n      {tooltipVisible && tooltip}\r\n      <TooltipText ref={targetRef} small>\r\n        <Balance fontSize=\"14px\" value={cakeToDisplay} />\r\n      </TooltipText>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default RecentCakeProfitBalance\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,EAAEC,WAAW,EAAEC,UAAU,QAAQ,oBAAoB;AAClE,SAASC,cAAc,QAAQ,uBAAuB;AACtD,OAAOC,OAAO,MAAM,oBAAoB;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAQxC,MAAMC,uBAA+D,GAAGA,CAAC;EACvEC,aAAa;EACbC,oBAAoB;EACpBC;AACF,CAAC,KAAK;EAAAC,EAAA;EACJ,MAAM;IAAEC;EAAE,CAAC,GAAGX,cAAc,CAAC,CAAC;EAE9B,MAAM;IAAEY,SAAS;IAAEC,OAAO;IAAEC;EAAe,CAAC,GAAGf,UAAU,eACvDI,OAAA,CAAAE,SAAA;IAAAU,QAAA,gBACEZ,OAAA,CAACF,OAAO;MAACe,QAAQ,EAAC,MAAM;MAACC,KAAK,EAAEV,aAAc;MAACW,QAAQ,EAAE,CAAE;MAACC,IAAI;MAACC,IAAI,EAAC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAChFrB,OAAA,CAACF,OAAO;MAACe,QAAQ,EAAC,MAAM;MAACC,KAAK,EAAET,oBAAqB;MAACU,QAAQ,EAAE,CAAE;MAACC,IAAI;MAACM,MAAM,EAAC;IAAI;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACrFb,CAAC,CAAC,+BAA+B,CAAC,eACnCR,OAAA,CAACN,IAAI;MAAAkB,QAAA,EAAEN;IAAmB;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC;EAAA,eAClC,CAAC,EACH;IACEE,SAAS,EAAE;EACb,CACF,CAAC;EAED,oBACEvB,OAAA,CAAAE,SAAA;IAAAU,QAAA,GACGD,cAAc,IAAID,OAAO,eAC1BV,OAAA,CAACL,WAAW;MAAC6B,GAAG,EAAEf,SAAU;MAACgB,KAAK;MAAAb,QAAA,eAChCZ,OAAA,CAACF,OAAO;QAACe,QAAQ,EAAC,MAAM;QAACC,KAAK,EAAEV;MAAc;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC,CAAC;EAAA,eACd,CAAC;AAEP,CAAC;AAAAd,EAAA,CA3BKJ,uBAA+D;EAAA,QAKrDN,cAAc,EAEmBD,UAAU;AAAA;AAAA8B,EAAA,GAPrDvB,uBAA+D;AA6BrE,eAAeA,uBAAuB;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}