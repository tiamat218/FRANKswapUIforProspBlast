{"ast":null,"code":"import React from'react';import{Flex,Text}from'@pancakeswap/uikit';import{useWeb3React}from'@web3-react/core';import{useTranslation}from'contexts/Localization';import{usePriceCakeBusd}from'state/farms/hooks';import{useCakeVault}from'state/pools/hooks';import{getCakeVaultEarnings}from'views/Pools/helpers';import RecentCakeProfitBalance from'./RecentCakeProfitBalance';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const RecentCakeProfitCountdownRow=()=>{const{t}=useTranslation();const{account}=useWeb3React();const{pricePerFullShare,userData:{cakeAtLastUserAction,userShares,lastUserActionTime}}=useCakeVault();const cakePriceBusd=usePriceCakeBusd();const{hasAutoEarnings,autoCakeToDisplay,autoUsdToDisplay}=getCakeVaultEarnings(account,cakeAtLastUserAction,userShares,pricePerFullShare,cakePriceBusd.toNumber());const lastActionInMs=lastUserActionTime&&parseInt(lastUserActionTime)*1000;const dateTimeLastAction=new Date(lastActionInMs);const dateStringToDisplay=dateTimeLastAction.toLocaleString();return/*#__PURE__*/_jsxs(Flex,{alignItems:\"center\",justifyContent:\"space-between\",children:[/*#__PURE__*/_jsx(Text,{fontSize:\"14px\",children:\"\".concat(t('Recent CAKE profit'),\":\")}),hasAutoEarnings&&/*#__PURE__*/_jsx(RecentCakeProfitBalance,{cakeToDisplay:autoCakeToDisplay,dollarValueToDisplay:autoUsdToDisplay,dateStringToDisplay:dateStringToDisplay})]});};export default RecentCakeProfitCountdownRow;","map":{"version":3,"names":["React","Flex","Text","useWeb3React","useTranslation","usePriceCakeBusd","useCakeVault","getCakeVaultEarnings","RecentCakeProfitBalance","jsx","_jsx","jsxs","_jsxs","RecentCakeProfitCountdownRow","t","account","pricePerFullShare","userData","cakeAtLastUserAction","userShares","lastUserActionTime","cakePriceBusd","hasAutoEarnings","autoCakeToDisplay","autoUsdToDisplay","toNumber","lastActionInMs","parseInt","dateTimeLastAction","Date","dateStringToDisplay","toLocaleString","alignItems","justifyContent","children","fontSize","concat","cakeToDisplay","dollarValueToDisplay"],"sources":["C:/Users/frkul/Documents/swapUI_pancake-frontend/src/views/Pools/components/CakeVaultCard/RecentCakeProfitRow.tsx"],"sourcesContent":["import React from 'react'\r\nimport { Flex, Text } from '@pancakeswap/uikit'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { usePriceCakeBusd } from 'state/farms/hooks'\r\nimport { useCakeVault } from 'state/pools/hooks'\r\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\r\nimport RecentCakeProfitBalance from './RecentCakeProfitBalance'\r\n\r\nconst RecentCakeProfitCountdownRow = () => {\r\n  const { t } = useTranslation()\r\n  const { account } = useWeb3React()\r\n  const {\r\n    pricePerFullShare,\r\n    userData: { cakeAtLastUserAction, userShares, lastUserActionTime },\r\n  } = useCakeVault()\r\n  const cakePriceBusd = usePriceCakeBusd()\r\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\r\n    account,\r\n    cakeAtLastUserAction,\r\n    userShares,\r\n    pricePerFullShare,\r\n    cakePriceBusd.toNumber(),\r\n  )\r\n\r\n  const lastActionInMs = lastUserActionTime && parseInt(lastUserActionTime) * 1000\r\n  const dateTimeLastAction = new Date(lastActionInMs)\r\n  const dateStringToDisplay = dateTimeLastAction.toLocaleString()\r\n\r\n  return (\r\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\r\n      <Text fontSize=\"14px\">{`${t('Recent CAKE profit')}:`}</Text>\r\n      {hasAutoEarnings && (\r\n        <RecentCakeProfitBalance\r\n          cakeToDisplay={autoCakeToDisplay}\r\n          dollarValueToDisplay={autoUsdToDisplay}\r\n          dateStringToDisplay={dateStringToDisplay}\r\n        />\r\n      )}\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default RecentCakeProfitCountdownRow\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,IAAI,CAAEC,IAAI,KAAQ,oBAAoB,CAC/C,OAASC,YAAY,KAAQ,kBAAkB,CAC/C,OAASC,cAAc,KAAQ,uBAAuB,CACtD,OAASC,gBAAgB,KAAQ,mBAAmB,CACpD,OAASC,YAAY,KAAQ,mBAAmB,CAChD,OAASC,oBAAoB,KAAQ,qBAAqB,CAC1D,MAAO,CAAAC,uBAAuB,KAAM,2BAA2B,QAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE/D,KAAM,CAAAC,4BAA4B,CAAGA,CAAA,GAAM,CACzC,KAAM,CAAEC,CAAE,CAAC,CAAGV,cAAc,CAAC,CAAC,CAC9B,KAAM,CAAEW,OAAQ,CAAC,CAAGZ,YAAY,CAAC,CAAC,CAClC,KAAM,CACJa,iBAAiB,CACjBC,QAAQ,CAAE,CAAEC,oBAAoB,CAAEC,UAAU,CAAEC,kBAAmB,CACnE,CAAC,CAAGd,YAAY,CAAC,CAAC,CAClB,KAAM,CAAAe,aAAa,CAAGhB,gBAAgB,CAAC,CAAC,CACxC,KAAM,CAAEiB,eAAe,CAAEC,iBAAiB,CAAEC,gBAAiB,CAAC,CAAGjB,oBAAoB,CACnFQ,OAAO,CACPG,oBAAoB,CACpBC,UAAU,CACVH,iBAAiB,CACjBK,aAAa,CAACI,QAAQ,CAAC,CACzB,CAAC,CAED,KAAM,CAAAC,cAAc,CAAGN,kBAAkB,EAAIO,QAAQ,CAACP,kBAAkB,CAAC,CAAG,IAAI,CAChF,KAAM,CAAAQ,kBAAkB,CAAG,GAAI,CAAAC,IAAI,CAACH,cAAc,CAAC,CACnD,KAAM,CAAAI,mBAAmB,CAAGF,kBAAkB,CAACG,cAAc,CAAC,CAAC,CAE/D,mBACEnB,KAAA,CAACX,IAAI,EAAC+B,UAAU,CAAC,QAAQ,CAACC,cAAc,CAAC,eAAe,CAAAC,QAAA,eACtDxB,IAAA,CAACR,IAAI,EAACiC,QAAQ,CAAC,MAAM,CAAAD,QAAA,IAAAE,MAAA,CAAKtB,CAAC,CAAC,oBAAoB,CAAC,MAAU,CAAC,CAC3DQ,eAAe,eACdZ,IAAA,CAACF,uBAAuB,EACtB6B,aAAa,CAAEd,iBAAkB,CACjCe,oBAAoB,CAAEd,gBAAiB,CACvCM,mBAAmB,CAAEA,mBAAoB,CAC1C,CACF,EACG,CAAC,CAEX,CAAC,CAED,cAAe,CAAAjB,4BAA4B","ignoreList":[]},"metadata":{},"sourceType":"module"}