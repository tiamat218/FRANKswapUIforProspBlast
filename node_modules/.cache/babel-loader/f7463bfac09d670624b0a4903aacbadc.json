{"ast":null,"code":"import React,{useEffect,useRef}from'react';import{useCountUp}from'react-countup';import{Text}from'@pancakeswap/uikit';import{jsxs as _jsxs}from\"react/jsx-runtime\";const CardValue=_ref=>{let{value,decimals,fontSize='40px',lineHeight='1',prefix='',bold=true,color='text'}=_ref;const{countUp,update}=useCountUp({start:0,end:value,duration:1,separator:',',decimals:// eslint-disable-next-line no-nested-ternary\ndecimals!==undefined?decimals:value<0?4:value>1e5?0:3});const updateValue=useRef(update);useEffect(()=>{updateValue.current(value);},[value,updateValue]);return/*#__PURE__*/_jsxs(Text,{bold:bold,fontSize:fontSize,style:{lineHeight},color:color,children:[prefix,countUp]});};export default CardValue;","map":{"version":3,"names":["React","useEffect","useRef","useCountUp","Text","jsxs","_jsxs","CardValue","_ref","value","decimals","fontSize","lineHeight","prefix","bold","color","countUp","update","start","end","duration","separator","undefined","updateValue","current","style","children"],"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/views/Home/components/CardValue.tsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react'\r\nimport { useCountUp } from 'react-countup'\r\nimport { Text } from '@pancakeswap/uikit'\r\n\r\nexport interface CardValueProps {\r\n  value: number\r\n  decimals?: number\r\n  fontSize?: string\r\n  lineHeight?: string\r\n  prefix?: string\r\n  bold?: boolean\r\n  color?: string\r\n}\r\n\r\nconst CardValue: React.FC<CardValueProps> = ({\r\n  value,\r\n  decimals,\r\n  fontSize = '40px',\r\n  lineHeight = '1',\r\n  prefix = '',\r\n  bold = true,\r\n  color = 'text',\r\n}) => {\r\n  const { countUp, update } = useCountUp({\r\n    start: 0,\r\n    end: value,\r\n    duration: 1,\r\n    separator: ',',\r\n    decimals:\r\n      // eslint-disable-next-line no-nested-ternary\r\n      decimals !== undefined ? decimals : value < 0 ? 4 : value > 1e5 ? 0 : 3,\r\n  })\r\n\r\n  const updateValue = useRef(update)\r\n\r\n  useEffect(() => {\r\n    updateValue.current(value)\r\n  }, [value, updateValue])\r\n\r\n  return (\r\n    <Text bold={bold} fontSize={fontSize} style={{ lineHeight }} color={color}>\r\n      {prefix}\r\n      {countUp}\r\n    </Text>\r\n  )\r\n}\r\n\r\nexport default CardValue\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,MAAM,KAAQ,OAAO,CAChD,OAASC,UAAU,KAAQ,eAAe,CAC1C,OAASC,IAAI,KAAQ,oBAAoB,QAAAC,IAAA,IAAAC,KAAA,yBAYzC,KAAM,CAAAC,SAAmC,CAAGC,IAAA,EAQtC,IARuC,CAC3CC,KAAK,CACLC,QAAQ,CACRC,QAAQ,CAAG,MAAM,CACjBC,UAAU,CAAG,GAAG,CAChBC,MAAM,CAAG,EAAE,CACXC,IAAI,CAAG,IAAI,CACXC,KAAK,CAAG,MACV,CAAC,CAAAP,IAAA,CACC,KAAM,CAAEQ,OAAO,CAAEC,MAAO,CAAC,CAAGd,UAAU,CAAC,CACrCe,KAAK,CAAE,CAAC,CACRC,GAAG,CAAEV,KAAK,CACVW,QAAQ,CAAE,CAAC,CACXC,SAAS,CAAE,GAAG,CACdX,QAAQ,CACN;AACAA,QAAQ,GAAKY,SAAS,CAAGZ,QAAQ,CAAGD,KAAK,CAAG,CAAC,CAAG,CAAC,CAAGA,KAAK,CAAG,GAAG,CAAG,CAAC,CAAG,CAC1E,CAAC,CAAC,CAEF,KAAM,CAAAc,WAAW,CAAGrB,MAAM,CAACe,MAAM,CAAC,CAElChB,SAAS,CAAC,IAAM,CACdsB,WAAW,CAACC,OAAO,CAACf,KAAK,CAAC,CAC5B,CAAC,CAAE,CAACA,KAAK,CAAEc,WAAW,CAAC,CAAC,CAExB,mBACEjB,KAAA,CAACF,IAAI,EAACU,IAAI,CAAEA,IAAK,CAACH,QAAQ,CAAEA,QAAS,CAACc,KAAK,CAAE,CAAEb,UAAW,CAAE,CAACG,KAAK,CAAEA,KAAM,CAAAW,QAAA,EACvEb,MAAM,CACNG,OAAO,EACJ,CAAC,CAEX,CAAC,CAED,cAAe,CAAAT,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module"}