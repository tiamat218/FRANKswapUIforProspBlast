{"ast":null,"code":"'use strict';\n\n/** @typedef {import('./generated-types').NameUint8ArrayMap} NameUint8ArrayMap */\nconst {\n  baseTable\n} = require('./base-table');\nconst varintEncode = require('./util').varintEncode;\nconst varintTable = /** @type {NameUint8ArrayMap} */{};\nfor (const encodingName in baseTable) {\n  const code = baseTable[encodingName];\n  varintTable[encodingName] = varintEncode(code);\n}\nmodule.exports = Object.freeze(varintTable);","map":{"version":3,"names":["baseTable","require","varintEncode","varintTable","encodingName","code","module","exports","Object","freeze"],"sources":["C:/Users/frkul/Documents/swapUI_pancake-frontend/node_modules/multicodec/src/varint-table.js"],"sourcesContent":["'use strict'\n\n/** @typedef {import('./generated-types').NameUint8ArrayMap} NameUint8ArrayMap */\n\nconst { baseTable } = require('./base-table')\nconst varintEncode = require('./util').varintEncode\n\nconst varintTable = /** @type {NameUint8ArrayMap} */ ({})\n\nfor (const encodingName in baseTable) {\n  const code = baseTable[encodingName]\n  varintTable[encodingName] = varintEncode(code)\n}\n\nmodule.exports = Object.freeze(varintTable)\n"],"mappings":"AAAA,YAAY;;AAEZ;AAEA,MAAM;EAAEA;AAAU,CAAC,GAAGC,OAAO,CAAC,cAAc,CAAC;AAC7C,MAAMC,YAAY,GAAGD,OAAO,CAAC,QAAQ,CAAC,CAACC,YAAY;AAEnD,MAAMC,WAAW,GAAG,gCAAkC,CAAC,CAAE;AAEzD,KAAK,MAAMC,YAAY,IAAIJ,SAAS,EAAE;EACpC,MAAMK,IAAI,GAAGL,SAAS,CAACI,YAAY,CAAC;EACpCD,WAAW,CAACC,YAAY,CAAC,GAAGF,YAAY,CAACG,IAAI,CAAC;AAChD;AAEAC,MAAM,CAACC,OAAO,GAAGC,MAAM,CAACC,MAAM,CAACN,WAAW,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script"}