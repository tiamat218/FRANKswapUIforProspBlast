{"ast":null,"code":"import { currencyEquals } from '@pancakeswap/sdk';\nimport { ZERO_PERCENT, ONE_HUNDRED_PERCENT } from '../config/constants/index'; // returns whether tradeB is better than tradeA by at least a threshold percentage amount\n\nexport function isTradeBetter(tradeA, tradeB, minimumDelta = ZERO_PERCENT) {\n  if (tradeA && !tradeB) return false;\n  if (tradeB && !tradeA) return true;\n  if (!tradeA || !tradeB) return undefined;\n\n  if (tradeA.tradeType !== tradeB.tradeType || !currencyEquals(tradeA.inputAmount.currency, tradeB.inputAmount.currency) || !currencyEquals(tradeB.outputAmount.currency, tradeB.outputAmount.currency)) {\n    throw new Error('Trades are not comparable');\n  }\n\n  if (minimumDelta.equalTo(ZERO_PERCENT)) {\n    return tradeA.executionPrice.lessThan(tradeB.executionPrice);\n  }\n\n  return tradeA.executionPrice.raw.multiply(minimumDelta.add(ONE_HUNDRED_PERCENT)).lessThan(tradeB.executionPrice);\n}\nexport default isTradeBetter;","map":{"version":3,"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/utils/trades.ts"],"names":["currencyEquals","ZERO_PERCENT","ONE_HUNDRED_PERCENT","isTradeBetter","tradeA","tradeB","minimumDelta","undefined","tradeType","inputAmount","currency","outputAmount","Error","equalTo","executionPrice","lessThan","raw","multiply","add"],"mappings":"AAAA,SAAyBA,cAAzB,QAA+C,kBAA/C;AACA,SAASC,YAAT,EAAuBC,mBAAvB,QAAkD,2BAAlD,C,CAEA;;AACA,OAAO,SAASC,aAAT,CACLC,MADK,EAELC,MAFK,EAGLC,YAAqB,GAAGL,YAHnB,EAIgB;AACrB,MAAIG,MAAM,IAAI,CAACC,MAAf,EAAuB,OAAO,KAAP;AACvB,MAAIA,MAAM,IAAI,CAACD,MAAf,EAAuB,OAAO,IAAP;AACvB,MAAI,CAACA,MAAD,IAAW,CAACC,MAAhB,EAAwB,OAAOE,SAAP;;AAExB,MACEH,MAAM,CAACI,SAAP,KAAqBH,MAAM,CAACG,SAA5B,IACA,CAACR,cAAc,CAACI,MAAM,CAACK,WAAP,CAAmBC,QAApB,EAA8BL,MAAM,CAACI,WAAP,CAAmBC,QAAjD,CADf,IAEA,CAACV,cAAc,CAACK,MAAM,CAACM,YAAP,CAAoBD,QAArB,EAA+BL,MAAM,CAACM,YAAP,CAAoBD,QAAnD,CAHjB,EAIE;AACA,UAAM,IAAIE,KAAJ,CAAU,2BAAV,CAAN;AACD;;AAED,MAAIN,YAAY,CAACO,OAAb,CAAqBZ,YAArB,CAAJ,EAAwC;AACtC,WAAOG,MAAM,CAACU,cAAP,CAAsBC,QAAtB,CAA+BV,MAAM,CAACS,cAAtC,CAAP;AACD;;AACD,SAAOV,MAAM,CAACU,cAAP,CAAsBE,GAAtB,CAA0BC,QAA1B,CAAmCX,YAAY,CAACY,GAAb,CAAiBhB,mBAAjB,CAAnC,EAA0Ea,QAA1E,CAAmFV,MAAM,CAACS,cAA1F,CAAP;AACD;AAED,eAAeX,aAAf","sourcesContent":["import { Trade, Percent, currencyEquals } from '@pancakeswap/sdk'\r\nimport { ZERO_PERCENT, ONE_HUNDRED_PERCENT } from '../config/constants/index'\r\n\r\n// returns whether tradeB is better than tradeA by at least a threshold percentage amount\r\nexport function isTradeBetter(\r\n  tradeA: Trade | undefined | null,\r\n  tradeB: Trade | undefined | null,\r\n  minimumDelta: Percent = ZERO_PERCENT,\r\n): boolean | undefined {\r\n  if (tradeA && !tradeB) return false\r\n  if (tradeB && !tradeA) return true\r\n  if (!tradeA || !tradeB) return undefined\r\n\r\n  if (\r\n    tradeA.tradeType !== tradeB.tradeType ||\r\n    !currencyEquals(tradeA.inputAmount.currency, tradeB.inputAmount.currency) ||\r\n    !currencyEquals(tradeB.outputAmount.currency, tradeB.outputAmount.currency)\r\n  ) {\r\n    throw new Error('Trades are not comparable')\r\n  }\r\n\r\n  if (minimumDelta.equalTo(ZERO_PERCENT)) {\r\n    return tradeA.executionPrice.lessThan(tradeB.executionPrice)\r\n  }\r\n  return tradeA.executionPrice.raw.multiply(minimumDelta.add(ONE_HUNDRED_PERCENT)).lessThan(tradeB.executionPrice)\r\n}\r\n\r\nexport default isTradeBetter\r\n"]},"metadata":{},"sourceType":"module"}