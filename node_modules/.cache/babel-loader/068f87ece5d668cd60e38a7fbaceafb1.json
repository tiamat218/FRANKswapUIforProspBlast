{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Devrim\\\\Documents\\\\swapUIforProspBlast\\\\src\\\\views\\\\Predictions\\\\components\\\\RoundCard\\\\CardHeader.tsx\";\nimport React from 'react';\nimport { Flex, Text } from '@pancakeswap/uikit';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getBackgroundColor = (theme, status) => {\n  switch (status) {\n    case 'calculating':\n      return theme.colors.gradients.cardHeader;\n    case 'live':\n      return 'transparent';\n    case 'canceled':\n      return theme.colors.warning;\n    case 'next':\n      return theme.colors.secondary;\n    case 'expired':\n    case 'soon':\n    default:\n      return theme.colors.cardBorder;\n  }\n};\nconst getTextColorByStatus = (status, fallback) => {\n  switch (status) {\n    case 'expired':\n      return 'textDisabled';\n    case 'next':\n      return 'white';\n    case 'live':\n      return 'secondary';\n    case 'canceled':\n    case 'calculating':\n      return 'text';\n    default:\n      return fallback;\n  }\n};\nconst StyledCardHeader = styled.div`\n  align-items: center;\n  background: ${({\n  theme,\n  status\n}) => getBackgroundColor(theme, status)};\n  border-radius: 16px 16px 0 0;\n  display: flex;\n  justify-content: space-between;\n  padding: ${({\n  status\n}) => status === 'live' ? '16px' : '8px'};\n`;\n_c = StyledCardHeader;\nconst Round = styled.div`\n  justify-self: center;\n`;\n_c2 = Round;\nconst CardHeader = ({\n  status,\n  title,\n  epoch,\n  icon\n}) => {\n  const textColor = getTextColorByStatus(status, 'text');\n  const isLive = status === 'live';\n  return /*#__PURE__*/_jsxDEV(StyledCardHeader, {\n    status: status,\n    children: [/*#__PURE__*/_jsxDEV(Flex, {\n      alignItems: \"center\",\n      children: [icon, /*#__PURE__*/_jsxDEV(Text, {\n        color: textColor,\n        bold: isLive,\n        textTransform: isLive ? 'uppercase' : 'capitalize',\n        lineHeight: \"21px\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Round, {\n      children: /*#__PURE__*/_jsxDEV(Text, {\n        fontSize: isLive ? '14px' : '12px',\n        color: getTextColorByStatus(status, 'textSubtle'),\n        textAlign: \"center\",\n        children: `#${epoch}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_c3 = CardHeader;\nexport default CardHeader;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"StyledCardHeader\");\n$RefreshReg$(_c2, \"Round\");\n$RefreshReg$(_c3, \"CardHeader\");","map":{"version":3,"names":["React","Flex","Text","styled","jsxDEV","_jsxDEV","getBackgroundColor","theme","status","colors","gradients","cardHeader","warning","secondary","cardBorder","getTextColorByStatus","fallback","StyledCardHeader","div","_c","Round","_c2","CardHeader","title","epoch","icon","textColor","isLive","children","alignItems","color","bold","textTransform","lineHeight","fileName","_jsxFileName","lineNumber","columnNumber","fontSize","textAlign","_c3","$RefreshReg$"],"sources":["C:/Users/Devrim/Documents/swapUIforProspBlast/src/views/Predictions/components/RoundCard/CardHeader.tsx"],"sourcesContent":["import React, { ReactElement } from 'react'\r\nimport { Flex, Text } from '@pancakeswap/uikit'\r\nimport styled, { DefaultTheme } from 'styled-components'\r\n\r\ntype Status = 'expired' | 'live' | 'next' | 'soon' | 'canceled' | 'calculating'\r\n\r\ninterface CardHeaderProps {\r\n  status: Status\r\n  title: string\r\n  epoch: number\r\n  blockNumber: number\r\n  icon?: ReactElement\r\n}\r\n\r\nconst getBackgroundColor = (theme: DefaultTheme, status: Status) => {\r\n  switch (status) {\r\n    case 'calculating':\r\n      return theme.colors.gradients.cardHeader\r\n    case 'live':\r\n      return 'transparent'\r\n    case 'canceled':\r\n      return theme.colors.warning\r\n    case 'next':\r\n      return theme.colors.secondary\r\n    case 'expired':\r\n    case 'soon':\r\n    default:\r\n      return theme.colors.cardBorder\r\n  }\r\n}\r\n\r\ntype TextColor = 'textDisabled' | 'white' | 'secondary' | 'text' | 'textSubtle'\r\ntype FallbackColor = 'text' | 'textSubtle'\r\n\r\nconst getTextColorByStatus = (status: Status, fallback: FallbackColor): TextColor => {\r\n  switch (status) {\r\n    case 'expired':\r\n      return 'textDisabled'\r\n    case 'next':\r\n      return 'white'\r\n    case 'live':\r\n      return 'secondary'\r\n    case 'canceled':\r\n    case 'calculating':\r\n      return 'text'\r\n    default:\r\n      return fallback\r\n  }\r\n}\r\n\r\nconst StyledCardHeader = styled.div<{ status: Status }>`\r\n  align-items: center;\r\n  background: ${({ theme, status }) => getBackgroundColor(theme, status)};\r\n  border-radius: 16px 16px 0 0;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  padding: ${({ status }) => (status === 'live' ? '16px' : '8px')};\r\n`\r\n\r\nconst Round = styled.div`\r\n  justify-self: center;\r\n`\r\n\r\nconst CardHeader: React.FC<CardHeaderProps> = ({ status, title, epoch, icon }) => {\r\n  const textColor = getTextColorByStatus(status, 'text')\r\n  const isLive = status === 'live'\r\n\r\n  return (\r\n    <StyledCardHeader status={status}>\r\n      <Flex alignItems=\"center\">\r\n        {icon}\r\n        <Text color={textColor} bold={isLive} textTransform={isLive ? 'uppercase' : 'capitalize'} lineHeight=\"21px\">\r\n          {title}\r\n        </Text>\r\n      </Flex>\r\n      <Round>\r\n        <Text fontSize={isLive ? '14px' : '12px'} color={getTextColorByStatus(status, 'textSubtle')} textAlign=\"center\">\r\n          {`#${epoch}`}\r\n        </Text>\r\n      </Round>\r\n    </StyledCardHeader>\r\n  )\r\n}\r\n\r\nexport default CardHeader\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}