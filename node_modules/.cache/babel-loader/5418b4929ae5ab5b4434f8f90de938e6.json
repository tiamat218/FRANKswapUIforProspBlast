{"ast":null,"code":"import{random}from'lodash';/**\r\n * Generate a specific number of unique, randomised 7-digit lottery numbers between 1000000 & 1999999\r\n */const generateTicketNumbers=function(numberOfTickets,userCurrentTickets){let minNumber=arguments.length>2&&arguments[2]!==undefined?arguments[2]:1000000;let maxNumber=arguments.length>3&&arguments[3]!==undefined?arguments[3]:1999999;// Populate array with existing tickets (if they have them) to ensure no duplicates when generating new numbers\nconst existingTicketNumbers=(userCurrentTickets===null||userCurrentTickets===void 0?void 0:userCurrentTickets.length)>0?userCurrentTickets.map(ticket=>{return parseInt(ticket===null||ticket===void 0?void 0:ticket.number);}):[];const generatedTicketNumbers=[...existingTicketNumbers];for(let count=0;count<numberOfTickets;count++){let randomNumber=random(minNumber,maxNumber);while(generatedTicketNumbers.includes(randomNumber)){// Catch for duplicates - generate a new number until the array doesn't include the random number generated\nrandomNumber=random(minNumber,maxNumber);}generatedTicketNumbers.push(randomNumber);}// Filter out the users' existing tickets\nconst ticketsToBuy=(userCurrentTickets===null||userCurrentTickets===void 0?void 0:userCurrentTickets.length)>0?generatedTicketNumbers.filter(ticketNumber=>{return!existingTicketNumbers.includes(ticketNumber);}):generatedTicketNumbers;return ticketsToBuy;};export default generateTicketNumbers;","map":{"version":3,"names":["random","generateTicketNumbers","numberOfTickets","userCurrentTickets","minNumber","arguments","length","undefined","maxNumber","existingTicketNumbers","map","ticket","parseInt","number","generatedTicketNumbers","count","randomNumber","includes","push","ticketsToBuy","filter","ticketNumber"],"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/views/Lottery/components/BuyTicketsModal/generateTicketNumbers.tsx"],"sourcesContent":["import { LotteryTicket } from 'config/constants/types'\r\nimport { random } from 'lodash'\r\n\r\n/**\r\n * Generate a specific number of unique, randomised 7-digit lottery numbers between 1000000 & 1999999\r\n */\r\nconst generateTicketNumbers = (\r\n  numberOfTickets: number,\r\n  userCurrentTickets?: LotteryTicket[],\r\n  minNumber = 1000000,\r\n  maxNumber = 1999999,\r\n): number[] => {\r\n  // Populate array with existing tickets (if they have them) to ensure no duplicates when generating new numbers\r\n  const existingTicketNumbers =\r\n    userCurrentTickets?.length > 0\r\n      ? userCurrentTickets.map((ticket) => {\r\n          return parseInt(ticket?.number)\r\n        })\r\n      : []\r\n  const generatedTicketNumbers = [...existingTicketNumbers]\r\n\r\n  for (let count = 0; count < numberOfTickets; count++) {\r\n    let randomNumber = random(minNumber, maxNumber)\r\n    while (generatedTicketNumbers.includes(randomNumber)) {\r\n      // Catch for duplicates - generate a new number until the array doesn't include the random number generated\r\n      randomNumber = random(minNumber, maxNumber)\r\n    }\r\n    generatedTicketNumbers.push(randomNumber)\r\n  }\r\n\r\n  // Filter out the users' existing tickets\r\n  const ticketsToBuy =\r\n    userCurrentTickets?.length > 0\r\n      ? generatedTicketNumbers.filter((ticketNumber) => {\r\n          return !existingTicketNumbers.includes(ticketNumber)\r\n        })\r\n      : generatedTicketNumbers\r\n\r\n  return ticketsToBuy\r\n}\r\n\r\nexport default generateTicketNumbers\r\n"],"mappings":"AACA,OAASA,MAAM,KAAQ,QAAQ,CAE/B;AACA;AACA,GACA,KAAM,CAAAC,qBAAqB,CAAG,QAAAA,CAC5BC,eAAuB,CACvBC,kBAAoC,CAGvB,IAFb,CAAAC,SAAS,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,OAAO,IACnB,CAAAG,SAAS,CAAAH,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,OAAO,CAEnB;AACA,KAAM,CAAAI,qBAAqB,CACzB,CAAAN,kBAAkB,SAAlBA,kBAAkB,iBAAlBA,kBAAkB,CAAEG,MAAM,EAAG,CAAC,CAC1BH,kBAAkB,CAACO,GAAG,CAAEC,MAAM,EAAK,CACjC,MAAO,CAAAC,QAAQ,CAACD,MAAM,SAANA,MAAM,iBAANA,MAAM,CAAEE,MAAM,CAAC,CACjC,CAAC,CAAC,CACF,EAAE,CACR,KAAM,CAAAC,sBAAsB,CAAG,CAAC,GAAGL,qBAAqB,CAAC,CAEzD,IAAK,GAAI,CAAAM,KAAK,CAAG,CAAC,CAAEA,KAAK,CAAGb,eAAe,CAAEa,KAAK,EAAE,CAAE,CACpD,GAAI,CAAAC,YAAY,CAAGhB,MAAM,CAACI,SAAS,CAAEI,SAAS,CAAC,CAC/C,MAAOM,sBAAsB,CAACG,QAAQ,CAACD,YAAY,CAAC,CAAE,CACpD;AACAA,YAAY,CAAGhB,MAAM,CAACI,SAAS,CAAEI,SAAS,CAAC,CAC7C,CACAM,sBAAsB,CAACI,IAAI,CAACF,YAAY,CAAC,CAC3C,CAEA;AACA,KAAM,CAAAG,YAAY,CAChB,CAAAhB,kBAAkB,SAAlBA,kBAAkB,iBAAlBA,kBAAkB,CAAEG,MAAM,EAAG,CAAC,CAC1BQ,sBAAsB,CAACM,MAAM,CAAEC,YAAY,EAAK,CAC9C,MAAO,CAACZ,qBAAqB,CAACQ,QAAQ,CAACI,YAAY,CAAC,CACtD,CAAC,CAAC,CACFP,sBAAsB,CAE5B,MAAO,CAAAK,YAAY,CACrB,CAAC,CAED,cAAe,CAAAlB,qBAAqB","ignoreList":[]},"metadata":{},"sourceType":"module"}