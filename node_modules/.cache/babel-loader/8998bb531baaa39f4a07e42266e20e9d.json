{"ast":null,"code":"import BigNumber from 'bignumber.js';\nimport { getCakeVaultContract } from 'utils/contractHelpers';\nconst cakeVaultContract = getCakeVaultContract();\nconst fetchVaultUser = async account => {\n  try {\n    const userContractResponse = await cakeVaultContract.userInfo(account);\n    return {\n      isLoading: false,\n      userShares: new BigNumber(userContractResponse.shares.toString()).toJSON(),\n      lastDepositedTime: userContractResponse.lastDepositedTime.toString(),\n      lastUserActionTime: userContractResponse.lastUserActionTime.toString(),\n      cakeAtLastUserAction: new BigNumber(userContractResponse.cakeAtLastUserAction.toString()).toJSON()\n    };\n  } catch (error) {\n    return {\n      isLoading: true,\n      userShares: null,\n      lastDepositedTime: null,\n      lastUserActionTime: null,\n      cakeAtLastUserAction: null\n    };\n  }\n};\nexport default fetchVaultUser;","map":{"version":3,"names":["BigNumber","getCakeVaultContract","cakeVaultContract","fetchVaultUser","account","userContractResponse","userInfo","isLoading","userShares","shares","toString","toJSON","lastDepositedTime","lastUserActionTime","cakeAtLastUserAction","error"],"sources":["C:/Users/Devrim/Documents/swapUIforProspBlast/src/state/pools/fetchVaultUser.ts"],"sourcesContent":["import BigNumber from 'bignumber.js'\r\nimport { getCakeVaultContract } from 'utils/contractHelpers'\r\n\r\nconst cakeVaultContract = getCakeVaultContract()\r\n\r\nconst fetchVaultUser = async (account: string) => {\r\n  try {\r\n    const userContractResponse = await cakeVaultContract.userInfo(account)\r\n    return {\r\n      isLoading: false,\r\n      userShares: new BigNumber(userContractResponse.shares.toString()).toJSON(),\r\n      lastDepositedTime: userContractResponse.lastDepositedTime.toString(),\r\n      lastUserActionTime: userContractResponse.lastUserActionTime.toString(),\r\n      cakeAtLastUserAction: new BigNumber(userContractResponse.cakeAtLastUserAction.toString()).toJSON(),\r\n    }\r\n  } catch (error) {\r\n    return {\r\n      isLoading: true,\r\n      userShares: null,\r\n      lastDepositedTime: null,\r\n      lastUserActionTime: null,\r\n      cakeAtLastUserAction: null,\r\n    }\r\n  }\r\n}\r\n\r\nexport default fetchVaultUser\r\n"],"mappings":"AAAA,OAAOA,SAAS,MAAM,cAAc;AACpC,SAASC,oBAAoB,QAAQ,uBAAuB;AAE5D,MAAMC,iBAAiB,GAAGD,oBAAoB,CAAC,CAAC;AAEhD,MAAME,cAAc,GAAG,MAAOC,OAAe,IAAK;EAChD,IAAI;IACF,MAAMC,oBAAoB,GAAG,MAAMH,iBAAiB,CAACI,QAAQ,CAACF,OAAO,CAAC;IACtE,OAAO;MACLG,SAAS,EAAE,KAAK;MAChBC,UAAU,EAAE,IAAIR,SAAS,CAACK,oBAAoB,CAACI,MAAM,CAACC,QAAQ,CAAC,CAAC,CAAC,CAACC,MAAM,CAAC,CAAC;MAC1EC,iBAAiB,EAAEP,oBAAoB,CAACO,iBAAiB,CAACF,QAAQ,CAAC,CAAC;MACpEG,kBAAkB,EAAER,oBAAoB,CAACQ,kBAAkB,CAACH,QAAQ,CAAC,CAAC;MACtEI,oBAAoB,EAAE,IAAId,SAAS,CAACK,oBAAoB,CAACS,oBAAoB,CAACJ,QAAQ,CAAC,CAAC,CAAC,CAACC,MAAM,CAAC;IACnG,CAAC;EACH,CAAC,CAAC,OAAOI,KAAK,EAAE;IACd,OAAO;MACLR,SAAS,EAAE,IAAI;MACfC,UAAU,EAAE,IAAI;MAChBI,iBAAiB,EAAE,IAAI;MACvBC,kBAAkB,EAAE,IAAI;MACxBC,oBAAoB,EAAE;IACxB,CAAC;EACH;AACF,CAAC;AAED,eAAeX,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module"}