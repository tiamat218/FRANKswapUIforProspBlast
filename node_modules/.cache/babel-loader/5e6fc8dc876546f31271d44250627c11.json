{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Devrim\\\\Documents\\\\FRANKswapUIforProspBlast\\\\src\\\\views\\\\Ifos\\\\components\\\\IfoSteps.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport every from 'lodash/every';\nimport { Stepper, Step, Card, CardBody, Heading, Text, Button, Link, OpenNewIcon } from '@pancakeswap/uikit';\nimport { BASE_ADD_LIQUIDITY_URL } from 'config';\nimport { useTranslation } from 'contexts/Localization';\nimport useTokenBalance from 'hooks/useTokenBalance';\nimport Container from 'components/Layout/Container';\nimport { useProfile } from 'state/profile/hooks';\nimport { getAddress } from 'utils/addressHelpers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Wrapper = styled(Container)`\n  background: ${({\n  theme\n}) => theme.colors.gradients.bubblegum};\n  margin-left: -16px;\n  margin-right: -16px;\n  padding-top: 48px;\n  padding-bottom: 48px;\n\n  ${({\n  theme\n}) => theme.mediaQueries.sm} {\n    margin-left: -24px;\n    margin-right: -24px;\n  }\n`;\n_c = Wrapper;\n\nconst IfoSteps = ({\n  ifo,\n  walletIfoData\n}) => {\n  _s();\n\n  const {\n    poolBasic,\n    poolUnlimited\n  } = walletIfoData;\n  const {\n    hasProfile\n  } = useProfile();\n  const {\n    t\n  } = useTranslation();\n  const {\n    balance\n  } = useTokenBalance(getAddress(ifo.currency.address));\n  const stepsValidationStatus = [hasProfile, balance.isGreaterThan(0), poolBasic.amountTokenCommittedInLP.isGreaterThan(0) || poolUnlimited.amountTokenCommittedInLP.isGreaterThan(0), poolBasic.hasClaimed || poolUnlimited.hasClaimed];\n\n  const getStatusProp = index => {\n    const arePreviousValid = index === 0 ? true : every(stepsValidationStatus.slice(0, index), Boolean);\n\n    if (stepsValidationStatus[index]) {\n      return arePreviousValid ? 'past' : 'future';\n    }\n\n    return arePreviousValid ? 'current' : 'future';\n  };\n\n  const renderCardBody = step => {\n    const isStepValid = stepsValidationStatus[step];\n\n    switch (step) {\n      case 0:\n        return /*#__PURE__*/_jsxDEV(CardBody, {\n          children: [/*#__PURE__*/_jsxDEV(Heading, {\n            as: \"h4\",\n            color: \"secondary\",\n            mb: \"16px\",\n            children: t('Activate your Profile')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            color: \"textSubtle\",\n            small: true,\n            mb: \"16px\",\n            children: t('You’ll need an active PancakeSwap Profile to take part in an IFO!')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this);\n\n      case 1:\n        return /*#__PURE__*/_jsxDEV(CardBody, {\n          children: [/*#__PURE__*/_jsxDEV(Heading, {\n            as: \"h4\",\n            color: \"secondary\",\n            mb: \"16px\",\n            children: t('Get CAKE-BNB LP Tokens')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            color: \"textSubtle\",\n            small: true,\n            children: [t('Stake CAKE and BNB in the liquidity pool to get LP tokens.'), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 81\n            }, this), t('You’ll spend them to buy IFO sale tokens.')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            as: Link,\n            external: true,\n            href: `${BASE_ADD_LIQUIDITY_URL}/BNB/0e09fabb73bd3ade0a17ecc321fd13a19e81ce82`,\n            endIcon: /*#__PURE__*/_jsxDEV(OpenNewIcon, {\n              color: \"white\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 24\n            }, this),\n            mt: \"16px\",\n            children: t('Get LP tokens')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this);\n\n      case 2:\n        return /*#__PURE__*/_jsxDEV(CardBody, {\n          children: [/*#__PURE__*/_jsxDEV(Heading, {\n            as: \"h4\",\n            color: \"secondary\",\n            mb: \"16px\",\n            children: t('Commit LP Tokens')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            color: \"textSubtle\",\n            small: true,\n            children: [t('When the IFO sales are live, you can “commit” your LP tokens to buy the tokens being sold.'), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 113\n            }, this), t('We recommend committing to the Basic Sale first, but you can do both if you like.')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this);\n\n      case 3:\n        return /*#__PURE__*/_jsxDEV(CardBody, {\n          children: [/*#__PURE__*/_jsxDEV(Heading, {\n            as: \"h4\",\n            color: \"secondary\",\n            mb: \"16px\",\n            children: t('Claim your tokens and achievement')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            color: \"textSubtle\",\n            small: true,\n            children: t('After the IFO sales finish, you can claim any IFO tokens that you bought, and any unspent CAKE-BNB LP tokens will be returned to your wallet.')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this);\n\n      default:\n        return null;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: [/*#__PURE__*/_jsxDEV(Heading, {\n      as: \"h2\",\n      scale: \"xl\",\n      color: \"secondary\",\n      mb: \"24px\",\n      textAlign: \"center\",\n      children: t('How to Take Part')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Stepper, {\n      children: stepsValidationStatus.map((_, index) =>\n      /*#__PURE__*/\n      // eslint-disable-next-line react/no-array-index-key\n      _jsxDEV(Step, {\n        index: index,\n        status: getStatusProp(index),\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: renderCardBody(index)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 5\n  }, this);\n};\n\n_s(IfoSteps, \"hNiXeCUCq5eCybx/oqp3g5Mpu+w=\", false, function () {\n  return [useProfile, useTranslation, useTokenBalance];\n});\n\n_c2 = IfoSteps;\nexport default IfoSteps;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"IfoSteps\");","map":{"version":3,"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/views/Ifos/components/IfoSteps.tsx"],"names":["React","styled","every","Stepper","Step","Card","CardBody","Heading","Text","Button","Link","OpenNewIcon","BASE_ADD_LIQUIDITY_URL","useTranslation","useTokenBalance","Container","useProfile","getAddress","Wrapper","theme","colors","gradients","bubblegum","mediaQueries","sm","IfoSteps","ifo","walletIfoData","poolBasic","poolUnlimited","hasProfile","t","balance","currency","address","stepsValidationStatus","isGreaterThan","amountTokenCommittedInLP","hasClaimed","getStatusProp","index","arePreviousValid","slice","Boolean","renderCardBody","step","isStepValid","map","_"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\nimport every from 'lodash/every'\r\nimport { Stepper, Step, StepStatus, Card, CardBody, Heading, Text, Button, Link, OpenNewIcon } from '@pancakeswap/uikit'\r\nimport { BASE_ADD_LIQUIDITY_URL } from 'config'\r\nimport { Ifo } from 'config/constants/types'\r\nimport { WalletIfoData } from 'views/Ifos/types'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useTokenBalance from 'hooks/useTokenBalance'\r\nimport Container from 'components/Layout/Container'\r\nimport { useProfile } from 'state/profile/hooks'\r\nimport { getAddress } from 'utils/addressHelpers'\r\n\r\ninterface Props {\r\n  ifo: Ifo\r\n  walletIfoData: WalletIfoData\r\n}\r\n\r\nconst Wrapper = styled(Container)`\r\n  background: ${({ theme }) => theme.colors.gradients.bubblegum};\r\n  margin-left: -16px;\r\n  margin-right: -16px;\r\n  padding-top: 48px;\r\n  padding-bottom: 48px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    margin-left: -24px;\r\n    margin-right: -24px;\r\n  }\r\n`\r\n\r\nconst IfoSteps: React.FC<Props> = ({ ifo, walletIfoData }) => {\r\n  const { poolBasic, poolUnlimited } = walletIfoData\r\n  const { hasProfile } = useProfile()\r\n  const { t } = useTranslation()\r\n  const { balance } = useTokenBalance(getAddress(ifo.currency.address))\r\n  const stepsValidationStatus = [\r\n    hasProfile,\r\n    balance.isGreaterThan(0),\r\n    poolBasic.amountTokenCommittedInLP.isGreaterThan(0) || poolUnlimited.amountTokenCommittedInLP.isGreaterThan(0),\r\n    poolBasic.hasClaimed || poolUnlimited.hasClaimed,\r\n  ]\r\n\r\n  const getStatusProp = (index: number): StepStatus => {\r\n    const arePreviousValid = index === 0 ? true : every(stepsValidationStatus.slice(0, index), Boolean)\r\n    if (stepsValidationStatus[index]) {\r\n      return arePreviousValid ? 'past' : 'future'\r\n    }\r\n    return arePreviousValid ? 'current' : 'future'\r\n  }\r\n\r\n  const renderCardBody = (step: number) => {\r\n    const isStepValid = stepsValidationStatus[step]\r\n    switch (step) {\r\n      case 0:\r\n        return (\r\n          <CardBody>\r\n            <Heading as=\"h4\" color=\"secondary\" mb=\"16px\">\r\n              {t('Activate your Profile')}\r\n            </Heading>\r\n            <Text color=\"textSubtle\" small mb=\"16px\">\r\n              {t('You’ll need an active PancakeSwap Profile to take part in an IFO!')}\r\n            </Text>\r\n\r\n{/*             {isStepValid ? (\r\n              <Text color=\"success\" bold>\r\n                {t('Profile Active!')}\r\n              </Text>\r\n            ) : (\r\n              <Button as={Link} href=\"/profile\">\r\n                {t('Activate your Profile')}\r\n              </Button>\r\n            )} */}\r\n\r\n          </CardBody>\r\n        )\r\n      case 1:\r\n        return (\r\n          <CardBody>\r\n            <Heading as=\"h4\" color=\"secondary\" mb=\"16px\">\r\n              {t('Get CAKE-BNB LP Tokens')}\r\n            </Heading>\r\n            <Text color=\"textSubtle\" small>\r\n              {t('Stake CAKE and BNB in the liquidity pool to get LP tokens.')} <br />\r\n              {t('You’ll spend them to buy IFO sale tokens.')}\r\n            </Text>\r\n            <Button\r\n              as={Link}\r\n              external\r\n              href={`${BASE_ADD_LIQUIDITY_URL}/BNB/0e09fabb73bd3ade0a17ecc321fd13a19e81ce82`}\r\n              endIcon={<OpenNewIcon color=\"white\" />}\r\n              mt=\"16px\"\r\n            >\r\n              {t('Get LP tokens')}\r\n            </Button>\r\n          </CardBody>\r\n        )\r\n      case 2:\r\n        return (\r\n          <CardBody>\r\n            <Heading as=\"h4\" color=\"secondary\" mb=\"16px\">\r\n              {t('Commit LP Tokens')}\r\n            </Heading>\r\n            <Text color=\"textSubtle\" small>\r\n              {t('When the IFO sales are live, you can “commit” your LP tokens to buy the tokens being sold.')} <br />\r\n              {t('We recommend committing to the Basic Sale first, but you can do both if you like.')}\r\n            </Text>\r\n          </CardBody>\r\n        )\r\n      case 3:\r\n        return (\r\n          <CardBody>\r\n            <Heading as=\"h4\" color=\"secondary\" mb=\"16px\">\r\n              {t('Claim your tokens and achievement')}\r\n            </Heading>\r\n            <Text color=\"textSubtle\" small>\r\n              {t(\r\n                'After the IFO sales finish, you can claim any IFO tokens that you bought, and any unspent CAKE-BNB LP tokens will be returned to your wallet.',\r\n              )}\r\n            </Text>\r\n          </CardBody>\r\n        )\r\n      default:\r\n        return null\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Heading as=\"h2\" scale=\"xl\" color=\"secondary\" mb=\"24px\" textAlign=\"center\">\r\n        {t('How to Take Part')}\r\n      </Heading>\r\n      <Stepper>\r\n        {stepsValidationStatus.map((_, index) => (\r\n          // eslint-disable-next-line react/no-array-index-key\r\n          <Step key={index} index={index} status={getStatusProp(index)}>\r\n            <Card>{renderCardBody(index)}</Card>\r\n          </Step>\r\n        ))}\r\n      </Stepper>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default IfoSteps\r\n"]},"metadata":{},"sourceType":"module"}