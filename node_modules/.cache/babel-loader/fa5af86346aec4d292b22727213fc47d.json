{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\frkul\\\\Documents\\\\swapUI_pancake-frontend\\\\src\\\\components\\\\App\\\\Transactions\\\\TransactionsModal.tsx\",\n  _s = $RefreshSig$();\nimport React, { useMemo, useCallback } from 'react';\nimport useActiveWeb3React from 'hooks/useActiveWeb3React';\nimport { useDispatch } from 'react-redux';\nimport { Modal, ModalBody, Text, Button, Flex } from '@pancakeswap/uikit';\nimport { useTranslation } from 'contexts/Localization';\nimport { isTransactionRecent, useAllTransactions } from 'state/transactions/hooks';\nimport { clearAllTransactions } from 'state/transactions/actions';\nimport { AutoRow } from '../../Layout/Row';\nimport Transaction from './Transaction';\n\n// we want the latest one to come first, so return negative if a is after b\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction newTransactionsFirst(a, b) {\n  return b.addedTime - a.addedTime;\n}\nfunction renderTransactions(transactions) {\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    flexDirection: \"column\",\n    children: transactions.map(tx => {\n      return /*#__PURE__*/_jsxDEV(Transaction, {\n        tx: tx\n      }, tx.hash + tx.addedTime, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 16\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\nconst TransactionsModal = ({\n  onDismiss\n}) => {\n  _s();\n  const {\n    account,\n    chainId\n  } = useActiveWeb3React();\n  const dispatch = useDispatch();\n  const allTransactions = useAllTransactions();\n  const {\n    t\n  } = useTranslation();\n  const sortedRecentTransactions = useMemo(() => {\n    const txs = Object.values(allTransactions);\n    return txs.filter(isTransactionRecent).sort(newTransactionsFirst);\n  }, [allTransactions]);\n  const pending = sortedRecentTransactions.filter(tx => !tx.receipt);\n  const confirmed = sortedRecentTransactions.filter(tx => tx.receipt);\n  const clearAllTransactionsCallback = useCallback(() => {\n    if (chainId) dispatch(clearAllTransactions({\n      chainId\n    }));\n  }, [dispatch, chainId]);\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    title: t('Recent Transactions'),\n    headerBackground: \"gradients.cardHeader\",\n    onDismiss: onDismiss,\n    children: account && /*#__PURE__*/_jsxDEV(ModalBody, {\n      children: !!pending.length || !!confirmed.length ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(AutoRow, {\n          mb: \"1rem\",\n          style: {\n            justifyContent: 'space-between'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            children: t('Recent Transactions')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"tertiary\",\n            scale: \"xs\",\n            onClick: clearAllTransactionsCallback,\n            children: t('clear all')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 15\n        }, this), renderTransactions(pending), renderTransactions(confirmed)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(Text, {\n        children: t('No recent transactions')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(TransactionsModal, \"+OttIcd1uJrBkquoI1joUIiA6Gc=\", false, function () {\n  return [useActiveWeb3React, useDispatch, useAllTransactions, useTranslation];\n});\n_c = TransactionsModal;\nexport default TransactionsModal;\nvar _c;\n$RefreshReg$(_c, \"TransactionsModal\");","map":{"version":3,"names":["React","useMemo","useCallback","useActiveWeb3React","useDispatch","Modal","ModalBody","Text","Button","Flex","useTranslation","isTransactionRecent","useAllTransactions","clearAllTransactions","AutoRow","Transaction","jsxDEV","_jsxDEV","Fragment","_Fragment","newTransactionsFirst","a","b","addedTime","renderTransactions","transactions","flexDirection","children","map","tx","hash","fileName","_jsxFileName","lineNumber","columnNumber","TransactionsModal","onDismiss","_s","account","chainId","dispatch","allTransactions","t","sortedRecentTransactions","txs","Object","values","filter","sort","pending","receipt","confirmed","clearAllTransactionsCallback","title","headerBackground","length","mb","style","justifyContent","variant","scale","onClick","_c","$RefreshReg$"],"sources":["C:/Users/frkul/Documents/swapUI_pancake-frontend/src/components/App/Transactions/TransactionsModal.tsx"],"sourcesContent":["import React, { useMemo, useCallback } from 'react'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport { useDispatch } from 'react-redux'\r\nimport { Modal, ModalBody, Text, Button, Flex, InjectedModalProps } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { isTransactionRecent, useAllTransactions } from 'state/transactions/hooks'\r\nimport { TransactionDetails } from 'state/transactions/reducer'\r\nimport { AppDispatch } from 'state'\r\nimport { clearAllTransactions } from 'state/transactions/actions'\r\nimport { AutoRow } from '../../Layout/Row'\r\nimport Transaction from './Transaction'\r\n\r\n// we want the latest one to come first, so return negative if a is after b\r\nfunction newTransactionsFirst(a: TransactionDetails, b: TransactionDetails) {\r\n  return b.addedTime - a.addedTime\r\n}\r\n\r\nfunction renderTransactions(transactions: TransactionDetails[]) {\r\n  return (\r\n    <Flex flexDirection=\"column\">\r\n      {transactions.map((tx) => {\r\n        return <Transaction key={tx.hash + tx.addedTime} tx={tx} />\r\n      })}\r\n    </Flex>\r\n  )\r\n}\r\n\r\nconst TransactionsModal: React.FC<InjectedModalProps> = ({ onDismiss }) => {\r\n  const { account, chainId } = useActiveWeb3React()\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const allTransactions = useAllTransactions()\r\n\r\n  const { t } = useTranslation()\r\n\r\n  const sortedRecentTransactions = useMemo(() => {\r\n    const txs = Object.values(allTransactions)\r\n    return txs.filter(isTransactionRecent).sort(newTransactionsFirst)\r\n  }, [allTransactions])\r\n\r\n  const pending = sortedRecentTransactions.filter((tx) => !tx.receipt)\r\n  const confirmed = sortedRecentTransactions.filter((tx) => tx.receipt)\r\n\r\n  const clearAllTransactionsCallback = useCallback(() => {\r\n    if (chainId) dispatch(clearAllTransactions({ chainId }))\r\n  }, [dispatch, chainId])\r\n\r\n  return (\r\n    <Modal title={t('Recent Transactions')} headerBackground=\"gradients.cardHeader\" onDismiss={onDismiss}>\r\n      {account && (\r\n        <ModalBody>\r\n          {!!pending.length || !!confirmed.length ? (\r\n            <>\r\n              <AutoRow mb=\"1rem\" style={{ justifyContent: 'space-between' }}>\r\n                <Text>{t('Recent Transactions')}</Text>\r\n                <Button variant=\"tertiary\" scale=\"xs\" onClick={clearAllTransactionsCallback}>\r\n                  {t('clear all')}\r\n                </Button>\r\n              </AutoRow>\r\n              {renderTransactions(pending)}\r\n              {renderTransactions(confirmed)}\r\n            </>\r\n          ) : (\r\n            <Text>{t('No recent transactions')}</Text>\r\n          )}\r\n        </ModalBody>\r\n      )}\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default TransactionsModal\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}