{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\frkul\\\\Documents\\\\swapUI_pancake-frontend\\\\src\\\\components\\\\SearchInput\\\\SearchInput.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useMemo } from 'react';\nimport { Input } from '@pancakeswap/uikit';\nimport styled from 'styled-components';\nimport debounce from 'lodash/debounce';\nimport { useTranslation } from 'contexts/Localization';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledInput = styled(Input)`\n  border-radius: 16px;\n  margin-left: auto;\n`;\n_c = StyledInput;\nconst InputWrapper = styled.div`\n  position: relative;\n  ${({\n  theme\n}) => theme.mediaQueries.sm} {\n    display: block;\n  }\n`;\n_c2 = InputWrapper;\nconst Container = styled.div``;\n_c3 = Container;\nconst SearchInput = ({\n  onChange: onChangeCallback,\n  placeholder = 'Search'\n}) => {\n  _s();\n  const [toggled, setToggled] = useState(false);\n  const [searchText, setSearchText] = useState('');\n  const {\n    t\n  } = useTranslation();\n  const debouncedOnChange = useMemo(() => debounce(e => onChangeCallback(e), 500), [onChangeCallback]);\n  const onChange = e => {\n    setSearchText(e.target.value);\n    debouncedOnChange(e);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    toggled: toggled,\n    children: /*#__PURE__*/_jsxDEV(InputWrapper, {\n      children: /*#__PURE__*/_jsxDEV(StyledInput, {\n        value: searchText,\n        onChange: onChange,\n        placeholder: t(placeholder),\n        onBlur: () => setToggled(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchInput, \"ieV7w7pZLYox94DtC+qRTh17PVA=\", false, function () {\n  return [useTranslation];\n});\n_c4 = SearchInput;\nexport default SearchInput;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"StyledInput\");\n$RefreshReg$(_c2, \"InputWrapper\");\n$RefreshReg$(_c3, \"Container\");\n$RefreshReg$(_c4, \"SearchInput\");","map":{"version":3,"names":["React","useState","useMemo","Input","styled","debounce","useTranslation","jsxDEV","_jsxDEV","StyledInput","_c","InputWrapper","div","theme","mediaQueries","sm","_c2","Container","_c3","SearchInput","onChange","onChangeCallback","placeholder","_s","toggled","setToggled","searchText","setSearchText","t","debouncedOnChange","e","target","value","children","onBlur","fileName","_jsxFileName","lineNumber","columnNumber","_c4","$RefreshReg$"],"sources":["C:/Users/frkul/Documents/swapUI_pancake-frontend/src/components/SearchInput/SearchInput.tsx"],"sourcesContent":["import React, { useState, useMemo } from 'react'\r\nimport { Input } from '@pancakeswap/uikit'\r\nimport styled from 'styled-components'\r\nimport debounce from 'lodash/debounce'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\nconst StyledInput = styled(Input)`\r\n  border-radius: 16px;\r\n  margin-left: auto;\r\n`\r\n\r\nconst InputWrapper = styled.div`\r\n  position: relative;\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    display: block;\r\n  }\r\n`\r\n\r\nconst Container = styled.div<{ toggled: boolean }>``\r\n\r\ninterface Props {\r\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void\r\n  placeholder?: string\r\n}\r\n\r\nconst SearchInput: React.FC<Props> = ({ onChange: onChangeCallback, placeholder = 'Search' }) => {\r\n  const [toggled, setToggled] = useState(false)\r\n  const [searchText, setSearchText] = useState('')\r\n\r\n  const { t } = useTranslation()\r\n\r\n  const debouncedOnChange = useMemo(\r\n    () => debounce((e: React.ChangeEvent<HTMLInputElement>) => onChangeCallback(e), 500),\r\n    [onChangeCallback],\r\n  )\r\n\r\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setSearchText(e.target.value)\r\n    debouncedOnChange(e)\r\n  }\r\n\r\n  return (\r\n    <Container toggled={toggled}>\r\n      <InputWrapper>\r\n        <StyledInput\r\n          value={searchText}\r\n          onChange={onChange}\r\n          placeholder={t(placeholder)}\r\n          onBlur={() => setToggled(false)}\r\n        />\r\n      </InputWrapper>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default SearchInput\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,OAAO,QAAQ,OAAO;AAChD,SAASC,KAAK,QAAQ,oBAAoB;AAC1C,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAOC,QAAQ,MAAM,iBAAiB;AACtC,SAASC,cAAc,QAAQ,uBAAuB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEtD,MAAMC,WAAW,GAAGL,MAAM,CAACD,KAAK,CAAC;AACjC;AACA;AACA,CAAC;AAAAO,EAAA,GAHKD,WAAW;AAKjB,MAAME,YAAY,GAAGP,MAAM,CAACQ,GAAG;AAC/B;AACA,IAAI,CAAC;EAAEC;AAAM,CAAC,KAAKA,KAAK,CAACC,YAAY,CAACC,EAAE;AACxC;AACA;AACA,CAAC;AAAAC,GAAA,GALKL,YAAY;AAOlB,MAAMM,SAAS,GAAGb,MAAM,CAACQ,GAAyB,EAAE;AAAAM,GAAA,GAA9CD,SAAS;AAOf,MAAME,WAA4B,GAAGA,CAAC;EAAEC,QAAQ,EAAEC,gBAAgB;EAAEC,WAAW,GAAG;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC/F,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGxB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACyB,UAAU,EAAEC,aAAa,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC;EAEhD,MAAM;IAAE2B;EAAE,CAAC,GAAGtB,cAAc,CAAC,CAAC;EAE9B,MAAMuB,iBAAiB,GAAG3B,OAAO,CAC/B,MAAMG,QAAQ,CAAEyB,CAAsC,IAAKT,gBAAgB,CAACS,CAAC,CAAC,EAAE,GAAG,CAAC,EACpF,CAACT,gBAAgB,CACnB,CAAC;EAED,MAAMD,QAAQ,GAAIU,CAAsC,IAAK;IAC3DH,aAAa,CAACG,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;IAC7BH,iBAAiB,CAACC,CAAC,CAAC;EACtB,CAAC;EAED,oBACEtB,OAAA,CAACS,SAAS;IAACO,OAAO,EAAEA,OAAQ;IAAAS,QAAA,eAC1BzB,OAAA,CAACG,YAAY;MAAAsB,QAAA,eACXzB,OAAA,CAACC,WAAW;QACVuB,KAAK,EAAEN,UAAW;QAClBN,QAAQ,EAAEA,QAAS;QACnBE,WAAW,EAAEM,CAAC,CAACN,WAAW,CAAE;QAC5BY,MAAM,EAAEA,CAAA,KAAMT,UAAU,CAAC,KAAK;MAAE;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACU;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEhB,CAAC;AAAAf,EAAA,CA5BKJ,WAA4B;EAAA,QAIlBb,cAAc;AAAA;AAAAiC,GAAA,GAJxBpB,WAA4B;AA8BlC,eAAeA,WAAW;AAAA,IAAAT,EAAA,EAAAM,GAAA,EAAAE,GAAA,EAAAqB,GAAA;AAAAC,YAAA,CAAA9B,EAAA;AAAA8B,YAAA,CAAAxB,GAAA;AAAAwB,YAAA,CAAAtB,GAAA;AAAAsB,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}