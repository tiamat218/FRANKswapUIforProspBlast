{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Devrim\\\\Documents\\\\FRANKswapUIforProspBlast\\\\src\\\\views\\\\Voting\\\\CreateProposal\\\\Choices.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Button, Card, CardBody, CardHeader, Heading } from '@pancakeswap/uikit';\nimport uniqueId from 'lodash/uniqueId';\nimport { useTranslation } from 'contexts/Localization';\nimport Choice from './Choice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MINIMUM_CHOICES = 2;\nexport const makeChoice = () => ({\n  id: uniqueId(),\n  value: ''\n});\n\nconst Choices = ({\n  choices,\n  onChange\n}) => {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  const hasMinimumChoices = choices.filter(choice => choice.value.length > 0).length >= MINIMUM_CHOICES;\n\n  const addChoice = () => {\n    onChange([...choices, makeChoice()]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n      children: /*#__PURE__*/_jsxDEV(Heading, {\n        as: \"h3\",\n        scale: \"md\",\n        children: t('Choices')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n      children: [choices.map(({\n        id,\n        value\n      }, index) => {\n        const handleTextInput = newValue => {\n          const newChoices = [...choices];\n          const choiceIndex = newChoices.findIndex(newChoice => newChoice.id === id);\n          newChoices[choiceIndex].value = newValue;\n          onChange(newChoices);\n        };\n\n        const handleRemove = () => {\n          onChange(choices.filter(newPrevChoice => newPrevChoice.id !== id));\n        };\n\n        return /*#__PURE__*/_jsxDEV(Choice, {\n          scale: \"lg\",\n          onTextInput: handleTextInput,\n          placeholder: t('Input choice text'),\n          value: value,\n          onRemove: index > 1 ? handleRemove : undefined\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"button\",\n        onClick: addChoice,\n        disabled: !hasMinimumChoices,\n        children: t('Add Choice')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Choices, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n\n_c = Choices;\nexport default Choices;\n\nvar _c;\n\n$RefreshReg$(_c, \"Choices\");","map":{"version":3,"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/views/Voting/CreateProposal/Choices.tsx"],"names":["React","Button","Card","CardBody","CardHeader","Heading","uniqueId","useTranslation","Choice","MINIMUM_CHOICES","makeChoice","id","value","Choices","choices","onChange","t","hasMinimumChoices","filter","choice","length","addChoice","map","index","handleTextInput","newValue","newChoices","choiceIndex","findIndex","newChoice","handleRemove","newPrevChoice","undefined"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,QAAvB,EAAiCC,UAAjC,EAA6CC,OAA7C,QAA4D,oBAA5D;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,SAASC,cAAT,QAA+B,uBAA/B;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAYA,OAAO,MAAMC,eAAe,GAAG,CAAxB;AACP,OAAO,MAAMC,UAAU,GAAG,OAAe;AAAEC,EAAAA,EAAE,EAAEL,QAAQ,EAAd;AAAkBM,EAAAA,KAAK,EAAE;AAAzB,CAAf,CAAnB;;AAEP,MAAMC,OAA+B,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAAD,KAA2B;AAAA;;AACjE,QAAM;AAAEC,IAAAA;AAAF,MAAQT,cAAc,EAA5B;AACA,QAAMU,iBAAiB,GAAGH,OAAO,CAACI,MAAR,CAAgBC,MAAD,IAAYA,MAAM,CAACP,KAAP,CAAaQ,MAAb,GAAsB,CAAjD,EAAoDA,MAApD,IAA8DX,eAAxF;;AAEA,QAAMY,SAAS,GAAG,MAAM;AACtBN,IAAAA,QAAQ,CAAC,CAAC,GAAGD,OAAJ,EAAaJ,UAAU,EAAvB,CAAD,CAAR;AACD,GAFD;;AAIA,sBACE,QAAC,IAAD;AAAA,4BACE,QAAC,UAAD;AAAA,6BACE,QAAC,OAAD;AAAS,QAAA,EAAE,EAAC,IAAZ;AAAiB,QAAA,KAAK,EAAC,IAAvB;AAAA,kBACGM,CAAC,CAAC,SAAD;AADJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAME,QAAC,QAAD;AAAA,iBACGF,OAAO,CAACQ,GAAR,CAAY,CAAC;AAAEX,QAAAA,EAAF;AAAMC,QAAAA;AAAN,OAAD,EAAgBW,KAAhB,KAA0B;AACrC,cAAMC,eAAe,GAAIC,QAAD,IAAsB;AAC5C,gBAAMC,UAAU,GAAG,CAAC,GAAGZ,OAAJ,CAAnB;AACA,gBAAMa,WAAW,GAAGD,UAAU,CAACE,SAAX,CAAsBC,SAAD,IAAeA,SAAS,CAAClB,EAAV,KAAiBA,EAArD,CAApB;AAEAe,UAAAA,UAAU,CAACC,WAAD,CAAV,CAAwBf,KAAxB,GAAgCa,QAAhC;AAEAV,UAAAA,QAAQ,CAACW,UAAD,CAAR;AACD,SAPD;;AASA,cAAMI,YAAY,GAAG,MAAM;AACzBf,UAAAA,QAAQ,CAACD,OAAO,CAACI,MAAR,CAAgBa,aAAD,IAAmBA,aAAa,CAACpB,EAAd,KAAqBA,EAAvD,CAAD,CAAR;AACD,SAFD;;AAIA,4BACE,QAAC,MAAD;AAEE,UAAA,KAAK,EAAC,IAFR;AAGE,UAAA,WAAW,EAAEa,eAHf;AAIE,UAAA,WAAW,EAAER,CAAC,CAAC,mBAAD,CAJhB;AAKE,UAAA,KAAK,EAAEJ,KALT;AAME,UAAA,QAAQ,EAAEW,KAAK,GAAG,CAAR,GAAYO,YAAZ,GAA2BE;AANvC,WACOrB,EADP;AAAA;AAAA;AAAA;AAAA,gBADF;AAUD,OAxBA,CADH,eA2BE,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAEU,SAA/B;AAA0C,QAAA,QAAQ,EAAE,CAACJ,iBAArD;AAAA,kBACGD,CAAC,CAAC,YAAD;AADJ;AAAA;AAAA;AAAA;AAAA,cA3BF;AAAA;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwCD,CAhDD;;GAAMH,O;UACUN,c;;;KADVM,O;AAkDN,eAAeA,OAAf","sourcesContent":["import React from 'react'\r\nimport { Button, Card, CardBody, CardHeader, Heading } from '@pancakeswap/uikit'\r\nimport uniqueId from 'lodash/uniqueId'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport Choice from './Choice'\r\n\r\nexport interface Choice {\r\n  id: string\r\n  value: string\r\n}\r\n\r\ninterface ChoicesProps {\r\n  choices: Choice[]\r\n  onChange: (newChoices: Choice[]) => void\r\n}\r\n\r\nexport const MINIMUM_CHOICES = 2\r\nexport const makeChoice = (): Choice => ({ id: uniqueId(), value: '' })\r\n\r\nconst Choices: React.FC<ChoicesProps> = ({ choices, onChange }) => {\r\n  const { t } = useTranslation()\r\n  const hasMinimumChoices = choices.filter((choice) => choice.value.length > 0).length >= MINIMUM_CHOICES\r\n\r\n  const addChoice = () => {\r\n    onChange([...choices, makeChoice()])\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <Heading as=\"h3\" scale=\"md\">\r\n          {t('Choices')}\r\n        </Heading>\r\n      </CardHeader>\r\n      <CardBody>\r\n        {choices.map(({ id, value }, index) => {\r\n          const handleTextInput = (newValue: string) => {\r\n            const newChoices = [...choices]\r\n            const choiceIndex = newChoices.findIndex((newChoice) => newChoice.id === id)\r\n\r\n            newChoices[choiceIndex].value = newValue\r\n\r\n            onChange(newChoices)\r\n          }\r\n\r\n          const handleRemove = () => {\r\n            onChange(choices.filter((newPrevChoice) => newPrevChoice.id !== id))\r\n          }\r\n\r\n          return (\r\n            <Choice\r\n              key={id}\r\n              scale=\"lg\"\r\n              onTextInput={handleTextInput}\r\n              placeholder={t('Input choice text')}\r\n              value={value}\r\n              onRemove={index > 1 ? handleRemove : undefined}\r\n            />\r\n          )\r\n        })}\r\n\r\n        <Button type=\"button\" onClick={addChoice} disabled={!hasMinimumChoices}>\r\n          {t('Add Choice')}\r\n        </Button>\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default Choices\r\n"]},"metadata":{},"sourceType":"module"}