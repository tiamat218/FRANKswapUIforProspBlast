{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst tslib_1 = require(\"tslib\");\nconst client_1 = tslib_1.__importDefault(require(\"@walletconnect/client\"));\nconst qrcode_modal_1 = tslib_1.__importDefault(require(\"@walletconnect/qrcode-modal\"));\nconst http_connection_1 = tslib_1.__importDefault(require(\"@walletconnect/http-connection\"));\nconst utils_1 = require(\"@walletconnect/utils\");\nconst ProviderEngine = require(\"web3-provider-engine\");\nconst CacheSubprovider = require(\"web3-provider-engine/subproviders/cache\");\nconst FixtureSubprovider = require(\"web3-provider-engine/subproviders/fixture\");\nconst FilterSubprovider = require(\"web3-provider-engine/subproviders/filters\");\nconst HookedWalletSubprovider = require(\"web3-provider-engine/subproviders/hooked-wallet\");\nconst NonceSubprovider = require(\"web3-provider-engine/subproviders/nonce-tracker\");\nconst SubscriptionsSubprovider = require(\"web3-provider-engine/subproviders/subscriptions\");\nclass WalletConnectProvider extends ProviderEngine {\n  constructor(opts) {\n    super({\n      pollingInterval: opts.pollingInterval || 8000\n    });\n    this.bridge = \"https://bridge.walletconnect.org\";\n    this.qrcode = true;\n    this.qrcodeModal = qrcode_modal_1.default;\n    this.qrcodeModalOptions = undefined;\n    this.rpc = null;\n    this.infuraId = \"\";\n    this.http = null;\n    this.isConnecting = false;\n    this.connected = false;\n    this.connectCallbacks = [];\n    this.accounts = [];\n    this.chainId = 1;\n    this.networkId = 1;\n    this.rpcUrl = \"\";\n    this.enable = () => tslib_1.__awaiter(this, void 0, void 0, function* () {\n      const wc = yield this.getWalletConnector();\n      if (wc) {\n        this.start();\n        this.subscribeWalletConnector();\n        return wc.accounts;\n      } else {\n        throw new Error(\"Failed to connect to WalleConnect\");\n      }\n    });\n    this.request = payload => tslib_1.__awaiter(this, void 0, void 0, function* () {\n      return this.send(payload);\n    });\n    this.send = (payload, callback) => tslib_1.__awaiter(this, void 0, void 0, function* () {\n      if (typeof payload === \"string\") {\n        const method = payload;\n        let params = callback;\n        if (method === \"personal_sign\") {\n          params = utils_1.parsePersonalSign(params);\n        }\n        return this.sendAsyncPromise(method, params);\n      }\n      payload = Object.assign({\n        id: utils_1.payloadId(),\n        jsonrpc: \"2.0\"\n      }, payload);\n      if (payload.method === \"personal_sign\") {\n        payload.params = utils_1.parsePersonalSign(payload.params);\n      }\n      if (callback) {\n        this.sendAsync(payload, callback);\n        return;\n      }\n      return this.sendAsyncPromise(payload.method, payload.params);\n    });\n    this.onConnect = callback => {\n      this.connectCallbacks.push(callback);\n    };\n    this.triggerConnect = result => {\n      if (this.connectCallbacks && this.connectCallbacks.length) {\n        this.connectCallbacks.forEach(callback => callback(result));\n      }\n    };\n    this.bridge = opts.connector ? opts.connector.bridge : opts.bridge || \"https://bridge.walletconnect.org\";\n    this.qrcode = typeof opts.qrcode === \"undefined\" || opts.qrcode !== false;\n    this.qrcodeModal = opts.qrcodeModal || this.qrcodeModal;\n    this.qrcodeModalOptions = opts.qrcodeModalOptions;\n    this.wc = opts.connector || new client_1.default({\n      bridge: this.bridge,\n      qrcodeModal: this.qrcode ? this.qrcodeModal : undefined,\n      qrcodeModalOptions: this.qrcodeModalOptions,\n      clientMeta: opts === null || opts === void 0 ? void 0 : opts.clientMeta\n    });\n    this.rpc = opts.rpc || null;\n    if (!this.rpc && (!opts.infuraId || typeof opts.infuraId !== \"string\" || !opts.infuraId.trim())) {\n      throw new Error(\"Missing one of the required parameters: rpc or infuraId\");\n    }\n    this.infuraId = opts.infuraId || \"\";\n    this.chainId = typeof opts.chainId !== \"undefined\" ? opts.chainId : 1;\n    this.networkId = this.chainId;\n    this.initialize();\n  }\n  get isWalletConnect() {\n    return true;\n  }\n  get connector() {\n    return this.wc;\n  }\n  get walletMeta() {\n    return this.wc.peerMeta;\n  }\n  disconnect() {\n    return tslib_1.__awaiter(this, void 0, void 0, function* () {\n      this.close();\n    });\n  }\n  close() {\n    return tslib_1.__awaiter(this, void 0, void 0, function* () {\n      const wc = yield this.getWalletConnector({\n        disableSessionCreation: true\n      });\n      yield wc.killSession();\n      yield this.onDisconnect();\n    });\n  }\n  handleRequest(payload) {\n    return tslib_1.__awaiter(this, void 0, void 0, function* () {\n      try {\n        let response;\n        let result = null;\n        const wc = yield this.getWalletConnector();\n        switch (payload.method) {\n          case \"wc_killSession\":\n            yield this.close();\n            result = null;\n            break;\n          case \"eth_accounts\":\n            result = wc.accounts;\n            break;\n          case \"eth_coinbase\":\n            result = wc.accounts[0];\n            break;\n          case \"eth_chainId\":\n            result = wc.chainId;\n            break;\n          case \"net_version\":\n            result = wc.networkId || wc.chainId;\n            break;\n          case \"eth_uninstallFilter\":\n            this.sendAsync(payload, _ => _);\n            result = true;\n            break;\n          default:\n            response = yield this.handleOtherRequests(payload);\n        }\n        if (response) {\n          return response;\n        }\n        return this.formatResponse(payload, result);\n      } catch (error) {\n        this.emit(\"error\", error);\n        throw error;\n      }\n    });\n  }\n  handleOtherRequests(payload) {\n    return tslib_1.__awaiter(this, void 0, void 0, function* () {\n      if (!utils_1.signingMethods.includes(payload.method) && payload.method.startsWith(\"eth_\")) {\n        return this.handleReadRequests(payload);\n      }\n      const wc = yield this.getWalletConnector();\n      const result = yield wc.sendCustomRequest(payload);\n      return this.formatResponse(payload, result);\n    });\n  }\n  handleReadRequests(payload) {\n    return tslib_1.__awaiter(this, void 0, void 0, function* () {\n      if (!this.http) {\n        const error = new Error(\"HTTP Connection not available\");\n        this.emit(\"error\", error);\n        throw error;\n      }\n      return this.http.send(payload);\n    });\n  }\n  formatResponse(payload, result) {\n    return {\n      id: payload.id,\n      jsonrpc: payload.jsonrpc,\n      result: result\n    };\n  }\n  getWalletConnector(opts = {}) {\n    const {\n      disableSessionCreation = false\n    } = opts;\n    return new Promise((resolve, reject) => {\n      const wc = this.wc;\n      if (this.isConnecting) {\n        this.onConnect(x => resolve(x));\n      } else if (!wc.connected && !disableSessionCreation) {\n        this.isConnecting = true;\n        const sessionRequestOpions = this.chainId ? {\n          chainId: this.chainId\n        } : undefined;\n        wc.on(\"modal_closed\", () => {\n          reject(new Error(\"User closed modal\"));\n        });\n        wc.createSession(sessionRequestOpions).then(() => {\n          wc.on(\"connect\", (error, payload) => {\n            if (error) {\n              this.isConnecting = false;\n              return reject(error);\n            }\n            this.isConnecting = false;\n            this.connected = true;\n            if (payload) {\n              this.updateState(payload.params[0]);\n            }\n            this.emit(\"connect\");\n            this.triggerConnect(wc);\n            resolve(wc);\n          });\n        }).catch(error => {\n          this.isConnecting = false;\n          reject(error);\n        });\n      } else {\n        if (!this.connected) {\n          this.connected = true;\n          this.updateState(wc.session);\n        }\n        resolve(wc);\n      }\n    });\n  }\n  subscribeWalletConnector() {\n    return tslib_1.__awaiter(this, void 0, void 0, function* () {\n      const wc = yield this.getWalletConnector();\n      wc.on(\"disconnect\", error => {\n        if (error) {\n          this.emit(\"error\", error);\n          return;\n        }\n        this.onDisconnect();\n      });\n      wc.on(\"session_update\", (error, payload) => {\n        if (error) {\n          this.emit(\"error\", error);\n          return;\n        }\n        this.updateState(payload.params[0]);\n      });\n    });\n  }\n  onDisconnect() {\n    return tslib_1.__awaiter(this, void 0, void 0, function* () {\n      yield this.stop();\n      this.emit(\"close\", 1000, \"Connection closed\");\n      this.emit(\"disconnect\", 1000, \"Connection disconnected\");\n    });\n  }\n  updateState(sessionParams) {\n    return tslib_1.__awaiter(this, void 0, void 0, function* () {\n      const {\n        accounts,\n        chainId,\n        networkId,\n        rpcUrl\n      } = sessionParams;\n      if (!this.accounts || accounts && this.accounts !== accounts) {\n        this.accounts = accounts;\n        this.emit(\"accountsChanged\", accounts);\n      }\n      if (!this.chainId || chainId && this.chainId !== chainId) {\n        this.chainId = chainId;\n        this.emit(\"chainChanged\", chainId);\n      }\n      if (!this.networkId || networkId && this.networkId !== networkId) {\n        this.networkId = networkId;\n        this.emit(\"networkChanged\", networkId);\n      }\n      this.updateRpcUrl(this.chainId, rpcUrl || \"\");\n    });\n  }\n  updateRpcUrl(chainId, rpcUrl = \"\") {\n    const infuraNetworks = {\n      1: \"mainnet\",\n      3: \"ropsten\",\n      4: \"rinkeby\",\n      5: \"goerli\",\n      42: \"kovan\"\n    };\n    const network = infuraNetworks[chainId];\n    if (!rpcUrl) {\n      if (this.rpc && this.rpc[chainId]) {\n        rpcUrl = this.rpc[chainId];\n      } else if (network) {\n        rpcUrl = `https://${network}.infura.io/v3/${this.infuraId}`;\n      }\n    }\n    if (rpcUrl) {\n      this.rpcUrl = rpcUrl;\n      this.updateHttpConnection();\n    } else {\n      this.emit(\"error\", new Error(`No RPC Url available for chainId: ${chainId}`));\n    }\n  }\n  updateHttpConnection() {\n    if (this.rpcUrl) {\n      this.http = new http_connection_1.default(this.rpcUrl);\n      this.http.on(\"payload\", payload => this.emit(\"payload\", payload));\n      this.http.on(\"error\", error => this.emit(\"error\", error));\n    }\n  }\n  sendAsyncPromise(method, params) {\n    return new Promise((resolve, reject) => {\n      this.sendAsync({\n        id: utils_1.payloadId(),\n        jsonrpc: \"2.0\",\n        method,\n        params: params || []\n      }, (error, response) => {\n        if (error) {\n          reject(error);\n          return;\n        }\n        resolve(response.result);\n      });\n    });\n  }\n  initialize() {\n    this.updateRpcUrl(this.chainId);\n    this.addProvider(new FixtureSubprovider({\n      eth_hashrate: \"0x00\",\n      eth_mining: false,\n      eth_syncing: true,\n      net_listening: true,\n      web3_clientVersion: `WalletConnect/v1.x.x/javascript`\n    }));\n    this.addProvider(new CacheSubprovider());\n    this.addProvider(new SubscriptionsSubprovider());\n    this.addProvider(new FilterSubprovider());\n    this.addProvider(new NonceSubprovider());\n    this.addProvider(new HookedWalletSubprovider(this.configWallet()));\n    this.addProvider({\n      handleRequest: (payload, next, end) => tslib_1.__awaiter(this, void 0, void 0, function* () {\n        try {\n          const {\n            result\n          } = yield this.handleRequest(payload);\n          end(null, result);\n        } catch (error) {\n          end(error);\n        }\n      }),\n      setEngine: _ => _\n    });\n  }\n  configWallet() {\n    return {\n      getAccounts: cb => tslib_1.__awaiter(this, void 0, void 0, function* () {\n        try {\n          const wc = yield this.getWalletConnector();\n          const accounts = wc.accounts;\n          if (accounts && accounts.length) {\n            cb(null, accounts);\n          } else {\n            cb(new Error(\"Failed to get accounts\"));\n          }\n        } catch (error) {\n          cb(error);\n        }\n      }),\n      processMessage: (msgParams, cb) => tslib_1.__awaiter(this, void 0, void 0, function* () {\n        try {\n          const wc = yield this.getWalletConnector();\n          const result = yield wc.signMessage([msgParams.from, msgParams.data]);\n          cb(null, result);\n        } catch (error) {\n          cb(error);\n        }\n      }),\n      processPersonalMessage: (msgParams, cb) => tslib_1.__awaiter(this, void 0, void 0, function* () {\n        try {\n          const wc = yield this.getWalletConnector();\n          const result = yield wc.signPersonalMessage([msgParams.data, msgParams.from]);\n          cb(null, result);\n        } catch (error) {\n          cb(error);\n        }\n      }),\n      processSignTransaction: (txParams, cb) => tslib_1.__awaiter(this, void 0, void 0, function* () {\n        try {\n          const wc = yield this.getWalletConnector();\n          const result = yield wc.signTransaction(txParams);\n          cb(null, result);\n        } catch (error) {\n          cb(error);\n        }\n      }),\n      processTransaction: (txParams, cb) => tslib_1.__awaiter(this, void 0, void 0, function* () {\n        try {\n          const wc = yield this.getWalletConnector();\n          const result = yield wc.sendTransaction(txParams);\n          cb(null, result);\n        } catch (error) {\n          cb(error);\n        }\n      }),\n      processTypedMessage: (msgParams, cb) => tslib_1.__awaiter(this, void 0, void 0, function* () {\n        try {\n          const wc = yield this.getWalletConnector();\n          const result = yield wc.signTypedData([msgParams.from, msgParams.data]);\n          cb(null, result);\n        } catch (error) {\n          cb(error);\n        }\n      })\n    };\n  }\n}\nexports.default = WalletConnectProvider;","map":{"version":3,"names":["client_1","tslib_1","__importDefault","require","qrcode_modal_1","http_connection_1","utils_1","ProviderEngine","CacheSubprovider","FixtureSubprovider","FilterSubprovider","HookedWalletSubprovider","NonceSubprovider","SubscriptionsSubprovider","WalletConnectProvider","constructor","opts","pollingInterval","bridge","qrcode","qrcodeModal","default","qrcodeModalOptions","undefined","rpc","infuraId","http","isConnecting","connected","connectCallbacks","accounts","chainId","networkId","rpcUrl","enable","__awaiter","wc","getWalletConnector","start","subscribeWalletConnector","Error","request","payload","send","callback","method","params","parsePersonalSign","sendAsyncPromise","Object","assign","id","payloadId","jsonrpc","sendAsync","onConnect","push","triggerConnect","result","length","forEach","connector","clientMeta","trim","initialize","isWalletConnect","walletMeta","peerMeta","disconnect","close","disableSessionCreation","killSession","onDisconnect","handleRequest","response","_","handleOtherRequests","formatResponse","error","emit","signingMethods","includes","startsWith","handleReadRequests","sendCustomRequest","Promise","resolve","reject","x","sessionRequestOpions","on","createSession","then","updateState","catch","session","stop","sessionParams","updateRpcUrl","infuraNetworks","network","updateHttpConnection","addProvider","eth_hashrate","eth_mining","eth_syncing","net_listening","web3_clientVersion","configWallet","next","end","setEngine","getAccounts","cb","processMessage","msgParams","signMessage","from","data","processPersonalMessage","signPersonalMessage","processSignTransaction","txParams","signTransaction","processTransaction","sendTransaction","processTypedMessage","signTypedData","exports"],"sources":["../../src/index.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}