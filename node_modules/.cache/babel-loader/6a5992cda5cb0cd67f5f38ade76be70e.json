{"ast":null,"code":"import _taggedTemplateLiteral from\"C:/Users/frkul/Documents/swapUI_pancake-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2,_templateObject3,_templateObject4,_templateObject5,_templateObject6;import React,{useEffect,useCallback,useState,useMemo,useRef}from'react';import{Route,useRouteMatch,useLocation,NavLink}from'react-router-dom';import BigNumber from'bignumber.js';import{useWeb3React}from'@web3-react/core';import{Image,Heading,Toggle,Text,Button,ArrowForwardIcon,Flex}from'@pancakeswap/uikit';import{ChainId}from'@pancakeswap/sdk';import styled from'styled-components';import FlexLayout from'components/Layout/Flex';import Page from'components/Layout/Page';import{useFarms,usePollFarmsData,usePriceCakeBusd}from'state/farms/hooks';import usePersistState from'hooks/usePersistState';import{useTranslation}from'contexts/Localization';import{getBalanceNumber}from'utils/formatBalance';import{getFarmApr}from'utils/apr';import{orderBy}from'lodash';import isArchivedPid from'utils/farmHelpers';import{latinise}from'utils/latinise';import PageHeader from'components/PageHeader';import SearchInput from'components/SearchInput';import Select from'components/Select/Select';import Loading from'components/Loading';import FarmCard from'./components/FarmCard/FarmCard';import Table from'./components/FarmTable/FarmTable';import FarmTabButtons from'./components/FarmTabButtons';import ToggleView from'./components/ToggleView/ToggleView';import{DesktopColumnSchema,ViewMode}from'./components/types';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const ControlContainer=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  display: flex;\\n  width: 100%;\\n  align-items: center;\\n  position: relative;\\n\\n  justify-content: space-between;\\n  flex-direction: column;\\n  margin-bottom: 32px;\\n\\n  \",\" {\\n    flex-direction: row;\\n    flex-wrap: wrap;\\n    padding: 16px 32px;\\n    margin-bottom: 0;\\n  }\\n\"])),_ref=>{let{theme}=_ref;return theme.mediaQueries.sm;});const ToggleWrapper=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  display: flex;\\n  align-items: center;\\n  margin-left: 10px;\\n\\n  \",\" {\\n    margin-left: 8px;\\n  }\\n\"])),Text);const LabelWrapper=styled.div(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  > \",\" {\\n    font-size: 12px;\\n  }\\n\"])),Text);const FilterContainer=styled.div(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n  display: flex;\\n  align-items: center;\\n  width: 100%;\\n  padding: 8px 0px;\\n\\n  \",\" {\\n    width: auto;\\n    padding: 0;\\n  }\\n\"])),_ref2=>{let{theme}=_ref2;return theme.mediaQueries.sm;});const ViewControls=styled.div(_templateObject5||(_templateObject5=_taggedTemplateLiteral([\"\\n  flex-wrap: wrap;\\n  justify-content: space-between;\\n  display: flex;\\n  align-items: center;\\n  width: 100%;\\n\\n  > div {\\n    padding: 8px 0px;\\n  }\\n\\n  \",\" {\\n    justify-content: flex-start;\\n    width: auto;\\n\\n    > div {\\n      padding: 0;\\n    }\\n  }\\n\"])),_ref3=>{let{theme}=_ref3;return theme.mediaQueries.sm;});const StyledImage=styled(Image)(_templateObject6||(_templateObject6=_taggedTemplateLiteral([\"\\n  margin-left: auto;\\n  margin-right: auto;\\n  margin-top: 58px;\\n\"])));const NUMBER_OF_FARMS_VISIBLE=12;const getDisplayApr=(cakeRewardsApr,lpRewardsApr)=>{if(cakeRewardsApr&&lpRewardsApr){return(cakeRewardsApr+lpRewardsApr).toLocaleString('en-US',{maximumFractionDigits:2});}if(cakeRewardsApr){return cakeRewardsApr.toLocaleString('en-US',{maximumFractionDigits:2});}return null;};const Farms=()=>{const{path}=useRouteMatch();const{pathname}=useLocation();const{t}=useTranslation();const{data:farmsLP,userDataLoaded}=useFarms();const cakePrice=usePriceCakeBusd();const[query,setQuery]=useState('');const[viewMode,setViewMode]=usePersistState(ViewMode.TABLE,{localStorageKey:'pancake_farm_view'});const{account}=useWeb3React();const[sortOption,setSortOption]=useState('hot');const chosenFarmsLength=useRef(0);const isArchived=pathname.includes('archived');const isInactive=pathname.includes('history');const isActive=!isInactive&&!isArchived;usePollFarmsData(isArchived);// Users with no wallet connected should see 0 as Earned amount\n// Connected users should see loading indicator until first userData has loaded\nconst userDataReady=!account||!!account&&userDataLoaded;const[stakedOnly,setStakedOnly]=useState(!isActive);useEffect(()=>{setStakedOnly(!isActive);},[isActive]);const activeFarms=farmsLP.filter(farm=>farm.pid!==0&&farm.multiplier!=='0X'&&!isArchivedPid(farm.pid));const inactiveFarms=farmsLP.filter(farm=>farm.pid!==0&&farm.multiplier==='0X'&&!isArchivedPid(farm.pid));const archivedFarms=farmsLP.filter(farm=>isArchivedPid(farm.pid));const stakedOnlyFarms=activeFarms.filter(farm=>farm.userData&&new BigNumber(farm.userData.stakedBalance).isGreaterThan(0));const stakedInactiveFarms=inactiveFarms.filter(farm=>farm.userData&&new BigNumber(farm.userData.stakedBalance).isGreaterThan(0));const stakedArchivedFarms=archivedFarms.filter(farm=>farm.userData&&new BigNumber(farm.userData.stakedBalance).isGreaterThan(0));const farmsList=useCallback(farmsToDisplay=>{let farmsToDisplayWithAPR=farmsToDisplay.map(farm=>{if(!farm.lpTotalInQuoteToken||!farm.quoteToken.busdPrice){return farm;}const totalLiquidity=new BigNumber(farm.lpTotalInQuoteToken).times(farm.quoteToken.busdPrice);const{cakeRewardsApr,lpRewardsApr}=isActive?getFarmApr(new BigNumber(farm.poolWeight),cakePrice,totalLiquidity,farm.lpAddresses[ChainId.MAINNET]):{cakeRewardsApr:0,lpRewardsApr:0};return{...farm,apr:cakeRewardsApr,lpRewardsApr,liquidity:totalLiquidity};});if(query){const lowercaseQuery=latinise(query.toLowerCase());farmsToDisplayWithAPR=farmsToDisplayWithAPR.filter(farm=>{return latinise(farm.lpSymbol.toLowerCase()).includes(lowercaseQuery);});}return farmsToDisplayWithAPR;},[cakePrice,query,isActive]);const handleChangeQuery=event=>{setQuery(event.target.value);};const loadMoreRef=useRef(null);const[numberOfFarmsVisible,setNumberOfFarmsVisible]=useState(NUMBER_OF_FARMS_VISIBLE);const[observerIsSet,setObserverIsSet]=useState(false);const chosenFarmsMemoized=useMemo(()=>{let chosenFarms=[];const sortFarms=farms=>{switch(sortOption){case'apr':return orderBy(farms,farm=>farm.apr+farm.lpRewardsApr,'desc');case'multiplier':return orderBy(farms,farm=>farm.multiplier?Number(farm.multiplier.slice(0,-1)):0,'desc');case'earned':return orderBy(farms,farm=>farm.userData?Number(farm.userData.earnings):0,'desc');case'liquidity':return orderBy(farms,farm=>Number(farm.liquidity),'desc');default:return farms;}};if(isActive){chosenFarms=stakedOnly?farmsList(stakedOnlyFarms):farmsList(activeFarms);}if(isInactive){chosenFarms=stakedOnly?farmsList(stakedInactiveFarms):farmsList(inactiveFarms);}if(isArchived){chosenFarms=stakedOnly?farmsList(stakedArchivedFarms):farmsList(archivedFarms);}return sortFarms(chosenFarms).slice(0,numberOfFarmsVisible);},[sortOption,activeFarms,farmsList,inactiveFarms,archivedFarms,isActive,isInactive,isArchived,stakedArchivedFarms,stakedInactiveFarms,stakedOnly,stakedOnlyFarms,numberOfFarmsVisible]);chosenFarmsLength.current=chosenFarmsMemoized.length;useEffect(()=>{const showMoreFarms=entries=>{const[entry]=entries;if(entry.isIntersecting){setNumberOfFarmsVisible(farmsCurrentlyVisible=>{if(farmsCurrentlyVisible<=chosenFarmsLength.current){return farmsCurrentlyVisible+NUMBER_OF_FARMS_VISIBLE;}return farmsCurrentlyVisible;});}};if(!observerIsSet){const loadMoreObserver=new IntersectionObserver(showMoreFarms,{rootMargin:'0px',threshold:1});loadMoreObserver.observe(loadMoreRef.current);setObserverIsSet(true);}},[chosenFarmsMemoized,observerIsSet]);const rowData=chosenFarmsMemoized.map(farm=>{const{token,quoteToken}=farm;const tokenAddress=token.address;const quoteTokenAddress=quoteToken.address;const lpLabel=farm.lpSymbol&&farm.lpSymbol.split(' ')[0].toUpperCase().replace('PANCAKE','');const row={apr:{value:getDisplayApr(farm.apr,farm.lpRewardsApr),multiplier:farm.multiplier,lpLabel,tokenAddress,quoteTokenAddress,cakePrice,originalValue:farm.apr},farm:{label:lpLabel,pid:farm.pid,token:farm.token,quoteToken:farm.quoteToken},earned:{earnings:getBalanceNumber(new BigNumber(farm.userData.earnings)),pid:farm.pid},liquidity:{liquidity:farm.liquidity},multiplier:{multiplier:farm.multiplier},details:farm};return row;});const renderContent=()=>{if(viewMode===ViewMode.TABLE&&rowData.length){const columnSchema=DesktopColumnSchema;const columns=columnSchema.map(column=>({id:column.id,name:column.name,label:column.label,sort:(a,b)=>{switch(column.name){case'farm':return b.id-a.id;case'apr':if(a.original.apr.value&&b.original.apr.value){return Number(a.original.apr.value)-Number(b.original.apr.value);}return 0;case'earned':return a.original.earned.earnings-b.original.earned.earnings;default:return 1;}},sortable:column.sortable}));return/*#__PURE__*/_jsx(Table,{data:rowData,columns:columns,userDataReady:userDataReady});}return/*#__PURE__*/_jsxs(FlexLayout,{children:[/*#__PURE__*/_jsx(Route,{exact:true,path:\"\".concat(path),children:chosenFarmsMemoized.map(farm=>/*#__PURE__*/_jsx(FarmCard,{farm:farm,displayApr:getDisplayApr(farm.apr,farm.lpRewardsApr),cakePrice:cakePrice,account:account,removed:false},farm.pid))}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"\".concat(path,\"/history\"),children:chosenFarmsMemoized.map(farm=>/*#__PURE__*/_jsx(FarmCard,{farm:farm,displayApr:getDisplayApr(farm.apr,farm.lpRewardsApr),cakePrice:cakePrice,account:account,removed:true},farm.pid))}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"\".concat(path,\"/archived\"),children:chosenFarmsMemoized.map(farm=>/*#__PURE__*/_jsx(FarmCard,{farm:farm,displayApr:getDisplayApr(farm.apr,farm.lpRewardsApr),cakePrice:cakePrice,account:account,removed:true},farm.pid))})]});};const handleSortOptionChange=option=>{setSortOption(option.value);};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(PageHeader,{children:[/*#__PURE__*/_jsx(Heading,{as:\"h1\",scale:\"xxl\",color:\"secondary\",mb:\"24px\",children:t('Farms')}),/*#__PURE__*/_jsx(Heading,{scale:\"lg\",color:\"text\",children:t('Stake LP tokens to earn.')}),/*#__PURE__*/_jsx(NavLink,{exact:true,activeClassName:\"active\",to:\"/farms/auction\",id:\"lottery-pot-banner\",children:/*#__PURE__*/_jsxs(Button,{p:\"0\",variant:\"text\",children:[/*#__PURE__*/_jsx(Text,{color:\"primary\",bold:true,fontSize:\"16px\",mr:\"4px\",children:t('Community Auctions')}),/*#__PURE__*/_jsx(ArrowForwardIcon,{color:\"primary\"})]})})]}),/*#__PURE__*/_jsxs(Page,{children:[/*#__PURE__*/_jsxs(ControlContainer,{children:[/*#__PURE__*/_jsxs(ViewControls,{children:[/*#__PURE__*/_jsx(ToggleView,{viewMode:viewMode,onToggle:mode=>setViewMode(mode)}),/*#__PURE__*/_jsxs(ToggleWrapper,{children:[/*#__PURE__*/_jsx(Toggle,{checked:stakedOnly,onChange:()=>setStakedOnly(!stakedOnly),scale:\"sm\"}),/*#__PURE__*/_jsxs(Text,{children:[\" \",t('Staked only')]})]}),/*#__PURE__*/_jsx(FarmTabButtons,{hasStakeInFinishedFarms:stakedInactiveFarms.length>0})]}),/*#__PURE__*/_jsxs(FilterContainer,{children:[/*#__PURE__*/_jsxs(LabelWrapper,{children:[/*#__PURE__*/_jsx(Text,{textTransform:\"uppercase\",children:t('Sort by')}),/*#__PURE__*/_jsx(Select,{options:[{label:t('Hot'),value:'hot'},{label:t('APR'),value:'apr'},{label:t('Multiplier'),value:'multiplier'},{label:t('Earned'),value:'earned'},{label:t('Liquidity'),value:'liquidity'}],onChange:handleSortOptionChange})]}),/*#__PURE__*/_jsxs(LabelWrapper,{style:{marginLeft:16},children:[/*#__PURE__*/_jsx(Text,{textTransform:\"uppercase\",children:t('Search')}),/*#__PURE__*/_jsx(SearchInput,{onChange:handleChangeQuery,placeholder:\"Search Farms\"})]})]})]}),renderContent(),account&&!userDataLoaded&&stakedOnly&&/*#__PURE__*/_jsx(Flex,{justifyContent:\"center\",children:/*#__PURE__*/_jsx(Loading,{})}),/*#__PURE__*/_jsx(\"div\",{ref:loadMoreRef}),/*#__PURE__*/_jsx(StyledImage,{src:\"/images/decorations/3dpan.png\",alt:\"Pancake illustration\",width:120,height:103})]})]});};export default Farms;","map":{"version":3,"names":["React","useEffect","useCallback","useState","useMemo","useRef","Route","useRouteMatch","useLocation","NavLink","BigNumber","useWeb3React","Image","Heading","Toggle","Text","Button","ArrowForwardIcon","Flex","ChainId","styled","FlexLayout","Page","useFarms","usePollFarmsData","usePriceCakeBusd","usePersistState","useTranslation","getBalanceNumber","getFarmApr","orderBy","isArchivedPid","latinise","PageHeader","SearchInput","Select","Loading","FarmCard","Table","FarmTabButtons","ToggleView","DesktopColumnSchema","ViewMode","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","ControlContainer","div","_templateObject","_taggedTemplateLiteral","_ref","theme","mediaQueries","sm","ToggleWrapper","_templateObject2","LabelWrapper","_templateObject3","FilterContainer","_templateObject4","_ref2","ViewControls","_templateObject5","_ref3","StyledImage","_templateObject6","NUMBER_OF_FARMS_VISIBLE","getDisplayApr","cakeRewardsApr","lpRewardsApr","toLocaleString","maximumFractionDigits","Farms","path","pathname","t","data","farmsLP","userDataLoaded","cakePrice","query","setQuery","viewMode","setViewMode","TABLE","localStorageKey","account","sortOption","setSortOption","chosenFarmsLength","isArchived","includes","isInactive","isActive","userDataReady","stakedOnly","setStakedOnly","activeFarms","filter","farm","pid","multiplier","inactiveFarms","archivedFarms","stakedOnlyFarms","userData","stakedBalance","isGreaterThan","stakedInactiveFarms","stakedArchivedFarms","farmsList","farmsToDisplay","farmsToDisplayWithAPR","map","lpTotalInQuoteToken","quoteToken","busdPrice","totalLiquidity","times","poolWeight","lpAddresses","MAINNET","apr","liquidity","lowercaseQuery","toLowerCase","lpSymbol","handleChangeQuery","event","target","value","loadMoreRef","numberOfFarmsVisible","setNumberOfFarmsVisible","observerIsSet","setObserverIsSet","chosenFarmsMemoized","chosenFarms","sortFarms","farms","Number","slice","earnings","current","length","showMoreFarms","entries","entry","isIntersecting","farmsCurrentlyVisible","loadMoreObserver","IntersectionObserver","rootMargin","threshold","observe","rowData","token","tokenAddress","address","quoteTokenAddress","lpLabel","split","toUpperCase","replace","row","originalValue","label","earned","details","renderContent","columnSchema","columns","column","id","name","sort","a","b","original","sortable","children","exact","concat","displayApr","removed","handleSortOptionChange","option","as","scale","color","mb","activeClassName","to","p","variant","bold","fontSize","mr","onToggle","mode","checked","onChange","hasStakeInFinishedFarms","textTransform","options","style","marginLeft","placeholder","justifyContent","ref","src","alt","width","height"],"sources":["C:/Users/frkul/Documents/swapUI_pancake-frontend/src/views/Farms/Farms.tsx"],"sourcesContent":["import React, { useEffect, useCallback, useState, useMemo, useRef } from 'react'\r\nimport { Route, useRouteMatch, useLocation, NavLink } from 'react-router-dom'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { Image, Heading, RowType, Toggle, Text, Button, ArrowForwardIcon, Flex } from '@pancakeswap/uikit'\r\nimport { ChainId } from '@pancakeswap/sdk'\r\nimport styled from 'styled-components'\r\nimport FlexLayout from 'components/Layout/Flex'\r\nimport Page from 'components/Layout/Page'\r\nimport { useFarms, usePollFarmsData, usePriceCakeBusd } from 'state/farms/hooks'\r\nimport usePersistState from 'hooks/usePersistState'\r\nimport { Farm } from 'state/types'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { getFarmApr } from 'utils/apr'\r\nimport { orderBy } from 'lodash'\r\nimport isArchivedPid from 'utils/farmHelpers'\r\nimport { latinise } from 'utils/latinise'\r\nimport PageHeader from 'components/PageHeader'\r\nimport SearchInput from 'components/SearchInput'\r\nimport Select, { OptionProps } from 'components/Select/Select'\r\nimport Loading from 'components/Loading'\r\nimport FarmCard, { FarmWithStakedValue } from './components/FarmCard/FarmCard'\r\nimport Table from './components/FarmTable/FarmTable'\r\nimport FarmTabButtons from './components/FarmTabButtons'\r\nimport { RowProps } from './components/FarmTable/Row'\r\nimport ToggleView from './components/ToggleView/ToggleView'\r\nimport { DesktopColumnSchema, ViewMode } from './components/types'\r\n\r\nconst ControlContainer = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  align-items: center;\r\n  position: relative;\r\n\r\n  justify-content: space-between;\r\n  flex-direction: column;\r\n  margin-bottom: 32px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    flex-direction: row;\r\n    flex-wrap: wrap;\r\n    padding: 16px 32px;\r\n    margin-bottom: 0;\r\n  }\r\n`\r\n\r\nconst ToggleWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-left: 10px;\r\n\r\n  ${Text} {\r\n    margin-left: 8px;\r\n  }\r\n`\r\n\r\nconst LabelWrapper = styled.div`\r\n  > ${Text} {\r\n    font-size: 12px;\r\n  }\r\n`\r\n\r\nconst FilterContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n  padding: 8px 0px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    width: auto;\r\n    padding: 0;\r\n  }\r\n`\r\n\r\nconst ViewControls = styled.div`\r\n  flex-wrap: wrap;\r\n  justify-content: space-between;\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n\r\n  > div {\r\n    padding: 8px 0px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    justify-content: flex-start;\r\n    width: auto;\r\n\r\n    > div {\r\n      padding: 0;\r\n    }\r\n  }\r\n`\r\n\r\nconst StyledImage = styled(Image)`\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  margin-top: 58px;\r\n`\r\nconst NUMBER_OF_FARMS_VISIBLE = 12\r\n\r\nconst getDisplayApr = (cakeRewardsApr?: number, lpRewardsApr?: number) => {\r\n  if (cakeRewardsApr && lpRewardsApr) {\r\n    return (cakeRewardsApr + lpRewardsApr).toLocaleString('en-US', { maximumFractionDigits: 2 })\r\n  }\r\n  if (cakeRewardsApr) {\r\n    return cakeRewardsApr.toLocaleString('en-US', { maximumFractionDigits: 2 })\r\n  }\r\n  return null\r\n}\r\n\r\nconst Farms: React.FC = () => {\r\n  const { path } = useRouteMatch()\r\n  const { pathname } = useLocation()\r\n  const { t } = useTranslation()\r\n  const { data: farmsLP, userDataLoaded } = useFarms()\r\n  const cakePrice = usePriceCakeBusd()\r\n  const [query, setQuery] = useState('')\r\n  const [viewMode, setViewMode] = usePersistState(ViewMode.TABLE, { localStorageKey: 'pancake_farm_view' })\r\n  const { account } = useWeb3React()\r\n  const [sortOption, setSortOption] = useState('hot')\r\n  const chosenFarmsLength = useRef(0)\r\n\r\n  const isArchived = pathname.includes('archived')\r\n  const isInactive = pathname.includes('history')\r\n  const isActive = !isInactive && !isArchived\r\n\r\n  usePollFarmsData(isArchived)\r\n\r\n  // Users with no wallet connected should see 0 as Earned amount\r\n  // Connected users should see loading indicator until first userData has loaded\r\n  const userDataReady = !account || (!!account && userDataLoaded)\r\n\r\n  const [stakedOnly, setStakedOnly] = useState(!isActive)\r\n  useEffect(() => {\r\n    setStakedOnly(!isActive)\r\n  }, [isActive])\r\n\r\n  const activeFarms = farmsLP.filter((farm) => farm.pid !== 0 && farm.multiplier !== '0X' && !isArchivedPid(farm.pid))\r\n  const inactiveFarms = farmsLP.filter((farm) => farm.pid !== 0 && farm.multiplier === '0X' && !isArchivedPid(farm.pid))\r\n  const archivedFarms = farmsLP.filter((farm) => isArchivedPid(farm.pid))\r\n\r\n  const stakedOnlyFarms = activeFarms.filter(\r\n    (farm) => farm.userData && new BigNumber(farm.userData.stakedBalance).isGreaterThan(0),\r\n  )\r\n\r\n  const stakedInactiveFarms = inactiveFarms.filter(\r\n    (farm) => farm.userData && new BigNumber(farm.userData.stakedBalance).isGreaterThan(0),\r\n  )\r\n\r\n  const stakedArchivedFarms = archivedFarms.filter(\r\n    (farm) => farm.userData && new BigNumber(farm.userData.stakedBalance).isGreaterThan(0),\r\n  )\r\n\r\n  const farmsList = useCallback(\r\n    (farmsToDisplay: Farm[]): FarmWithStakedValue[] => {\r\n      let farmsToDisplayWithAPR: FarmWithStakedValue[] = farmsToDisplay.map((farm) => {\r\n        if (!farm.lpTotalInQuoteToken || !farm.quoteToken.busdPrice) {\r\n          return farm\r\n        }\r\n        const totalLiquidity = new BigNumber(farm.lpTotalInQuoteToken).times(farm.quoteToken.busdPrice)\r\n        const { cakeRewardsApr, lpRewardsApr } = isActive\r\n          ? getFarmApr(new BigNumber(farm.poolWeight), cakePrice, totalLiquidity, farm.lpAddresses[ChainId.MAINNET])\r\n          : { cakeRewardsApr: 0, lpRewardsApr: 0 }\r\n\r\n        return { ...farm, apr: cakeRewardsApr, lpRewardsApr, liquidity: totalLiquidity }\r\n      })\r\n\r\n      if (query) {\r\n        const lowercaseQuery = latinise(query.toLowerCase())\r\n        farmsToDisplayWithAPR = farmsToDisplayWithAPR.filter((farm: FarmWithStakedValue) => {\r\n          return latinise(farm.lpSymbol.toLowerCase()).includes(lowercaseQuery)\r\n        })\r\n      }\r\n      return farmsToDisplayWithAPR\r\n    },\r\n    [cakePrice, query, isActive],\r\n  )\r\n\r\n  const handleChangeQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setQuery(event.target.value)\r\n  }\r\n\r\n  const loadMoreRef = useRef<HTMLDivElement>(null)\r\n\r\n  const [numberOfFarmsVisible, setNumberOfFarmsVisible] = useState(NUMBER_OF_FARMS_VISIBLE)\r\n  const [observerIsSet, setObserverIsSet] = useState(false)\r\n\r\n  const chosenFarmsMemoized = useMemo(() => {\r\n    let chosenFarms = []\r\n\r\n    const sortFarms = (farms: FarmWithStakedValue[]): FarmWithStakedValue[] => {\r\n      switch (sortOption) {\r\n        case 'apr':\r\n          return orderBy(farms, (farm: FarmWithStakedValue) => farm.apr + farm.lpRewardsApr, 'desc')\r\n        case 'multiplier':\r\n          return orderBy(\r\n            farms,\r\n            (farm: FarmWithStakedValue) => (farm.multiplier ? Number(farm.multiplier.slice(0, -1)) : 0),\r\n            'desc',\r\n          )\r\n        case 'earned':\r\n          return orderBy(\r\n            farms,\r\n            (farm: FarmWithStakedValue) => (farm.userData ? Number(farm.userData.earnings) : 0),\r\n            'desc',\r\n          )\r\n        case 'liquidity':\r\n          return orderBy(farms, (farm: FarmWithStakedValue) => Number(farm.liquidity), 'desc')\r\n        default:\r\n          return farms\r\n      }\r\n    }\r\n\r\n    if (isActive) {\r\n      chosenFarms = stakedOnly ? farmsList(stakedOnlyFarms) : farmsList(activeFarms)\r\n    }\r\n    if (isInactive) {\r\n      chosenFarms = stakedOnly ? farmsList(stakedInactiveFarms) : farmsList(inactiveFarms)\r\n    }\r\n    if (isArchived) {\r\n      chosenFarms = stakedOnly ? farmsList(stakedArchivedFarms) : farmsList(archivedFarms)\r\n    }\r\n\r\n    return sortFarms(chosenFarms).slice(0, numberOfFarmsVisible)\r\n  }, [\r\n    sortOption,\r\n    activeFarms,\r\n    farmsList,\r\n    inactiveFarms,\r\n    archivedFarms,\r\n    isActive,\r\n    isInactive,\r\n    isArchived,\r\n    stakedArchivedFarms,\r\n    stakedInactiveFarms,\r\n    stakedOnly,\r\n    stakedOnlyFarms,\r\n    numberOfFarmsVisible,\r\n  ])\r\n\r\n  chosenFarmsLength.current = chosenFarmsMemoized.length\r\n\r\n  useEffect(() => {\r\n    const showMoreFarms = (entries) => {\r\n      const [entry] = entries\r\n      if (entry.isIntersecting) {\r\n        setNumberOfFarmsVisible((farmsCurrentlyVisible) => {\r\n          if (farmsCurrentlyVisible <= chosenFarmsLength.current) {\r\n            return farmsCurrentlyVisible + NUMBER_OF_FARMS_VISIBLE\r\n          }\r\n          return farmsCurrentlyVisible\r\n        })\r\n      }\r\n    }\r\n\r\n    if (!observerIsSet) {\r\n      const loadMoreObserver = new IntersectionObserver(showMoreFarms, {\r\n        rootMargin: '0px',\r\n        threshold: 1,\r\n      })\r\n      loadMoreObserver.observe(loadMoreRef.current)\r\n      setObserverIsSet(true)\r\n    }\r\n  }, [chosenFarmsMemoized, observerIsSet])\r\n\r\n  const rowData = chosenFarmsMemoized.map((farm) => {\r\n    const { token, quoteToken } = farm\r\n    const tokenAddress = token.address\r\n    const quoteTokenAddress = quoteToken.address\r\n    const lpLabel = farm.lpSymbol && farm.lpSymbol.split(' ')[0].toUpperCase().replace('PANCAKE', '')\r\n\r\n    const row: RowProps = {\r\n      apr: {\r\n        value: getDisplayApr(farm.apr, farm.lpRewardsApr),\r\n        multiplier: farm.multiplier,\r\n        lpLabel,\r\n        tokenAddress,\r\n        quoteTokenAddress,\r\n        cakePrice,\r\n        originalValue: farm.apr,\r\n      },\r\n      farm: {\r\n        label: lpLabel,\r\n        pid: farm.pid,\r\n        token: farm.token,\r\n        quoteToken: farm.quoteToken,\r\n      },\r\n      earned: {\r\n        earnings: getBalanceNumber(new BigNumber(farm.userData.earnings)),\r\n        pid: farm.pid,\r\n      },\r\n      liquidity: {\r\n        liquidity: farm.liquidity,\r\n      },\r\n      multiplier: {\r\n        multiplier: farm.multiplier,\r\n      },\r\n      details: farm,\r\n    }\r\n\r\n    return row\r\n  })\r\n\r\n  const renderContent = (): JSX.Element => {\r\n    if (viewMode === ViewMode.TABLE && rowData.length) {\r\n      const columnSchema = DesktopColumnSchema\r\n\r\n      const columns = columnSchema.map((column) => ({\r\n        id: column.id,\r\n        name: column.name,\r\n        label: column.label,\r\n        sort: (a: RowType<RowProps>, b: RowType<RowProps>) => {\r\n          switch (column.name) {\r\n            case 'farm':\r\n              return b.id - a.id\r\n            case 'apr':\r\n              if (a.original.apr.value && b.original.apr.value) {\r\n                return Number(a.original.apr.value) - Number(b.original.apr.value)\r\n              }\r\n\r\n              return 0\r\n            case 'earned':\r\n              return a.original.earned.earnings - b.original.earned.earnings\r\n            default:\r\n              return 1\r\n          }\r\n        },\r\n        sortable: column.sortable,\r\n      }))\r\n\r\n      return <Table data={rowData} columns={columns} userDataReady={userDataReady} />\r\n    }\r\n\r\n    return (\r\n      <FlexLayout>\r\n        <Route exact path={`${path}`}>\r\n          {chosenFarmsMemoized.map((farm) => (\r\n            <FarmCard\r\n              key={farm.pid}\r\n              farm={farm}\r\n              displayApr={getDisplayApr(farm.apr, farm.lpRewardsApr)}\r\n              cakePrice={cakePrice}\r\n              account={account}\r\n              removed={false}\r\n            />\r\n          ))}\r\n        </Route>\r\n        <Route exact path={`${path}/history`}>\r\n          {chosenFarmsMemoized.map((farm) => (\r\n            <FarmCard\r\n              key={farm.pid}\r\n              farm={farm}\r\n              displayApr={getDisplayApr(farm.apr, farm.lpRewardsApr)}\r\n              cakePrice={cakePrice}\r\n              account={account}\r\n              removed\r\n            />\r\n          ))}\r\n        </Route>\r\n        <Route exact path={`${path}/archived`}>\r\n          {chosenFarmsMemoized.map((farm) => (\r\n            <FarmCard\r\n              key={farm.pid}\r\n              farm={farm}\r\n              displayApr={getDisplayApr(farm.apr, farm.lpRewardsApr)}\r\n              cakePrice={cakePrice}\r\n              account={account}\r\n              removed\r\n            />\r\n          ))}\r\n        </Route>\r\n      </FlexLayout>\r\n    )\r\n  }\r\n\r\n  const handleSortOptionChange = (option: OptionProps): void => {\r\n    setSortOption(option.value)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <PageHeader>\r\n        <Heading as=\"h1\" scale=\"xxl\" color=\"secondary\" mb=\"24px\">\r\n          {t('Farms')}\r\n        </Heading>\r\n        <Heading scale=\"lg\" color=\"text\">\r\n          {t('Stake LP tokens to earn.')}\r\n        </Heading>\r\n        <NavLink exact activeClassName=\"active\" to=\"/farms/auction\" id=\"lottery-pot-banner\">\r\n          <Button p=\"0\" variant=\"text\">\r\n            <Text color=\"primary\" bold fontSize=\"16px\" mr=\"4px\">\r\n              {t('Community Auctions')}\r\n            </Text>\r\n            <ArrowForwardIcon color=\"primary\" />\r\n          </Button>\r\n        </NavLink>\r\n      </PageHeader>\r\n      <Page>\r\n        <ControlContainer>\r\n          <ViewControls>\r\n            <ToggleView viewMode={viewMode} onToggle={(mode: ViewMode) => setViewMode(mode)} />\r\n            <ToggleWrapper>\r\n              <Toggle checked={stakedOnly} onChange={() => setStakedOnly(!stakedOnly)} scale=\"sm\" />\r\n              <Text> {t('Staked only')}</Text>\r\n            </ToggleWrapper>\r\n            <FarmTabButtons hasStakeInFinishedFarms={stakedInactiveFarms.length > 0} />\r\n          </ViewControls>\r\n          <FilterContainer>\r\n            <LabelWrapper>\r\n              <Text textTransform=\"uppercase\">{t('Sort by')}</Text>\r\n              <Select\r\n                options={[\r\n                  {\r\n                    label: t('Hot'),\r\n                    value: 'hot',\r\n                  },\r\n                  {\r\n                    label: t('APR'),\r\n                    value: 'apr',\r\n                  },\r\n                  {\r\n                    label: t('Multiplier'),\r\n                    value: 'multiplier',\r\n                  },\r\n                  {\r\n                    label: t('Earned'),\r\n                    value: 'earned',\r\n                  },\r\n                  {\r\n                    label: t('Liquidity'),\r\n                    value: 'liquidity',\r\n                  },\r\n                ]}\r\n                onChange={handleSortOptionChange}\r\n              />\r\n            </LabelWrapper>\r\n            <LabelWrapper style={{ marginLeft: 16 }}>\r\n              <Text textTransform=\"uppercase\">{t('Search')}</Text>\r\n              <SearchInput onChange={handleChangeQuery} placeholder=\"Search Farms\" />\r\n            </LabelWrapper>\r\n          </FilterContainer>\r\n        </ControlContainer>\r\n        {renderContent()}\r\n        {account && !userDataLoaded && stakedOnly && (\r\n          <Flex justifyContent=\"center\">\r\n            <Loading />\r\n          </Flex>\r\n        )}\r\n        <div ref={loadMoreRef} />\r\n        <StyledImage src=\"/images/decorations/3dpan.png\" alt=\"Pancake illustration\" width={120} height={103} />\r\n      </Page>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Farms\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}