{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\frkul\\\\Documents\\\\swapUI_pancake-frontend\\\\src\\\\views\\\\Lottery\\\\components\\\\RewardBracketDetail.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Flex, Skeleton, Text } from '@pancakeswap/uikit';\nimport { useTranslation } from 'contexts/Localization';\nimport { usePriceCakeBusd } from 'state/farms/hooks';\nimport Balance from 'components/Balance';\nimport { getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst RewardBracketDetail = ({\n  rewardBracket,\n  cakeAmount,\n  numberWinners,\n  isHistoricRound,\n  isBurn,\n  isLoading\n}) => {\n  _s();\n  const {\n    t\n  } = useTranslation();\n  const cakePriceBusd = usePriceCakeBusd();\n  const getRewardText = () => {\n    const numberMatch = rewardBracket + 1;\n    if (isBurn) {\n      return t('Burn');\n    }\n    if (rewardBracket === 5) {\n      return t('Match all %numberMatch%', {\n        numberMatch\n      });\n    }\n    return t('Match first %numberMatch%', {\n      numberMatch\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    flexDirection: \"column\",\n    children: [isLoading ? /*#__PURE__*/_jsxDEV(Skeleton, {\n      mb: \"4px\",\n      mt: \"8px\",\n      height: 16,\n      width: 80\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Text, {\n      bold: true,\n      color: isBurn ? 'failure' : 'secondary',\n      children: getRewardText()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [isLoading || cakeAmount.isNaN() ? /*#__PURE__*/_jsxDEV(Skeleton, {\n        my: \"4px\",\n        mr: \"10px\",\n        height: 20,\n        width: 110\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Balance, {\n        fontSize: \"20px\",\n        bold: true,\n        unit: \" CAKE\",\n        value: getBalanceNumber(cakeAmount),\n        decimals: 0\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), isLoading || cakeAmount.isNaN() ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Skeleton, {\n          mt: \"4px\",\n          mb: \"16px\",\n          height: 12,\n          width: 70\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)\n      }, void 0, false) : /*#__PURE__*/_jsxDEV(Balance, {\n        fontSize: \"12px\",\n        color: \"textSubtle\",\n        prefix: \"~$\",\n        value: getBalanceNumber(cakeAmount.times(cakePriceBusd)),\n        decimals: 0\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), isHistoricRound && cakeAmount && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [numberWinners !== '0' && /*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"12px\",\n          color: \"textSubtle\",\n          children: [getFullDisplayBalance(cakeAmount.div(parseInt(numberWinners, 10)), 18, 2), \" CAKE \", t('each')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"12px\",\n          color: \"textSubtle\",\n          children: [numberWinners, \" \", t('Winners')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(RewardBracketDetail, \"vmqtI5HVIrEp4jEZDUzzJIWSERY=\", false, function () {\n  return [useTranslation, usePriceCakeBusd];\n});\n_c = RewardBracketDetail;\nexport default RewardBracketDetail;\nvar _c;\n$RefreshReg$(_c, \"RewardBracketDetail\");","map":{"version":3,"names":["React","Flex","Skeleton","Text","useTranslation","usePriceCakeBusd","Balance","getBalanceNumber","getFullDisplayBalance","jsxDEV","_jsxDEV","Fragment","_Fragment","RewardBracketDetail","rewardBracket","cakeAmount","numberWinners","isHistoricRound","isBurn","isLoading","_s","t","cakePriceBusd","getRewardText","numberMatch","flexDirection","children","mb","mt","height","width","fileName","_jsxFileName","lineNumber","columnNumber","bold","color","isNaN","my","mr","fontSize","unit","value","decimals","prefix","times","div","parseInt","_c","$RefreshReg$"],"sources":["C:/Users/frkul/Documents/swapUI_pancake-frontend/src/views/Lottery/components/RewardBracketDetail.tsx"],"sourcesContent":["import React from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Flex, Skeleton, Text } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { usePriceCakeBusd } from 'state/farms/hooks'\r\nimport Balance from 'components/Balance'\r\nimport { getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\r\n\r\ninterface RewardBracketDetailProps {\r\n  cakeAmount: BigNumber\r\n  rewardBracket?: number\r\n  numberWinners?: string\r\n  isBurn?: boolean\r\n  isHistoricRound?: boolean\r\n  isLoading?: boolean\r\n}\r\n\r\nconst RewardBracketDetail: React.FC<RewardBracketDetailProps> = ({\r\n  rewardBracket,\r\n  cakeAmount,\r\n  numberWinners,\r\n  isHistoricRound,\r\n  isBurn,\r\n  isLoading,\r\n}) => {\r\n  const { t } = useTranslation()\r\n  const cakePriceBusd = usePriceCakeBusd()\r\n\r\n  const getRewardText = () => {\r\n    const numberMatch = rewardBracket + 1\r\n    if (isBurn) {\r\n      return t('Burn')\r\n    }\r\n    if (rewardBracket === 5) {\r\n      return t('Match all %numberMatch%', { numberMatch })\r\n    }\r\n    return t('Match first %numberMatch%', { numberMatch })\r\n  }\r\n\r\n  return (\r\n    <Flex flexDirection=\"column\">\r\n      {isLoading ? (\r\n        <Skeleton mb=\"4px\" mt=\"8px\" height={16} width={80} />\r\n      ) : (\r\n        <Text bold color={isBurn ? 'failure' : 'secondary'}>\r\n          {getRewardText()}\r\n        </Text>\r\n      )}\r\n      <>\r\n        {isLoading || cakeAmount.isNaN() ? (\r\n          <Skeleton my=\"4px\" mr=\"10px\" height={20} width={110} />\r\n        ) : (\r\n          <Balance fontSize=\"20px\" bold unit=\" CAKE\" value={getBalanceNumber(cakeAmount)} decimals={0} />\r\n        )}\r\n        {isLoading || cakeAmount.isNaN() ? (\r\n          <>\r\n            <Skeleton mt=\"4px\" mb=\"16px\" height={12} width={70} />\r\n          </>\r\n        ) : (\r\n          <Balance\r\n            fontSize=\"12px\"\r\n            color=\"textSubtle\"\r\n            prefix=\"~$\"\r\n            value={getBalanceNumber(cakeAmount.times(cakePriceBusd))}\r\n            decimals={0}\r\n          />\r\n        )}\r\n        {isHistoricRound && cakeAmount && (\r\n          <>\r\n            {numberWinners !== '0' && (\r\n              <Text fontSize=\"12px\" color=\"textSubtle\">\r\n                {getFullDisplayBalance(cakeAmount.div(parseInt(numberWinners, 10)), 18, 2)} CAKE {t('each')}\r\n              </Text>\r\n            )}\r\n            <Text fontSize=\"12px\" color=\"textSubtle\">\r\n              {numberWinners} {t('Winners')}\r\n            </Text>\r\n          </>\r\n        )}\r\n      </>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default RewardBracketDetail\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}