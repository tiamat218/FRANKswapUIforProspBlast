{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Devrim\\\\Documents\\\\FRANKswapUIforProspBlast\\\\src\\\\views\\\\Collectibles\\\\components\\\\NftList.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport orderBy from 'lodash/orderBy';\nimport { useWeb3React } from '@web3-react/core';\nimport nfts from 'config/constants/nfts';\nimport { useAppDispatch } from 'state';\nimport { fetchWalletNfts } from 'state/collectibles';\nimport { useGetCollectibles } from 'state/hooks';\nimport NftCard from './NftCard';\nimport NftGrid from './NftGrid';\nimport EasterNftCard from './NftCard/EasterNftCard';\n/**\r\n * A map of bunnyIds to special campaigns (NFT distribution)\r\n * Each NftCard is responsible for checking it's own claim status\r\n *\r\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst nftComponents = {\n  'easter-storm': EasterNftCard,\n  'easter-flipper': EasterNftCard,\n  'easter-caker': EasterNftCard\n};\n\nconst NftList = () => {\n  _s();\n\n  const {\n    tokenIds\n  } = useGetCollectibles();\n  const dispatch = useAppDispatch();\n  const {\n    account\n  } = useWeb3React();\n\n  const handleRefresh = () => {\n    dispatch(fetchWalletNfts(account));\n  };\n\n  return /*#__PURE__*/_jsxDEV(NftGrid, {\n    children: orderBy(nfts, 'sortOrder').map(nft => {\n      const Card = nftComponents[nft.identifier] || NftCard;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          nft: nft,\n          tokenIds: tokenIds[nft.identifier],\n          refresh: handleRefresh\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this)\n      }, nft.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NftList, \"4gZ+851OhRZ7QnuRInH2W+ppypM=\", false, function () {\n  return [useGetCollectibles, useAppDispatch, useWeb3React];\n});\n\n_c = NftList;\nexport default NftList;\n\nvar _c;\n\n$RefreshReg$(_c, \"NftList\");","map":{"version":3,"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/views/Collectibles/components/NftList.tsx"],"names":["React","orderBy","useWeb3React","nfts","useAppDispatch","fetchWalletNfts","useGetCollectibles","NftCard","NftGrid","EasterNftCard","nftComponents","NftList","tokenIds","dispatch","account","handleRefresh","map","nft","Card","identifier","name"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,SAASC,YAAT,QAA6B,kBAA7B;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,SAASC,cAAT,QAA+B,OAA/B;AACA,SAASC,eAAT,QAAgC,oBAAhC;AACA,SAASC,kBAAT,QAAmC,aAAnC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,aAAP,MAA0B,yBAA1B;AAEA;AACA;AACA;AACA;AACA;;;AACA,MAAMC,aAAa,GAAG;AACpB,kBAAgBD,aADI;AAEpB,oBAAkBA,aAFE;AAGpB,kBAAgBA;AAHI,CAAtB;;AAMA,MAAME,OAAO,GAAG,MAAM;AAAA;;AACpB,QAAM;AAAEC,IAAAA;AAAF,MAAeN,kBAAkB,EAAvC;AACA,QAAMO,QAAQ,GAAGT,cAAc,EAA/B;AACA,QAAM;AAAEU,IAAAA;AAAF,MAAcZ,YAAY,EAAhC;;AAEA,QAAMa,aAAa,GAAG,MAAM;AAC1BF,IAAAA,QAAQ,CAACR,eAAe,CAACS,OAAD,CAAhB,CAAR;AACD,GAFD;;AAIA,sBACE,QAAC,OAAD;AAAA,cACGb,OAAO,CAACE,IAAD,EAAO,WAAP,CAAP,CAA2Ba,GAA3B,CAAgCC,GAAD,IAAS;AACvC,YAAMC,IAAI,GAAGR,aAAa,CAACO,GAAG,CAACE,UAAL,CAAb,IAAiCZ,OAA9C;AAEA,0BACE;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,GAAG,EAAEU,GAAX;AAAgB,UAAA,QAAQ,EAAEL,QAAQ,CAACK,GAAG,CAACE,UAAL,CAAlC;AAAoD,UAAA,OAAO,EAAEJ;AAA7D;AAAA;AAAA;AAAA;AAAA;AADF,SAAUE,GAAG,CAACG,IAAd;AAAA;AAAA;AAAA;AAAA,cADF;AAKD,KARA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CAtBD;;GAAMT,O;UACiBL,kB,EACJF,c,EACGF,Y;;;KAHhBS,O;AAwBN,eAAeA,OAAf","sourcesContent":["import React from 'react'\r\nimport orderBy from 'lodash/orderBy'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport nfts from 'config/constants/nfts'\r\nimport { useAppDispatch } from 'state'\r\nimport { fetchWalletNfts } from 'state/collectibles'\r\nimport { useGetCollectibles } from 'state/hooks'\r\nimport NftCard from './NftCard'\r\nimport NftGrid from './NftGrid'\r\nimport EasterNftCard from './NftCard/EasterNftCard'\r\n\r\n/**\r\n * A map of bunnyIds to special campaigns (NFT distribution)\r\n * Each NftCard is responsible for checking it's own claim status\r\n *\r\n */\r\nconst nftComponents = {\r\n  'easter-storm': EasterNftCard,\r\n  'easter-flipper': EasterNftCard,\r\n  'easter-caker': EasterNftCard,\r\n}\r\n\r\nconst NftList = () => {\r\n  const { tokenIds } = useGetCollectibles()\r\n  const dispatch = useAppDispatch()\r\n  const { account } = useWeb3React()\r\n\r\n  const handleRefresh = () => {\r\n    dispatch(fetchWalletNfts(account))\r\n  }\r\n\r\n  return (\r\n    <NftGrid>\r\n      {orderBy(nfts, 'sortOrder').map((nft) => {\r\n        const Card = nftComponents[nft.identifier] || NftCard\r\n\r\n        return (\r\n          <div key={nft.name}>\r\n            <Card nft={nft} tokenIds={tokenIds[nft.identifier]} refresh={handleRefresh} />\r\n          </div>\r\n        )\r\n      })}\r\n    </NftGrid>\r\n  )\r\n}\r\n\r\nexport default NftList\r\n"]},"metadata":{},"sourceType":"module"}