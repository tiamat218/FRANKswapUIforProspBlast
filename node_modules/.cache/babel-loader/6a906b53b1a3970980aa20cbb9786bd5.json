{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Devrim\\\\Documents\\\\FRANKswapUIforProspBlast\\\\src\\\\views\\\\Predictions\\\\components\\\\RoundCard\\\\CardHeader.tsx\";\nimport React from 'react';\nimport { Flex, Text } from '@pancakeswap/uikit';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getBackgroundColor = (theme, status) => {\n  switch (status) {\n    case 'calculating':\n      return theme.colors.gradients.cardHeader;\n\n    case 'live':\n      return 'transparent';\n\n    case 'canceled':\n      return theme.colors.warning;\n\n    case 'next':\n      return theme.colors.secondary;\n\n    case 'expired':\n    case 'soon':\n    default:\n      return theme.colors.cardBorder;\n  }\n};\n\nconst getTextColorByStatus = (status, fallback) => {\n  switch (status) {\n    case 'expired':\n      return 'textDisabled';\n\n    case 'next':\n      return 'white';\n\n    case 'live':\n      return 'secondary';\n\n    case 'canceled':\n    case 'calculating':\n      return 'text';\n\n    default:\n      return fallback;\n  }\n};\n\nconst StyledCardHeader = styled.div`\n  align-items: center;\n  background: ${({\n  theme,\n  status\n}) => getBackgroundColor(theme, status)};\n  border-radius: 16px 16px 0 0;\n  display: flex;\n  justify-content: space-between;\n  padding: ${({\n  status\n}) => status === 'live' ? '16px' : '8px'};\n`;\n_c = StyledCardHeader;\nconst Round = styled.div`\n  justify-self: center;\n`;\n_c2 = Round;\n\nconst CardHeader = ({\n  status,\n  title,\n  epoch,\n  icon\n}) => {\n  const textColor = getTextColorByStatus(status, 'text');\n  const isLive = status === 'live';\n  return /*#__PURE__*/_jsxDEV(StyledCardHeader, {\n    status: status,\n    children: [/*#__PURE__*/_jsxDEV(Flex, {\n      alignItems: \"center\",\n      children: [icon, /*#__PURE__*/_jsxDEV(Text, {\n        color: textColor,\n        bold: isLive,\n        textTransform: isLive ? 'uppercase' : 'capitalize',\n        lineHeight: \"21px\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Round, {\n      children: /*#__PURE__*/_jsxDEV(Text, {\n        fontSize: isLive ? '14px' : '12px',\n        color: getTextColorByStatus(status, 'textSubtle'),\n        textAlign: \"center\",\n        children: `#${epoch}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n\n_c3 = CardHeader;\nexport default CardHeader;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"StyledCardHeader\");\n$RefreshReg$(_c2, \"Round\");\n$RefreshReg$(_c3, \"CardHeader\");","map":{"version":3,"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/views/Predictions/components/RoundCard/CardHeader.tsx"],"names":["React","Flex","Text","styled","getBackgroundColor","theme","status","colors","gradients","cardHeader","warning","secondary","cardBorder","getTextColorByStatus","fallback","StyledCardHeader","div","Round","CardHeader","title","epoch","icon","textColor","isLive"],"mappings":";AAAA,OAAOA,KAAP,MAAoC,OAApC;AACA,SAASC,IAAT,EAAeC,IAAf,QAA2B,oBAA3B;AACA,OAAOC,MAAP,MAAqC,mBAArC;;;AAYA,MAAMC,kBAAkB,GAAG,CAACC,KAAD,EAAsBC,MAAtB,KAAyC;AAClE,UAAQA,MAAR;AACE,SAAK,aAAL;AACE,aAAOD,KAAK,CAACE,MAAN,CAAaC,SAAb,CAAuBC,UAA9B;;AACF,SAAK,MAAL;AACE,aAAO,aAAP;;AACF,SAAK,UAAL;AACE,aAAOJ,KAAK,CAACE,MAAN,CAAaG,OAApB;;AACF,SAAK,MAAL;AACE,aAAOL,KAAK,CAACE,MAAN,CAAaI,SAApB;;AACF,SAAK,SAAL;AACA,SAAK,MAAL;AACA;AACE,aAAON,KAAK,CAACE,MAAN,CAAaK,UAApB;AAZJ;AAcD,CAfD;;AAoBA,MAAMC,oBAAoB,GAAG,CAACP,MAAD,EAAiBQ,QAAjB,KAAwD;AACnF,UAAQR,MAAR;AACE,SAAK,SAAL;AACE,aAAO,cAAP;;AACF,SAAK,MAAL;AACE,aAAO,OAAP;;AACF,SAAK,MAAL;AACE,aAAO,WAAP;;AACF,SAAK,UAAL;AACA,SAAK,aAAL;AACE,aAAO,MAAP;;AACF;AACE,aAAOQ,QAAP;AAXJ;AAaD,CAdD;;AAgBA,MAAMC,gBAAgB,GAAGZ,MAAM,CAACa,GAAwB;AACxD;AACA,gBAAgB,CAAC;AAAEX,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAAuBF,kBAAkB,CAACC,KAAD,EAAQC,MAAR,CAAgB;AACzE;AACA;AACA;AACA,aAAa,CAAC;AAAEA,EAAAA;AAAF,CAAD,KAAiBA,MAAM,KAAK,MAAX,GAAoB,MAApB,GAA6B,KAAO;AAClE,CAPA;KAAMS,gB;AASN,MAAME,KAAK,GAAGd,MAAM,CAACa,GAAI;AACzB;AACA,CAFA;MAAMC,K;;AAIN,MAAMC,UAAqC,GAAG,CAAC;AAAEZ,EAAAA,MAAF;AAAUa,EAAAA,KAAV;AAAiBC,EAAAA,KAAjB;AAAwBC,EAAAA;AAAxB,CAAD,KAAoC;AAChF,QAAMC,SAAS,GAAGT,oBAAoB,CAACP,MAAD,EAAS,MAAT,CAAtC;AACA,QAAMiB,MAAM,GAAGjB,MAAM,KAAK,MAA1B;AAEA,sBACE,QAAC,gBAAD;AAAkB,IAAA,MAAM,EAAEA,MAA1B;AAAA,4BACE,QAAC,IAAD;AAAM,MAAA,UAAU,EAAC,QAAjB;AAAA,iBACGe,IADH,eAEE,QAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,SAAb;AAAwB,QAAA,IAAI,EAAEC,MAA9B;AAAsC,QAAA,aAAa,EAAEA,MAAM,GAAG,WAAH,GAAiB,YAA5E;AAA0F,QAAA,UAAU,EAAC,MAArG;AAAA,kBACGJ;AADH;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAOE,QAAC,KAAD;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,QAAQ,EAAEI,MAAM,GAAG,MAAH,GAAY,MAAlC;AAA0C,QAAA,KAAK,EAAEV,oBAAoB,CAACP,MAAD,EAAS,YAAT,CAArE;AAA6F,QAAA,SAAS,EAAC,QAAvG;AAAA,kBACI,IAAGc,KAAM;AADb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CAnBD;;MAAMF,U;AAqBN,eAAeA,UAAf","sourcesContent":["import React, { ReactElement } from 'react'\r\nimport { Flex, Text } from '@pancakeswap/uikit'\r\nimport styled, { DefaultTheme } from 'styled-components'\r\n\r\ntype Status = 'expired' | 'live' | 'next' | 'soon' | 'canceled' | 'calculating'\r\n\r\ninterface CardHeaderProps {\r\n  status: Status\r\n  title: string\r\n  epoch: number\r\n  blockNumber: number\r\n  icon?: ReactElement\r\n}\r\n\r\nconst getBackgroundColor = (theme: DefaultTheme, status: Status) => {\r\n  switch (status) {\r\n    case 'calculating':\r\n      return theme.colors.gradients.cardHeader\r\n    case 'live':\r\n      return 'transparent'\r\n    case 'canceled':\r\n      return theme.colors.warning\r\n    case 'next':\r\n      return theme.colors.secondary\r\n    case 'expired':\r\n    case 'soon':\r\n    default:\r\n      return theme.colors.cardBorder\r\n  }\r\n}\r\n\r\ntype TextColor = 'textDisabled' | 'white' | 'secondary' | 'text' | 'textSubtle'\r\ntype FallbackColor = 'text' | 'textSubtle'\r\n\r\nconst getTextColorByStatus = (status: Status, fallback: FallbackColor): TextColor => {\r\n  switch (status) {\r\n    case 'expired':\r\n      return 'textDisabled'\r\n    case 'next':\r\n      return 'white'\r\n    case 'live':\r\n      return 'secondary'\r\n    case 'canceled':\r\n    case 'calculating':\r\n      return 'text'\r\n    default:\r\n      return fallback\r\n  }\r\n}\r\n\r\nconst StyledCardHeader = styled.div<{ status: Status }>`\r\n  align-items: center;\r\n  background: ${({ theme, status }) => getBackgroundColor(theme, status)};\r\n  border-radius: 16px 16px 0 0;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  padding: ${({ status }) => (status === 'live' ? '16px' : '8px')};\r\n`\r\n\r\nconst Round = styled.div`\r\n  justify-self: center;\r\n`\r\n\r\nconst CardHeader: React.FC<CardHeaderProps> = ({ status, title, epoch, icon }) => {\r\n  const textColor = getTextColorByStatus(status, 'text')\r\n  const isLive = status === 'live'\r\n\r\n  return (\r\n    <StyledCardHeader status={status}>\r\n      <Flex alignItems=\"center\">\r\n        {icon}\r\n        <Text color={textColor} bold={isLive} textTransform={isLive ? 'uppercase' : 'capitalize'} lineHeight=\"21px\">\r\n          {title}\r\n        </Text>\r\n      </Flex>\r\n      <Round>\r\n        <Text fontSize={isLive ? '14px' : '12px'} color={getTextColorByStatus(status, 'textSubtle')} textAlign=\"center\">\r\n          {`#${epoch}`}\r\n        </Text>\r\n      </Round>\r\n    </StyledCardHeader>\r\n  )\r\n}\r\n\r\nexport default CardHeader\r\n"]},"metadata":{},"sourceType":"module"}