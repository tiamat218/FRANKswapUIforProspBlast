{"ast":null,"code":"import React,{useEffect,useRef}from'react';import{useWeb3React}from'@web3-react/core';import{Helmet}from'react-helmet-async';import{useMatchBreakpoints,useModal}from'@pancakeswap/uikit';import{useAppDispatch}from'state';import{useGetPredictionsStatus,useIsChartPaneOpen}from'state/hooks';import{useInitialBlock}from'state/block/hooks';import{initializePredictions}from'state/predictions';import{PredictionStatus}from'state/types';import usePersistState from'hooks/usePersistState';import PageLoader from'components/Loader/PageLoader';import usePollOraclePrice from'./hooks/usePollOraclePrice';import usePollPredictions from'./hooks/usePollPredictions';import Container from'./components/Container';import CollectWinningsPopup from'./components/CollectWinningsPopup';import SwiperProvider from'./context/SwiperProvider';import Desktop from'./Desktop';import Mobile from'./Mobile';import RiskDisclaimer from'./components/RiskDisclaimer';import ChartDisclaimer from'./components/ChartDisclaimer';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const Predictions=()=>{const{isXl}=useMatchBreakpoints();const[hasAcceptedRisk,setHasAcceptedRisk]=usePersistState(false,{localStorageKey:'pancake_predictions_accepted_risk'});const[hasAcceptedChart,setHasAcceptedChart]=usePersistState(false,{localStorageKey:'pancake_predictions_chart'});const{account}=useWeb3React();const status=useGetPredictionsStatus();const isChartPaneOpen=useIsChartPaneOpen();const dispatch=useAppDispatch();const initialBlock=useInitialBlock();const isDesktop=isXl;const handleAcceptRiskSuccess=()=>setHasAcceptedRisk(true);const handleAcceptChart=()=>setHasAcceptedChart(true);const[onPresentRiskDisclaimer]=useModal(/*#__PURE__*/_jsx(RiskDisclaimer,{onSuccess:handleAcceptRiskSuccess}),false);const[onPresentChartDisclaimer]=useModal(/*#__PURE__*/_jsx(ChartDisclaimer,{onSuccess:handleAcceptChart}),false);// TODO: memoize modal's handlers\nconst onPresentRiskDisclaimerRef=useRef(onPresentRiskDisclaimer);const onPresentChartDisclaimerRef=useRef(onPresentChartDisclaimer);// Disclaimer\nuseEffect(()=>{if(!hasAcceptedRisk){onPresentRiskDisclaimerRef.current();}},[hasAcceptedRisk,onPresentRiskDisclaimerRef]);// Chart Disclaimer\nuseEffect(()=>{if(!hasAcceptedChart&&isChartPaneOpen){onPresentChartDisclaimerRef.current();}},[onPresentChartDisclaimerRef,hasAcceptedChart,isChartPaneOpen]);useEffect(()=>{if(initialBlock>0){// Do not start initialization until the first block has been retrieved\ndispatch(initializePredictions(account));}},[initialBlock,dispatch,account]);usePollPredictions();usePollOraclePrice();if(status===PredictionStatus.INITIAL){return/*#__PURE__*/_jsx(PageLoader,{});}return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Helmet,{children:/*#__PURE__*/_jsx(\"script\",{src:\"https://s3.tradingview.com/tv.js\",type:\"text/javascript\",id:\"tradingViewWidget\"})}),/*#__PURE__*/_jsx(SwiperProvider,{children:/*#__PURE__*/_jsxs(Container,{children:[isDesktop?/*#__PURE__*/_jsx(Desktop,{}):/*#__PURE__*/_jsx(Mobile,{}),/*#__PURE__*/_jsx(CollectWinningsPopup,{})]})})]});};export default Predictions;","map":{"version":3,"names":["React","useEffect","useRef","useWeb3React","Helmet","useMatchBreakpoints","useModal","useAppDispatch","useGetPredictionsStatus","useIsChartPaneOpen","useInitialBlock","initializePredictions","PredictionStatus","usePersistState","PageLoader","usePollOraclePrice","usePollPredictions","Container","CollectWinningsPopup","SwiperProvider","Desktop","Mobile","RiskDisclaimer","ChartDisclaimer","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Predictions","isXl","hasAcceptedRisk","setHasAcceptedRisk","localStorageKey","hasAcceptedChart","setHasAcceptedChart","account","status","isChartPaneOpen","dispatch","initialBlock","isDesktop","handleAcceptRiskSuccess","handleAcceptChart","onPresentRiskDisclaimer","onSuccess","onPresentChartDisclaimer","onPresentRiskDisclaimerRef","onPresentChartDisclaimerRef","current","INITIAL","children","src","type","id"],"sources":["C:/Users/frkul/Documents/swapUI_pancake-frontend/src/views/Predictions/index.tsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { Helmet } from 'react-helmet-async'\r\nimport { useMatchBreakpoints, useModal } from '@pancakeswap/uikit'\r\nimport { useAppDispatch } from 'state'\r\nimport { useGetPredictionsStatus, useIsChartPaneOpen } from 'state/hooks'\r\nimport { useInitialBlock } from 'state/block/hooks'\r\nimport { initializePredictions } from 'state/predictions'\r\nimport { PredictionStatus } from 'state/types'\r\nimport usePersistState from 'hooks/usePersistState'\r\nimport PageLoader from 'components/Loader/PageLoader'\r\nimport usePollOraclePrice from './hooks/usePollOraclePrice'\r\nimport usePollPredictions from './hooks/usePollPredictions'\r\nimport Container from './components/Container'\r\nimport CollectWinningsPopup from './components/CollectWinningsPopup'\r\nimport SwiperProvider from './context/SwiperProvider'\r\nimport Desktop from './Desktop'\r\nimport Mobile from './Mobile'\r\nimport RiskDisclaimer from './components/RiskDisclaimer'\r\nimport ChartDisclaimer from './components/ChartDisclaimer'\r\n\r\nconst Predictions = () => {\r\n  const { isXl } = useMatchBreakpoints()\r\n  const [hasAcceptedRisk, setHasAcceptedRisk] = usePersistState(false, {\r\n    localStorageKey: 'pancake_predictions_accepted_risk',\r\n  })\r\n  const [hasAcceptedChart, setHasAcceptedChart] = usePersistState(false, {\r\n    localStorageKey: 'pancake_predictions_chart',\r\n  })\r\n  const { account } = useWeb3React()\r\n  const status = useGetPredictionsStatus()\r\n  const isChartPaneOpen = useIsChartPaneOpen()\r\n  const dispatch = useAppDispatch()\r\n  const initialBlock = useInitialBlock()\r\n  const isDesktop = isXl\r\n  const handleAcceptRiskSuccess = () => setHasAcceptedRisk(true)\r\n  const handleAcceptChart = () => setHasAcceptedChart(true)\r\n  const [onPresentRiskDisclaimer] = useModal(<RiskDisclaimer onSuccess={handleAcceptRiskSuccess} />, false)\r\n  const [onPresentChartDisclaimer] = useModal(<ChartDisclaimer onSuccess={handleAcceptChart} />, false)\r\n\r\n  // TODO: memoize modal's handlers\r\n  const onPresentRiskDisclaimerRef = useRef(onPresentRiskDisclaimer)\r\n  const onPresentChartDisclaimerRef = useRef(onPresentChartDisclaimer)\r\n\r\n  // Disclaimer\r\n  useEffect(() => {\r\n    if (!hasAcceptedRisk) {\r\n      onPresentRiskDisclaimerRef.current()\r\n    }\r\n  }, [hasAcceptedRisk, onPresentRiskDisclaimerRef])\r\n\r\n  // Chart Disclaimer\r\n  useEffect(() => {\r\n    if (!hasAcceptedChart && isChartPaneOpen) {\r\n      onPresentChartDisclaimerRef.current()\r\n    }\r\n  }, [onPresentChartDisclaimerRef, hasAcceptedChart, isChartPaneOpen])\r\n\r\n  useEffect(() => {\r\n    if (initialBlock > 0) {\r\n      // Do not start initialization until the first block has been retrieved\r\n      dispatch(initializePredictions(account))\r\n    }\r\n  }, [initialBlock, dispatch, account])\r\n\r\n  usePollPredictions()\r\n  usePollOraclePrice()\r\n\r\n  if (status === PredictionStatus.INITIAL) {\r\n    return <PageLoader />\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <script src=\"https://s3.tradingview.com/tv.js\" type=\"text/javascript\" id=\"tradingViewWidget\" />\r\n      </Helmet>\r\n      <SwiperProvider>\r\n        <Container>\r\n          {isDesktop ? <Desktop /> : <Mobile />}\r\n          <CollectWinningsPopup />\r\n        </Container>\r\n      </SwiperProvider>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Predictions\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}