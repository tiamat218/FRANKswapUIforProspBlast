{"ast":null,"code":"import _taggedTemplateLiteral from\"C:/Users/frkul/Documents/swapUI_pancake-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2,_templateObject3,_templateObject4;import React,{useState}from'react';import styled from'styled-components';import{ethers}from'ethers';import{useWeb3React}from'@web3-react/core';import{Button,Input,Modal,Text}from'@pancakeswap/uikit';import{getAddressByType}from'utils/collectibles';import{useTranslation}from'contexts/Localization';import useToast from'hooks/useToast';import{useERC721}from'hooks/useContract';import InfoRow from'./InfoRow';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Value=styled(Text)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  font-weight: 600;\\n\"])));const ModalContent=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  margin-bottom: 16px;\\n\"])));const Actions=styled.div(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  display: grid;\\n  grid-template-columns: repeat(2, 1fr);\\n  grid-gap: 8px;\\n\"])));const Label=styled.label(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n  color: \",\";\\n  display: block;\\n  margin-bottom: 8px;\\n  margin-top: 24px;\\n\"])),_ref=>{let{theme}=_ref;return theme.colors.text;});const TransferNftModal=_ref2=>{let{nft,tokenIds,onSuccess,onDismiss}=_ref2;const[isLoading,setIsLoading]=useState(false);const[value,setValue]=useState('');const[error,setError]=useState(null);const{t}=useTranslation();const{account}=useWeb3React();const contract=useERC721(getAddressByType(nft.type));const{toastSuccess}=useToast();const handleConfirm=async()=>{try{const isValidAddress=ethers.utils.isAddress(value);if(!isValidAddress){setError(t('Please enter a valid wallet address'));}else{const tx=await contract.transferFrom(account,value,tokenIds[0]);setIsLoading(true);const receipt=await tx.wait();if(receipt.status){onDismiss();onSuccess();toastSuccess(t('NFT successfully transferred!'));}else{setError(t('Unable to transfer NFT'));setIsLoading(false);}}}catch(err){console.error('Unable to transfer NFT:',err);}};const handleChange=evt=>{const{value:inputValue}=evt.target;setValue(inputValue);};return/*#__PURE__*/_jsxs(Modal,{title:t('Transfer NFT'),onDismiss:onDismiss,children:[/*#__PURE__*/_jsxs(ModalContent,{children:[error&&/*#__PURE__*/_jsx(Text,{color:\"failure\",mb:\"8px\",children:error}),/*#__PURE__*/_jsxs(InfoRow,{children:[/*#__PURE__*/_jsxs(Text,{children:[t('Transferring'),\":\"]}),/*#__PURE__*/_jsx(Value,{children:t('1x %nftName% NFT',{nftName:nft.name})})]}),/*#__PURE__*/_jsxs(Label,{htmlFor:\"transferAddress\",children:[t('Receiving address'),\":\"]}),/*#__PURE__*/_jsx(Input,{id:\"transferAddress\",name:\"address\",type:\"text\",placeholder:t('Paste address'),value:value,onChange:handleChange,isWarning:error,disabled:isLoading})]}),/*#__PURE__*/_jsxs(Actions,{children:[/*#__PURE__*/_jsx(Button,{width:\"100%\",variant:\"secondary\",onClick:onDismiss,children:t('Cancel')}),/*#__PURE__*/_jsx(Button,{width:\"100%\",onClick:handleConfirm,disabled:!account||isLoading||!value,children:t('Confirm')})]})]});};export default TransferNftModal;","map":{"version":3,"names":["React","useState","styled","ethers","useWeb3React","Button","Input","Modal","Text","getAddressByType","useTranslation","useToast","useERC721","InfoRow","jsx","_jsx","jsxs","_jsxs","Value","_templateObject","_taggedTemplateLiteral","ModalContent","div","_templateObject2","Actions","_templateObject3","Label","label","_templateObject4","_ref","theme","colors","text","TransferNftModal","_ref2","nft","tokenIds","onSuccess","onDismiss","isLoading","setIsLoading","value","setValue","error","setError","t","account","contract","type","toastSuccess","handleConfirm","isValidAddress","utils","isAddress","tx","transferFrom","receipt","wait","status","err","console","handleChange","evt","inputValue","target","title","children","color","mb","nftName","name","htmlFor","id","placeholder","onChange","isWarning","disabled","width","variant","onClick"],"sources":["C:/Users/frkul/Documents/swapUI_pancake-frontend/src/views/Collectibles/components/TransferNftModal.tsx"],"sourcesContent":["import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { ethers } from 'ethers'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { Button, Input, Modal, Text } from '@pancakeswap/uikit'\r\nimport { getAddressByType } from 'utils/collectibles'\r\nimport { Nft } from 'config/constants/types'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useToast from 'hooks/useToast'\r\nimport { useERC721 } from 'hooks/useContract'\r\nimport InfoRow from './InfoRow'\r\n\r\ninterface TransferNftModalProps {\r\n  nft: Nft\r\n  tokenIds: number[]\r\n  onSuccess: () => any\r\n  onDismiss?: () => void\r\n}\r\n\r\nconst Value = styled(Text)`\r\n  font-weight: 600;\r\n`\r\n\r\nconst ModalContent = styled.div`\r\n  margin-bottom: 16px;\r\n`\r\n\r\nconst Actions = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  grid-gap: 8px;\r\n`\r\n\r\nconst Label = styled.label`\r\n  color: ${({ theme }) => theme.colors.text};\r\n  display: block;\r\n  margin-bottom: 8px;\r\n  margin-top: 24px;\r\n`\r\n\r\nconst TransferNftModal: React.FC<TransferNftModalProps> = ({ nft, tokenIds, onSuccess, onDismiss }) => {\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [value, setValue] = useState('')\r\n  const [error, setError] = useState(null)\r\n  const { t } = useTranslation()\r\n  const { account } = useWeb3React()\r\n  const contract = useERC721(getAddressByType(nft.type))\r\n  const { toastSuccess } = useToast()\r\n\r\n  const handleConfirm = async () => {\r\n    try {\r\n      const isValidAddress = ethers.utils.isAddress(value)\r\n\r\n      if (!isValidAddress) {\r\n        setError(t('Please enter a valid wallet address'))\r\n      } else {\r\n        const tx = await contract.transferFrom(account, value, tokenIds[0])\r\n        setIsLoading(true)\r\n        const receipt = await tx.wait()\r\n        if (receipt.status) {\r\n          onDismiss()\r\n          onSuccess()\r\n          toastSuccess(t('NFT successfully transferred!'))\r\n        } else {\r\n          setError(t('Unable to transfer NFT'))\r\n          setIsLoading(false)\r\n        }\r\n      }\r\n    } catch (err) {\r\n      console.error('Unable to transfer NFT:', err)\r\n    }\r\n  }\r\n\r\n  const handleChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { value: inputValue } = evt.target\r\n    setValue(inputValue)\r\n  }\r\n\r\n  return (\r\n    <Modal title={t('Transfer NFT')} onDismiss={onDismiss}>\r\n      <ModalContent>\r\n        {error && (\r\n          <Text color=\"failure\" mb=\"8px\">\r\n            {error}\r\n          </Text>\r\n        )}\r\n        <InfoRow>\r\n          <Text>{t('Transferring')}:</Text>\r\n          <Value>{t('1x %nftName% NFT', { nftName: nft.name })}</Value>\r\n        </InfoRow>\r\n        <Label htmlFor=\"transferAddress\">{t('Receiving address')}:</Label>\r\n        <Input\r\n          id=\"transferAddress\"\r\n          name=\"address\"\r\n          type=\"text\"\r\n          placeholder={t('Paste address')}\r\n          value={value}\r\n          onChange={handleChange}\r\n          isWarning={error}\r\n          disabled={isLoading}\r\n        />\r\n      </ModalContent>\r\n      <Actions>\r\n        <Button width=\"100%\" variant=\"secondary\" onClick={onDismiss}>\r\n          {t('Cancel')}\r\n        </Button>\r\n        <Button width=\"100%\" onClick={handleConfirm} disabled={!account || isLoading || !value}>\r\n          {t('Confirm')}\r\n        </Button>\r\n      </Actions>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default TransferNftModal\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}