{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Devrim\\\\Documents\\\\FRANKswapUIforProspBlast\\\\src\\\\views\\\\Pools\\\\components\\\\PoolsTable\\\\Cells\\\\ExpandActionCell.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport { Text, ChevronDownIcon } from '@pancakeswap/uikit';\nimport { useTranslation } from 'contexts/Localization';\nimport BaseCell from './BaseCell';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledCell = styled(BaseCell)`\n  flex-direction: row;\n  justify-content: flex-end;\n  align-items: center;\n  flex: 1;\n  padding-right: 12px;\n  padding-left: 0px;\n  ${({\n  theme\n}) => theme.mediaQueries.md} {\n    flex: 0 0 120px;\n    padding-right: 32px;\n    padding-left: 8px;\n  }\n`;\n_c = StyledCell;\nconst ArrowIcon = styled(ChevronDownIcon)`\n  transform: ${({\n  toggled\n}) => toggled ? 'rotate(180deg)' : 'rotate(0)'};\n  height: 24px;\n`;\n_c2 = ArrowIcon;\n\nconst TotalStakedCell = ({\n  expanded,\n  isFullLayout\n}) => {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  return /*#__PURE__*/_jsxDEV(StyledCell, {\n    role: \"cell\",\n    children: [isFullLayout && /*#__PURE__*/_jsxDEV(Text, {\n      color: \"primary\",\n      bold: true,\n      children: expanded ? t('Hide') : t('Details')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ArrowIcon, {\n      color: \"primary\",\n      toggled: expanded\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TotalStakedCell, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n\n_c3 = TotalStakedCell;\nexport default TotalStakedCell;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"StyledCell\");\n$RefreshReg$(_c2, \"ArrowIcon\");\n$RefreshReg$(_c3, \"TotalStakedCell\");","map":{"version":3,"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/views/Pools/components/PoolsTable/Cells/ExpandActionCell.tsx"],"names":["React","styled","Text","ChevronDownIcon","useTranslation","BaseCell","StyledCell","theme","mediaQueries","md","ArrowIcon","toggled","TotalStakedCell","expanded","isFullLayout","t"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,IAAT,EAAeC,eAAf,QAAsC,oBAAtC;AACA,SAASC,cAAT,QAA+B,uBAA/B;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAOA,MAAMC,UAAU,GAAGL,MAAM,CAACI,QAAD,CAAW;AACpC;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,CAAC;AAAEE,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,YAAN,CAAmBC,EAAG;AACzC;AACA;AACA;AACA;AACA,CAZA;KAAMH,U;AAcN,MAAMI,SAAS,GAAGT,MAAM,CAACE,eAAD,CAAwC;AAChE,eAAe,CAAC;AAAEQ,EAAAA;AAAF,CAAD,KAAkBA,OAAO,GAAG,gBAAH,GAAsB,WAAa;AAC3E;AACA,CAHA;MAAMD,S;;AAKN,MAAME,eAAgD,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAAgC;AAAA;;AACvF,QAAM;AAAEC,IAAAA;AAAF,MAAQX,cAAc,EAA5B;AACA,sBACE,QAAC,UAAD;AAAY,IAAA,IAAI,EAAC,MAAjB;AAAA,eACGU,YAAY,iBACX,QAAC,IAAD;AAAM,MAAA,KAAK,EAAC,SAAZ;AAAsB,MAAA,IAAI,MAA1B;AAAA,gBACGD,QAAQ,GAAGE,CAAC,CAAC,MAAD,CAAJ,GAAeA,CAAC,CAAC,SAAD;AAD3B;AAAA;AAAA;AAAA;AAAA,YAFJ,eAME,QAAC,SAAD;AAAW,MAAA,KAAK,EAAC,SAAjB;AAA2B,MAAA,OAAO,EAAEF;AAApC;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CAZD;;GAAMD,e;UACUR,c;;;MADVQ,e;AAcN,eAAeA,eAAf","sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text, ChevronDownIcon } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport BaseCell from './BaseCell'\r\n\r\ninterface ExpandActionCellProps {\r\n  expanded: boolean\r\n  isFullLayout: boolean\r\n}\r\n\r\nconst StyledCell = styled(BaseCell)`\r\n  flex-direction: row;\r\n  justify-content: flex-end;\r\n  align-items: center;\r\n  flex: 1;\r\n  padding-right: 12px;\r\n  padding-left: 0px;\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    flex: 0 0 120px;\r\n    padding-right: 32px;\r\n    padding-left: 8px;\r\n  }\r\n`\r\n\r\nconst ArrowIcon = styled(ChevronDownIcon)<{ toggled: boolean }>`\r\n  transform: ${({ toggled }) => (toggled ? 'rotate(180deg)' : 'rotate(0)')};\r\n  height: 24px;\r\n`\r\n\r\nconst TotalStakedCell: React.FC<ExpandActionCellProps> = ({ expanded, isFullLayout }) => {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <StyledCell role=\"cell\">\r\n      {isFullLayout && (\r\n        <Text color=\"primary\" bold>\r\n          {expanded ? t('Hide') : t('Details')}\r\n        </Text>\r\n      )}\r\n      <ArrowIcon color=\"primary\" toggled={expanded} />\r\n    </StyledCell>\r\n  )\r\n}\r\n\r\nexport default TotalStakedCell\r\n"]},"metadata":{},"sourceType":"module"}