{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\frkul\\\\Documents\\\\swapUI_pancake-frontend\\\\src\\\\components\\\\SearchModal\\\\CurrencySearch.tsx\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useMemo, useRef, useState, useEffect } from 'react';\nimport { ETHER } from '@pancakeswap/sdk';\nimport { Text, Input, Box } from '@pancakeswap/uikit';\nimport { useTranslation } from 'contexts/Localization';\nimport { useAudioModeManager } from 'state/user/hooks';\nimport useDebounce from 'hooks/useDebounce';\nimport useActiveWeb3React from 'hooks/useActiveWeb3React';\nimport { useAllTokens, useToken, useIsUserAddedToken, useFoundOnInactiveList } from '../../hooks/Tokens';\nimport { isAddress } from '../../utils';\nimport Column, { AutoColumn } from '../Layout/Column';\nimport Row from '../Layout/Row';\nimport CommonBases from './CommonBases';\nimport CurrencyList from './CurrencyList';\nimport { filterTokens, useSortedTokensByQuery } from './filtering';\nimport useTokenComparator from './sorting';\nimport ImportRow from './ImportRow';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst swapSound = new Audio('swap.mp3');\nfunction CurrencySearch({\n  selectedCurrency,\n  onCurrencySelect,\n  otherSelectedCurrency,\n  showCommonBases,\n  showImportView,\n  setImportToken\n}) {\n  _s();\n  const {\n    t\n  } = useTranslation();\n  const {\n    chainId\n  } = useActiveWeb3React();\n\n  // refs for fixed size lists\n  const fixedList = useRef();\n  const [searchQuery, setSearchQuery] = useState('');\n  const debouncedQuery = useDebounce(searchQuery, 200);\n  const [invertSearchOrder] = useState(false);\n  const allTokens = useAllTokens();\n\n  // if they input an address, use it\n  const searchToken = useToken(debouncedQuery);\n  const searchTokenIsAdded = useIsUserAddedToken(searchToken);\n  const [audioPlay] = useAudioModeManager();\n  const showETH = useMemo(() => {\n    const s = debouncedQuery.toLowerCase().trim();\n    return s === '' || s === 'b' || s === 'bn' || s === 'bnb';\n  }, [debouncedQuery]);\n  const tokenComparator = useTokenComparator(invertSearchOrder);\n  const filteredTokens = useMemo(() => {\n    return filterTokens(Object.values(allTokens), debouncedQuery);\n  }, [allTokens, debouncedQuery]);\n  const sortedTokens = useMemo(() => {\n    return filteredTokens.sort(tokenComparator);\n  }, [filteredTokens, tokenComparator]);\n  const filteredSortedTokens = useSortedTokensByQuery(sortedTokens, debouncedQuery);\n  const handleCurrencySelect = useCallback(currency => {\n    onCurrencySelect(currency);\n    if (audioPlay) {\n      swapSound.play();\n    }\n  }, [audioPlay, onCurrencySelect]);\n\n  // manage focus on modal show\n  const inputRef = useRef();\n  useEffect(() => {\n    inputRef.current.focus();\n  }, []);\n  const handleInput = useCallback(event => {\n    var _fixedList$current;\n    const input = event.target.value;\n    const checksummedInput = isAddress(input);\n    setSearchQuery(checksummedInput || input);\n    (_fixedList$current = fixedList.current) === null || _fixedList$current === void 0 ? void 0 : _fixedList$current.scrollTo(0);\n  }, []);\n  const handleEnter = useCallback(e => {\n    if (e.key === 'Enter') {\n      const s = debouncedQuery.toLowerCase().trim();\n      if (s === 'bnb') {\n        handleCurrencySelect(ETHER);\n      } else if (filteredSortedTokens.length > 0) {\n        var _filteredSortedTokens;\n        if (((_filteredSortedTokens = filteredSortedTokens[0].symbol) === null || _filteredSortedTokens === void 0 ? void 0 : _filteredSortedTokens.toLowerCase()) === debouncedQuery.trim().toLowerCase() || filteredSortedTokens.length === 1) {\n          handleCurrencySelect(filteredSortedTokens[0]);\n        }\n      }\n    }\n  }, [filteredSortedTokens, handleCurrencySelect, debouncedQuery]);\n\n  // if no results on main list, show option to expand into inactive\n  const inactiveTokens = useFoundOnInactiveList(debouncedQuery);\n  const filteredInactiveTokens = useSortedTokensByQuery(inactiveTokens, debouncedQuery);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(AutoColumn, {\n        gap: \"16px\",\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            id: \"token-search-input\",\n            placeholder: t('Search name or paste address'),\n            scale: \"lg\",\n            autoComplete: \"off\",\n            value: searchQuery,\n            ref: inputRef,\n            onChange: handleInput,\n            onKeyDown: handleEnter\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), showCommonBases && /*#__PURE__*/_jsxDEV(CommonBases, {\n          chainId: chainId,\n          onSelect: handleCurrencySelect,\n          selectedCurrency: selectedCurrency\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), searchToken && !searchTokenIsAdded ? /*#__PURE__*/_jsxDEV(Column, {\n        style: {\n          padding: '20px 0',\n          height: '100%'\n        },\n        children: /*#__PURE__*/_jsxDEV(ImportRow, {\n          token: searchToken,\n          showImportView: showImportView,\n          setImportToken: setImportToken\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }, this) : (filteredSortedTokens === null || filteredSortedTokens === void 0 ? void 0 : filteredSortedTokens.length) > 0 || (filteredInactiveTokens === null || filteredInactiveTokens === void 0 ? void 0 : filteredInactiveTokens.length) > 0 ? /*#__PURE__*/_jsxDEV(Box, {\n        margin: \"24px -24px\",\n        children: /*#__PURE__*/_jsxDEV(CurrencyList, {\n          height: 390,\n          showETH: showETH,\n          currencies: filteredInactiveTokens ? filteredSortedTokens.concat(filteredInactiveTokens) : filteredSortedTokens,\n          breakIndex: inactiveTokens && filteredSortedTokens ? filteredSortedTokens.length : undefined,\n          onCurrencySelect: handleCurrencySelect,\n          otherCurrency: otherSelectedCurrency,\n          selectedCurrency: selectedCurrency,\n          fixedListRef: fixedList,\n          showImportView: showImportView,\n          setImportToken: setImportToken\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Column, {\n        style: {\n          padding: '20px',\n          height: '100%'\n        },\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          color: \"textSubtle\",\n          textAlign: \"center\",\n          mb: \"20px\",\n          children: t('No results found.')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(CurrencySearch, \"DVASNfAvKj0ERrgDMVUYq4Y0BQo=\", false, function () {\n  return [useTranslation, useActiveWeb3React, useDebounce, useAllTokens, useToken, useIsUserAddedToken, useAudioModeManager, useTokenComparator, useSortedTokensByQuery, useFoundOnInactiveList, useSortedTokensByQuery];\n});\n_c = CurrencySearch;\nexport default CurrencySearch;\nvar _c;\n$RefreshReg$(_c, \"CurrencySearch\");","map":{"version":3,"names":["React","useCallback","useMemo","useRef","useState","useEffect","ETHER","Text","Input","Box","useTranslation","useAudioModeManager","useDebounce","useActiveWeb3React","useAllTokens","useToken","useIsUserAddedToken","useFoundOnInactiveList","isAddress","Column","AutoColumn","Row","CommonBases","CurrencyList","filterTokens","useSortedTokensByQuery","useTokenComparator","ImportRow","jsxDEV","_jsxDEV","Fragment","_Fragment","swapSound","Audio","CurrencySearch","selectedCurrency","onCurrencySelect","otherSelectedCurrency","showCommonBases","showImportView","setImportToken","_s","t","chainId","fixedList","searchQuery","setSearchQuery","debouncedQuery","invertSearchOrder","allTokens","searchToken","searchTokenIsAdded","audioPlay","showETH","s","toLowerCase","trim","tokenComparator","filteredTokens","Object","values","sortedTokens","sort","filteredSortedTokens","handleCurrencySelect","currency","play","inputRef","current","focus","handleInput","event","_fixedList$current","input","target","value","checksummedInput","scrollTo","handleEnter","e","key","length","_filteredSortedTokens","symbol","inactiveTokens","filteredInactiveTokens","children","gap","id","placeholder","scale","autoComplete","ref","onChange","onKeyDown","fileName","_jsxFileName","lineNumber","columnNumber","onSelect","style","padding","height","token","margin","currencies","concat","breakIndex","undefined","otherCurrency","fixedListRef","color","textAlign","mb","_c","$RefreshReg$"],"sources":["C:/Users/frkul/Documents/swapUI_pancake-frontend/src/components/SearchModal/CurrencySearch.tsx"],"sourcesContent":["import React, { KeyboardEvent, RefObject, useCallback, useMemo, useRef, useState, useEffect } from 'react'\r\nimport { Currency, ETHER, Token } from '@pancakeswap/sdk'\r\nimport { Text, Input, Box } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { FixedSizeList } from 'react-window'\r\nimport { useAudioModeManager } from 'state/user/hooks'\r\nimport useDebounce from 'hooks/useDebounce'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport { useAllTokens, useToken, useIsUserAddedToken, useFoundOnInactiveList } from '../../hooks/Tokens'\r\nimport { isAddress } from '../../utils'\r\nimport Column, { AutoColumn } from '../Layout/Column'\r\nimport Row from '../Layout/Row'\r\nimport CommonBases from './CommonBases'\r\nimport CurrencyList from './CurrencyList'\r\nimport { filterTokens, useSortedTokensByQuery } from './filtering'\r\nimport useTokenComparator from './sorting'\r\n\r\nimport ImportRow from './ImportRow'\r\n\r\ninterface CurrencySearchProps {\r\n  selectedCurrency?: Currency | null\r\n  onCurrencySelect: (currency: Currency) => void\r\n  otherSelectedCurrency?: Currency | null\r\n  showCommonBases?: boolean\r\n  showImportView: () => void\r\n  setImportToken: (token: Token) => void\r\n}\r\n\r\nconst swapSound = new Audio('swap.mp3')\r\n\r\nfunction CurrencySearch({\r\n  selectedCurrency,\r\n  onCurrencySelect,\r\n  otherSelectedCurrency,\r\n  showCommonBases,\r\n  showImportView,\r\n  setImportToken,\r\n}: CurrencySearchProps) {\r\n  const { t } = useTranslation()\r\n  const { chainId } = useActiveWeb3React()\r\n\r\n  // refs for fixed size lists\r\n  const fixedList = useRef<FixedSizeList>()\r\n\r\n  const [searchQuery, setSearchQuery] = useState<string>('')\r\n  const debouncedQuery = useDebounce(searchQuery, 200)\r\n\r\n  const [invertSearchOrder] = useState<boolean>(false)\r\n\r\n  const allTokens = useAllTokens()\r\n\r\n  // if they input an address, use it\r\n  const searchToken = useToken(debouncedQuery)\r\n  const searchTokenIsAdded = useIsUserAddedToken(searchToken)\r\n\r\n  const [audioPlay] = useAudioModeManager()\r\n\r\n  const showETH: boolean = useMemo(() => {\r\n    const s = debouncedQuery.toLowerCase().trim()\r\n    return s === '' || s === 'b' || s === 'bn' || s === 'bnb'\r\n  }, [debouncedQuery])\r\n\r\n  const tokenComparator = useTokenComparator(invertSearchOrder)\r\n\r\n  const filteredTokens: Token[] = useMemo(() => {\r\n    return filterTokens(Object.values(allTokens), debouncedQuery)\r\n  }, [allTokens, debouncedQuery])\r\n\r\n  const sortedTokens: Token[] = useMemo(() => {\r\n    return filteredTokens.sort(tokenComparator)\r\n  }, [filteredTokens, tokenComparator])\r\n\r\n  const filteredSortedTokens = useSortedTokensByQuery(sortedTokens, debouncedQuery)\r\n\r\n  const handleCurrencySelect = useCallback(\r\n    (currency: Currency) => {\r\n      onCurrencySelect(currency)\r\n      if (audioPlay) {\r\n        swapSound.play()\r\n      }\r\n    },\r\n    [audioPlay, onCurrencySelect],\r\n  )\r\n\r\n  // manage focus on modal show\r\n  const inputRef = useRef<HTMLInputElement>()\r\n\r\n  useEffect(() => {\r\n    inputRef.current.focus()\r\n  }, [])\r\n\r\n  const handleInput = useCallback((event) => {\r\n    const input = event.target.value\r\n    const checksummedInput = isAddress(input)\r\n    setSearchQuery(checksummedInput || input)\r\n    fixedList.current?.scrollTo(0)\r\n  }, [])\r\n\r\n  const handleEnter = useCallback(\r\n    (e: KeyboardEvent<HTMLInputElement>) => {\r\n      if (e.key === 'Enter') {\r\n        const s = debouncedQuery.toLowerCase().trim()\r\n        if (s === 'bnb') {\r\n          handleCurrencySelect(ETHER)\r\n        } else if (filteredSortedTokens.length > 0) {\r\n          if (\r\n            filteredSortedTokens[0].symbol?.toLowerCase() === debouncedQuery.trim().toLowerCase() ||\r\n            filteredSortedTokens.length === 1\r\n          ) {\r\n            handleCurrencySelect(filteredSortedTokens[0])\r\n          }\r\n        }\r\n      }\r\n    },\r\n    [filteredSortedTokens, handleCurrencySelect, debouncedQuery],\r\n  )\r\n\r\n  // if no results on main list, show option to expand into inactive\r\n  const inactiveTokens = useFoundOnInactiveList(debouncedQuery)\r\n  const filteredInactiveTokens: Token[] = useSortedTokensByQuery(inactiveTokens, debouncedQuery)\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <AutoColumn gap=\"16px\">\r\n          <Row>\r\n            <Input\r\n              id=\"token-search-input\"\r\n              placeholder={t('Search name or paste address')}\r\n              scale=\"lg\"\r\n              autoComplete=\"off\"\r\n              value={searchQuery}\r\n              ref={inputRef as RefObject<HTMLInputElement>}\r\n              onChange={handleInput}\r\n              onKeyDown={handleEnter}\r\n            />\r\n          </Row>\r\n          {showCommonBases && (\r\n            <CommonBases chainId={chainId} onSelect={handleCurrencySelect} selectedCurrency={selectedCurrency} />\r\n          )}\r\n        </AutoColumn>\r\n        {searchToken && !searchTokenIsAdded ? (\r\n          <Column style={{ padding: '20px 0', height: '100%' }}>\r\n            <ImportRow token={searchToken} showImportView={showImportView} setImportToken={setImportToken} />\r\n          </Column>\r\n        ) : filteredSortedTokens?.length > 0 || filteredInactiveTokens?.length > 0 ? (\r\n          <Box margin=\"24px -24px\">\r\n            <CurrencyList\r\n              height={390}\r\n              showETH={showETH}\r\n              currencies={\r\n                filteredInactiveTokens ? filteredSortedTokens.concat(filteredInactiveTokens) : filteredSortedTokens\r\n              }\r\n              breakIndex={inactiveTokens && filteredSortedTokens ? filteredSortedTokens.length : undefined}\r\n              onCurrencySelect={handleCurrencySelect}\r\n              otherCurrency={otherSelectedCurrency}\r\n              selectedCurrency={selectedCurrency}\r\n              fixedListRef={fixedList}\r\n              showImportView={showImportView}\r\n              setImportToken={setImportToken}\r\n            />\r\n          </Box>\r\n        ) : (\r\n          <Column style={{ padding: '20px', height: '100%' }}>\r\n            <Text color=\"textSubtle\" textAlign=\"center\" mb=\"20px\">\r\n              {t('No results found.')}\r\n            </Text>\r\n          </Column>\r\n        )}\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CurrencySearch\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}