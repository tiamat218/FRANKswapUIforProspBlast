{"ast":null,"code":"import { EN } from 'config/localization/languages';\nconst publicUrl = process.env.PUBLIC_URL;\nexport const LS_KEY = 'pancakeswap_language';\nexport const fetchLocale = async locale => {\n  const response = await fetch(`${publicUrl}/locales/${locale}.json`);\n  const data = await response.json();\n  return data;\n};\nexport const getLanguageCodeFromLS = () => {\n  try {\n    const codeFromStorage = localStorage.getItem(LS_KEY);\n    return codeFromStorage || EN.locale;\n  } catch {\n    return EN.locale;\n  }\n};","map":{"version":3,"names":["EN","publicUrl","process","env","PUBLIC_URL","LS_KEY","fetchLocale","locale","response","fetch","data","json","getLanguageCodeFromLS","codeFromStorage","localStorage","getItem"],"sources":["C:/Users/frkul/Documents/swapUI_pancake-frontend/src/contexts/Localization/helpers.ts"],"sourcesContent":["import { EN } from 'config/localization/languages'\r\n\r\nconst publicUrl = process.env.PUBLIC_URL\r\n\r\nexport const LS_KEY = 'pancakeswap_language'\r\n\r\nexport const fetchLocale = async (locale) => {\r\n  const response = await fetch(`${publicUrl}/locales/${locale}.json`)\r\n  const data = await response.json()\r\n  return data\r\n}\r\n\r\nexport const getLanguageCodeFromLS = () => {\r\n  try {\r\n    const codeFromStorage = localStorage.getItem(LS_KEY)\r\n\r\n    return codeFromStorage || EN.locale\r\n  } catch {\r\n    return EN.locale\r\n  }\r\n}\r\n"],"mappings":"AAAA,SAASA,EAAE,QAAQ,+BAA+B;AAElD,MAAMC,SAAS,GAAGC,OAAO,CAACC,GAAG,CAACC,UAAU;AAExC,OAAO,MAAMC,MAAM,GAAG,sBAAsB;AAE5C,OAAO,MAAMC,WAAW,GAAG,MAAOC,MAAM,IAAK;EAC3C,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGR,SAAS,YAAYM,MAAM,OAAO,CAAC;EACnE,MAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;EAClC,OAAOD,IAAI;AACb,CAAC;AAED,OAAO,MAAME,qBAAqB,GAAGA,CAAA,KAAM;EACzC,IAAI;IACF,MAAMC,eAAe,GAAGC,YAAY,CAACC,OAAO,CAACV,MAAM,CAAC;IAEpD,OAAOQ,eAAe,IAAIb,EAAE,CAACO,MAAM;EACrC,CAAC,CAAC,MAAM;IACN,OAAOP,EAAE,CAACO,MAAM;EAClB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}