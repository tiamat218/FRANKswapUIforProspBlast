{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar extract_files_1 = require(\"extract-files\");\nvar form_data_1 = __importDefault(require(\"form-data\"));\n/**\n * Duck type if NodeJS stream\n * https://github.com/sindresorhus/is-stream/blob/3750505b0727f6df54324784fe369365ef78841e/index.js#L3\n */\nvar isExtractableFileEnhanced = function (value) {\n  return extract_files_1.isExtractableFile(value) || value !== null && typeof value === 'object' && typeof value.pipe === 'function';\n};\n/**\n * Returns Multipart Form if body contains files\n * (https://github.com/jaydenseric/graphql-multipart-request-spec)\n * Otherwise returns JSON\n */\nfunction createRequestBody(query, variables) {\n  var _a = extract_files_1.extractFiles({\n      query: query,\n      variables: variables\n    }, '', isExtractableFileEnhanced),\n    clone = _a.clone,\n    files = _a.files;\n  if (files.size === 0) {\n    return JSON.stringify(clone);\n  }\n  var Form = typeof FormData === 'undefined' ? form_data_1.default : FormData;\n  var form = new Form();\n  form.append('operations', JSON.stringify(clone));\n  var map = {};\n  var i = 0;\n  files.forEach(function (paths) {\n    map[++i] = paths;\n  });\n  form.append('map', JSON.stringify(map));\n  i = 0;\n  files.forEach(function (paths, file) {\n    form.append(\"\" + ++i, file);\n  });\n  return form;\n}\nexports.default = createRequestBody;","map":{"version":3,"names":["extract_files_1","require","form_data_1","__importDefault","isExtractableFileEnhanced","value","isExtractableFile","pipe","createRequestBody","query","variables","_a","extractFiles","clone","files","size","JSON","stringify","Form","FormData","default","form","append","map","i","forEach","paths","file","exports"],"sources":["../src/createRequestBody.ts"],"sourcesContent":[null],"mappings":";;;;;;;;;;AAAA,IAAAA,eAAA,GAAAC,OAAA;AACA,IAAAC,WAAA,GAAAC,eAAA,CAAAF,OAAA;AAIA;;;;AAIA,IAAMG,yBAAyB,GAAG,SAAAA,CAACC,KAAU;EAC3C,OAAAL,eAAA,CAAAM,iBAAiB,CAACD,KAAK,CAAC,IACvBA,KAAK,KAAK,IAAI,IAAI,OAAOA,KAAK,KAAK,QAAQ,IAAI,OAAOA,KAAK,CAACE,IAAI,KAAK,UAAW;AADjF,CACiF;AAEnF;;;;;AAKA,SAAwBC,iBAAiBA,CAACC,KAAa,EAAEC,SAAqB;EACtE,IAAAC,EAAA,GAAmBX,eAAA,CAAAY,YAAY,CAAC;MAAEH,KAAK,EAAAA,KAAA;MAAEC,SAAS,EAAAA;IAAA,CAAE,EAAE,EAAE,EAAEN,yBAAyB,CAAC;IAAlFS,KAAK,GAAAF,EAAA,CAAAE,KAAA;IAAEC,KAAK,GAAAH,EAAA,CAAAG,KAAsE;EAE1F,IAAIA,KAAK,CAACC,IAAI,KAAK,CAAC,EAAE;IACpB,OAAOC,IAAI,CAACC,SAAS,CAACJ,KAAK,CAAC;;EAG9B,IAAMK,IAAI,GAAG,OAAOC,QAAQ,KAAK,WAAW,GAAGjB,WAAA,CAAAkB,OAAY,GAAGD,QAAQ;EAEtE,IAAME,IAAI,GAAG,IAAIH,IAAI,EAAE;EAEvBG,IAAI,CAACC,MAAM,CAAC,YAAY,EAAEN,IAAI,CAACC,SAAS,CAACJ,KAAK,CAAC,CAAC;EAEhD,IAAMU,GAAG,GAAgC,EAAE;EAC3C,IAAIC,CAAC,GAAG,CAAC;EACTV,KAAK,CAACW,OAAO,CAAC,UAACC,KAAK;IAClBH,GAAG,CAAC,EAAEC,CAAC,CAAC,GAAGE,KAAK;EAClB,CAAC,CAAC;EACFL,IAAI,CAACC,MAAM,CAAC,KAAK,EAAEN,IAAI,CAACC,SAAS,CAACM,GAAG,CAAC,CAAC;EAEvCC,CAAC,GAAG,CAAC;EACLV,KAAK,CAACW,OAAO,CAAC,UAACC,KAAK,EAAEC,IAAI;IACxBN,IAAI,CAACC,MAAM,CAAC,KAAG,EAAEE,CAAG,EAAEG,IAAW,CAAC;EACpC,CAAC,CAAC;EAEF,OAAON,IAAgB;AACzB;AA1BAO,OAAA,CAAAR,OAAA,GAAAZ,iBAAA","ignoreList":[]},"metadata":{},"sourceType":"script"}