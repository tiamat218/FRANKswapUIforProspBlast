{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Devrim\\\\Documents\\\\FRANKswapUIforProspBlast\\\\src\\\\views\\\\Farms\\\\components\\\\WithdrawModal.tsx\",\n  _s = $RefreshSig$();\nimport BigNumber from 'bignumber.js';\nimport React, { useCallback, useMemo, useState } from 'react';\nimport { Button, Modal } from '@pancakeswap/uikit';\nimport { ModalActions, ModalInput } from 'components/Modal';\nimport { useTranslation } from 'contexts/Localization';\nimport { getFullDisplayBalance } from 'utils/formatBalance';\nimport useToast from 'hooks/useToast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WithdrawModal = ({\n  onConfirm,\n  onDismiss,\n  max,\n  tokenName = ''\n}) => {\n  _s();\n  const [val, setVal] = useState('');\n  const {\n    toastSuccess,\n    toastError\n  } = useToast();\n  const [pendingTx, setPendingTx] = useState(false);\n  const {\n    t\n  } = useTranslation();\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max);\n  }, [max]);\n  const valNumber = new BigNumber(val);\n  const fullBalanceNumber = new BigNumber(fullBalance);\n  const handleChange = useCallback(e => {\n    if (e.currentTarget.validity.valid) {\n      setVal(e.currentTarget.value.replace(/,/g, '.'));\n    }\n  }, [setVal]);\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance);\n  }, [fullBalance, setVal]);\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    title: t('Unstake LP tokens'),\n    onDismiss: onDismiss,\n    children: [/*#__PURE__*/_jsxDEV(ModalInput, {\n      onSelectMax: handleSelectMax,\n      onChange: handleChange,\n      value: val,\n      max: fullBalance,\n      symbol: tokenName,\n      inputTitle: t('Unstake')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ModalActions, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"secondary\",\n        onClick: onDismiss,\n        width: \"100%\",\n        disabled: pendingTx,\n        children: t('Cancel')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        disabled: pendingTx || !valNumber.isFinite() || valNumber.eq(0) || valNumber.gt(fullBalanceNumber),\n        onClick: async () => {\n          setPendingTx(true);\n          try {\n            await onConfirm(val);\n            toastSuccess(t('Unstaked!'), t('Your earnings have also been harvested to your wallet'));\n            onDismiss();\n          } catch (e) {\n            toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'));\n            console.error(e);\n          } finally {\n            setPendingTx(false);\n          }\n        },\n        width: \"100%\",\n        children: pendingTx ? t('Confirming') : t('Confirm')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(WithdrawModal, \"dQcHiMm6teX+aw+Vmvfdo/s6wck=\", false, function () {\n  return [useToast, useTranslation];\n});\n_c = WithdrawModal;\nexport default WithdrawModal;\nvar _c;\n$RefreshReg$(_c, \"WithdrawModal\");","map":{"version":3,"names":["BigNumber","React","useCallback","useMemo","useState","Button","Modal","ModalActions","ModalInput","useTranslation","getFullDisplayBalance","useToast","jsxDEV","_jsxDEV","WithdrawModal","onConfirm","onDismiss","max","tokenName","_s","val","setVal","toastSuccess","toastError","pendingTx","setPendingTx","t","fullBalance","valNumber","fullBalanceNumber","handleChange","e","currentTarget","validity","valid","value","replace","handleSelectMax","title","children","onSelectMax","onChange","symbol","inputTitle","fileName","_jsxFileName","lineNumber","columnNumber","variant","onClick","width","disabled","isFinite","eq","gt","console","error","_c","$RefreshReg$"],"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/views/Farms/components/WithdrawModal.tsx"],"sourcesContent":["import BigNumber from 'bignumber.js'\r\nimport React, { useCallback, useMemo, useState } from 'react'\r\nimport { Button, Modal } from '@pancakeswap/uikit'\r\nimport { ModalActions, ModalInput } from 'components/Modal'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { getFullDisplayBalance } from 'utils/formatBalance'\r\nimport useToast from 'hooks/useToast'\r\n\r\ninterface WithdrawModalProps {\r\n  max: BigNumber\r\n  onConfirm: (amount: string) => void\r\n  onDismiss?: () => void\r\n  tokenName?: string\r\n}\r\n\r\nconst WithdrawModal: React.FC<WithdrawModalProps> = ({ onConfirm, onDismiss, max, tokenName = '' }) => {\r\n  const [val, setVal] = useState('')\r\n  const { toastSuccess, toastError } = useToast()\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const { t } = useTranslation()\r\n  const fullBalance = useMemo(() => {\r\n    return getFullDisplayBalance(max)\r\n  }, [max])\r\n\r\n  const valNumber = new BigNumber(val)\r\n  const fullBalanceNumber = new BigNumber(fullBalance)\r\n\r\n  const handleChange = useCallback(\r\n    (e: React.FormEvent<HTMLInputElement>) => {\r\n      if (e.currentTarget.validity.valid) {\r\n        setVal(e.currentTarget.value.replace(/,/g, '.'))\r\n      }\r\n    },\r\n    [setVal],\r\n  )\r\n\r\n  const handleSelectMax = useCallback(() => {\r\n    setVal(fullBalance)\r\n  }, [fullBalance, setVal])\r\n\r\n  return (\r\n    <Modal title={t('Unstake LP tokens')} onDismiss={onDismiss}>\r\n      <ModalInput\r\n        onSelectMax={handleSelectMax}\r\n        onChange={handleChange}\r\n        value={val}\r\n        max={fullBalance}\r\n        symbol={tokenName}\r\n        inputTitle={t('Unstake')}\r\n      />\r\n      <ModalActions>\r\n        <Button variant=\"secondary\" onClick={onDismiss} width=\"100%\" disabled={pendingTx}>\r\n          {t('Cancel')}\r\n        </Button>\r\n        <Button\r\n          disabled={pendingTx || !valNumber.isFinite() || valNumber.eq(0) || valNumber.gt(fullBalanceNumber)}\r\n          onClick={async () => {\r\n            setPendingTx(true)\r\n            try {\r\n              await onConfirm(val)\r\n              toastSuccess(t('Unstaked!'), t('Your earnings have also been harvested to your wallet'))\r\n              onDismiss()\r\n            } catch (e) {\r\n              toastError(\r\n                t('Error'),\r\n                t('Please try again. Confirm the transaction and make sure you are paying enough gas!'),\r\n              )\r\n              console.error(e)\r\n            } finally {\r\n              setPendingTx(false)\r\n            }\r\n          }}\r\n          width=\"100%\"\r\n        >\r\n          {pendingTx ? t('Confirming') : t('Confirm')}\r\n        </Button>\r\n      </ModalActions>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default WithdrawModal\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}