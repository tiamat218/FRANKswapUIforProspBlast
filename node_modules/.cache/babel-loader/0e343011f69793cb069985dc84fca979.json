{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Devrim\\\\Documents\\\\FRANKswapUIforProspBlast\\\\src\\\\views\\\\Predictions\\\\components\\\\MobileMenu.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport styled from 'styled-components';\nimport { useWeb3React } from '@web3-react/core';\nimport { ArrowBackIcon, ArrowForwardIcon, ButtonMenu, ButtonMenuItem, Cards, ChartIcon, HistoryIcon, IconButton } from '@pancakeswap/uikit';\nimport { useAppDispatch } from 'state';\nimport { PredictionStatus } from 'state/types';\nimport { useGetPredictionsStatus, useIsChartPaneOpen, useIsHistoryPaneOpen } from 'state/hooks';\nimport { setChartPaneState, setHistoryPaneState } from 'state/predictions';\nimport useSwiper from '../hooks/useSwiper';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ButtonNav = styled.div`\n  flex: none;\n`;\n_c = ButtonNav;\nconst TabNav = styled.div`\n  flex: 1;\n  text-align: center;\n`;\n_c2 = TabNav;\nconst StyledMobileMenu = styled.div`\n  align-items: center;\n  background-color: ${({\n  theme\n}) => theme.card.background};\n  display: flex;\n  flex: none;\n  height: 64px;\n\n  ${({\n  theme\n}) => theme.mediaQueries.lg} {\n    display: none;\n  }\n`;\n_c3 = StyledMobileMenu;\nconst getActiveIndex = (isHistoryOpen, isChartOpen) => {\n  if (isHistoryOpen) {\n    return 2;\n  }\n  if (isChartOpen) {\n    return 1;\n  }\n  return 0;\n};\nconst MobileMenu = () => {\n  _s();\n  const {\n    swiper\n  } = useSwiper();\n  const isHistoryOpen = useIsHistoryPaneOpen();\n  const isChartOpen = useIsChartPaneOpen();\n  const status = useGetPredictionsStatus();\n  const activeIndex = getActiveIndex(isHistoryOpen, isChartOpen);\n  const dispatch = useAppDispatch();\n  const {\n    account\n  } = useWeb3React();\n  const handleItemClick = index => {\n    switch (index) {\n      case 2:\n        dispatch(setHistoryPaneState(true));\n        break;\n      case 1:\n        dispatch(setChartPaneState(true));\n        dispatch(setHistoryPaneState(false));\n        break;\n      case 0:\n      default:\n        dispatch(setHistoryPaneState(false));\n        dispatch(setChartPaneState(false));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(StyledMobileMenu, {\n    children: [/*#__PURE__*/_jsxDEV(ButtonNav, {\n      children: /*#__PURE__*/_jsxDEV(IconButton, {\n        variant: \"text\",\n        onClick: () => swiper.slidePrev(),\n        disabled: status !== PredictionStatus.LIVE,\n        children: /*#__PURE__*/_jsxDEV(ArrowBackIcon, {\n          width: \"24px\",\n          color: \"primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TabNav, {\n      children: /*#__PURE__*/_jsxDEV(ButtonMenu, {\n        activeIndex: activeIndex,\n        scale: \"sm\",\n        variant: \"subtle\",\n        onItemClick: handleItemClick,\n        children: [/*#__PURE__*/_jsxDEV(ButtonMenuItem, {\n          children: /*#__PURE__*/_jsxDEV(Cards, {\n            color: \"currentColor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ButtonMenuItem, {\n          children: /*#__PURE__*/_jsxDEV(ChartIcon, {\n            color: \"currentColor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ButtonMenuItem, {\n          disabled: !account,\n          children: /*#__PURE__*/_jsxDEV(HistoryIcon, {\n            color: \"currentColor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ButtonNav, {\n      children: /*#__PURE__*/_jsxDEV(IconButton, {\n        variant: \"text\",\n        onClick: () => swiper.slideNext(),\n        disabled: status !== PredictionStatus.LIVE,\n        children: /*#__PURE__*/_jsxDEV(ArrowForwardIcon, {\n          width: \"24px\",\n          color: \"primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n_s(MobileMenu, \"dcBqUJMKEaZBfhgYrrcvkgd8yWE=\", false, function () {\n  return [useSwiper, useIsHistoryPaneOpen, useIsChartPaneOpen, useGetPredictionsStatus, useAppDispatch, useWeb3React];\n});\n_c4 = MobileMenu;\nexport default MobileMenu;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"ButtonNav\");\n$RefreshReg$(_c2, \"TabNav\");\n$RefreshReg$(_c3, \"StyledMobileMenu\");\n$RefreshReg$(_c4, \"MobileMenu\");","map":{"version":3,"names":["React","styled","useWeb3React","ArrowBackIcon","ArrowForwardIcon","ButtonMenu","ButtonMenuItem","Cards","ChartIcon","HistoryIcon","IconButton","useAppDispatch","PredictionStatus","useGetPredictionsStatus","useIsChartPaneOpen","useIsHistoryPaneOpen","setChartPaneState","setHistoryPaneState","useSwiper","jsxDEV","_jsxDEV","ButtonNav","div","_c","TabNav","_c2","StyledMobileMenu","theme","card","background","mediaQueries","lg","_c3","getActiveIndex","isHistoryOpen","isChartOpen","MobileMenu","_s","swiper","status","activeIndex","dispatch","account","handleItemClick","index","children","variant","onClick","slidePrev","disabled","LIVE","width","color","fileName","_jsxFileName","lineNumber","columnNumber","scale","onItemClick","slideNext","_c4","$RefreshReg$"],"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/views/Predictions/components/MobileMenu.tsx"],"sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport {\r\n  ArrowBackIcon,\r\n  ArrowForwardIcon,\r\n  ButtonMenu,\r\n  ButtonMenuItem,\r\n  Cards,\r\n  ChartIcon,\r\n  HistoryIcon,\r\n  IconButton,\r\n} from '@pancakeswap/uikit'\r\nimport { useAppDispatch } from 'state'\r\nimport { PredictionStatus } from 'state/types'\r\nimport { useGetPredictionsStatus, useIsChartPaneOpen, useIsHistoryPaneOpen } from 'state/hooks'\r\nimport { setChartPaneState, setHistoryPaneState } from 'state/predictions'\r\nimport useSwiper from '../hooks/useSwiper'\r\n\r\nconst ButtonNav = styled.div`\r\n  flex: none;\r\n`\r\n\r\nconst TabNav = styled.div`\r\n  flex: 1;\r\n  text-align: center;\r\n`\r\n\r\nconst StyledMobileMenu = styled.div`\r\n  align-items: center;\r\n  background-color: ${({ theme }) => theme.card.background};\r\n  display: flex;\r\n  flex: none;\r\n  height: 64px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    display: none;\r\n  }\r\n`\r\n\r\nconst getActiveIndex = (isHistoryOpen: boolean, isChartOpen: boolean) => {\r\n  if (isHistoryOpen) {\r\n    return 2\r\n  }\r\n\r\n  if (isChartOpen) {\r\n    return 1\r\n  }\r\n\r\n  return 0\r\n}\r\n\r\nconst MobileMenu = () => {\r\n  const { swiper } = useSwiper()\r\n  const isHistoryOpen = useIsHistoryPaneOpen()\r\n  const isChartOpen = useIsChartPaneOpen()\r\n  const status = useGetPredictionsStatus()\r\n  const activeIndex = getActiveIndex(isHistoryOpen, isChartOpen)\r\n  const dispatch = useAppDispatch()\r\n  const { account } = useWeb3React()\r\n\r\n  const handleItemClick = (index: number) => {\r\n    switch (index) {\r\n      case 2:\r\n        dispatch(setHistoryPaneState(true))\r\n        break\r\n      case 1:\r\n        dispatch(setChartPaneState(true))\r\n        dispatch(setHistoryPaneState(false))\r\n        break\r\n      case 0:\r\n      default:\r\n        dispatch(setHistoryPaneState(false))\r\n        dispatch(setChartPaneState(false))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <StyledMobileMenu>\r\n      <ButtonNav>\r\n        <IconButton variant=\"text\" onClick={() => swiper.slidePrev()} disabled={status !== PredictionStatus.LIVE}>\r\n          <ArrowBackIcon width=\"24px\" color=\"primary\" />\r\n        </IconButton>\r\n      </ButtonNav>\r\n      <TabNav>\r\n        <ButtonMenu activeIndex={activeIndex} scale=\"sm\" variant=\"subtle\" onItemClick={handleItemClick}>\r\n          <ButtonMenuItem>\r\n            <Cards color=\"currentColor\" />\r\n          </ButtonMenuItem>\r\n          <ButtonMenuItem>\r\n            <ChartIcon color=\"currentColor\" />\r\n          </ButtonMenuItem>\r\n          <ButtonMenuItem disabled={!account}>\r\n            <HistoryIcon color=\"currentColor\" />\r\n          </ButtonMenuItem>\r\n        </ButtonMenu>\r\n      </TabNav>\r\n      <ButtonNav>\r\n        <IconButton variant=\"text\" onClick={() => swiper.slideNext()} disabled={status !== PredictionStatus.LIVE}>\r\n          <ArrowForwardIcon width=\"24px\" color=\"primary\" />\r\n        </IconButton>\r\n      </ButtonNav>\r\n    </StyledMobileMenu>\r\n  )\r\n}\r\n\r\nexport default MobileMenu\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}