{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Devrim\\\\Documents\\\\FRANKswapUIforProspBlast\\\\src\\\\views\\\\TradingCompetition\\\\components\\\\PrizesInfo\\\\PrizesGrid\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { BlockIcon, Box, CheckmarkCircleIcon, Flex, MedalBronzeIcon, MedalGoldIcon, MedalPurpleIcon, MedalSilverIcon, MedalTealIcon, CrownIcon, Tab, TabMenu, Text, TeamPlayerIcon, TrophyGoldIcon } from '@pancakeswap/uikit';\nimport { useTranslation } from 'contexts/Localization';\nimport easterPrizes, { Tiers } from 'config/constants/trading-competition/easter';\nimport { Td, BoldTd, StyledPrizeTable } from '../../StyledPrizeTable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst COLOR_GOLD = '#FFBF33';\nconst COLOR_SILVER = '#C1C1C1';\nconst COLOR_BRONZE = '#E79559';\nconst COLOR_PURPLE = '#A57CFD';\nconst COLOR_TEAL = '#4CD2DD';\nconst tierStyleMap = {\n  [Tiers.GOLD]: {\n    icon: MedalGoldIcon,\n    label: {\n      text: 'Gold'\n    },\n    color: COLOR_GOLD\n  },\n  [Tiers.SILVER]: {\n    icon: MedalSilverIcon,\n    label: {\n      text: 'Silver'\n    },\n    color: COLOR_SILVER\n  },\n  [Tiers.BRONZE]: {\n    icon: MedalBronzeIcon,\n    label: {\n      text: 'Bronze'\n    },\n    color: COLOR_BRONZE\n  },\n  [Tiers.SILVER]: {\n    icon: MedalSilverIcon,\n    label: {\n      text: 'Silver'\n    },\n    color: COLOR_SILVER\n  },\n  [Tiers.PURPLE]: {\n    icon: MedalPurpleIcon,\n    label: {\n      text: 'Purple'\n    },\n    color: COLOR_PURPLE\n  },\n  [Tiers.TEAL]: {\n    icon: MedalTealIcon,\n    label: {\n      text: 'Teal'\n    },\n    color: COLOR_TEAL\n  }\n};\n\nconst getTotalAchievementPoints = achievements => {\n  return Object.values(achievements).reduce((accum, achievement) => {\n    return achievement ? accum + achievement : accum;\n  }, 0);\n};\n\nconst PrizesGrid = () => {\n  _s();\n\n  const [tab, setTab] = useState(0);\n  const {\n    t\n  } = useTranslation();\n  const rows = easterPrizes[tab + 1];\n\n  const handleItemClick = index => setTab(index);\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    pt: \"24px\",\n    children: [/*#__PURE__*/_jsxDEV(TabMenu, {\n      activeIndex: tab,\n      onItemClick: handleItemClick,\n      children: Object.keys(easterPrizes).map(team => {\n        return /*#__PURE__*/_jsxDEV(Tab, {\n          children: t('#%team% Team', {\n            team\n          })\n        }, team, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 18\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      minWidth: \"288px\",\n      overflowX: \"auto\",\n      maxWidth: \"100%\",\n      children: /*#__PURE__*/_jsxDEV(StyledPrizeTable, {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: t('Rank in team')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: t('Tier')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: t('CAKE Prizes (Split)')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: t('Achievements')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: t('NFT')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: rows.map(row => {\n            const {\n              icon: Icon,\n              label,\n              color\n            } = tierStyleMap[row.tier];\n            const {\n              champion,\n              teamPlayer\n            } = row.achievements;\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(BoldTd, {\n                children: row.rank\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Td, {\n                children: [/*#__PURE__*/_jsxDEV(Icon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Text, {\n                  color: color,\n                  fontSize: \"12px\",\n                  bold: true,\n                  textTransform: \"uppercase\",\n                  children: t(label.text)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 115,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(BoldTd, {\n                children: `$${row.cakePrizeInUsd.toLocaleString(undefined, {\n                  minimumFractionDigits: 0,\n                  maximumFractionDigits: 0\n                })}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Td, {\n                children: /*#__PURE__*/_jsxDEV(Flex, {\n                  alignItems: \"center\",\n                  flexWrap: \"wrap\",\n                  justifyContent: \"center\",\n                  width: \"100%\",\n                  children: [champion && /*#__PURE__*/_jsxDEV(CrownIcon, {\n                    mr: [0, '4px']\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 127,\n                    columnNumber: 36\n                  }, this), teamPlayer && /*#__PURE__*/_jsxDEV(TeamPlayerIcon, {\n                    mr: [0, '4px']\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 128,\n                    columnNumber: 38\n                  }, this), /*#__PURE__*/_jsxDEV(TrophyGoldIcon, {\n                    mr: [0, '4px']\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 129,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Text, {\n                    fontSize: \"12px\",\n                    color: \"textSubtle\",\n                    children: `+${getTotalAchievementPoints(row.achievements).toLocaleString(undefined, {\n                      minimumFractionDigits: 0,\n                      maximumFractionDigits: 0\n                    })}`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 130,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Td, {\n                children: row.hasNft ? /*#__PURE__*/_jsxDEV(CheckmarkCircleIcon, {\n                  color: \"success\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 37\n                }, this) : /*#__PURE__*/_jsxDEV(BlockIcon, {\n                  color: \"textDisabled\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 79\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 19\n              }, this)]\n            }, row.rank, true, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PrizesGrid, \"FeBpDV/tJIGlYTlQVJcRc8luD1o=\", false, function () {\n  return [useTranslation];\n});\n\n_c = PrizesGrid;\nexport default PrizesGrid;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrizesGrid\");","map":{"version":3,"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/views/TradingCompetition/components/PrizesInfo/PrizesGrid/index.tsx"],"names":["React","useState","BlockIcon","Box","CheckmarkCircleIcon","Flex","MedalBronzeIcon","MedalGoldIcon","MedalPurpleIcon","MedalSilverIcon","MedalTealIcon","CrownIcon","Tab","TabMenu","Text","TeamPlayerIcon","TrophyGoldIcon","useTranslation","easterPrizes","Tiers","Td","BoldTd","StyledPrizeTable","COLOR_GOLD","COLOR_SILVER","COLOR_BRONZE","COLOR_PURPLE","COLOR_TEAL","tierStyleMap","GOLD","icon","label","text","color","SILVER","BRONZE","PURPLE","TEAL","getTotalAchievementPoints","achievements","Object","values","reduce","accum","achievement","PrizesGrid","tab","setTab","t","rows","handleItemClick","index","keys","map","team","row","Icon","tier","champion","teamPlayer","rank","cakePrizeInUsd","toLocaleString","undefined","minimumFractionDigits","maximumFractionDigits","hasNft"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport {\r\n  BlockIcon,\r\n  Box,\r\n  CheckmarkCircleIcon,\r\n  Flex,\r\n  MedalBronzeIcon,\r\n  MedalGoldIcon,\r\n  MedalPurpleIcon,\r\n  MedalSilverIcon,\r\n  MedalTealIcon,\r\n  CrownIcon,\r\n  Tab,\r\n  TabMenu,\r\n  Text,\r\n  TeamPlayerIcon,\r\n  TrophyGoldIcon,\r\n} from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport easterPrizes, { Tiers, Rank } from 'config/constants/trading-competition/easter'\r\nimport { Td, BoldTd, StyledPrizeTable } from '../../StyledPrizeTable'\r\n\r\nconst COLOR_GOLD = '#FFBF33'\r\nconst COLOR_SILVER = '#C1C1C1'\r\nconst COLOR_BRONZE = '#E79559'\r\nconst COLOR_PURPLE = '#A57CFD'\r\nconst COLOR_TEAL = '#4CD2DD'\r\n\r\nconst tierStyleMap = {\r\n  [Tiers.GOLD]: {\r\n    icon: MedalGoldIcon,\r\n    label: {\r\n      text: 'Gold',\r\n    },\r\n    color: COLOR_GOLD,\r\n  },\r\n  [Tiers.SILVER]: {\r\n    icon: MedalSilverIcon,\r\n    label: {\r\n      text: 'Silver',\r\n    },\r\n    color: COLOR_SILVER,\r\n  },\r\n  [Tiers.BRONZE]: {\r\n    icon: MedalBronzeIcon,\r\n    label: {\r\n      text: 'Bronze',\r\n    },\r\n    color: COLOR_BRONZE,\r\n  },\r\n  [Tiers.SILVER]: {\r\n    icon: MedalSilverIcon,\r\n    label: {\r\n      text: 'Silver',\r\n    },\r\n    color: COLOR_SILVER,\r\n  },\r\n  [Tiers.PURPLE]: {\r\n    icon: MedalPurpleIcon,\r\n    label: {\r\n      text: 'Purple',\r\n    },\r\n    color: COLOR_PURPLE,\r\n  },\r\n  [Tiers.TEAL]: {\r\n    icon: MedalTealIcon,\r\n    label: {\r\n      text: 'Teal',\r\n    },\r\n    color: COLOR_TEAL,\r\n  },\r\n}\r\n\r\nconst getTotalAchievementPoints = (achievements: Rank['achievements']) => {\r\n  return Object.values(achievements).reduce((accum, achievement) => {\r\n    return achievement ? accum + achievement : accum\r\n  }, 0)\r\n}\r\n\r\nconst PrizesGrid = () => {\r\n  const [tab, setTab] = useState(0)\r\n  const { t } = useTranslation()\r\n  const rows = easterPrizes[tab + 1]\r\n\r\n  const handleItemClick = (index: number) => setTab(index)\r\n\r\n  return (\r\n    <Box pt=\"24px\">\r\n      <TabMenu activeIndex={tab} onItemClick={handleItemClick}>\r\n        {Object.keys(easterPrizes).map((team) => {\r\n          return <Tab key={team}>{t('#%team% Team', { team })}</Tab>\r\n        })}\r\n      </TabMenu>\r\n      <Box minWidth=\"288px\" overflowX=\"auto\" maxWidth=\"100%\">\r\n        <StyledPrizeTable>\r\n          <thead>\r\n            <tr>\r\n              <th>{t('Rank in team')}</th>\r\n              <th>{t('Tier')}</th>\r\n              <th>{t('CAKE Prizes (Split)')}</th>\r\n              <th>{t('Achievements')}</th>\r\n              <th>{t('NFT')}</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {rows.map((row) => {\r\n              const { icon: Icon, label, color } = tierStyleMap[row.tier]\r\n              const { champion, teamPlayer } = row.achievements\r\n\r\n              return (\r\n                <tr key={row.rank}>\r\n                  <BoldTd>{row.rank}</BoldTd>\r\n                  <Td>\r\n                    <Icon />\r\n                    <Text color={color} fontSize=\"12px\" bold textTransform=\"uppercase\">\r\n                      {t(label.text)}\r\n                    </Text>\r\n                  </Td>\r\n                  <BoldTd>\r\n                    {`$${row.cakePrizeInUsd.toLocaleString(undefined, {\r\n                      minimumFractionDigits: 0,\r\n                      maximumFractionDigits: 0,\r\n                    })}`}\r\n                  </BoldTd>\r\n                  <Td>\r\n                    <Flex alignItems=\"center\" flexWrap=\"wrap\" justifyContent=\"center\" width=\"100%\">\r\n                      {champion && <CrownIcon mr={[0, '4px']} />}\r\n                      {teamPlayer && <TeamPlayerIcon mr={[0, '4px']} />}\r\n                      <TrophyGoldIcon mr={[0, '4px']} />\r\n                      <Text fontSize=\"12px\" color=\"textSubtle\">\r\n                        {`+${getTotalAchievementPoints(row.achievements).toLocaleString(undefined, {\r\n                          minimumFractionDigits: 0,\r\n                          maximumFractionDigits: 0,\r\n                        })}`}\r\n                      </Text>\r\n                    </Flex>\r\n                  </Td>\r\n                  <Td>{row.hasNft ? <CheckmarkCircleIcon color=\"success\" /> : <BlockIcon color=\"textDisabled\" />}</Td>\r\n                </tr>\r\n              )\r\n            })}\r\n          </tbody>\r\n        </StyledPrizeTable>\r\n      </Box>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default PrizesGrid\r\n"]},"metadata":{},"sourceType":"module"}