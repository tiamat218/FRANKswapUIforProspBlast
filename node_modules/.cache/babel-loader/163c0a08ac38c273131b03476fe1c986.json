{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Devrim\\\\Documents\\\\FRANKswapUIforProspBlast\\\\src\\\\views\\\\TradingCompetition\\\\components\\\\ClaimModal\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { Modal, Button, Flex, AutoRenewIcon, Heading, Text, Image, CrownIcon, TrophyGoldIcon, TeamPlayerIcon } from '@pancakeswap/uikit';\nimport { useTranslation } from 'contexts/Localization';\nimport { useTradingCompetitionContract } from 'hooks/useContract';\nimport useToast from 'hooks/useToast';\nimport { useCompetitionCakeRewards, getRewardGroupAchievements } from '../../helpers';\nimport NftBunnies from '../../pngs/syrup-nft.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageWrapper = styled(Flex)`\n  justify-content: center;\n  width: 100%;\n  height: fit-content;\n  img {\n    border-radius: ${({\n  theme\n}) => theme.radii.default};\n  }\n`;\n_c = ImageWrapper;\n\nconst ClaimModal = ({\n  onDismiss,\n  onClaimSuccess,\n  userTradingInformation\n}) => {\n  _s();\n\n  const [isConfirming, setIsConfirming] = useState(false);\n  const tradingCompetitionContract = useTradingCompetitionContract();\n  const {\n    toastSuccess,\n    toastError\n  } = useToast();\n  const {\n    t\n  } = useTranslation();\n  const {\n    userRewardGroup,\n    userCakeRewards,\n    userPointReward,\n    canClaimNFT\n  } = userTradingInformation;\n  const {\n    cakeReward\n  } = useCompetitionCakeRewards(userCakeRewards);\n  const {\n    champion,\n    teamPlayer\n  } = getRewardGroupAchievements(userRewardGroup);\n\n  const handleClaimClick = async () => {\n    const tx = await tradingCompetitionContract.claimReward();\n    setIsConfirming(true);\n    const receipt = await tx.wait();\n\n    if (receipt.status) {\n      toastSuccess(t('You have claimed your rewards!'));\n      onDismiss();\n      onClaimSuccess();\n    } else {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'));\n      setIsConfirming(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    title: t('Collect Winnings'),\n    onDismiss: onDismiss,\n    children: /*#__PURE__*/_jsxDEV(Flex, {\n      width: \"100%\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      maxWidth: \"360px\",\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        color: \"secondary\",\n        bold: true,\n        fontSize: \"16px\",\n        children: [t('Congratulations! You won'), \":\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        mt: \"16px\",\n        alignItems: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(TrophyGoldIcon, {\n          mr: [0, '4px']\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), champion && /*#__PURE__*/_jsxDEV(CrownIcon, {\n          mr: [0, '4px']\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 24\n        }, this), teamPlayer && /*#__PURE__*/_jsxDEV(TeamPlayerIcon, {\n          mr: [0, '4px']\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          ml: ['4px', '8px'],\n          children: [\"+\", userPointReward, \" \", t('Points')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Heading, {\n        mt: \"16px\",\n        scale: \"md\",\n        mb: canClaimNFT ? '16px' : '0px',\n        children: [cakeReward.toFixed(2), \" CAKE\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), canClaimNFT ? /*#__PURE__*/_jsxDEV(Flex, {\n        alignItems: \"center\",\n        flexDirection: \"column\",\n        width: \"100%\",\n        children: [/*#__PURE__*/_jsxDEV(ImageWrapper, {\n          children: /*#__PURE__*/_jsxDEV(Image, {\n            src: NftBunnies,\n            width: 128,\n            height: 128\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          mt: \"8px\",\n          fontSize: \"16px\",\n          children: t('Collectible NFT')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this) : null, /*#__PURE__*/_jsxDEV(Button, {\n        mt: \"24px\",\n        width: \"100%\",\n        onClick: handleClaimClick,\n        disabled: isConfirming,\n        isLoading: isConfirming,\n        endIcon: isConfirming ? /*#__PURE__*/_jsxDEV(AutoRenewIcon, {\n          spin: true,\n          color: \"currentColor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 35\n        }, this) : null,\n        children: t('Confirm')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        mt: \"24px\",\n        fontSize: \"12px\",\n        color: \"textSubtle\",\n        textAlign: \"center\",\n        children: t('All prizes will be sent directly to your wallet and user account.')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ClaimModal, \"On5D8igbWvTlFQCRLR43FZ5lrlM=\", false, function () {\n  return [useTradingCompetitionContract, useToast, useTranslation, useCompetitionCakeRewards];\n});\n\n_c2 = ClaimModal;\nexport default ClaimModal;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ImageWrapper\");\n$RefreshReg$(_c2, \"ClaimModal\");","map":{"version":3,"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/views/TradingCompetition/components/ClaimModal/index.tsx"],"names":["React","useState","styled","Modal","Button","Flex","AutoRenewIcon","Heading","Text","Image","CrownIcon","TrophyGoldIcon","TeamPlayerIcon","useTranslation","useTradingCompetitionContract","useToast","useCompetitionCakeRewards","getRewardGroupAchievements","NftBunnies","ImageWrapper","theme","radii","default","ClaimModal","onDismiss","onClaimSuccess","userTradingInformation","isConfirming","setIsConfirming","tradingCompetitionContract","toastSuccess","toastError","t","userRewardGroup","userCakeRewards","userPointReward","canClaimNFT","cakeReward","champion","teamPlayer","handleClaimClick","tx","claimReward","receipt","wait","status","toFixed"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport {\r\n  Modal,\r\n  Button,\r\n  Flex,\r\n  AutoRenewIcon,\r\n  Heading,\r\n  Text,\r\n  Image,\r\n  CrownIcon,\r\n  TrophyGoldIcon,\r\n  TeamPlayerIcon,\r\n} from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useTradingCompetitionContract } from 'hooks/useContract'\r\nimport useToast from 'hooks/useToast'\r\nimport { useCompetitionCakeRewards, getRewardGroupAchievements } from '../../helpers'\r\nimport { CompetitionProps } from '../../types'\r\nimport NftBunnies from '../../pngs/syrup-nft.png'\r\n\r\nconst ImageWrapper = styled(Flex)`\r\n  justify-content: center;\r\n  width: 100%;\r\n  height: fit-content;\r\n  img {\r\n    border-radius: ${({ theme }) => theme.radii.default};\r\n  }\r\n`\r\n\r\nconst ClaimModal: React.FC<CompetitionProps> = ({ onDismiss, onClaimSuccess, userTradingInformation }) => {\r\n  const [isConfirming, setIsConfirming] = useState(false)\r\n  const tradingCompetitionContract = useTradingCompetitionContract()\r\n  const { toastSuccess, toastError } = useToast()\r\n  const { t } = useTranslation()\r\n\r\n  const { userRewardGroup, userCakeRewards, userPointReward, canClaimNFT } = userTradingInformation\r\n  const { cakeReward } = useCompetitionCakeRewards(userCakeRewards)\r\n  const { champion, teamPlayer } = getRewardGroupAchievements(userRewardGroup)\r\n\r\n  const handleClaimClick = async () => {\r\n    const tx = await tradingCompetitionContract.claimReward()\r\n    setIsConfirming(true)\r\n    const receipt = await tx.wait()\r\n    if (receipt.status) {\r\n      toastSuccess(t('You have claimed your rewards!'))\r\n      onDismiss()\r\n      onClaimSuccess()\r\n    } else {\r\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\r\n      setIsConfirming(false)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Modal title={t('Collect Winnings')} onDismiss={onDismiss}>\r\n      <Flex width=\"100%\" flexDirection=\"column\" alignItems=\"center\" justifyContent=\"center\" maxWidth=\"360px\">\r\n        <Text color=\"secondary\" bold fontSize=\"16px\">\r\n          {t('Congratulations! You won')}:\r\n        </Text>\r\n        <Flex mt=\"16px\" alignItems=\"center\">\r\n          {/* achievements */}\r\n          <TrophyGoldIcon mr={[0, '4px']} />\r\n          {champion && <CrownIcon mr={[0, '4px']} />}\r\n          {teamPlayer && <TeamPlayerIcon mr={[0, '4px']} />}\r\n          <Text ml={['4px', '8px']}>\r\n            +{userPointReward} {t('Points')}\r\n          </Text>\r\n        </Flex>\r\n        {/* cake */}\r\n        <Heading mt=\"16px\" scale=\"md\" mb={canClaimNFT ? '16px' : '0px'}>\r\n          {cakeReward.toFixed(2)} CAKE\r\n        </Heading>\r\n        {/* NFT */}\r\n        {canClaimNFT ? (\r\n          <Flex alignItems=\"center\" flexDirection=\"column\" width=\"100%\">\r\n            <ImageWrapper>\r\n              <Image src={NftBunnies} width={128} height={128} />\r\n            </ImageWrapper>\r\n            <Text mt=\"8px\" fontSize=\"16px\">\r\n              {t('Collectible NFT')}\r\n            </Text>\r\n          </Flex>\r\n        ) : null}\r\n        <Button\r\n          mt=\"24px\"\r\n          width=\"100%\"\r\n          onClick={handleClaimClick}\r\n          disabled={isConfirming}\r\n          isLoading={isConfirming}\r\n          endIcon={isConfirming ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\r\n        >\r\n          {t('Confirm')}\r\n        </Button>\r\n        <Text mt=\"24px\" fontSize=\"12px\" color=\"textSubtle\" textAlign=\"center\">\r\n          {t('All prizes will be sent directly to your wallet and user account.')}\r\n        </Text>\r\n      </Flex>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default ClaimModal\r\n"]},"metadata":{},"sourceType":"module"}