{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Devrim\\\\Documents\\\\FRANKswapUIforProspBlast\\\\src\\\\views\\\\Predictions\\\\components\\\\HistoryButton.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useWeb3React } from '@web3-react/core';\nimport { AutoRenewIcon, HistoryIcon, IconButton } from '@pancakeswap/uikit';\nimport { useAppDispatch } from 'state';\nimport { setHistoryPaneState } from 'state/predictions';\nimport { useGetIsFetchingHistory } from 'state/hooks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst HistoryButton = () => {\n  _s();\n\n  const isFetchingHistory = useGetIsFetchingHistory();\n  const dispatch = useAppDispatch();\n  const {\n    account\n  } = useWeb3React();\n\n  const handleClick = () => {\n    dispatch(setHistoryPaneState(true));\n  };\n\n  return /*#__PURE__*/_jsxDEV(IconButton, {\n    variant: \"subtle\",\n    ml: \"8px\",\n    onClick: handleClick,\n    isLoading: isFetchingHistory,\n    disabled: !account,\n    children: isFetchingHistory ? /*#__PURE__*/_jsxDEV(AutoRenewIcon, {\n      spin: true,\n      color: \"white\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 28\n    }, this) : /*#__PURE__*/_jsxDEV(HistoryIcon, {\n      width: \"24px\",\n      color: \"white\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 67\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n\n_s(HistoryButton, \"ufZWyvgnqph0iyrRpc/fgbph9eE=\", false, function () {\n  return [useGetIsFetchingHistory, useAppDispatch, useWeb3React];\n});\n\n_c = HistoryButton;\nexport default HistoryButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"HistoryButton\");","map":{"version":3,"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/views/Predictions/components/HistoryButton.tsx"],"names":["React","useWeb3React","AutoRenewIcon","HistoryIcon","IconButton","useAppDispatch","setHistoryPaneState","useGetIsFetchingHistory","HistoryButton","isFetchingHistory","dispatch","account","handleClick"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA6B,kBAA7B;AACA,SAASC,aAAT,EAAwBC,WAAxB,EAAqCC,UAArC,QAAuD,oBAAvD;AACA,SAASC,cAAT,QAA+B,OAA/B;AACA,SAASC,mBAAT,QAAoC,mBAApC;AACA,SAASC,uBAAT,QAAwC,aAAxC;;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AAC1B,QAAMC,iBAAiB,GAAGF,uBAAuB,EAAjD;AACA,QAAMG,QAAQ,GAAGL,cAAc,EAA/B;AACA,QAAM;AAAEM,IAAAA;AAAF,MAAcV,YAAY,EAAhC;;AAEA,QAAMW,WAAW,GAAG,MAAM;AACxBF,IAAAA,QAAQ,CAACJ,mBAAmB,CAAC,IAAD,CAApB,CAAR;AACD,GAFD;;AAIA,sBACE,QAAC,UAAD;AAAY,IAAA,OAAO,EAAC,QAApB;AAA6B,IAAA,EAAE,EAAC,KAAhC;AAAsC,IAAA,OAAO,EAAEM,WAA/C;AAA4D,IAAA,SAAS,EAAEH,iBAAvE;AAA0F,IAAA,QAAQ,EAAE,CAACE,OAArG;AAAA,cACGF,iBAAiB,gBAAG,QAAC,aAAD;AAAe,MAAA,IAAI,MAAnB;AAAoB,MAAA,KAAK,EAAC;AAA1B;AAAA;AAAA;AAAA;AAAA,YAAH,gBAA0C,QAAC,WAAD;AAAa,MAAA,KAAK,EAAC,MAAnB;AAA0B,MAAA,KAAK,EAAC;AAAhC;AAAA;AAAA;AAAA;AAAA;AAD9D;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAdD;;GAAMD,a;UACsBD,uB,EACTF,c,EACGJ,Y;;;KAHhBO,a;AAgBN,eAAeA,aAAf","sourcesContent":["import React from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { AutoRenewIcon, HistoryIcon, IconButton } from '@pancakeswap/uikit'\r\nimport { useAppDispatch } from 'state'\r\nimport { setHistoryPaneState } from 'state/predictions'\r\nimport { useGetIsFetchingHistory } from 'state/hooks'\r\n\r\nconst HistoryButton = () => {\r\n  const isFetchingHistory = useGetIsFetchingHistory()\r\n  const dispatch = useAppDispatch()\r\n  const { account } = useWeb3React()\r\n\r\n  const handleClick = () => {\r\n    dispatch(setHistoryPaneState(true))\r\n  }\r\n\r\n  return (\r\n    <IconButton variant=\"subtle\" ml=\"8px\" onClick={handleClick} isLoading={isFetchingHistory} disabled={!account}>\r\n      {isFetchingHistory ? <AutoRenewIcon spin color=\"white\" /> : <HistoryIcon width=\"24px\" color=\"white\" />}\r\n    </IconButton>\r\n  )\r\n}\r\n\r\nexport default HistoryButton\r\n"]},"metadata":{},"sourceType":"module"}