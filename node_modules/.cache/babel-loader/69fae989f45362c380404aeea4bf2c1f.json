{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\frkul\\\\Documents\\\\swapUI_pancake-frontend\\\\src\\\\views\\\\Pools\\\\components\\\\PoolCard\\\\StyledCardHeader.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { CardHeader, Heading, Text, Flex } from '@pancakeswap/uikit';\nimport styled from 'styled-components';\nimport { useTranslation } from 'contexts/Localization';\nimport { TokenPairImage } from 'components/TokenImage';\nimport CakeVaultTokenPairImage from '../CakeVaultCard/CakeVaultTokenPairImage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Wrapper = styled(CardHeader)`\n  background: ${({\n  isFinished,\n  background,\n  theme\n}) => isFinished ? theme.colors.backgroundDisabled : theme.colors.gradients[background]};\n  border-radius: ${({\n  theme\n}) => `${theme.radii.card} ${theme.radii.card} 0 0`};\n`;\n_c = Wrapper;\nconst StyledCardHeader = ({\n  earningToken,\n  stakingToken,\n  isFinished = false,\n  isAutoVault = false,\n  isStaking = false\n}) => {\n  _s();\n  const {\n    t\n  } = useTranslation();\n  const isCakePool = earningToken.symbol === 'CAKE' && stakingToken.symbol === 'CAKE';\n  const background = isStaking ? 'bubblegum' : 'cardHeader';\n  const getHeadingPrefix = () => {\n    if (isAutoVault) {\n      // vault\n      return t('Auto');\n    }\n    if (isCakePool) {\n      // manual cake\n      return t('Manual');\n    }\n    // all other pools\n    return t('Earn');\n  };\n  const getSubHeading = () => {\n    if (isAutoVault) {\n      return t('Automatic restaking');\n    }\n    if (isCakePool) {\n      return t('Earn CAKE, stake CAKE');\n    }\n    return t('Stake %symbol%', {\n      symbol: stakingToken.symbol\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    isFinished: isFinished,\n    background: background,\n    children: /*#__PURE__*/_jsxDEV(Flex, {\n      alignItems: \"center\",\n      justifyContent: \"space-between\",\n      children: [/*#__PURE__*/_jsxDEV(Flex, {\n        flexDirection: \"column\",\n        children: [/*#__PURE__*/_jsxDEV(Heading, {\n          color: isFinished ? 'textDisabled' : 'body',\n          scale: \"lg\",\n          children: `${getHeadingPrefix()} ${earningToken.symbol}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          color: isFinished ? 'textDisabled' : 'textSubtle',\n          children: getSubHeading()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), isAutoVault ? /*#__PURE__*/_jsxDEV(CakeVaultTokenPairImage, {\n        width: 64,\n        height: 64\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(TokenPairImage, {\n        primaryToken: earningToken,\n        secondaryToken: stakingToken,\n        width: 64,\n        height: 64\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(StyledCardHeader, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n_c2 = StyledCardHeader;\nexport default StyledCardHeader;\nvar _c, _c2;\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"StyledCardHeader\");","map":{"version":3,"names":["React","CardHeader","Heading","Text","Flex","styled","useTranslation","TokenPairImage","CakeVaultTokenPairImage","jsxDEV","_jsxDEV","Wrapper","isFinished","background","theme","colors","backgroundDisabled","gradients","radii","card","_c","StyledCardHeader","earningToken","stakingToken","isAutoVault","isStaking","_s","t","isCakePool","symbol","getHeadingPrefix","getSubHeading","children","alignItems","justifyContent","flexDirection","color","scale","fileName","_jsxFileName","lineNumber","columnNumber","width","height","primaryToken","secondaryToken","_c2","$RefreshReg$"],"sources":["C:/Users/frkul/Documents/swapUI_pancake-frontend/src/views/Pools/components/PoolCard/StyledCardHeader.tsx"],"sourcesContent":["import React from 'react'\r\nimport { CardHeader, Heading, Text, Flex } from '@pancakeswap/uikit'\r\nimport styled from 'styled-components'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { Token } from 'config/constants/types'\r\nimport { TokenPairImage } from 'components/TokenImage'\r\nimport CakeVaultTokenPairImage from '../CakeVaultCard/CakeVaultTokenPairImage'\r\n\r\nconst Wrapper = styled(CardHeader)<{ isFinished?: boolean; background?: string }>`\r\n  background: ${({ isFinished, background, theme }) =>\r\n    isFinished ? theme.colors.backgroundDisabled : theme.colors.gradients[background]};\r\n  border-radius: ${({ theme }) => `${theme.radii.card} ${theme.radii.card} 0 0`};\r\n`\r\n\r\nconst StyledCardHeader: React.FC<{\r\n  earningToken: Token\r\n  stakingToken: Token\r\n  isAutoVault?: boolean\r\n  isFinished?: boolean\r\n  isStaking?: boolean\r\n}> = ({ earningToken, stakingToken, isFinished = false, isAutoVault = false, isStaking = false }) => {\r\n  const { t } = useTranslation()\r\n  const isCakePool = earningToken.symbol === 'CAKE' && stakingToken.symbol === 'CAKE'\r\n  const background = isStaking ? 'bubblegum' : 'cardHeader'\r\n\r\n  const getHeadingPrefix = () => {\r\n    if (isAutoVault) {\r\n      // vault\r\n      return t('Auto')\r\n    }\r\n    if (isCakePool) {\r\n      // manual cake\r\n      return t('Manual')\r\n    }\r\n    // all other pools\r\n    return t('Earn')\r\n  }\r\n\r\n  const getSubHeading = () => {\r\n    if (isAutoVault) {\r\n      return t('Automatic restaking')\r\n    }\r\n    if (isCakePool) {\r\n      return t('Earn CAKE, stake CAKE')\r\n    }\r\n    return t('Stake %symbol%', { symbol: stakingToken.symbol })\r\n  }\r\n\r\n  return (\r\n    <Wrapper isFinished={isFinished} background={background}>\r\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\r\n        <Flex flexDirection=\"column\">\r\n          <Heading color={isFinished ? 'textDisabled' : 'body'} scale=\"lg\">\r\n            {`${getHeadingPrefix()} ${earningToken.symbol}`}\r\n          </Heading>\r\n          <Text color={isFinished ? 'textDisabled' : 'textSubtle'}>{getSubHeading()}</Text>\r\n        </Flex>\r\n        {isAutoVault ? (\r\n          <CakeVaultTokenPairImage width={64} height={64} />\r\n        ) : (\r\n          <TokenPairImage primaryToken={earningToken} secondaryToken={stakingToken} width={64} height={64} />\r\n        )}\r\n      </Flex>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default StyledCardHeader\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}