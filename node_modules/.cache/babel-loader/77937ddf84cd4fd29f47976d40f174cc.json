{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Devrim\\\\Documents\\\\FRANKswapUIforProspBlast\\\\src\\\\views\\\\Lottery\\\\components\\\\RewardBrackets.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport BigNumber from 'bignumber.js';\nimport { Flex, Text } from '@pancakeswap/uikit';\nimport styled from 'styled-components';\nimport { BIG_ZERO } from 'utils/bigNumber';\nimport { useTranslation } from 'contexts/Localization';\nimport RewardBracketDetail from './RewardBracketDetail';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Wrapper = styled(Flex)`\n  width: 100%;\n  flex-direction: column;\n`;\n_c = Wrapper;\nconst RewardsInner = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, auto);\n  row-gap: 16px;\n\n  ${({\n  theme\n}) => theme.mediaQueries.sm} {\n    grid-template-columns: repeat(4, 1fr);\n  }\n`;\n_c2 = RewardsInner;\nconst RewardBrackets = ({\n  lotteryData,\n  isHistoricRound\n}) => {\n  _s();\n  const {\n    t\n  } = useTranslation();\n  const [state, setState] = useState({\n    isLoading: true,\n    cakeToBurn: BIG_ZERO,\n    rewardsLessTreasuryFee: BIG_ZERO,\n    rewardsBreakdown: null,\n    countWinnersPerBracket: null\n  });\n  useEffect(() => {\n    if (lotteryData) {\n      const {\n        treasuryFee,\n        amountCollectedInCake,\n        rewardsBreakdown,\n        countWinnersPerBracket\n      } = lotteryData;\n      const feeAsPercentage = new BigNumber(treasuryFee).div(100);\n      const cakeToBurn = feeAsPercentage.div(100).times(new BigNumber(amountCollectedInCake));\n      const amountLessTreasuryFee = new BigNumber(amountCollectedInCake).minus(cakeToBurn);\n      setState({\n        isLoading: false,\n        cakeToBurn,\n        rewardsLessTreasuryFee: amountLessTreasuryFee,\n        rewardsBreakdown,\n        countWinnersPerBracket\n      });\n    } else {\n      setState({\n        isLoading: true,\n        cakeToBurn: BIG_ZERO,\n        rewardsLessTreasuryFee: BIG_ZERO,\n        rewardsBreakdown: null,\n        countWinnersPerBracket: null\n      });\n    }\n  }, [lotteryData]);\n  const getCakeRewards = bracket => {\n    const shareAsPercentage = new BigNumber(state.rewardsBreakdown[bracket]).div(100);\n    return state.rewardsLessTreasuryFee.div(100).times(shareAsPercentage);\n  };\n  const {\n    isLoading,\n    countWinnersPerBracket,\n    cakeToBurn\n  } = state;\n  const rewardBrackets = [0, 1, 2, 3, 4, 5];\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: [/*#__PURE__*/_jsxDEV(Text, {\n      fontSize: \"14px\",\n      mb: \"24px\",\n      children: [t('Match the winning number in the same order to share prizes.'), ' ', !isHistoricRound && t('Current prizes up for grabs:')]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RewardsInner, {\n      children: [rewardBrackets.map(bracketIndex => /*#__PURE__*/_jsxDEV(RewardBracketDetail, {\n        rewardBracket: bracketIndex,\n        cakeAmount: !isLoading && getCakeRewards(bracketIndex),\n        numberWinners: !isLoading && countWinnersPerBracket[bracketIndex],\n        isHistoricRound: isHistoricRound,\n        isLoading: isLoading\n      }, bracketIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(RewardBracketDetail, {\n        rewardBracket: 0,\n        cakeAmount: cakeToBurn,\n        isBurn: true,\n        isLoading: isLoading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n_s(RewardBrackets, \"SfPTDLwddVKOEX0ynjjVTqTDGM8=\", false, function () {\n  return [useTranslation];\n});\n_c3 = RewardBrackets;\nexport default RewardBrackets;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"RewardsInner\");\n$RefreshReg$(_c3, \"RewardBrackets\");","map":{"version":3,"names":["React","useState","useEffect","BigNumber","Flex","Text","styled","BIG_ZERO","useTranslation","RewardBracketDetail","jsxDEV","_jsxDEV","Wrapper","_c","RewardsInner","div","theme","mediaQueries","sm","_c2","RewardBrackets","lotteryData","isHistoricRound","_s","t","state","setState","isLoading","cakeToBurn","rewardsLessTreasuryFee","rewardsBreakdown","countWinnersPerBracket","treasuryFee","amountCollectedInCake","feeAsPercentage","times","amountLessTreasuryFee","minus","getCakeRewards","bracket","shareAsPercentage","rewardBrackets","children","fontSize","mb","fileName","_jsxFileName","lineNumber","columnNumber","map","bracketIndex","rewardBracket","cakeAmount","numberWinners","isBurn","_c3","$RefreshReg$"],"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/views/Lottery/components/RewardBrackets.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Flex, Text } from '@pancakeswap/uikit'\r\nimport styled from 'styled-components'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { LotteryRound } from 'state/types'\r\nimport RewardBracketDetail from './RewardBracketDetail'\r\n\r\nconst Wrapper = styled(Flex)`\r\n  width: 100%;\r\n  flex-direction: column;\r\n`\r\n\r\nconst RewardsInner = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(2, auto);\r\n  row-gap: 16px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    grid-template-columns: repeat(4, 1fr);\r\n  }\r\n`\r\n\r\ninterface RewardMatchesProps {\r\n  lotteryData: LotteryRound\r\n  isHistoricRound?: boolean\r\n}\r\n\r\ninterface RewardsState {\r\n  isLoading: boolean\r\n  cakeToBurn: BigNumber\r\n  rewardsLessTreasuryFee: BigNumber\r\n  rewardsBreakdown: string[]\r\n  countWinnersPerBracket: string[]\r\n}\r\n\r\nconst RewardBrackets: React.FC<RewardMatchesProps> = ({ lotteryData, isHistoricRound }) => {\r\n  const { t } = useTranslation()\r\n  const [state, setState] = useState<RewardsState>({\r\n    isLoading: true,\r\n    cakeToBurn: BIG_ZERO,\r\n    rewardsLessTreasuryFee: BIG_ZERO,\r\n    rewardsBreakdown: null,\r\n    countWinnersPerBracket: null,\r\n  })\r\n\r\n  useEffect(() => {\r\n    if (lotteryData) {\r\n      const { treasuryFee, amountCollectedInCake, rewardsBreakdown, countWinnersPerBracket } = lotteryData\r\n\r\n      const feeAsPercentage = new BigNumber(treasuryFee).div(100)\r\n      const cakeToBurn = feeAsPercentage.div(100).times(new BigNumber(amountCollectedInCake))\r\n      const amountLessTreasuryFee = new BigNumber(amountCollectedInCake).minus(cakeToBurn)\r\n      setState({\r\n        isLoading: false,\r\n        cakeToBurn,\r\n        rewardsLessTreasuryFee: amountLessTreasuryFee,\r\n        rewardsBreakdown,\r\n        countWinnersPerBracket,\r\n      })\r\n    } else {\r\n      setState({\r\n        isLoading: true,\r\n        cakeToBurn: BIG_ZERO,\r\n        rewardsLessTreasuryFee: BIG_ZERO,\r\n        rewardsBreakdown: null,\r\n        countWinnersPerBracket: null,\r\n      })\r\n    }\r\n  }, [lotteryData])\r\n\r\n  const getCakeRewards = (bracket: number) => {\r\n    const shareAsPercentage = new BigNumber(state.rewardsBreakdown[bracket]).div(100)\r\n    return state.rewardsLessTreasuryFee.div(100).times(shareAsPercentage)\r\n  }\r\n\r\n  const { isLoading, countWinnersPerBracket, cakeToBurn } = state\r\n\r\n  const rewardBrackets = [0, 1, 2, 3, 4, 5]\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Text fontSize=\"14px\" mb=\"24px\">\r\n        {t('Match the winning number in the same order to share prizes.')}{' '}\r\n        {!isHistoricRound && t('Current prizes up for grabs:')}\r\n      </Text>\r\n      <RewardsInner>\r\n        {rewardBrackets.map((bracketIndex) => (\r\n          <RewardBracketDetail\r\n            key={bracketIndex}\r\n            rewardBracket={bracketIndex}\r\n            cakeAmount={!isLoading && getCakeRewards(bracketIndex)}\r\n            numberWinners={!isLoading && countWinnersPerBracket[bracketIndex]}\r\n            isHistoricRound={isHistoricRound}\r\n            isLoading={isLoading}\r\n          />\r\n        ))}\r\n        <RewardBracketDetail rewardBracket={0} cakeAmount={cakeToBurn} isBurn isLoading={isLoading} />\r\n      </RewardsInner>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default RewardBrackets\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}