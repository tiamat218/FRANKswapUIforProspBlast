{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Devrim\\\\Documents\\\\FRANKswapUIforProspBlast\\\\src\\\\components\\\\SearchModal\\\\ImportList.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback } from 'react';\nimport styled from 'styled-components';\nimport { Button, Text, Link, Flex, Checkbox, Message } from '@pancakeswap/uikit';\nimport Card from 'components/Card';\nimport { AutoColumn } from 'components/Layout/Column';\nimport { RowBetween, RowFixed } from 'components/Layout/Row';\nimport useTheme from 'hooks/useTheme';\nimport { ListLogo } from 'components/Logo';\nimport { useDispatch } from 'react-redux';\nimport useFetchListCallback from 'hooks/useFetchListCallback';\nimport { removeList, enableList } from 'state/lists/actions';\nimport { useAllLists } from 'state/lists/hooks';\nimport { useTranslation } from 'contexts/Localization';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Wrapper = styled.div`\n  position: relative;\n  width: 100%;\n`;\n_c = Wrapper;\nconst TextDot = styled.div`\n  height: 3px;\n  width: 3px;\n  background-color: ${({\n  theme\n}) => theme.colors.text};\n  border-radius: 50%;\n`;\n_c2 = TextDot;\n\nfunction ImportList({\n  listURL,\n  list,\n  onImport\n}) {\n  _s();\n\n  var _lists$listURL;\n\n  const {\n    theme\n  } = useTheme();\n  const dispatch = useDispatch();\n  const {\n    t\n  } = useTranslation(); // user must accept\n\n  const [confirmed, setConfirmed] = useState(false);\n  const lists = useAllLists();\n  const fetchList = useFetchListCallback(); // monitor is list is loading\n\n  const adding = Boolean((_lists$listURL = lists[listURL]) === null || _lists$listURL === void 0 ? void 0 : _lists$listURL.loadingRequestId);\n  const [addError, setAddError] = useState(null);\n  const handleAddList = useCallback(() => {\n    if (adding) return;\n    setAddError(null);\n    fetchList(listURL).then(() => {\n      dispatch(enableList(listURL));\n      onImport();\n    }).catch(error => {\n      setAddError(error.message);\n      dispatch(removeList(listURL));\n    });\n  }, [adding, dispatch, fetchList, listURL, onImport]);\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: /*#__PURE__*/_jsxDEV(AutoColumn, {\n      gap: \"md\",\n      children: /*#__PURE__*/_jsxDEV(AutoColumn, {\n        gap: \"md\",\n        children: [/*#__PURE__*/_jsxDEV(Card, {\n          padding: \"12px 20px\",\n          children: /*#__PURE__*/_jsxDEV(RowBetween, {\n            children: /*#__PURE__*/_jsxDEV(RowFixed, {\n              children: [list.logoURI && /*#__PURE__*/_jsxDEV(ListLogo, {\n                logoURI: list.logoURI,\n                size: \"40px\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 34\n              }, this), /*#__PURE__*/_jsxDEV(AutoColumn, {\n                gap: \"sm\",\n                style: {\n                  marginLeft: '20px'\n                },\n                children: [/*#__PURE__*/_jsxDEV(RowFixed, {\n                  children: [/*#__PURE__*/_jsxDEV(Text, {\n                    bold: true,\n                    mr: \"6px\",\n                    children: list.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 75,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TextDot, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 78,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Text, {\n                    small: true,\n                    color: \"textSubtle\",\n                    ml: \"6px\",\n                    children: [list.tokens.length, \" tokens\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 79,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Link, {\n                  small: true,\n                  external: true,\n                  ellipsis: true,\n                  maxWidth: \"90%\",\n                  href: `https://tokenlists.org/token-list?url=${listURL}`,\n                  children: listURL\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Message, {\n          variant: \"danger\",\n          children: /*#__PURE__*/_jsxDEV(Flex, {\n            flexDirection: \"column\",\n            children: [/*#__PURE__*/_jsxDEV(Text, {\n              fontSize: \"20px\",\n              textAlign: \"center\",\n              color: theme.colors.failure,\n              mb: \"16px\",\n              children: t('Import at your own risk')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Text, {\n              color: theme.colors.failure,\n              mb: \"8px\",\n              children: t('By adding this list you are implicitly trusting that the data is correct. Anyone can create a list, including creating fake versions of existing lists and lists that claim to represent projects that do not have one.')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Text, {\n              bold: true,\n              color: theme.colors.failure,\n              mb: \"16px\",\n              children: typeof 'If you purchase a token from this list, you may not be able to sell it back.'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Flex, {\n              alignItems: \"center\",\n              children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n                name: \"confirmed\",\n                type: \"checkbox\",\n                checked: confirmed,\n                onChange: () => setConfirmed(!confirmed),\n                scale: \"sm\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Text, {\n                ml: \"10px\",\n                style: {\n                  userSelect: 'none'\n                },\n                children: t('I understand')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          disabled: !confirmed,\n          onClick: handleAddList,\n          children: t('Import')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), addError ? /*#__PURE__*/_jsxDEV(Text, {\n          color: \"failure\",\n          style: {\n            textOverflow: 'ellipsis',\n            overflow: 'hidden'\n          },\n          children: addError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ImportList, \"DM1tAlLZWeDyXpAy1mJ4hAHnP2w=\", false, function () {\n  return [useTheme, useDispatch, useTranslation, useAllLists, useFetchListCallback];\n});\n\n_c3 = ImportList;\nexport default ImportList;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"TextDot\");\n$RefreshReg$(_c3, \"ImportList\");","map":{"version":3,"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/components/SearchModal/ImportList.tsx"],"names":["React","useState","useCallback","styled","Button","Text","Link","Flex","Checkbox","Message","Card","AutoColumn","RowBetween","RowFixed","useTheme","ListLogo","useDispatch","useFetchListCallback","removeList","enableList","useAllLists","useTranslation","Wrapper","div","TextDot","theme","colors","text","ImportList","listURL","list","onImport","dispatch","t","confirmed","setConfirmed","lists","fetchList","adding","Boolean","loadingRequestId","addError","setAddError","handleAddList","then","catch","error","message","logoURI","marginLeft","name","tokens","length","failure","userSelect","textOverflow","overflow"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button, Text, Link, Flex, Checkbox, Message } from '@pancakeswap/uikit'\r\nimport Card from 'components/Card'\r\nimport { AutoColumn } from 'components/Layout/Column'\r\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\r\nimport useTheme from 'hooks/useTheme'\r\nimport { ListLogo } from 'components/Logo'\r\nimport { TokenList } from '@uniswap/token-lists'\r\nimport { useDispatch } from 'react-redux'\r\nimport { AppDispatch } from 'state'\r\nimport useFetchListCallback from 'hooks/useFetchListCallback'\r\nimport { removeList, enableList } from 'state/lists/actions'\r\nimport { useAllLists } from 'state/lists/hooks'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\ninterface ImportProps {\r\n  listURL: string\r\n  list: TokenList\r\n  onImport: () => void\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n`\r\n\r\nconst TextDot = styled.div`\r\n  height: 3px;\r\n  width: 3px;\r\n  background-color: ${({ theme }) => theme.colors.text};\r\n  border-radius: 50%;\r\n`\r\n\r\nfunction ImportList({ listURL, list, onImport }: ImportProps) {\r\n  const { theme } = useTheme()\r\n  const dispatch = useDispatch<AppDispatch>()\r\n\r\n  const { t } = useTranslation()\r\n\r\n  // user must accept\r\n  const [confirmed, setConfirmed] = useState(false)\r\n\r\n  const lists = useAllLists()\r\n  const fetchList = useFetchListCallback()\r\n\r\n  // monitor is list is loading\r\n  const adding = Boolean(lists[listURL]?.loadingRequestId)\r\n  const [addError, setAddError] = useState<string | null>(null)\r\n\r\n  const handleAddList = useCallback(() => {\r\n    if (adding) return\r\n    setAddError(null)\r\n    fetchList(listURL)\r\n      .then(() => {\r\n        dispatch(enableList(listURL))\r\n        onImport()\r\n      })\r\n      .catch((error) => {\r\n        setAddError(error.message)\r\n        dispatch(removeList(listURL))\r\n      })\r\n  }, [adding, dispatch, fetchList, listURL, onImport])\r\n\r\n  return (\r\n    <Wrapper>\r\n      <AutoColumn gap=\"md\">\r\n        <AutoColumn gap=\"md\">\r\n          <Card padding=\"12px 20px\">\r\n            <RowBetween>\r\n              <RowFixed>\r\n                {list.logoURI && <ListLogo logoURI={list.logoURI} size=\"40px\" />}\r\n                <AutoColumn gap=\"sm\" style={{ marginLeft: '20px' }}>\r\n                  <RowFixed>\r\n                    <Text bold mr=\"6px\">\r\n                      {list.name}\r\n                    </Text>\r\n                    <TextDot />\r\n                    <Text small color=\"textSubtle\" ml=\"6px\">\r\n                      {list.tokens.length} tokens\r\n                    </Text>\r\n                  </RowFixed>\r\n                  <Link\r\n                    small\r\n                    external\r\n                    ellipsis\r\n                    maxWidth=\"90%\"\r\n                    href={`https://tokenlists.org/token-list?url=${listURL}`}\r\n                  >\r\n                    {listURL}\r\n                  </Link>\r\n                </AutoColumn>\r\n              </RowFixed>\r\n            </RowBetween>\r\n          </Card>\r\n\r\n          <Message variant=\"danger\">\r\n            <Flex flexDirection=\"column\">\r\n              <Text fontSize=\"20px\" textAlign=\"center\" color={theme.colors.failure} mb=\"16px\">\r\n                {t('Import at your own risk')}\r\n              </Text>\r\n              <Text color={theme.colors.failure} mb=\"8px\">\r\n                {t(\r\n                  'By adding this list you are implicitly trusting that the data is correct. Anyone can create a list, including creating fake versions of existing lists and lists that claim to represent projects that do not have one.',\r\n                )}\r\n              </Text>\r\n              <Text bold color={theme.colors.failure} mb=\"16px\">\r\n                {typeof 'If you purchase a token from this list, you may not be able to sell it back.'}\r\n              </Text>\r\n              <Flex alignItems=\"center\">\r\n                <Checkbox\r\n                  name=\"confirmed\"\r\n                  type=\"checkbox\"\r\n                  checked={confirmed}\r\n                  onChange={() => setConfirmed(!confirmed)}\r\n                  scale=\"sm\"\r\n                />\r\n                <Text ml=\"10px\" style={{ userSelect: 'none' }}>\r\n                  {t('I understand')}\r\n                </Text>\r\n              </Flex>\r\n            </Flex>\r\n          </Message>\r\n\r\n          <Button disabled={!confirmed} onClick={handleAddList}>\r\n            {t('Import')}\r\n          </Button>\r\n          {addError ? (\r\n            <Text color=\"failure\" style={{ textOverflow: 'ellipsis', overflow: 'hidden' }}>\r\n              {addError}\r\n            </Text>\r\n          ) : null}\r\n        </AutoColumn>\r\n      </AutoColumn>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default ImportList\r\n"]},"metadata":{},"sourceType":"module"}