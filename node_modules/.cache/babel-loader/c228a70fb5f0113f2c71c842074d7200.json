{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Devrim\\\\Documents\\\\FRANKswapUIforProspBlast\\\\src\\\\components\\\\App\\\\Transactions\\\\Transaction.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport { CheckmarkIcon, CloseIcon, LinkExternal } from '@pancakeswap/uikit';\nimport useActiveWeb3React from 'hooks/useActiveWeb3React';\nimport { getBscScanLink } from 'utils';\nimport CircleLoader from '../../Loader/CircleLoader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TransactionState = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  text-decoration: none !important;\n  border-radius: 0.5rem;\n  padding: 0.25rem 0rem;\n  font-weight: 500;\n  font-size: 0.825rem;\n  color: ${({\n  theme\n}) => theme.colors.primary};\n`;\n_c = TransactionState;\nconst IconWrapper = styled.div`\n  color: ${({\n  pending,\n  success,\n  theme\n}) => pending ? theme.colors.primary : success ? theme.colors.success : theme.colors.failure};\n`;\n_c2 = IconWrapper;\nexport default function Transaction({\n  tx\n}) {\n  _s();\n\n  var _tx$receipt, _tx$receipt2;\n\n  const {\n    chainId\n  } = useActiveWeb3React();\n  const summary = tx === null || tx === void 0 ? void 0 : tx.summary;\n  const pending = !(tx === null || tx === void 0 ? void 0 : tx.receipt);\n  const success = !pending && tx && (((_tx$receipt = tx.receipt) === null || _tx$receipt === void 0 ? void 0 : _tx$receipt.status) === 1 || typeof ((_tx$receipt2 = tx.receipt) === null || _tx$receipt2 === void 0 ? void 0 : _tx$receipt2.status) === 'undefined');\n  if (!chainId) return null;\n  return /*#__PURE__*/_jsxDEV(TransactionState, {\n    pending: pending,\n    success: success,\n    children: [/*#__PURE__*/_jsxDEV(LinkExternal, {\n      href: getBscScanLink(tx.hash, 'transaction', chainId),\n      children: summary !== null && summary !== void 0 ? summary : tx.hash\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IconWrapper, {\n      pending: pending,\n      success: success,\n      children: pending ? /*#__PURE__*/_jsxDEV(CircleLoader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 20\n      }, this) : success ? /*#__PURE__*/_jsxDEV(CheckmarkIcon, {\n        color: \"success\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 49\n      }, this) : /*#__PURE__*/_jsxDEV(CloseIcon, {\n        color: \"failure\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 85\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Transaction, \"Srgj51dvRDiLRw5YTqb92Ixo5OU=\", false, function () {\n  return [useActiveWeb3React];\n});\n\n_c3 = Transaction;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"TransactionState\");\n$RefreshReg$(_c2, \"IconWrapper\");\n$RefreshReg$(_c3, \"Transaction\");","map":{"version":3,"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/components/App/Transactions/Transaction.tsx"],"names":["React","styled","CheckmarkIcon","CloseIcon","LinkExternal","useActiveWeb3React","getBscScanLink","CircleLoader","TransactionState","div","theme","colors","primary","IconWrapper","pending","success","failure","Transaction","tx","chainId","summary","receipt","status","hash"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,aAAT,EAAwBC,SAAxB,EAAmCC,YAAnC,QAAuD,oBAAvD;AACA,OAAOC,kBAAP,MAA+B,0BAA/B;AACA,SAASC,cAAT,QAA+B,OAA/B;AAEA,OAAOC,YAAP,MAAyB,2BAAzB;;AAEA,MAAMC,gBAAgB,GAAGP,MAAM,CAACQ,GAA6C;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,MAAN,CAAaC,OAAQ;AAC/C,CAVA;KAAMJ,gB;AAYN,MAAMK,WAAW,GAAGZ,MAAM,CAACQ,GAA6C;AACxE,WAAW,CAAC;AAAEK,EAAAA,OAAF;AAAWC,EAAAA,OAAX;AAAoBL,EAAAA;AAApB,CAAD,KACPI,OAAO,GAAGJ,KAAK,CAACC,MAAN,CAAaC,OAAhB,GAA0BG,OAAO,GAAGL,KAAK,CAACC,MAAN,CAAaI,OAAhB,GAA0BL,KAAK,CAACC,MAAN,CAAaK,OAAQ;AAC3F,CAHA;MAAMH,W;AAKN,eAAe,SAASI,WAAT,CAAqB;AAAEC,EAAAA;AAAF,CAArB,EAAyD;AAAA;;AAAA;;AACtE,QAAM;AAAEC,IAAAA;AAAF,MAAcd,kBAAkB,EAAtC;AAEA,QAAMe,OAAO,GAAGF,EAAH,aAAGA,EAAH,uBAAGA,EAAE,CAAEE,OAApB;AACA,QAAMN,OAAO,GAAG,EAACI,EAAD,aAACA,EAAD,uBAACA,EAAE,CAAEG,OAAL,CAAhB;AACA,QAAMN,OAAO,GAAG,CAACD,OAAD,IAAYI,EAAZ,KAAmB,gBAAAA,EAAE,CAACG,OAAH,4DAAYC,MAAZ,MAAuB,CAAvB,IAA4B,wBAAOJ,EAAE,CAACG,OAAV,iDAAO,aAAYC,MAAnB,MAA8B,WAA7E,CAAhB;AAEA,MAAI,CAACH,OAAL,EAAc,OAAO,IAAP;AAEd,sBACE,QAAC,gBAAD;AAAkB,IAAA,OAAO,EAAEL,OAA3B;AAAoC,IAAA,OAAO,EAAEC,OAA7C;AAAA,4BACE,QAAC,YAAD;AAAc,MAAA,IAAI,EAAET,cAAc,CAACY,EAAE,CAACK,IAAJ,EAAU,aAAV,EAAyBJ,OAAzB,CAAlC;AAAA,gBAAsEC,OAAtE,aAAsEA,OAAtE,cAAsEA,OAAtE,GAAiFF,EAAE,CAACK;AAApF;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,WAAD;AAAa,MAAA,OAAO,EAAET,OAAtB;AAA+B,MAAA,OAAO,EAAEC,OAAxC;AAAA,gBACGD,OAAO,gBAAG,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,cAAH,GAAsBC,OAAO,gBAAG,QAAC,aAAD;AAAe,QAAA,KAAK,EAAC;AAArB;AAAA;AAAA;AAAA;AAAA,cAAH,gBAAuC,QAAC,SAAD;AAAW,QAAA,KAAK,EAAC;AAAjB;AAAA;AAAA;AAAA;AAAA;AAD9E;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;GAjBuBE,W;UACFZ,kB;;;MADEY,W","sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { CheckmarkIcon, CloseIcon, LinkExternal } from '@pancakeswap/uikit'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport { getBscScanLink } from 'utils'\r\nimport { TransactionDetails } from 'state/transactions/reducer'\r\nimport CircleLoader from '../../Loader/CircleLoader'\r\n\r\nconst TransactionState = styled.div<{ pending: boolean; success?: boolean }>`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  text-decoration: none !important;\r\n  border-radius: 0.5rem;\r\n  padding: 0.25rem 0rem;\r\n  font-weight: 500;\r\n  font-size: 0.825rem;\r\n  color: ${({ theme }) => theme.colors.primary};\r\n`\r\n\r\nconst IconWrapper = styled.div<{ pending: boolean; success?: boolean }>`\r\n  color: ${({ pending, success, theme }) =>\r\n    pending ? theme.colors.primary : success ? theme.colors.success : theme.colors.failure};\r\n`\r\n\r\nexport default function Transaction({ tx }: { tx: TransactionDetails }) {\r\n  const { chainId } = useActiveWeb3React()\r\n\r\n  const summary = tx?.summary\r\n  const pending = !tx?.receipt\r\n  const success = !pending && tx && (tx.receipt?.status === 1 || typeof tx.receipt?.status === 'undefined')\r\n\r\n  if (!chainId) return null\r\n\r\n  return (\r\n    <TransactionState pending={pending} success={success}>\r\n      <LinkExternal href={getBscScanLink(tx.hash, 'transaction', chainId)}>{summary ?? tx.hash}</LinkExternal>\r\n      <IconWrapper pending={pending} success={success}>\r\n        {pending ? <CircleLoader /> : success ? <CheckmarkIcon color=\"success\" /> : <CloseIcon color=\"failure\" />}\r\n      </IconWrapper>\r\n    </TransactionState>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}