{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Devrim\\\\Documents\\\\swapUIforProspBlast\\\\src\\\\views\\\\Profile\\\\components\\\\EditProfileModal\\\\ApproveCakeView.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { AutoRenewIcon, Button, Flex, Text } from '@pancakeswap/uikit';\nimport { useTranslation } from 'contexts/Localization';\nimport { useCake } from 'hooks/useContract';\nimport useToast from 'hooks/useToast';\nimport { useProfile } from 'state/profile/hooks';\nimport { getPancakeProfileAddress } from 'utils/addressHelpers';\nimport { getFullDisplayBalance } from 'utils/formatBalance';\nimport useGetProfileCosts from 'views/Profile/hooks/useGetProfileCosts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ApproveCakePage = ({\n  goToChange,\n  onDismiss\n}) => {\n  _s();\n  const [isApproving, setIsApproving] = useState(false);\n  const {\n    profile\n  } = useProfile();\n  const {\n    t\n  } = useTranslation();\n  const {\n    numberCakeToUpdate,\n    numberCakeToReactivate\n  } = useGetProfileCosts();\n  const cakeContract = useCake();\n  const {\n    toastError\n  } = useToast();\n  const cost = profile.isActive ? numberCakeToUpdate : numberCakeToReactivate;\n  const handleApprove = async () => {\n    const tx = await cakeContract.approve(getPancakeProfileAddress(), cost.times(2).toJSON());\n    setIsApproving(true);\n    const receipt = await tx.wait();\n    if (receipt.status) {\n      goToChange();\n    } else {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'));\n      setIsApproving(false);\n    }\n  };\n  if (!profile) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    flexDirection: \"column\",\n    children: [/*#__PURE__*/_jsxDEV(Flex, {\n      alignItems: \"center\",\n      justifyContent: \"space-between\",\n      mb: \"24px\",\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        children: profile.isActive ? t('Cost to update:') : t('Cost to reactivate:')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        children: [getFullDisplayBalance(cost), \" CAKE\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      disabled: isApproving,\n      isLoading: isApproving,\n      endIcon: isApproving ? /*#__PURE__*/_jsxDEV(AutoRenewIcon, {\n        spin: true,\n        color: \"currentColor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 32\n      }, this) : null,\n      width: \"100%\",\n      mb: \"8px\",\n      onClick: handleApprove,\n      children: t('Enable')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"text\",\n      width: \"100%\",\n      onClick: onDismiss,\n      disabled: isApproving,\n      children: t('Close Window')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(ApproveCakePage, \"QOqAsJH3oengD0Y8+V00QA30GKk=\", false, function () {\n  return [useProfile, useTranslation, useGetProfileCosts, useCake, useToast];\n});\n_c = ApproveCakePage;\nexport default ApproveCakePage;\nvar _c;\n$RefreshReg$(_c, \"ApproveCakePage\");","map":{"version":3,"names":["React","useState","AutoRenewIcon","Button","Flex","Text","useTranslation","useCake","useToast","useProfile","getPancakeProfileAddress","getFullDisplayBalance","useGetProfileCosts","jsxDEV","_jsxDEV","ApproveCakePage","goToChange","onDismiss","_s","isApproving","setIsApproving","profile","t","numberCakeToUpdate","numberCakeToReactivate","cakeContract","toastError","cost","isActive","handleApprove","tx","approve","times","toJSON","receipt","wait","status","flexDirection","children","alignItems","justifyContent","mb","fileName","_jsxFileName","lineNumber","columnNumber","disabled","isLoading","endIcon","spin","color","width","onClick","variant","_c","$RefreshReg$"],"sources":["C:/Users/Devrim/Documents/swapUIforProspBlast/src/views/Profile/components/EditProfileModal/ApproveCakeView.tsx"],"sourcesContent":["import React, { useState } from 'react'\r\nimport { AutoRenewIcon, Button, Flex, InjectedModalProps, Text } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useCake } from 'hooks/useContract'\r\nimport useToast from 'hooks/useToast'\r\nimport { useProfile } from 'state/profile/hooks'\r\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\r\nimport { getFullDisplayBalance } from 'utils/formatBalance'\r\nimport useGetProfileCosts from 'views/Profile/hooks/useGetProfileCosts'\r\nimport { UseEditProfileResponse } from './reducer'\r\n\r\ninterface ApproveCakePageProps extends InjectedModalProps {\r\n  goToChange: UseEditProfileResponse['goToChange']\r\n}\r\n\r\nconst ApproveCakePage: React.FC<ApproveCakePageProps> = ({ goToChange, onDismiss }) => {\r\n  const [isApproving, setIsApproving] = useState(false)\r\n  const { profile } = useProfile()\r\n  const { t } = useTranslation()\r\n  const { numberCakeToUpdate, numberCakeToReactivate } = useGetProfileCosts()\r\n  const cakeContract = useCake()\r\n  const { toastError } = useToast()\r\n  const cost = profile.isActive ? numberCakeToUpdate : numberCakeToReactivate\r\n\r\n  const handleApprove = async () => {\r\n    const tx = await cakeContract.approve(getPancakeProfileAddress(), cost.times(2).toJSON())\r\n    setIsApproving(true)\r\n    const receipt = await tx.wait()\r\n    if (receipt.status) {\r\n      goToChange()\r\n    } else {\r\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\r\n      setIsApproving(false)\r\n    }\r\n  }\r\n\r\n  if (!profile) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <Flex flexDirection=\"column\">\r\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"24px\">\r\n        <Text>{profile.isActive ? t('Cost to update:') : t('Cost to reactivate:')}</Text>\r\n        <Text>{getFullDisplayBalance(cost)} CAKE</Text>\r\n      </Flex>\r\n      <Button\r\n        disabled={isApproving}\r\n        isLoading={isApproving}\r\n        endIcon={isApproving ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\r\n        width=\"100%\"\r\n        mb=\"8px\"\r\n        onClick={handleApprove}\r\n      >\r\n        {t('Enable')}\r\n      </Button>\r\n      <Button variant=\"text\" width=\"100%\" onClick={onDismiss} disabled={isApproving}>\r\n        {t('Close Window')}\r\n      </Button>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default ApproveCakePage\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}