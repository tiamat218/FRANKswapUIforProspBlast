{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Devrim\\\\Documents\\\\FRANKswapUIforProspBlast\\\\src\\\\views\\\\Pools\\\\components\\\\PoolsTable\\\\ActionPanel\\\\ActionPanel.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport styled, { keyframes, css } from 'styled-components';\nimport { Box, Button, Flex, HelpIcon, Link, LinkExternal, MetamaskIcon, Skeleton, Text, TimerIcon, useTooltip } from '@pancakeswap/uikit';\nimport { BASE_BSC_SCAN_URL } from 'config';\nimport { getBscScanLink } from 'utils';\nimport { useBlock } from 'state/block/hooks';\nimport { useCakeVault } from 'state/pools/hooks';\nimport BigNumber from 'bignumber.js';\nimport { useTranslation } from 'contexts/Localization';\nimport Balance from 'components/Balance';\nimport { CompoundingPoolTag, ManualPoolTag } from 'components/Tags';\nimport { getAddress, getCakeVaultAddress } from 'utils/addressHelpers';\nimport { registerToken } from 'utils/wallet';\nimport { getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance';\nimport { getPoolBlockInfo } from 'views/Pools/helpers';\nimport Harvest from './Harvest';\nimport Stake from './Stake';\nimport Apr from '../Apr';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst expandAnimation = keyframes`\n  from {\n    max-height: 0px;\n  }\n  to {\n    max-height: 700px;\n  }\n`;\nconst collapseAnimation = keyframes`\n  from {\n    max-height: 700px;\n  }\n  to {\n    max-height: 0px;\n  }\n`;\nconst StyledActionPanel = styled.div`\n  animation: ${({\n  expanded\n}) => expanded ? css`\n          ${expandAnimation} 300ms linear forwards\n        ` : css`\n          ${collapseAnimation} 300ms linear forwards\n        `};\n  overflow: hidden;\n  background: ${({\n  theme\n}) => theme.colors.dropdown};\n  display: flex;\n  flex-direction: column-reverse;\n  justify-content: center;\n  padding: 12px;\n\n  ${({\n  theme\n}) => theme.mediaQueries.lg} {\n    flex-direction: row;\n    padding: 16px 32px;\n  }\n`;\n_c = StyledActionPanel;\nconst ActionContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  ${({\n  theme\n}) => theme.mediaQueries.sm} {\n    flex-direction: row;\n    align-items: center;\n    flex-grow: 1;\n    flex-basis: 0;\n  }\n`;\n_c2 = ActionContainer;\nconst InfoSection = styled(Box)`\n  flex-grow: 0;\n  flex-shrink: 0;\n  flex-basis: auto;\n  padding: 8px 8px;\n  ${({\n  theme\n}) => theme.mediaQueries.lg} {\n    padding: 0;\n    flex-basis: 230px;\n  }\n`;\n_c3 = InfoSection;\n\nconst ActionPanel = ({\n  account,\n  pool,\n  userDataLoaded,\n  expanded,\n  breakpoints\n}) => {\n  _s();\n\n  var _window$ethereum;\n\n  const {\n    sousId,\n    stakingToken,\n    earningToken,\n    totalStaked,\n    startBlock,\n    endBlock,\n    stakingLimit,\n    contractAddress,\n    isAutoVault\n  } = pool;\n  const {\n    t\n  } = useTranslation();\n  const poolContractAddress = getAddress(contractAddress);\n  const cakeVaultContractAddress = getCakeVaultAddress();\n  const {\n    currentBlock\n  } = useBlock();\n  const {\n    isXs,\n    isSm,\n    isMd\n  } = breakpoints;\n  const showSubtitle = (isXs || isSm) && sousId === 0;\n  const {\n    shouldShowBlockCountdown,\n    blocksUntilStart,\n    blocksRemaining,\n    hasPoolStarted,\n    blocksToDisplay\n  } = getPoolBlockInfo(pool, currentBlock);\n  const isMetaMaskInScope = !!((_window$ethereum = window.ethereum) === null || _window$ethereum === void 0 ? void 0 : _window$ethereum.isMetaMask);\n  const tokenAddress = earningToken.address ? getAddress(earningToken.address) : '';\n  const {\n    totalCakeInVault,\n    fees: {\n      performanceFee\n    }\n  } = useCakeVault();\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100;\n  const isManualCakePool = sousId === 0;\n\n  const getTotalStakedBalance = () => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals);\n    }\n\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault);\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals);\n    }\n\n    return getBalanceNumber(totalStaked, stakingToken.decimals);\n  };\n\n  const {\n    targetRef: totalStakedTargetRef,\n    tooltip: totalStakedTooltip,\n    tooltipVisible: totalStakedTooltipVisible\n  } = useTooltip(t('Total amount of %symbol% staked in this pool', {\n    symbol: stakingToken.symbol\n  }), {\n    placement: 'bottom'\n  });\n  const manualTooltipText = t('You must harvest and compound your earnings from this pool manually.');\n  const autoTooltipText = t('Any funds you stake in this pool will be automagically harvested and restaked (compounded) for you.');\n  const {\n    targetRef: tagTargetRef,\n    tooltip: tagTooltip,\n    tooltipVisible: tagTooltipVisible\n  } = useTooltip(isAutoVault ? autoTooltipText : manualTooltipText, {\n    placement: 'bottom-start'\n  });\n  const maxStakeRow = stakingLimit.gt(0) ? /*#__PURE__*/_jsxDEV(Flex, {\n    mb: \"8px\",\n    justifyContent: \"space-between\",\n    children: [/*#__PURE__*/_jsxDEV(Text, {\n      children: [t('Max. stake per user'), \":\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Text, {\n      children: `${getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0)} ${stakingToken.symbol}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 178,\n    columnNumber: 5\n  }, this) : null;\n  const blocksRow = blocksRemaining || blocksUntilStart ? /*#__PURE__*/_jsxDEV(Flex, {\n    mb: \"8px\",\n    justifyContent: \"space-between\",\n    children: [/*#__PURE__*/_jsxDEV(Text, {\n      children: [hasPoolStarted ? t('Ends in') : t('Starts in'), \":\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Flex, {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        external: true,\n        href: getBscScanLink(hasPoolStarted ? endBlock : startBlock, 'countdown'),\n        children: [/*#__PURE__*/_jsxDEV(Balance, {\n          fontSize: \"16px\",\n          value: blocksToDisplay,\n          decimals: 0,\n          color: \"primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          ml: \"4px\",\n          color: \"primary\",\n          textTransform: \"lowercase\",\n          children: t('Blocks')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TimerIcon, {\n          ml: \"4px\",\n          color: \"primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 186,\n    columnNumber: 7\n  }, this) : /*#__PURE__*/_jsxDEV(Skeleton, {\n    width: \"56px\",\n    height: \"16px\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 199,\n    columnNumber: 7\n  }, this);\n\n  const aprRow = /*#__PURE__*/_jsxDEV(Flex, {\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    mb: \"8px\",\n    children: [/*#__PURE__*/_jsxDEV(Text, {\n      children: [isAutoVault ? t('APY') : t('APR'), \":\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Apr, {\n      pool: pool,\n      showIcon: true,\n      performanceFee: isAutoVault ? performanceFeeAsDecimal : 0\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 203,\n    columnNumber: 5\n  }, this);\n\n  const totalStakedRow = /*#__PURE__*/_jsxDEV(Flex, {\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    mb: \"8px\",\n    children: [/*#__PURE__*/_jsxDEV(Text, {\n      maxWidth: ['50px', '100%'],\n      children: [t('Total staked'), \":\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Flex, {\n      alignItems: \"center\",\n      children: [totalStaked && totalStaked.gte(0) ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Balance, {\n          fontSize: \"16px\",\n          value: getTotalStakedBalance(),\n          decimals: 0,\n          unit: ` ${stakingToken.symbol}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          ref: totalStakedTargetRef,\n          children: /*#__PURE__*/_jsxDEV(HelpIcon, {\n            color: \"textSubtle\",\n            width: \"20px\",\n            ml: \"4px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(Skeleton, {\n        width: \"56px\",\n        height: \"16px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 11\n      }, this), totalStakedTooltipVisible && totalStakedTooltip]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 210,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(StyledActionPanel, {\n    expanded: expanded,\n    children: [/*#__PURE__*/_jsxDEV(InfoSection, {\n      children: [maxStakeRow, (isXs || isSm) && aprRow, (isXs || isSm || isMd) && totalStakedRow, shouldShowBlockCountdown && blocksRow, /*#__PURE__*/_jsxDEV(Flex, {\n        mb: \"8px\",\n        justifyContent: ['flex-end', 'flex-end', 'flex-start'],\n        children: /*#__PURE__*/_jsxDEV(LinkExternal, {\n          href: `https://pancakeswap.info/token/${getAddress(earningToken.address)}`,\n          bold: false,\n          children: t('See Token Info')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        mb: \"8px\",\n        justifyContent: ['flex-end', 'flex-end', 'flex-start'],\n        children: /*#__PURE__*/_jsxDEV(LinkExternal, {\n          href: earningToken.projectLink,\n          bold: false,\n          children: t('View Project Site')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this), poolContractAddress && /*#__PURE__*/_jsxDEV(Flex, {\n        mb: \"8px\",\n        justifyContent: ['flex-end', 'flex-end', 'flex-start'],\n        children: /*#__PURE__*/_jsxDEV(LinkExternal, {\n          href: `${BASE_BSC_SCAN_URL}/address/${isAutoVault ? cakeVaultContractAddress : poolContractAddress}`,\n          bold: false,\n          children: t('View Contract')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 11\n      }, this), account && isMetaMaskInScope && tokenAddress && /*#__PURE__*/_jsxDEV(Flex, {\n        mb: \"8px\",\n        justifyContent: ['flex-end', 'flex-end', 'flex-start'],\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"text\",\n          p: \"0\",\n          height: \"auto\",\n          onClick: () => registerToken(tokenAddress, earningToken.symbol, earningToken.decimals),\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            color: \"primary\",\n            children: t('Add to Metamask')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(MetamaskIcon, {\n            ml: \"4px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 11\n      }, this), isAutoVault ? /*#__PURE__*/_jsxDEV(CompoundingPoolTag, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 24\n      }, this) : /*#__PURE__*/_jsxDEV(ManualPoolTag, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 49\n      }, this), tagTooltipVisible && tagTooltip, /*#__PURE__*/_jsxDEV(\"span\", {\n        ref: tagTargetRef,\n        children: /*#__PURE__*/_jsxDEV(HelpIcon, {\n          ml: \"4px\",\n          width: \"20px\",\n          height: \"20px\",\n          color: \"textSubtle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ActionContainer, {\n      children: [showSubtitle && /*#__PURE__*/_jsxDEV(Text, {\n        mt: \"4px\",\n        mb: \"16px\",\n        color: \"textSubtle\",\n        children: isAutoVault ? t('Automatic restaking') : `${t('Earn')} CAKE ${t('Stake').toLocaleLowerCase()} CAKE`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Harvest, { ...pool,\n        userDataLoaded: userDataLoaded\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Stake, {\n        pool: pool,\n        userDataLoaded: userDataLoaded\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 229,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ActionPanel, \"sjK6GSFlw+a13QQmk2co9vLJy1U=\", false, function () {\n  return [useTranslation, useBlock, useCakeVault, useTooltip, useTooltip];\n});\n\n_c4 = ActionPanel;\nexport default ActionPanel;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"StyledActionPanel\");\n$RefreshReg$(_c2, \"ActionContainer\");\n$RefreshReg$(_c3, \"InfoSection\");\n$RefreshReg$(_c4, \"ActionPanel\");","map":{"version":3,"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/views/Pools/components/PoolsTable/ActionPanel/ActionPanel.tsx"],"names":["React","styled","keyframes","css","Box","Button","Flex","HelpIcon","Link","LinkExternal","MetamaskIcon","Skeleton","Text","TimerIcon","useTooltip","BASE_BSC_SCAN_URL","getBscScanLink","useBlock","useCakeVault","BigNumber","useTranslation","Balance","CompoundingPoolTag","ManualPoolTag","getAddress","getCakeVaultAddress","registerToken","getBalanceNumber","getFullDisplayBalance","getPoolBlockInfo","Harvest","Stake","Apr","expandAnimation","collapseAnimation","StyledActionPanel","div","expanded","theme","colors","dropdown","mediaQueries","lg","ActionContainer","sm","InfoSection","ActionPanel","account","pool","userDataLoaded","breakpoints","sousId","stakingToken","earningToken","totalStaked","startBlock","endBlock","stakingLimit","contractAddress","isAutoVault","t","poolContractAddress","cakeVaultContractAddress","currentBlock","isXs","isSm","isMd","showSubtitle","shouldShowBlockCountdown","blocksUntilStart","blocksRemaining","hasPoolStarted","blocksToDisplay","isMetaMaskInScope","window","ethereum","isMetaMask","tokenAddress","address","totalCakeInVault","fees","performanceFee","performanceFeeAsDecimal","isManualCakePool","getTotalStakedBalance","decimals","manualCakeTotalMinusAutoVault","minus","targetRef","totalStakedTargetRef","tooltip","totalStakedTooltip","tooltipVisible","totalStakedTooltipVisible","symbol","placement","manualTooltipText","autoTooltipText","tagTargetRef","tagTooltip","tagTooltipVisible","maxStakeRow","gt","blocksRow","aprRow","totalStakedRow","gte","projectLink","toLocaleLowerCase"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,IAAiBC,SAAjB,EAA4BC,GAA5B,QAAuC,mBAAvC;AACA,SACEC,GADF,EAEEC,MAFF,EAGEC,IAHF,EAIEC,QAJF,EAKEC,IALF,EAMEC,YANF,EAOEC,YAPF,EAQEC,QARF,EASEC,IATF,EAUEC,SAVF,EAWEC,UAXF,QAYO,oBAZP;AAaA,SAASC,iBAAT,QAAkC,QAAlC;AACA,SAASC,cAAT,QAA+B,OAA/B;AACA,SAASC,QAAT,QAAyB,mBAAzB;AACA,SAASC,YAAT,QAA6B,mBAA7B;AACA,OAAOC,SAAP,MAAsB,cAAtB;AAEA,SAASC,cAAT,QAA+B,uBAA/B;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,SAASC,kBAAT,EAA6BC,aAA7B,QAAkD,iBAAlD;AACA,SAASC,UAAT,EAAqBC,mBAArB,QAAgD,sBAAhD;AACA,SAASC,aAAT,QAA8B,cAA9B;AACA,SAASC,gBAAT,EAA2BC,qBAA3B,QAAwD,qBAAxD;AACA,SAASC,gBAAT,QAAiC,qBAAjC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,GAAP,MAAgB,QAAhB;;;AAEA,MAAMC,eAAe,GAAG/B,SAAU;AAClC;AACA;AACA;AACA;AACA;AACA;AACA,CAPA;AASA,MAAMgC,iBAAiB,GAAGhC,SAAU;AACpC;AACA;AACA;AACA;AACA;AACA;AACA,CAPA;AASA,MAAMiC,iBAAiB,GAAGlC,MAAM,CAACmC,GAA2B;AAC5D,eAAe,CAAC;AAAEC,EAAAA;AAAF,CAAD,KACXA,QAAQ,GACJlC,GAAI;AACZ,YAAY8B,eAAgB;AAC5B,SAHY,GAIJ9B,GAAI;AACZ,YAAY+B,iBAAkB;AAC9B,SAAU;AACV;AACA,gBAAgB,CAAC;AAAEI,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,MAAN,CAAaC,QAAS;AACrD;AACA;AACA;AACA;AACA;AACA,IAAI,CAAC;AAAEF,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACG,YAAN,CAAmBC,EAAG;AACzC;AACA;AACA;AACA,CApBA;KAAMP,iB;AAsBN,MAAMQ,eAAe,GAAG1C,MAAM,CAACmC,GAAI;AACnC;AACA;AACA;AACA,IAAI,CAAC;AAAEE,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACG,YAAN,CAAmBG,EAAG;AACzC;AACA;AACA;AACA;AACA;AACA,CAVA;MAAMD,e;AA4BN,MAAME,WAAW,GAAG5C,MAAM,CAACG,GAAD,CAAM;AAChC;AACA;AACA;AACA;AACA,IAAI,CAAC;AAAEkC,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACG,YAAN,CAAmBC,EAAG;AACzC;AACA;AACA;AACA,CATA;MAAMG,W;;AAWN,MAAMC,WAAuC,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,IAAX;AAAiBC,EAAAA,cAAjB;AAAiCZ,EAAAA,QAAjC;AAA2Ca,EAAAA;AAA3C,CAAD,KAA8D;AAAA;;AAAA;;AAC5G,QAAM;AACJC,IAAAA,MADI;AAEJC,IAAAA,YAFI;AAGJC,IAAAA,YAHI;AAIJC,IAAAA,WAJI;AAKJC,IAAAA,UALI;AAMJC,IAAAA,QANI;AAOJC,IAAAA,YAPI;AAQJC,IAAAA,eARI;AASJC,IAAAA;AATI,MAUFX,IAVJ;AAWA,QAAM;AAAEY,IAAAA;AAAF,MAAQxC,cAAc,EAA5B;AACA,QAAMyC,mBAAmB,GAAGrC,UAAU,CAACkC,eAAD,CAAtC;AACA,QAAMI,wBAAwB,GAAGrC,mBAAmB,EAApD;AACA,QAAM;AAAEsC,IAAAA;AAAF,MAAmB9C,QAAQ,EAAjC;AACA,QAAM;AAAE+C,IAAAA,IAAF;AAAQC,IAAAA,IAAR;AAAcC,IAAAA;AAAd,MAAuBhB,WAA7B;AACA,QAAMiB,YAAY,GAAG,CAACH,IAAI,IAAIC,IAAT,KAAkBd,MAAM,KAAK,CAAlD;AAEA,QAAM;AAAEiB,IAAAA,wBAAF;AAA4BC,IAAAA,gBAA5B;AAA8CC,IAAAA,eAA9C;AAA+DC,IAAAA,cAA/D;AAA+EC,IAAAA;AAA/E,MACJ3C,gBAAgB,CAACmB,IAAD,EAAOe,YAAP,CADlB;AAGA,QAAMU,iBAAiB,GAAG,CAAC,sBAACC,MAAM,CAACC,QAAR,qDAAC,iBAAiBC,UAAlB,CAA3B;AACA,QAAMC,YAAY,GAAGxB,YAAY,CAACyB,OAAb,GAAuBtD,UAAU,CAAC6B,YAAY,CAACyB,OAAd,CAAjC,GAA0D,EAA/E;AAEA,QAAM;AACJC,IAAAA,gBADI;AAEJC,IAAAA,IAAI,EAAE;AAAEC,MAAAA;AAAF;AAFF,MAGF/D,YAAY,EAHhB;AAKA,QAAMgE,uBAAuB,GAAGD,cAAc,IAAIA,cAAc,GAAG,GAAnE;AACA,QAAME,gBAAgB,GAAGhC,MAAM,KAAK,CAApC;;AAEA,QAAMiC,qBAAqB,GAAG,MAAM;AAClC,QAAIzB,WAAJ,EAAiB;AACf,aAAOhC,gBAAgB,CAACoD,gBAAD,EAAmB3B,YAAY,CAACiC,QAAhC,CAAvB;AACD;;AACD,QAAIF,gBAAJ,EAAsB;AACpB,YAAMG,6BAA6B,GAAG,IAAInE,SAAJ,CAAcmC,WAAd,EAA2BiC,KAA3B,CAAiCR,gBAAjC,CAAtC;AACA,aAAOpD,gBAAgB,CAAC2D,6BAAD,EAAgClC,YAAY,CAACiC,QAA7C,CAAvB;AACD;;AACD,WAAO1D,gBAAgB,CAAC2B,WAAD,EAAcF,YAAY,CAACiC,QAA3B,CAAvB;AACD,GATD;;AAWA,QAAM;AACJG,IAAAA,SAAS,EAAEC,oBADP;AAEJC,IAAAA,OAAO,EAAEC,kBAFL;AAGJC,IAAAA,cAAc,EAAEC;AAHZ,MAIF/E,UAAU,CAAC8C,CAAC,CAAC,8CAAD,EAAiD;AAAEkC,IAAAA,MAAM,EAAE1C,YAAY,CAAC0C;AAAvB,GAAjD,CAAF,EAAqF;AACjGC,IAAAA,SAAS,EAAE;AADsF,GAArF,CAJd;AAQA,QAAMC,iBAAiB,GAAGpC,CAAC,CAAC,sEAAD,CAA3B;AACA,QAAMqC,eAAe,GAAGrC,CAAC,CACvB,qGADuB,CAAzB;AAIA,QAAM;AACJ4B,IAAAA,SAAS,EAAEU,YADP;AAEJR,IAAAA,OAAO,EAAES,UAFL;AAGJP,IAAAA,cAAc,EAAEQ;AAHZ,MAIFtF,UAAU,CAAC6C,WAAW,GAAGsC,eAAH,GAAqBD,iBAAjC,EAAoD;AAChED,IAAAA,SAAS,EAAE;AADqD,GAApD,CAJd;AAQA,QAAMM,WAAW,GAAG5C,YAAY,CAAC6C,EAAb,CAAgB,CAAhB,iBAClB,QAAC,IAAD;AAAM,IAAA,EAAE,EAAC,KAAT;AAAe,IAAA,cAAc,EAAC,eAA9B;AAAA,4BACE,QAAC,IAAD;AAAA,iBAAO1C,CAAC,CAAC,qBAAD,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,IAAD;AAAA,gBAAQ,GAAEhC,qBAAqB,CAAC6B,YAAD,EAAeL,YAAY,CAACiC,QAA5B,EAAsC,CAAtC,CAAyC,IAAGjC,YAAY,CAAC0C,MAAO;AAA/F;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADkB,GAKhB,IALJ;AAOA,QAAMS,SAAS,GACbjC,eAAe,IAAID,gBAAnB,gBACE,QAAC,IAAD;AAAM,IAAA,EAAE,EAAC,KAAT;AAAe,IAAA,cAAc,EAAC,eAA9B;AAAA,4BACE,QAAC,IAAD;AAAA,iBAAOE,cAAc,GAAGX,CAAC,CAAC,SAAD,CAAJ,GAAkBA,CAAC,CAAC,WAAD,CAAxC;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,IAAD;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,QAAQ,MAAd;AAAe,QAAA,IAAI,EAAE5C,cAAc,CAACuD,cAAc,GAAGf,QAAH,GAAcD,UAA7B,EAAyC,WAAzC,CAAnC;AAAA,gCACE,QAAC,OAAD;AAAS,UAAA,QAAQ,EAAC,MAAlB;AAAyB,UAAA,KAAK,EAAEiB,eAAhC;AAAiD,UAAA,QAAQ,EAAE,CAA3D;AAA8D,UAAA,KAAK,EAAC;AAApE;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,IAAD;AAAM,UAAA,EAAE,EAAC,KAAT;AAAe,UAAA,KAAK,EAAC,SAArB;AAA+B,UAAA,aAAa,EAAC,WAA7C;AAAA,oBACGZ,CAAC,CAAC,QAAD;AADJ;AAAA;AAAA;AAAA;AAAA,gBAFF,eAKE,QAAC,SAAD;AAAW,UAAA,EAAE,EAAC,KAAd;AAAoB,UAAA,KAAK,EAAC;AAA1B;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,gBAcE,QAAC,QAAD;AAAU,IAAA,KAAK,EAAC,MAAhB;AAAuB,IAAA,MAAM,EAAC;AAA9B;AAAA;AAAA;AAAA;AAAA,UAfJ;;AAkBA,QAAM4C,MAAM,gBACV,QAAC,IAAD;AAAM,IAAA,cAAc,EAAC,eAArB;AAAqC,IAAA,UAAU,EAAC,QAAhD;AAAyD,IAAA,EAAE,EAAC,KAA5D;AAAA,4BACE,QAAC,IAAD;AAAA,iBAAO7C,WAAW,GAAGC,CAAC,CAAC,KAAD,CAAJ,GAAcA,CAAC,CAAC,KAAD,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,GAAD;AAAK,MAAA,IAAI,EAAEZ,IAAX;AAAiB,MAAA,QAAQ,MAAzB;AAA0B,MAAA,cAAc,EAAEW,WAAW,GAAGuB,uBAAH,GAA6B;AAAlF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;;AAOA,QAAMuB,cAAc,gBAClB,QAAC,IAAD;AAAM,IAAA,cAAc,EAAC,eAArB;AAAqC,IAAA,UAAU,EAAC,QAAhD;AAAyD,IAAA,EAAE,EAAC,KAA5D;AAAA,4BACE,QAAC,IAAD;AAAM,MAAA,QAAQ,EAAE,CAAC,MAAD,EAAS,MAAT,CAAhB;AAAA,iBAAmC7C,CAAC,CAAC,cAAD,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,IAAD;AAAM,MAAA,UAAU,EAAC,QAAjB;AAAA,iBACGN,WAAW,IAAIA,WAAW,CAACoD,GAAZ,CAAgB,CAAhB,CAAf,gBACC;AAAA,gCACE,QAAC,OAAD;AAAS,UAAA,QAAQ,EAAC,MAAlB;AAAyB,UAAA,KAAK,EAAEtB,qBAAqB,EAArD;AAAyD,UAAA,QAAQ,EAAE,CAAnE;AAAsE,UAAA,IAAI,EAAG,IAAGhC,YAAY,CAAC0C,MAAO;AAApG;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAM,UAAA,GAAG,EAAEL,oBAAX;AAAA,iCACE,QAAC,QAAD;AAAU,YAAA,KAAK,EAAC,YAAhB;AAA6B,YAAA,KAAK,EAAC,MAAnC;AAA0C,YAAA,EAAE,EAAC;AAA7C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA,sBADD,gBAQC,QAAC,QAAD;AAAU,QAAA,KAAK,EAAC,MAAhB;AAAuB,QAAA,MAAM,EAAC;AAA9B;AAAA;AAAA;AAAA;AAAA,cATJ,EAWGI,yBAAyB,IAAIF,kBAXhC;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;;AAmBA,sBACE,QAAC,iBAAD;AAAmB,IAAA,QAAQ,EAAEtD,QAA7B;AAAA,4BACE,QAAC,WAAD;AAAA,iBACGgE,WADH,EAEG,CAACrC,IAAI,IAAIC,IAAT,KAAkBuC,MAFrB,EAGG,CAACxC,IAAI,IAAIC,IAAR,IAAgBC,IAAjB,KAA0BuC,cAH7B,EAIGrC,wBAAwB,IAAImC,SAJ/B,eAKE,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,KAAT;AAAe,QAAA,cAAc,EAAE,CAAC,UAAD,EAAa,UAAb,EAAyB,YAAzB,CAA/B;AAAA,+BACE,QAAC,YAAD;AAAc,UAAA,IAAI,EAAG,kCAAiC/E,UAAU,CAAC6B,YAAY,CAACyB,OAAd,CAAuB,EAAvF;AAA0F,UAAA,IAAI,EAAE,KAAhG;AAAA,oBACGlB,CAAC,CAAC,gBAAD;AADJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cALF,eAUE,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,KAAT;AAAe,QAAA,cAAc,EAAE,CAAC,UAAD,EAAa,UAAb,EAAyB,YAAzB,CAA/B;AAAA,+BACE,QAAC,YAAD;AAAc,UAAA,IAAI,EAAEP,YAAY,CAACsD,WAAjC;AAA8C,UAAA,IAAI,EAAE,KAApD;AAAA,oBACG/C,CAAC,CAAC,mBAAD;AADJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAVF,EAeGC,mBAAmB,iBAClB,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,KAAT;AAAe,QAAA,cAAc,EAAE,CAAC,UAAD,EAAa,UAAb,EAAyB,YAAzB,CAA/B;AAAA,+BACE,QAAC,YAAD;AACE,UAAA,IAAI,EAAG,GAAE9C,iBAAkB,YAAW4C,WAAW,GAAGG,wBAAH,GAA8BD,mBAAoB,EADrG;AAEE,UAAA,IAAI,EAAE,KAFR;AAAA,oBAIGD,CAAC,CAAC,eAAD;AAJJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAhBJ,EAyBGb,OAAO,IAAI0B,iBAAX,IAAgCI,YAAhC,iBACC,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,KAAT;AAAe,QAAA,cAAc,EAAE,CAAC,UAAD,EAAa,UAAb,EAAyB,YAAzB,CAA/B;AAAA,+BACE,QAAC,MAAD;AACE,UAAA,OAAO,EAAC,MADV;AAEE,UAAA,CAAC,EAAC,GAFJ;AAGE,UAAA,MAAM,EAAC,MAHT;AAIE,UAAA,OAAO,EAAE,MAAMnD,aAAa,CAACmD,YAAD,EAAexB,YAAY,CAACyC,MAA5B,EAAoCzC,YAAY,CAACgC,QAAjD,CAJ9B;AAAA,kCAME,QAAC,IAAD;AAAM,YAAA,KAAK,EAAC,SAAZ;AAAA,sBAAuBzB,CAAC,CAAC,iBAAD;AAAxB;AAAA;AAAA;AAAA;AAAA,kBANF,eAOE,QAAC,YAAD;AAAc,YAAA,EAAE,EAAC;AAAjB;AAAA;AAAA;AAAA;AAAA,kBAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cA1BJ,EAsCGD,WAAW,gBAAG,QAAC,kBAAD;AAAA;AAAA;AAAA;AAAA,cAAH,gBAA4B,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,cAtC1C,EAuCGyC,iBAAiB,IAAID,UAvCxB,eAwCE;AAAM,QAAA,GAAG,EAAED,YAAX;AAAA,+BACE,QAAC,QAAD;AAAU,UAAA,EAAE,EAAC,KAAb;AAAmB,UAAA,KAAK,EAAC,MAAzB;AAAgC,UAAA,MAAM,EAAC,MAAvC;AAA8C,UAAA,KAAK,EAAC;AAApD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAxCF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eA6CE,QAAC,eAAD;AAAA,iBACG/B,YAAY,iBACX,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,KAAT;AAAe,QAAA,EAAE,EAAC,MAAlB;AAAyB,QAAA,KAAK,EAAC,YAA/B;AAAA,kBACGR,WAAW,GAAGC,CAAC,CAAC,qBAAD,CAAJ,GAA+B,GAAEA,CAAC,CAAC,MAAD,CAAS,SAAQA,CAAC,CAAC,OAAD,CAAD,CAAWgD,iBAAX,EAA+B;AADhG;AAAA;AAAA;AAAA;AAAA,cAFJ,eAME,QAAC,OAAD,OAAa5D,IAAb;AAAmB,QAAA,cAAc,EAAEC;AAAnC;AAAA;AAAA;AAAA;AAAA,cANF,eAOE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAED,IAAb;AAAmB,QAAA,cAAc,EAAEC;AAAnC;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YA7CF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyDD,CA7KD;;GAAMH,W;UAYU1B,c,EAGWH,Q,EAarBC,Y,EAoBAJ,U,EAaAA,U;;;MA7DAgC,W;AA+KN,eAAeA,WAAf","sourcesContent":["import React from 'react'\r\nimport styled, { keyframes, css } from 'styled-components'\r\nimport {\r\n  Box,\r\n  Button,\r\n  Flex,\r\n  HelpIcon,\r\n  Link,\r\n  LinkExternal,\r\n  MetamaskIcon,\r\n  Skeleton,\r\n  Text,\r\n  TimerIcon,\r\n  useTooltip,\r\n} from '@pancakeswap/uikit'\r\nimport { BASE_BSC_SCAN_URL } from 'config'\r\nimport { getBscScanLink } from 'utils'\r\nimport { useBlock } from 'state/block/hooks'\r\nimport { useCakeVault } from 'state/pools/hooks'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Pool } from 'state/types'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport Balance from 'components/Balance'\r\nimport { CompoundingPoolTag, ManualPoolTag } from 'components/Tags'\r\nimport { getAddress, getCakeVaultAddress } from 'utils/addressHelpers'\r\nimport { registerToken } from 'utils/wallet'\r\nimport { getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\r\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\r\nimport Harvest from './Harvest'\r\nimport Stake from './Stake'\r\nimport Apr from '../Apr'\r\n\r\nconst expandAnimation = keyframes`\r\n  from {\r\n    max-height: 0px;\r\n  }\r\n  to {\r\n    max-height: 700px;\r\n  }\r\n`\r\n\r\nconst collapseAnimation = keyframes`\r\n  from {\r\n    max-height: 700px;\r\n  }\r\n  to {\r\n    max-height: 0px;\r\n  }\r\n`\r\n\r\nconst StyledActionPanel = styled.div<{ expanded: boolean }>`\r\n  animation: ${({ expanded }) =>\r\n    expanded\r\n      ? css`\r\n          ${expandAnimation} 300ms linear forwards\r\n        `\r\n      : css`\r\n          ${collapseAnimation} 300ms linear forwards\r\n        `};\r\n  overflow: hidden;\r\n  background: ${({ theme }) => theme.colors.dropdown};\r\n  display: flex;\r\n  flex-direction: column-reverse;\r\n  justify-content: center;\r\n  padding: 12px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    flex-direction: row;\r\n    padding: 16px 32px;\r\n  }\r\n`\r\n\r\nconst ActionContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    flex-direction: row;\r\n    align-items: center;\r\n    flex-grow: 1;\r\n    flex-basis: 0;\r\n  }\r\n`\r\n\r\ntype MediaBreakpoints = {\r\n  isXs: boolean\r\n  isSm: boolean\r\n  isMd: boolean\r\n  isLg: boolean\r\n  isXl: boolean\r\n}\r\n\r\ninterface ActionPanelProps {\r\n  account: string\r\n  pool: Pool\r\n  userDataLoaded: boolean\r\n  expanded: boolean\r\n  breakpoints: MediaBreakpoints\r\n}\r\n\r\nconst InfoSection = styled(Box)`\r\n  flex-grow: 0;\r\n  flex-shrink: 0;\r\n  flex-basis: auto;\r\n  padding: 8px 8px;\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    padding: 0;\r\n    flex-basis: 230px;\r\n  }\r\n`\r\n\r\nconst ActionPanel: React.FC<ActionPanelProps> = ({ account, pool, userDataLoaded, expanded, breakpoints }) => {\r\n  const {\r\n    sousId,\r\n    stakingToken,\r\n    earningToken,\r\n    totalStaked,\r\n    startBlock,\r\n    endBlock,\r\n    stakingLimit,\r\n    contractAddress,\r\n    isAutoVault,\r\n  } = pool\r\n  const { t } = useTranslation()\r\n  const poolContractAddress = getAddress(contractAddress)\r\n  const cakeVaultContractAddress = getCakeVaultAddress()\r\n  const { currentBlock } = useBlock()\r\n  const { isXs, isSm, isMd } = breakpoints\r\n  const showSubtitle = (isXs || isSm) && sousId === 0\r\n\r\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\r\n    getPoolBlockInfo(pool, currentBlock)\r\n\r\n  const isMetaMaskInScope = !!window.ethereum?.isMetaMask\r\n  const tokenAddress = earningToken.address ? getAddress(earningToken.address) : ''\r\n\r\n  const {\r\n    totalCakeInVault,\r\n    fees: { performanceFee },\r\n  } = useCakeVault()\r\n\r\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\r\n  const isManualCakePool = sousId === 0\r\n\r\n  const getTotalStakedBalance = () => {\r\n    if (isAutoVault) {\r\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\r\n    }\r\n    if (isManualCakePool) {\r\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\r\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\r\n    }\r\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\r\n  }\r\n\r\n  const {\r\n    targetRef: totalStakedTargetRef,\r\n    tooltip: totalStakedTooltip,\r\n    tooltipVisible: totalStakedTooltipVisible,\r\n  } = useTooltip(t('Total amount of %symbol% staked in this pool', { symbol: stakingToken.symbol }), {\r\n    placement: 'bottom',\r\n  })\r\n\r\n  const manualTooltipText = t('You must harvest and compound your earnings from this pool manually.')\r\n  const autoTooltipText = t(\r\n    'Any funds you stake in this pool will be automagically harvested and restaked (compounded) for you.',\r\n  )\r\n\r\n  const {\r\n    targetRef: tagTargetRef,\r\n    tooltip: tagTooltip,\r\n    tooltipVisible: tagTooltipVisible,\r\n  } = useTooltip(isAutoVault ? autoTooltipText : manualTooltipText, {\r\n    placement: 'bottom-start',\r\n  })\r\n\r\n  const maxStakeRow = stakingLimit.gt(0) ? (\r\n    <Flex mb=\"8px\" justifyContent=\"space-between\">\r\n      <Text>{t('Max. stake per user')}:</Text>\r\n      <Text>{`${getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0)} ${stakingToken.symbol}`}</Text>\r\n    </Flex>\r\n  ) : null\r\n\r\n  const blocksRow =\r\n    blocksRemaining || blocksUntilStart ? (\r\n      <Flex mb=\"8px\" justifyContent=\"space-between\">\r\n        <Text>{hasPoolStarted ? t('Ends in') : t('Starts in')}:</Text>\r\n        <Flex>\r\n          <Link external href={getBscScanLink(hasPoolStarted ? endBlock : startBlock, 'countdown')}>\r\n            <Balance fontSize=\"16px\" value={blocksToDisplay} decimals={0} color=\"primary\" />\r\n            <Text ml=\"4px\" color=\"primary\" textTransform=\"lowercase\">\r\n              {t('Blocks')}\r\n            </Text>\r\n            <TimerIcon ml=\"4px\" color=\"primary\" />\r\n          </Link>\r\n        </Flex>\r\n      </Flex>\r\n    ) : (\r\n      <Skeleton width=\"56px\" height=\"16px\" />\r\n    )\r\n\r\n  const aprRow = (\r\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"8px\">\r\n      <Text>{isAutoVault ? t('APY') : t('APR')}:</Text>\r\n      <Apr pool={pool} showIcon performanceFee={isAutoVault ? performanceFeeAsDecimal : 0} />\r\n    </Flex>\r\n  )\r\n\r\n  const totalStakedRow = (\r\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"8px\">\r\n      <Text maxWidth={['50px', '100%']}>{t('Total staked')}:</Text>\r\n      <Flex alignItems=\"center\">\r\n        {totalStaked && totalStaked.gte(0) ? (\r\n          <>\r\n            <Balance fontSize=\"16px\" value={getTotalStakedBalance()} decimals={0} unit={` ${stakingToken.symbol}`} />\r\n            <span ref={totalStakedTargetRef}>\r\n              <HelpIcon color=\"textSubtle\" width=\"20px\" ml=\"4px\" />\r\n            </span>\r\n          </>\r\n        ) : (\r\n          <Skeleton width=\"56px\" height=\"16px\" />\r\n        )}\r\n        {totalStakedTooltipVisible && totalStakedTooltip}\r\n      </Flex>\r\n    </Flex>\r\n  )\r\n\r\n  return (\r\n    <StyledActionPanel expanded={expanded}>\r\n      <InfoSection>\r\n        {maxStakeRow}\r\n        {(isXs || isSm) && aprRow}\r\n        {(isXs || isSm || isMd) && totalStakedRow}\r\n        {shouldShowBlockCountdown && blocksRow}\r\n        <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\r\n          <LinkExternal href={`https://pancakeswap.info/token/${getAddress(earningToken.address)}`} bold={false}>\r\n            {t('See Token Info')}\r\n          </LinkExternal>\r\n        </Flex>\r\n        <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\r\n          <LinkExternal href={earningToken.projectLink} bold={false}>\r\n            {t('View Project Site')}\r\n          </LinkExternal>\r\n        </Flex>\r\n        {poolContractAddress && (\r\n          <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\r\n            <LinkExternal\r\n              href={`${BASE_BSC_SCAN_URL}/address/${isAutoVault ? cakeVaultContractAddress : poolContractAddress}`}\r\n              bold={false}\r\n            >\r\n              {t('View Contract')}\r\n            </LinkExternal>\r\n          </Flex>\r\n        )}\r\n        {account && isMetaMaskInScope && tokenAddress && (\r\n          <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\r\n            <Button\r\n              variant=\"text\"\r\n              p=\"0\"\r\n              height=\"auto\"\r\n              onClick={() => registerToken(tokenAddress, earningToken.symbol, earningToken.decimals)}\r\n            >\r\n              <Text color=\"primary\">{t('Add to Metamask')}</Text>\r\n              <MetamaskIcon ml=\"4px\" />\r\n            </Button>\r\n          </Flex>\r\n        )}\r\n        {isAutoVault ? <CompoundingPoolTag /> : <ManualPoolTag />}\r\n        {tagTooltipVisible && tagTooltip}\r\n        <span ref={tagTargetRef}>\r\n          <HelpIcon ml=\"4px\" width=\"20px\" height=\"20px\" color=\"textSubtle\" />\r\n        </span>\r\n      </InfoSection>\r\n      <ActionContainer>\r\n        {showSubtitle && (\r\n          <Text mt=\"4px\" mb=\"16px\" color=\"textSubtle\">\r\n            {isAutoVault ? t('Automatic restaking') : `${t('Earn')} CAKE ${t('Stake').toLocaleLowerCase()} CAKE`}\r\n          </Text>\r\n        )}\r\n        <Harvest {...pool} userDataLoaded={userDataLoaded} />\r\n        <Stake pool={pool} userDataLoaded={userDataLoaded} />\r\n      </ActionContainer>\r\n    </StyledActionPanel>\r\n  )\r\n}\r\n\r\nexport default ActionPanel\r\n"]},"metadata":{},"sourceType":"module"}