{"ast":null,"code":"/* eslint-disable import/prefer-default-export */import BigNumber from'bignumber.js';import pools from'config/constants/pools';import sousChefV2 from'config/abi/sousChefV2.json';import multicall from'../multicall';import{simpleRpcProvider}from'../providers';import{getAddress}from'../addressHelpers';/**\r\n * Returns the total number of pools that were active at a given block\r\n */export const getActivePools=async block=>{const eligiblePools=pools.filter(pool=>pool.sousId!==0).filter(pool=>pool.isFinished===false||pool.isFinished===undefined);const blockNumber=block||(await simpleRpcProvider.getBlockNumber());const startBlockCalls=eligiblePools.map(_ref=>{let{contractAddress}=_ref;return{address:getAddress(contractAddress),name:'startBlock'};});const endBlockCalls=eligiblePools.map(_ref2=>{let{contractAddress}=_ref2;return{address:getAddress(contractAddress),name:'bonusEndBlock'};});const startBlocks=await multicall(sousChefV2,startBlockCalls);const endBlocks=await multicall(sousChefV2,endBlockCalls);return eligiblePools.reduce((accum,poolCheck,index)=>{const startBlock=startBlocks[index]?new BigNumber(startBlocks[index]):null;const endBlock=endBlocks[index]?new BigNumber(endBlocks[index]):null;if(!startBlock||!endBlock){return accum;}if(startBlock.gte(blockNumber)||endBlock.lte(blockNumber)){return accum;}return[...accum,poolCheck];},[]);};","map":{"version":3,"names":["BigNumber","pools","sousChefV2","multicall","simpleRpcProvider","getAddress","getActivePools","block","eligiblePools","filter","pool","sousId","isFinished","undefined","blockNumber","getBlockNumber","startBlockCalls","map","_ref","contractAddress","address","name","endBlockCalls","_ref2","startBlocks","endBlocks","reduce","accum","poolCheck","index","startBlock","endBlock","gte","lte"],"sources":["C:/Users/frkul/Documents/swapUI_pancake-frontend/src/utils/calls/pools.ts"],"sourcesContent":["/* eslint-disable import/prefer-default-export */\r\nimport BigNumber from 'bignumber.js'\r\nimport pools from 'config/constants/pools'\r\nimport sousChefV2 from 'config/abi/sousChefV2.json'\r\nimport multicall from '../multicall'\r\nimport { simpleRpcProvider } from '../providers'\r\nimport { getAddress } from '../addressHelpers'\r\n\r\n/**\r\n * Returns the total number of pools that were active at a given block\r\n */\r\nexport const getActivePools = async (block?: number) => {\r\n  const eligiblePools = pools\r\n    .filter((pool) => pool.sousId !== 0)\r\n    .filter((pool) => pool.isFinished === false || pool.isFinished === undefined)\r\n  const blockNumber = block || (await simpleRpcProvider.getBlockNumber())\r\n  const startBlockCalls = eligiblePools.map(({ contractAddress }) => ({\r\n    address: getAddress(contractAddress),\r\n    name: 'startBlock',\r\n  }))\r\n  const endBlockCalls = eligiblePools.map(({ contractAddress }) => ({\r\n    address: getAddress(contractAddress),\r\n    name: 'bonusEndBlock',\r\n  }))\r\n  const startBlocks = await multicall(sousChefV2, startBlockCalls)\r\n  const endBlocks = await multicall(sousChefV2, endBlockCalls)\r\n\r\n  return eligiblePools.reduce((accum, poolCheck, index) => {\r\n    const startBlock = startBlocks[index] ? new BigNumber(startBlocks[index]) : null\r\n    const endBlock = endBlocks[index] ? new BigNumber(endBlocks[index]) : null\r\n\r\n    if (!startBlock || !endBlock) {\r\n      return accum\r\n    }\r\n\r\n    if (startBlock.gte(blockNumber) || endBlock.lte(blockNumber)) {\r\n      return accum\r\n    }\r\n\r\n    return [...accum, poolCheck]\r\n  }, [])\r\n}\r\n"],"mappings":"AAAA,iDACA,MAAO,CAAAA,SAAS,KAAM,cAAc,CACpC,MAAO,CAAAC,KAAK,KAAM,wBAAwB,CAC1C,MAAO,CAAAC,UAAU,KAAM,4BAA4B,CACnD,MAAO,CAAAC,SAAS,KAAM,cAAc,CACpC,OAASC,iBAAiB,KAAQ,cAAc,CAChD,OAASC,UAAU,KAAQ,mBAAmB,CAE9C;AACA;AACA,GACA,MAAO,MAAM,CAAAC,cAAc,CAAG,KAAO,CAAAC,KAAc,EAAK,CACtD,KAAM,CAAAC,aAAa,CAAGP,KAAK,CACxBQ,MAAM,CAAEC,IAAI,EAAKA,IAAI,CAACC,MAAM,GAAK,CAAC,CAAC,CACnCF,MAAM,CAAEC,IAAI,EAAKA,IAAI,CAACE,UAAU,GAAK,KAAK,EAAIF,IAAI,CAACE,UAAU,GAAKC,SAAS,CAAC,CAC/E,KAAM,CAAAC,WAAW,CAAGP,KAAK,GAAK,KAAM,CAAAH,iBAAiB,CAACW,cAAc,CAAC,CAAC,CAAC,CACvE,KAAM,CAAAC,eAAe,CAAGR,aAAa,CAACS,GAAG,CAACC,IAAA,MAAC,CAAEC,eAAgB,CAAC,CAAAD,IAAA,OAAM,CAClEE,OAAO,CAAEf,UAAU,CAACc,eAAe,CAAC,CACpCE,IAAI,CAAE,YACR,CAAC,EAAC,CAAC,CACH,KAAM,CAAAC,aAAa,CAAGd,aAAa,CAACS,GAAG,CAACM,KAAA,MAAC,CAAEJ,eAAgB,CAAC,CAAAI,KAAA,OAAM,CAChEH,OAAO,CAAEf,UAAU,CAACc,eAAe,CAAC,CACpCE,IAAI,CAAE,eACR,CAAC,EAAC,CAAC,CACH,KAAM,CAAAG,WAAW,CAAG,KAAM,CAAArB,SAAS,CAACD,UAAU,CAAEc,eAAe,CAAC,CAChE,KAAM,CAAAS,SAAS,CAAG,KAAM,CAAAtB,SAAS,CAACD,UAAU,CAAEoB,aAAa,CAAC,CAE5D,MAAO,CAAAd,aAAa,CAACkB,MAAM,CAAC,CAACC,KAAK,CAAEC,SAAS,CAAEC,KAAK,GAAK,CACvD,KAAM,CAAAC,UAAU,CAAGN,WAAW,CAACK,KAAK,CAAC,CAAG,GAAI,CAAA7B,SAAS,CAACwB,WAAW,CAACK,KAAK,CAAC,CAAC,CAAG,IAAI,CAChF,KAAM,CAAAE,QAAQ,CAAGN,SAAS,CAACI,KAAK,CAAC,CAAG,GAAI,CAAA7B,SAAS,CAACyB,SAAS,CAACI,KAAK,CAAC,CAAC,CAAG,IAAI,CAE1E,GAAI,CAACC,UAAU,EAAI,CAACC,QAAQ,CAAE,CAC5B,MAAO,CAAAJ,KAAK,CACd,CAEA,GAAIG,UAAU,CAACE,GAAG,CAAClB,WAAW,CAAC,EAAIiB,QAAQ,CAACE,GAAG,CAACnB,WAAW,CAAC,CAAE,CAC5D,MAAO,CAAAa,KAAK,CACd,CAEA,MAAO,CAAC,GAAGA,KAAK,CAAEC,SAAS,CAAC,CAC9B,CAAC,CAAE,EAAE,CAAC,CACR,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}