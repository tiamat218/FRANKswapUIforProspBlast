{"ast":null,"code":"import _taggedTemplateLiteral from\"C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject;import React from'react';import styled from'styled-components';import{Flex,TrophyGoldIcon}from'@pancakeswap/uikit';import{useGetIsClaimable}from'state/hooks';import{useTranslation}from'contexts/Localization';import CollectWinningsButton from'../CollectWinningsButton';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Wrapper=styled(Flex)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  background-color: \",\";\\n  left: 0;\\n  position: absolute;\\n  width: 100%;\\n  z-index: 30;\\n\\n  \",\"\\n\"])),_ref=>{let{theme}=_ref;return theme.colors.secondary;},_ref2=>{let{isBottom}=_ref2;return isBottom?\"\\n      border-radius: 0 0 16px 16px;\\n      bottom: 0;\\n    \":\"\\n      top: 37px; // Card header height\\n    \";});const CollectWinningsOverlay=_ref3=>{let{epoch,payout,betAmount,isBottom=false,...props}=_ref3;const{t}=useTranslation();const isClaimable=useGetIsClaimable(epoch);if(!isClaimable){return null;}return/*#__PURE__*/_jsxs(Wrapper,{alignItems:\"center\",p:\"16px\",isBottom:isBottom,...props,children:[/*#__PURE__*/_jsx(TrophyGoldIcon,{width:\"64px\",style:{flex:'none'},mr:\"8px\"}),/*#__PURE__*/_jsx(CollectWinningsButton,{payout:payout,betAmount:betAmount,epoch:epoch,hasClaimed:false,width:\"100%\",children:t('Collect Winnings')})]});};export default CollectWinningsOverlay;","map":{"version":3,"names":["React","styled","Flex","TrophyGoldIcon","useGetIsClaimable","useTranslation","CollectWinningsButton","jsx","_jsx","jsxs","_jsxs","Wrapper","_templateObject","_taggedTemplateLiteral","_ref","theme","colors","secondary","_ref2","isBottom","CollectWinningsOverlay","_ref3","epoch","payout","betAmount","props","t","isClaimable","alignItems","p","children","width","style","flex","mr","hasClaimed"],"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/views/Predictions/components/RoundCard/CollectWinningsOverlay.tsx"],"sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Flex, TrophyGoldIcon } from '@pancakeswap/uikit'\r\nimport { useGetIsClaimable } from 'state/hooks'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport CollectWinningsButton from '../CollectWinningsButton'\r\n\r\ninterface CollectWinningsOverlayProps {\r\n  epoch: number\r\n  payout: string\r\n  betAmount: string\r\n  isBottom?: boolean\r\n}\r\n\r\nconst Wrapper = styled(Flex)<{ isBottom: CollectWinningsOverlayProps['isBottom'] }>`\r\n  background-color: ${({ theme }) => theme.colors.secondary};\r\n  left: 0;\r\n  position: absolute;\r\n  width: 100%;\r\n  z-index: 30;\r\n\r\n  ${({ isBottom }) => {\r\n    return isBottom\r\n      ? `\r\n      border-radius: 0 0 16px 16px;\r\n      bottom: 0;\r\n    `\r\n      : `\r\n      top: 37px; // Card header height\r\n    `\r\n  }}\r\n`\r\n\r\nconst CollectWinningsOverlay: React.FC<CollectWinningsOverlayProps> = ({\r\n  epoch,\r\n  payout,\r\n  betAmount,\r\n  isBottom = false,\r\n  ...props\r\n}) => {\r\n  const { t } = useTranslation()\r\n  const isClaimable = useGetIsClaimable(epoch)\r\n\r\n  if (!isClaimable) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <Wrapper alignItems=\"center\" p=\"16px\" isBottom={isBottom} {...props}>\r\n      <TrophyGoldIcon width=\"64px\" style={{ flex: 'none' }} mr=\"8px\" />\r\n      <CollectWinningsButton payout={payout} betAmount={betAmount} epoch={epoch} hasClaimed={false} width=\"100%\">\r\n        {t('Collect Winnings')}\r\n      </CollectWinningsButton>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default CollectWinningsOverlay\r\n"],"mappings":"6MAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,MAAO,CAAAC,MAAM,KAAM,mBAAmB,CACtC,OAASC,IAAI,CAAEC,cAAc,KAAQ,oBAAoB,CACzD,OAASC,iBAAiB,KAAQ,aAAa,CAC/C,OAASC,cAAc,KAAQ,uBAAuB,CACtD,MAAO,CAAAC,qBAAqB,KAAM,0BAA0B,QAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAS5D,KAAM,CAAAC,OAAO,CAAGV,MAAM,CAACC,IAAI,CAAC,CAAAU,eAAA,GAAAA,eAAA,CAAAC,sBAAA,gHACNC,IAAA,MAAC,CAAEC,KAAM,CAAC,CAAAD,IAAA,OAAK,CAAAC,KAAK,CAACC,MAAM,CAACC,SAAS,GAMvDC,KAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,KAAA,CACb,MAAO,CAAAC,QAAQ,iHAOd,CACH,CAAC,CACF,CAED,KAAM,CAAAC,sBAA6D,CAAGC,KAAA,EAMhE,IANiE,CACrEC,KAAK,CACLC,MAAM,CACNC,SAAS,CACTL,QAAQ,CAAG,KAAK,CAChB,GAAGM,KACL,CAAC,CAAAJ,KAAA,CACC,KAAM,CAAEK,CAAE,CAAC,CAAGrB,cAAc,CAAC,CAAC,CAC9B,KAAM,CAAAsB,WAAW,CAAGvB,iBAAiB,CAACkB,KAAK,CAAC,CAE5C,GAAI,CAACK,WAAW,CAAE,CAChB,MAAO,KAAI,CACb,CAEA,mBACEjB,KAAA,CAACC,OAAO,EAACiB,UAAU,CAAC,QAAQ,CAACC,CAAC,CAAC,MAAM,CAACV,QAAQ,CAAEA,QAAS,IAAKM,KAAK,CAAAK,QAAA,eACjEtB,IAAA,CAACL,cAAc,EAAC4B,KAAK,CAAC,MAAM,CAACC,KAAK,CAAE,CAAEC,IAAI,CAAE,MAAO,CAAE,CAACC,EAAE,CAAC,KAAK,CAAE,CAAC,cACjE1B,IAAA,CAACF,qBAAqB,EAACiB,MAAM,CAAEA,MAAO,CAACC,SAAS,CAAEA,SAAU,CAACF,KAAK,CAAEA,KAAM,CAACa,UAAU,CAAE,KAAM,CAACJ,KAAK,CAAC,MAAM,CAAAD,QAAA,CACvGJ,CAAC,CAAC,kBAAkB,CAAC,CACD,CAAC,EACjB,CAAC,CAEd,CAAC,CAED,cAAe,CAAAN,sBAAsB","ignoreList":[]},"metadata":{},"sourceType":"module"}