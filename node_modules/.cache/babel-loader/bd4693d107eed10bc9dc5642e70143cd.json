{"ast":null,"code":"var _s = $RefreshSig$();\nimport { TokenAmount } from '@pancakeswap/sdk';\nimport { useTokenContract } from './useContract';\nimport { useSingleCallResult } from '../state/multicall/hooks';\n\n// returns undefined if input token is undefined, or fails to get token contract,\n// or contract total supply cannot be fetched\nfunction useTotalSupply(token) {\n  _s();\n  var _useSingleCallResult, _useSingleCallResult$;\n  const contract = useTokenContract(token === null || token === void 0 ? void 0 : token.address, false);\n  const totalSupply = (_useSingleCallResult = useSingleCallResult(contract, 'totalSupply')) === null || _useSingleCallResult === void 0 ? void 0 : (_useSingleCallResult$ = _useSingleCallResult.result) === null || _useSingleCallResult$ === void 0 ? void 0 : _useSingleCallResult$[0];\n  return token && totalSupply ? new TokenAmount(token, totalSupply.toString()) : undefined;\n}\n_s(useTotalSupply, \"O1q4nO3dWKIds6AT6dgyx5XxxBQ=\", false, function () {\n  return [useTokenContract, useSingleCallResult];\n});\nexport default useTotalSupply;","map":{"version":3,"names":["TokenAmount","useTokenContract","useSingleCallResult","useTotalSupply","token","_s","_useSingleCallResult","_useSingleCallResult$","contract","address","totalSupply","result","toString","undefined"],"sources":["C:/Users/Devrim/Documents/swapUIforProspBlast/src/hooks/useTotalSupply.ts"],"sourcesContent":["import { BigNumber } from '@ethersproject/bignumber'\r\nimport { Token, TokenAmount } from '@pancakeswap/sdk'\r\nimport { useTokenContract } from './useContract'\r\nimport { useSingleCallResult } from '../state/multicall/hooks'\r\n\r\n// returns undefined if input token is undefined, or fails to get token contract,\r\n// or contract total supply cannot be fetched\r\nfunction useTotalSupply(token?: Token): TokenAmount | undefined {\r\n  const contract = useTokenContract(token?.address, false)\r\n\r\n  const totalSupply: BigNumber = useSingleCallResult(contract, 'totalSupply')?.result?.[0]\r\n\r\n  return token && totalSupply ? new TokenAmount(token, totalSupply.toString()) : undefined\r\n}\r\n\r\nexport default useTotalSupply\r\n"],"mappings":";AACA,SAAgBA,WAAW,QAAQ,kBAAkB;AACrD,SAASC,gBAAgB,QAAQ,eAAe;AAChD,SAASC,mBAAmB,QAAQ,0BAA0B;;AAE9D;AACA;AACA,SAASC,cAAcA,CAACC,KAAa,EAA2B;EAAAC,EAAA;EAAA,IAAAC,oBAAA,EAAAC,qBAAA;EAC9D,MAAMC,QAAQ,GAAGP,gBAAgB,CAACG,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEK,OAAO,EAAE,KAAK,CAAC;EAExD,MAAMC,WAAsB,IAAAJ,oBAAA,GAAGJ,mBAAmB,CAACM,QAAQ,EAAE,aAAa,CAAC,cAAAF,oBAAA,wBAAAC,qBAAA,GAA5CD,oBAAA,CAA8CK,MAAM,cAAAJ,qBAAA,uBAApDA,qBAAA,CAAuD,CAAC,CAAC;EAExF,OAAOH,KAAK,IAAIM,WAAW,GAAG,IAAIV,WAAW,CAACI,KAAK,EAAEM,WAAW,CAACE,QAAQ,CAAC,CAAC,CAAC,GAAGC,SAAS;AAC1F;AAACR,EAAA,CANQF,cAAc;EAAA,QACJF,gBAAgB,EAEFC,mBAAmB;AAAA;AAKpD,eAAeC,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module"}