{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Devrim\\\\Documents\\\\swapUIforProspBlast\\\\src\\\\views\\\\Ifos\\\\components\\\\IfoFoldableCard\\\\IfoPoolCard\\\\ContributeButton.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Button, useModal } from '@pancakeswap/uikit';\nimport { getBalanceNumber } from 'utils/formatBalance';\nimport { useTranslation } from 'contexts/Localization';\nimport useTokenBalance from 'hooks/useTokenBalance';\nimport { getAddress } from 'utils/addressHelpers';\nimport useToast from 'hooks/useToast';\nimport ContributeModal from './ContributeModal';\nimport GetLpModal from './GetLpModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ContributeButton = ({\n  poolId,\n  ifo,\n  publicIfoData,\n  walletIfoData\n}) => {\n  _s();\n  const publicPoolCharacteristics = publicIfoData[poolId];\n  const userPoolCharacteristics = walletIfoData[poolId];\n  const {\n    isPendingTx,\n    amountTokenCommittedInLP\n  } = userPoolCharacteristics;\n  const {\n    limitPerUserInLP\n  } = publicPoolCharacteristics;\n  const {\n    t\n  } = useTranslation();\n  const {\n    toastSuccess\n  } = useToast();\n  const {\n    balance: userCurrencyBalance\n  } = useTokenBalance(getAddress(ifo.currency.address));\n\n  // Refetch all the data, and display a message when fetching is done\n  const handleContributeSuccess = async amount => {\n    await Promise.all([publicIfoData.fetchIfoData(), walletIfoData.fetchIfoData()]);\n    toastSuccess(t('Success!'), t('You have contributed %amount% CAKE-BNB LP tokens to this IFO!', {\n      amount: getBalanceNumber(amount)\n    }));\n  };\n  const [onPresentContributeModal] = useModal( /*#__PURE__*/_jsxDEV(ContributeModal, {\n    poolId: poolId,\n    ifo: ifo,\n    publicIfoData: publicIfoData,\n    walletIfoData: walletIfoData,\n    onSuccess: handleContributeSuccess,\n    userCurrencyBalance: userCurrencyBalance\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this), false);\n  const [onPresentGetLpModal] = useModal( /*#__PURE__*/_jsxDEV(GetLpModal, {\n    currency: ifo.currency\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 42\n  }, this), false);\n  const isDisabled = isPendingTx || limitPerUserInLP.isGreaterThan(0) && amountTokenCommittedInLP.isGreaterThanOrEqualTo(limitPerUserInLP);\n  return /*#__PURE__*/_jsxDEV(Button, {\n    onClick: userCurrencyBalance.isEqualTo(0) ? onPresentGetLpModal : onPresentContributeModal,\n    width: \"100%\",\n    disabled: isDisabled,\n    children: isDisabled ? t('Max. Committed') : t('Commit LP Tokens')\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(ContributeButton, \"9MOAqMYI6+PlBjkKhkMJg1cK6iY=\", false, function () {\n  return [useTranslation, useToast, useTokenBalance, useModal, useModal];\n});\n_c = ContributeButton;\nexport default ContributeButton;\nvar _c;\n$RefreshReg$(_c, \"ContributeButton\");","map":{"version":3,"names":["React","Button","useModal","getBalanceNumber","useTranslation","useTokenBalance","getAddress","useToast","ContributeModal","GetLpModal","jsxDEV","_jsxDEV","ContributeButton","poolId","ifo","publicIfoData","walletIfoData","_s","publicPoolCharacteristics","userPoolCharacteristics","isPendingTx","amountTokenCommittedInLP","limitPerUserInLP","t","toastSuccess","balance","userCurrencyBalance","currency","address","handleContributeSuccess","amount","Promise","all","fetchIfoData","onPresentContributeModal","onSuccess","fileName","_jsxFileName","lineNumber","columnNumber","onPresentGetLpModal","isDisabled","isGreaterThan","isGreaterThanOrEqualTo","onClick","isEqualTo","width","disabled","children","_c","$RefreshReg$"],"sources":["C:/Users/Devrim/Documents/swapUIforProspBlast/src/views/Ifos/components/IfoFoldableCard/IfoPoolCard/ContributeButton.tsx"],"sourcesContent":["import React from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Button, useModal } from '@pancakeswap/uikit'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { Ifo, PoolIds } from 'config/constants/types'\r\nimport { WalletIfoData, PublicIfoData } from 'views/Ifos/types'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useTokenBalance from 'hooks/useTokenBalance'\r\nimport { getAddress } from 'utils/addressHelpers'\r\nimport useToast from 'hooks/useToast'\r\nimport ContributeModal from './ContributeModal'\r\nimport GetLpModal from './GetLpModal'\r\n\r\ninterface Props {\r\n  poolId: PoolIds\r\n  ifo: Ifo\r\n  publicIfoData: PublicIfoData\r\n  walletIfoData: WalletIfoData\r\n}\r\nconst ContributeButton: React.FC<Props> = ({ poolId, ifo, publicIfoData, walletIfoData }) => {\r\n  const publicPoolCharacteristics = publicIfoData[poolId]\r\n  const userPoolCharacteristics = walletIfoData[poolId]\r\n  const { isPendingTx, amountTokenCommittedInLP } = userPoolCharacteristics\r\n  const { limitPerUserInLP } = publicPoolCharacteristics\r\n  const { t } = useTranslation()\r\n  const { toastSuccess } = useToast()\r\n  const { balance: userCurrencyBalance } = useTokenBalance(getAddress(ifo.currency.address))\r\n\r\n  // Refetch all the data, and display a message when fetching is done\r\n  const handleContributeSuccess = async (amount: BigNumber) => {\r\n    await Promise.all([publicIfoData.fetchIfoData(), walletIfoData.fetchIfoData()])\r\n    toastSuccess(\r\n      t('Success!'),\r\n      t('You have contributed %amount% CAKE-BNB LP tokens to this IFO!', { amount: getBalanceNumber(amount) }),\r\n    )\r\n  }\r\n\r\n  const [onPresentContributeModal] = useModal(\r\n    <ContributeModal\r\n      poolId={poolId}\r\n      ifo={ifo}\r\n      publicIfoData={publicIfoData}\r\n      walletIfoData={walletIfoData}\r\n      onSuccess={handleContributeSuccess}\r\n      userCurrencyBalance={userCurrencyBalance}\r\n    />,\r\n    false,\r\n  )\r\n\r\n  const [onPresentGetLpModal] = useModal(<GetLpModal currency={ifo.currency} />, false)\r\n\r\n  const isDisabled =\r\n    isPendingTx ||\r\n    (limitPerUserInLP.isGreaterThan(0) && amountTokenCommittedInLP.isGreaterThanOrEqualTo(limitPerUserInLP))\r\n\r\n  return (\r\n    <Button\r\n      onClick={userCurrencyBalance.isEqualTo(0) ? onPresentGetLpModal : onPresentContributeModal}\r\n      width=\"100%\"\r\n      disabled={isDisabled}\r\n    >\r\n      {isDisabled ? t('Max. Committed') : t('Commit LP Tokens')}\r\n    </Button>\r\n  )\r\n}\r\n\r\nexport default ContributeButton\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}