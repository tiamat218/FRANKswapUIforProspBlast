{"ast":null,"code":"import BigNumber from 'bignumber.js';\nimport { BIG_ONE, BIG_ZERO } from 'utils/bigNumber';\nimport { filterFarmsByQuoteToken } from 'utils/farmsPriceHelpers';\nconst getFarmFromTokenSymbol = (farms, tokenSymbol, preferredQuoteTokens) => {\n  const farmsWithTokenSymbol = farms.filter(farm => farm.token.symbol === tokenSymbol);\n  const filteredFarm = filterFarmsByQuoteToken(farmsWithTokenSymbol, preferredQuoteTokens);\n  return filteredFarm;\n};\nconst getFarmBaseTokenPrice = (farm, quoteTokenFarm, bnbPriceBusd) => {\n  const hasTokenPriceVsQuote = Boolean(farm.tokenPriceVsQuote);\n  if (farm.quoteToken.symbol === 'BUSD') {\n    return hasTokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : BIG_ZERO;\n  }\n  if (farm.quoteToken.symbol === 'wBNB') {\n    return hasTokenPriceVsQuote ? bnbPriceBusd.times(farm.tokenPriceVsQuote) : BIG_ZERO;\n  }\n\n  // We can only calculate profits without a quoteTokenFarm for BUSD/BNB farms\n  if (!quoteTokenFarm) {\n    return BIG_ZERO;\n  }\n\n  // Possible alternative farm quoteTokens:\n  // UST (i.e. MIR-UST), pBTC (i.e. PNT-pBTC), BTCB (i.e. bBADGER-BTCB), ETH (i.e. SUSHI-ETH)\n  // If the farm's quote token isn't BUSD or wBNB, we then use the quote token, of the original farm's quote token\n  // i.e. for farm PNT - pBTC we use the pBTC farm's quote token - BNB, (pBTC - BNB)\n  // from the BNB - pBTC price, we can calculate the PNT - BUSD price\n  if (quoteTokenFarm.quoteToken.symbol === 'wBNB') {\n    const quoteTokenInBusd = bnbPriceBusd.times(quoteTokenFarm.tokenPriceVsQuote);\n    return hasTokenPriceVsQuote && quoteTokenInBusd ? new BigNumber(farm.tokenPriceVsQuote).times(quoteTokenInBusd) : BIG_ZERO;\n  }\n  if (quoteTokenFarm.quoteToken.symbol === 'BUSD') {\n    const quoteTokenInBusd = quoteTokenFarm.tokenPriceVsQuote;\n    return hasTokenPriceVsQuote && quoteTokenInBusd ? new BigNumber(farm.tokenPriceVsQuote).times(quoteTokenInBusd) : BIG_ZERO;\n  }\n\n  // Catch in case token does not have immediate or once-removed BUSD/wBNB quoteToken\n  return BIG_ZERO;\n};\nconst getFarmQuoteTokenPrice = (farm, quoteTokenFarm, bnbPriceBusd) => {\n  if (farm.quoteToken.symbol === 'BUSD') {\n    return BIG_ONE;\n  }\n  if (farm.quoteToken.symbol === 'wBNB') {\n    return bnbPriceBusd;\n  }\n  if (!quoteTokenFarm) {\n    return BIG_ZERO;\n  }\n  if (quoteTokenFarm.quoteToken.symbol === 'wBNB') {\n    return quoteTokenFarm.tokenPriceVsQuote ? bnbPriceBusd.times(quoteTokenFarm.tokenPriceVsQuote) : BIG_ZERO;\n  }\n  if (quoteTokenFarm.quoteToken.symbol === 'BUSD') {\n    return quoteTokenFarm.tokenPriceVsQuote ? new BigNumber(quoteTokenFarm.tokenPriceVsQuote) : BIG_ZERO;\n  }\n  return BIG_ZERO;\n};\nconst fetchFarmsPrices = async farms => {\n  const bnbBusdFarm = farms.find(farm => farm.pid === 252);\n  const bnbPriceBusd = bnbBusdFarm.tokenPriceVsQuote ? BIG_ONE.div(bnbBusdFarm.tokenPriceVsQuote) : BIG_ZERO;\n  const farmsWithPrices = farms.map(farm => {\n    const quoteTokenFarm = getFarmFromTokenSymbol(farms, farm.quoteToken.symbol);\n    const baseTokenPrice = getFarmBaseTokenPrice(farm, quoteTokenFarm, bnbPriceBusd);\n    const quoteTokenPrice = getFarmQuoteTokenPrice(farm, quoteTokenFarm, bnbPriceBusd);\n    const token = {\n      ...farm.token,\n      busdPrice: baseTokenPrice.toJSON()\n    };\n    const quoteToken = {\n      ...farm.quoteToken,\n      busdPrice: quoteTokenPrice.toJSON()\n    };\n    return {\n      ...farm,\n      token,\n      quoteToken\n    };\n  });\n  return farmsWithPrices;\n};\nexport default fetchFarmsPrices;","map":{"version":3,"names":["BigNumber","BIG_ONE","BIG_ZERO","filterFarmsByQuoteToken","getFarmFromTokenSymbol","farms","tokenSymbol","preferredQuoteTokens","farmsWithTokenSymbol","filter","farm","token","symbol","filteredFarm","getFarmBaseTokenPrice","quoteTokenFarm","bnbPriceBusd","hasTokenPriceVsQuote","Boolean","tokenPriceVsQuote","quoteToken","times","quoteTokenInBusd","getFarmQuoteTokenPrice","fetchFarmsPrices","bnbBusdFarm","find","pid","div","farmsWithPrices","map","baseTokenPrice","quoteTokenPrice","busdPrice","toJSON"],"sources":["C:/Users/Devrim/Documents/swapUIforProspBlast/src/state/farms/fetchFarmsPrices.ts"],"sourcesContent":["import BigNumber from 'bignumber.js'\r\nimport { BIG_ONE, BIG_ZERO } from 'utils/bigNumber'\r\nimport { filterFarmsByQuoteToken } from 'utils/farmsPriceHelpers'\r\nimport { Farm } from 'state/types'\r\n\r\nconst getFarmFromTokenSymbol = (farms: Farm[], tokenSymbol: string, preferredQuoteTokens?: string[]): Farm => {\r\n  const farmsWithTokenSymbol = farms.filter((farm) => farm.token.symbol === tokenSymbol)\r\n  const filteredFarm = filterFarmsByQuoteToken(farmsWithTokenSymbol, preferredQuoteTokens)\r\n  return filteredFarm\r\n}\r\n\r\nconst getFarmBaseTokenPrice = (farm: Farm, quoteTokenFarm: Farm, bnbPriceBusd: BigNumber): BigNumber => {\r\n  const hasTokenPriceVsQuote = Boolean(farm.tokenPriceVsQuote)\r\n\r\n  if (farm.quoteToken.symbol === 'BUSD') {\r\n    return hasTokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : BIG_ZERO\r\n  }\r\n\r\n  if (farm.quoteToken.symbol === 'wBNB') {\r\n    return hasTokenPriceVsQuote ? bnbPriceBusd.times(farm.tokenPriceVsQuote) : BIG_ZERO\r\n  }\r\n\r\n  // We can only calculate profits without a quoteTokenFarm for BUSD/BNB farms\r\n  if (!quoteTokenFarm) {\r\n    return BIG_ZERO\r\n  }\r\n\r\n  // Possible alternative farm quoteTokens:\r\n  // UST (i.e. MIR-UST), pBTC (i.e. PNT-pBTC), BTCB (i.e. bBADGER-BTCB), ETH (i.e. SUSHI-ETH)\r\n  // If the farm's quote token isn't BUSD or wBNB, we then use the quote token, of the original farm's quote token\r\n  // i.e. for farm PNT - pBTC we use the pBTC farm's quote token - BNB, (pBTC - BNB)\r\n  // from the BNB - pBTC price, we can calculate the PNT - BUSD price\r\n  if (quoteTokenFarm.quoteToken.symbol === 'wBNB') {\r\n    const quoteTokenInBusd = bnbPriceBusd.times(quoteTokenFarm.tokenPriceVsQuote)\r\n    return hasTokenPriceVsQuote && quoteTokenInBusd\r\n      ? new BigNumber(farm.tokenPriceVsQuote).times(quoteTokenInBusd)\r\n      : BIG_ZERO\r\n  }\r\n\r\n  if (quoteTokenFarm.quoteToken.symbol === 'BUSD') {\r\n    const quoteTokenInBusd = quoteTokenFarm.tokenPriceVsQuote\r\n    return hasTokenPriceVsQuote && quoteTokenInBusd\r\n      ? new BigNumber(farm.tokenPriceVsQuote).times(quoteTokenInBusd)\r\n      : BIG_ZERO\r\n  }\r\n\r\n  // Catch in case token does not have immediate or once-removed BUSD/wBNB quoteToken\r\n  return BIG_ZERO\r\n}\r\n\r\nconst getFarmQuoteTokenPrice = (farm: Farm, quoteTokenFarm: Farm, bnbPriceBusd: BigNumber): BigNumber => {\r\n  if (farm.quoteToken.symbol === 'BUSD') {\r\n    return BIG_ONE\r\n  }\r\n\r\n  if (farm.quoteToken.symbol === 'wBNB') {\r\n    return bnbPriceBusd\r\n  }\r\n\r\n  if (!quoteTokenFarm) {\r\n    return BIG_ZERO\r\n  }\r\n\r\n  if (quoteTokenFarm.quoteToken.symbol === 'wBNB') {\r\n    return quoteTokenFarm.tokenPriceVsQuote ? bnbPriceBusd.times(quoteTokenFarm.tokenPriceVsQuote) : BIG_ZERO\r\n  }\r\n\r\n  if (quoteTokenFarm.quoteToken.symbol === 'BUSD') {\r\n    return quoteTokenFarm.tokenPriceVsQuote ? new BigNumber(quoteTokenFarm.tokenPriceVsQuote) : BIG_ZERO\r\n  }\r\n\r\n  return BIG_ZERO\r\n}\r\n\r\nconst fetchFarmsPrices = async (farms) => {\r\n  const bnbBusdFarm = farms.find((farm: Farm) => farm.pid === 252)\r\n  const bnbPriceBusd = bnbBusdFarm.tokenPriceVsQuote ? BIG_ONE.div(bnbBusdFarm.tokenPriceVsQuote) : BIG_ZERO\r\n\r\n  const farmsWithPrices = farms.map((farm) => {\r\n    const quoteTokenFarm = getFarmFromTokenSymbol(farms, farm.quoteToken.symbol)\r\n    const baseTokenPrice = getFarmBaseTokenPrice(farm, quoteTokenFarm, bnbPriceBusd)\r\n    const quoteTokenPrice = getFarmQuoteTokenPrice(farm, quoteTokenFarm, bnbPriceBusd)\r\n    const token = { ...farm.token, busdPrice: baseTokenPrice.toJSON() }\r\n    const quoteToken = { ...farm.quoteToken, busdPrice: quoteTokenPrice.toJSON() }\r\n    return { ...farm, token, quoteToken }\r\n  })\r\n\r\n  return farmsWithPrices\r\n}\r\n\r\nexport default fetchFarmsPrices\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}