{"ast":null,"code":"export const MobileColumnSchema = [{\n  id: 1,\n  name: 'farm',\n  sortable: true,\n  label: ''\n}, {\n  id: 2,\n  name: 'earned',\n  sortable: true,\n  label: 'Earned'\n}, {\n  id: 3,\n  name: 'apr',\n  sortable: true,\n  label: 'APR'\n}, {\n  id: 6,\n  name: 'details',\n  sortable: true,\n  label: ''\n}];\nexport const DesktopColumnSchema = [{\n  id: 1,\n  name: 'farm',\n  sortable: true,\n  label: ''\n}, {\n  id: 2,\n  name: 'earned',\n  sortable: true,\n  label: 'Earned'\n}, {\n  id: 3,\n  name: 'apr',\n  sortable: true,\n  label: 'APR'\n}, {\n  id: 4,\n  name: 'liquidity',\n  sortable: true,\n  label: 'Liquidity'\n}, {\n  id: 5,\n  name: 'multiplier',\n  sortable: true,\n  label: 'Multiplier'\n}, {\n  id: 6,\n  name: 'details',\n  sortable: true,\n  label: ''\n}];\nexport let ViewMode;\n(function (ViewMode) {\n  ViewMode[\"TABLE\"] = \"TABLE\";\n  ViewMode[\"CARD\"] = \"CARD\";\n})(ViewMode || (ViewMode = {}));","map":{"version":3,"names":["MobileColumnSchema","id","name","sortable","label","DesktopColumnSchema","ViewMode"],"sources":["C:/Users/Devrim/Documents/swapUIforProspBlast/src/views/Farms/components/types.ts"],"sourcesContent":["export type TableProps = {\r\n  data?: TableDataTypes[]\r\n  selectedFilters?: string\r\n  sortBy?: string\r\n  sortDir?: string\r\n  onSort?: (value: string) => void\r\n}\r\n\r\nexport type ColumnsDefTypes = {\r\n  id: number\r\n  label: string\r\n  name: string\r\n  sortable: boolean\r\n}\r\n\r\nexport type ScrollBarProps = {\r\n  ref: string\r\n  width: number\r\n}\r\n\r\nexport type TableDataTypes = {\r\n  POOL: string\r\n  APR: string\r\n  EARNED: string\r\n  STAKED: string\r\n  DETAILS: string\r\n  LINKS: string\r\n}\r\n\r\nexport const MobileColumnSchema: ColumnsDefTypes[] = [\r\n  {\r\n    id: 1,\r\n    name: 'farm',\r\n    sortable: true,\r\n    label: '',\r\n  },\r\n  {\r\n    id: 2,\r\n    name: 'earned',\r\n    sortable: true,\r\n    label: 'Earned',\r\n  },\r\n  {\r\n    id: 3,\r\n    name: 'apr',\r\n    sortable: true,\r\n    label: 'APR',\r\n  },\r\n  {\r\n    id: 6,\r\n    name: 'details',\r\n    sortable: true,\r\n    label: '',\r\n  },\r\n]\r\n\r\nexport const DesktopColumnSchema: ColumnsDefTypes[] = [\r\n  {\r\n    id: 1,\r\n    name: 'farm',\r\n    sortable: true,\r\n    label: '',\r\n  },\r\n  {\r\n    id: 2,\r\n    name: 'earned',\r\n    sortable: true,\r\n    label: 'Earned',\r\n  },\r\n  {\r\n    id: 3,\r\n    name: 'apr',\r\n    sortable: true,\r\n    label: 'APR',\r\n  },\r\n  {\r\n    id: 4,\r\n    name: 'liquidity',\r\n    sortable: true,\r\n    label: 'Liquidity',\r\n  },\r\n  {\r\n    id: 5,\r\n    name: 'multiplier',\r\n    sortable: true,\r\n    label: 'Multiplier',\r\n  },\r\n  {\r\n    id: 6,\r\n    name: 'details',\r\n    sortable: true,\r\n    label: '',\r\n  },\r\n]\r\n\r\nexport enum ViewMode {\r\n  'TABLE' = 'TABLE',\r\n  'CARD' = 'CARD',\r\n}\r\n"],"mappings":"AA6BA,OAAO,MAAMA,kBAAqC,GAAG,CACnD;EACEC,EAAE,EAAE,CAAC;EACLC,IAAI,EAAE,MAAM;EACZC,QAAQ,EAAE,IAAI;EACdC,KAAK,EAAE;AACT,CAAC,EACD;EACEH,EAAE,EAAE,CAAC;EACLC,IAAI,EAAE,QAAQ;EACdC,QAAQ,EAAE,IAAI;EACdC,KAAK,EAAE;AACT,CAAC,EACD;EACEH,EAAE,EAAE,CAAC;EACLC,IAAI,EAAE,KAAK;EACXC,QAAQ,EAAE,IAAI;EACdC,KAAK,EAAE;AACT,CAAC,EACD;EACEH,EAAE,EAAE,CAAC;EACLC,IAAI,EAAE,SAAS;EACfC,QAAQ,EAAE,IAAI;EACdC,KAAK,EAAE;AACT,CAAC,CACF;AAED,OAAO,MAAMC,mBAAsC,GAAG,CACpD;EACEJ,EAAE,EAAE,CAAC;EACLC,IAAI,EAAE,MAAM;EACZC,QAAQ,EAAE,IAAI;EACdC,KAAK,EAAE;AACT,CAAC,EACD;EACEH,EAAE,EAAE,CAAC;EACLC,IAAI,EAAE,QAAQ;EACdC,QAAQ,EAAE,IAAI;EACdC,KAAK,EAAE;AACT,CAAC,EACD;EACEH,EAAE,EAAE,CAAC;EACLC,IAAI,EAAE,KAAK;EACXC,QAAQ,EAAE,IAAI;EACdC,KAAK,EAAE;AACT,CAAC,EACD;EACEH,EAAE,EAAE,CAAC;EACLC,IAAI,EAAE,WAAW;EACjBC,QAAQ,EAAE,IAAI;EACdC,KAAK,EAAE;AACT,CAAC,EACD;EACEH,EAAE,EAAE,CAAC;EACLC,IAAI,EAAE,YAAY;EAClBC,QAAQ,EAAE,IAAI;EACdC,KAAK,EAAE;AACT,CAAC,EACD;EACEH,EAAE,EAAE,CAAC;EACLC,IAAI,EAAE,SAAS;EACfC,QAAQ,EAAE,IAAI;EACdC,KAAK,EAAE;AACT,CAAC,CACF;AAED,WAAYE,QAAQ;AAGnB,WAHWA,QAAQ;EAARA,QAAQ;EAARA,QAAQ;AAAA,GAARA,QAAQ,KAARA,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module"}