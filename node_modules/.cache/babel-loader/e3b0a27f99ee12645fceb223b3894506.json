{"ast":null,"code":"import React,{useState}from'react';import{AutoRenewIcon,Button}from'@pancakeswap/uikit';import{useTranslation}from'contexts/Localization';import{usePredictionsContract}from'hooks/useContract';import useToast from'hooks/useToast';import{jsx as _jsx}from\"react/jsx-runtime\";const ReclaimPositionButton=_ref=>{let{epoch,onSuccess,children,...props}=_ref;const[isPendingTx,setIsPendingTx]=useState(false);const{t}=useTranslation();const predictionsContract=usePredictionsContract();const{toastSuccess,toastError}=useToast();const handleReclaim=async()=>{const tx=await predictionsContract.claim(epoch);setIsPendingTx(true);const receipt=await tx.wait();if(receipt.status){if(onSuccess){await onSuccess();}setIsPendingTx(false);toastSuccess(t('Position reclaimed!'));}else{setIsPendingTx(false);toastError(t('Error'),t('Please try again. Confirm the transaction and make sure you are paying enough gas!'));}};return/*#__PURE__*/_jsx(Button,{onClick:handleReclaim,isLoading:isPendingTx,endIcon:isPendingTx?/*#__PURE__*/_jsx(AutoRenewIcon,{spin:true,color:\"white\"}):null,...props,children:children||t('Reclaim Position')});};export default ReclaimPositionButton;","map":{"version":3,"names":["React","useState","AutoRenewIcon","Button","useTranslation","usePredictionsContract","useToast","jsx","_jsx","ReclaimPositionButton","_ref","epoch","onSuccess","children","props","isPendingTx","setIsPendingTx","t","predictionsContract","toastSuccess","toastError","handleReclaim","tx","claim","receipt","wait","status","onClick","isLoading","endIcon","spin","color"],"sources":["C:/Users/frkul/Documents/swapUI_pancake-frontend/src/views/Predictions/components/ReclaimPositionButton.tsx"],"sourcesContent":["import React, { ReactNode, useState } from 'react'\r\nimport { AutoRenewIcon, Button, ButtonProps } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { usePredictionsContract } from 'hooks/useContract'\r\nimport useToast from 'hooks/useToast'\r\n\r\ninterface ReclaimPositionButtonProps extends ButtonProps {\r\n  epoch: number\r\n  onSuccess?: () => Promise<void>\r\n  children?: ReactNode\r\n}\r\n\r\nconst ReclaimPositionButton: React.FC<ReclaimPositionButtonProps> = ({ epoch, onSuccess, children, ...props }) => {\r\n  const [isPendingTx, setIsPendingTx] = useState(false)\r\n  const { t } = useTranslation()\r\n  const predictionsContract = usePredictionsContract()\r\n  const { toastSuccess, toastError } = useToast()\r\n\r\n  const handleReclaim = async () => {\r\n    const tx = await predictionsContract.claim(epoch)\r\n    setIsPendingTx(true)\r\n\r\n    const receipt = await tx.wait()\r\n    if (receipt.status) {\r\n      if (onSuccess) {\r\n        await onSuccess()\r\n      }\r\n      setIsPendingTx(false)\r\n      toastSuccess(t('Position reclaimed!'))\r\n    } else {\r\n      setIsPendingTx(false)\r\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Button\r\n      onClick={handleReclaim}\r\n      isLoading={isPendingTx}\r\n      endIcon={isPendingTx ? <AutoRenewIcon spin color=\"white\" /> : null}\r\n      {...props}\r\n    >\r\n      {children || t('Reclaim Position')}\r\n    </Button>\r\n  )\r\n}\r\n\r\nexport default ReclaimPositionButton\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAeC,QAAQ,KAAQ,OAAO,CAClD,OAASC,aAAa,CAAEC,MAAM,KAAqB,oBAAoB,CACvE,OAASC,cAAc,KAAQ,uBAAuB,CACtD,OAASC,sBAAsB,KAAQ,mBAAmB,CAC1D,MAAO,CAAAC,QAAQ,KAAM,gBAAgB,QAAAC,GAAA,IAAAC,IAAA,yBAQrC,KAAM,CAAAC,qBAA2D,CAAGC,IAAA,EAA8C,IAA7C,CAAEC,KAAK,CAAEC,SAAS,CAAEC,QAAQ,CAAE,GAAGC,KAAM,CAAC,CAAAJ,IAAA,CAC3G,KAAM,CAACK,WAAW,CAAEC,cAAc,CAAC,CAAGf,QAAQ,CAAC,KAAK,CAAC,CACrD,KAAM,CAAEgB,CAAE,CAAC,CAAGb,cAAc,CAAC,CAAC,CAC9B,KAAM,CAAAc,mBAAmB,CAAGb,sBAAsB,CAAC,CAAC,CACpD,KAAM,CAAEc,YAAY,CAAEC,UAAW,CAAC,CAAGd,QAAQ,CAAC,CAAC,CAE/C,KAAM,CAAAe,aAAa,CAAG,KAAAA,CAAA,GAAY,CAChC,KAAM,CAAAC,EAAE,CAAG,KAAM,CAAAJ,mBAAmB,CAACK,KAAK,CAACZ,KAAK,CAAC,CACjDK,cAAc,CAAC,IAAI,CAAC,CAEpB,KAAM,CAAAQ,OAAO,CAAG,KAAM,CAAAF,EAAE,CAACG,IAAI,CAAC,CAAC,CAC/B,GAAID,OAAO,CAACE,MAAM,CAAE,CAClB,GAAId,SAAS,CAAE,CACb,KAAM,CAAAA,SAAS,CAAC,CAAC,CACnB,CACAI,cAAc,CAAC,KAAK,CAAC,CACrBG,YAAY,CAACF,CAAC,CAAC,qBAAqB,CAAC,CAAC,CACxC,CAAC,IAAM,CACLD,cAAc,CAAC,KAAK,CAAC,CACrBI,UAAU,CAACH,CAAC,CAAC,OAAO,CAAC,CAAEA,CAAC,CAAC,oFAAoF,CAAC,CAAC,CACjH,CACF,CAAC,CAED,mBACET,IAAA,CAACL,MAAM,EACLwB,OAAO,CAAEN,aAAc,CACvBO,SAAS,CAAEb,WAAY,CACvBc,OAAO,CAAEd,WAAW,cAAGP,IAAA,CAACN,aAAa,EAAC4B,IAAI,MAACC,KAAK,CAAC,OAAO,CAAE,CAAC,CAAG,IAAK,IAC/DjB,KAAK,CAAAD,QAAA,CAERA,QAAQ,EAAII,CAAC,CAAC,kBAAkB,CAAC,CAC5B,CAAC,CAEb,CAAC,CAED,cAAe,CAAAR,qBAAqB","ignoreList":[]},"metadata":{},"sourceType":"module"}