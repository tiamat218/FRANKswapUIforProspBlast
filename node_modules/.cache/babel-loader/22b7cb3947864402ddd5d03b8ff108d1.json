{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Devrim\\\\Documents\\\\FRANKswapUIforProspBlast\\\\src\\\\views\\\\Voting\\\\components\\\\CastVoteModal\\\\MainView.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { IconButton, Text, Skeleton, Button, AutoRenewIcon, ChevronRightIcon } from '@pancakeswap/uikit';\nimport { useTranslation } from 'contexts/Localization';\nimport TextEllipsis from '../TextEllipsis';\nimport { VotingBox, ModalInner } from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst MainView = ({\n  vote,\n  total,\n  isPending,\n  isLoading,\n  onConfirm,\n  onViewDetails,\n  onDismiss\n}) => {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ModalInner, {\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        color: \"secondary\",\n        mb: \"8px\",\n        textTransform: \"uppercase\",\n        fontSize: \"12px\",\n        bold: true,\n        children: t('Voting For')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextEllipsis, {\n        bold: true,\n        fontSize: \"20px\",\n        mb: \"8px\",\n        title: vote.label,\n        children: vote.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        color: \"secondary\",\n        mb: \"8px\",\n        textTransform: \"uppercase\",\n        fontSize: \"12px\",\n        bold: true,\n        children: t('Your Voting Power')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), isLoading ? /*#__PURE__*/_jsxDEV(Skeleton, {\n        height: \"64px\",\n        mb: \"24px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(VotingBox, {\n        onClick: onViewDetails,\n        style: {\n          cursor: 'pointer'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          bold: true,\n          fontSize: \"20px\",\n          children: total.toFormat(3)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          scale: \"sm\",\n          variant: \"text\",\n          children: /*#__PURE__*/_jsxDEV(ChevronRightIcon, {\n            width: \"24px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        as: \"p\",\n        color: \"textSubtle\",\n        fontSize: \"14px\",\n        children: t('Are you sure you want to vote for the above choice? This action cannot be undone.')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      isLoading: isPending,\n      endIcon: isPending ? /*#__PURE__*/_jsxDEV(AutoRenewIcon, {\n        spin: true,\n        color: \"currentColor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 30\n      }, this) : null,\n      disabled: isLoading || total.eq(0),\n      width: \"100%\",\n      mb: \"8px\",\n      onClick: onConfirm,\n      children: t('Confirm Vote')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"secondary\",\n      width: \"100%\",\n      onClick: onDismiss,\n      children: t('Cancel')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(MainView, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n\n_c = MainView;\nexport default MainView;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainView\");","map":{"version":3,"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/views/Voting/components/CastVoteModal/MainView.tsx"],"names":["React","IconButton","Text","Skeleton","Button","AutoRenewIcon","ChevronRightIcon","useTranslation","TextEllipsis","VotingBox","ModalInner","MainView","vote","total","isPending","isLoading","onConfirm","onViewDetails","onDismiss","t","label","cursor","toFormat","eq"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { IconButton, Text, Skeleton, Button, AutoRenewIcon, ChevronRightIcon } from '@pancakeswap/uikit'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport TextEllipsis from '../TextEllipsis'\r\nimport { VotingBox, ModalInner } from './styles'\r\nimport { CastVoteModalProps } from './types'\r\n\r\ninterface MainViewProps {\r\n  vote: {\r\n    label: string\r\n    value: number\r\n  }\r\n  isLoading: boolean\r\n  isPending: boolean\r\n  total: BigNumber\r\n  onConfirm: () => void\r\n  onViewDetails: () => void\r\n  onDismiss: CastVoteModalProps['onDismiss']\r\n}\r\n\r\nconst MainView: React.FC<MainViewProps> = ({\r\n  vote,\r\n  total,\r\n  isPending,\r\n  isLoading,\r\n  onConfirm,\r\n  onViewDetails,\r\n  onDismiss,\r\n}) => {\r\n  const { t } = useTranslation()\r\n\r\n  return (\r\n    <>\r\n      <ModalInner>\r\n        <Text color=\"secondary\" mb=\"8px\" textTransform=\"uppercase\" fontSize=\"12px\" bold>\r\n          {t('Voting For')}\r\n        </Text>\r\n        <TextEllipsis bold fontSize=\"20px\" mb=\"8px\" title={vote.label}>\r\n          {vote.label}\r\n        </TextEllipsis>\r\n        <Text color=\"secondary\" mb=\"8px\" textTransform=\"uppercase\" fontSize=\"12px\" bold>\r\n          {t('Your Voting Power')}\r\n        </Text>\r\n        {isLoading ? (\r\n          <Skeleton height=\"64px\" mb=\"24px\" />\r\n        ) : (\r\n          <VotingBox onClick={onViewDetails} style={{ cursor: 'pointer' }}>\r\n            <Text bold fontSize=\"20px\">\r\n              {total.toFormat(3)}\r\n            </Text>\r\n            <IconButton scale=\"sm\" variant=\"text\">\r\n              <ChevronRightIcon width=\"24px\" />\r\n            </IconButton>\r\n          </VotingBox>\r\n        )}\r\n        <Text as=\"p\" color=\"textSubtle\" fontSize=\"14px\">\r\n          {t('Are you sure you want to vote for the above choice? This action cannot be undone.')}\r\n        </Text>\r\n      </ModalInner>\r\n      <Button\r\n        isLoading={isPending}\r\n        endIcon={isPending ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\r\n        disabled={isLoading || total.eq(0)}\r\n        width=\"100%\"\r\n        mb=\"8px\"\r\n        onClick={onConfirm}\r\n      >\r\n        {t('Confirm Vote')}\r\n      </Button>\r\n      <Button variant=\"secondary\" width=\"100%\" onClick={onDismiss}>\r\n        {t('Cancel')}\r\n      </Button>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default MainView\r\n"]},"metadata":{},"sourceType":"module"}