{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Devrim\\\\Documents\\\\FRANKswapUIforProspBlast\\\\src\\\\views\\\\Ifos\\\\components\\\\IfoFoldableCard\\\\IfoPoolCard\\\\ClaimButton.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { AutoRenewIcon, Button } from '@pancakeswap/uikit';\nimport { PoolIds } from 'config/constants/types';\nimport { useTranslation } from 'contexts/Localization';\nimport useToast from 'hooks/useToast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ClaimButton = ({\n  poolId,\n  ifoVersion,\n  walletIfoData\n}) => {\n  _s();\n  const userPoolCharacteristics = walletIfoData[poolId];\n  const {\n    t\n  } = useTranslation();\n  const {\n    toastError,\n    toastSuccess\n  } = useToast();\n  const setPendingTx = isPending => walletIfoData.setPendingTx(isPending, poolId);\n  const handleClaim = async () => {\n    try {\n      setPendingTx(true);\n      if (ifoVersion === 1) {\n        const tx = await walletIfoData.contract.harvest();\n        await tx.wait();\n      } else {\n        const tx = await walletIfoData.contract.harvestPool(poolId === PoolIds.poolBasic ? 0 : 1);\n        await tx.wait();\n      }\n      walletIfoData.setIsClaimed(poolId);\n      toastSuccess(t('Success!'), t('You have successfully claimed your rewards.'));\n    } catch (error) {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'));\n      console.error(error);\n    } finally {\n      setPendingTx(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Button, {\n    onClick: handleClaim,\n    disabled: userPoolCharacteristics.isPendingTx,\n    width: \"100%\",\n    isLoading: userPoolCharacteristics.isPendingTx,\n    endIcon: userPoolCharacteristics.isPendingTx ? /*#__PURE__*/_jsxDEV(AutoRenewIcon, {\n      spin: true,\n      color: \"currentColor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 54\n    }, this) : null,\n    children: t('Claim')\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(ClaimButton, \"TVDcUOFoSEiY1eHYJog8Xwml5SU=\", false, function () {\n  return [useTranslation, useToast];\n});\n_c = ClaimButton;\nexport default ClaimButton;\nvar _c;\n$RefreshReg$(_c, \"ClaimButton\");","map":{"version":3,"names":["React","AutoRenewIcon","Button","PoolIds","useTranslation","useToast","jsxDEV","_jsxDEV","ClaimButton","poolId","ifoVersion","walletIfoData","_s","userPoolCharacteristics","t","toastError","toastSuccess","setPendingTx","isPending","handleClaim","tx","contract","harvest","wait","harvestPool","poolBasic","setIsClaimed","error","console","onClick","disabled","isPendingTx","width","isLoading","endIcon","spin","color","fileName","_jsxFileName","lineNumber","columnNumber","children","_c","$RefreshReg$"],"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/views/Ifos/components/IfoFoldableCard/IfoPoolCard/ClaimButton.tsx"],"sourcesContent":["import React from 'react'\r\nimport { AutoRenewIcon, Button } from '@pancakeswap/uikit'\r\nimport { PoolIds } from 'config/constants/types'\r\nimport { WalletIfoData } from 'views/Ifos/types'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useToast from 'hooks/useToast'\r\n\r\ninterface Props {\r\n  poolId: PoolIds\r\n  ifoVersion: number\r\n  walletIfoData: WalletIfoData\r\n}\r\n\r\nconst ClaimButton: React.FC<Props> = ({ poolId, ifoVersion, walletIfoData }) => {\r\n  const userPoolCharacteristics = walletIfoData[poolId]\r\n  const { t } = useTranslation()\r\n  const { toastError, toastSuccess } = useToast()\r\n\r\n  const setPendingTx = (isPending: boolean) => walletIfoData.setPendingTx(isPending, poolId)\r\n\r\n  const handleClaim = async () => {\r\n    try {\r\n      setPendingTx(true)\r\n\r\n      if (ifoVersion === 1) {\r\n        const tx = await walletIfoData.contract.harvest()\r\n        await tx.wait()\r\n      } else {\r\n        const tx = await walletIfoData.contract.harvestPool(poolId === PoolIds.poolBasic ? 0 : 1)\r\n        await tx.wait()\r\n      }\r\n\r\n      walletIfoData.setIsClaimed(poolId)\r\n      toastSuccess(t('Success!'), t('You have successfully claimed your rewards.'))\r\n    } catch (error) {\r\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\r\n      console.error(error)\r\n    } finally {\r\n      setPendingTx(false)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Button\r\n      onClick={handleClaim}\r\n      disabled={userPoolCharacteristics.isPendingTx}\r\n      width=\"100%\"\r\n      isLoading={userPoolCharacteristics.isPendingTx}\r\n      endIcon={userPoolCharacteristics.isPendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\r\n    >\r\n      {t('Claim')}\r\n    </Button>\r\n  )\r\n}\r\n\r\nexport default ClaimButton\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,EAAEC,MAAM,QAAQ,oBAAoB;AAC1D,SAASC,OAAO,QAAQ,wBAAwB;AAEhD,SAASC,cAAc,QAAQ,uBAAuB;AACtD,OAAOC,QAAQ,MAAM,gBAAgB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAQrC,MAAMC,WAA4B,GAAGA,CAAC;EAAEC,MAAM;EAAEC,UAAU;EAAEC;AAAc,CAAC,KAAK;EAAAC,EAAA;EAC9E,MAAMC,uBAAuB,GAAGF,aAAa,CAACF,MAAM,CAAC;EACrD,MAAM;IAAEK;EAAE,CAAC,GAAGV,cAAc,CAAC,CAAC;EAC9B,MAAM;IAAEW,UAAU;IAAEC;EAAa,CAAC,GAAGX,QAAQ,CAAC,CAAC;EAE/C,MAAMY,YAAY,GAAIC,SAAkB,IAAKP,aAAa,CAACM,YAAY,CAACC,SAAS,EAAET,MAAM,CAAC;EAE1F,MAAMU,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACFF,YAAY,CAAC,IAAI,CAAC;MAElB,IAAIP,UAAU,KAAK,CAAC,EAAE;QACpB,MAAMU,EAAE,GAAG,MAAMT,aAAa,CAACU,QAAQ,CAACC,OAAO,CAAC,CAAC;QACjD,MAAMF,EAAE,CAACG,IAAI,CAAC,CAAC;MACjB,CAAC,MAAM;QACL,MAAMH,EAAE,GAAG,MAAMT,aAAa,CAACU,QAAQ,CAACG,WAAW,CAACf,MAAM,KAAKN,OAAO,CAACsB,SAAS,GAAG,CAAC,GAAG,CAAC,CAAC;QACzF,MAAML,EAAE,CAACG,IAAI,CAAC,CAAC;MACjB;MAEAZ,aAAa,CAACe,YAAY,CAACjB,MAAM,CAAC;MAClCO,YAAY,CAACF,CAAC,CAAC,UAAU,CAAC,EAAEA,CAAC,CAAC,6CAA6C,CAAC,CAAC;IAC/E,CAAC,CAAC,OAAOa,KAAK,EAAE;MACdZ,UAAU,CAACD,CAAC,CAAC,OAAO,CAAC,EAAEA,CAAC,CAAC,oFAAoF,CAAC,CAAC;MAC/Gc,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACtB,CAAC,SAAS;MACRV,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAED,oBACEV,OAAA,CAACL,MAAM;IACL2B,OAAO,EAAEV,WAAY;IACrBW,QAAQ,EAAEjB,uBAAuB,CAACkB,WAAY;IAC9CC,KAAK,EAAC,MAAM;IACZC,SAAS,EAAEpB,uBAAuB,CAACkB,WAAY;IAC/CG,OAAO,EAAErB,uBAAuB,CAACkB,WAAW,gBAAGxB,OAAA,CAACN,aAAa;MAACkC,IAAI;MAACC,KAAK,EAAC;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,GAAG,IAAK;IAAAC,QAAA,EAEjG3B,CAAC,CAAC,OAAO;EAAC;IAAAuB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEb,CAAC;AAAA5B,EAAA,CAxCKJ,WAA4B;EAAA,QAElBJ,cAAc,EACSC,QAAQ;AAAA;AAAAqC,EAAA,GAHzClC,WAA4B;AA0ClC,eAAeA,WAAW;AAAA,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}