{"ast":null,"code":"import React,{useMemo,useCallback}from'react';import useActiveWeb3React from'hooks/useActiveWeb3React';import{useDispatch}from'react-redux';import{Modal,ModalBody,Text,Button,Flex}from'@pancakeswap/uikit';import{useTranslation}from'contexts/Localization';import{isTransactionRecent,useAllTransactions}from'state/transactions/hooks';import{clearAllTransactions}from'state/transactions/actions';import{AutoRow}from'../../Layout/Row';import Transaction from'./Transaction';// we want the latest one to come first, so return negative if a is after b\nimport{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";function newTransactionsFirst(a,b){return b.addedTime-a.addedTime;}function renderTransactions(transactions){return/*#__PURE__*/_jsx(Flex,{flexDirection:\"column\",children:transactions.map(tx=>{return/*#__PURE__*/_jsx(Transaction,{tx:tx},tx.hash+tx.addedTime);})});}const TransactionsModal=_ref=>{let{onDismiss}=_ref;const{account,chainId}=useActiveWeb3React();const dispatch=useDispatch();const allTransactions=useAllTransactions();const{t}=useTranslation();const sortedRecentTransactions=useMemo(()=>{const txs=Object.values(allTransactions);return txs.filter(isTransactionRecent).sort(newTransactionsFirst);},[allTransactions]);const pending=sortedRecentTransactions.filter(tx=>!tx.receipt);const confirmed=sortedRecentTransactions.filter(tx=>tx.receipt);const clearAllTransactionsCallback=useCallback(()=>{if(chainId)dispatch(clearAllTransactions({chainId}));},[dispatch,chainId]);return/*#__PURE__*/_jsx(Modal,{title:t('Recent Transactions'),headerBackground:\"gradients.cardHeader\",onDismiss:onDismiss,children:account&&/*#__PURE__*/_jsx(ModalBody,{children:!!pending.length||!!confirmed.length?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(AutoRow,{mb:\"1rem\",style:{justifyContent:'space-between'},children:[/*#__PURE__*/_jsx(Text,{children:t('Recent Transactions')}),/*#__PURE__*/_jsx(Button,{variant:\"tertiary\",scale:\"xs\",onClick:clearAllTransactionsCallback,children:t('clear all')})]}),renderTransactions(pending),renderTransactions(confirmed)]}):/*#__PURE__*/_jsx(Text,{children:t('No recent transactions')})})});};export default TransactionsModal;","map":{"version":3,"names":["React","useMemo","useCallback","useActiveWeb3React","useDispatch","Modal","ModalBody","Text","Button","Flex","useTranslation","isTransactionRecent","useAllTransactions","clearAllTransactions","AutoRow","Transaction","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","newTransactionsFirst","a","b","addedTime","renderTransactions","transactions","flexDirection","children","map","tx","hash","TransactionsModal","_ref","onDismiss","account","chainId","dispatch","allTransactions","t","sortedRecentTransactions","txs","Object","values","filter","sort","pending","receipt","confirmed","clearAllTransactionsCallback","title","headerBackground","length","mb","style","justifyContent","variant","scale","onClick"],"sources":["C:/Users/frkul/Documents/swapUI_pancake-frontend/src/components/App/Transactions/TransactionsModal.tsx"],"sourcesContent":["import React, { useMemo, useCallback } from 'react'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport { useDispatch } from 'react-redux'\r\nimport { Modal, ModalBody, Text, Button, Flex, InjectedModalProps } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { isTransactionRecent, useAllTransactions } from 'state/transactions/hooks'\r\nimport { TransactionDetails } from 'state/transactions/reducer'\r\nimport { AppDispatch } from 'state'\r\nimport { clearAllTransactions } from 'state/transactions/actions'\r\nimport { AutoRow } from '../../Layout/Row'\r\nimport Transaction from './Transaction'\r\n\r\n// we want the latest one to come first, so return negative if a is after b\r\nfunction newTransactionsFirst(a: TransactionDetails, b: TransactionDetails) {\r\n  return b.addedTime - a.addedTime\r\n}\r\n\r\nfunction renderTransactions(transactions: TransactionDetails[]) {\r\n  return (\r\n    <Flex flexDirection=\"column\">\r\n      {transactions.map((tx) => {\r\n        return <Transaction key={tx.hash + tx.addedTime} tx={tx} />\r\n      })}\r\n    </Flex>\r\n  )\r\n}\r\n\r\nconst TransactionsModal: React.FC<InjectedModalProps> = ({ onDismiss }) => {\r\n  const { account, chainId } = useActiveWeb3React()\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const allTransactions = useAllTransactions()\r\n\r\n  const { t } = useTranslation()\r\n\r\n  const sortedRecentTransactions = useMemo(() => {\r\n    const txs = Object.values(allTransactions)\r\n    return txs.filter(isTransactionRecent).sort(newTransactionsFirst)\r\n  }, [allTransactions])\r\n\r\n  const pending = sortedRecentTransactions.filter((tx) => !tx.receipt)\r\n  const confirmed = sortedRecentTransactions.filter((tx) => tx.receipt)\r\n\r\n  const clearAllTransactionsCallback = useCallback(() => {\r\n    if (chainId) dispatch(clearAllTransactions({ chainId }))\r\n  }, [dispatch, chainId])\r\n\r\n  return (\r\n    <Modal title={t('Recent Transactions')} headerBackground=\"gradients.cardHeader\" onDismiss={onDismiss}>\r\n      {account && (\r\n        <ModalBody>\r\n          {!!pending.length || !!confirmed.length ? (\r\n            <>\r\n              <AutoRow mb=\"1rem\" style={{ justifyContent: 'space-between' }}>\r\n                <Text>{t('Recent Transactions')}</Text>\r\n                <Button variant=\"tertiary\" scale=\"xs\" onClick={clearAllTransactionsCallback}>\r\n                  {t('clear all')}\r\n                </Button>\r\n              </AutoRow>\r\n              {renderTransactions(pending)}\r\n              {renderTransactions(confirmed)}\r\n            </>\r\n          ) : (\r\n            <Text>{t('No recent transactions')}</Text>\r\n          )}\r\n        </ModalBody>\r\n      )}\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default TransactionsModal\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}