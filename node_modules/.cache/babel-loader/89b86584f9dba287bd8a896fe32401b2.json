{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Devrim\\\\Documents\\\\FRANKswapUIforProspBlast\\\\src\\\\views\\\\Pools\\\\components\\\\PoolsTable\\\\Cells\\\\AprCell.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport styled from 'styled-components';\nimport { Text, useMatchBreakpoints } from '@pancakeswap/uikit';\nimport { useTranslation } from 'contexts/Localization';\nimport BaseCell, { CellContent } from './BaseCell';\nimport Apr from '../Apr';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledCell = styled(BaseCell)`\n  flex: 1 0 50px;\n  ${({\n  theme\n}) => theme.mediaQueries.md} {\n    flex: 0 0 120px;\n  }\n`;\n_c = StyledCell;\nconst AprCell = ({\n  pool,\n  performanceFee\n}) => {\n  _s();\n  const {\n    t\n  } = useTranslation();\n  const {\n    isXs,\n    isSm\n  } = useMatchBreakpoints();\n  const {\n    isAutoVault\n  } = pool;\n  return /*#__PURE__*/_jsxDEV(StyledCell, {\n    role: \"cell\",\n    children: /*#__PURE__*/_jsxDEV(CellContent, {\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        fontSize: \"12px\",\n        color: \"textSubtle\",\n        textAlign: \"left\",\n        children: isAutoVault ? t('APY') : t('APR')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Apr, {\n        pool: pool,\n        performanceFee: isAutoVault ? performanceFee : 0,\n        showIcon: !isXs && !isSm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(AprCell, \"DJNjq27euxwwvoslI07csHoMjfo=\", false, function () {\n  return [useTranslation, useMatchBreakpoints];\n});\n_c2 = AprCell;\nexport default AprCell;\nvar _c, _c2;\n$RefreshReg$(_c, \"StyledCell\");\n$RefreshReg$(_c2, \"AprCell\");","map":{"version":3,"names":["React","styled","Text","useMatchBreakpoints","useTranslation","BaseCell","CellContent","Apr","jsxDEV","_jsxDEV","StyledCell","theme","mediaQueries","md","_c","AprCell","pool","performanceFee","_s","t","isXs","isSm","isAutoVault","role","children","fontSize","color","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","showIcon","_c2","$RefreshReg$"],"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/views/Pools/components/PoolsTable/Cells/AprCell.tsx"],"sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text, useMatchBreakpoints } from '@pancakeswap/uikit'\r\nimport { Pool } from 'state/types'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport BaseCell, { CellContent } from './BaseCell'\r\nimport Apr from '../Apr'\r\n\r\ninterface AprCellProps {\r\n  pool: Pool\r\n  performanceFee: number\r\n}\r\n\r\nconst StyledCell = styled(BaseCell)`\r\n  flex: 1 0 50px;\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    flex: 0 0 120px;\r\n  }\r\n`\r\n\r\nconst AprCell: React.FC<AprCellProps> = ({ pool, performanceFee }) => {\r\n  const { t } = useTranslation()\r\n  const { isXs, isSm } = useMatchBreakpoints()\r\n  const { isAutoVault } = pool\r\n  return (\r\n    <StyledCell role=\"cell\">\r\n      <CellContent>\r\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\r\n          {isAutoVault ? t('APY') : t('APR')}\r\n        </Text>\r\n        <Apr pool={pool} performanceFee={isAutoVault ? performanceFee : 0} showIcon={!isXs && !isSm} />\r\n      </CellContent>\r\n    </StyledCell>\r\n  )\r\n}\r\n\r\nexport default AprCell\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,IAAI,EAAEC,mBAAmB,QAAQ,oBAAoB;AAE9D,SAASC,cAAc,QAAQ,uBAAuB;AACtD,OAAOC,QAAQ,IAAIC,WAAW,QAAQ,YAAY;AAClD,OAAOC,GAAG,MAAM,QAAQ;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAOxB,MAAMC,UAAU,GAAGT,MAAM,CAACI,QAAQ,CAAC;AACnC;AACA,IAAI,CAAC;EAAEM;AAAM,CAAC,KAAKA,KAAK,CAACC,YAAY,CAACC,EAAE;AACxC;AACA;AACA,CAAC;AAAAC,EAAA,GALKJ,UAAU;AAOhB,MAAMK,OAA+B,GAAGA,CAAC;EAAEC,IAAI;EAAEC;AAAe,CAAC,KAAK;EAAAC,EAAA;EACpE,MAAM;IAAEC;EAAE,CAAC,GAAGf,cAAc,CAAC,CAAC;EAC9B,MAAM;IAAEgB,IAAI;IAAEC;EAAK,CAAC,GAAGlB,mBAAmB,CAAC,CAAC;EAC5C,MAAM;IAAEmB;EAAY,CAAC,GAAGN,IAAI;EAC5B,oBACEP,OAAA,CAACC,UAAU;IAACa,IAAI,EAAC,MAAM;IAAAC,QAAA,eACrBf,OAAA,CAACH,WAAW;MAAAkB,QAAA,gBACVf,OAAA,CAACP,IAAI;QAACuB,QAAQ,EAAC,MAAM;QAACC,KAAK,EAAC,YAAY;QAACC,SAAS,EAAC,MAAM;QAAAH,QAAA,EACtDF,WAAW,GAAGH,CAAC,CAAC,KAAK,CAAC,GAAGA,CAAC,CAAC,KAAK;MAAC;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9B,CAAC,eACPtB,OAAA,CAACF,GAAG;QAACS,IAAI,EAAEA,IAAK;QAACC,cAAc,EAAEK,WAAW,GAAGL,cAAc,GAAG,CAAE;QAACe,QAAQ,EAAE,CAACZ,IAAI,IAAI,CAACC;MAAK;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEjB,CAAC;AAAAb,EAAA,CAdKH,OAA+B;EAAA,QACrBX,cAAc,EACLD,mBAAmB;AAAA;AAAA8B,GAAA,GAFtClB,OAA+B;AAgBrC,eAAeA,OAAO;AAAA,IAAAD,EAAA,EAAAmB,GAAA;AAAAC,YAAA,CAAApB,EAAA;AAAAoB,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}