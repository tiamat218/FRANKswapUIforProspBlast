{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Devrim\\\\Documents\\\\swapUIforProspBlast\\\\src\\\\views\\\\Pools\\\\components\\\\CakeVaultCard\\\\RecentCakeProfitRow.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Flex, Text } from '@pancakeswap/uikit';\nimport { useWeb3React } from '@web3-react/core';\nimport { useTranslation } from 'contexts/Localization';\nimport { usePriceCakeBusd } from 'state/farms/hooks';\nimport { useCakeVault } from 'state/pools/hooks';\nimport { getCakeVaultEarnings } from 'views/Pools/helpers';\nimport RecentCakeProfitBalance from './RecentCakeProfitBalance';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RecentCakeProfitCountdownRow = () => {\n  _s();\n  const {\n    t\n  } = useTranslation();\n  const {\n    account\n  } = useWeb3React();\n  const {\n    pricePerFullShare,\n    userData: {\n      cakeAtLastUserAction,\n      userShares,\n      lastUserActionTime\n    }\n  } = useCakeVault();\n  const cakePriceBusd = usePriceCakeBusd();\n  const {\n    hasAutoEarnings,\n    autoCakeToDisplay,\n    autoUsdToDisplay\n  } = getCakeVaultEarnings(account, cakeAtLastUserAction, userShares, pricePerFullShare, cakePriceBusd.toNumber());\n  const lastActionInMs = lastUserActionTime && parseInt(lastUserActionTime) * 1000;\n  const dateTimeLastAction = new Date(lastActionInMs);\n  const dateStringToDisplay = dateTimeLastAction.toLocaleString();\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    children: [/*#__PURE__*/_jsxDEV(Text, {\n      fontSize: \"14px\",\n      children: `${t('Recent CAKE profit')}:`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), hasAutoEarnings && /*#__PURE__*/_jsxDEV(RecentCakeProfitBalance, {\n      cakeToDisplay: autoCakeToDisplay,\n      dollarValueToDisplay: autoUsdToDisplay,\n      dateStringToDisplay: dateStringToDisplay\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(RecentCakeProfitCountdownRow, \"0V2ksT8VR/S5AY0qI7MtNem1WqY=\", false, function () {\n  return [useTranslation, useWeb3React, useCakeVault, usePriceCakeBusd];\n});\n_c = RecentCakeProfitCountdownRow;\nexport default RecentCakeProfitCountdownRow;\nvar _c;\n$RefreshReg$(_c, \"RecentCakeProfitCountdownRow\");","map":{"version":3,"names":["React","Flex","Text","useWeb3React","useTranslation","usePriceCakeBusd","useCakeVault","getCakeVaultEarnings","RecentCakeProfitBalance","jsxDEV","_jsxDEV","RecentCakeProfitCountdownRow","_s","t","account","pricePerFullShare","userData","cakeAtLastUserAction","userShares","lastUserActionTime","cakePriceBusd","hasAutoEarnings","autoCakeToDisplay","autoUsdToDisplay","toNumber","lastActionInMs","parseInt","dateTimeLastAction","Date","dateStringToDisplay","toLocaleString","alignItems","justifyContent","children","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","cakeToDisplay","dollarValueToDisplay","_c","$RefreshReg$"],"sources":["C:/Users/Devrim/Documents/swapUIforProspBlast/src/views/Pools/components/CakeVaultCard/RecentCakeProfitRow.tsx"],"sourcesContent":["import React from 'react'\r\nimport { Flex, Text } from '@pancakeswap/uikit'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { usePriceCakeBusd } from 'state/farms/hooks'\r\nimport { useCakeVault } from 'state/pools/hooks'\r\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\r\nimport RecentCakeProfitBalance from './RecentCakeProfitBalance'\r\n\r\nconst RecentCakeProfitCountdownRow = () => {\r\n  const { t } = useTranslation()\r\n  const { account } = useWeb3React()\r\n  const {\r\n    pricePerFullShare,\r\n    userData: { cakeAtLastUserAction, userShares, lastUserActionTime },\r\n  } = useCakeVault()\r\n  const cakePriceBusd = usePriceCakeBusd()\r\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\r\n    account,\r\n    cakeAtLastUserAction,\r\n    userShares,\r\n    pricePerFullShare,\r\n    cakePriceBusd.toNumber(),\r\n  )\r\n\r\n  const lastActionInMs = lastUserActionTime && parseInt(lastUserActionTime) * 1000\r\n  const dateTimeLastAction = new Date(lastActionInMs)\r\n  const dateStringToDisplay = dateTimeLastAction.toLocaleString()\r\n\r\n  return (\r\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\r\n      <Text fontSize=\"14px\">{`${t('Recent CAKE profit')}:`}</Text>\r\n      {hasAutoEarnings && (\r\n        <RecentCakeProfitBalance\r\n          cakeToDisplay={autoCakeToDisplay}\r\n          dollarValueToDisplay={autoUsdToDisplay}\r\n          dateStringToDisplay={dateStringToDisplay}\r\n        />\r\n      )}\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default RecentCakeProfitCountdownRow\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,EAAEC,IAAI,QAAQ,oBAAoB;AAC/C,SAASC,YAAY,QAAQ,kBAAkB;AAC/C,SAASC,cAAc,QAAQ,uBAAuB;AACtD,SAASC,gBAAgB,QAAQ,mBAAmB;AACpD,SAASC,YAAY,QAAQ,mBAAmB;AAChD,SAASC,oBAAoB,QAAQ,qBAAqB;AAC1D,OAAOC,uBAAuB,MAAM,2BAA2B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE/D,MAAMC,4BAA4B,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzC,MAAM;IAAEC;EAAE,CAAC,GAAGT,cAAc,CAAC,CAAC;EAC9B,MAAM;IAAEU;EAAQ,CAAC,GAAGX,YAAY,CAAC,CAAC;EAClC,MAAM;IACJY,iBAAiB;IACjBC,QAAQ,EAAE;MAAEC,oBAAoB;MAAEC,UAAU;MAAEC;IAAmB;EACnE,CAAC,GAAGb,YAAY,CAAC,CAAC;EAClB,MAAMc,aAAa,GAAGf,gBAAgB,CAAC,CAAC;EACxC,MAAM;IAAEgB,eAAe;IAAEC,iBAAiB;IAAEC;EAAiB,CAAC,GAAGhB,oBAAoB,CACnFO,OAAO,EACPG,oBAAoB,EACpBC,UAAU,EACVH,iBAAiB,EACjBK,aAAa,CAACI,QAAQ,CAAC,CACzB,CAAC;EAED,MAAMC,cAAc,GAAGN,kBAAkB,IAAIO,QAAQ,CAACP,kBAAkB,CAAC,GAAG,IAAI;EAChF,MAAMQ,kBAAkB,GAAG,IAAIC,IAAI,CAACH,cAAc,CAAC;EACnD,MAAMI,mBAAmB,GAAGF,kBAAkB,CAACG,cAAc,CAAC,CAAC;EAE/D,oBACEpB,OAAA,CAACT,IAAI;IAAC8B,UAAU,EAAC,QAAQ;IAACC,cAAc,EAAC,eAAe;IAAAC,QAAA,gBACtDvB,OAAA,CAACR,IAAI;MAACgC,QAAQ,EAAC,MAAM;MAAAD,QAAA,EAAE,GAAGpB,CAAC,CAAC,oBAAoB,CAAC;IAAG;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,EAC3DjB,eAAe,iBACdX,OAAA,CAACF,uBAAuB;MACtB+B,aAAa,EAAEjB,iBAAkB;MACjCkB,oBAAoB,EAAEjB,gBAAiB;MACvCM,mBAAmB,EAAEA;IAAoB;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C,CACF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEX,CAAC;AAAA1B,EAAA,CAhCKD,4BAA4B;EAAA,QAClBP,cAAc,EACRD,YAAY,EAI5BG,YAAY,EACMD,gBAAgB;AAAA;AAAAoC,EAAA,GAPlC9B,4BAA4B;AAkClC,eAAeA,4BAA4B;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}