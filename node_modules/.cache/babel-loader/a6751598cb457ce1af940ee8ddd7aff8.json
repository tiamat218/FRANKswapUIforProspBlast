{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.nodeRipemd160 = exports.nodeSha512 = exports.nodeSha256 = exports.nodeHmacSha512Sign = exports.nodeHmacSha256Sign = exports.nodeAesDecrypt = exports.nodeAesEncrypt = void 0;\nconst crypto_1 = __importDefault(require(\"crypto\"));\nconst enc_utils_1 = require(\"enc-utils\");\nconst constants_1 = require(\"../constants\");\nfunction nodeAesEncrypt(iv, key, data) {\n  const cipher = crypto_1.default.createCipheriv(constants_1.AES_NODE_ALGO, key, iv);\n  return enc_utils_1.bufferToArray(enc_utils_1.concatBuffers(cipher.update(data), cipher.final()));\n}\nexports.nodeAesEncrypt = nodeAesEncrypt;\nfunction nodeAesDecrypt(iv, key, data) {\n  const decipher = crypto_1.default.createDecipheriv(constants_1.AES_NODE_ALGO, key, iv);\n  return enc_utils_1.bufferToArray(enc_utils_1.concatBuffers(decipher.update(data), decipher.final()));\n}\nexports.nodeAesDecrypt = nodeAesDecrypt;\nfunction nodeHmacSha256Sign(key, data) {\n  const buf = crypto_1.default.createHmac(constants_1.HMAC_NODE_ALGO, new Uint8Array(key)).update(data).digest();\n  return enc_utils_1.bufferToArray(buf);\n}\nexports.nodeHmacSha256Sign = nodeHmacSha256Sign;\nfunction nodeHmacSha512Sign(key, data) {\n  const buf = crypto_1.default.createHmac(constants_1.SHA512_NODE_ALGO, new Uint8Array(key)).update(data).digest();\n  return enc_utils_1.bufferToArray(buf);\n}\nexports.nodeHmacSha512Sign = nodeHmacSha512Sign;\nfunction nodeSha256(data) {\n  const buf = crypto_1.default.createHash(constants_1.SHA256_NODE_ALGO).update(data).digest();\n  return enc_utils_1.bufferToArray(buf);\n}\nexports.nodeSha256 = nodeSha256;\nfunction nodeSha512(data) {\n  const buf = crypto_1.default.createHash(constants_1.SHA512_NODE_ALGO).update(data).digest();\n  return enc_utils_1.bufferToArray(buf);\n}\nexports.nodeSha512 = nodeSha512;\nfunction nodeRipemd160(data) {\n  const buf = crypto_1.default.createHash(constants_1.RIPEMD160_NODE_ALGO).update(data).digest();\n  return enc_utils_1.bufferToArray(buf);\n}\nexports.nodeRipemd160 = nodeRipemd160;","map":{"version":3,"names":["crypto_1","__importDefault","require","enc_utils_1","constants_1","nodeAesEncrypt","iv","key","data","cipher","default","createCipheriv","AES_NODE_ALGO","bufferToArray","concatBuffers","update","final","exports","nodeAesDecrypt","decipher","createDecipheriv","nodeHmacSha256Sign","buf","createHmac","HMAC_NODE_ALGO","Uint8Array","digest","nodeHmacSha512Sign","SHA512_NODE_ALGO","nodeSha256","createHash","SHA256_NODE_ALGO","nodeSha512","nodeRipemd160","RIPEMD160_NODE_ALGO"],"sources":["../../../../src/helpers/env/node.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}