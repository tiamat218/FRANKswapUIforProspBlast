{"ast":null,"code":"import _taggedTemplateLiteral from\"C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject;import React,{useState,useCallback}from'react';import styled from'styled-components';import BigNumber from'bignumber.js';import{Button,Flex,Text}from'@pancakeswap/uikit';import{getAddress}from'utils/addressHelpers';import{useAppDispatch}from'state';import{fetchFarmUserDataAsync}from'state/farms';import{useTranslation}from'contexts/Localization';import{useERC20}from'hooks/useContract';import ConnectWalletButton from'components/ConnectWalletButton';import StakeAction from'./StakeAction';import HarvestAction from'./HarvestAction';import useApproveFarm from'../../hooks/useApproveFarm';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Action=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  padding-top: 16px;\\n\"])));const CardActions=_ref=>{let{farm,account,addLiquidityUrl}=_ref;const{t}=useTranslation();const[requestedApproval,setRequestedApproval]=useState(false);const{pid,lpAddresses}=farm;const{allowance:allowanceAsString=0,tokenBalance:tokenBalanceAsString=0,stakedBalance:stakedBalanceAsString=0,earnings:earningsAsString=0}=farm.userData||{};const allowance=new BigNumber(allowanceAsString);const tokenBalance=new BigNumber(tokenBalanceAsString);const stakedBalance=new BigNumber(stakedBalanceAsString);const earnings=new BigNumber(earningsAsString);const lpAddress=getAddress(lpAddresses);const isApproved=account&&allowance&&allowance.isGreaterThan(0);const dispatch=useAppDispatch();const lpContract=useERC20(lpAddress);const{onApprove}=useApproveFarm(lpContract);const handleApprove=useCallback(async()=>{try{setRequestedApproval(true);await onApprove();dispatch(fetchFarmUserDataAsync({account,pids:[pid]}));setRequestedApproval(false);}catch(e){console.error(e);}},[onApprove,dispatch,account,pid]);const renderApprovalOrStakeButton=()=>{return isApproved?/*#__PURE__*/_jsx(StakeAction,{stakedBalance:stakedBalance,tokenBalance:tokenBalance,tokenName:farm.lpSymbol,pid:pid,addLiquidityUrl:addLiquidityUrl}):/*#__PURE__*/_jsx(Button,{mt:\"8px\",width:\"100%\",disabled:requestedApproval,onClick:handleApprove,children:t('Enable Contract')});};return/*#__PURE__*/_jsxs(Action,{children:[/*#__PURE__*/_jsxs(Flex,{children:[/*#__PURE__*/_jsx(Text,{bold:true,textTransform:\"uppercase\",color:\"secondary\",fontSize:\"12px\",pr:\"4px\",children:\"CAKE\"}),/*#__PURE__*/_jsx(Text,{bold:true,textTransform:\"uppercase\",color:\"textSubtle\",fontSize:\"12px\",children:t('Earned')})]}),/*#__PURE__*/_jsx(HarvestAction,{earnings:earnings,pid:pid}),/*#__PURE__*/_jsxs(Flex,{children:[/*#__PURE__*/_jsx(Text,{bold:true,textTransform:\"uppercase\",color:\"secondary\",fontSize:\"12px\",pr:\"4px\",children:farm.lpSymbol}),/*#__PURE__*/_jsx(Text,{bold:true,textTransform:\"uppercase\",color:\"textSubtle\",fontSize:\"12px\",children:t('Staked')})]}),!account?/*#__PURE__*/_jsx(ConnectWalletButton,{mt:\"8px\",width:\"100%\"}):renderApprovalOrStakeButton()]});};export default CardActions;","map":{"version":3,"names":["React","useState","useCallback","styled","BigNumber","Button","Flex","Text","getAddress","useAppDispatch","fetchFarmUserDataAsync","useTranslation","useERC20","ConnectWalletButton","StakeAction","HarvestAction","useApproveFarm","jsx","_jsx","jsxs","_jsxs","Action","div","_templateObject","_taggedTemplateLiteral","CardActions","_ref","farm","account","addLiquidityUrl","t","requestedApproval","setRequestedApproval","pid","lpAddresses","allowance","allowanceAsString","tokenBalance","tokenBalanceAsString","stakedBalance","stakedBalanceAsString","earnings","earningsAsString","userData","lpAddress","isApproved","isGreaterThan","dispatch","lpContract","onApprove","handleApprove","pids","e","console","error","renderApprovalOrStakeButton","tokenName","lpSymbol","mt","width","disabled","onClick","children","bold","textTransform","color","fontSize","pr"],"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/views/Farms/components/FarmCard/CardActionsContainer.tsx"],"sourcesContent":["import React, { useState, useCallback } from 'react'\r\nimport styled from 'styled-components'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Button, Flex, Text } from '@pancakeswap/uikit'\r\nimport { getAddress } from 'utils/addressHelpers'\r\nimport { useAppDispatch } from 'state'\r\nimport { fetchFarmUserDataAsync } from 'state/farms'\r\nimport { Farm } from 'state/types'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useERC20 } from 'hooks/useContract'\r\nimport ConnectWalletButton from 'components/ConnectWalletButton'\r\nimport StakeAction from './StakeAction'\r\nimport HarvestAction from './HarvestAction'\r\nimport useApproveFarm from '../../hooks/useApproveFarm'\r\n\r\nconst Action = styled.div`\r\n  padding-top: 16px;\r\n`\r\nexport interface FarmWithStakedValue extends Farm {\r\n  apr?: number\r\n}\r\n\r\ninterface FarmCardActionsProps {\r\n  farm: FarmWithStakedValue\r\n  account?: string\r\n  addLiquidityUrl?: string\r\n}\r\n\r\nconst CardActions: React.FC<FarmCardActionsProps> = ({ farm, account, addLiquidityUrl }) => {\r\n  const { t } = useTranslation()\r\n  const [requestedApproval, setRequestedApproval] = useState(false)\r\n  const { pid, lpAddresses } = farm\r\n  const {\r\n    allowance: allowanceAsString = 0,\r\n    tokenBalance: tokenBalanceAsString = 0,\r\n    stakedBalance: stakedBalanceAsString = 0,\r\n    earnings: earningsAsString = 0,\r\n  } = farm.userData || {}\r\n  const allowance = new BigNumber(allowanceAsString)\r\n  const tokenBalance = new BigNumber(tokenBalanceAsString)\r\n  const stakedBalance = new BigNumber(stakedBalanceAsString)\r\n  const earnings = new BigNumber(earningsAsString)\r\n  const lpAddress = getAddress(lpAddresses)\r\n  const isApproved = account && allowance && allowance.isGreaterThan(0)\r\n  const dispatch = useAppDispatch()\r\n\r\n  const lpContract = useERC20(lpAddress)\r\n\r\n  const { onApprove } = useApproveFarm(lpContract)\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      setRequestedApproval(true)\r\n      await onApprove()\r\n      dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\r\n      setRequestedApproval(false)\r\n    } catch (e) {\r\n      console.error(e)\r\n    }\r\n  }, [onApprove, dispatch, account, pid])\r\n\r\n  const renderApprovalOrStakeButton = () => {\r\n    return isApproved ? (\r\n      <StakeAction\r\n        stakedBalance={stakedBalance}\r\n        tokenBalance={tokenBalance}\r\n        tokenName={farm.lpSymbol}\r\n        pid={pid}\r\n        addLiquidityUrl={addLiquidityUrl}\r\n      />\r\n    ) : (\r\n      <Button mt=\"8px\" width=\"100%\" disabled={requestedApproval} onClick={handleApprove}>\r\n        {t('Enable Contract')}\r\n      </Button>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Action>\r\n      <Flex>\r\n        <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\" pr=\"4px\">\r\n          CAKE\r\n        </Text>\r\n        <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\r\n          {t('Earned')}\r\n        </Text>\r\n      </Flex>\r\n      <HarvestAction earnings={earnings} pid={pid} />\r\n      <Flex>\r\n        <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\" pr=\"4px\">\r\n          {farm.lpSymbol}\r\n        </Text>\r\n        <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\r\n          {t('Staked')}\r\n        </Text>\r\n      </Flex>\r\n      {!account ? <ConnectWalletButton mt=\"8px\" width=\"100%\" /> : renderApprovalOrStakeButton()}\r\n    </Action>\r\n  )\r\n}\r\n\r\nexport default CardActions\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}