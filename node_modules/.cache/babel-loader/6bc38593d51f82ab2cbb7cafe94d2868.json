{"ast":null,"code":"var _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport { useCallback, useEffect, useState } from 'react';\nimport { useWeb3React } from '@web3-react/core';\nimport { ethers } from 'ethers';\nimport BigNumber from 'bignumber.js';\nimport { useAppDispatch } from 'state';\nimport { updateUserAllowance } from 'state/actions';\nimport { useTranslation } from 'contexts/Localization';\nimport { useCake, useSousChef, useCakeVaultContract } from 'hooks/useContract';\nimport useToast from 'hooks/useToast';\nimport useLastUpdated from 'hooks/useLastUpdated';\nexport const useApprovePool = (lpContract, sousId, earningTokenSymbol) => {\n  _s();\n  const [requestedApproval, setRequestedApproval] = useState(false);\n  const {\n    toastSuccess,\n    toastError\n  } = useToast();\n  const {\n    t\n  } = useTranslation();\n  const dispatch = useAppDispatch();\n  const {\n    account\n  } = useWeb3React();\n  const sousChefContract = useSousChef(sousId);\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true);\n      const tx = await lpContract.approve(sousChefContract.address, ethers.constants.MaxUint256);\n      const receipt = await tx.wait();\n      dispatch(updateUserAllowance(sousId, account));\n      if (receipt.status) {\n        toastSuccess(t('Contract Enabled'), t('You can now stake in the %symbol% pool!', {\n          symbol: earningTokenSymbol\n        }));\n        setRequestedApproval(false);\n      } else {\n        // user rejected tx or didn't go thru\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'));\n        setRequestedApproval(false);\n      }\n    } catch (e) {\n      console.error(e);\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'));\n    }\n  }, [account, dispatch, lpContract, sousChefContract, sousId, earningTokenSymbol, t, toastError, toastSuccess]);\n  return {\n    handleApprove,\n    requestedApproval\n  };\n};\n\n// Approve CAKE auto pool\n_s(useApprovePool, \"gTEIblGPv+nx2FY7sK1CA0guiWE=\", false, function () {\n  return [useToast, useTranslation, useAppDispatch, useWeb3React, useSousChef];\n});\nexport const useVaultApprove = setLastUpdated => {\n  _s2();\n  const [requestedApproval, setRequestedApproval] = useState(false);\n  const {\n    t\n  } = useTranslation();\n  const {\n    toastSuccess,\n    toastError\n  } = useToast();\n  const cakeVaultContract = useCakeVaultContract();\n  const cakeContract = useCake();\n  const handleApprove = async () => {\n    const tx = await cakeContract.approve(cakeVaultContract.address, ethers.constants.MaxUint256);\n    setRequestedApproval(true);\n    const receipt = await tx.wait();\n    if (receipt.status) {\n      toastSuccess(t('Contract Enabled'), t('You can now stake in the %symbol% vault!', {\n        symbol: 'CAKE'\n      }));\n      setLastUpdated();\n      setRequestedApproval(false);\n    } else {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'));\n      setRequestedApproval(false);\n    }\n  };\n  return {\n    handleApprove,\n    requestedApproval\n  };\n};\n_s2(useVaultApprove, \"nPde9/5Imrq4z7i/uMeW2IgCL30=\", false, function () {\n  return [useTranslation, useToast, useCakeVaultContract, useCake];\n});\nexport const useCheckVaultApprovalStatus = () => {\n  _s3();\n  const [isVaultApproved, setIsVaultApproved] = useState(false);\n  const {\n    account\n  } = useWeb3React();\n  const cakeContract = useCake();\n  const cakeVaultContract = useCakeVaultContract();\n  const {\n    lastUpdated,\n    setLastUpdated\n  } = useLastUpdated();\n  useEffect(() => {\n    const checkApprovalStatus = async () => {\n      try {\n        const response = await cakeContract.allowance(account, cakeVaultContract.address);\n        const currentAllowance = new BigNumber(response.toString());\n        setIsVaultApproved(currentAllowance.gt(0));\n      } catch (error) {\n        setIsVaultApproved(false);\n      }\n    };\n    checkApprovalStatus();\n  }, [account, cakeContract, cakeVaultContract, lastUpdated]);\n  return {\n    isVaultApproved,\n    setLastUpdated\n  };\n};\n_s3(useCheckVaultApprovalStatus, \"DYtHZy3b2IMwKe/ETQokUhwfsfM=\", false, function () {\n  return [useWeb3React, useCake, useCakeVaultContract, useLastUpdated];\n});","map":{"version":3,"names":["useCallback","useEffect","useState","useWeb3React","ethers","BigNumber","useAppDispatch","updateUserAllowance","useTranslation","useCake","useSousChef","useCakeVaultContract","useToast","useLastUpdated","useApprovePool","lpContract","sousId","earningTokenSymbol","_s","requestedApproval","setRequestedApproval","toastSuccess","toastError","t","dispatch","account","sousChefContract","handleApprove","tx","approve","address","constants","MaxUint256","receipt","wait","status","symbol","e","console","error","useVaultApprove","setLastUpdated","_s2","cakeVaultContract","cakeContract","useCheckVaultApprovalStatus","_s3","isVaultApproved","setIsVaultApproved","lastUpdated","checkApprovalStatus","response","allowance","currentAllowance","toString","gt"],"sources":["C:/Users/frkul/Documents/swapUI_pancake-frontend/src/views/Pools/hooks/useApprove.ts"],"sourcesContent":["import { useCallback, useEffect, useState } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { ethers, Contract } from 'ethers'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useAppDispatch } from 'state'\r\nimport { updateUserAllowance } from 'state/actions'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useCake, useSousChef, useCakeVaultContract } from 'hooks/useContract'\r\nimport useToast from 'hooks/useToast'\r\nimport useLastUpdated from 'hooks/useLastUpdated'\r\n\r\nexport const useApprovePool = (lpContract: Contract, sousId, earningTokenSymbol) => {\r\n  const [requestedApproval, setRequestedApproval] = useState(false)\r\n  const { toastSuccess, toastError } = useToast()\r\n  const { t } = useTranslation()\r\n  const dispatch = useAppDispatch()\r\n  const { account } = useWeb3React()\r\n  const sousChefContract = useSousChef(sousId)\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      setRequestedApproval(true)\r\n      const tx = await lpContract.approve(sousChefContract.address, ethers.constants.MaxUint256)\r\n      const receipt = await tx.wait()\r\n\r\n      dispatch(updateUserAllowance(sousId, account))\r\n      if (receipt.status) {\r\n        toastSuccess(\r\n          t('Contract Enabled'),\r\n          t('You can now stake in the %symbol% pool!', { symbol: earningTokenSymbol }),\r\n        )\r\n        setRequestedApproval(false)\r\n      } else {\r\n        // user rejected tx or didn't go thru\r\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\r\n        setRequestedApproval(false)\r\n      }\r\n    } catch (e) {\r\n      console.error(e)\r\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\r\n    }\r\n  }, [account, dispatch, lpContract, sousChefContract, sousId, earningTokenSymbol, t, toastError, toastSuccess])\r\n\r\n  return { handleApprove, requestedApproval }\r\n}\r\n\r\n// Approve CAKE auto pool\r\nexport const useVaultApprove = (setLastUpdated: () => void) => {\r\n  const [requestedApproval, setRequestedApproval] = useState(false)\r\n  const { t } = useTranslation()\r\n  const { toastSuccess, toastError } = useToast()\r\n  const cakeVaultContract = useCakeVaultContract()\r\n  const cakeContract = useCake()\r\n\r\n  const handleApprove = async () => {\r\n    const tx = await cakeContract.approve(cakeVaultContract.address, ethers.constants.MaxUint256)\r\n    setRequestedApproval(true)\r\n    const receipt = await tx.wait()\r\n    if (receipt.status) {\r\n      toastSuccess(t('Contract Enabled'), t('You can now stake in the %symbol% vault!', { symbol: 'CAKE' }))\r\n      setLastUpdated()\r\n      setRequestedApproval(false)\r\n    } else {\r\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\r\n      setRequestedApproval(false)\r\n    }\r\n  }\r\n\r\n  return { handleApprove, requestedApproval }\r\n}\r\n\r\nexport const useCheckVaultApprovalStatus = () => {\r\n  const [isVaultApproved, setIsVaultApproved] = useState(false)\r\n  const { account } = useWeb3React()\r\n  const cakeContract = useCake()\r\n  const cakeVaultContract = useCakeVaultContract()\r\n  const { lastUpdated, setLastUpdated } = useLastUpdated()\r\n  useEffect(() => {\r\n    const checkApprovalStatus = async () => {\r\n      try {\r\n        const response = await cakeContract.allowance(account, cakeVaultContract.address)\r\n        const currentAllowance = new BigNumber(response.toString())\r\n        setIsVaultApproved(currentAllowance.gt(0))\r\n      } catch (error) {\r\n        setIsVaultApproved(false)\r\n      }\r\n    }\r\n\r\n    checkApprovalStatus()\r\n  }, [account, cakeContract, cakeVaultContract, lastUpdated])\r\n\r\n  return { isVaultApproved, setLastUpdated }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}