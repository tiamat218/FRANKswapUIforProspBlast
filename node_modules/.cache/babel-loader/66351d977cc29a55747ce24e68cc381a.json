{"ast":null,"code":"import { BetPosition } from 'state/types';\nimport { formatNumber } from 'utils/formatBalance';\nexport const formatUsd = usd => {\n  return `$${formatNumber(usd || 0, 3, 3)}`;\n};\nexport const formatBnb = bnb => {\n  return bnb ? bnb.toLocaleString(undefined, {\n    minimumFractionDigits: 3,\n    maximumFractionDigits: 3\n  }) : '0';\n};\nexport const getMultiplier = (total, amount) => {\n  if (total === 0 || amount === 0) {\n    return 0;\n  }\n\n  return total / amount;\n};\n/**\r\n * Calculates the total payout given a bet\r\n */\n\nexport const getPayout = (bet, rewardRate = 1) => {\n  if (!bet || !bet.round) {\n    return 0;\n  }\n\n  const {\n    bullAmount,\n    bearAmount,\n    totalAmount\n  } = bet.round;\n  const multiplier = getMultiplier(totalAmount, bet.position === BetPosition.BULL ? bullAmount : bearAmount);\n  return bet.amount * multiplier * rewardRate;\n};\nexport const getNetPayout = (bet, rewardRate = 1) => {\n  if (!bet || !bet.round) {\n    return 0;\n  }\n\n  const payout = getPayout(bet, rewardRate);\n  return payout - bet.amount;\n};","map":{"version":3,"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/views/Predictions/components/History/helpers.ts"],"names":["BetPosition","formatNumber","formatUsd","usd","formatBnb","bnb","toLocaleString","undefined","minimumFractionDigits","maximumFractionDigits","getMultiplier","total","amount","getPayout","bet","rewardRate","round","bullAmount","bearAmount","totalAmount","multiplier","position","BULL","getNetPayout","payout"],"mappings":"AAAA,SAAcA,WAAd,QAAiC,aAAjC;AACA,SAASC,YAAT,QAA6B,qBAA7B;AAEA,OAAO,MAAMC,SAAS,GAAIC,GAAD,IAAiB;AACxC,SAAQ,IAAGF,YAAY,CAACE,GAAG,IAAI,CAAR,EAAW,CAAX,EAAc,CAAd,CAAiB,EAAxC;AACD,CAFM;AAIP,OAAO,MAAMC,SAAS,GAAIC,GAAD,IAAiB;AACxC,SAAOA,GAAG,GAAGA,GAAG,CAACC,cAAJ,CAAmBC,SAAnB,EAA8B;AAAEC,IAAAA,qBAAqB,EAAE,CAAzB;AAA4BC,IAAAA,qBAAqB,EAAE;AAAnD,GAA9B,CAAH,GAA2F,GAArG;AACD,CAFM;AAIP,OAAO,MAAMC,aAAa,GAAG,CAACC,KAAD,EAAgBC,MAAhB,KAAmC;AAC9D,MAAID,KAAK,KAAK,CAAV,IAAeC,MAAM,KAAK,CAA9B,EAAiC;AAC/B,WAAO,CAAP;AACD;;AAED,SAAOD,KAAK,GAAGC,MAAf;AACD,CANM;AAQP;AACA;AACA;;AACA,OAAO,MAAMC,SAAS,GAAG,CAACC,GAAD,EAAWC,UAAU,GAAG,CAAxB,KAA8B;AACrD,MAAI,CAACD,GAAD,IAAQ,CAACA,GAAG,CAACE,KAAjB,EAAwB;AACtB,WAAO,CAAP;AACD;;AAED,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA,UAAd;AAA0BC,IAAAA;AAA1B,MAA0CL,GAAG,CAACE,KAApD;AACA,QAAMI,UAAU,GAAGV,aAAa,CAACS,WAAD,EAAcL,GAAG,CAACO,QAAJ,KAAiBrB,WAAW,CAACsB,IAA7B,GAAoCL,UAApC,GAAiDC,UAA/D,CAAhC;AACA,SAAOJ,GAAG,CAACF,MAAJ,GAAaQ,UAAb,GAA0BL,UAAjC;AACD,CARM;AAUP,OAAO,MAAMQ,YAAY,GAAG,CAACT,GAAD,EAAWC,UAAU,GAAG,CAAxB,KAAsC;AAChE,MAAI,CAACD,GAAD,IAAQ,CAACA,GAAG,CAACE,KAAjB,EAAwB;AACtB,WAAO,CAAP;AACD;;AAED,QAAMQ,MAAM,GAAGX,SAAS,CAACC,GAAD,EAAMC,UAAN,CAAxB;AACA,SAAOS,MAAM,GAAGV,GAAG,CAACF,MAApB;AACD,CAPM","sourcesContent":["import { Bet, BetPosition } from 'state/types'\r\nimport { formatNumber } from 'utils/formatBalance'\r\n\r\nexport const formatUsd = (usd: number) => {\r\n  return `$${formatNumber(usd || 0, 3, 3)}`\r\n}\r\n\r\nexport const formatBnb = (bnb: number) => {\r\n  return bnb ? bnb.toLocaleString(undefined, { minimumFractionDigits: 3, maximumFractionDigits: 3 }) : '0'\r\n}\r\n\r\nexport const getMultiplier = (total: number, amount: number) => {\r\n  if (total === 0 || amount === 0) {\r\n    return 0\r\n  }\r\n\r\n  return total / amount\r\n}\r\n\r\n/**\r\n * Calculates the total payout given a bet\r\n */\r\nexport const getPayout = (bet: Bet, rewardRate = 1) => {\r\n  if (!bet || !bet.round) {\r\n    return 0\r\n  }\r\n\r\n  const { bullAmount, bearAmount, totalAmount } = bet.round\r\n  const multiplier = getMultiplier(totalAmount, bet.position === BetPosition.BULL ? bullAmount : bearAmount)\r\n  return bet.amount * multiplier * rewardRate\r\n}\r\n\r\nexport const getNetPayout = (bet: Bet, rewardRate = 1): number => {\r\n  if (!bet || !bet.round) {\r\n    return 0\r\n  }\r\n\r\n  const payout = getPayout(bet, rewardRate)\r\n  return payout - bet.amount\r\n}\r\n"]},"metadata":{},"sourceType":"module"}