{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Devrim\\\\Documents\\\\swapUIforProspBlast\\\\src\\\\views\\\\TradingCompetition\\\\components\\\\ClaimModal\\\\index.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { Modal, Button, Flex, AutoRenewIcon, Heading, Text, Image, CrownIcon, TrophyGoldIcon, TeamPlayerIcon } from '@pancakeswap/uikit';\nimport { useTranslation } from 'contexts/Localization';\nimport { useTradingCompetitionContract } from 'hooks/useContract';\nimport useToast from 'hooks/useToast';\nimport { useCompetitionCakeRewards, getRewardGroupAchievements } from '../../helpers';\nimport NftBunnies from '../../pngs/syrup-nft.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageWrapper = styled(Flex)`\n  justify-content: center;\n  width: 100%;\n  height: fit-content;\n  img {\n    border-radius: ${({\n  theme\n}) => theme.radii.default};\n  }\n`;\n_c = ImageWrapper;\nconst ClaimModal = ({\n  onDismiss,\n  onClaimSuccess,\n  userTradingInformation\n}) => {\n  _s();\n  const [isConfirming, setIsConfirming] = useState(false);\n  const tradingCompetitionContract = useTradingCompetitionContract();\n  const {\n    toastSuccess,\n    toastError\n  } = useToast();\n  const {\n    t\n  } = useTranslation();\n  const {\n    userRewardGroup,\n    userCakeRewards,\n    userPointReward,\n    canClaimNFT\n  } = userTradingInformation;\n  const {\n    cakeReward\n  } = useCompetitionCakeRewards(userCakeRewards);\n  const {\n    champion,\n    teamPlayer\n  } = getRewardGroupAchievements(userRewardGroup);\n  const handleClaimClick = async () => {\n    const tx = await tradingCompetitionContract.claimReward();\n    setIsConfirming(true);\n    const receipt = await tx.wait();\n    if (receipt.status) {\n      toastSuccess(t('You have claimed your rewards!'));\n      onDismiss();\n      onClaimSuccess();\n    } else {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'));\n      setIsConfirming(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    title: t('Collect Winnings'),\n    onDismiss: onDismiss,\n    children: /*#__PURE__*/_jsxDEV(Flex, {\n      width: \"100%\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      maxWidth: \"360px\",\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        color: \"secondary\",\n        bold: true,\n        fontSize: \"16px\",\n        children: [t('Congratulations! You won'), \":\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        mt: \"16px\",\n        alignItems: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(TrophyGoldIcon, {\n          mr: [0, '4px']\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), champion && /*#__PURE__*/_jsxDEV(CrownIcon, {\n          mr: [0, '4px']\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 24\n        }, this), teamPlayer && /*#__PURE__*/_jsxDEV(TeamPlayerIcon, {\n          mr: [0, '4px']\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          ml: ['4px', '8px'],\n          children: [\"+\", userPointReward, \" \", t('Points')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Heading, {\n        mt: \"16px\",\n        scale: \"md\",\n        mb: canClaimNFT ? '16px' : '0px',\n        children: [cakeReward.toFixed(2), \" CAKE\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), canClaimNFT ? /*#__PURE__*/_jsxDEV(Flex, {\n        alignItems: \"center\",\n        flexDirection: \"column\",\n        width: \"100%\",\n        children: [/*#__PURE__*/_jsxDEV(ImageWrapper, {\n          children: /*#__PURE__*/_jsxDEV(Image, {\n            src: NftBunnies,\n            width: 128,\n            height: 128\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          mt: \"8px\",\n          fontSize: \"16px\",\n          children: t('Collectible NFT')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this) : null, /*#__PURE__*/_jsxDEV(Button, {\n        mt: \"24px\",\n        width: \"100%\",\n        onClick: handleClaimClick,\n        disabled: isConfirming,\n        isLoading: isConfirming,\n        endIcon: isConfirming ? /*#__PURE__*/_jsxDEV(AutoRenewIcon, {\n          spin: true,\n          color: \"currentColor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 35\n        }, this) : null,\n        children: t('Confirm')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        mt: \"24px\",\n        fontSize: \"12px\",\n        color: \"textSubtle\",\n        textAlign: \"center\",\n        children: t('All prizes will be sent directly to your wallet and user account.')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(ClaimModal, \"On5D8igbWvTlFQCRLR43FZ5lrlM=\", false, function () {\n  return [useTradingCompetitionContract, useToast, useTranslation, useCompetitionCakeRewards];\n});\n_c2 = ClaimModal;\nexport default ClaimModal;\nvar _c, _c2;\n$RefreshReg$(_c, \"ImageWrapper\");\n$RefreshReg$(_c2, \"ClaimModal\");","map":{"version":3,"names":["React","useState","styled","Modal","Button","Flex","AutoRenewIcon","Heading","Text","Image","CrownIcon","TrophyGoldIcon","TeamPlayerIcon","useTranslation","useTradingCompetitionContract","useToast","useCompetitionCakeRewards","getRewardGroupAchievements","NftBunnies","jsxDEV","_jsxDEV","ImageWrapper","theme","radii","default","_c","ClaimModal","onDismiss","onClaimSuccess","userTradingInformation","_s","isConfirming","setIsConfirming","tradingCompetitionContract","toastSuccess","toastError","t","userRewardGroup","userCakeRewards","userPointReward","canClaimNFT","cakeReward","champion","teamPlayer","handleClaimClick","tx","claimReward","receipt","wait","status","title","children","width","flexDirection","alignItems","justifyContent","maxWidth","color","bold","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","mt","mr","ml","scale","mb","toFixed","src","height","onClick","disabled","isLoading","endIcon","spin","textAlign","_c2","$RefreshReg$"],"sources":["C:/Users/Devrim/Documents/swapUIforProspBlast/src/views/TradingCompetition/components/ClaimModal/index.tsx"],"sourcesContent":["import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport {\r\n  Modal,\r\n  Button,\r\n  Flex,\r\n  AutoRenewIcon,\r\n  Heading,\r\n  Text,\r\n  Image,\r\n  CrownIcon,\r\n  TrophyGoldIcon,\r\n  TeamPlayerIcon,\r\n} from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useTradingCompetitionContract } from 'hooks/useContract'\r\nimport useToast from 'hooks/useToast'\r\nimport { useCompetitionCakeRewards, getRewardGroupAchievements } from '../../helpers'\r\nimport { CompetitionProps } from '../../types'\r\nimport NftBunnies from '../../pngs/syrup-nft.png'\r\n\r\nconst ImageWrapper = styled(Flex)`\r\n  justify-content: center;\r\n  width: 100%;\r\n  height: fit-content;\r\n  img {\r\n    border-radius: ${({ theme }) => theme.radii.default};\r\n  }\r\n`\r\n\r\nconst ClaimModal: React.FC<CompetitionProps> = ({ onDismiss, onClaimSuccess, userTradingInformation }) => {\r\n  const [isConfirming, setIsConfirming] = useState(false)\r\n  const tradingCompetitionContract = useTradingCompetitionContract()\r\n  const { toastSuccess, toastError } = useToast()\r\n  const { t } = useTranslation()\r\n\r\n  const { userRewardGroup, userCakeRewards, userPointReward, canClaimNFT } = userTradingInformation\r\n  const { cakeReward } = useCompetitionCakeRewards(userCakeRewards)\r\n  const { champion, teamPlayer } = getRewardGroupAchievements(userRewardGroup)\r\n\r\n  const handleClaimClick = async () => {\r\n    const tx = await tradingCompetitionContract.claimReward()\r\n    setIsConfirming(true)\r\n    const receipt = await tx.wait()\r\n    if (receipt.status) {\r\n      toastSuccess(t('You have claimed your rewards!'))\r\n      onDismiss()\r\n      onClaimSuccess()\r\n    } else {\r\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\r\n      setIsConfirming(false)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Modal title={t('Collect Winnings')} onDismiss={onDismiss}>\r\n      <Flex width=\"100%\" flexDirection=\"column\" alignItems=\"center\" justifyContent=\"center\" maxWidth=\"360px\">\r\n        <Text color=\"secondary\" bold fontSize=\"16px\">\r\n          {t('Congratulations! You won')}:\r\n        </Text>\r\n        <Flex mt=\"16px\" alignItems=\"center\">\r\n          {/* achievements */}\r\n          <TrophyGoldIcon mr={[0, '4px']} />\r\n          {champion && <CrownIcon mr={[0, '4px']} />}\r\n          {teamPlayer && <TeamPlayerIcon mr={[0, '4px']} />}\r\n          <Text ml={['4px', '8px']}>\r\n            +{userPointReward} {t('Points')}\r\n          </Text>\r\n        </Flex>\r\n        {/* cake */}\r\n        <Heading mt=\"16px\" scale=\"md\" mb={canClaimNFT ? '16px' : '0px'}>\r\n          {cakeReward.toFixed(2)} CAKE\r\n        </Heading>\r\n        {/* NFT */}\r\n        {canClaimNFT ? (\r\n          <Flex alignItems=\"center\" flexDirection=\"column\" width=\"100%\">\r\n            <ImageWrapper>\r\n              <Image src={NftBunnies} width={128} height={128} />\r\n            </ImageWrapper>\r\n            <Text mt=\"8px\" fontSize=\"16px\">\r\n              {t('Collectible NFT')}\r\n            </Text>\r\n          </Flex>\r\n        ) : null}\r\n        <Button\r\n          mt=\"24px\"\r\n          width=\"100%\"\r\n          onClick={handleClaimClick}\r\n          disabled={isConfirming}\r\n          isLoading={isConfirming}\r\n          endIcon={isConfirming ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\r\n        >\r\n          {t('Confirm')}\r\n        </Button>\r\n        <Text mt=\"24px\" fontSize=\"12px\" color=\"textSubtle\" textAlign=\"center\">\r\n          {t('All prizes will be sent directly to your wallet and user account.')}\r\n        </Text>\r\n      </Flex>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default ClaimModal\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}