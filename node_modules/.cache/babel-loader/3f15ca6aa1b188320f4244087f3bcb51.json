{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Devrim\\\\Documents\\\\FRANKswapUIforProspBlast\\\\src\\\\views\\\\Predictions\\\\components\\\\History\\\\BetResult.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useWeb3React } from '@web3-react/core';\nimport { Box, Flex, Heading, Text, PrizeIcon, BlockIcon, LinkExternal, useTooltip, InfoIcon } from '@pancakeswap/uikit';\nimport { useAppDispatch } from 'state';\nimport { useTranslation } from 'contexts/Localization';\nimport { useGetRewardRate } from 'state/hooks';\nimport { usePriceBnbBusd } from 'state/farms/hooks';\nimport styled from 'styled-components';\nimport { BetPosition } from 'state/types';\nimport { fetchLedgerData, markBetHistoryAsCollected } from 'state/predictions';\nimport { Result } from 'state/predictions/helpers';\nimport { getBscScanLink } from 'utils';\nimport useIsRefundable from '../../hooks/useIsRefundable';\nimport { formatBnb, getNetPayout } from './helpers';\nimport CollectWinningsButton from '../CollectWinningsButton';\nimport PositionTag from '../PositionTag';\nimport ReclaimPositionButton from '../ReclaimPositionButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst StyledBetResult = styled(Box)`\n  border: 2px solid ${({\n  theme\n}) => theme.colors.textDisabled};\n  border-radius: 16px;\n  margin-bottom: 24px;\n  padding: 16px;\n`;\n_c = StyledBetResult;\nconst Divider = styled.hr`\n  border: 1px solid ${({\n  theme\n}) => theme.colors.cardBorder};\n`;\n_c2 = Divider;\n\nconst BetResult = ({\n  bet,\n  result\n}) => {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  const dispatch = useAppDispatch();\n  const {\n    account\n  } = useWeb3React();\n  const {\n    isRefundable\n  } = useIsRefundable(bet.round.epoch);\n  const bnbBusdPrice = usePriceBnbBusd();\n  const canClaim = !bet.claimed && bet.position === bet.round.position;\n  const rewardRate = useGetRewardRate();\n  const {\n    targetRef,\n    tooltip,\n    tooltipVisible\n  } = useTooltip( /*#__PURE__*/_jsxDEV(Text, {\n    as: \"p\",\n    children: t('Includes your original position and your winnings, minus the %fee% fee.', {\n      fee: '3%'\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this), {\n    placement: 'auto'\n  });\n  const isWinner = result === Result.WIN; // Winners get the payout, otherwise the claim what they put it if it was canceled\n\n  const payout = isWinner ? getNetPayout(bet, rewardRate) : bet.amount;\n  const returned = payout + bet.amount;\n\n  const getHeaderColor = () => {\n    switch (result) {\n      case Result.WIN:\n        return 'warning';\n\n      case Result.LOSE:\n        return 'textSubtle';\n\n      case Result.CANCELED:\n        return 'textDisabled';\n\n      default:\n        return 'text';\n    }\n  };\n\n  const getHeaderText = () => {\n    switch (result) {\n      case Result.WIN:\n        return t('Win');\n\n      case Result.LOSE:\n        return t('Lose');\n\n      case Result.CANCELED:\n        return t('Canceled');\n\n      default:\n        return '';\n    }\n  };\n\n  const getHeaderIcon = () => {\n    switch (result) {\n      case Result.WIN:\n        return /*#__PURE__*/_jsxDEV(PrizeIcon, {\n          color: getHeaderColor()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 16\n        }, this);\n\n      case Result.LOSE:\n      case Result.CANCELED:\n        return /*#__PURE__*/_jsxDEV(BlockIcon, {\n          color: getHeaderColor()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 16\n        }, this);\n\n      default:\n        return null;\n    }\n  };\n\n  const getResultColor = () => {\n    switch (result) {\n      case Result.WIN:\n        return 'success';\n\n      case Result.LOSE:\n        return 'failure';\n\n      case Result.CANCELED:\n      default:\n        return 'text';\n    }\n  };\n\n  const handleSuccess = async () => {\n    // We have to mark the bet as claimed immediately because it does not update fast enough\n    dispatch(markBetHistoryAsCollected({\n      account,\n      betId: bet.id\n    }));\n    dispatch(fetchLedgerData({\n      account,\n      epochs: [bet.round.epoch]\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Flex, {\n      alignItems: \"center\",\n      justifyContent: \"space-between\",\n      mb: \"8px\",\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        children: t('Your History')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        alignItems: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Heading, {\n          as: \"h3\",\n          color: getHeaderColor(),\n          textTransform: \"uppercase\",\n          bold: true,\n          mr: \"4px\",\n          children: getHeaderText()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), getHeaderIcon()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StyledBetResult, {\n      children: [result === Result.WIN && !canClaim && /*#__PURE__*/_jsxDEV(CollectWinningsButton, {\n        payout: formatBnb(payout),\n        betAmount: bet.amount.toString(),\n        epoch: bet.round.epoch,\n        hasClaimed: !canClaim,\n        width: \"100%\",\n        mb: \"16px\",\n        onSuccess: handleSuccess,\n        children: bet.claimed ? t('Already Collected') : t('Collect Winnings')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this), bet.claimed && /*#__PURE__*/_jsxDEV(Flex, {\n        justifyContent: \"center\",\n        children: /*#__PURE__*/_jsxDEV(LinkExternal, {\n          href: getBscScanLink(bet.claimedHash, 'transaction'),\n          mb: \"16px\",\n          children: t('View on BscScan')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }, this), result === Result.CANCELED && isRefundable && /*#__PURE__*/_jsxDEV(ReclaimPositionButton, {\n        epoch: bet.round.epoch,\n        width: \"100%\",\n        mb: \"16px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n        mb: \"16px\",\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          children: [t('Your direction'), \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PositionTag, {\n          betPosition: bet.position,\n          children: bet.position === BetPosition.BULL ? t('Up') : t('Down')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n        mb: \"16px\",\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          children: t('Your position')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          children: `${formatBnb(bet.amount)} BNB`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        alignItems: \"start\",\n        justifyContent: \"space-between\",\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          bold: true,\n          children: [isWinner ? t('Your winnings') : t('Your Result'), \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          style: {\n            textAlign: 'right'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            bold: true,\n            color: getResultColor(),\n            children: `${isWinner ? '+' : '-'}${formatBnb(payout)} BNB`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            fontSize: \"12px\",\n            color: \"textSubtle\",\n            children: `~$${formatBnb(bnbBusdPrice.times(payout).toNumber())}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), isWinner && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Flex, {\n          alignItems: \"start\",\n          justifyContent: \"space-between\",\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            fontSize: \"14px\",\n            color: \"textSubtle\",\n            children: [t('Amount to collect'), \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Flex, {\n            justifyContent: \"end\",\n            children: [/*#__PURE__*/_jsxDEV(Text, {\n              fontSize: \"14px\",\n              color: \"textSubtle\",\n              children: `${formatBnb(returned)} BNB`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              ref: targetRef,\n              children: /*#__PURE__*/_jsxDEV(InfoIcon, {\n                color: \"textSubtle\",\n                ml: \"4px\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 15\n          }, this), tooltipVisible && tooltip]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(BetResult, \"aRxGr73DWcKkDjwaanGy9Sm3SpE=\", false, function () {\n  return [useTranslation, useAppDispatch, useWeb3React, useIsRefundable, usePriceBnbBusd, useGetRewardRate, useTooltip];\n});\n\n_c3 = BetResult;\nexport default BetResult;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"StyledBetResult\");\n$RefreshReg$(_c2, \"Divider\");\n$RefreshReg$(_c3, \"BetResult\");","map":{"version":3,"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/views/Predictions/components/History/BetResult.tsx"],"names":["React","useWeb3React","Box","Flex","Heading","Text","PrizeIcon","BlockIcon","LinkExternal","useTooltip","InfoIcon","useAppDispatch","useTranslation","useGetRewardRate","usePriceBnbBusd","styled","BetPosition","fetchLedgerData","markBetHistoryAsCollected","Result","getBscScanLink","useIsRefundable","formatBnb","getNetPayout","CollectWinningsButton","PositionTag","ReclaimPositionButton","StyledBetResult","theme","colors","textDisabled","Divider","hr","cardBorder","BetResult","bet","result","t","dispatch","account","isRefundable","round","epoch","bnbBusdPrice","canClaim","claimed","position","rewardRate","targetRef","tooltip","tooltipVisible","fee","placement","isWinner","WIN","payout","amount","returned","getHeaderColor","LOSE","CANCELED","getHeaderText","getHeaderIcon","getResultColor","handleSuccess","betId","id","epochs","toString","claimedHash","BULL","textAlign","times","toNumber"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA6B,kBAA7B;AACA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,OAApB,EAA6BC,IAA7B,EAAmCC,SAAnC,EAA8CC,SAA9C,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFC,QAAnF,QAAmG,oBAAnG;AACA,SAASC,cAAT,QAA+B,OAA/B;AACA,SAASC,cAAT,QAA+B,uBAA/B;AACA,SAASC,gBAAT,QAAiC,aAAjC;AACA,SAASC,eAAT,QAAgC,mBAAhC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAAcC,WAAd,QAAiC,aAAjC;AACA,SAASC,eAAT,EAA0BC,yBAA1B,QAA2D,mBAA3D;AACA,SAASC,MAAT,QAAuB,2BAAvB;AACA,SAASC,cAAT,QAA+B,OAA/B;AACA,OAAOC,eAAP,MAA4B,6BAA5B;AACA,SAASC,SAAT,EAAoBC,YAApB,QAAwC,WAAxC;AACA,OAAOC,qBAAP,MAAkC,0BAAlC;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,qBAAP,MAAkC,0BAAlC;;;AAOA,MAAMC,eAAe,GAAGZ,MAAM,CAACb,GAAD,CAAM;AACpC,sBAAsB,CAAC;AAAE0B,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,MAAN,CAAaC,YAAa;AAC/D;AACA;AACA;AACA,CALA;KAAMH,e;AAON,MAAMI,OAAO,GAAGhB,MAAM,CAACiB,EAAG;AAC1B,sBAAsB,CAAC;AAAEJ,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,MAAN,CAAaI,UAAW;AAC7D,CAFA;MAAMF,O;;AAIN,MAAMG,SAAmC,GAAG,CAAC;AAAEC,EAAAA,GAAF;AAAOC,EAAAA;AAAP,CAAD,KAAqB;AAAA;;AAC/D,QAAM;AAAEC,IAAAA;AAAF,MAAQzB,cAAc,EAA5B;AACA,QAAM0B,QAAQ,GAAG3B,cAAc,EAA/B;AACA,QAAM;AAAE4B,IAAAA;AAAF,MAActC,YAAY,EAAhC;AACA,QAAM;AAAEuC,IAAAA;AAAF,MAAmBnB,eAAe,CAACc,GAAG,CAACM,KAAJ,CAAUC,KAAX,CAAxC;AACA,QAAMC,YAAY,GAAG7B,eAAe,EAApC;AACA,QAAM8B,QAAQ,GAAG,CAACT,GAAG,CAACU,OAAL,IAAgBV,GAAG,CAACW,QAAJ,KAAiBX,GAAG,CAACM,KAAJ,CAAUK,QAA5D;AACA,QAAMC,UAAU,GAAGlC,gBAAgB,EAAnC;AACA,QAAM;AAAEmC,IAAAA,SAAF;AAAaC,IAAAA,OAAb;AAAsBC,IAAAA;AAAtB,MAAyCzC,UAAU,eACvD,QAAC,IAAD;AAAM,IAAA,EAAE,EAAC,GAAT;AAAA,cAAc4B,CAAC,CAAC,yEAAD,EAA4E;AAAEc,MAAAA,GAAG,EAAE;AAAP,KAA5E;AAAf;AAAA;AAAA;AAAA;AAAA,UADuD,EAEvD;AAAEC,IAAAA,SAAS,EAAE;AAAb,GAFuD,CAAzD;AAKA,QAAMC,QAAQ,GAAGjB,MAAM,KAAKjB,MAAM,CAACmC,GAAnC,CAb+D,CAe/D;;AACA,QAAMC,MAAM,GAAGF,QAAQ,GAAG9B,YAAY,CAACY,GAAD,EAAMY,UAAN,CAAf,GAAmCZ,GAAG,CAACqB,MAA9D;AACA,QAAMC,QAAQ,GAAGF,MAAM,GAAGpB,GAAG,CAACqB,MAA9B;;AAEA,QAAME,cAAc,GAAG,MAAM;AAC3B,YAAQtB,MAAR;AACE,WAAKjB,MAAM,CAACmC,GAAZ;AACE,eAAO,SAAP;;AACF,WAAKnC,MAAM,CAACwC,IAAZ;AACE,eAAO,YAAP;;AACF,WAAKxC,MAAM,CAACyC,QAAZ;AACE,eAAO,cAAP;;AACF;AACE,eAAO,MAAP;AARJ;AAUD,GAXD;;AAaA,QAAMC,aAAa,GAAG,MAAM;AAC1B,YAAQzB,MAAR;AACE,WAAKjB,MAAM,CAACmC,GAAZ;AACE,eAAOjB,CAAC,CAAC,KAAD,CAAR;;AACF,WAAKlB,MAAM,CAACwC,IAAZ;AACE,eAAOtB,CAAC,CAAC,MAAD,CAAR;;AACF,WAAKlB,MAAM,CAACyC,QAAZ;AACE,eAAOvB,CAAC,CAAC,UAAD,CAAR;;AACF;AACE,eAAO,EAAP;AARJ;AAUD,GAXD;;AAaA,QAAMyB,aAAa,GAAG,MAAM;AAC1B,YAAQ1B,MAAR;AACE,WAAKjB,MAAM,CAACmC,GAAZ;AACE,4BAAO,QAAC,SAAD;AAAW,UAAA,KAAK,EAAEI,cAAc;AAAhC;AAAA;AAAA;AAAA;AAAA,gBAAP;;AACF,WAAKvC,MAAM,CAACwC,IAAZ;AACA,WAAKxC,MAAM,CAACyC,QAAZ;AACE,4BAAO,QAAC,SAAD;AAAW,UAAA,KAAK,EAAEF,cAAc;AAAhC;AAAA;AAAA;AAAA;AAAA,gBAAP;;AACF;AACE,eAAO,IAAP;AAPJ;AASD,GAVD;;AAYA,QAAMK,cAAc,GAAG,MAAM;AAC3B,YAAQ3B,MAAR;AACE,WAAKjB,MAAM,CAACmC,GAAZ;AACE,eAAO,SAAP;;AACF,WAAKnC,MAAM,CAACwC,IAAZ;AACE,eAAO,SAAP;;AACF,WAAKxC,MAAM,CAACyC,QAAZ;AACA;AACE,eAAO,MAAP;AAPJ;AASD,GAVD;;AAYA,QAAMI,aAAa,GAAG,YAAY;AAChC;AACA1B,IAAAA,QAAQ,CAACpB,yBAAyB,CAAC;AAAEqB,MAAAA,OAAF;AAAW0B,MAAAA,KAAK,EAAE9B,GAAG,CAAC+B;AAAtB,KAAD,CAA1B,CAAR;AACA5B,IAAAA,QAAQ,CAACrB,eAAe,CAAC;AAAEsB,MAAAA,OAAF;AAAW4B,MAAAA,MAAM,EAAE,CAAChC,GAAG,CAACM,KAAJ,CAAUC,KAAX;AAAnB,KAAD,CAAhB,CAAR;AACD,GAJD;;AAMA,sBACE;AAAA,4BACE,QAAC,IAAD;AAAM,MAAA,UAAU,EAAC,QAAjB;AAA0B,MAAA,cAAc,EAAC,eAAzC;AAAyD,MAAA,EAAE,EAAC,KAA5D;AAAA,8BACE,QAAC,OAAD;AAAA,kBAAUL,CAAC,CAAC,cAAD;AAAX;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,IAAD;AAAM,QAAA,UAAU,EAAC,QAAjB;AAAA,gCACE,QAAC,OAAD;AAAS,UAAA,EAAE,EAAC,IAAZ;AAAiB,UAAA,KAAK,EAAEqB,cAAc,EAAtC;AAA0C,UAAA,aAAa,EAAC,WAAxD;AAAoE,UAAA,IAAI,MAAxE;AAAyE,UAAA,EAAE,EAAC,KAA5E;AAAA,oBACGG,aAAa;AADhB;AAAA;AAAA;AAAA;AAAA,gBADF,EAIGC,aAAa,EAJhB;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAUE,QAAC,eAAD;AAAA,iBACG1B,MAAM,KAAKjB,MAAM,CAACmC,GAAlB,IAAyB,CAACV,QAA1B,iBACC,QAAC,qBAAD;AACE,QAAA,MAAM,EAAEtB,SAAS,CAACiC,MAAD,CADnB;AAEE,QAAA,SAAS,EAAEpB,GAAG,CAACqB,MAAJ,CAAWY,QAAX,EAFb;AAGE,QAAA,KAAK,EAAEjC,GAAG,CAACM,KAAJ,CAAUC,KAHnB;AAIE,QAAA,UAAU,EAAE,CAACE,QAJf;AAKE,QAAA,KAAK,EAAC,MALR;AAME,QAAA,EAAE,EAAC,MANL;AAOE,QAAA,SAAS,EAAEoB,aAPb;AAAA,kBASG7B,GAAG,CAACU,OAAJ,GAAcR,CAAC,CAAC,mBAAD,CAAf,GAAuCA,CAAC,CAAC,kBAAD;AAT3C;AAAA;AAAA;AAAA;AAAA,cAFJ,EAcGF,GAAG,CAACU,OAAJ,iBACC,QAAC,IAAD;AAAM,QAAA,cAAc,EAAC,QAArB;AAAA,+BACE,QAAC,YAAD;AAAc,UAAA,IAAI,EAAEzB,cAAc,CAACe,GAAG,CAACkC,WAAL,EAAkB,aAAlB,CAAlC;AAAoE,UAAA,EAAE,EAAC,MAAvE;AAAA,oBACGhC,CAAC,CAAC,iBAAD;AADJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAfJ,EAqBGD,MAAM,KAAKjB,MAAM,CAACyC,QAAlB,IAA8BpB,YAA9B,iBACC,QAAC,qBAAD;AAAuB,QAAA,KAAK,EAAEL,GAAG,CAACM,KAAJ,CAAUC,KAAxC;AAA+C,QAAA,KAAK,EAAC,MAArD;AAA4D,QAAA,EAAE,EAAC;AAA/D;AAAA;AAAA;AAAA;AAAA,cAtBJ,eAwBE,QAAC,IAAD;AAAM,QAAA,UAAU,EAAC,QAAjB;AAA0B,QAAA,cAAc,EAAC,eAAzC;AAAyD,QAAA,EAAE,EAAC,MAA5D;AAAA,gCACE,QAAC,IAAD;AAAA,qBAAOL,CAAC,CAAC,gBAAD,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,WAAD;AAAa,UAAA,WAAW,EAAEF,GAAG,CAACW,QAA9B;AAAA,oBACGX,GAAG,CAACW,QAAJ,KAAiB9B,WAAW,CAACsD,IAA7B,GAAoCjC,CAAC,CAAC,IAAD,CAArC,GAA8CA,CAAC,CAAC,MAAD;AADlD;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAxBF,eA8BE,QAAC,IAAD;AAAM,QAAA,UAAU,EAAC,QAAjB;AAA0B,QAAA,cAAc,EAAC,eAAzC;AAAyD,QAAA,EAAE,EAAC,MAA5D;AAAA,gCACE,QAAC,IAAD;AAAA,oBAAOA,CAAC,CAAC,eAAD;AAAR;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,IAAD;AAAA,oBAAQ,GAAEf,SAAS,CAACa,GAAG,CAACqB,MAAL,CAAa;AAAhC;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cA9BF,eAkCE,QAAC,IAAD;AAAM,QAAA,UAAU,EAAC,OAAjB;AAAyB,QAAA,cAAc,EAAC,eAAxC;AAAA,gCACE,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAA,qBAAYH,QAAQ,GAAGhB,CAAC,CAAC,eAAD,CAAJ,GAAwBA,CAAC,CAAC,aAAD,CAA7C;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,GAAD;AAAK,UAAA,KAAK,EAAE;AAAEkC,YAAAA,SAAS,EAAE;AAAb,WAAZ;AAAA,kCACE,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAW,YAAA,KAAK,EAAER,cAAc,EAAhC;AAAA,sBAAsC,GAAEV,QAAQ,GAAG,GAAH,GAAS,GAAI,GAAE/B,SAAS,CAACiC,MAAD,CAAS;AAAjF;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,IAAD;AAAM,YAAA,QAAQ,EAAC,MAAf;AAAsB,YAAA,KAAK,EAAC,YAA5B;AAAA,sBACI,KAAIjC,SAAS,CAACqB,YAAY,CAAC6B,KAAb,CAAmBjB,MAAnB,EAA2BkB,QAA3B,EAAD,CAAwC;AADzD;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAlCF,EA2CGpB,QAAQ,iBACP;AAAA,gCACE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,IAAD;AAAM,UAAA,UAAU,EAAC,OAAjB;AAAyB,UAAA,cAAc,EAAC,eAAxC;AAAA,kCACE,QAAC,IAAD;AAAM,YAAA,QAAQ,EAAC,MAAf;AAAsB,YAAA,KAAK,EAAC,YAA5B;AAAA,uBACGhB,CAAC,CAAC,mBAAD,CADJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE,QAAC,IAAD;AAAM,YAAA,cAAc,EAAC,KAArB;AAAA,oCACE,QAAC,IAAD;AAAM,cAAA,QAAQ,EAAC,MAAf;AAAsB,cAAA,KAAK,EAAC,YAA5B;AAAA,wBAA2C,GAAEf,SAAS,CAACmC,QAAD,CAAW;AAAjE;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAM,cAAA,GAAG,EAAET,SAAX;AAAA,qCACE,QAAC,QAAD;AAAU,gBAAA,KAAK,EAAC,YAAhB;AAA6B,gBAAA,EAAE,EAAC;AAAhC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,EAUGE,cAAc,IAAID,OAVrB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA,sBA5CJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA,kBADF;AA0ED,CArJD;;GAAMf,S;UACUtB,c,EACGD,c,EACGV,Y,EACKoB,e,EACJP,e,EAEFD,gB,EAC4BJ,U;;;MAR3CyB,S;AAuJN,eAAeA,SAAf","sourcesContent":["import React from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { Box, Flex, Heading, Text, PrizeIcon, BlockIcon, LinkExternal, useTooltip, InfoIcon } from '@pancakeswap/uikit'\r\nimport { useAppDispatch } from 'state'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useGetRewardRate } from 'state/hooks'\r\nimport { usePriceBnbBusd } from 'state/farms/hooks'\r\nimport styled from 'styled-components'\r\nimport { Bet, BetPosition } from 'state/types'\r\nimport { fetchLedgerData, markBetHistoryAsCollected } from 'state/predictions'\r\nimport { Result } from 'state/predictions/helpers'\r\nimport { getBscScanLink } from 'utils'\r\nimport useIsRefundable from '../../hooks/useIsRefundable'\r\nimport { formatBnb, getNetPayout } from './helpers'\r\nimport CollectWinningsButton from '../CollectWinningsButton'\r\nimport PositionTag from '../PositionTag'\r\nimport ReclaimPositionButton from '../ReclaimPositionButton'\r\n\r\ninterface BetResultProps {\r\n  bet: Bet\r\n  result: Result\r\n}\r\n\r\nconst StyledBetResult = styled(Box)`\r\n  border: 2px solid ${({ theme }) => theme.colors.textDisabled};\r\n  border-radius: 16px;\r\n  margin-bottom: 24px;\r\n  padding: 16px;\r\n`\r\n\r\nconst Divider = styled.hr`\r\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\r\n`\r\n\r\nconst BetResult: React.FC<BetResultProps> = ({ bet, result }) => {\r\n  const { t } = useTranslation()\r\n  const dispatch = useAppDispatch()\r\n  const { account } = useWeb3React()\r\n  const { isRefundable } = useIsRefundable(bet.round.epoch)\r\n  const bnbBusdPrice = usePriceBnbBusd()\r\n  const canClaim = !bet.claimed && bet.position === bet.round.position\r\n  const rewardRate = useGetRewardRate()\r\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\r\n    <Text as=\"p\">{t('Includes your original position and your winnings, minus the %fee% fee.', { fee: '3%' })}</Text>,\r\n    { placement: 'auto' },\r\n  )\r\n\r\n  const isWinner = result === Result.WIN\r\n\r\n  // Winners get the payout, otherwise the claim what they put it if it was canceled\r\n  const payout = isWinner ? getNetPayout(bet, rewardRate) : bet.amount\r\n  const returned = payout + bet.amount\r\n\r\n  const getHeaderColor = () => {\r\n    switch (result) {\r\n      case Result.WIN:\r\n        return 'warning'\r\n      case Result.LOSE:\r\n        return 'textSubtle'\r\n      case Result.CANCELED:\r\n        return 'textDisabled'\r\n      default:\r\n        return 'text'\r\n    }\r\n  }\r\n\r\n  const getHeaderText = () => {\r\n    switch (result) {\r\n      case Result.WIN:\r\n        return t('Win')\r\n      case Result.LOSE:\r\n        return t('Lose')\r\n      case Result.CANCELED:\r\n        return t('Canceled')\r\n      default:\r\n        return ''\r\n    }\r\n  }\r\n\r\n  const getHeaderIcon = () => {\r\n    switch (result) {\r\n      case Result.WIN:\r\n        return <PrizeIcon color={getHeaderColor()} />\r\n      case Result.LOSE:\r\n      case Result.CANCELED:\r\n        return <BlockIcon color={getHeaderColor()} />\r\n      default:\r\n        return null\r\n    }\r\n  }\r\n\r\n  const getResultColor = () => {\r\n    switch (result) {\r\n      case Result.WIN:\r\n        return 'success'\r\n      case Result.LOSE:\r\n        return 'failure'\r\n      case Result.CANCELED:\r\n      default:\r\n        return 'text'\r\n    }\r\n  }\r\n\r\n  const handleSuccess = async () => {\r\n    // We have to mark the bet as claimed immediately because it does not update fast enough\r\n    dispatch(markBetHistoryAsCollected({ account, betId: bet.id }))\r\n    dispatch(fetchLedgerData({ account, epochs: [bet.round.epoch] }))\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\r\n        <Heading>{t('Your History')}</Heading>\r\n        <Flex alignItems=\"center\">\r\n          <Heading as=\"h3\" color={getHeaderColor()} textTransform=\"uppercase\" bold mr=\"4px\">\r\n            {getHeaderText()}\r\n          </Heading>\r\n          {getHeaderIcon()}\r\n        </Flex>\r\n      </Flex>\r\n      <StyledBetResult>\r\n        {result === Result.WIN && !canClaim && (\r\n          <CollectWinningsButton\r\n            payout={formatBnb(payout)}\r\n            betAmount={bet.amount.toString()}\r\n            epoch={bet.round.epoch}\r\n            hasClaimed={!canClaim}\r\n            width=\"100%\"\r\n            mb=\"16px\"\r\n            onSuccess={handleSuccess}\r\n          >\r\n            {bet.claimed ? t('Already Collected') : t('Collect Winnings')}\r\n          </CollectWinningsButton>\r\n        )}\r\n        {bet.claimed && (\r\n          <Flex justifyContent=\"center\">\r\n            <LinkExternal href={getBscScanLink(bet.claimedHash, 'transaction')} mb=\"16px\">\r\n              {t('View on BscScan')}\r\n            </LinkExternal>\r\n          </Flex>\r\n        )}\r\n        {result === Result.CANCELED && isRefundable && (\r\n          <ReclaimPositionButton epoch={bet.round.epoch} width=\"100%\" mb=\"16px\" />\r\n        )}\r\n        <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"16px\">\r\n          <Text>{t('Your direction')}:</Text>\r\n          <PositionTag betPosition={bet.position}>\r\n            {bet.position === BetPosition.BULL ? t('Up') : t('Down')}\r\n          </PositionTag>\r\n        </Flex>\r\n        <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"16px\">\r\n          <Text>{t('Your position')}</Text>\r\n          <Text>{`${formatBnb(bet.amount)} BNB`}</Text>\r\n        </Flex>\r\n        <Flex alignItems=\"start\" justifyContent=\"space-between\">\r\n          <Text bold>{isWinner ? t('Your winnings') : t('Your Result')}:</Text>\r\n          <Box style={{ textAlign: 'right' }}>\r\n            <Text bold color={getResultColor()}>{`${isWinner ? '+' : '-'}${formatBnb(payout)} BNB`}</Text>\r\n            <Text fontSize=\"12px\" color=\"textSubtle\">\r\n              {`~$${formatBnb(bnbBusdPrice.times(payout).toNumber())}`}\r\n            </Text>\r\n          </Box>\r\n        </Flex>\r\n        {isWinner && (\r\n          <>\r\n            <Divider />\r\n            <Flex alignItems=\"start\" justifyContent=\"space-between\">\r\n              <Text fontSize=\"14px\" color=\"textSubtle\">\r\n                {t('Amount to collect')}:\r\n              </Text>\r\n              <Flex justifyContent=\"end\">\r\n                <Text fontSize=\"14px\" color=\"textSubtle\">{`${formatBnb(returned)} BNB`}</Text>\r\n                <span ref={targetRef}>\r\n                  <InfoIcon color=\"textSubtle\" ml=\"4px\" />\r\n                </span>\r\n              </Flex>\r\n              {tooltipVisible && tooltip}\r\n            </Flex>\r\n          </>\r\n        )}\r\n      </StyledBetResult>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default BetResult\r\n"]},"metadata":{},"sourceType":"module"}