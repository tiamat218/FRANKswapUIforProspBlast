{"ast":null,"code":"import{createReducer}from'@reduxjs/toolkit';import{Field,typeInput}from'./actions';const initialState={independentField:Field.LIQUIDITY_PERCENT,typedValue:'0'};export default createReducer(initialState,builder=>builder.addCase(typeInput,(state,_ref)=>{let{payload:{field,typedValue}}=_ref;return{...state,independentField:field,typedValue};}));","map":{"version":3,"names":["createReducer","Field","typeInput","initialState","independentField","LIQUIDITY_PERCENT","typedValue","builder","addCase","state","_ref","payload","field"],"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/state/burn/reducer.ts"],"sourcesContent":["import { createReducer } from '@reduxjs/toolkit'\r\nimport { Field, typeInput } from './actions'\r\n\r\nexport interface BurnState {\r\n  readonly independentField: Field\r\n  readonly typedValue: string\r\n}\r\n\r\nconst initialState: BurnState = {\r\n  independentField: Field.LIQUIDITY_PERCENT,\r\n  typedValue: '0',\r\n}\r\n\r\nexport default createReducer<BurnState>(initialState, (builder) =>\r\n  builder.addCase(typeInput, (state, { payload: { field, typedValue } }) => {\r\n    return {\r\n      ...state,\r\n      independentField: field,\r\n      typedValue,\r\n    }\r\n  }),\r\n)\r\n"],"mappings":"AAAA,OAASA,aAAa,KAAQ,kBAAkB,CAChD,OAASC,KAAK,CAAEC,SAAS,KAAQ,WAAW,CAO5C,KAAM,CAAAC,YAAuB,CAAG,CAC9BC,gBAAgB,CAAEH,KAAK,CAACI,iBAAiB,CACzCC,UAAU,CAAE,GACd,CAAC,CAED,cAAe,CAAAN,aAAa,CAAYG,YAAY,CAAGI,OAAO,EAC5DA,OAAO,CAACC,OAAO,CAACN,SAAS,CAAE,CAACO,KAAK,CAAAC,IAAA,GAAyC,IAAvC,CAAEC,OAAO,CAAE,CAAEC,KAAK,CAAEN,UAAW,CAAE,CAAC,CAAAI,IAAA,CACnE,MAAO,CACL,GAAGD,KAAK,CACRL,gBAAgB,CAAEQ,KAAK,CACvBN,UACF,CAAC,CACH,CAAC,CACH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}