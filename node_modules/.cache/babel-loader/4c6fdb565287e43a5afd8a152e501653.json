{"ast":null,"code":"import React,{useState}from'react';import{Button,Text,PancakeToggle,Flex,Message,Modal,ModalBody}from'@pancakeswap/uikit';import{useAudioModeManager,useExpertModeManager,useUserTransactionTTL,useUserSlippageTolerance,useUserSingleHopOnly}from'state/user/hooks';import{useTranslation}from'contexts/Localization';import{useSwapActionHandlers}from'state/swap/hooks';import{AutoColumn}from'../../Layout/Column';import QuestionHelper from'../../QuestionHelper';import{RowBetween,RowFixed}from'../../Layout/Row';import TransactionSettings from'./TransactionSettings';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const SettingsModal=_ref=>{let{onDismiss}=_ref;const[showConfirmExpertModal,setShowConfirmExpertModal]=useState(false);const[userSlippageTolerance,setUserslippageTolerance]=useUserSlippageTolerance();const[ttl,setTtl]=useUserTransactionTTL();const[expertMode,toggleExpertMode]=useExpertModeManager();const[singleHopOnly,setSingleHopOnly]=useUserSingleHopOnly();const[audioPlay,toggleSetAudioMode]=useAudioModeManager();const{onChangeRecipient}=useSwapActionHandlers();const{t}=useTranslation();if(showConfirmExpertModal){return/*#__PURE__*/_jsx(Modal,{title:t('Are you sure?'),onBack:()=>setShowConfirmExpertModal(false),onDismiss:onDismiss,style:{maxWidth:'420px'},children:/*#__PURE__*/_jsxs(ModalBody,{children:[/*#__PURE__*/_jsx(Message,{variant:\"warning\",mb:\"24px\",children:/*#__PURE__*/_jsx(Text,{children:t(\"Expert mode turns off the 'Confirm' transaction prompt, and allows high slippage trades that often result in bad rates and lost funds.\")})}),/*#__PURE__*/_jsx(Text,{mb:\"24px\",children:t('Only use this mode if you know what you‚Äôre doing.')}),/*#__PURE__*/_jsx(Button,{variant:\"danger\",id:\"confirm-expert-mode\",onClick:()=>{// eslint-disable-next-line no-alert\nif(window.prompt(\"Please type the word \\\"confirm\\\" to enable expert mode.\")==='confirm'){toggleExpertMode();setShowConfirmExpertModal(false);}},children:t('Turn On Expert Mode')})]})});}return/*#__PURE__*/_jsx(Modal,{title:t('Settings'),headerBackground:\"gradients.cardHeader\",onDismiss:onDismiss,children:/*#__PURE__*/_jsx(ModalBody,{children:/*#__PURE__*/_jsxs(AutoColumn,{gap:\"md\",style:{padding:'1rem'},children:[/*#__PURE__*/_jsx(Text,{bold:true,fontSize:\"20px\",children:t('Transaction Settings')}),/*#__PURE__*/_jsx(TransactionSettings,{rawSlippage:userSlippageTolerance,setRawSlippage:setUserslippageTolerance,deadline:ttl,setDeadline:setTtl}),/*#__PURE__*/_jsx(Text,{bold:true,fontSize:\"20px\",mt:\"32px\",children:t('Interface Settings')}),/*#__PURE__*/_jsxs(RowBetween,{children:[/*#__PURE__*/_jsxs(RowFixed,{children:[/*#__PURE__*/_jsx(Text,{fontSize:\"14px\",children:t('Toggle Expert Mode')}),/*#__PURE__*/_jsx(QuestionHelper,{text:t('Bypasses confirmation modals and allows high slippage trades. Use at your own risk.'),ml:\"4px\"})]}),/*#__PURE__*/_jsx(PancakeToggle,{id:\"toggle-expert-mode-button\",checked:expertMode,onChange:expertMode?()=>{onChangeRecipient(null);toggleExpertMode();}:()=>setShowConfirmExpertModal(true)})]}),/*#__PURE__*/_jsxs(RowBetween,{children:[/*#__PURE__*/_jsxs(RowFixed,{children:[/*#__PURE__*/_jsx(Text,{fontSize:\"14px\",children:t('Disable Multihops')}),/*#__PURE__*/_jsx(QuestionHelper,{text:t('Restricts swaps to direct pairs only.'),ml:\"4px\"})]}),/*#__PURE__*/_jsx(PancakeToggle,{id:\"toggle-disable-multihop-button\",checked:singleHopOnly,onChange:()=>{setSingleHopOnly(!singleHopOnly);}})]}),/*#__PURE__*/_jsxs(Flex,{justifyContent:\"space-between\",alignItems:\"center\",mb:\"8px\",children:[/*#__PURE__*/_jsxs(RowFixed,{children:[/*#__PURE__*/_jsx(Text,{fontSize:\"14px\",children:t('Audio')}),/*#__PURE__*/_jsx(QuestionHelper,{text:t('üê∞ Turn down your volume a bit before you swap'),ml:\"4px\"})]}),/*#__PURE__*/_jsx(PancakeToggle,{checked:audioPlay,onChange:toggleSetAudioMode})]})]})})});};export default SettingsModal;","map":{"version":3,"names":["React","useState","Button","Text","PancakeToggle","Flex","Message","Modal","ModalBody","useAudioModeManager","useExpertModeManager","useUserTransactionTTL","useUserSlippageTolerance","useUserSingleHopOnly","useTranslation","useSwapActionHandlers","AutoColumn","QuestionHelper","RowBetween","RowFixed","TransactionSettings","jsx","_jsx","jsxs","_jsxs","SettingsModal","_ref","onDismiss","showConfirmExpertModal","setShowConfirmExpertModal","userSlippageTolerance","setUserslippageTolerance","ttl","setTtl","expertMode","toggleExpertMode","singleHopOnly","setSingleHopOnly","audioPlay","toggleSetAudioMode","onChangeRecipient","t","title","onBack","style","maxWidth","children","variant","mb","id","onClick","window","prompt","headerBackground","gap","padding","bold","fontSize","rawSlippage","setRawSlippage","deadline","setDeadline","mt","text","ml","checked","onChange","justifyContent","alignItems"],"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/components/App/Settings/SettingsModal.tsx"],"sourcesContent":["import React, { useState } from 'react'\r\nimport { Button, Text, PancakeToggle, Flex, Message, Modal, ModalBody, InjectedModalProps } from '@pancakeswap/uikit'\r\nimport {\r\n  useAudioModeManager,\r\n  useExpertModeManager,\r\n  useUserTransactionTTL,\r\n  useUserSlippageTolerance,\r\n  useUserSingleHopOnly,\r\n} from 'state/user/hooks'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\nimport { useSwapActionHandlers } from 'state/swap/hooks'\r\nimport { AutoColumn } from '../../Layout/Column'\r\nimport QuestionHelper from '../../QuestionHelper'\r\nimport { RowBetween, RowFixed } from '../../Layout/Row'\r\nimport TransactionSettings from './TransactionSettings'\r\n\r\nconst SettingsModal: React.FC<InjectedModalProps> = ({ onDismiss }) => {\r\n  const [showConfirmExpertModal, setShowConfirmExpertModal] = useState(false)\r\n  const [userSlippageTolerance, setUserslippageTolerance] = useUserSlippageTolerance()\r\n  const [ttl, setTtl] = useUserTransactionTTL()\r\n  const [expertMode, toggleExpertMode] = useExpertModeManager()\r\n  const [singleHopOnly, setSingleHopOnly] = useUserSingleHopOnly()\r\n  const [audioPlay, toggleSetAudioMode] = useAudioModeManager()\r\n  const { onChangeRecipient } = useSwapActionHandlers()\r\n\r\n  const { t } = useTranslation()\r\n\r\n  if (showConfirmExpertModal) {\r\n    return (\r\n      <Modal\r\n        title={t('Are you sure?')}\r\n        onBack={() => setShowConfirmExpertModal(false)}\r\n        onDismiss={onDismiss}\r\n        style={{ maxWidth: '420px' }}\r\n      >\r\n        <ModalBody>\r\n          <Message variant=\"warning\" mb=\"24px\">\r\n            <Text>\r\n              {t(\r\n                \"Expert mode turns off the 'Confirm' transaction prompt, and allows high slippage trades that often result in bad rates and lost funds.\",\r\n              )}\r\n            </Text>\r\n          </Message>\r\n          <Text mb=\"24px\">{t('Only use this mode if you know what you‚Äôre doing.')}</Text>\r\n          <Button\r\n            variant=\"danger\"\r\n            id=\"confirm-expert-mode\"\r\n            onClick={() => {\r\n              // eslint-disable-next-line no-alert\r\n              if (window.prompt(`Please type the word \"confirm\" to enable expert mode.`) === 'confirm') {\r\n                toggleExpertMode()\r\n                setShowConfirmExpertModal(false)\r\n              }\r\n            }}\r\n          >\r\n            {t('Turn On Expert Mode')}\r\n          </Button>\r\n        </ModalBody>\r\n      </Modal>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Modal title={t('Settings')} headerBackground=\"gradients.cardHeader\" onDismiss={onDismiss}>\r\n      <ModalBody>\r\n        <AutoColumn gap=\"md\" style={{ padding: '1rem' }}>\r\n          <Text bold fontSize=\"20px\">\r\n            {t('Transaction Settings')}\r\n          </Text>\r\n          <TransactionSettings\r\n            rawSlippage={userSlippageTolerance}\r\n            setRawSlippage={setUserslippageTolerance}\r\n            deadline={ttl}\r\n            setDeadline={setTtl}\r\n          />\r\n          <Text bold fontSize=\"20px\" mt=\"32px\">\r\n            {t('Interface Settings')}\r\n          </Text>\r\n          <RowBetween>\r\n            <RowFixed>\r\n              <Text fontSize=\"14px\">{t('Toggle Expert Mode')}</Text>\r\n              <QuestionHelper\r\n                text={t('Bypasses confirmation modals and allows high slippage trades. Use at your own risk.')}\r\n                ml=\"4px\"\r\n              />\r\n            </RowFixed>\r\n            <PancakeToggle\r\n              id=\"toggle-expert-mode-button\"\r\n              checked={expertMode}\r\n              onChange={\r\n                expertMode\r\n                  ? () => {\r\n                      onChangeRecipient(null)\r\n                      toggleExpertMode()\r\n                    }\r\n                  : () => setShowConfirmExpertModal(true)\r\n              }\r\n            />\r\n          </RowBetween>\r\n          <RowBetween>\r\n            <RowFixed>\r\n              <Text fontSize=\"14px\">{t('Disable Multihops')}</Text>\r\n              <QuestionHelper text={t('Restricts swaps to direct pairs only.')} ml=\"4px\" />\r\n            </RowFixed>\r\n            <PancakeToggle\r\n              id=\"toggle-disable-multihop-button\"\r\n              checked={singleHopOnly}\r\n              onChange={() => {\r\n                setSingleHopOnly(!singleHopOnly)\r\n              }}\r\n            />\r\n          </RowBetween>\r\n          <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"8px\">\r\n            <RowFixed>\r\n              <Text fontSize=\"14px\">{t('Audio')}</Text>\r\n              <QuestionHelper text={t('üê∞ Turn down your volume a bit before you swap')} ml=\"4px\" />\r\n            </RowFixed>\r\n            <PancakeToggle checked={audioPlay} onChange={toggleSetAudioMode} />\r\n          </Flex>\r\n        </AutoColumn>\r\n      </ModalBody>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default SettingsModal\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}