{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Devrim\\\\Documents\\\\swapUIforProspBlast\\\\src\\\\views\\\\Voting\\\\components\\\\CastVoteModal\\\\index.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Box, Modal } from '@pancakeswap/uikit';\nimport { useWeb3React } from '@web3-react/core';\nimport { useTranslation } from 'contexts/Localization';\nimport { SnapshotCommand } from 'state/types';\nimport { signMessage } from 'utils/web3React';\nimport useToast from 'hooks/useToast';\nimport useWeb3Provider from 'hooks/useActiveWeb3React';\nimport useTheme from 'hooks/useTheme';\nimport { ConfirmVoteView } from './types';\nimport MainView from './MainView';\nimport DetailsView from './DetailsView';\nimport { generatePayloadData, sendSnaphotData } from '../../helpers';\nimport useGetVotingPower from '../../hooks/useGetVotingPower';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CastVoteModal = ({\n  onSuccess,\n  proposalId,\n  vote,\n  block,\n  onDismiss\n}) => {\n  _s();\n  const [view, setView] = useState(ConfirmVoteView.MAIN);\n  const [modalIsOpen, setModalIsOpen] = useState(true);\n  const [isPending, setIsPending] = useState(false);\n  const {\n    account\n  } = useWeb3React();\n  const {\n    t\n  } = useTranslation();\n  const {\n    toastError\n  } = useToast();\n  const {\n    library\n  } = useWeb3Provider();\n  const {\n    theme\n  } = useTheme();\n  const {\n    isLoading,\n    total,\n    cakeBalance,\n    cakeVaultBalance,\n    cakePoolBalance,\n    poolsBalance,\n    cakeBnbLpBalance,\n    verificationHash\n  } = useGetVotingPower(block, modalIsOpen);\n  const isStartView = view === ConfirmVoteView.MAIN;\n  const handleBack = isStartView ? null : () => setView(ConfirmVoteView.MAIN);\n  const handleViewDetails = () => setView(ConfirmVoteView.DETAILS);\n  const title = {\n    [ConfirmVoteView.MAIN]: t('Confirm Vote'),\n    [ConfirmVoteView.DETAILS]: t('Voting Power')\n  };\n  const handleDismiss = () => {\n    setModalIsOpen(false);\n    onDismiss();\n  };\n  const handleConfirmVote = async () => {\n    try {\n      setIsPending(true);\n      const voteMsg = JSON.stringify({\n        ...generatePayloadData(),\n        type: SnapshotCommand.VOTE,\n        payload: {\n          proposal: proposalId,\n          choice: vote.value,\n          metadata: {\n            votingPower: total.toString(),\n            verificationHash\n          }\n        }\n      });\n      const sig = await signMessage(library, account, voteMsg);\n      const msg = {\n        address: account,\n        msg: voteMsg,\n        sig\n      };\n\n      // Save proposal to snapshot\n      await sendSnaphotData(msg);\n      setIsPending(false);\n      await onSuccess();\n      handleDismiss();\n    } catch (error) {\n      setIsPending(false);\n      toastError(t('Error'), error === null || error === void 0 ? void 0 : error.message);\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    title: title[view],\n    onBack: handleBack,\n    onDismiss: onDismiss,\n    hideCloseButton: !isStartView,\n    headerBackground: theme.colors.gradients.cardHeader,\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      mb: \"24px\",\n      width: \"320px\",\n      children: [view === ConfirmVoteView.MAIN && /*#__PURE__*/_jsxDEV(MainView, {\n        vote: vote,\n        isLoading: isLoading,\n        isPending: isPending,\n        total: total,\n        onConfirm: handleConfirmVote,\n        onViewDetails: handleViewDetails,\n        onDismiss: handleDismiss\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this), view === ConfirmVoteView.DETAILS && /*#__PURE__*/_jsxDEV(DetailsView, {\n        total: total,\n        cakeBalance: cakeBalance,\n        cakeVaultBalance: cakeVaultBalance,\n        cakePoolBalance: cakePoolBalance,\n        poolsBalance: poolsBalance,\n        cakeBnbLpBalance: cakeBnbLpBalance\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n_s(CastVoteModal, \"yxql+5b140N+vlsg3h0086gKCn8=\", false, function () {\n  return [useWeb3React, useTranslation, useToast, useWeb3Provider, useTheme, useGetVotingPower];\n});\n_c = CastVoteModal;\nexport default CastVoteModal;\nvar _c;\n$RefreshReg$(_c, \"CastVoteModal\");","map":{"version":3,"names":["React","useState","Box","Modal","useWeb3React","useTranslation","SnapshotCommand","signMessage","useToast","useWeb3Provider","useTheme","ConfirmVoteView","MainView","DetailsView","generatePayloadData","sendSnaphotData","useGetVotingPower","jsxDEV","_jsxDEV","CastVoteModal","onSuccess","proposalId","vote","block","onDismiss","_s","view","setView","MAIN","modalIsOpen","setModalIsOpen","isPending","setIsPending","account","t","toastError","library","theme","isLoading","total","cakeBalance","cakeVaultBalance","cakePoolBalance","poolsBalance","cakeBnbLpBalance","verificationHash","isStartView","handleBack","handleViewDetails","DETAILS","title","handleDismiss","handleConfirmVote","voteMsg","JSON","stringify","type","VOTE","payload","proposal","choice","value","metadata","votingPower","toString","sig","msg","address","error","message","console","onBack","hideCloseButton","headerBackground","colors","gradients","cardHeader","children","mb","width","onConfirm","onViewDetails","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Devrim/Documents/swapUIforProspBlast/src/views/Voting/components/CastVoteModal/index.tsx"],"sourcesContent":["import React, { useState } from 'react'\r\nimport { Box, Modal } from '@pancakeswap/uikit'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { SnapshotCommand } from 'state/types'\r\nimport { signMessage } from 'utils/web3React'\r\nimport useToast from 'hooks/useToast'\r\nimport useWeb3Provider from 'hooks/useActiveWeb3React'\r\nimport useTheme from 'hooks/useTheme'\r\nimport { CastVoteModalProps, ConfirmVoteView } from './types'\r\nimport MainView from './MainView'\r\nimport DetailsView from './DetailsView'\r\nimport { generatePayloadData, Message, sendSnaphotData } from '../../helpers'\r\nimport useGetVotingPower from '../../hooks/useGetVotingPower'\r\n\r\nconst CastVoteModal: React.FC<CastVoteModalProps> = ({ onSuccess, proposalId, vote, block, onDismiss }) => {\r\n  const [view, setView] = useState<ConfirmVoteView>(ConfirmVoteView.MAIN)\r\n  const [modalIsOpen, setModalIsOpen] = useState(true)\r\n  const [isPending, setIsPending] = useState(false)\r\n  const { account } = useWeb3React()\r\n  const { t } = useTranslation()\r\n  const { toastError } = useToast()\r\n  const { library } = useWeb3Provider()\r\n  const { theme } = useTheme()\r\n  const {\r\n    isLoading,\r\n    total,\r\n    cakeBalance,\r\n    cakeVaultBalance,\r\n    cakePoolBalance,\r\n    poolsBalance,\r\n    cakeBnbLpBalance,\r\n    verificationHash,\r\n  } = useGetVotingPower(block, modalIsOpen)\r\n\r\n  const isStartView = view === ConfirmVoteView.MAIN\r\n  const handleBack = isStartView ? null : () => setView(ConfirmVoteView.MAIN)\r\n  const handleViewDetails = () => setView(ConfirmVoteView.DETAILS)\r\n\r\n  const title = {\r\n    [ConfirmVoteView.MAIN]: t('Confirm Vote'),\r\n    [ConfirmVoteView.DETAILS]: t('Voting Power'),\r\n  }\r\n\r\n  const handleDismiss = () => {\r\n    setModalIsOpen(false)\r\n    onDismiss()\r\n  }\r\n\r\n  const handleConfirmVote = async () => {\r\n    try {\r\n      setIsPending(true)\r\n      const voteMsg = JSON.stringify({\r\n        ...generatePayloadData(),\r\n        type: SnapshotCommand.VOTE,\r\n        payload: {\r\n          proposal: proposalId,\r\n          choice: vote.value,\r\n          metadata: {\r\n            votingPower: total.toString(),\r\n            verificationHash,\r\n          },\r\n        },\r\n      })\r\n\r\n      const sig = await signMessage(library, account, voteMsg)\r\n      const msg: Message = { address: account, msg: voteMsg, sig }\r\n\r\n      // Save proposal to snapshot\r\n      await sendSnaphotData(msg)\r\n      setIsPending(false)\r\n\r\n      await onSuccess()\r\n\r\n      handleDismiss()\r\n    } catch (error) {\r\n      setIsPending(false)\r\n      toastError(t('Error'), error?.message)\r\n      console.error(error)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      title={title[view]}\r\n      onBack={handleBack}\r\n      onDismiss={onDismiss}\r\n      hideCloseButton={!isStartView}\r\n      headerBackground={theme.colors.gradients.cardHeader}\r\n    >\r\n      <Box mb=\"24px\" width=\"320px\">\r\n        {view === ConfirmVoteView.MAIN && (\r\n          <MainView\r\n            vote={vote}\r\n            isLoading={isLoading}\r\n            isPending={isPending}\r\n            total={total}\r\n            onConfirm={handleConfirmVote}\r\n            onViewDetails={handleViewDetails}\r\n            onDismiss={handleDismiss}\r\n          />\r\n        )}\r\n        {view === ConfirmVoteView.DETAILS && (\r\n          <DetailsView\r\n            total={total}\r\n            cakeBalance={cakeBalance}\r\n            cakeVaultBalance={cakeVaultBalance}\r\n            cakePoolBalance={cakePoolBalance}\r\n            poolsBalance={poolsBalance}\r\n            cakeBnbLpBalance={cakeBnbLpBalance}\r\n          />\r\n        )}\r\n      </Box>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default CastVoteModal\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}