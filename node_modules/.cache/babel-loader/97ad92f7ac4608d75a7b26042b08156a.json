{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Devrim\\\\Documents\\\\swapUIforProspBlast\\\\src\\\\views\\\\Voting\\\\CreateProposal\\\\Choices.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Button, Card, CardBody, CardHeader, Heading } from '@pancakeswap/uikit';\nimport uniqueId from 'lodash/uniqueId';\nimport { useTranslation } from 'contexts/Localization';\nimport Choice from './Choice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MINIMUM_CHOICES = 2;\nexport const makeChoice = () => ({\n  id: uniqueId(),\n  value: ''\n});\nconst Choices = ({\n  choices,\n  onChange\n}) => {\n  _s();\n  const {\n    t\n  } = useTranslation();\n  const hasMinimumChoices = choices.filter(choice => choice.value.length > 0).length >= MINIMUM_CHOICES;\n  const addChoice = () => {\n    onChange([...choices, makeChoice()]);\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n      children: /*#__PURE__*/_jsxDEV(Heading, {\n        as: \"h3\",\n        scale: \"md\",\n        children: t('Choices')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n      children: [choices.map(({\n        id,\n        value\n      }, index) => {\n        const handleTextInput = newValue => {\n          const newChoices = [...choices];\n          const choiceIndex = newChoices.findIndex(newChoice => newChoice.id === id);\n          newChoices[choiceIndex].value = newValue;\n          onChange(newChoices);\n        };\n        const handleRemove = () => {\n          onChange(choices.filter(newPrevChoice => newPrevChoice.id !== id));\n        };\n        return /*#__PURE__*/_jsxDEV(Choice, {\n          scale: \"lg\",\n          onTextInput: handleTextInput,\n          placeholder: t('Input choice text'),\n          value: value,\n          onRemove: index > 1 ? handleRemove : undefined\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"button\",\n        onClick: addChoice,\n        disabled: !hasMinimumChoices,\n        children: t('Add Choice')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(Choices, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n_c = Choices;\nexport default Choices;\nvar _c;\n$RefreshReg$(_c, \"Choices\");","map":{"version":3,"names":["React","Button","Card","CardBody","CardHeader","Heading","uniqueId","useTranslation","Choice","jsxDEV","_jsxDEV","MINIMUM_CHOICES","makeChoice","id","value","Choices","choices","onChange","_s","t","hasMinimumChoices","filter","choice","length","addChoice","children","as","scale","fileName","_jsxFileName","lineNumber","columnNumber","map","index","handleTextInput","newValue","newChoices","choiceIndex","findIndex","newChoice","handleRemove","newPrevChoice","onTextInput","placeholder","onRemove","undefined","type","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Devrim/Documents/swapUIforProspBlast/src/views/Voting/CreateProposal/Choices.tsx"],"sourcesContent":["import React from 'react'\r\nimport { Button, Card, CardBody, CardHeader, Heading } from '@pancakeswap/uikit'\r\nimport uniqueId from 'lodash/uniqueId'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport Choice from './Choice'\r\n\r\nexport interface Choice {\r\n  id: string\r\n  value: string\r\n}\r\n\r\ninterface ChoicesProps {\r\n  choices: Choice[]\r\n  onChange: (newChoices: Choice[]) => void\r\n}\r\n\r\nexport const MINIMUM_CHOICES = 2\r\nexport const makeChoice = (): Choice => ({ id: uniqueId(), value: '' })\r\n\r\nconst Choices: React.FC<ChoicesProps> = ({ choices, onChange }) => {\r\n  const { t } = useTranslation()\r\n  const hasMinimumChoices = choices.filter((choice) => choice.value.length > 0).length >= MINIMUM_CHOICES\r\n\r\n  const addChoice = () => {\r\n    onChange([...choices, makeChoice()])\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <Heading as=\"h3\" scale=\"md\">\r\n          {t('Choices')}\r\n        </Heading>\r\n      </CardHeader>\r\n      <CardBody>\r\n        {choices.map(({ id, value }, index) => {\r\n          const handleTextInput = (newValue: string) => {\r\n            const newChoices = [...choices]\r\n            const choiceIndex = newChoices.findIndex((newChoice) => newChoice.id === id)\r\n\r\n            newChoices[choiceIndex].value = newValue\r\n\r\n            onChange(newChoices)\r\n          }\r\n\r\n          const handleRemove = () => {\r\n            onChange(choices.filter((newPrevChoice) => newPrevChoice.id !== id))\r\n          }\r\n\r\n          return (\r\n            <Choice\r\n              key={id}\r\n              scale=\"lg\"\r\n              onTextInput={handleTextInput}\r\n              placeholder={t('Input choice text')}\r\n              value={value}\r\n              onRemove={index > 1 ? handleRemove : undefined}\r\n            />\r\n          )\r\n        })}\r\n\r\n        <Button type=\"button\" onClick={addChoice} disabled={!hasMinimumChoices}>\r\n          {t('Add Choice')}\r\n        </Button>\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default Choices\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}