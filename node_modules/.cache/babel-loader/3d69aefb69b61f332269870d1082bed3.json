{"ast":null,"code":"import _taggedTemplateLiteral from\"C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject;import React from'react';import styled from'styled-components';import{TabMenu as UIKitTabMenu,Tab,Flex,VerifiedIcon,CommunityIcon}from'@pancakeswap/uikit';import{useTranslation}from'contexts/Localization';import{ProposalType}from'state/types';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const StyledTabMenu=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  background-color: \",\";\\n  padding-top: 16px;\\n\"])),_ref=>{let{theme}=_ref;return theme.colors.input;});const getIndexFromType=proposalType=>{switch(proposalType){case ProposalType.COMMUNITY:return 1;case ProposalType.ALL:return 2;case ProposalType.CORE:default:return 0;}};const getTypeFromIndex=index=>{switch(index){case 1:return ProposalType.COMMUNITY;case 2:return ProposalType.ALL;default:return ProposalType.CORE;}};const TabMenu=_ref2=>{let{proposalType,onTypeChange}=_ref2;const{t}=useTranslation();const handleItemClick=index=>{onTypeChange(getTypeFromIndex(index));};return/*#__PURE__*/_jsx(StyledTabMenu,{children:/*#__PURE__*/_jsxs(UIKitTabMenu,{activeIndex:getIndexFromType(proposalType),onItemClick:handleItemClick,children:[/*#__PURE__*/_jsx(Tab,{children:/*#__PURE__*/_jsxs(Flex,{alignItems:\"center\",children:[/*#__PURE__*/_jsx(VerifiedIcon,{color:\"currentColor\",mr:\"4px\"}),t('Core')]})}),/*#__PURE__*/_jsxs(Tab,{children:[' ',/*#__PURE__*/_jsxs(Flex,{alignItems:\"center\",children:[/*#__PURE__*/_jsx(CommunityIcon,{color:\"currentColor\",mr:\"4px\"}),t('Community')]})]}),/*#__PURE__*/_jsx(Tab,{children:\"All\"})]})});};export default TabMenu;","map":{"version":3,"names":["React","styled","TabMenu","UIKitTabMenu","Tab","Flex","VerifiedIcon","CommunityIcon","useTranslation","ProposalType","jsx","_jsx","jsxs","_jsxs","StyledTabMenu","div","_templateObject","_taggedTemplateLiteral","_ref","theme","colors","input","getIndexFromType","proposalType","COMMUNITY","ALL","CORE","getTypeFromIndex","index","_ref2","onTypeChange","t","handleItemClick","children","activeIndex","onItemClick","alignItems","color","mr"],"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/views/Voting/components/Proposals/TabMenu.tsx"],"sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { TabMenu as UIKitTabMenu, Tab, Flex, VerifiedIcon, CommunityIcon } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { ProposalType } from 'state/types'\r\n\r\ninterface TabMenuProps {\r\n  proposalType: ProposalType\r\n  onTypeChange: (proposalType: ProposalType) => void\r\n}\r\n\r\nconst StyledTabMenu = styled.div`\r\n  background-color: ${({ theme }) => theme.colors.input};\r\n  padding-top: 16px;\r\n`\r\n\r\nconst getIndexFromType = (proposalType: ProposalType) => {\r\n  switch (proposalType) {\r\n    case ProposalType.COMMUNITY:\r\n      return 1\r\n    case ProposalType.ALL:\r\n      return 2\r\n    case ProposalType.CORE:\r\n    default:\r\n      return 0\r\n  }\r\n}\r\n\r\nconst getTypeFromIndex = (index: number) => {\r\n  switch (index) {\r\n    case 1:\r\n      return ProposalType.COMMUNITY\r\n    case 2:\r\n      return ProposalType.ALL\r\n    default:\r\n      return ProposalType.CORE\r\n  }\r\n}\r\n\r\nconst TabMenu: React.FC<TabMenuProps> = ({ proposalType, onTypeChange }) => {\r\n  const { t } = useTranslation()\r\n  const handleItemClick = (index: number) => {\r\n    onTypeChange(getTypeFromIndex(index))\r\n  }\r\n\r\n  return (\r\n    <StyledTabMenu>\r\n      <UIKitTabMenu activeIndex={getIndexFromType(proposalType)} onItemClick={handleItemClick}>\r\n        <Tab>\r\n          <Flex alignItems=\"center\">\r\n            <VerifiedIcon color=\"currentColor\" mr=\"4px\" />\r\n            {t('Core')}\r\n          </Flex>\r\n        </Tab>\r\n        <Tab>\r\n          {' '}\r\n          <Flex alignItems=\"center\">\r\n            <CommunityIcon color=\"currentColor\" mr=\"4px\" />\r\n            {t('Community')}\r\n          </Flex>\r\n        </Tab>\r\n        <Tab>All</Tab>\r\n      </UIKitTabMenu>\r\n    </StyledTabMenu>\r\n  )\r\n}\r\n\r\nexport default TabMenu\r\n"],"mappings":"6MAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,MAAO,CAAAC,MAAM,KAAM,mBAAmB,CACtC,OAASC,OAAO,GAAI,CAAAC,YAAY,CAAEC,GAAG,CAAEC,IAAI,CAAEC,YAAY,CAAEC,aAAa,KAAQ,oBAAoB,CACpG,OAASC,cAAc,KAAQ,uBAAuB,CACtD,OAASC,YAAY,KAAQ,aAAa,QAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAO1C,KAAM,CAAAC,aAAa,CAAGb,MAAM,CAACc,GAAG,CAAAC,eAAA,GAAAA,eAAA,CAAAC,sBAAA,0DACVC,IAAA,MAAC,CAAEC,KAAM,CAAC,CAAAD,IAAA,OAAK,CAAAC,KAAK,CAACC,MAAM,CAACC,KAAK,GAEtD,CAED,KAAM,CAAAC,gBAAgB,CAAIC,YAA0B,EAAK,CACvD,OAAQA,YAAY,EAClB,IAAK,CAAAd,YAAY,CAACe,SAAS,CACzB,MAAO,EAAC,CACV,IAAK,CAAAf,YAAY,CAACgB,GAAG,CACnB,MAAO,EAAC,CACV,IAAK,CAAAhB,YAAY,CAACiB,IAAI,CACtB,QACE,MAAO,EAAC,CACZ,CACF,CAAC,CAED,KAAM,CAAAC,gBAAgB,CAAIC,KAAa,EAAK,CAC1C,OAAQA,KAAK,EACX,IAAK,EAAC,CACJ,MAAO,CAAAnB,YAAY,CAACe,SAAS,CAC/B,IAAK,EAAC,CACJ,MAAO,CAAAf,YAAY,CAACgB,GAAG,CACzB,QACE,MAAO,CAAAhB,YAAY,CAACiB,IAAI,CAC5B,CACF,CAAC,CAED,KAAM,CAAAxB,OAA+B,CAAG2B,KAAA,EAAoC,IAAnC,CAAEN,YAAY,CAAEO,YAAa,CAAC,CAAAD,KAAA,CACrE,KAAM,CAAEE,CAAE,CAAC,CAAGvB,cAAc,CAAC,CAAC,CAC9B,KAAM,CAAAwB,eAAe,CAAIJ,KAAa,EAAK,CACzCE,YAAY,CAACH,gBAAgB,CAACC,KAAK,CAAC,CAAC,CACvC,CAAC,CAED,mBACEjB,IAAA,CAACG,aAAa,EAAAmB,QAAA,cACZpB,KAAA,CAACV,YAAY,EAAC+B,WAAW,CAAEZ,gBAAgB,CAACC,YAAY,CAAE,CAACY,WAAW,CAAEH,eAAgB,CAAAC,QAAA,eACtFtB,IAAA,CAACP,GAAG,EAAA6B,QAAA,cACFpB,KAAA,CAACR,IAAI,EAAC+B,UAAU,CAAC,QAAQ,CAAAH,QAAA,eACvBtB,IAAA,CAACL,YAAY,EAAC+B,KAAK,CAAC,cAAc,CAACC,EAAE,CAAC,KAAK,CAAE,CAAC,CAC7CP,CAAC,CAAC,MAAM,CAAC,EACN,CAAC,CACJ,CAAC,cACNlB,KAAA,CAACT,GAAG,EAAA6B,QAAA,EACD,GAAG,cACJpB,KAAA,CAACR,IAAI,EAAC+B,UAAU,CAAC,QAAQ,CAAAH,QAAA,eACvBtB,IAAA,CAACJ,aAAa,EAAC8B,KAAK,CAAC,cAAc,CAACC,EAAE,CAAC,KAAK,CAAE,CAAC,CAC9CP,CAAC,CAAC,WAAW,CAAC,EACX,CAAC,EACJ,CAAC,cACNpB,IAAA,CAACP,GAAG,EAAA6B,QAAA,CAAC,KAAG,CAAK,CAAC,EACF,CAAC,CACF,CAAC,CAEpB,CAAC,CAED,cAAe,CAAA/B,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module"}