{"ast":null,"code":"import{useEffect,useState}from'react';import{useTranslation}from'contexts/Localization';import BigNumber from'bignumber.js';import{BIG_ZERO}from'utils/bigNumber';import{multicallv2}from'utils/multicall';import profileABI from'config/abi/pancakeProfile.json';import{getPancakeProfileAddress}from'utils/addressHelpers';import useToast from'hooks/useToast';const useGetProfileCosts=()=>{const{t}=useTranslation();const[costs,setCosts]=useState({numberCakeToReactivate:BIG_ZERO,numberCakeToRegister:BIG_ZERO,numberCakeToUpdate:BIG_ZERO});const{toastError}=useToast();useEffect(()=>{const fetchCosts=async()=>{try{const calls=['numberCakeToReactivate','numberCakeToRegister','numberCakeToUpdate'].map(method=>({address:getPancakeProfileAddress(),name:method}));const[[numberCakeToReactivate],[numberCakeToRegister],[numberCakeToUpdate]]=await multicallv2(profileABI,calls);setCosts({numberCakeToReactivate:new BigNumber(numberCakeToReactivate.toString()),numberCakeToRegister:new BigNumber(numberCakeToRegister.toString()),numberCakeToUpdate:new BigNumber(numberCakeToUpdate.toString())});}catch(error){toastError(t('Error'),t('Could not retrieve CAKE costs for profile'));}};fetchCosts();},[setCosts,toastError,t]);return costs;};export default useGetProfileCosts;","map":{"version":3,"names":["useEffect","useState","useTranslation","BigNumber","BIG_ZERO","multicallv2","profileABI","getPancakeProfileAddress","useToast","useGetProfileCosts","t","costs","setCosts","numberCakeToReactivate","numberCakeToRegister","numberCakeToUpdate","toastError","fetchCosts","calls","map","method","address","name","toString","error"],"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/views/Profile/hooks/useGetProfileCosts.ts"],"sourcesContent":["import { useEffect, useState } from 'react'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport BigNumber from 'bignumber.js'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\nimport { multicallv2 } from 'utils/multicall'\r\nimport profileABI from 'config/abi/pancakeProfile.json'\r\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\r\nimport useToast from 'hooks/useToast'\r\n\r\nconst useGetProfileCosts = () => {\r\n  const { t } = useTranslation()\r\n  const [costs, setCosts] = useState({\r\n    numberCakeToReactivate: BIG_ZERO,\r\n    numberCakeToRegister: BIG_ZERO,\r\n    numberCakeToUpdate: BIG_ZERO,\r\n  })\r\n  const { toastError } = useToast()\r\n\r\n  useEffect(() => {\r\n    const fetchCosts = async () => {\r\n      try {\r\n        const calls = ['numberCakeToReactivate', 'numberCakeToRegister', 'numberCakeToUpdate'].map((method) => ({\r\n          address: getPancakeProfileAddress(),\r\n          name: method,\r\n        }))\r\n        const [[numberCakeToReactivate], [numberCakeToRegister], [numberCakeToUpdate]] = await multicallv2(\r\n          profileABI,\r\n          calls,\r\n        )\r\n\r\n        setCosts({\r\n          numberCakeToReactivate: new BigNumber(numberCakeToReactivate.toString()),\r\n          numberCakeToRegister: new BigNumber(numberCakeToRegister.toString()),\r\n          numberCakeToUpdate: new BigNumber(numberCakeToUpdate.toString()),\r\n        })\r\n      } catch (error) {\r\n        toastError(t('Error'), t('Could not retrieve CAKE costs for profile'))\r\n      }\r\n    }\r\n\r\n    fetchCosts()\r\n  }, [setCosts, toastError, t])\r\n\r\n  return costs\r\n}\r\n\r\nexport default useGetProfileCosts\r\n"],"mappings":"AAAA,OAASA,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAC3C,OAASC,cAAc,KAAQ,uBAAuB,CACtD,MAAO,CAAAC,SAAS,KAAM,cAAc,CACpC,OAASC,QAAQ,KAAQ,iBAAiB,CAC1C,OAASC,WAAW,KAAQ,iBAAiB,CAC7C,MAAO,CAAAC,UAAU,KAAM,gCAAgC,CACvD,OAASC,wBAAwB,KAAQ,sBAAsB,CAC/D,MAAO,CAAAC,QAAQ,KAAM,gBAAgB,CAErC,KAAM,CAAAC,kBAAkB,CAAGA,CAAA,GAAM,CAC/B,KAAM,CAAEC,CAAE,CAAC,CAAGR,cAAc,CAAC,CAAC,CAC9B,KAAM,CAACS,KAAK,CAAEC,QAAQ,CAAC,CAAGX,QAAQ,CAAC,CACjCY,sBAAsB,CAAET,QAAQ,CAChCU,oBAAoB,CAAEV,QAAQ,CAC9BW,kBAAkB,CAAEX,QACtB,CAAC,CAAC,CACF,KAAM,CAAEY,UAAW,CAAC,CAAGR,QAAQ,CAAC,CAAC,CAEjCR,SAAS,CAAC,IAAM,CACd,KAAM,CAAAiB,UAAU,CAAG,KAAAA,CAAA,GAAY,CAC7B,GAAI,CACF,KAAM,CAAAC,KAAK,CAAG,CAAC,wBAAwB,CAAE,sBAAsB,CAAE,oBAAoB,CAAC,CAACC,GAAG,CAAEC,MAAM,GAAM,CACtGC,OAAO,CAAEd,wBAAwB,CAAC,CAAC,CACnCe,IAAI,CAAEF,MACR,CAAC,CAAC,CAAC,CACH,KAAM,CAAC,CAACP,sBAAsB,CAAC,CAAE,CAACC,oBAAoB,CAAC,CAAE,CAACC,kBAAkB,CAAC,CAAC,CAAG,KAAM,CAAAV,WAAW,CAChGC,UAAU,CACVY,KACF,CAAC,CAEDN,QAAQ,CAAC,CACPC,sBAAsB,CAAE,GAAI,CAAAV,SAAS,CAACU,sBAAsB,CAACU,QAAQ,CAAC,CAAC,CAAC,CACxET,oBAAoB,CAAE,GAAI,CAAAX,SAAS,CAACW,oBAAoB,CAACS,QAAQ,CAAC,CAAC,CAAC,CACpER,kBAAkB,CAAE,GAAI,CAAAZ,SAAS,CAACY,kBAAkB,CAACQ,QAAQ,CAAC,CAAC,CACjE,CAAC,CAAC,CACJ,CAAE,MAAOC,KAAK,CAAE,CACdR,UAAU,CAACN,CAAC,CAAC,OAAO,CAAC,CAAEA,CAAC,CAAC,2CAA2C,CAAC,CAAC,CACxE,CACF,CAAC,CAEDO,UAAU,CAAC,CAAC,CACd,CAAC,CAAE,CAACL,QAAQ,CAAEI,UAAU,CAAEN,CAAC,CAAC,CAAC,CAE7B,MAAO,CAAAC,KAAK,CACd,CAAC,CAED,cAAe,CAAAF,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"module"}