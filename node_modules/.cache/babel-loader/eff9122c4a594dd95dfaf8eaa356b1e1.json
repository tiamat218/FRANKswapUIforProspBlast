{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Devrim\\\\Documents\\\\swapUIforProspBlast\\\\src\\\\views\\\\Pools\\\\components\\\\CakeVaultCard\\\\VaultCardActions\\\\VaultStakeActions.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Flex, Button, useModal, Skeleton } from '@pancakeswap/uikit';\nimport { useTranslation } from 'contexts/Localization';\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal';\nimport VaultStakeModal from '../VaultStakeModal';\nimport HasSharesActions from './HasSharesActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VaultStakeActions = ({\n  pool,\n  stakingTokenBalance,\n  accountHasSharesStaked,\n  isLoading = false\n}) => {\n  _s();\n  const {\n    stakingToken\n  } = pool;\n  const {\n    t\n  } = useTranslation();\n  const [onPresentTokenRequired] = useModal( /*#__PURE__*/_jsxDEV(NotEnoughTokensModal, {\n    tokenSymbol: stakingToken.symbol\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 45\n  }, this));\n  const [onPresentStake] = useModal( /*#__PURE__*/_jsxDEV(VaultStakeModal, {\n    stakingMax: stakingTokenBalance,\n    pool: pool\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 37\n  }, this));\n  const renderStakeAction = () => {\n    return accountHasSharesStaked ? /*#__PURE__*/_jsxDEV(HasSharesActions, {\n      pool: pool,\n      stakingTokenBalance: stakingTokenBalance\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(Button, {\n      onClick: stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired,\n      children: t('Stake')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    flexDirection: \"column\",\n    children: isLoading ? /*#__PURE__*/_jsxDEV(Skeleton, {\n      width: \"100%\",\n      height: \"52px\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 52\n    }, this) : renderStakeAction()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 10\n  }, this);\n};\n_s(VaultStakeActions, \"/ub3KyQJj4Wq9GKX5dYAT/NZXzk=\", false, function () {\n  return [useTranslation, useModal, useModal];\n});\n_c = VaultStakeActions;\nexport default VaultStakeActions;\nvar _c;\n$RefreshReg$(_c, \"VaultStakeActions\");","map":{"version":3,"names":["React","Flex","Button","useModal","Skeleton","useTranslation","NotEnoughTokensModal","VaultStakeModal","HasSharesActions","jsxDEV","_jsxDEV","VaultStakeActions","pool","stakingTokenBalance","accountHasSharesStaked","isLoading","_s","stakingToken","t","onPresentTokenRequired","tokenSymbol","symbol","fileName","_jsxFileName","lineNumber","columnNumber","onPresentStake","stakingMax","renderStakeAction","onClick","gt","children","flexDirection","width","height","_c","$RefreshReg$"],"sources":["C:/Users/Devrim/Documents/swapUIforProspBlast/src/views/Pools/components/CakeVaultCard/VaultCardActions/VaultStakeActions.tsx"],"sourcesContent":["import React from 'react'\r\nimport { Flex, Button, useModal, Skeleton } from '@pancakeswap/uikit'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { Pool } from 'state/types'\r\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\r\nimport VaultStakeModal from '../VaultStakeModal'\r\nimport HasSharesActions from './HasSharesActions'\r\n\r\ninterface VaultStakeActionsProps {\r\n  pool: Pool\r\n  stakingTokenBalance: BigNumber\r\n  accountHasSharesStaked: boolean\r\n  isLoading?: boolean\r\n}\r\n\r\nconst VaultStakeActions: React.FC<VaultStakeActionsProps> = ({\r\n  pool,\r\n  stakingTokenBalance,\r\n  accountHasSharesStaked,\r\n  isLoading = false,\r\n}) => {\r\n  const { stakingToken } = pool\r\n  const { t } = useTranslation()\r\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\r\n  const [onPresentStake] = useModal(<VaultStakeModal stakingMax={stakingTokenBalance} pool={pool} />)\r\n\r\n  const renderStakeAction = () => {\r\n    return accountHasSharesStaked ? (\r\n      <HasSharesActions pool={pool} stakingTokenBalance={stakingTokenBalance} />\r\n    ) : (\r\n      <Button onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>{t('Stake')}</Button>\r\n    )\r\n  }\r\n\r\n  return <Flex flexDirection=\"column\">{isLoading ? <Skeleton width=\"100%\" height=\"52px\" /> : renderStakeAction()}</Flex>\r\n}\r\n\r\nexport default VaultStakeActions\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,EAAEC,MAAM,EAAEC,QAAQ,EAAEC,QAAQ,QAAQ,oBAAoB;AAErE,SAASC,cAAc,QAAQ,uBAAuB;AAEtD,OAAOC,oBAAoB,MAAM,4CAA4C;AAC7E,OAAOC,eAAe,MAAM,oBAAoB;AAChD,OAAOC,gBAAgB,MAAM,oBAAoB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AASjD,MAAMC,iBAAmD,GAAGA,CAAC;EAC3DC,IAAI;EACJC,mBAAmB;EACnBC,sBAAsB;EACtBC,SAAS,GAAG;AACd,CAAC,KAAK;EAAAC,EAAA;EACJ,MAAM;IAAEC;EAAa,CAAC,GAAGL,IAAI;EAC7B,MAAM;IAAEM;EAAE,CAAC,GAAGb,cAAc,CAAC,CAAC;EAC9B,MAAM,CAACc,sBAAsB,CAAC,GAAGhB,QAAQ,eAACO,OAAA,CAACJ,oBAAoB;IAACc,WAAW,EAAEH,YAAY,CAACI;EAAO;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,CAAC;EACrG,MAAM,CAACC,cAAc,CAAC,GAAGvB,QAAQ,eAACO,OAAA,CAACH,eAAe;IAACoB,UAAU,EAAEd,mBAAoB;IAACD,IAAI,EAAEA;EAAK;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,CAAC;EAEnG,MAAMG,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,OAAOd,sBAAsB,gBAC3BJ,OAAA,CAACF,gBAAgB;MAACI,IAAI,EAAEA,IAAK;MAACC,mBAAmB,EAAEA;IAAoB;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAE1Ef,OAAA,CAACR,MAAM;MAAC2B,OAAO,EAAEhB,mBAAmB,CAACiB,EAAE,CAAC,CAAC,CAAC,GAAGJ,cAAc,GAAGP,sBAAuB;MAAAY,QAAA,EAAEb,CAAC,CAAC,OAAO;IAAC;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CAC3G;EACH,CAAC;EAED,oBAAOf,OAAA,CAACT,IAAI;IAAC+B,aAAa,EAAC,QAAQ;IAAAD,QAAA,EAAEhB,SAAS,gBAAGL,OAAA,CAACN,QAAQ;MAAC6B,KAAK,EAAC,MAAM;MAACC,MAAM,EAAC;IAAM;MAAAZ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,GAAGG,iBAAiB,CAAC;EAAC;IAAAN,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAO,CAAC;AACxH,CAAC;AAAAT,EAAA,CApBKL,iBAAmD;EAAA,QAOzCN,cAAc,EACKF,QAAQ,EAChBA,QAAQ;AAAA;AAAAgC,EAAA,GAT7BxB,iBAAmD;AAsBzD,eAAeA,iBAAiB;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}