{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Devrim\\\\Documents\\\\FRANKswapUIforProspBlast\\\\src\\\\views\\\\TradingCompetition\\\\components\\\\YourScore\\\\UserPrizeGrid.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport { BlockIcon, CheckmarkCircleIcon, Flex, CrownIcon, Text, TeamPlayerIcon, TrophyGoldIcon, Skeleton } from '@pancakeswap/uikit';\nimport { useTranslation } from 'contexts/Localization';\nimport { useCompetitionCakeRewards, getRewardGroupAchievements } from '../../helpers';\nimport { BoldTd, Td, StyledPrizeTable } from '../StyledPrizeTable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledThead = styled.thead`\n  border-bottom: 2px solid ${({\n  theme\n}) => theme.colors.cardBorder};\n`;\n_c = StyledThead;\n\nconst UserPrizeGrid = ({\n  userTradingInformation\n}) => {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  const {\n    userRewardGroup,\n    userCakeRewards,\n    userPointReward,\n    canClaimNFT\n  } = userTradingInformation;\n  const {\n    cakeReward,\n    dollarValueOfCakeReward\n  } = useCompetitionCakeRewards(userCakeRewards);\n  const {\n    champion,\n    teamPlayer\n  } = getRewardGroupAchievements(userRewardGroup);\n  return /*#__PURE__*/_jsxDEV(StyledPrizeTable, {\n    children: [/*#__PURE__*/_jsxDEV(StyledThead, {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: t('CAKE Prizes')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: t('Achievements')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: t('NFT')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(BoldTd, {\n          children: /*#__PURE__*/_jsxDEV(Flex, {\n            flexDirection: \"column\",\n            children: [/*#__PURE__*/_jsxDEV(Text, {\n              bold: true,\n              children: cakeReward.toFixed(2)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 15\n            }, this), dollarValueOfCakeReward ? /*#__PURE__*/_jsxDEV(Text, {\n              fontSize: \"12px\",\n              color: \"textSubtle\",\n              children: [\"~\", dollarValueOfCakeReward, \" USD\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(Skeleton, {\n              height: 24,\n              width: 80\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Td, {\n          children: /*#__PURE__*/_jsxDEV(Flex, {\n            alignItems: \"center\",\n            flexWrap: \"wrap\",\n            justifyContent: \"center\",\n            width: \"100%\",\n            children: [champion && /*#__PURE__*/_jsxDEV(CrownIcon, {\n              mr: [0, '4px']\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 28\n            }, this), teamPlayer && /*#__PURE__*/_jsxDEV(TeamPlayerIcon, {\n              mr: [0, '4px']\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 30\n            }, this), /*#__PURE__*/_jsxDEV(TrophyGoldIcon, {\n              mr: [0, '4px']\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Text, {\n              fontSize: \"12px\",\n              color: \"textSubtle\",\n              textTransform: \"lowercase\",\n              children: [\"+ \", userPointReward, \" \", t('Points')]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Td, {\n          children: canClaimNFT ? /*#__PURE__*/_jsxDEV(CheckmarkCircleIcon, {\n            color: \"success\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 30\n          }, this) : /*#__PURE__*/_jsxDEV(BlockIcon, {\n            color: \"textDisabled\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 72\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UserPrizeGrid, \"OeQ96VIn2ZpbqV4bx3VhuBpbcow=\", false, function () {\n  return [useTranslation, useCompetitionCakeRewards];\n});\n\n_c2 = UserPrizeGrid;\nexport default UserPrizeGrid;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"StyledThead\");\n$RefreshReg$(_c2, \"UserPrizeGrid\");","map":{"version":3,"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/views/TradingCompetition/components/YourScore/UserPrizeGrid.tsx"],"names":["React","styled","BlockIcon","CheckmarkCircleIcon","Flex","CrownIcon","Text","TeamPlayerIcon","TrophyGoldIcon","Skeleton","useTranslation","useCompetitionCakeRewards","getRewardGroupAchievements","BoldTd","Td","StyledPrizeTable","StyledThead","thead","theme","colors","cardBorder","UserPrizeGrid","userTradingInformation","t","userRewardGroup","userCakeRewards","userPointReward","canClaimNFT","cakeReward","dollarValueOfCakeReward","champion","teamPlayer","toFixed"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SACEC,SADF,EAEEC,mBAFF,EAGEC,IAHF,EAIEC,SAJF,EAKEC,IALF,EAMEC,cANF,EAOEC,cAPF,EAQEC,QARF,QASO,oBATP;AAUA,SAASC,cAAT,QAA+B,uBAA/B;AAEA,SAASC,yBAAT,EAAoCC,0BAApC,QAAsE,eAAtE;AACA,SAASC,MAAT,EAAiBC,EAAjB,EAAqBC,gBAArB,QAA6C,qBAA7C;;AAEA,MAAMC,WAAW,GAAGf,MAAM,CAACgB,KAAM;AACjC,6BAA6B,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,MAAN,CAAaC,UAAW;AACpE,CAFA;KAAMJ,W;;AAIN,MAAMK,aAAiF,GAAG,CAAC;AACzFC,EAAAA;AADyF,CAAD,KAEpF;AAAA;;AACJ,QAAM;AAAEC,IAAAA;AAAF,MAAQb,cAAc,EAA5B;AACA,QAAM;AAAEc,IAAAA,eAAF;AAAmBC,IAAAA,eAAnB;AAAoCC,IAAAA,eAApC;AAAqDC,IAAAA;AAArD,MAAqEL,sBAA3E;AACA,QAAM;AAAEM,IAAAA,UAAF;AAAcC,IAAAA;AAAd,MAA0ClB,yBAAyB,CAACc,eAAD,CAAzE;AACA,QAAM;AAAEK,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAA2BnB,0BAA0B,CAACY,eAAD,CAA3D;AAEA,sBACE,QAAC,gBAAD;AAAA,4BACE,QAAC,WAAD;AAAA,6BACE;AAAA,gCACE;AAAA,oBAAKD,CAAC,CAAC,aAAD;AAAN;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,oBAAKA,CAAC,CAAC,cAAD;AAAN;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAA,oBAAKA,CAAC,CAAC,KAAD;AAAN;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAQE;AAAA,6BACE;AAAA,gCACE,QAAC,MAAD;AAAA,iCACE,QAAC,IAAD;AAAM,YAAA,aAAa,EAAC,QAApB;AAAA,oCACE,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAA,wBAAYK,UAAU,CAACI,OAAX,CAAmB,CAAnB;AAAZ;AAAA;AAAA;AAAA;AAAA,oBADF,EAEGH,uBAAuB,gBACtB,QAAC,IAAD;AAAM,cAAA,QAAQ,EAAC,MAAf;AAAsB,cAAA,KAAK,EAAC,YAA5B;AAAA,8BACIA,uBADJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBADsB,gBAKtB,QAAC,QAAD;AAAU,cAAA,MAAM,EAAE,EAAlB;AAAsB,cAAA,KAAK,EAAE;AAA7B;AAAA;AAAA;AAAA;AAAA,oBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAaE,QAAC,EAAD;AAAA,iCACE,QAAC,IAAD;AAAM,YAAA,UAAU,EAAC,QAAjB;AAA0B,YAAA,QAAQ,EAAC,MAAnC;AAA0C,YAAA,cAAc,EAAC,QAAzD;AAAkE,YAAA,KAAK,EAAC,MAAxE;AAAA,uBACGC,QAAQ,iBAAI,QAAC,SAAD;AAAW,cAAA,EAAE,EAAE,CAAC,CAAD,EAAI,KAAJ;AAAf;AAAA;AAAA;AAAA;AAAA,oBADf,EAEGC,UAAU,iBAAI,QAAC,cAAD;AAAgB,cAAA,EAAE,EAAE,CAAC,CAAD,EAAI,KAAJ;AAApB;AAAA;AAAA;AAAA;AAAA,oBAFjB,eAGE,QAAC,cAAD;AAAgB,cAAA,EAAE,EAAE,CAAC,CAAD,EAAI,KAAJ;AAApB;AAAA;AAAA;AAAA;AAAA,oBAHF,eAIE,QAAC,IAAD;AAAM,cAAA,QAAQ,EAAC,MAAf;AAAsB,cAAA,KAAK,EAAC,YAA5B;AAAyC,cAAA,aAAa,EAAC,WAAvD;AAAA,+BACKL,eADL,OACuBH,CAAC,CAAC,QAAD,CADxB;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAbF,eAuBE,QAAC,EAAD;AAAA,oBAAKI,WAAW,gBAAG,QAAC,mBAAD;AAAqB,YAAA,KAAK,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,kBAAH,gBAA6C,QAAC,SAAD;AAAW,YAAA,KAAK,EAAC;AAAjB;AAAA;AAAA;AAAA;AAAA;AAA7D;AAAA;AAAA;AAAA;AAAA,gBAvBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsCD,CA9CD;;GAAMN,a;UAGUX,c,EAEkCC,yB;;;MAL5CU,a;AAgDN,eAAeA,aAAf","sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\nimport {\r\n  BlockIcon,\r\n  CheckmarkCircleIcon,\r\n  Flex,\r\n  CrownIcon,\r\n  Text,\r\n  TeamPlayerIcon,\r\n  TrophyGoldIcon,\r\n  Skeleton,\r\n} from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { UserTradingInformationProps } from '../../types'\r\nimport { useCompetitionCakeRewards, getRewardGroupAchievements } from '../../helpers'\r\nimport { BoldTd, Td, StyledPrizeTable } from '../StyledPrizeTable'\r\n\r\nconst StyledThead = styled.thead`\r\n  border-bottom: 2px solid ${({ theme }) => theme.colors.cardBorder};\r\n`\r\n\r\nconst UserPrizeGrid: React.FC<{ userTradingInformation?: UserTradingInformationProps }> = ({\r\n  userTradingInformation,\r\n}) => {\r\n  const { t } = useTranslation()\r\n  const { userRewardGroup, userCakeRewards, userPointReward, canClaimNFT } = userTradingInformation\r\n  const { cakeReward, dollarValueOfCakeReward } = useCompetitionCakeRewards(userCakeRewards)\r\n  const { champion, teamPlayer } = getRewardGroupAchievements(userRewardGroup)\r\n\r\n  return (\r\n    <StyledPrizeTable>\r\n      <StyledThead>\r\n        <tr>\r\n          <th>{t('CAKE Prizes')}</th>\r\n          <th>{t('Achievements')}</th>\r\n          <th>{t('NFT')}</th>\r\n        </tr>\r\n      </StyledThead>\r\n      <tbody>\r\n        <tr>\r\n          <BoldTd>\r\n            <Flex flexDirection=\"column\">\r\n              <Text bold>{cakeReward.toFixed(2)}</Text>\r\n              {dollarValueOfCakeReward ? (\r\n                <Text fontSize=\"12px\" color=\"textSubtle\">\r\n                  ~{dollarValueOfCakeReward} USD\r\n                </Text>\r\n              ) : (\r\n                <Skeleton height={24} width={80} />\r\n              )}\r\n            </Flex>\r\n          </BoldTd>\r\n          <Td>\r\n            <Flex alignItems=\"center\" flexWrap=\"wrap\" justifyContent=\"center\" width=\"100%\">\r\n              {champion && <CrownIcon mr={[0, '4px']} />}\r\n              {teamPlayer && <TeamPlayerIcon mr={[0, '4px']} />}\r\n              <TrophyGoldIcon mr={[0, '4px']} />\r\n              <Text fontSize=\"12px\" color=\"textSubtle\" textTransform=\"lowercase\">\r\n                + {userPointReward} {t('Points')}\r\n              </Text>\r\n            </Flex>\r\n          </Td>\r\n          <Td>{canClaimNFT ? <CheckmarkCircleIcon color=\"success\" /> : <BlockIcon color=\"textDisabled\" />}</Td>\r\n        </tr>\r\n      </tbody>\r\n    </StyledPrizeTable>\r\n  )\r\n}\r\n\r\nexport default UserPrizeGrid\r\n"]},"metadata":{},"sourceType":"module"}