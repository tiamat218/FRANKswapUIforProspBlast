{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Devrim\\\\Documents\\\\swapUIforProspBlast\\\\src\\\\views\\\\Pools\\\\index.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useMemo, useRef, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport styled from 'styled-components';\nimport BigNumber from 'bignumber.js';\nimport { useWeb3React } from '@web3-react/core';\nimport { Heading, Flex, Image, Text } from '@pancakeswap/uikit';\nimport orderBy from 'lodash/orderBy';\nimport partition from 'lodash/partition';\nimport { useTranslation } from 'contexts/Localization';\nimport usePersistState from 'hooks/usePersistState';\nimport { useFetchPublicPoolsData, usePools, useFetchCakeVault, useCakeVault } from 'state/pools/hooks';\nimport { usePollFarmsData } from 'state/farms/hooks';\nimport { latinise } from 'utils/latinise';\nimport FlexLayout from 'components/Layout/Flex';\nimport Page from 'components/Layout/Page';\nimport PageHeader from 'components/PageHeader';\nimport SearchInput from 'components/SearchInput';\nimport Select from 'components/Select/Select';\nimport Loading from 'components/Loading';\nimport PoolCard from './components/PoolCard';\nimport CakeVaultCard from './components/CakeVaultCard';\nimport PoolTabButtons from './components/PoolTabButtons';\nimport BountyCard from './components/BountyCard';\nimport HelpButton from './components/HelpButton';\nimport PoolsTable from './components/PoolsTable/PoolsTable';\nimport { ViewMode } from './components/ToggleView/ToggleView';\nimport { getAprData, getCakeVaultEarnings } from './helpers';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CardLayout = styled(FlexLayout)`\n  justify-content: center;\n`;\n_c = CardLayout;\nconst PoolControls = styled.div`\n  display: flex;\n  width: 100%;\n  align-items: center;\n  position: relative;\n\n  justify-content: space-between;\n  flex-direction: column;\n  margin-bottom: 32px;\n\n  ${({\n  theme\n}) => theme.mediaQueries.sm} {\n    flex-direction: row;\n    flex-wrap: wrap;\n    padding: 16px 32px;\n    margin-bottom: 0;\n  }\n`;\n_c2 = PoolControls;\nconst FilterContainer = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  padding: 8px 0px;\n\n  ${({\n  theme\n}) => theme.mediaQueries.sm} {\n    width: auto;\n    padding: 0;\n  }\n`;\n_c3 = FilterContainer;\nconst LabelWrapper = styled.div`\n  > ${Text} {\n    font-size: 12px;\n  }\n`;\n_c4 = LabelWrapper;\nconst ControlStretch = styled(Flex)`\n  > div {\n    flex: 1;\n  }\n`;\n_c5 = ControlStretch;\nconst NUMBER_OF_POOLS_VISIBLE = 12;\nconst Pools = () => {\n  _s();\n  const location = useLocation();\n  const {\n    t\n  } = useTranslation();\n  const {\n    account\n  } = useWeb3React();\n  const {\n    pools: poolsWithoutAutoVault,\n    userDataLoaded\n  } = usePools(account);\n  const [stakedOnly, setStakedOnly] = usePersistState(false, {\n    localStorageKey: 'pancake_pool_staked'\n  });\n  const [numberOfPoolsVisible, setNumberOfPoolsVisible] = useState(NUMBER_OF_POOLS_VISIBLE);\n  const [observerIsSet, setObserverIsSet] = useState(false);\n  const loadMoreRef = useRef(null);\n  const [viewMode, setViewMode] = usePersistState(ViewMode.TABLE, {\n    localStorageKey: 'pancake_pool_view'\n  });\n  const [searchQuery, setSearchQuery] = useState('');\n  const [sortOption, setSortOption] = useState('hot');\n  const chosenPoolsLength = useRef(0);\n  const {\n    userData: {\n      cakeAtLastUserAction,\n      userShares\n    },\n    fees: {\n      performanceFee\n    },\n    pricePerFullShare,\n    totalCakeInVault\n  } = useCakeVault();\n  const accountHasVaultShares = userShares && userShares.gt(0);\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100;\n  const pools = useMemo(() => {\n    const cakePool = poolsWithoutAutoVault.find(pool => pool.sousId === 0);\n    const cakeAutoVault = {\n      ...cakePool,\n      isAutoVault: true\n    };\n    return [cakeAutoVault, ...poolsWithoutAutoVault];\n  }, [poolsWithoutAutoVault]);\n\n  // TODO aren't arrays in dep array checked just by reference, i.e. it will rerender every time reference changes?\n  const [finishedPools, openPools] = useMemo(() => partition(pools, pool => pool.isFinished), [pools]);\n  const stakedOnlyFinishedPools = useMemo(() => finishedPools.filter(pool => {\n    if (pool.isAutoVault) {\n      return accountHasVaultShares;\n    }\n    return pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0);\n  }), [finishedPools, accountHasVaultShares]);\n  const stakedOnlyOpenPools = useMemo(() => openPools.filter(pool => {\n    if (pool.isAutoVault) {\n      return accountHasVaultShares;\n    }\n    return pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0);\n  }), [openPools, accountHasVaultShares]);\n  const hasStakeInFinishedPools = stakedOnlyFinishedPools.length > 0;\n  usePollFarmsData();\n  useFetchCakeVault();\n  useFetchPublicPoolsData();\n  useEffect(() => {\n    const showMorePools = entries => {\n      const [entry] = entries;\n      if (entry.isIntersecting) {\n        setNumberOfPoolsVisible(poolsCurrentlyVisible => {\n          if (poolsCurrentlyVisible <= chosenPoolsLength.current) {\n            return poolsCurrentlyVisible + NUMBER_OF_POOLS_VISIBLE;\n          }\n          return poolsCurrentlyVisible;\n        });\n      }\n    };\n    if (!observerIsSet) {\n      const loadMoreObserver = new IntersectionObserver(showMorePools, {\n        rootMargin: '0px',\n        threshold: 1\n      });\n      loadMoreObserver.observe(loadMoreRef.current);\n      setObserverIsSet(true);\n    }\n  }, [observerIsSet]);\n  const showFinishedPools = location.pathname.includes('history');\n  const handleChangeSearchQuery = event => {\n    setSearchQuery(event.target.value);\n  };\n  const handleSortOptionChange = option => {\n    setSortOption(option.value);\n  };\n  const sortPools = poolsToSort => {\n    switch (sortOption) {\n      case 'apr':\n        // Ternary is needed to prevent pools without APR (like MIX) getting top spot\n        return orderBy(poolsToSort, pool => pool.apr ? getAprData(pool, performanceFeeAsDecimal).apr : 0, 'desc');\n      case 'earned':\n        return orderBy(poolsToSort, pool => {\n          if (!pool.userData || !pool.earningTokenPrice) {\n            return 0;\n          }\n          return pool.isAutoVault ? getCakeVaultEarnings(account, cakeAtLastUserAction, userShares, pricePerFullShare, pool.earningTokenPrice).autoUsdToDisplay : pool.userData.pendingReward.times(pool.earningTokenPrice).toNumber();\n        }, 'desc');\n      case 'totalStaked':\n        return orderBy(poolsToSort, pool => pool.isAutoVault ? totalCakeInVault.toNumber() : pool.totalStaked.toNumber(), 'desc');\n      default:\n        return poolsToSort;\n    }\n  };\n  let chosenPools;\n  if (showFinishedPools) {\n    chosenPools = stakedOnly ? stakedOnlyFinishedPools : finishedPools;\n  } else {\n    chosenPools = stakedOnly ? stakedOnlyOpenPools : openPools;\n  }\n  if (searchQuery) {\n    const lowercaseQuery = latinise(searchQuery.toLowerCase());\n    chosenPools = chosenPools.filter(pool => latinise(pool.earningToken.symbol.toLowerCase()).includes(lowercaseQuery));\n  }\n  chosenPools = sortPools(chosenPools).slice(0, numberOfPoolsVisible);\n  chosenPoolsLength.current = chosenPools.length;\n  const cardLayout = /*#__PURE__*/_jsxDEV(CardLayout, {\n    children: chosenPools.map(pool => pool.isAutoVault ? /*#__PURE__*/_jsxDEV(CakeVaultCard, {\n      pool: pool,\n      showStakedOnly: stakedOnly\n    }, \"auto-cake\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(PoolCard, {\n      pool: pool,\n      account: account\n    }, pool.sousId, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 224,\n    columnNumber: 5\n  }, this);\n  const tableLayout = /*#__PURE__*/_jsxDEV(PoolsTable, {\n    pools: chosenPools,\n    account: account,\n    userDataLoaded: userDataLoaded\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 235,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(PageHeader, {\n      children: /*#__PURE__*/_jsxDEV(Flex, {\n        justifyContent: \"space-between\",\n        flexDirection: ['column', null, null, 'row'],\n        children: [/*#__PURE__*/_jsxDEV(Flex, {\n          flex: \"1\",\n          flexDirection: \"column\",\n          mr: ['8px', 0],\n          children: [/*#__PURE__*/_jsxDEV(Heading, {\n            as: \"h1\",\n            scale: \"xxl\",\n            color: \"secondary\",\n            mb: \"24px\",\n            children: t('Syrup Pools')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Heading, {\n            scale: \"md\",\n            color: \"text\",\n            children: t('Just stake some tokens to earn.')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Heading, {\n            scale: \"md\",\n            color: \"text\",\n            children: t('High APR, low risk.')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Flex, {\n          flex: \"1\",\n          height: \"fit-content\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          mt: ['24px', null, '0'],\n          children: [/*#__PURE__*/_jsxDEV(HelpButton, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(BountyCard, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Page, {\n      children: [/*#__PURE__*/_jsxDEV(PoolControls, {\n        children: [/*#__PURE__*/_jsxDEV(PoolTabButtons, {\n          stakedOnly: stakedOnly,\n          setStakedOnly: setStakedOnly,\n          hasStakeInFinishedPools: hasStakeInFinishedPools,\n          viewMode: viewMode,\n          setViewMode: setViewMode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FilterContainer, {\n          children: [/*#__PURE__*/_jsxDEV(LabelWrapper, {\n            children: [/*#__PURE__*/_jsxDEV(Text, {\n              fontSize: \"12px\",\n              bold: true,\n              color: \"textSubtle\",\n              textTransform: \"uppercase\",\n              children: t('Sort by')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ControlStretch, {\n              children: /*#__PURE__*/_jsxDEV(Select, {\n                options: [{\n                  label: t('Hot'),\n                  value: 'hot'\n                }, {\n                  label: t('APR'),\n                  value: 'apr'\n                }, {\n                  label: t('Earned'),\n                  value: 'earned'\n                }, {\n                  label: t('Total staked'),\n                  value: 'totalStaked'\n                }],\n                onChange: handleSortOptionChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(LabelWrapper, {\n            style: {\n              marginLeft: 16\n            },\n            children: [/*#__PURE__*/_jsxDEV(Text, {\n              fontSize: \"12px\",\n              bold: true,\n              color: \"textSubtle\",\n              textTransform: \"uppercase\",\n              children: t('Search')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(SearchInput, {\n              onChange: handleChangeSearchQuery,\n              placeholder: \"Search Pools\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this), showFinishedPools && /*#__PURE__*/_jsxDEV(Text, {\n        fontSize: \"20px\",\n        color: \"failure\",\n        pb: \"32px\",\n        children: t('These pools are no longer distributing rewards. Please unstake your tokens.')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 11\n      }, this), account && !userDataLoaded && stakedOnly && /*#__PURE__*/_jsxDEV(Flex, {\n        justifyContent: \"center\",\n        mb: \"4px\",\n        children: /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 11\n      }, this), viewMode === ViewMode.CARD ? cardLayout : tableLayout, /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: loadMoreRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Image, {\n        mx: \"auto\",\n        mt: \"12px\",\n        src: \"/images/decorations/3d-syrup-bunnies.png\",\n        alt: \"Pancake illustration\",\n        width: 192,\n        height: 184.5\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Pools, \"07fCAbuJL7jrf2i85jsZWBzugo0=\", false, function () {\n  return [useLocation, useTranslation, useWeb3React, usePools, usePersistState, usePersistState, useCakeVault, usePollFarmsData, useFetchCakeVault, useFetchPublicPoolsData];\n});\n_c6 = Pools;\nexport default Pools;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"CardLayout\");\n$RefreshReg$(_c2, \"PoolControls\");\n$RefreshReg$(_c3, \"FilterContainer\");\n$RefreshReg$(_c4, \"LabelWrapper\");\n$RefreshReg$(_c5, \"ControlStretch\");\n$RefreshReg$(_c6, \"Pools\");","map":{"version":3,"names":["React","useEffect","useMemo","useRef","useState","useLocation","styled","BigNumber","useWeb3React","Heading","Flex","Image","Text","orderBy","partition","useTranslation","usePersistState","useFetchPublicPoolsData","usePools","useFetchCakeVault","useCakeVault","usePollFarmsData","latinise","FlexLayout","Page","PageHeader","SearchInput","Select","Loading","PoolCard","CakeVaultCard","PoolTabButtons","BountyCard","HelpButton","PoolsTable","ViewMode","getAprData","getCakeVaultEarnings","jsxDEV","_jsxDEV","Fragment","_Fragment","CardLayout","_c","PoolControls","div","theme","mediaQueries","sm","_c2","FilterContainer","_c3","LabelWrapper","_c4","ControlStretch","_c5","NUMBER_OF_POOLS_VISIBLE","Pools","_s","location","t","account","pools","poolsWithoutAutoVault","userDataLoaded","stakedOnly","setStakedOnly","localStorageKey","numberOfPoolsVisible","setNumberOfPoolsVisible","observerIsSet","setObserverIsSet","loadMoreRef","viewMode","setViewMode","TABLE","searchQuery","setSearchQuery","sortOption","setSortOption","chosenPoolsLength","userData","cakeAtLastUserAction","userShares","fees","performanceFee","pricePerFullShare","totalCakeInVault","accountHasVaultShares","gt","performanceFeeAsDecimal","cakePool","find","pool","sousId","cakeAutoVault","isAutoVault","finishedPools","openPools","isFinished","stakedOnlyFinishedPools","filter","stakedBalance","isGreaterThan","stakedOnlyOpenPools","hasStakeInFinishedPools","length","showMorePools","entries","entry","isIntersecting","poolsCurrentlyVisible","current","loadMoreObserver","IntersectionObserver","rootMargin","threshold","observe","showFinishedPools","pathname","includes","handleChangeSearchQuery","event","target","value","handleSortOptionChange","option","sortPools","poolsToSort","apr","earningTokenPrice","autoUsdToDisplay","pendingReward","times","toNumber","totalStaked","chosenPools","lowercaseQuery","toLowerCase","earningToken","symbol","slice","cardLayout","children","map","showStakedOnly","fileName","_jsxFileName","lineNumber","columnNumber","tableLayout","justifyContent","flexDirection","flex","mr","as","scale","color","mb","height","alignItems","mt","fontSize","bold","textTransform","options","label","onChange","style","marginLeft","placeholder","pb","CARD","ref","mx","src","alt","width","_c6","$RefreshReg$"],"sources":["C:/Users/Devrim/Documents/swapUIforProspBlast/src/views/Pools/index.tsx"],"sourcesContent":["import React, { useEffect, useMemo, useRef, useState } from 'react'\r\nimport { useLocation } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { Heading, Flex, Image, Text } from '@pancakeswap/uikit'\r\nimport orderBy from 'lodash/orderBy'\r\nimport partition from 'lodash/partition'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport usePersistState from 'hooks/usePersistState'\r\nimport { useFetchPublicPoolsData, usePools, useFetchCakeVault, useCakeVault } from 'state/pools/hooks'\r\nimport { usePollFarmsData } from 'state/farms/hooks'\r\nimport { latinise } from 'utils/latinise'\r\nimport FlexLayout from 'components/Layout/Flex'\r\nimport Page from 'components/Layout/Page'\r\nimport PageHeader from 'components/PageHeader'\r\nimport SearchInput from 'components/SearchInput'\r\nimport Select, { OptionProps } from 'components/Select/Select'\r\nimport { Pool } from 'state/types'\r\nimport Loading from 'components/Loading'\r\nimport PoolCard from './components/PoolCard'\r\nimport CakeVaultCard from './components/CakeVaultCard'\r\nimport PoolTabButtons from './components/PoolTabButtons'\r\nimport BountyCard from './components/BountyCard'\r\nimport HelpButton from './components/HelpButton'\r\nimport PoolsTable from './components/PoolsTable/PoolsTable'\r\nimport { ViewMode } from './components/ToggleView/ToggleView'\r\nimport { getAprData, getCakeVaultEarnings } from './helpers'\r\n\r\nconst CardLayout = styled(FlexLayout)`\r\n  justify-content: center;\r\n`\r\n\r\nconst PoolControls = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  align-items: center;\r\n  position: relative;\r\n\r\n  justify-content: space-between;\r\n  flex-direction: column;\r\n  margin-bottom: 32px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    flex-direction: row;\r\n    flex-wrap: wrap;\r\n    padding: 16px 32px;\r\n    margin-bottom: 0;\r\n  }\r\n`\r\n\r\nconst FilterContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n  padding: 8px 0px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    width: auto;\r\n    padding: 0;\r\n  }\r\n`\r\n\r\nconst LabelWrapper = styled.div`\r\n  > ${Text} {\r\n    font-size: 12px;\r\n  }\r\n`\r\n\r\nconst ControlStretch = styled(Flex)`\r\n  > div {\r\n    flex: 1;\r\n  }\r\n`\r\n\r\nconst NUMBER_OF_POOLS_VISIBLE = 12\r\n\r\nconst Pools: React.FC = () => {\r\n  const location = useLocation()\r\n  const { t } = useTranslation()\r\n  const { account } = useWeb3React()\r\n  const { pools: poolsWithoutAutoVault, userDataLoaded } = usePools(account)\r\n  const [stakedOnly, setStakedOnly] = usePersistState(false, { localStorageKey: 'pancake_pool_staked' })\r\n  const [numberOfPoolsVisible, setNumberOfPoolsVisible] = useState(NUMBER_OF_POOLS_VISIBLE)\r\n  const [observerIsSet, setObserverIsSet] = useState(false)\r\n  const loadMoreRef = useRef<HTMLDivElement>(null)\r\n  const [viewMode, setViewMode] = usePersistState(ViewMode.TABLE, { localStorageKey: 'pancake_pool_view' })\r\n  const [searchQuery, setSearchQuery] = useState('')\r\n  const [sortOption, setSortOption] = useState('hot')\r\n  const chosenPoolsLength = useRef(0)\r\n  const {\r\n    userData: { cakeAtLastUserAction, userShares },\r\n    fees: { performanceFee },\r\n    pricePerFullShare,\r\n    totalCakeInVault,\r\n  } = useCakeVault()\r\n  const accountHasVaultShares = userShares && userShares.gt(0)\r\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\r\n\r\n  const pools = useMemo(() => {\r\n    const cakePool = poolsWithoutAutoVault.find((pool) => pool.sousId === 0)\r\n    const cakeAutoVault = { ...cakePool, isAutoVault: true }\r\n    return [cakeAutoVault, ...poolsWithoutAutoVault]\r\n  }, [poolsWithoutAutoVault])\r\n\r\n  // TODO aren't arrays in dep array checked just by reference, i.e. it will rerender every time reference changes?\r\n  const [finishedPools, openPools] = useMemo(() => partition(pools, (pool) => pool.isFinished), [pools])\r\n  const stakedOnlyFinishedPools = useMemo(\r\n    () =>\r\n      finishedPools.filter((pool) => {\r\n        if (pool.isAutoVault) {\r\n          return accountHasVaultShares\r\n        }\r\n        return pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0)\r\n      }),\r\n    [finishedPools, accountHasVaultShares],\r\n  )\r\n  const stakedOnlyOpenPools = useMemo(\r\n    () =>\r\n      openPools.filter((pool) => {\r\n        if (pool.isAutoVault) {\r\n          return accountHasVaultShares\r\n        }\r\n        return pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0)\r\n      }),\r\n    [openPools, accountHasVaultShares],\r\n  )\r\n  const hasStakeInFinishedPools = stakedOnlyFinishedPools.length > 0\r\n\r\n  usePollFarmsData()\r\n  useFetchCakeVault()\r\n  useFetchPublicPoolsData()\r\n\r\n  useEffect(() => {\r\n    const showMorePools = (entries) => {\r\n      const [entry] = entries\r\n      if (entry.isIntersecting) {\r\n        setNumberOfPoolsVisible((poolsCurrentlyVisible) => {\r\n          if (poolsCurrentlyVisible <= chosenPoolsLength.current) {\r\n            return poolsCurrentlyVisible + NUMBER_OF_POOLS_VISIBLE\r\n          }\r\n          return poolsCurrentlyVisible\r\n        })\r\n      }\r\n    }\r\n\r\n    if (!observerIsSet) {\r\n      const loadMoreObserver = new IntersectionObserver(showMorePools, {\r\n        rootMargin: '0px',\r\n        threshold: 1,\r\n      })\r\n      loadMoreObserver.observe(loadMoreRef.current)\r\n      setObserverIsSet(true)\r\n    }\r\n  }, [observerIsSet])\r\n\r\n  const showFinishedPools = location.pathname.includes('history')\r\n\r\n  const handleChangeSearchQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setSearchQuery(event.target.value)\r\n  }\r\n\r\n  const handleSortOptionChange = (option: OptionProps): void => {\r\n    setSortOption(option.value)\r\n  }\r\n\r\n  const sortPools = (poolsToSort: Pool[]) => {\r\n    switch (sortOption) {\r\n      case 'apr':\r\n        // Ternary is needed to prevent pools without APR (like MIX) getting top spot\r\n        return orderBy(\r\n          poolsToSort,\r\n          (pool: Pool) => (pool.apr ? getAprData(pool, performanceFeeAsDecimal).apr : 0),\r\n          'desc',\r\n        )\r\n      case 'earned':\r\n        return orderBy(\r\n          poolsToSort,\r\n          (pool: Pool) => {\r\n            if (!pool.userData || !pool.earningTokenPrice) {\r\n              return 0\r\n            }\r\n            return pool.isAutoVault\r\n              ? getCakeVaultEarnings(\r\n                  account,\r\n                  cakeAtLastUserAction,\r\n                  userShares,\r\n                  pricePerFullShare,\r\n                  pool.earningTokenPrice,\r\n                ).autoUsdToDisplay\r\n              : pool.userData.pendingReward.times(pool.earningTokenPrice).toNumber()\r\n          },\r\n          'desc',\r\n        )\r\n      case 'totalStaked':\r\n        return orderBy(\r\n          poolsToSort,\r\n          (pool: Pool) => (pool.isAutoVault ? totalCakeInVault.toNumber() : pool.totalStaked.toNumber()),\r\n          'desc',\r\n        )\r\n      default:\r\n        return poolsToSort\r\n    }\r\n  }\r\n\r\n  let chosenPools\r\n  if (showFinishedPools) {\r\n    chosenPools = stakedOnly ? stakedOnlyFinishedPools : finishedPools\r\n  } else {\r\n    chosenPools = stakedOnly ? stakedOnlyOpenPools : openPools\r\n  }\r\n\r\n  if (searchQuery) {\r\n    const lowercaseQuery = latinise(searchQuery.toLowerCase())\r\n    chosenPools = chosenPools.filter((pool) =>\r\n      latinise(pool.earningToken.symbol.toLowerCase()).includes(lowercaseQuery),\r\n    )\r\n  }\r\n\r\n  chosenPools = sortPools(chosenPools).slice(0, numberOfPoolsVisible)\r\n  chosenPoolsLength.current = chosenPools.length\r\n\r\n  const cardLayout = (\r\n    <CardLayout>\r\n      {chosenPools.map((pool) =>\r\n        pool.isAutoVault ? (\r\n          <CakeVaultCard key=\"auto-cake\" pool={pool} showStakedOnly={stakedOnly} />\r\n        ) : (\r\n          <PoolCard key={pool.sousId} pool={pool} account={account} />\r\n        ),\r\n      )}\r\n    </CardLayout>\r\n  )\r\n\r\n  const tableLayout = <PoolsTable pools={chosenPools} account={account} userDataLoaded={userDataLoaded} />\r\n\r\n  return (\r\n    <>\r\n      <PageHeader>\r\n        <Flex justifyContent=\"space-between\" flexDirection={['column', null, null, 'row']}>\r\n          <Flex flex=\"1\" flexDirection=\"column\" mr={['8px', 0]}>\r\n            <Heading as=\"h1\" scale=\"xxl\" color=\"secondary\" mb=\"24px\">\r\n              {t('Syrup Pools')}\r\n            </Heading>\r\n            <Heading scale=\"md\" color=\"text\">\r\n              {t('Just stake some tokens to earn.')}\r\n            </Heading>\r\n            <Heading scale=\"md\" color=\"text\">\r\n              {t('High APR, low risk.')}\r\n            </Heading>\r\n          </Flex>\r\n          <Flex flex=\"1\" height=\"fit-content\" justifyContent=\"center\" alignItems=\"center\" mt={['24px', null, '0']}>\r\n            <HelpButton />\r\n            <BountyCard />\r\n          </Flex>\r\n        </Flex>\r\n      </PageHeader>\r\n      <Page>\r\n        <PoolControls>\r\n          <PoolTabButtons\r\n            stakedOnly={stakedOnly}\r\n            setStakedOnly={setStakedOnly}\r\n            hasStakeInFinishedPools={hasStakeInFinishedPools}\r\n            viewMode={viewMode}\r\n            setViewMode={setViewMode}\r\n          />\r\n          <FilterContainer>\r\n            <LabelWrapper>\r\n              <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\">\r\n                {t('Sort by')}\r\n              </Text>\r\n              <ControlStretch>\r\n                <Select\r\n                  options={[\r\n                    {\r\n                      label: t('Hot'),\r\n                      value: 'hot',\r\n                    },\r\n                    {\r\n                      label: t('APR'),\r\n                      value: 'apr',\r\n                    },\r\n                    {\r\n                      label: t('Earned'),\r\n                      value: 'earned',\r\n                    },\r\n                    {\r\n                      label: t('Total staked'),\r\n                      value: 'totalStaked',\r\n                    },\r\n                  ]}\r\n                  onChange={handleSortOptionChange}\r\n                />\r\n              </ControlStretch>\r\n            </LabelWrapper>\r\n            <LabelWrapper style={{ marginLeft: 16 }}>\r\n              <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\">\r\n                {t('Search')}\r\n              </Text>\r\n              <SearchInput onChange={handleChangeSearchQuery} placeholder=\"Search Pools\" />\r\n            </LabelWrapper>\r\n          </FilterContainer>\r\n        </PoolControls>\r\n        {showFinishedPools && (\r\n          <Text fontSize=\"20px\" color=\"failure\" pb=\"32px\">\r\n            {t('These pools are no longer distributing rewards. Please unstake your tokens.')}\r\n          </Text>\r\n        )}\r\n        {account && !userDataLoaded && stakedOnly && (\r\n          <Flex justifyContent=\"center\" mb=\"4px\">\r\n            <Loading />\r\n          </Flex>\r\n        )}\r\n        {viewMode === ViewMode.CARD ? cardLayout : tableLayout}\r\n        <div ref={loadMoreRef} />\r\n        <Image\r\n          mx=\"auto\"\r\n          mt=\"12px\"\r\n          src=\"/images/decorations/3d-syrup-bunnies.png\"\r\n          alt=\"Pancake illustration\"\r\n          width={192}\r\n          height={184.5}\r\n        />\r\n      </Page>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Pools\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}