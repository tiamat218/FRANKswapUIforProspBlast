{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Devrim\\\\Documents\\\\swapUIforProspBlast\\\\src\\\\views\\\\Pools\\\\components\\\\PoolCard\\\\CardActions\\\\ApprovalAction.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Button, AutoRenewIcon, Skeleton } from '@pancakeswap/uikit';\nimport { useTranslation } from 'contexts/Localization';\nimport { useERC20 } from 'hooks/useContract';\nimport { getAddress } from 'utils/addressHelpers';\nimport { useApprovePool } from '../../../hooks/useApprove';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ApprovalAction = ({\n  pool,\n  isLoading = false\n}) => {\n  _s();\n  const {\n    sousId,\n    stakingToken,\n    earningToken\n  } = pool;\n  const {\n    t\n  } = useTranslation();\n  const stakingTokenContract = useERC20(stakingToken.address ? getAddress(stakingToken.address) : '');\n  const {\n    handleApprove,\n    requestedApproval\n  } = useApprovePool(stakingTokenContract, sousId, earningToken.symbol);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isLoading ? /*#__PURE__*/_jsxDEV(Skeleton, {\n      width: \"100%\",\n      height: \"52px\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Button, {\n      isLoading: requestedApproval,\n      endIcon: requestedApproval ? /*#__PURE__*/_jsxDEV(AutoRenewIcon, {\n        spin: true,\n        color: \"currentColor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 40\n      }, this) : null,\n      disabled: requestedApproval,\n      onClick: handleApprove,\n      width: \"100%\",\n      children: t('Enable')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(ApprovalAction, \"zxlaYyoDorUjEwp0mIJ2MvD8+Ps=\", false, function () {\n  return [useTranslation, useERC20, useApprovePool];\n});\n_c = ApprovalAction;\nexport default ApprovalAction;\nvar _c;\n$RefreshReg$(_c, \"ApprovalAction\");","map":{"version":3,"names":["React","Button","AutoRenewIcon","Skeleton","useTranslation","useERC20","getAddress","useApprovePool","jsxDEV","_jsxDEV","Fragment","_Fragment","ApprovalAction","pool","isLoading","_s","sousId","stakingToken","earningToken","t","stakingTokenContract","address","handleApprove","requestedApproval","symbol","children","width","height","fileName","_jsxFileName","lineNumber","columnNumber","endIcon","spin","color","disabled","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Devrim/Documents/swapUIforProspBlast/src/views/Pools/components/PoolCard/CardActions/ApprovalAction.tsx"],"sourcesContent":["import React from 'react'\r\nimport { Button, AutoRenewIcon, Skeleton } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useERC20 } from 'hooks/useContract'\r\nimport { getAddress } from 'utils/addressHelpers'\r\nimport { Pool } from 'state/types'\r\nimport { useApprovePool } from '../../../hooks/useApprove'\r\n\r\ninterface ApprovalActionProps {\r\n  pool: Pool\r\n  isLoading?: boolean\r\n}\r\n\r\nconst ApprovalAction: React.FC<ApprovalActionProps> = ({ pool, isLoading = false }) => {\r\n  const { sousId, stakingToken, earningToken } = pool\r\n  const { t } = useTranslation()\r\n  const stakingTokenContract = useERC20(stakingToken.address ? getAddress(stakingToken.address) : '')\r\n  const { handleApprove, requestedApproval } = useApprovePool(stakingTokenContract, sousId, earningToken.symbol)\r\n\r\n  return (\r\n    <>\r\n      {isLoading ? (\r\n        <Skeleton width=\"100%\" height=\"52px\" />\r\n      ) : (\r\n        <Button\r\n          isLoading={requestedApproval}\r\n          endIcon={requestedApproval ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\r\n          disabled={requestedApproval}\r\n          onClick={handleApprove}\r\n          width=\"100%\"\r\n        >\r\n          {t('Enable')}\r\n        </Button>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ApprovalAction\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,EAAEC,aAAa,EAAEC,QAAQ,QAAQ,oBAAoB;AACpE,SAASC,cAAc,QAAQ,uBAAuB;AACtD,SAASC,QAAQ,QAAQ,mBAAmB;AAC5C,SAASC,UAAU,QAAQ,sBAAsB;AAEjD,SAASC,cAAc,QAAQ,2BAA2B;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAO1D,MAAMC,cAA6C,GAAGA,CAAC;EAAEC,IAAI;EAAEC,SAAS,GAAG;AAAM,CAAC,KAAK;EAAAC,EAAA;EACrF,MAAM;IAAEC,MAAM;IAAEC,YAAY;IAAEC;EAAa,CAAC,GAAGL,IAAI;EACnD,MAAM;IAAEM;EAAE,CAAC,GAAGf,cAAc,CAAC,CAAC;EAC9B,MAAMgB,oBAAoB,GAAGf,QAAQ,CAACY,YAAY,CAACI,OAAO,GAAGf,UAAU,CAACW,YAAY,CAACI,OAAO,CAAC,GAAG,EAAE,CAAC;EACnG,MAAM;IAAEC,aAAa;IAAEC;EAAkB,CAAC,GAAGhB,cAAc,CAACa,oBAAoB,EAAEJ,MAAM,EAAEE,YAAY,CAACM,MAAM,CAAC;EAE9G,oBACEf,OAAA,CAAAE,SAAA;IAAAc,QAAA,EACGX,SAAS,gBACRL,OAAA,CAACN,QAAQ;MAACuB,KAAK,EAAC,MAAM;MAACC,MAAM,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAEvCtB,OAAA,CAACR,MAAM;MACLa,SAAS,EAAES,iBAAkB;MAC7BS,OAAO,EAAET,iBAAiB,gBAAGd,OAAA,CAACP,aAAa;QAAC+B,IAAI;QAACC,KAAK,EAAC;MAAc;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,GAAG,IAAK;MAChFI,QAAQ,EAAEZ,iBAAkB;MAC5Ba,OAAO,EAAEd,aAAc;MACvBI,KAAK,EAAC,MAAM;MAAAD,QAAA,EAEXN,CAAC,CAAC,QAAQ;IAAC;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN;EACT,gBACD,CAAC;AAEP,CAAC;AAAAhB,EAAA,CAvBKH,cAA6C;EAAA,QAEnCR,cAAc,EACCC,QAAQ,EACQE,cAAc;AAAA;AAAA8B,EAAA,GAJvDzB,cAA6C;AAyBnD,eAAeA,cAAc;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}