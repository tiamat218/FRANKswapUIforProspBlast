{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Devrim\\\\Documents\\\\FRANKswapUIforProspBlast\\\\src\\\\components\\\\SearchModal\\\\ManageLists.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { memo, useCallback, useMemo, useState, useEffect } from 'react';\nimport { Button, Text, CheckmarkIcon, CogIcon, Input, Toggle, LinkExternal, useTooltip } from '@pancakeswap/uikit';\nimport { useDispatch, useSelector } from 'react-redux';\nimport styled from 'styled-components';\nimport Card from 'components/Card';\nimport { UNSUPPORTED_LIST_URLS } from 'config/constants/lists';\nimport { parseENSAddress } from 'utils/ENS/parseENSAddress';\nimport { useTranslation } from 'contexts/Localization';\nimport useFetchListCallback from '../../hooks/useFetchListCallback';\nimport { acceptListUpdate, removeList, disableList, enableList } from '../../state/lists/actions';\nimport { useIsListActive, useAllLists, useActiveListUrls } from '../../state/lists/hooks';\nimport uriToHttp from '../../utils/uriToHttp';\nimport Column, { AutoColumn } from '../Layout/Column';\nimport { ListLogo } from '../Logo';\nimport Row, { RowFixed, RowBetween } from '../Layout/Row';\nimport { CurrencyModalView } from './types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction listVersionLabel(version) {\n  return `v${version.major}.${version.minor}.${version.patch}`;\n}\n\nconst Wrapper = styled(Column)`\n  width: 100%;\n  height: 100%;\n`;\n_c = Wrapper;\nconst RowWrapper = styled(Row)`\n  background-color: ${({\n  active,\n  theme\n}) => active ? `${theme.colors.success}19` : 'transparent'};\n  border: solid 1px;\n  border-color: ${({\n  active,\n  theme\n}) => active ? theme.colors.success : theme.colors.tertiary};\n  transition: 200ms;\n  align-items: center;\n  padding: 1rem;\n  border-radius: 20px;\n`;\n_c2 = RowWrapper;\n\nfunction listUrlRowHTMLId(listUrl) {\n  return `list-row-${listUrl.replace(/\\./g, '-')}`;\n}\n\nconst ListRow = /*#__PURE__*/memo(_c3 = _s(function ListRow({\n  listUrl\n}) {\n  _s();\n\n  const listsByUrl = useSelector(state => state.lists.byUrl);\n  const dispatch = useDispatch();\n  const {\n    current: list,\n    pendingUpdate: pending\n  } = listsByUrl[listUrl];\n  const isActive = useIsListActive(listUrl);\n  const {\n    t\n  } = useTranslation();\n  const handleAcceptListUpdate = useCallback(() => {\n    if (!pending) return;\n    dispatch(acceptListUpdate(listUrl));\n  }, [dispatch, listUrl, pending]);\n  const handleRemoveList = useCallback(() => {\n    // eslint-disable-next-line no-alert\n    if (window.confirm('Please confirm you would like to remove this list')) {\n      dispatch(removeList(listUrl));\n    }\n  }, [dispatch, listUrl]);\n  const handleEnableList = useCallback(() => {\n    dispatch(enableList(listUrl));\n  }, [dispatch, listUrl]);\n  const handleDisableList = useCallback(() => {\n    dispatch(disableList(listUrl));\n  }, [dispatch, listUrl]);\n  const {\n    targetRef,\n    tooltip,\n    tooltipVisible\n  } = useTooltip( /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Text, {\n      children: list && listVersionLabel(list.version)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LinkExternal, {\n      external: true,\n      href: `https://tokenlists.org/token-list?url=${listUrl}`,\n      children: t('See')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"danger\",\n      scale: \"xs\",\n      onClick: handleRemoveList,\n      disabled: Object.keys(listsByUrl).length === 1,\n      children: t('Remove')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), pending && /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"text\",\n      onClick: handleAcceptListUpdate,\n      style: {\n        fontSize: '12px'\n      },\n      children: t('Update list')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this), {\n    placement: 'right-end',\n    trigger: 'click'\n  });\n  if (!list) return null;\n  return /*#__PURE__*/_jsxDEV(RowWrapper, {\n    active: isActive,\n    id: listUrlRowHTMLId(listUrl),\n    children: [tooltipVisible && tooltip, list.logoURI ? /*#__PURE__*/_jsxDEV(ListLogo, {\n      size: \"40px\",\n      style: {\n        marginRight: '1rem'\n      },\n      logoURI: list.logoURI,\n      alt: `${list.name} list logo`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '24px',\n        height: '24px',\n        marginRight: '1rem'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Column, {\n      style: {\n        flex: '1'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          bold: true,\n          children: list.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RowFixed, {\n        mt: \"4px\",\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"12px\",\n          mr: \"6px\",\n          textTransform: \"lowercase\",\n          children: [list.tokens.length, \" \", t('Tokens')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          ref: targetRef,\n          children: /*#__PURE__*/_jsxDEV(CogIcon, {\n            color: \"text\",\n            width: \"12px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Toggle, {\n      checked: isActive,\n      onChange: () => {\n        if (isActive) {\n          handleDisableList();\n        } else {\n          handleEnableList();\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)]\n  }, listUrl, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n}, \"ifeaKmvkPyCkTRsnOFBwasVRPes=\", false, function () {\n  return [useSelector, useDispatch, useIsListActive, useTranslation, useTooltip];\n}));\n_c4 = ListRow;\nconst ListContainer = styled.div`\n  padding: 1rem 0;\n  height: 100%;\n  overflow: auto;\n`;\n_c5 = ListContainer;\n\nfunction ManageLists({\n  setModalView,\n  setImportList,\n  setListUrl\n}) {\n  _s2();\n\n  const [listUrlInput, setListUrlInput] = useState('');\n  const {\n    t\n  } = useTranslation();\n  const lists = useAllLists(); // sort by active but only if not visible\n\n  const activeListUrls = useActiveListUrls();\n  const [activeCopy, setActiveCopy] = useState();\n  useEffect(() => {\n    if (!activeCopy && activeListUrls) {\n      setActiveCopy(activeListUrls);\n    }\n  }, [activeCopy, activeListUrls]);\n  const handleInput = useCallback(e => {\n    setListUrlInput(e.target.value);\n  }, []);\n  const fetchList = useFetchListCallback();\n  const validUrl = useMemo(() => {\n    return uriToHttp(listUrlInput).length > 0 || Boolean(parseENSAddress(listUrlInput));\n  }, [listUrlInput]);\n  const sortedLists = useMemo(() => {\n    const listUrls = Object.keys(lists);\n    return listUrls.filter(listUrl => {\n      // only show loaded lists, hide unsupported lists\n      return Boolean(lists[listUrl].current) && !UNSUPPORTED_LIST_URLS.includes(listUrl);\n    }).sort((u1, u2) => {\n      const {\n        current: l1\n      } = lists[u1];\n      const {\n        current: l2\n      } = lists[u2]; // first filter on active lists\n\n      if ((activeCopy === null || activeCopy === void 0 ? void 0 : activeCopy.includes(u1)) && !(activeCopy === null || activeCopy === void 0 ? void 0 : activeCopy.includes(u2))) {\n        return -1;\n      }\n\n      if (!(activeCopy === null || activeCopy === void 0 ? void 0 : activeCopy.includes(u1)) && (activeCopy === null || activeCopy === void 0 ? void 0 : activeCopy.includes(u2))) {\n        return 1;\n      }\n\n      if (l1 && l2) {\n        return l1.name.toLowerCase() < l2.name.toLowerCase() ? -1 : l1.name.toLowerCase() === l2.name.toLowerCase() ? 0 : 1;\n      }\n\n      if (l1) return -1;\n      if (l2) return 1;\n      return 0;\n    });\n  }, [lists, activeCopy]); // temporary fetched list for import flow\n\n  const [tempList, setTempList] = useState();\n  const [addError, setAddError] = useState();\n  useEffect(() => {\n    async function fetchTempList() {\n      fetchList(listUrlInput, false).then(list => setTempList(list)).catch(() => setAddError('Error importing list'));\n    } // if valid url, fetch details for card\n\n\n    if (validUrl) {\n      fetchTempList();\n    } else {\n      setTempList(undefined);\n\n      if (listUrlInput !== '') {\n        setAddError('Enter valid list location');\n      }\n    } // reset error\n\n\n    if (listUrlInput === '') {\n      setAddError(undefined);\n    }\n  }, [fetchList, listUrlInput, validUrl]); // check if list is already imported\n\n  const isImported = Object.keys(lists).includes(listUrlInput); // set list values and have parent modal switch to import list view\n\n  const handleImport = useCallback(() => {\n    if (!tempList) return;\n    setImportList(tempList);\n    setModalView(CurrencyModalView.importList);\n    setListUrl(listUrlInput);\n  }, [listUrlInput, setImportList, setListUrl, setModalView, tempList]);\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: [/*#__PURE__*/_jsxDEV(AutoColumn, {\n      gap: \"14px\",\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          id: \"list-add-input\",\n          scale: \"lg\",\n          placeholder: t('https:// or ipfs:// or ENS name'),\n          value: listUrlInput,\n          onChange: handleInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this), addError ? /*#__PURE__*/_jsxDEV(Text, {\n        color: \"failure\",\n        style: {\n          textOverflow: 'ellipsis',\n          overflow: 'hidden'\n        },\n        children: addError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 7\n    }, this), tempList && /*#__PURE__*/_jsxDEV(AutoColumn, {\n      style: {\n        paddingTop: 0\n      },\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        padding: \"12px 20px\",\n        children: /*#__PURE__*/_jsxDEV(RowBetween, {\n          children: [/*#__PURE__*/_jsxDEV(RowFixed, {\n            children: [tempList.logoURI && /*#__PURE__*/_jsxDEV(ListLogo, {\n              logoURI: tempList.logoURI,\n              size: \"40px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 38\n            }, this), /*#__PURE__*/_jsxDEV(AutoColumn, {\n              gap: \"4px\",\n              style: {\n                marginLeft: '20px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Text, {\n                bold: true,\n                children: tempList.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Text, {\n                color: \"textSubtle\",\n                small: true,\n                textTransform: \"lowercase\",\n                children: [tempList.tokens.length, \" \", t('Tokens')]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 15\n          }, this), isImported ? /*#__PURE__*/_jsxDEV(RowFixed, {\n            children: [/*#__PURE__*/_jsxDEV(CheckmarkIcon, {\n              width: \"16px\",\n              mr: \"10px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Text, {\n              children: t('Loaded')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(Button, {\n            width: \"fit-content\",\n            onClick: handleImport,\n            children: t('Import')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ListContainer, {\n      children: /*#__PURE__*/_jsxDEV(AutoColumn, {\n        gap: \"md\",\n        children: sortedLists.map(listUrl => /*#__PURE__*/_jsxDEV(ListRow, {\n          listUrl: listUrl\n        }, listUrl, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 239,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(ManageLists, \"lFJX6WNH6hEVpXmzz0IJK9q6DSI=\", false, function () {\n  return [useTranslation, useAllLists, useActiveListUrls, useFetchListCallback];\n});\n\n_c6 = ManageLists;\nexport default ManageLists;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"RowWrapper\");\n$RefreshReg$(_c3, \"ListRow$memo\");\n$RefreshReg$(_c4, \"ListRow\");\n$RefreshReg$(_c5, \"ListContainer\");\n$RefreshReg$(_c6, \"ManageLists\");","map":{"version":3,"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/components/SearchModal/ManageLists.tsx"],"names":["React","memo","useCallback","useMemo","useState","useEffect","Button","Text","CheckmarkIcon","CogIcon","Input","Toggle","LinkExternal","useTooltip","useDispatch","useSelector","styled","Card","UNSUPPORTED_LIST_URLS","parseENSAddress","useTranslation","useFetchListCallback","acceptListUpdate","removeList","disableList","enableList","useIsListActive","useAllLists","useActiveListUrls","uriToHttp","Column","AutoColumn","ListLogo","Row","RowFixed","RowBetween","CurrencyModalView","listVersionLabel","version","major","minor","patch","Wrapper","RowWrapper","active","theme","colors","success","tertiary","listUrlRowHTMLId","listUrl","replace","ListRow","listsByUrl","state","lists","byUrl","dispatch","current","list","pendingUpdate","pending","isActive","t","handleAcceptListUpdate","handleRemoveList","window","confirm","handleEnableList","handleDisableList","targetRef","tooltip","tooltipVisible","Object","keys","length","fontSize","placement","trigger","logoURI","marginRight","name","width","height","flex","tokens","ListContainer","div","ManageLists","setModalView","setImportList","setListUrl","listUrlInput","setListUrlInput","activeListUrls","activeCopy","setActiveCopy","handleInput","e","target","value","fetchList","validUrl","Boolean","sortedLists","listUrls","filter","includes","sort","u1","u2","l1","l2","toLowerCase","tempList","setTempList","addError","setAddError","fetchTempList","then","catch","undefined","isImported","handleImport","importList","textOverflow","overflow","paddingTop","marginLeft","map"],"mappings":"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","sourcesContent":["import React, { memo, useCallback, useMemo, useState, useEffect } from 'react'\r\nimport { Button, Text, CheckmarkIcon, CogIcon, Input, Toggle, LinkExternal, useTooltip } from '@pancakeswap/uikit'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport styled from 'styled-components'\r\nimport { TokenList, Version } from '@uniswap/token-lists'\r\nimport Card from 'components/Card'\r\nimport { UNSUPPORTED_LIST_URLS } from 'config/constants/lists'\r\nimport { parseENSAddress } from 'utils/ENS/parseENSAddress'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useFetchListCallback from '../../hooks/useFetchListCallback'\r\n\r\nimport { AppDispatch, AppState } from '../../state'\r\nimport { acceptListUpdate, removeList, disableList, enableList } from '../../state/lists/actions'\r\nimport { useIsListActive, useAllLists, useActiveListUrls } from '../../state/lists/hooks'\r\nimport uriToHttp from '../../utils/uriToHttp'\r\n\r\nimport Column, { AutoColumn } from '../Layout/Column'\r\nimport { ListLogo } from '../Logo'\r\nimport Row, { RowFixed, RowBetween } from '../Layout/Row'\r\nimport { CurrencyModalView } from './types'\r\n\r\nfunction listVersionLabel(version: Version): string {\r\n  return `v${version.major}.${version.minor}.${version.patch}`\r\n}\r\n\r\nconst Wrapper = styled(Column)`\r\n  width: 100%;\r\n  height: 100%;\r\n`\r\n\r\nconst RowWrapper = styled(Row)<{ active: boolean }>`\r\n  background-color: ${({ active, theme }) => (active ? `${theme.colors.success}19` : 'transparent')};\r\n  border: solid 1px;\r\n  border-color: ${({ active, theme }) => (active ? theme.colors.success : theme.colors.tertiary)};\r\n  transition: 200ms;\r\n  align-items: center;\r\n  padding: 1rem;\r\n  border-radius: 20px;\r\n`\r\n\r\nfunction listUrlRowHTMLId(listUrl: string) {\r\n  return `list-row-${listUrl.replace(/\\./g, '-')}`\r\n}\r\n\r\nconst ListRow = memo(function ListRow({ listUrl }: { listUrl: string }) {\r\n  const listsByUrl = useSelector<AppState, AppState['lists']['byUrl']>((state) => state.lists.byUrl)\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const { current: list, pendingUpdate: pending } = listsByUrl[listUrl]\r\n\r\n  const isActive = useIsListActive(listUrl)\r\n\r\n  const { t } = useTranslation()\r\n\r\n  const handleAcceptListUpdate = useCallback(() => {\r\n    if (!pending) return\r\n    dispatch(acceptListUpdate(listUrl))\r\n  }, [dispatch, listUrl, pending])\r\n\r\n  const handleRemoveList = useCallback(() => {\r\n    // eslint-disable-next-line no-alert\r\n    if (window.confirm('Please confirm you would like to remove this list')) {\r\n      dispatch(removeList(listUrl))\r\n    }\r\n  }, [dispatch, listUrl])\r\n\r\n  const handleEnableList = useCallback(() => {\r\n    dispatch(enableList(listUrl))\r\n  }, [dispatch, listUrl])\r\n\r\n  const handleDisableList = useCallback(() => {\r\n    dispatch(disableList(listUrl))\r\n  }, [dispatch, listUrl])\r\n\r\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\r\n    <div>\r\n      <Text>{list && listVersionLabel(list.version)}</Text>\r\n      <LinkExternal external href={`https://tokenlists.org/token-list?url=${listUrl}`}>\r\n        {t('See')}\r\n      </LinkExternal>\r\n      <Button variant=\"danger\" scale=\"xs\" onClick={handleRemoveList} disabled={Object.keys(listsByUrl).length === 1}>\r\n        {t('Remove')}\r\n      </Button>\r\n      {pending && (\r\n        <Button variant=\"text\" onClick={handleAcceptListUpdate} style={{ fontSize: '12px' }}>\r\n          {t('Update list')}\r\n        </Button>\r\n      )}\r\n    </div>,\r\n    { placement: 'right-end', trigger: 'click' },\r\n  )\r\n\r\n  if (!list) return null\r\n\r\n  return (\r\n    <RowWrapper active={isActive} key={listUrl} id={listUrlRowHTMLId(listUrl)}>\r\n      {tooltipVisible && tooltip}\r\n      {list.logoURI ? (\r\n        <ListLogo size=\"40px\" style={{ marginRight: '1rem' }} logoURI={list.logoURI} alt={`${list.name} list logo`} />\r\n      ) : (\r\n        <div style={{ width: '24px', height: '24px', marginRight: '1rem' }} />\r\n      )}\r\n      <Column style={{ flex: '1' }}>\r\n        <Row>\r\n          <Text bold>{list.name}</Text>\r\n        </Row>\r\n        <RowFixed mt=\"4px\">\r\n          <Text fontSize=\"12px\" mr=\"6px\" textTransform=\"lowercase\">\r\n            {list.tokens.length} {t('Tokens')}\r\n          </Text>\r\n          <span ref={targetRef}>\r\n            <CogIcon color=\"text\" width=\"12px\" />\r\n          </span>\r\n        </RowFixed>\r\n      </Column>\r\n      <Toggle\r\n        checked={isActive}\r\n        onChange={() => {\r\n          if (isActive) {\r\n            handleDisableList()\r\n          } else {\r\n            handleEnableList()\r\n          }\r\n        }}\r\n      />\r\n    </RowWrapper>\r\n  )\r\n})\r\n\r\nconst ListContainer = styled.div`\r\n  padding: 1rem 0;\r\n  height: 100%;\r\n  overflow: auto;\r\n`\r\n\r\nfunction ManageLists({\r\n  setModalView,\r\n  setImportList,\r\n  setListUrl,\r\n}: {\r\n  setModalView: (view: CurrencyModalView) => void\r\n  setImportList: (list: TokenList) => void\r\n  setListUrl: (url: string) => void\r\n}) {\r\n  const [listUrlInput, setListUrlInput] = useState<string>('')\r\n\r\n  const { t } = useTranslation()\r\n\r\n  const lists = useAllLists()\r\n\r\n  // sort by active but only if not visible\r\n  const activeListUrls = useActiveListUrls()\r\n  const [activeCopy, setActiveCopy] = useState<string[] | undefined>()\r\n  useEffect(() => {\r\n    if (!activeCopy && activeListUrls) {\r\n      setActiveCopy(activeListUrls)\r\n    }\r\n  }, [activeCopy, activeListUrls])\r\n\r\n  const handleInput = useCallback((e) => {\r\n    setListUrlInput(e.target.value)\r\n  }, [])\r\n\r\n  const fetchList = useFetchListCallback()\r\n\r\n  const validUrl: boolean = useMemo(() => {\r\n    return uriToHttp(listUrlInput).length > 0 || Boolean(parseENSAddress(listUrlInput))\r\n  }, [listUrlInput])\r\n\r\n  const sortedLists = useMemo(() => {\r\n    const listUrls = Object.keys(lists)\r\n    return listUrls\r\n      .filter((listUrl) => {\r\n        // only show loaded lists, hide unsupported lists\r\n        return Boolean(lists[listUrl].current) && !UNSUPPORTED_LIST_URLS.includes(listUrl)\r\n      })\r\n      .sort((u1, u2) => {\r\n        const { current: l1 } = lists[u1]\r\n        const { current: l2 } = lists[u2]\r\n\r\n        // first filter on active lists\r\n        if (activeCopy?.includes(u1) && !activeCopy?.includes(u2)) {\r\n          return -1\r\n        }\r\n        if (!activeCopy?.includes(u1) && activeCopy?.includes(u2)) {\r\n          return 1\r\n        }\r\n\r\n        if (l1 && l2) {\r\n          return l1.name.toLowerCase() < l2.name.toLowerCase()\r\n            ? -1\r\n            : l1.name.toLowerCase() === l2.name.toLowerCase()\r\n            ? 0\r\n            : 1\r\n        }\r\n        if (l1) return -1\r\n        if (l2) return 1\r\n        return 0\r\n      })\r\n  }, [lists, activeCopy])\r\n\r\n  // temporary fetched list for import flow\r\n  const [tempList, setTempList] = useState<TokenList>()\r\n  const [addError, setAddError] = useState<string | undefined>()\r\n\r\n  useEffect(() => {\r\n    async function fetchTempList() {\r\n      fetchList(listUrlInput, false)\r\n        .then((list) => setTempList(list))\r\n        .catch(() => setAddError('Error importing list'))\r\n    }\r\n    // if valid url, fetch details for card\r\n    if (validUrl) {\r\n      fetchTempList()\r\n    } else {\r\n      setTempList(undefined)\r\n      if (listUrlInput !== '') {\r\n        setAddError('Enter valid list location')\r\n      }\r\n    }\r\n\r\n    // reset error\r\n    if (listUrlInput === '') {\r\n      setAddError(undefined)\r\n    }\r\n  }, [fetchList, listUrlInput, validUrl])\r\n\r\n  // check if list is already imported\r\n  const isImported = Object.keys(lists).includes(listUrlInput)\r\n\r\n  // set list values and have parent modal switch to import list view\r\n  const handleImport = useCallback(() => {\r\n    if (!tempList) return\r\n    setImportList(tempList)\r\n    setModalView(CurrencyModalView.importList)\r\n    setListUrl(listUrlInput)\r\n  }, [listUrlInput, setImportList, setListUrl, setModalView, tempList])\r\n\r\n  return (\r\n    <Wrapper>\r\n      <AutoColumn gap=\"14px\">\r\n        <Row>\r\n          <Input\r\n            id=\"list-add-input\"\r\n            scale=\"lg\"\r\n            placeholder={t('https:// or ipfs:// or ENS name')}\r\n            value={listUrlInput}\r\n            onChange={handleInput}\r\n          />\r\n        </Row>\r\n        {addError ? (\r\n          <Text color=\"failure\" style={{ textOverflow: 'ellipsis', overflow: 'hidden' }}>\r\n            {addError}\r\n          </Text>\r\n        ) : null}\r\n      </AutoColumn>\r\n      {tempList && (\r\n        <AutoColumn style={{ paddingTop: 0 }}>\r\n          <Card padding=\"12px 20px\">\r\n            <RowBetween>\r\n              <RowFixed>\r\n                {tempList.logoURI && <ListLogo logoURI={tempList.logoURI} size=\"40px\" />}\r\n                <AutoColumn gap=\"4px\" style={{ marginLeft: '20px' }}>\r\n                  <Text bold>{tempList.name}</Text>\r\n                  <Text color=\"textSubtle\" small textTransform=\"lowercase\">\r\n                    {tempList.tokens.length} {t('Tokens')}\r\n                  </Text>\r\n                </AutoColumn>\r\n              </RowFixed>\r\n              {isImported ? (\r\n                <RowFixed>\r\n                  <CheckmarkIcon width=\"16px\" mr=\"10px\" />\r\n                  <Text>{t('Loaded')}</Text>\r\n                </RowFixed>\r\n              ) : (\r\n                <Button width=\"fit-content\" onClick={handleImport}>\r\n                  {t('Import')}\r\n                </Button>\r\n              )}\r\n            </RowBetween>\r\n          </Card>\r\n        </AutoColumn>\r\n      )}\r\n      <ListContainer>\r\n        <AutoColumn gap=\"md\">\r\n          {sortedLists.map((listUrl) => (\r\n            <ListRow key={listUrl} listUrl={listUrl} />\r\n          ))}\r\n        </AutoColumn>\r\n      </ListContainer>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default ManageLists\r\n"]},"metadata":{},"sourceType":"module"}