{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\frkul\\\\Documents\\\\swapUI_pancake-frontend\\\\src\\\\views\\\\Ifos\\\\components\\\\IfoFoldableCard\\\\IfoPoolCard\\\\PercentageOfTotal.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Text } from '@pancakeswap/uikit';\nimport { useTranslation } from 'contexts/Localization';\nimport { BIG_ZERO } from 'utils/bigNumber';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PercentageOfTotal = ({\n  userAmount,\n  totalAmount,\n  ...props\n}) => {\n  _s();\n  const {\n    t\n  } = useTranslation();\n  const percentOfUserContribution = totalAmount.isGreaterThan(0) ? userAmount.div(totalAmount).times(100).toNumber() : BIG_ZERO;\n  const percentOfUserDisplay = percentOfUserContribution.toLocaleString(undefined, {\n    maximumFractionDigits: 5\n  });\n  return /*#__PURE__*/_jsxDEV(Text, {\n    fontSize: \"14px\",\n    color: \"textSubtle\",\n    ...props,\n    children: t('%num% of total', {\n      num: percentOfUserDisplay\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(PercentageOfTotal, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n_c = PercentageOfTotal;\nexport default PercentageOfTotal;\nvar _c;\n$RefreshReg$(_c, \"PercentageOfTotal\");","map":{"version":3,"names":["React","Text","useTranslation","BIG_ZERO","jsxDEV","_jsxDEV","PercentageOfTotal","userAmount","totalAmount","props","_s","t","percentOfUserContribution","isGreaterThan","div","times","toNumber","percentOfUserDisplay","toLocaleString","undefined","maximumFractionDigits","fontSize","color","children","num","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/frkul/Documents/swapUI_pancake-frontend/src/views/Ifos/components/IfoFoldableCard/IfoPoolCard/PercentageOfTotal.tsx"],"sourcesContent":["import React from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Text, TextProps } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\n\r\ninterface PercentageOfTotalProps extends TextProps {\r\n  userAmount: BigNumber\r\n  totalAmount: BigNumber\r\n}\r\n\r\nconst PercentageOfTotal: React.FC<PercentageOfTotalProps> = ({ userAmount, totalAmount, ...props }) => {\r\n  const { t } = useTranslation()\r\n  const percentOfUserContribution = totalAmount.isGreaterThan(0)\r\n    ? userAmount.div(totalAmount).times(100).toNumber()\r\n    : BIG_ZERO\r\n  const percentOfUserDisplay = percentOfUserContribution.toLocaleString(undefined, { maximumFractionDigits: 5 })\r\n\r\n  return (\r\n    <Text fontSize=\"14px\" color=\"textSubtle\" {...props}>\r\n      {t('%num% of total', { num: percentOfUserDisplay })}\r\n    </Text>\r\n  )\r\n}\r\n\r\nexport default PercentageOfTotal\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,SAASC,IAAI,QAAmB,oBAAoB;AACpD,SAASC,cAAc,QAAQ,uBAAuB;AACtD,SAASC,QAAQ,QAAQ,iBAAiB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAO1C,MAAMC,iBAAmD,GAAGA,CAAC;EAAEC,UAAU;EAAEC,WAAW;EAAE,GAAGC;AAAM,CAAC,KAAK;EAAAC,EAAA;EACrG,MAAM;IAAEC;EAAE,CAAC,GAAGT,cAAc,CAAC,CAAC;EAC9B,MAAMU,yBAAyB,GAAGJ,WAAW,CAACK,aAAa,CAAC,CAAC,CAAC,GAC1DN,UAAU,CAACO,GAAG,CAACN,WAAW,CAAC,CAACO,KAAK,CAAC,GAAG,CAAC,CAACC,QAAQ,CAAC,CAAC,GACjDb,QAAQ;EACZ,MAAMc,oBAAoB,GAAGL,yBAAyB,CAACM,cAAc,CAACC,SAAS,EAAE;IAAEC,qBAAqB,EAAE;EAAE,CAAC,CAAC;EAE9G,oBACEf,OAAA,CAACJ,IAAI;IAACoB,QAAQ,EAAC,MAAM;IAACC,KAAK,EAAC,YAAY;IAAA,GAAKb,KAAK;IAAAc,QAAA,EAC/CZ,CAAC,CAAC,gBAAgB,EAAE;MAAEa,GAAG,EAAEP;IAAqB,CAAC;EAAC;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/C,CAAC;AAEX,CAAC;AAAAlB,EAAA,CAZKJ,iBAAmD;EAAA,QACzCJ,cAAc;AAAA;AAAA2B,EAAA,GADxBvB,iBAAmD;AAczD,eAAeA,iBAAiB;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}