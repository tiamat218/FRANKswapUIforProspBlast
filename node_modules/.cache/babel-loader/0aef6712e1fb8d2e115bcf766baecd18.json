{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Devrim\\\\Documents\\\\FRANKswapUIforProspBlast\\\\src\\\\views\\\\Predictions\\\\components\\\\RoundCard\\\\CanceledRoundCard.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { CardBody, Text, Flex, BlockIcon, LinkExternal } from '@pancakeswap/uikit';\nimport { useTranslation } from 'contexts/Localization';\nimport { BetPosition } from 'state/types';\nimport { useGetTotalIntervalBlocks } from 'state/hooks';\nimport ReclaimPositionButton from '../ReclaimPositionButton';\nimport useIsRefundable from '../../hooks/useIsRefundable';\nimport { RoundResultBox } from '../RoundResult';\nimport MultiplierArrow from './MultiplierArrow';\nimport Card from './Card';\nimport CardHeader from './CardHeader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CanceledRoundCard = ({\n  round\n}) => {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  const interval = useGetTotalIntervalBlocks();\n  const {\n    isRefundable,\n    setIsRefundable\n  } = useIsRefundable(round.epoch);\n  const {\n    epoch,\n    startBlock\n  } = round;\n  const estimatedEndBlock = startBlock + interval;\n\n  const handleSuccess = async () => {\n    setIsRefundable(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n      status: \"canceled\",\n      icon: /*#__PURE__*/_jsxDEV(BlockIcon, {\n        mr: \"4px\",\n        width: \"21px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 15\n      }, this),\n      title: t('Canceled'),\n      epoch: round.epoch,\n      blockNumber: estimatedEndBlock\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n      p: \"16px\",\n      children: [/*#__PURE__*/_jsxDEV(MultiplierArrow, {\n        isDisabled: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RoundResultBox, {\n        children: /*#__PURE__*/_jsxDEV(Flex, {\n          flexDirection: \"column\",\n          alignItems: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            bold: true,\n            color: isRefundable ? 'text' : 'textDisabled',\n            children: t('Round Canceled')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), isRefundable && /*#__PURE__*/_jsxDEV(ReclaimPositionButton, {\n            epoch: epoch,\n            onSuccess: handleSuccess,\n            width: \"100%\",\n            my: \"8px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 30\n          }, this), /*#__PURE__*/_jsxDEV(LinkExternal, {\n            href: \"https://docs.pancakeswap.finance/products/prediction\",\n            external: true,\n            children: t('Learn More')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MultiplierArrow, {\n        betPosition: BetPosition.BEAR,\n        isDisabled: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CanceledRoundCard, \"JenY2UDwlyuEmboiYMj2/JunzRk=\", false, function () {\n  return [useTranslation, useGetTotalIntervalBlocks, useIsRefundable];\n});\n\n_c = CanceledRoundCard;\nexport default CanceledRoundCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"CanceledRoundCard\");","map":{"version":3,"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/views/Predictions/components/RoundCard/CanceledRoundCard.tsx"],"names":["React","CardBody","Text","Flex","BlockIcon","LinkExternal","useTranslation","BetPosition","useGetTotalIntervalBlocks","ReclaimPositionButton","useIsRefundable","RoundResultBox","MultiplierArrow","Card","CardHeader","CanceledRoundCard","round","t","interval","isRefundable","setIsRefundable","epoch","startBlock","estimatedEndBlock","handleSuccess","BEAR"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,IAAnB,EAAyBC,IAAzB,EAA+BC,SAA/B,EAA0CC,YAA1C,QAA8D,oBAA9D;AACA,SAASC,cAAT,QAA+B,uBAA/B;AACA,SAAoBC,WAApB,QAAuC,aAAvC;AACA,SAASC,yBAAT,QAA0C,aAA1C;AACA,OAAOC,qBAAP,MAAkC,0BAAlC;AACA,OAAOC,eAAP,MAA4B,6BAA5B;AACA,SAASC,cAAT,QAA+B,gBAA/B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;;AAMA,MAAMC,iBAAmD,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAAA;;AACzE,QAAM;AAAEC,IAAAA;AAAF,MAAQX,cAAc,EAA5B;AACA,QAAMY,QAAQ,GAAGV,yBAAyB,EAA1C;AACA,QAAM;AAAEW,IAAAA,YAAF;AAAgBC,IAAAA;AAAhB,MAAoCV,eAAe,CAACM,KAAK,CAACK,KAAP,CAAzD;AACA,QAAM;AAAEA,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAwBN,KAA9B;AACA,QAAMO,iBAAiB,GAAGD,UAAU,GAAGJ,QAAvC;;AAEA,QAAMM,aAAa,GAAG,YAAY;AAChCJ,IAAAA,eAAe,CAAC,KAAD,CAAf;AACD,GAFD;;AAIA,sBACE,QAAC,IAAD;AAAA,4BACE,QAAC,UAAD;AACE,MAAA,MAAM,EAAC,UADT;AAEE,MAAA,IAAI,eAAE,QAAC,SAAD;AAAW,QAAA,EAAE,EAAC,KAAd;AAAoB,QAAA,KAAK,EAAC;AAA1B;AAAA;AAAA;AAAA;AAAA,cAFR;AAGE,MAAA,KAAK,EAAEH,CAAC,CAAC,UAAD,CAHV;AAIE,MAAA,KAAK,EAAED,KAAK,CAACK,KAJf;AAKE,MAAA,WAAW,EAAEE;AALf;AAAA;AAAA;AAAA;AAAA,YADF,eAQE,QAAC,QAAD;AAAU,MAAA,CAAC,EAAC,MAAZ;AAAA,8BACE,QAAC,eAAD;AAAiB,QAAA,UAAU;AAA3B;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,cAAD;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,aAAa,EAAC,QAApB;AAA6B,UAAA,UAAU,EAAC,QAAxC;AAAA,kCACE,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAW,YAAA,KAAK,EAAEJ,YAAY,GAAG,MAAH,GAAY,cAA1C;AAAA,sBACGF,CAAC,CAAC,gBAAD;AADJ;AAAA;AAAA;AAAA;AAAA,kBADF,EAIGE,YAAY,iBAAI,QAAC,qBAAD;AAAuB,YAAA,KAAK,EAAEE,KAA9B;AAAqC,YAAA,SAAS,EAAEG,aAAhD;AAA+D,YAAA,KAAK,EAAC,MAArE;AAA4E,YAAA,EAAE,EAAC;AAA/E;AAAA;AAAA;AAAA;AAAA,kBAJnB,eAKE,QAAC,YAAD;AAAc,YAAA,IAAI,EAAC,sDAAnB;AAA0E,YAAA,QAAQ,MAAlF;AAAA,sBACGP,CAAC,CAAC,YAAD;AADJ;AAAA;AAAA;AAAA;AAAA,kBALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF,eAaE,QAAC,eAAD;AAAiB,QAAA,WAAW,EAAEV,WAAW,CAACkB,IAA1C;AAAgD,QAAA,UAAU;AAA1D;AAAA;AAAA;AAAA;AAAA,cAbF;AAAA;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD,CArCD;;GAAMV,iB;UACUT,c,EACGE,yB,EACyBE,e;;;KAHtCK,iB;AAuCN,eAAeA,iBAAf","sourcesContent":["import React from 'react'\r\nimport { CardBody, Text, Flex, BlockIcon, LinkExternal } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { NodeRound, BetPosition } from 'state/types'\r\nimport { useGetTotalIntervalBlocks } from 'state/hooks'\r\nimport ReclaimPositionButton from '../ReclaimPositionButton'\r\nimport useIsRefundable from '../../hooks/useIsRefundable'\r\nimport { RoundResultBox } from '../RoundResult'\r\nimport MultiplierArrow from './MultiplierArrow'\r\nimport Card from './Card'\r\nimport CardHeader from './CardHeader'\r\n\r\ninterface CanceledRoundCardProps {\r\n  round: NodeRound\r\n}\r\n\r\nconst CanceledRoundCard: React.FC<CanceledRoundCardProps> = ({ round }) => {\r\n  const { t } = useTranslation()\r\n  const interval = useGetTotalIntervalBlocks()\r\n  const { isRefundable, setIsRefundable } = useIsRefundable(round.epoch)\r\n  const { epoch, startBlock } = round\r\n  const estimatedEndBlock = startBlock + interval\r\n\r\n  const handleSuccess = async () => {\r\n    setIsRefundable(false)\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader\r\n        status=\"canceled\"\r\n        icon={<BlockIcon mr=\"4px\" width=\"21px\" />}\r\n        title={t('Canceled')}\r\n        epoch={round.epoch}\r\n        blockNumber={estimatedEndBlock}\r\n      />\r\n      <CardBody p=\"16px\">\r\n        <MultiplierArrow isDisabled />\r\n        <RoundResultBox>\r\n          <Flex flexDirection=\"column\" alignItems=\"center\">\r\n            <Text bold color={isRefundable ? 'text' : 'textDisabled'}>\r\n              {t('Round Canceled')}\r\n            </Text>\r\n            {isRefundable && <ReclaimPositionButton epoch={epoch} onSuccess={handleSuccess} width=\"100%\" my=\"8px\" />}\r\n            <LinkExternal href=\"https://docs.pancakeswap.finance/products/prediction\" external>\r\n              {t('Learn More')}\r\n            </LinkExternal>\r\n          </Flex>\r\n        </RoundResultBox>\r\n        <MultiplierArrow betPosition={BetPosition.BEAR} isDisabled />\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default CanceledRoundCard\r\n"]},"metadata":{},"sourceType":"module"}