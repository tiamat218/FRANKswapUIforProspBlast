{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Devrim\\\\Documents\\\\FRANKswapUIforProspBlast\\\\src\\\\components\\\\SearchModal\\\\ImportToken.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Button, Text, ErrorIcon, Flex, Message, Checkbox, Link, Tag, Grid } from '@pancakeswap/uikit';\nimport { AutoColumn } from 'components/Layout/Column';\nimport { useAddUserToken } from 'state/user/hooks';\nimport { getBscScanLink } from 'utils';\nimport useActiveWeb3React from 'hooks/useActiveWeb3React';\nimport { useCombinedInactiveList } from 'state/lists/hooks';\nimport { ListLogo } from 'components/Logo';\nimport { useTranslation } from 'contexts/Localization';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ImportToken({\n  tokens,\n  handleCurrencySelect\n}) {\n  _s();\n\n  const {\n    chainId\n  } = useActiveWeb3React();\n  const {\n    t\n  } = useTranslation();\n  const [confirmed, setConfirmed] = useState(false);\n  const addToken = useAddUserToken(); // use for showing import source on inactive tokens\n\n  const inactiveTokenList = useCombinedInactiveList();\n  return /*#__PURE__*/_jsxDEV(AutoColumn, {\n    gap: \"lg\",\n    children: [/*#__PURE__*/_jsxDEV(Message, {\n      variant: \"warning\",\n      children: /*#__PURE__*/_jsxDEV(Text, {\n        children: [t('Anyone can create a BEP20 token on BSC with any name, including creating fake versions of existing tokens and tokens that claim to represent projects that do not have a token.'), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), t('If you purchase an arbitrary token, you may be unable to sell it back.')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), tokens.map(token => {\n      var _inactiveTokenList$ch, _inactiveTokenList$ch2;\n\n      const list = chainId && (inactiveTokenList === null || inactiveTokenList === void 0 ? void 0 : (_inactiveTokenList$ch = inactiveTokenList[chainId]) === null || _inactiveTokenList$ch === void 0 ? void 0 : (_inactiveTokenList$ch2 = _inactiveTokenList$ch[token.address]) === null || _inactiveTokenList$ch2 === void 0 ? void 0 : _inactiveTokenList$ch2.list);\n      const address = token.address ? `${token.address.substring(0, 6)}...${token.address.substring(token.address.length - 4)}` : null;\n      return /*#__PURE__*/_jsxDEV(Grid, {\n        gridTemplateRows: \"1fr 1fr 1fr\",\n        gridGap: \"4px\",\n        children: [list !== undefined ? /*#__PURE__*/_jsxDEV(Tag, {\n          variant: \"success\",\n          outline: true,\n          scale: \"sm\",\n          startIcon: list.logoURI && /*#__PURE__*/_jsxDEV(ListLogo, {\n            logoURI: list.logoURI,\n            size: \"12px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 44\n          }, this),\n          children: [t('via'), \" \", list.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(Tag, {\n          variant: \"failure\",\n          outline: true,\n          scale: \"sm\",\n          startIcon: /*#__PURE__*/_jsxDEV(ErrorIcon, {\n            color: \"failure\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 68\n          }, this),\n          children: t('Unknown Source')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Flex, {\n          alignItems: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            mr: \"8px\",\n            children: token.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            children: [\"(\", token.symbol, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), chainId && /*#__PURE__*/_jsxDEV(Flex, {\n          justifyContent: \"space-between\",\n          width: \"100%\",\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            mr: \"4px\",\n            children: address\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            href: getBscScanLink(token.address, 'address', chainId),\n            external: true,\n            children: [\"(\", t('View on BscScan'), \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 15\n        }, this)]\n      }, token.address, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(Flex, {\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(Flex, {\n        alignItems: \"center\",\n        onClick: () => setConfirmed(!confirmed),\n        children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n          scale: \"sm\",\n          name: \"confirmed\",\n          type: \"checkbox\",\n          checked: confirmed,\n          onChange: () => setConfirmed(!confirmed)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          ml: \"8px\",\n          style: {\n            userSelect: 'none'\n          },\n          children: t('I understand')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"danger\",\n        disabled: !confirmed,\n        onClick: () => {\n          tokens.map(token => addToken(token));\n\n          if (handleCurrencySelect) {\n            handleCurrencySelect(tokens[0]);\n          }\n        },\n        className: \".token-dismiss-button\",\n        children: t('Import')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ImportToken, \"+IGL9QBnbMDy1TytJvNYKEGrC3E=\", false, function () {\n  return [useActiveWeb3React, useTranslation, useAddUserToken, useCombinedInactiveList];\n});\n\n_c = ImportToken;\nexport default ImportToken;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImportToken\");","map":{"version":3,"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/components/SearchModal/ImportToken.tsx"],"names":["React","useState","Button","Text","ErrorIcon","Flex","Message","Checkbox","Link","Tag","Grid","AutoColumn","useAddUserToken","getBscScanLink","useActiveWeb3React","useCombinedInactiveList","ListLogo","useTranslation","ImportToken","tokens","handleCurrencySelect","chainId","t","confirmed","setConfirmed","addToken","inactiveTokenList","map","token","list","address","substring","length","undefined","logoURI","name","symbol","userSelect"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport { Token, Currency } from '@pancakeswap/sdk'\r\nimport { Button, Text, ErrorIcon, Flex, Message, Checkbox, Link, Tag, Grid } from '@pancakeswap/uikit'\r\nimport { AutoColumn } from 'components/Layout/Column'\r\nimport { useAddUserToken } from 'state/user/hooks'\r\nimport { getBscScanLink } from 'utils'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport { useCombinedInactiveList } from 'state/lists/hooks'\r\nimport { ListLogo } from 'components/Logo'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\ninterface ImportProps {\r\n  tokens: Token[]\r\n  handleCurrencySelect?: (currency: Currency) => void\r\n}\r\n\r\nfunction ImportToken({ tokens, handleCurrencySelect }: ImportProps) {\r\n  const { chainId } = useActiveWeb3React()\r\n\r\n  const { t } = useTranslation()\r\n\r\n  const [confirmed, setConfirmed] = useState(false)\r\n\r\n  const addToken = useAddUserToken()\r\n\r\n  // use for showing import source on inactive tokens\r\n  const inactiveTokenList = useCombinedInactiveList()\r\n\r\n  return (\r\n    <AutoColumn gap=\"lg\">\r\n      <Message variant=\"warning\">\r\n        <Text>\r\n          {t(\r\n            'Anyone can create a BEP20 token on BSC with any name, including creating fake versions of existing tokens and tokens that claim to represent projects that do not have a token.',\r\n          )}\r\n          <br />\r\n          <br />\r\n          {t('If you purchase an arbitrary token, you may be unable to sell it back.')}\r\n        </Text>\r\n      </Message>\r\n\r\n      {tokens.map((token) => {\r\n        const list = chainId && inactiveTokenList?.[chainId]?.[token.address]?.list\r\n        const address = token.address\r\n          ? `${token.address.substring(0, 6)}...${token.address.substring(token.address.length - 4)}`\r\n          : null\r\n        return (\r\n          <Grid key={token.address} gridTemplateRows=\"1fr 1fr 1fr\" gridGap=\"4px\">\r\n            {list !== undefined ? (\r\n              <Tag\r\n                variant=\"success\"\r\n                outline\r\n                scale=\"sm\"\r\n                startIcon={list.logoURI && <ListLogo logoURI={list.logoURI} size=\"12px\" />}\r\n              >\r\n                {t('via')} {list.name}\r\n              </Tag>\r\n            ) : (\r\n              <Tag variant=\"failure\" outline scale=\"sm\" startIcon={<ErrorIcon color=\"failure\" />}>\r\n                {t('Unknown Source')}\r\n              </Tag>\r\n            )}\r\n            <Flex alignItems=\"center\">\r\n              <Text mr=\"8px\">{token.name}</Text>\r\n              <Text>({token.symbol})</Text>\r\n            </Flex>\r\n            {chainId && (\r\n              <Flex justifyContent=\"space-between\" width=\"100%\">\r\n                <Text mr=\"4px\">{address}</Text>\r\n                <Link href={getBscScanLink(token.address, 'address', chainId)} external>\r\n                  ({t('View on BscScan')})\r\n                </Link>\r\n              </Flex>\r\n            )}\r\n          </Grid>\r\n        )\r\n      })}\r\n\r\n      <Flex justifyContent=\"space-between\" alignItems=\"center\">\r\n        <Flex alignItems=\"center\" onClick={() => setConfirmed(!confirmed)}>\r\n          <Checkbox\r\n            scale=\"sm\"\r\n            name=\"confirmed\"\r\n            type=\"checkbox\"\r\n            checked={confirmed}\r\n            onChange={() => setConfirmed(!confirmed)}\r\n          />\r\n          <Text ml=\"8px\" style={{ userSelect: 'none' }}>\r\n            {t('I understand')}\r\n          </Text>\r\n        </Flex>\r\n        <Button\r\n          variant=\"danger\"\r\n          disabled={!confirmed}\r\n          onClick={() => {\r\n            tokens.map((token) => addToken(token))\r\n            if (handleCurrencySelect) {\r\n              handleCurrencySelect(tokens[0])\r\n            }\r\n          }}\r\n          className=\".token-dismiss-button\"\r\n        >\r\n          {t('Import')}\r\n        </Button>\r\n      </Flex>\r\n    </AutoColumn>\r\n  )\r\n}\r\n\r\nexport default ImportToken\r\n"]},"metadata":{},"sourceType":"module"}