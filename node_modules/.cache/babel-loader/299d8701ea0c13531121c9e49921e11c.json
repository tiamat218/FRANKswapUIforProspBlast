{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Devrim\\\\Documents\\\\swapUIforProspBlast\\\\src\\\\views\\\\Profile\\\\components\\\\SelectionCard.tsx\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport { Card, Radio } from '@pancakeswap/uikit';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledCard = styled(Card)`\n  ${({\n  isSuccess\n}) => !isSuccess && 'box-shadow: none;'}\n  border-radius: 16px;\n  margin-bottom: 16px;\n`;\n_c = StyledCard;\nconst Label = styled.label`\n  cursor: ${({\n  isDisabled\n}) => isDisabled ? 'not-allowed' : 'pointer'};\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  opacity: ${({\n  isDisabled\n}) => isDisabled ? '0.6' : '1'};\n`;\n_c2 = Label;\nconst Body = styled.div`\n  align-items: center;\n  border: 2px solid ${({\n  theme\n}) => theme.colors.tertiary};\n  border-radius: 16px 0 0 16px;\n  display: flex;\n  flex-grow: 1;\n  height: 80px;\n  padding: 8px 16px;\n`;\n_c3 = Body;\nconst Children = styled.div`\n  margin-left: 16px;\n`;\n_c4 = Children;\nconst StyledBackgroundImage = styled.div`\n  align-self: stretch;\n  background-image: url('${({\n  src\n}) => src}');\n  background-size: contain;\n  background-position: center;\n  background-repeat: no-repeat;\n  flex: none;\n  width: 80px;\n`;\n_c5 = StyledBackgroundImage;\nconst SelectionCard = ({\n  name,\n  value,\n  isChecked = false,\n  image,\n  onChange,\n  disabled,\n  children,\n  ...props\n}) => {\n  return /*#__PURE__*/_jsxDEV(StyledCard, {\n    isSuccess: isChecked,\n    isDisabled: disabled,\n    mb: \"16px\",\n    ...props,\n    children: /*#__PURE__*/_jsxDEV(Label, {\n      isDisabled: disabled,\n      children: [/*#__PURE__*/_jsxDEV(Body, {\n        children: [/*#__PURE__*/_jsxDEV(Radio, {\n          name: name,\n          checked: isChecked,\n          value: value,\n          onChange: e => onChange(e.target.value),\n          disabled: disabled,\n          style: {\n            flex: 'none'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Children, {\n          children: children\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StyledBackgroundImage, {\n        src: image\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_c6 = SelectionCard;\nexport default SelectionCard;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"StyledCard\");\n$RefreshReg$(_c2, \"Label\");\n$RefreshReg$(_c3, \"Body\");\n$RefreshReg$(_c4, \"Children\");\n$RefreshReg$(_c5, \"StyledBackgroundImage\");\n$RefreshReg$(_c6, \"SelectionCard\");","map":{"version":3,"names":["React","styled","Card","Radio","jsxDEV","_jsxDEV","StyledCard","isSuccess","_c","Label","label","isDisabled","_c2","Body","div","theme","colors","tertiary","_c3","Children","_c4","StyledBackgroundImage","src","_c5","SelectionCard","name","value","isChecked","image","onChange","disabled","children","props","mb","checked","e","target","style","flex","fileName","_jsxFileName","lineNumber","columnNumber","_c6","$RefreshReg$"],"sources":["C:/Users/Devrim/Documents/swapUIforProspBlast/src/views/Profile/components/SelectionCard.tsx"],"sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Card, Radio } from '@pancakeswap/uikit'\r\n\r\ninterface SelectionCardProps {\r\n  name: string\r\n  value: string | number\r\n  isChecked?: boolean\r\n  onChange: (val: any) => void\r\n  image: string\r\n  disabled?: boolean\r\n}\r\n\r\nconst StyledCard = styled(Card)`\r\n  ${({ isSuccess }) => !isSuccess && 'box-shadow: none;'}\r\n  border-radius: 16px;\r\n  margin-bottom: 16px;\r\n`\r\n\r\nconst Label = styled.label<{ isDisabled: boolean }>`\r\n  cursor: ${({ isDisabled }) => (isDisabled ? 'not-allowed' : 'pointer')};\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  opacity: ${({ isDisabled }) => (isDisabled ? '0.6' : '1')};\r\n`\r\n\r\nconst Body = styled.div`\r\n  align-items: center;\r\n  border: 2px solid ${({ theme }) => theme.colors.tertiary};\r\n  border-radius: 16px 0 0 16px;\r\n  display: flex;\r\n  flex-grow: 1;\r\n  height: 80px;\r\n  padding: 8px 16px;\r\n`\r\n\r\nconst Children = styled.div`\r\n  margin-left: 16px;\r\n`\r\n\r\nconst StyledBackgroundImage = styled.div<{ src: string }>`\r\n  align-self: stretch;\r\n  background-image: url('${({ src }) => src}');\r\n  background-size: contain;\r\n  background-position: center;\r\n  background-repeat: no-repeat;\r\n  flex: none;\r\n  width: 80px;\r\n`\r\n\r\nconst SelectionCard: React.FC<SelectionCardProps> = ({\r\n  name,\r\n  value,\r\n  isChecked = false,\r\n  image,\r\n  onChange,\r\n  disabled,\r\n  children,\r\n  ...props\r\n}) => {\r\n  return (\r\n    <StyledCard isSuccess={isChecked} isDisabled={disabled} mb=\"16px\" {...props}>\r\n      <Label isDisabled={disabled}>\r\n        <Body>\r\n          <Radio\r\n            name={name}\r\n            checked={isChecked}\r\n            value={value}\r\n            onChange={(e) => onChange(e.target.value)}\r\n            disabled={disabled}\r\n            style={{ flex: 'none' }}\r\n          />\r\n          <Children>{children}</Children>\r\n        </Body>\r\n        <StyledBackgroundImage src={image} />\r\n      </Label>\r\n    </StyledCard>\r\n  )\r\n}\r\n\r\nexport default SelectionCard\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}