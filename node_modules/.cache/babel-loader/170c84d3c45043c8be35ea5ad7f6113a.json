{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Devrim\\\\Documents\\\\FRANKswapUIforProspBlast\\\\src\\\\views\\\\Predictions\\\\components\\\\RoundResult\\\\RoundResultHistory.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Flex, Text } from '@pancakeswap/uikit';\nimport { BetPosition } from 'state/types';\nimport { useTranslation } from 'contexts/Localization';\nimport { formatUsd } from '../History/helpers';\nimport PositionTag from '../PositionTag';\nimport { LockPriceHistoryRow, PrizePoolHistoryRow, RoundResultBox } from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RoundResult = ({\n  round,\n  children,\n  ...props\n}) => {\n  _s();\n\n  const {\n    lockPrice,\n    closePrice,\n    totalAmount\n  } = round;\n  const betPosition = closePrice > lockPrice ? BetPosition.BULL : BetPosition.BEAR;\n  const isPositionUp = betPosition === BetPosition.BULL;\n  const {\n    t\n  } = useTranslation();\n  const priceDifference = closePrice - lockPrice;\n  return /*#__PURE__*/_jsxDEV(RoundResultBox, {\n    betPosition: betPosition,\n    ...props,\n    children: [/*#__PURE__*/_jsxDEV(Text, {\n      color: \"textSubtle\",\n      fontSize: \"12px\",\n      bold: true,\n      textTransform: \"uppercase\",\n      mb: \"8px\",\n      children: t('Closed Price')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), round.failed ? /*#__PURE__*/_jsxDEV(Text, {\n      bold: true,\n      textTransform: \"uppercase\",\n      color: \"textDisabled\",\n      mb: \"16px\",\n      fontSize: \"24px\",\n      children: t('Canceled')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Flex, {\n      alignItems: \"center\",\n      justifyContent: \"space-between\",\n      mb: \"16px\",\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        color: isPositionUp ? 'success' : 'failure',\n        bold: true,\n        fontSize: \"24px\",\n        children: formatUsd(closePrice)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(PositionTag, {\n        betPosition: betPosition,\n        children: formatUsd(priceDifference)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this), lockPrice && /*#__PURE__*/_jsxDEV(LockPriceHistoryRow, {\n      lockPrice: lockPrice\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(PrizePoolHistoryRow, {\n      totalAmount: totalAmount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), children]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RoundResult, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n\n_c = RoundResult;\nexport default RoundResult;\n\nvar _c;\n\n$RefreshReg$(_c, \"RoundResult\");","map":{"version":3,"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/views/Predictions/components/RoundResult/RoundResultHistory.tsx"],"names":["React","Flex","Text","BetPosition","useTranslation","formatUsd","PositionTag","LockPriceHistoryRow","PrizePoolHistoryRow","RoundResultBox","RoundResult","round","children","props","lockPrice","closePrice","totalAmount","betPosition","BULL","BEAR","isPositionUp","t","priceDifference","failed"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAmBC,IAAnB,EAAyBC,IAAzB,QAAqC,oBAArC;AACA,SAASC,WAAT,QAAmC,aAAnC;AACA,SAASC,cAAT,QAA+B,uBAA/B;AACA,SAASC,SAAT,QAA0B,oBAA1B;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,SAASC,mBAAT,EAA8BC,mBAA9B,EAAmDC,cAAnD,QAAyE,UAAzE;;;AAMA,MAAMC,WAAuC,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,QAAT;AAAmB,KAAGC;AAAtB,CAAD,KAAmC;AAAA;;AACjF,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,UAAb;AAAyBC,IAAAA;AAAzB,MAAyCL,KAA/C;AACA,QAAMM,WAAW,GAAGF,UAAU,GAAGD,SAAb,GAAyBX,WAAW,CAACe,IAArC,GAA4Cf,WAAW,CAACgB,IAA5E;AACA,QAAMC,YAAY,GAAGH,WAAW,KAAKd,WAAW,CAACe,IAAjD;AACA,QAAM;AAAEG,IAAAA;AAAF,MAAQjB,cAAc,EAA5B;AACA,QAAMkB,eAAe,GAAGP,UAAU,GAAGD,SAArC;AAEA,sBACE,QAAC,cAAD;AAAgB,IAAA,WAAW,EAAEG,WAA7B;AAAA,OAA8CJ,KAA9C;AAAA,4BACE,QAAC,IAAD;AAAM,MAAA,KAAK,EAAC,YAAZ;AAAyB,MAAA,QAAQ,EAAC,MAAlC;AAAyC,MAAA,IAAI,MAA7C;AAA8C,MAAA,aAAa,EAAC,WAA5D;AAAwE,MAAA,EAAE,EAAC,KAA3E;AAAA,gBACGQ,CAAC,CAAC,cAAD;AADJ;AAAA;AAAA;AAAA;AAAA,YADF,EAIGV,KAAK,CAACY,MAAN,gBACC,QAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,aAAa,EAAC,WAAzB;AAAqC,MAAA,KAAK,EAAC,cAA3C;AAA0D,MAAA,EAAE,EAAC,MAA7D;AAAoE,MAAA,QAAQ,EAAC,MAA7E;AAAA,gBACGF,CAAC,CAAC,UAAD;AADJ;AAAA;AAAA;AAAA;AAAA,YADD,gBAKC,QAAC,IAAD;AAAM,MAAA,UAAU,EAAC,QAAjB;AAA0B,MAAA,cAAc,EAAC,eAAzC;AAAyD,MAAA,EAAE,EAAC,MAA5D;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,KAAK,EAAED,YAAY,GAAG,SAAH,GAAe,SAAxC;AAAmD,QAAA,IAAI,MAAvD;AAAwD,QAAA,QAAQ,EAAC,MAAjE;AAAA,kBACGf,SAAS,CAACU,UAAD;AADZ;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,WAAD;AAAa,QAAA,WAAW,EAAEE,WAA1B;AAAA,kBAAwCZ,SAAS,CAACiB,eAAD;AAAjD;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YATJ,EAgBGR,SAAS,iBAAI,QAAC,mBAAD;AAAqB,MAAA,SAAS,EAAEA;AAAhC;AAAA;AAAA;AAAA;AAAA,YAhBhB,eAiBE,QAAC,mBAAD;AAAqB,MAAA,WAAW,EAAEE;AAAlC;AAAA;AAAA;AAAA;AAAA,YAjBF,EAkBGJ,QAlBH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD,CA7BD;;GAAMF,W;UAIUN,c;;;KAJVM,W;AA+BN,eAAeA,WAAf","sourcesContent":["import React from 'react'\r\nimport { BoxProps, Flex, Text } from '@pancakeswap/uikit'\r\nimport { BetPosition, Round } from 'state/types'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { formatUsd } from '../History/helpers'\r\nimport PositionTag from '../PositionTag'\r\nimport { LockPriceHistoryRow, PrizePoolHistoryRow, RoundResultBox } from './styles'\r\n\r\ninterface RoundResultProps extends BoxProps {\r\n  round: Round\r\n}\r\n\r\nconst RoundResult: React.FC<RoundResultProps> = ({ round, children, ...props }) => {\r\n  const { lockPrice, closePrice, totalAmount } = round\r\n  const betPosition = closePrice > lockPrice ? BetPosition.BULL : BetPosition.BEAR\r\n  const isPositionUp = betPosition === BetPosition.BULL\r\n  const { t } = useTranslation()\r\n  const priceDifference = closePrice - lockPrice\r\n\r\n  return (\r\n    <RoundResultBox betPosition={betPosition} {...props}>\r\n      <Text color=\"textSubtle\" fontSize=\"12px\" bold textTransform=\"uppercase\" mb=\"8px\">\r\n        {t('Closed Price')}\r\n      </Text>\r\n      {round.failed ? (\r\n        <Text bold textTransform=\"uppercase\" color=\"textDisabled\" mb=\"16px\" fontSize=\"24px\">\r\n          {t('Canceled')}\r\n        </Text>\r\n      ) : (\r\n        <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"16px\">\r\n          <Text color={isPositionUp ? 'success' : 'failure'} bold fontSize=\"24px\">\r\n            {formatUsd(closePrice)}\r\n          </Text>\r\n          <PositionTag betPosition={betPosition}>{formatUsd(priceDifference)}</PositionTag>\r\n        </Flex>\r\n      )}\r\n      {lockPrice && <LockPriceHistoryRow lockPrice={lockPrice} />}\r\n      <PrizePoolHistoryRow totalAmount={totalAmount} />\r\n      {children}\r\n    </RoundResultBox>\r\n  )\r\n}\r\n\r\nexport default RoundResult\r\n"]},"metadata":{},"sourceType":"module"}