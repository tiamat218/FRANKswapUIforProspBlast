{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Devrim\\\\Documents\\\\FRANKswapUIforProspBlast\\\\src\\\\components\\\\Modal\\\\ModalInput.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport { Text, Button, Input, Flex, Link } from '@pancakeswap/uikit';\nimport { useTranslation } from 'contexts/Localization';\nimport { BigNumber } from 'bignumber.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getBoxShadow = ({\n  isWarning = false,\n  theme\n}) => {\n  if (isWarning) {\n    return theme.shadows.warning;\n  }\n\n  return theme.shadows.inset;\n};\n\nconst StyledTokenInput = styled.div`\n  display: flex;\n  flex-direction: column;\n  background-color: ${({\n  theme\n}) => theme.colors.input};\n  border-radius: 16px;\n  box-shadow: ${getBoxShadow};\n  color: ${({\n  theme\n}) => theme.colors.text};\n  padding: 8px 16px 8px 0;\n  width: 100%;\n`;\n_c = StyledTokenInput;\nconst StyledInput = styled(Input)`\n  box-shadow: none;\n  width: 60px;\n  margin: 0 8px;\n  padding: 0 8px;\n\n  ${({\n  theme\n}) => theme.mediaQueries.xs} {\n    width: 80px;\n  }\n\n  ${({\n  theme\n}) => theme.mediaQueries.sm} {\n    width: auto;\n  }\n`;\n_c2 = StyledInput;\nconst StyledErrorMessage = styled(Text)`\n  position: absolute;\n  bottom: -22px;\n  a {\n    display: inline;\n  }\n`;\n_c3 = StyledErrorMessage;\n\nconst ModalInput = ({\n  max,\n  symbol,\n  onChange,\n  onSelectMax,\n  value,\n  addLiquidityUrl,\n  inputTitle,\n  decimals = 18\n}) => {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  const isBalanceZero = max === '0' || !max;\n\n  const displayBalance = balance => {\n    if (isBalanceZero) {\n      return '0';\n    }\n\n    const balanceBigNumber = new BigNumber(balance);\n\n    if (balanceBigNumber.gt(0) && balanceBigNumber.lt(0.0001)) {\n      return balanceBigNumber.toLocaleString();\n    }\n\n    return balanceBigNumber.toFixed(3, BigNumber.ROUND_DOWN);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'relative'\n    },\n    children: [/*#__PURE__*/_jsxDEV(StyledTokenInput, {\n      isWarning: isBalanceZero,\n      children: [/*#__PURE__*/_jsxDEV(Flex, {\n        justifyContent: \"space-between\",\n        pl: \"16px\",\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"14px\",\n          children: inputTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"14px\",\n          children: t('Balance: %balance%', {\n            balance: displayBalance(max)\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        alignItems: \"flex-end\",\n        justifyContent: \"space-around\",\n        children: [/*#__PURE__*/_jsxDEV(StyledInput, {\n          pattern: `^[0-9]*[.,]?[0-9]{0,${decimals}}$`,\n          inputMode: \"decimal\",\n          step: \"any\",\n          min: \"0\",\n          onChange: onChange,\n          placeholder: \"0\",\n          value: value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          scale: \"sm\",\n          onClick: onSelectMax,\n          mr: \"8px\",\n          children: t('Max')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"16px\",\n          children: symbol\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), isBalanceZero && /*#__PURE__*/_jsxDEV(StyledErrorMessage, {\n      fontSize: \"14px\",\n      color: \"failure\",\n      children: [t('No tokens to stake'), \":\", ' ', /*#__PURE__*/_jsxDEV(Link, {\n        fontSize: \"14px\",\n        bold: false,\n        href: addLiquidityUrl,\n        external: true,\n        color: \"failure\",\n        children: t('Get %symbol%', {\n          symbol\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ModalInput, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n\n_c4 = ModalInput;\nexport default ModalInput;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"StyledTokenInput\");\n$RefreshReg$(_c2, \"StyledInput\");\n$RefreshReg$(_c3, \"StyledErrorMessage\");\n$RefreshReg$(_c4, \"ModalInput\");","map":{"version":3,"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/components/Modal/ModalInput.tsx"],"names":["React","styled","Text","Button","Input","Flex","Link","useTranslation","BigNumber","getBoxShadow","isWarning","theme","shadows","warning","inset","StyledTokenInput","div","colors","input","text","StyledInput","mediaQueries","xs","sm","StyledErrorMessage","ModalInput","max","symbol","onChange","onSelectMax","value","addLiquidityUrl","inputTitle","decimals","t","isBalanceZero","displayBalance","balance","balanceBigNumber","gt","lt","toLocaleString","toFixed","ROUND_DOWN","position"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text, Button, Input, InputProps, Flex, Link } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { BigNumber } from 'bignumber.js'\r\n\r\ninterface ModalInputProps {\r\n  max: string\r\n  symbol: string\r\n  onSelectMax?: () => void\r\n  onChange: (e: React.FormEvent<HTMLInputElement>) => void\r\n  placeholder?: string\r\n  value: string\r\n  addLiquidityUrl?: string\r\n  inputTitle?: string\r\n  decimals?: number\r\n}\r\n\r\nconst getBoxShadow = ({ isWarning = false, theme }) => {\r\n  if (isWarning) {\r\n    return theme.shadows.warning\r\n  }\r\n\r\n  return theme.shadows.inset\r\n}\r\n\r\nconst StyledTokenInput = styled.div<InputProps>`\r\n  display: flex;\r\n  flex-direction: column;\r\n  background-color: ${({ theme }) => theme.colors.input};\r\n  border-radius: 16px;\r\n  box-shadow: ${getBoxShadow};\r\n  color: ${({ theme }) => theme.colors.text};\r\n  padding: 8px 16px 8px 0;\r\n  width: 100%;\r\n`\r\n\r\nconst StyledInput = styled(Input)`\r\n  box-shadow: none;\r\n  width: 60px;\r\n  margin: 0 8px;\r\n  padding: 0 8px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.xs} {\r\n    width: 80px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    width: auto;\r\n  }\r\n`\r\n\r\nconst StyledErrorMessage = styled(Text)`\r\n  position: absolute;\r\n  bottom: -22px;\r\n  a {\r\n    display: inline;\r\n  }\r\n`\r\n\r\nconst ModalInput: React.FC<ModalInputProps> = ({\r\n  max,\r\n  symbol,\r\n  onChange,\r\n  onSelectMax,\r\n  value,\r\n  addLiquidityUrl,\r\n  inputTitle,\r\n  decimals = 18,\r\n}) => {\r\n  const { t } = useTranslation()\r\n  const isBalanceZero = max === '0' || !max\r\n\r\n  const displayBalance = (balance: string) => {\r\n    if (isBalanceZero) {\r\n      return '0'\r\n    }\r\n    const balanceBigNumber = new BigNumber(balance)\r\n    if (balanceBigNumber.gt(0) && balanceBigNumber.lt(0.0001)) {\r\n      return balanceBigNumber.toLocaleString()\r\n    }\r\n    return balanceBigNumber.toFixed(3, BigNumber.ROUND_DOWN)\r\n  }\r\n\r\n  return (\r\n    <div style={{ position: 'relative' }}>\r\n      <StyledTokenInput isWarning={isBalanceZero}>\r\n        <Flex justifyContent=\"space-between\" pl=\"16px\">\r\n          <Text fontSize=\"14px\">{inputTitle}</Text>\r\n          <Text fontSize=\"14px\">{t('Balance: %balance%', { balance: displayBalance(max) })}</Text>\r\n        </Flex>\r\n        <Flex alignItems=\"flex-end\" justifyContent=\"space-around\">\r\n          <StyledInput\r\n            pattern={`^[0-9]*[.,]?[0-9]{0,${decimals}}$`}\r\n            inputMode=\"decimal\"\r\n            step=\"any\"\r\n            min=\"0\"\r\n            onChange={onChange}\r\n            placeholder=\"0\"\r\n            value={value}\r\n          />\r\n          <Button scale=\"sm\" onClick={onSelectMax} mr=\"8px\">\r\n            {t('Max')}\r\n          </Button>\r\n          <Text fontSize=\"16px\">{symbol}</Text>\r\n        </Flex>\r\n      </StyledTokenInput>\r\n      {isBalanceZero && (\r\n        <StyledErrorMessage fontSize=\"14px\" color=\"failure\">\r\n          {t('No tokens to stake')}:{' '}\r\n          <Link fontSize=\"14px\" bold={false} href={addLiquidityUrl} external color=\"failure\">\r\n            {t('Get %symbol%', { symbol })}\r\n          </Link>\r\n        </StyledErrorMessage>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ModalInput\r\n"]},"metadata":{},"sourceType":"module"}