{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Devrim\\\\Documents\\\\FRANKswapUIforProspBlast\\\\src\\\\views\\\\Swap\\\\components\\\\SwapWarningModal\\\\index.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport styled from 'styled-components';\nimport { ModalBody, ModalContainer, Message, ModalHeader, Box, Heading } from '@pancakeswap/uikit';\nimport useTheme from 'hooks/useTheme';\nimport { getAddress } from 'utils/addressHelpers';\nimport { useTranslation } from 'contexts/Localization';\nimport SwapWarningTokensConfig from 'config/constants/swapWarningTokens';\nimport SafemoonWarning from './SafemoonWarning';\nimport BondlyWarning from './BondlyWarning';\nimport Acknowledgement from './Acknowledgement';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledModalContainer = styled(ModalContainer)`\n  max-width: 440px;\n`;\n_c = StyledModalContainer;\nconst MessageContainer = styled(Message)`\n  align-items: flex-start;\n  justify-content: flex-start;\n`;\n_c2 = MessageContainer;\n\n// Modal is fired by a useEffect and doesn't respond to closeOnOverlayClick prop being set to false\nconst usePreventModalOverlayClick = () => {\n  _s();\n\n  useEffect(() => {\n    const preventClickHandler = e => {\n      e.stopPropagation();\n      e.preventDefault();\n      return false;\n    };\n\n    document.querySelectorAll('[role=\"presentation\"]').forEach(el => {\n      el.addEventListener('click', preventClickHandler, true);\n    });\n    return () => {\n      document.querySelectorAll('[role=\"presentation\"]').forEach(el => {\n        el.removeEventListener('click', preventClickHandler, true);\n      });\n    };\n  }, []);\n};\n\n_s(usePreventModalOverlayClick, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\nconst SwapWarningModal = ({\n  swapCurrency,\n  onDismiss\n}) => {\n  _s2();\n\n  const {\n    t\n  } = useTranslation();\n  const {\n    theme\n  } = useTheme();\n  usePreventModalOverlayClick();\n  const TOKEN_WARNINGS = {\n    [getAddress(SwapWarningTokensConfig.safemoon.address)]: {\n      symbol: SwapWarningTokensConfig.safemoon.symbol,\n      component: /*#__PURE__*/_jsxDEV(SafemoonWarning, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 18\n      }, this)\n    },\n    [getAddress(SwapWarningTokensConfig.bondly.address)]: {\n      symbol: SwapWarningTokensConfig.bondly.symbol,\n      component: /*#__PURE__*/_jsxDEV(BondlyWarning, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 18\n      }, this)\n    }\n  };\n  const SWAP_WARNING = TOKEN_WARNINGS[swapCurrency.address];\n  return /*#__PURE__*/_jsxDEV(StyledModalContainer, {\n    minWidth: \"280px\",\n    children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n      background: theme.colors.gradients.cardHeader,\n      children: /*#__PURE__*/_jsxDEV(Heading, {\n        p: \"12px 24px\",\n        children: t('Notice for trading %symbol%', {\n          symbol: SWAP_WARNING.symbol\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n      p: \"24px\",\n      children: [/*#__PURE__*/_jsxDEV(MessageContainer, {\n        variant: \"warning\",\n        mb: \"24px\",\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          children: SWAP_WARNING.component\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Acknowledgement, {\n        handleContinueClick: onDismiss\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(SwapWarningModal, \"8BKOOkqsEKaMyM3tvLohs+p74Ko=\", false, function () {\n  return [useTranslation, useTheme, usePreventModalOverlayClick];\n});\n\n_c3 = SwapWarningModal;\nexport default SwapWarningModal;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"StyledModalContainer\");\n$RefreshReg$(_c2, \"MessageContainer\");\n$RefreshReg$(_c3, \"SwapWarningModal\");","map":{"version":3,"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/views/Swap/components/SwapWarningModal/index.tsx"],"names":["React","useEffect","styled","ModalBody","ModalContainer","Message","ModalHeader","Box","Heading","useTheme","getAddress","useTranslation","SwapWarningTokensConfig","SafemoonWarning","BondlyWarning","Acknowledgement","StyledModalContainer","MessageContainer","usePreventModalOverlayClick","preventClickHandler","e","stopPropagation","preventDefault","document","querySelectorAll","forEach","el","addEventListener","removeEventListener","SwapWarningModal","swapCurrency","onDismiss","t","theme","TOKEN_WARNINGS","safemoon","address","symbol","component","bondly","SWAP_WARNING","colors","gradients","cardHeader"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport { ModalBody, ModalContainer, Message, ModalHeader, Box, Heading } from '@pancakeswap/uikit'\r\nimport useTheme from 'hooks/useTheme'\r\nimport { getAddress } from 'utils/addressHelpers'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { WrappedTokenInfo } from 'state/lists/hooks'\r\nimport SwapWarningTokensConfig from 'config/constants/swapWarningTokens'\r\nimport SafemoonWarning from './SafemoonWarning'\r\nimport BondlyWarning from './BondlyWarning'\r\nimport Acknowledgement from './Acknowledgement'\r\n\r\nconst StyledModalContainer = styled(ModalContainer)`\r\n  max-width: 440px;\r\n`\r\n\r\nconst MessageContainer = styled(Message)`\r\n  align-items: flex-start;\r\n  justify-content: flex-start;\r\n`\r\n\r\ninterface SwapWarningModalProps {\r\n  swapCurrency: WrappedTokenInfo\r\n  onDismiss?: () => void\r\n}\r\n\r\n// Modal is fired by a useEffect and doesn't respond to closeOnOverlayClick prop being set to false\r\nconst usePreventModalOverlayClick = () => {\r\n  useEffect(() => {\r\n    const preventClickHandler = (e) => {\r\n      e.stopPropagation()\r\n      e.preventDefault()\r\n      return false\r\n    }\r\n\r\n    document.querySelectorAll('[role=\"presentation\"]').forEach((el) => {\r\n      el.addEventListener('click', preventClickHandler, true)\r\n    })\r\n\r\n    return () => {\r\n      document.querySelectorAll('[role=\"presentation\"]').forEach((el) => {\r\n        el.removeEventListener('click', preventClickHandler, true)\r\n      })\r\n    }\r\n  }, [])\r\n}\r\n\r\nconst SwapWarningModal: React.FC<SwapWarningModalProps> = ({ swapCurrency, onDismiss }) => {\r\n  const { t } = useTranslation()\r\n  const { theme } = useTheme()\r\n  usePreventModalOverlayClick()\r\n\r\n  const TOKEN_WARNINGS = {\r\n    [getAddress(SwapWarningTokensConfig.safemoon.address)]: {\r\n      symbol: SwapWarningTokensConfig.safemoon.symbol,\r\n      component: <SafemoonWarning />,\r\n    },\r\n    [getAddress(SwapWarningTokensConfig.bondly.address)]: {\r\n      symbol: SwapWarningTokensConfig.bondly.symbol,\r\n      component: <BondlyWarning />,\r\n    },\r\n  }\r\n\r\n  const SWAP_WARNING = TOKEN_WARNINGS[swapCurrency.address]\r\n\r\n  return (\r\n    <StyledModalContainer minWidth=\"280px\">\r\n      <ModalHeader background={theme.colors.gradients.cardHeader}>\r\n        <Heading p=\"12px 24px\">{t('Notice for trading %symbol%', { symbol: SWAP_WARNING.symbol })}</Heading>\r\n      </ModalHeader>\r\n      <ModalBody p=\"24px\">\r\n        <MessageContainer variant=\"warning\" mb=\"24px\">\r\n          <Box>{SWAP_WARNING.component}</Box>\r\n        </MessageContainer>\r\n        <Acknowledgement handleContinueClick={onDismiss} />\r\n      </ModalBody>\r\n    </StyledModalContainer>\r\n  )\r\n}\r\n\r\nexport default SwapWarningModal\r\n"]},"metadata":{},"sourceType":"module"}