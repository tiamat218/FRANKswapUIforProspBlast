{"ast":null,"code":"// Constructing the two forward-slash-separated parts of the 'Add Liquidity' URL\n// Each part of the url represents a different side of the LP pair.\nimport { getWbnbAddress } from './addressHelpers';\nconst getLiquidityUrlPathParts = ({\n  quoteTokenAddress,\n  tokenAddress\n}) => {\n  const chainId = process.env.REACT_APP_CHAIN_ID;\n  const wBNBAddressString = getWbnbAddress();\n  const quoteTokenAddressString = quoteTokenAddress ? quoteTokenAddress[chainId] : null;\n  const tokenAddressString = tokenAddress ? tokenAddress[chainId] : null;\n  const firstPart = !quoteTokenAddressString || quoteTokenAddressString === wBNBAddressString ? 'BNB' : quoteTokenAddressString;\n  const secondPart = !tokenAddressString || tokenAddressString === wBNBAddressString ? 'BNB' : tokenAddressString;\n  return `${firstPart}/${secondPart}`;\n};\nexport default getLiquidityUrlPathParts;","map":{"version":3,"names":["getWbnbAddress","getLiquidityUrlPathParts","quoteTokenAddress","tokenAddress","chainId","process","env","REACT_APP_CHAIN_ID","wBNBAddressString","quoteTokenAddressString","tokenAddressString","firstPart","secondPart"],"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/utils/getLiquidityUrlPathParts.ts"],"sourcesContent":["// Constructing the two forward-slash-separated parts of the 'Add Liquidity' URL\r\n// Each part of the url represents a different side of the LP pair.\r\nimport { getWbnbAddress } from './addressHelpers'\r\n\r\nconst getLiquidityUrlPathParts = ({ quoteTokenAddress, tokenAddress }) => {\r\n  const chainId = process.env.REACT_APP_CHAIN_ID\r\n  const wBNBAddressString = getWbnbAddress()\r\n  const quoteTokenAddressString: string = quoteTokenAddress ? quoteTokenAddress[chainId] : null\r\n  const tokenAddressString: string = tokenAddress ? tokenAddress[chainId] : null\r\n  const firstPart =\r\n    !quoteTokenAddressString || quoteTokenAddressString === wBNBAddressString ? 'BNB' : quoteTokenAddressString\r\n  const secondPart = !tokenAddressString || tokenAddressString === wBNBAddressString ? 'BNB' : tokenAddressString\r\n  return `${firstPart}/${secondPart}`\r\n}\r\n\r\nexport default getLiquidityUrlPathParts\r\n"],"mappings":"AAAA;AACA;AACA,SAASA,cAAc,QAAQ,kBAAkB;AAEjD,MAAMC,wBAAwB,GAAGA,CAAC;EAAEC,iBAAiB;EAAEC;AAAa,CAAC,KAAK;EACxE,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,kBAAkB;EAC9C,MAAMC,iBAAiB,GAAGR,cAAc,CAAC,CAAC;EAC1C,MAAMS,uBAA+B,GAAGP,iBAAiB,GAAGA,iBAAiB,CAACE,OAAO,CAAC,GAAG,IAAI;EAC7F,MAAMM,kBAA0B,GAAGP,YAAY,GAAGA,YAAY,CAACC,OAAO,CAAC,GAAG,IAAI;EAC9E,MAAMO,SAAS,GACb,CAACF,uBAAuB,IAAIA,uBAAuB,KAAKD,iBAAiB,GAAG,KAAK,GAAGC,uBAAuB;EAC7G,MAAMG,UAAU,GAAG,CAACF,kBAAkB,IAAIA,kBAAkB,KAAKF,iBAAiB,GAAG,KAAK,GAAGE,kBAAkB;EAC/G,OAAO,GAAGC,SAAS,IAAIC,UAAU,EAAE;AACrC,CAAC;AAED,eAAeX,wBAAwB","ignoreList":[]},"metadata":{},"sourceType":"module"}