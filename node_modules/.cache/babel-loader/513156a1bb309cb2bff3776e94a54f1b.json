{"ast":null,"code":"export const transformProfileResponse = profileResponse => {\n  const {\n    0: userId,\n    1: numberPoints,\n    2: teamId,\n    3: nftAddress,\n    4: tokenId,\n    5: isActive\n  } = profileResponse;\n  return {\n    userId: Number(userId),\n    points: Number(numberPoints),\n    teamId: Number(teamId),\n    tokenId: Number(tokenId),\n    nftAddress,\n    isActive\n  };\n};","map":{"version":3,"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/state/profile/helpers.ts"],"names":["transformProfileResponse","profileResponse","userId","numberPoints","teamId","nftAddress","tokenId","isActive","Number","points"],"mappings":"AAWA,OAAO,MAAMA,wBAAwB,GAAIC,eAAD,IAAwD;AAC9F,QAAM;AAAE,OAAGC,MAAL;AAAa,OAAGC,YAAhB;AAA8B,OAAGC,MAAjC;AAAyC,OAAGC,UAA5C;AAAwD,OAAGC,OAA3D;AAAoE,OAAGC;AAAvE,MAAoFN,eAA1F;AAEA,SAAO;AACLC,IAAAA,MAAM,EAAEM,MAAM,CAACN,MAAD,CADT;AAELO,IAAAA,MAAM,EAAED,MAAM,CAACL,YAAD,CAFT;AAGLC,IAAAA,MAAM,EAAEI,MAAM,CAACJ,MAAD,CAHT;AAILE,IAAAA,OAAO,EAAEE,MAAM,CAACF,OAAD,CAJV;AAKLD,IAAAA,UALK;AAMLE,IAAAA;AANK,GAAP;AAQD,CAXM","sourcesContent":["import { Profile } from 'state/types'\r\n\r\nexport type ProfileResponse = {\r\n  0: string\r\n  1: string\r\n  2: string\r\n  3: string\r\n  4: string\r\n  5: boolean\r\n}\r\n\r\nexport const transformProfileResponse = (profileResponse: ProfileResponse): Partial<Profile> => {\r\n  const { 0: userId, 1: numberPoints, 2: teamId, 3: nftAddress, 4: tokenId, 5: isActive } = profileResponse\r\n\r\n  return {\r\n    userId: Number(userId),\r\n    points: Number(numberPoints),\r\n    teamId: Number(teamId),\r\n    tokenId: Number(tokenId),\r\n    nftAddress,\r\n    isActive,\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}