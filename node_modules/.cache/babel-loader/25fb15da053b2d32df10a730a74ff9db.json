{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Devrim\\\\Documents\\\\FRANKswapUIforProspBlast\\\\src\\\\views\\\\Predictions\\\\components\\\\RoundResult\\\\RoundResultHistory.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Flex, Text } from '@pancakeswap/uikit';\nimport { BetPosition } from 'state/types';\nimport { useTranslation } from 'contexts/Localization';\nimport { formatUsd } from '../History/helpers';\nimport PositionTag from '../PositionTag';\nimport { LockPriceHistoryRow, PrizePoolHistoryRow, RoundResultBox } from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RoundResult = ({\n  round,\n  children,\n  ...props\n}) => {\n  _s();\n  const {\n    lockPrice,\n    closePrice,\n    totalAmount\n  } = round;\n  const betPosition = closePrice > lockPrice ? BetPosition.BULL : BetPosition.BEAR;\n  const isPositionUp = betPosition === BetPosition.BULL;\n  const {\n    t\n  } = useTranslation();\n  const priceDifference = closePrice - lockPrice;\n  return /*#__PURE__*/_jsxDEV(RoundResultBox, {\n    betPosition: betPosition,\n    ...props,\n    children: [/*#__PURE__*/_jsxDEV(Text, {\n      color: \"textSubtle\",\n      fontSize: \"12px\",\n      bold: true,\n      textTransform: \"uppercase\",\n      mb: \"8px\",\n      children: t('Closed Price')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), round.failed ? /*#__PURE__*/_jsxDEV(Text, {\n      bold: true,\n      textTransform: \"uppercase\",\n      color: \"textDisabled\",\n      mb: \"16px\",\n      fontSize: \"24px\",\n      children: t('Canceled')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Flex, {\n      alignItems: \"center\",\n      justifyContent: \"space-between\",\n      mb: \"16px\",\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        color: isPositionUp ? 'success' : 'failure',\n        bold: true,\n        fontSize: \"24px\",\n        children: formatUsd(closePrice)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(PositionTag, {\n        betPosition: betPosition,\n        children: formatUsd(priceDifference)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this), lockPrice && /*#__PURE__*/_jsxDEV(LockPriceHistoryRow, {\n      lockPrice: lockPrice\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(PrizePoolHistoryRow, {\n      totalAmount: totalAmount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), children]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(RoundResult, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n_c = RoundResult;\nexport default RoundResult;\nvar _c;\n$RefreshReg$(_c, \"RoundResult\");","map":{"version":3,"names":["React","Flex","Text","BetPosition","useTranslation","formatUsd","PositionTag","LockPriceHistoryRow","PrizePoolHistoryRow","RoundResultBox","jsxDEV","_jsxDEV","RoundResult","round","children","props","_s","lockPrice","closePrice","totalAmount","betPosition","BULL","BEAR","isPositionUp","t","priceDifference","color","fontSize","bold","textTransform","mb","fileName","_jsxFileName","lineNumber","columnNumber","failed","alignItems","justifyContent","_c","$RefreshReg$"],"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/views/Predictions/components/RoundResult/RoundResultHistory.tsx"],"sourcesContent":["import React from 'react'\r\nimport { BoxProps, Flex, Text } from '@pancakeswap/uikit'\r\nimport { BetPosition, Round } from 'state/types'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { formatUsd } from '../History/helpers'\r\nimport PositionTag from '../PositionTag'\r\nimport { LockPriceHistoryRow, PrizePoolHistoryRow, RoundResultBox } from './styles'\r\n\r\ninterface RoundResultProps extends BoxProps {\r\n  round: Round\r\n}\r\n\r\nconst RoundResult: React.FC<RoundResultProps> = ({ round, children, ...props }) => {\r\n  const { lockPrice, closePrice, totalAmount } = round\r\n  const betPosition = closePrice > lockPrice ? BetPosition.BULL : BetPosition.BEAR\r\n  const isPositionUp = betPosition === BetPosition.BULL\r\n  const { t } = useTranslation()\r\n  const priceDifference = closePrice - lockPrice\r\n\r\n  return (\r\n    <RoundResultBox betPosition={betPosition} {...props}>\r\n      <Text color=\"textSubtle\" fontSize=\"12px\" bold textTransform=\"uppercase\" mb=\"8px\">\r\n        {t('Closed Price')}\r\n      </Text>\r\n      {round.failed ? (\r\n        <Text bold textTransform=\"uppercase\" color=\"textDisabled\" mb=\"16px\" fontSize=\"24px\">\r\n          {t('Canceled')}\r\n        </Text>\r\n      ) : (\r\n        <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"16px\">\r\n          <Text color={isPositionUp ? 'success' : 'failure'} bold fontSize=\"24px\">\r\n            {formatUsd(closePrice)}\r\n          </Text>\r\n          <PositionTag betPosition={betPosition}>{formatUsd(priceDifference)}</PositionTag>\r\n        </Flex>\r\n      )}\r\n      {lockPrice && <LockPriceHistoryRow lockPrice={lockPrice} />}\r\n      <PrizePoolHistoryRow totalAmount={totalAmount} />\r\n      {children}\r\n    </RoundResultBox>\r\n  )\r\n}\r\n\r\nexport default RoundResult\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}