{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Devrim\\\\Documents\\\\FRANKswapUIforProspBlast\\\\src\\\\views\\\\Pools\\\\components\\\\PoolCard\\\\Modals\\\\NotEnoughTokensModal.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useTranslation } from 'contexts/Localization';\nimport styled from 'styled-components';\nimport { Modal, Text, Button, OpenNewIcon, Link } from '@pancakeswap/uikit';\nimport useTheme from 'hooks/useTheme';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledLink = styled(Link)`\n  width: 100%;\n`;\n_c = StyledLink;\n\nconst NotEnoughTokensModal = ({\n  tokenSymbol,\n  onDismiss\n}) => {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  const {\n    theme\n  } = useTheme();\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    title: t('%symbol% required', {\n      symbol: tokenSymbol\n    }),\n    onDismiss: onDismiss,\n    headerBackground: theme.colors.gradients.cardHeader,\n    children: [/*#__PURE__*/_jsxDEV(Text, {\n      color: \"failure\",\n      bold: true,\n      children: t('Insufficient %symbol% balance', {\n        symbol: tokenSymbol\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Text, {\n      mt: \"24px\",\n      children: t('You’ll need %symbol% to stake in this pool!', {\n        symbol: tokenSymbol\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Text, {\n      children: t('Buy some %symbol%, or make sure your %symbol% isn’t in another pool or LP.', {\n        symbol: tokenSymbol\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      mt: \"24px\",\n      as: \"a\",\n      external: true,\n      href: \"/swap\",\n      children: [t('Buy'), \" \", tokenSymbol]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StyledLink, {\n      href: \"https://yieldwatch.net\",\n      external: true,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"secondary\",\n        mt: \"8px\",\n        width: \"100%\",\n        children: [t('Locate Assets'), /*#__PURE__*/_jsxDEV(OpenNewIcon, {\n          color: \"primary\",\n          ml: \"4px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"text\",\n      onClick: onDismiss,\n      children: t('Close Window')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NotEnoughTokensModal, \"ERhGGLQ3hToD+Fb1U/AD/K4kgz8=\", false, function () {\n  return [useTranslation, useTheme];\n});\n\n_c2 = NotEnoughTokensModal;\nexport default NotEnoughTokensModal;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"StyledLink\");\n$RefreshReg$(_c2, \"NotEnoughTokensModal\");","map":{"version":3,"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/views/Pools/components/PoolCard/Modals/NotEnoughTokensModal.tsx"],"names":["React","useTranslation","styled","Modal","Text","Button","OpenNewIcon","Link","useTheme","StyledLink","NotEnoughTokensModal","tokenSymbol","onDismiss","t","theme","symbol","colors","gradients","cardHeader"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,QAA+B,uBAA/B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,KAAT,EAAgBC,IAAhB,EAAsBC,MAAtB,EAA8BC,WAA9B,EAA2CC,IAA3C,QAAuD,oBAAvD;AACA,OAAOC,QAAP,MAAqB,gBAArB;;AAOA,MAAMC,UAAU,GAAGP,MAAM,CAACK,IAAD,CAAO;AAChC;AACA,CAFA;KAAME,U;;AAIN,MAAMC,oBAAyD,GAAG,CAAC;AAAEC,EAAAA,WAAF;AAAeC,EAAAA;AAAf,CAAD,KAAgC;AAAA;;AAChG,QAAM;AAAEC,IAAAA;AAAF,MAAQZ,cAAc,EAA5B;AACA,QAAM;AAAEa,IAAAA;AAAF,MAAYN,QAAQ,EAA1B;AAEA,sBACE,QAAC,KAAD;AACE,IAAA,KAAK,EAAEK,CAAC,CAAC,mBAAD,EAAsB;AAAEE,MAAAA,MAAM,EAAEJ;AAAV,KAAtB,CADV;AAEE,IAAA,SAAS,EAAEC,SAFb;AAGE,IAAA,gBAAgB,EAAEE,KAAK,CAACE,MAAN,CAAaC,SAAb,CAAuBC,UAH3C;AAAA,4BAKE,QAAC,IAAD;AAAM,MAAA,KAAK,EAAC,SAAZ;AAAsB,MAAA,IAAI,MAA1B;AAAA,gBACGL,CAAC,CAAC,+BAAD,EAAkC;AAAEE,QAAAA,MAAM,EAAEJ;AAAV,OAAlC;AADJ;AAAA;AAAA;AAAA;AAAA,YALF,eAQE,QAAC,IAAD;AAAM,MAAA,EAAE,EAAC,MAAT;AAAA,gBAAiBE,CAAC,CAAC,6CAAD,EAAgD;AAAEE,QAAAA,MAAM,EAAEJ;AAAV,OAAhD;AAAlB;AAAA;AAAA;AAAA;AAAA,YARF,eASE,QAAC,IAAD;AAAA,gBACGE,CAAC,CAAC,4EAAD,EAA+E;AAC/EE,QAAAA,MAAM,EAAEJ;AADuE,OAA/E;AADJ;AAAA;AAAA;AAAA;AAAA,YATF,eAcE,QAAC,MAAD;AAAQ,MAAA,EAAE,EAAC,MAAX;AAAkB,MAAA,EAAE,EAAC,GAArB;AAAyB,MAAA,QAAQ,MAAjC;AAAkC,MAAA,IAAI,EAAC,OAAvC;AAAA,iBACGE,CAAC,CAAC,KAAD,CADJ,OACcF,WADd;AAAA;AAAA;AAAA;AAAA;AAAA,YAdF,eAiBE,QAAC,UAAD;AAAY,MAAA,IAAI,EAAC,wBAAjB;AAA0C,MAAA,QAAQ,MAAlD;AAAA,6BACE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,WAAhB;AAA4B,QAAA,EAAE,EAAC,KAA/B;AAAqC,QAAA,KAAK,EAAC,MAA3C;AAAA,mBACGE,CAAC,CAAC,eAAD,CADJ,eAEE,QAAC,WAAD;AAAa,UAAA,KAAK,EAAC,SAAnB;AAA6B,UAAA,EAAE,EAAC;AAAhC;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAjBF,eAuBE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,MAAhB;AAAuB,MAAA,OAAO,EAAED,SAAhC;AAAA,gBACGC,CAAC,CAAC,cAAD;AADJ;AAAA;AAAA;AAAA;AAAA,YAvBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA6BD,CAjCD;;GAAMH,oB;UACUT,c,EACIO,Q;;;MAFdE,oB;AAmCN,eAAeA,oBAAf","sourcesContent":["import React from 'react'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport styled from 'styled-components'\r\nimport { Modal, Text, Button, OpenNewIcon, Link } from '@pancakeswap/uikit'\r\nimport useTheme from 'hooks/useTheme'\r\n\r\ninterface NotEnoughTokensModalProps {\r\n  tokenSymbol: string\r\n  onDismiss?: () => void\r\n}\r\n\r\nconst StyledLink = styled(Link)`\r\n  width: 100%;\r\n`\r\n\r\nconst NotEnoughTokensModal: React.FC<NotEnoughTokensModalProps> = ({ tokenSymbol, onDismiss }) => {\r\n  const { t } = useTranslation()\r\n  const { theme } = useTheme()\r\n\r\n  return (\r\n    <Modal\r\n      title={t('%symbol% required', { symbol: tokenSymbol })}\r\n      onDismiss={onDismiss}\r\n      headerBackground={theme.colors.gradients.cardHeader}\r\n    >\r\n      <Text color=\"failure\" bold>\r\n        {t('Insufficient %symbol% balance', { symbol: tokenSymbol })}\r\n      </Text>\r\n      <Text mt=\"24px\">{t('You’ll need %symbol% to stake in this pool!', { symbol: tokenSymbol })}</Text>\r\n      <Text>\r\n        {t('Buy some %symbol%, or make sure your %symbol% isn’t in another pool or LP.', {\r\n          symbol: tokenSymbol,\r\n        })}\r\n      </Text>\r\n      <Button mt=\"24px\" as=\"a\" external href=\"/swap\">\r\n        {t('Buy')} {tokenSymbol}\r\n      </Button>\r\n      <StyledLink href=\"https://yieldwatch.net\" external>\r\n        <Button variant=\"secondary\" mt=\"8px\" width=\"100%\">\r\n          {t('Locate Assets')}\r\n          <OpenNewIcon color=\"primary\" ml=\"4px\" />\r\n        </Button>\r\n      </StyledLink>\r\n      <Button variant=\"text\" onClick={onDismiss}>\r\n        {t('Close Window')}\r\n      </Button>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default NotEnoughTokensModal\r\n"]},"metadata":{},"sourceType":"module"}