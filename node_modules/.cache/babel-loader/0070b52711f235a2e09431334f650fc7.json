{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\frkul\\\\Documents\\\\swapUI_pancake-frontend\\\\src\\\\views\\\\Pools\\\\components\\\\PoolsTable\\\\Cells\\\\NameCell.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport styled from 'styled-components';\nimport BigNumber from 'bignumber.js';\nimport { Text, useMatchBreakpoints } from '@pancakeswap/uikit';\nimport { useTranslation } from 'contexts/Localization';\nimport { useCakeVault } from 'state/pools/hooks';\nimport { BIG_ZERO } from 'utils/bigNumber';\nimport { TokenPairImage } from 'components/TokenImage';\nimport CakeVaultTokenPairImage from '../../CakeVaultCard/CakeVaultTokenPairImage';\nimport BaseCell, { CellContent } from './BaseCell';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledCell = styled(BaseCell)`\n  flex: 5;\n  flex-direction: row;\n  padding-left: 12px;\n  ${({\n  theme\n}) => theme.mediaQueries.sm} {\n    flex: 1 0 150px;\n    padding-left: 32px;\n  }\n`;\n_c = StyledCell;\nconst NameCell = ({\n  pool\n}) => {\n  _s();\n  const {\n    t\n  } = useTranslation();\n  const {\n    isXs,\n    isSm\n  } = useMatchBreakpoints();\n  const {\n    sousId,\n    stakingToken,\n    earningToken,\n    userData,\n    isFinished,\n    isAutoVault\n  } = pool;\n  const {\n    userData: {\n      userShares\n    }\n  } = useCakeVault();\n  const hasVaultShares = userShares && userShares.gt(0);\n  const stakingTokenSymbol = stakingToken.symbol;\n  const earningTokenSymbol = earningToken.symbol;\n  const stakedBalance = (userData === null || userData === void 0 ? void 0 : userData.stakedBalance) ? new BigNumber(userData.stakedBalance) : BIG_ZERO;\n  const isStaked = stakedBalance.gt(0);\n  const isManualCakePool = sousId === 0;\n  const showStakedTag = isAutoVault ? hasVaultShares : isStaked;\n  let title = `${t('Earn')} ${earningTokenSymbol}`;\n  let subtitle = `${t('Stake')} ${stakingTokenSymbol}`;\n  const showSubtitle = sousId !== 0 || sousId === 0 && !isXs && !isSm;\n  if (isAutoVault) {\n    title = t('Auto CAKE');\n    subtitle = t('Automatic restaking');\n  } else if (isManualCakePool) {\n    title = t('Manual CAKE');\n    subtitle = `${t('Earn')} CAKE ${t('Stake').toLocaleLowerCase()} CAKE`;\n  }\n  return /*#__PURE__*/_jsxDEV(StyledCell, {\n    role: \"cell\",\n    children: [isAutoVault ? /*#__PURE__*/_jsxDEV(CakeVaultTokenPairImage, {\n      mr: \"8px\",\n      width: 40,\n      height: 40\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(TokenPairImage, {\n      primaryToken: earningToken,\n      secondaryToken: stakingToken,\n      mr: \"8px\",\n      width: 40,\n      height: 40\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(CellContent, {\n      children: [showStakedTag && /*#__PURE__*/_jsxDEV(Text, {\n        fontSize: \"12px\",\n        bold: true,\n        color: isFinished ? 'failure' : 'secondary',\n        textTransform: \"uppercase\",\n        children: t('Staked')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        bold: !isXs && !isSm,\n        small: isXs || isSm,\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), showSubtitle && /*#__PURE__*/_jsxDEV(Text, {\n        fontSize: \"12px\",\n        color: \"textSubtle\",\n        children: subtitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(NameCell, \"G3PZDMSWsaH/K9ph4JUzaCZQwE8=\", false, function () {\n  return [useTranslation, useMatchBreakpoints, useCakeVault];\n});\n_c2 = NameCell;\nexport default NameCell;\nvar _c, _c2;\n$RefreshReg$(_c, \"StyledCell\");\n$RefreshReg$(_c2, \"NameCell\");","map":{"version":3,"names":["React","styled","BigNumber","Text","useMatchBreakpoints","useTranslation","useCakeVault","BIG_ZERO","TokenPairImage","CakeVaultTokenPairImage","BaseCell","CellContent","jsxDEV","_jsxDEV","StyledCell","theme","mediaQueries","sm","_c","NameCell","pool","_s","t","isXs","isSm","sousId","stakingToken","earningToken","userData","isFinished","isAutoVault","userShares","hasVaultShares","gt","stakingTokenSymbol","symbol","earningTokenSymbol","stakedBalance","isStaked","isManualCakePool","showStakedTag","title","subtitle","showSubtitle","toLocaleLowerCase","role","children","mr","width","height","fileName","_jsxFileName","lineNumber","columnNumber","primaryToken","secondaryToken","fontSize","bold","color","textTransform","small","_c2","$RefreshReg$"],"sources":["C:/Users/frkul/Documents/swapUI_pancake-frontend/src/views/Pools/components/PoolsTable/Cells/NameCell.tsx"],"sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Text, useMatchBreakpoints } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useCakeVault } from 'state/pools/hooks'\r\nimport { Pool } from 'state/types'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\nimport { TokenPairImage } from 'components/TokenImage'\r\nimport CakeVaultTokenPairImage from '../../CakeVaultCard/CakeVaultTokenPairImage'\r\nimport BaseCell, { CellContent } from './BaseCell'\r\n\r\ninterface NameCellProps {\r\n  pool: Pool\r\n}\r\n\r\nconst StyledCell = styled(BaseCell)`\r\n  flex: 5;\r\n  flex-direction: row;\r\n  padding-left: 12px;\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    flex: 1 0 150px;\r\n    padding-left: 32px;\r\n  }\r\n`\r\n\r\nconst NameCell: React.FC<NameCellProps> = ({ pool }) => {\r\n  const { t } = useTranslation()\r\n  const { isXs, isSm } = useMatchBreakpoints()\r\n  const { sousId, stakingToken, earningToken, userData, isFinished, isAutoVault } = pool\r\n  const {\r\n    userData: { userShares },\r\n  } = useCakeVault()\r\n  const hasVaultShares = userShares && userShares.gt(0)\r\n\r\n  const stakingTokenSymbol = stakingToken.symbol\r\n  const earningTokenSymbol = earningToken.symbol\r\n\r\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\r\n  const isStaked = stakedBalance.gt(0)\r\n  const isManualCakePool = sousId === 0\r\n\r\n  const showStakedTag = isAutoVault ? hasVaultShares : isStaked\r\n\r\n  let title = `${t('Earn')} ${earningTokenSymbol}`\r\n  let subtitle = `${t('Stake')} ${stakingTokenSymbol}`\r\n  const showSubtitle = sousId !== 0 || (sousId === 0 && !isXs && !isSm)\r\n\r\n  if (isAutoVault) {\r\n    title = t('Auto CAKE')\r\n    subtitle = t('Automatic restaking')\r\n  } else if (isManualCakePool) {\r\n    title = t('Manual CAKE')\r\n    subtitle = `${t('Earn')} CAKE ${t('Stake').toLocaleLowerCase()} CAKE`\r\n  }\r\n\r\n  return (\r\n    <StyledCell role=\"cell\">\r\n      {isAutoVault ? (\r\n        <CakeVaultTokenPairImage mr=\"8px\" width={40} height={40} />\r\n      ) : (\r\n        <TokenPairImage primaryToken={earningToken} secondaryToken={stakingToken} mr=\"8px\" width={40} height={40} />\r\n      )}\r\n      <CellContent>\r\n        {showStakedTag && (\r\n          <Text fontSize=\"12px\" bold color={isFinished ? 'failure' : 'secondary'} textTransform=\"uppercase\">\r\n            {t('Staked')}\r\n          </Text>\r\n        )}\r\n        <Text bold={!isXs && !isSm} small={isXs || isSm}>\r\n          {title}\r\n        </Text>\r\n        {showSubtitle && (\r\n          <Text fontSize=\"12px\" color=\"textSubtle\">\r\n            {subtitle}\r\n          </Text>\r\n        )}\r\n      </CellContent>\r\n    </StyledCell>\r\n  )\r\n}\r\n\r\nexport default NameCell\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}