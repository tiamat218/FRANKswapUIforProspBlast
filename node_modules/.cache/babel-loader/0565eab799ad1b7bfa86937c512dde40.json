{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Devrim\\\\Documents\\\\FRANKswapUIforProspBlast\\\\src\\\\views\\\\Pools\\\\components\\\\PoolCard\\\\AprRow.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Flex, TooltipText, IconButton, useModal, CalculateIcon, Skeleton, useTooltip } from '@pancakeswap/uikit';\nimport { useTranslation } from 'contexts/Localization';\nimport Balance from 'components/Balance';\nimport ApyCalculatorModal from 'components/ApyCalculatorModal';\nimport { getAprData } from 'views/Pools/helpers';\nimport { getAddress } from 'utils/addressHelpers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AprRow = ({\n  pool,\n  performanceFee = 0\n}) => {\n  _s();\n  const {\n    t\n  } = useTranslation();\n  const {\n    stakingToken,\n    earningToken,\n    isFinished,\n    apr,\n    earningTokenPrice,\n    isAutoVault\n  } = pool;\n  const tooltipContent = isAutoVault ? t('APY includes compounding, APR doesn’t. This pool’s CAKE is compounded automatically, so we show APY.') : t('This pool’s rewards aren’t compounded automatically, so we show APR');\n  const {\n    targetRef,\n    tooltip,\n    tooltipVisible\n  } = useTooltip(tooltipContent, {\n    placement: 'bottom-start'\n  });\n  const {\n    apr: earningsPercentageToDisplay,\n    roundingDecimals,\n    compoundFrequency\n  } = getAprData(pool, performanceFee);\n  const apyModalLink = stakingToken.address ? `/swap?outputCurrency=${getAddress(stakingToken.address)}` : '/swap';\n  const [onPresentApyModal] = useModal( /*#__PURE__*/_jsxDEV(ApyCalculatorModal, {\n    tokenPrice: earningTokenPrice,\n    apr: apr,\n    linkLabel: t('Get %symbol%', {\n      symbol: stakingToken.symbol\n    }),\n    linkHref: apyModalLink,\n    earningTokenSymbol: earningToken.symbol,\n    roundingDecimals: roundingDecimals,\n    compoundFrequency: compoundFrequency,\n    performanceFee: performanceFee\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    children: [tooltipVisible && tooltip, /*#__PURE__*/_jsxDEV(TooltipText, {\n      ref: targetRef,\n      children: isAutoVault ? `${t('APY')}:` : `${t('APR')}:`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), isFinished || !apr ? /*#__PURE__*/_jsxDEV(Skeleton, {\n      width: \"82px\",\n      height: \"32px\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Flex, {\n      alignItems: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(Balance, {\n        fontSize: \"16px\",\n        isDisabled: isFinished,\n        value: earningsPercentageToDisplay,\n        decimals: 2,\n        unit: \"%\",\n        bold: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        onClick: onPresentApyModal,\n        variant: \"text\",\n        scale: \"sm\",\n        children: /*#__PURE__*/_jsxDEV(CalculateIcon, {\n          color: \"textSubtle\",\n          width: \"18px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(AprRow, \"2uwgmcxU2kGCfbBwkMoDWatU7Kc=\", false, function () {\n  return [useTranslation, useTooltip, useModal];\n});\n_c = AprRow;\nexport default AprRow;\nvar _c;\n$RefreshReg$(_c, \"AprRow\");","map":{"version":3,"names":["React","Flex","TooltipText","IconButton","useModal","CalculateIcon","Skeleton","useTooltip","useTranslation","Balance","ApyCalculatorModal","getAprData","getAddress","jsxDEV","_jsxDEV","AprRow","pool","performanceFee","_s","t","stakingToken","earningToken","isFinished","apr","earningTokenPrice","isAutoVault","tooltipContent","targetRef","tooltip","tooltipVisible","placement","earningsPercentageToDisplay","roundingDecimals","compoundFrequency","apyModalLink","address","onPresentApyModal","tokenPrice","linkLabel","symbol","linkHref","earningTokenSymbol","fileName","_jsxFileName","lineNumber","columnNumber","alignItems","justifyContent","children","ref","width","height","fontSize","isDisabled","value","decimals","unit","bold","onClick","variant","scale","color","_c","$RefreshReg$"],"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/views/Pools/components/PoolCard/AprRow.tsx"],"sourcesContent":["import React from 'react'\r\nimport { Flex, TooltipText, IconButton, useModal, CalculateIcon, Skeleton, useTooltip } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport Balance from 'components/Balance'\r\nimport ApyCalculatorModal from 'components/ApyCalculatorModal'\r\nimport { Pool } from 'state/types'\r\nimport { getAprData } from 'views/Pools/helpers'\r\nimport { getAddress } from 'utils/addressHelpers'\r\n\r\ninterface AprRowProps {\r\n  pool: Pool\r\n  performanceFee?: number\r\n}\r\n\r\nconst AprRow: React.FC<AprRowProps> = ({ pool, performanceFee = 0 }) => {\r\n  const { t } = useTranslation()\r\n  const { stakingToken, earningToken, isFinished, apr, earningTokenPrice, isAutoVault } = pool\r\n\r\n  const tooltipContent = isAutoVault\r\n    ? t('APY includes compounding, APR doesn’t. This pool’s CAKE is compounded automatically, so we show APY.')\r\n    : t('This pool’s rewards aren’t compounded automatically, so we show APR')\r\n\r\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(tooltipContent, { placement: 'bottom-start' })\r\n\r\n  const { apr: earningsPercentageToDisplay, roundingDecimals, compoundFrequency } = getAprData(pool, performanceFee)\r\n\r\n  const apyModalLink = stakingToken.address ? `/swap?outputCurrency=${getAddress(stakingToken.address)}` : '/swap'\r\n\r\n  const [onPresentApyModal] = useModal(\r\n    <ApyCalculatorModal\r\n      tokenPrice={earningTokenPrice}\r\n      apr={apr}\r\n      linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\r\n      linkHref={apyModalLink}\r\n      earningTokenSymbol={earningToken.symbol}\r\n      roundingDecimals={roundingDecimals}\r\n      compoundFrequency={compoundFrequency}\r\n      performanceFee={performanceFee}\r\n    />,\r\n  )\r\n\r\n  return (\r\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\r\n      {tooltipVisible && tooltip}\r\n      <TooltipText ref={targetRef}>{isAutoVault ? `${t('APY')}:` : `${t('APR')}:`}</TooltipText>\r\n      {isFinished || !apr ? (\r\n        <Skeleton width=\"82px\" height=\"32px\" />\r\n      ) : (\r\n        <Flex alignItems=\"center\">\r\n          <Balance\r\n            fontSize=\"16px\"\r\n            isDisabled={isFinished}\r\n            value={earningsPercentageToDisplay}\r\n            decimals={2}\r\n            unit=\"%\"\r\n            bold\r\n          />\r\n          <IconButton onClick={onPresentApyModal} variant=\"text\" scale=\"sm\">\r\n            <CalculateIcon color=\"textSubtle\" width=\"18px\" />\r\n          </IconButton>\r\n        </Flex>\r\n      )}\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default AprRow\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}