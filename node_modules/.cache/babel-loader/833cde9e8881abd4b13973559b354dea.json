{"ast":null,"code":"'use strict';\n\nconst React = require('react');\nconst ReactIs = require('react-is');\n// @ts-ignore remove when typed\nconst svg = require('property-information/svg');\n// @ts-ignore remove when typed\nconst find = require('property-information/find');\n// @ts-ignore remove when typed\nconst hastToReact = require('property-information/hast-to-react.json');\n// @ts-ignore remove when typed\nconst spaces = require('space-separated-tokens');\n// @ts-ignore remove when typed\nconst commas = require('comma-separated-tokens');\nconst style = require('style-to-object');\nexports.hastToReact = toReact;\nexports.hastChildrenToReact = childrenToReact;\n\n/**\n * @typedef {JSX.IntrinsicElements} IntrinsicElements\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('unist').Position} Position\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Text} Text\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').DocType} Doctype\n */\n\n/**\n * @typedef {Object} Info\n * @property {string?} space\n * @property {string?} attribute\n * @property {string?} property\n * @property {boolean} boolean\n * @property {boolean} booleanish\n * @property {boolean} overloadedBoolean\n * @property {boolean} number\n * @property {boolean} commaSeparated\n * @property {boolean} spaceSeparated\n * @property {boolean} commaOrSpaceSeparated\n * @property {boolean} mustUseProperty\n * @property {boolean} defined\n *\n * @typedef {Object} Schema\n * @property {Object.<string, Info>} property\n * @property {Object.<string, string>} normal\n * @property {string?} space\n *\n * @typedef {Object} Raw\n * @property {'raw'} type\n * @property {string} value\n *\n * @typedef {Object} Context\n * @property {TransformOptions} options\n * @property {Schema} schema\n * @property {number} listDepth\n *\n * @callback TransformLink\n * @param {string} href\n * @param {Array.<Comment|Element|Text>} children\n * @param {string?} title\n * @returns {string}\n *\n * @callback TransformImage\n * @param {string} src\n * @param {string} alt\n * @param {string?} title\n * @returns {string}\n *\n * @callback TransformLinkTarget\n * @param {string} href\n * @param {Array.<Comment|Element|Text>} children\n * @param {string?} title\n * @returns {string}\n *\n * @typedef {keyof IntrinsicElements} ReactMarkdownNames\n *\n * @typedef {{ [key: string]: unknown, className?: string }} ReactBaseProps\n *\n * To do: is `data-sourcepos` typeable?\n *\n * @typedef {Object} ReactMarkdownProps\n * @property {Element} node\n * @property {string} key\n * @property {ReactNode[]} children\n * @property {Position?} [sourcePosition] Passed when `options.rawSourcePos` is given\n * @property {number} [index] Passed when `options.includeElementIndex` is given\n * @property {number} [siblingCount] Passed when `options.includeElementIndex` is given\n *\n * @callback NormalComponent\n * @param {ReactBaseProps & ReactMarkdownProps} props\n * @returns {ReactNode}\n *\n * @callback CodeComponent\n * @param {ReactBaseProps & ReactMarkdownProps & {inline?: boolean}} props\n * @returns {ReactNode}\n *\n * @callback HeadingComponent\n * @param {ReactBaseProps & ReactMarkdownProps & {level: number}} props\n * @returns {ReactNode}\n *\n * @callback LiComponent\n * @param {ReactBaseProps & ReactMarkdownProps & {checked: boolean|null, index: number, ordered: boolean}} props\n * @returns {ReactNode}\n *\n * @callback OrderedListComponent\n * @param {ReactBaseProps & ReactMarkdownProps & {depth: number, ordered: true}} props\n * @returns {ReactNode}\n *\n * @callback TableCellComponent\n * @param {ReactBaseProps & ReactMarkdownProps & {style?: Object.<string, unknown>, isHeader: boolean}} props\n * @returns {ReactNode}\n *\n * @callback TableRowComponent\n * @param {ReactBaseProps & ReactMarkdownProps & {isHeader: boolean}} props\n * @returns {ReactNode}\n *\n * @callback UnorderedListComponent\n * @param {ReactBaseProps & ReactMarkdownProps & {depth: number, ordered: false}} props\n * @returns {ReactNode}\n *\n * @typedef {Object} SpecialComponents\n * @property {CodeComponent|ReactMarkdownNames} code\n * @property {HeadingComponent|ReactMarkdownNames} h1\n * @property {HeadingComponent|ReactMarkdownNames} h2\n * @property {HeadingComponent|ReactMarkdownNames} h3\n * @property {HeadingComponent|ReactMarkdownNames} h4\n * @property {HeadingComponent|ReactMarkdownNames} h5\n * @property {HeadingComponent|ReactMarkdownNames} h6\n * @property {LiComponent|ReactMarkdownNames} li\n * @property {OrderedListComponent|ReactMarkdownNames} ol\n * @property {TableCellComponent|ReactMarkdownNames} td\n * @property {TableCellComponent|ReactMarkdownNames} th\n * @property {TableRowComponent|ReactMarkdownNames} tr\n * @property {UnorderedListComponent|ReactMarkdownNames} ul\n *\n * @typedef {Record<Exclude<ReactMarkdownNames, keyof SpecialComponents>, NormalComponent|ReactMarkdownNames>} NormalComponents\n * @typedef {Partial<NormalComponents & SpecialComponents>} Components\n */\n\n/**\n * @typedef {Object} TransformOptions\n * @property {boolean} [sourcePos=false]\n * @property {boolean} [rawSourcePos=false]\n * @property {boolean} [skipHtml=false]\n * @property {boolean} [includeElementIndex=false]\n * @property {false|TransformLink} [transformLinkUri]\n * @property {TransformImage} [transformImageUri]\n * @property {string|TransformLinkTarget} [linkTarget]\n * @property {Components} [components]\n */\n\nconst own = {}.hasOwnProperty;\n\n// The table-related elements that must not contain whitespace text according\n// to React.\nconst tableElements = new Set(['table', 'thead', 'tbody', 'tfoot', 'tr']);\n\n/**\n * @param {Context} context\n * @param {Element|Root} node\n */\nfunction childrenToReact(context, node) {\n  /** @type {Array.<ReactNode>} */\n  const children = [];\n  let childIndex = -1;\n  /** @type {Comment|Doctype|Element|Raw|Text} */\n  let child;\n  while (++childIndex < node.children.length) {\n    child = node.children[childIndex];\n    if (child.type === 'element') {\n      children.push(toReact(context, child, childIndex, node));\n    } else if (child.type === 'text') {\n      // React does not permit whitespace text elements as children of table:\n      // cf. https://github.com/remarkjs/react-markdown/issues/576\n      if (node.type !== 'element' || !tableElements.has(node.tagName) || child.value !== '\\n') {\n        children.push(child.value);\n      }\n    }\n    // @ts-ignore `raw` nodes are non-standard\n    else if (child.type === 'raw' && !context.options.skipHtml) {\n      // Default behavior is to show (encoded) HTML.\n      // @ts-ignore `raw` nodes are non-standard\n      children.push(child.value);\n    }\n  }\n  return children;\n}\n\n/**\n * @param {Context} context\n * @param {Element} node\n * @param {number} index\n * @param {Element|Root} parent\n */\nfunction toReact(context, node, index, parent) {\n  const options = context.options;\n  const parentSchema = context.schema;\n  /** @type {ReactMarkdownNames} */\n  // @ts-ignore assume a known HTML/SVG element.\n  const name = node.tagName;\n  /** @type {Object.<string, unknown>} */\n  const properties = {};\n  let schema = parentSchema;\n  /** @type {string} */\n  let property;\n  if (parentSchema.space === 'html' && name === 'svg') {\n    schema = svg;\n    context.schema = schema;\n  }\n  for (property in node.properties) {\n    /* istanbul ignore else - prototype polution. */\n    if (own.call(node.properties, property)) {\n      addProperty(properties, property, node.properties[property], context);\n    }\n  }\n  if (name === 'ol' || name === 'ul') {\n    context.listDepth++;\n  }\n  const children = childrenToReact(context, node);\n  if (name === 'ol' || name === 'ul') {\n    context.listDepth--;\n  }\n\n  // Restore parent schema.\n  context.schema = parentSchema;\n\n  // Nodes created by plugins do not have positional info, in which case we use\n  // an object that matches the positon interface.\n  const position = node.position || {\n    start: {\n      line: null,\n      column: null,\n      offset: null\n    },\n    end: {\n      line: null,\n      column: null,\n      offset: null\n    }\n  };\n  /** @type {NormalComponent|SpecialComponents[keyof SpecialComponents]|ReactMarkdownNames} */\n  const component = options.components && own.call(options.components, name) ? options.components[name] : name;\n  const basic = typeof component === 'string' || component === React.Fragment;\n  if (!ReactIs.isValidElementType(component)) {\n    throw new TypeError(\"Component for name `\".concat(name, \"` not defined or is not renderable\"));\n  }\n  properties.key = [name, position.start.line, position.start.column, index].join('-');\n  if (name === 'a' && options.linkTarget) {\n    properties.target = typeof options.linkTarget === 'function' ?\n    // @ts-ignore assume `href` is a string\n    options.linkTarget(properties.href, node.children, properties.title) : options.linkTarget;\n  }\n  if (name === 'a' && options.transformLinkUri) {\n    properties.href = options.transformLinkUri(\n    // @ts-ignore assume `href` is a string\n    properties.href, node.children, properties.title);\n  }\n  if (!basic && name === 'code' && parent.tagName !== 'pre') {\n    properties.inline = true;\n  }\n  if (!basic && (name === 'h1' || name === 'h2' || name === 'h3' || name === 'h4' || name === 'h5' || name === 'h6')) {\n    properties.level = parseInt(name.charAt(1), 10);\n  }\n  if (name === 'img' && options.transformImageUri) {\n    properties.src = options.transformImageUri(\n    // @ts-ignore assume `src` is a string\n    properties.src, properties.alt, properties.title);\n  }\n  if (!basic && name === 'li') {\n    const input = getInputElement(node);\n    properties.checked = input ? Boolean(input.properties.checked) : null;\n    properties.index = getElementsBeforeCount(parent, node);\n    properties.ordered = parent.tagName === 'ol';\n  }\n  if (!basic && (name === 'ol' || name === 'ul')) {\n    properties.ordered = name === 'ol';\n    properties.depth = context.listDepth;\n  }\n  if (name === 'td' || name === 'th') {\n    if (properties.align) {\n      if (!properties.style) properties.style = {};\n      // @ts-ignore assume `style` is an object\n      properties.style.textAlign = properties.align;\n      delete properties.align;\n    }\n    if (!basic) {\n      properties.isHeader = name === 'th';\n    }\n  }\n  if (!basic && name === 'tr') {\n    properties.isHeader = Boolean(parent.tagName === 'thead');\n  }\n\n  // If `sourcePos` is given, pass source information (line/column info from markdown source).\n  if (options.sourcePos) {\n    properties['data-sourcepos'] = flattenPosition(position);\n  }\n  if (!basic && options.rawSourcePos) {\n    properties.sourcePosition = node.position;\n  }\n\n  // If `includeElementIndex` is given, pass node index info to components.\n  if (!basic && options.includeElementIndex) {\n    properties.index = getElementsBeforeCount(parent, node);\n    properties.siblingCount = getElementsBeforeCount(parent);\n  }\n  if (!basic) {\n    properties.node = node;\n  }\n\n  // Ensure no React warnings are emitted for void elements w/ children.\n  return children.length > 0 ? React.createElement(component, properties, children) : React.createElement(component, properties);\n}\n\n/**\n * @param {Element|Root} node\n * @returns {Element?}\n */\nfunction getInputElement(node) {\n  let index = -1;\n  while (++index < node.children.length) {\n    const child = node.children[index];\n    if (child.type === 'element' && child.tagName === 'input') {\n      return child;\n    }\n  }\n  return null;\n}\n\n/**\n * @param {Element|Root} parent\n * @param {Element} [node]\n * @returns {number}\n */\nfunction getElementsBeforeCount(parent, node) {\n  let index = -1;\n  let count = 0;\n  while (++index < parent.children.length) {\n    if (parent.children[index] === node) break;\n    if (parent.children[index].type === 'element') count++;\n  }\n  return count;\n}\n\n/**\n * @param {Object.<string, unknown>} props\n * @param {string} prop\n * @param {unknown} value\n * @param {Context} ctx\n */\nfunction addProperty(props, prop, value, ctx) {\n  /** @type {Info} */\n  const info = find(ctx.schema, prop);\n  let result = value;\n\n  // Ignore nullish and `NaN` values.\n  // eslint-disable-next-line no-self-compare\n  if (result === null || result === undefined || result !== result) {\n    return;\n  }\n\n  // Accept `array`.\n  // Most props are space-separated.\n  if (result && typeof result === 'object' && 'length' in result) {\n    // type-coverage:ignore-next-line remove when typed.\n    result = (info.commaSeparated ? commas : spaces).stringify(result);\n  }\n  if (info.property === 'style' && typeof result === 'string') {\n    result = parseStyle(result);\n  }\n  if (info.space) {\n    props[own.call(hastToReact, info.property) ? hastToReact[info.property] : info.property] = result;\n  } else {\n    props[info.attribute] = result;\n  }\n}\n\n/**\n * @param {string} value\n * @returns {Object.<string, string>}\n */\nfunction parseStyle(value) {\n  /** @type {Object.<string, string>} */\n  const result = {};\n  try {\n    style(value, iterator);\n  } catch ( /** @type {Error} */_) {\n    // Silent.\n  }\n  return result;\n\n  /**\n   * @param {string} name\n   * @param {string} v\n   */\n  function iterator(name, v) {\n    const k = name.slice(0, 4) === '-ms-' ? \"ms-\".concat(name.slice(4)) : name;\n    result[k.replace(/-([a-z])/g, styleReplacer)] = v;\n  }\n}\n\n/**\n * @param {unknown} _\n * @param {string} $1\n */\nfunction styleReplacer(_, $1) {\n  return $1.toUpperCase();\n}\n\n/**\n * @param {Position} pos\n * @returns {string}\n */\nfunction flattenPosition(pos) {\n  return [pos.start.line, ':', pos.start.column, '-', pos.end.line, ':', pos.end.column].map(d => String(d)).join('');\n}","map":{"version":3,"names":["React","require","ReactIs","svg","find","hastToReact","spaces","commas","style","exports","toReact","hastChildrenToReact","childrenToReact","own","hasOwnProperty","tableElements","Set","context","node","children","childIndex","child","length","type","push","has","tagName","value","options","skipHtml","index","parent","parentSchema","schema","name","properties","property","space","call","addProperty","listDepth","position","start","line","column","offset","end","component","components","basic","Fragment","isValidElementType","TypeError","concat","key","join","linkTarget","target","href","title","transformLinkUri","inline","level","parseInt","charAt","transformImageUri","src","alt","input","getInputElement","checked","Boolean","getElementsBeforeCount","ordered","depth","align","textAlign","isHeader","sourcePos","flattenPosition","rawSourcePos","sourcePosition","includeElementIndex","siblingCount","createElement","count","props","prop","ctx","info","result","undefined","commaSeparated","stringify","parseStyle","attribute","iterator","_","v","k","slice","replace","styleReplacer","$1","toUpperCase","pos","map","d","String"],"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/node_modules/react-markdown/src/ast-to-react.js"],"sourcesContent":["'use strict'\n\nconst React = require('react')\nconst ReactIs = require('react-is')\n// @ts-ignore remove when typed\nconst svg = require('property-information/svg')\n// @ts-ignore remove when typed\nconst find = require('property-information/find')\n// @ts-ignore remove when typed\nconst hastToReact = require('property-information/hast-to-react.json')\n// @ts-ignore remove when typed\nconst spaces = require('space-separated-tokens')\n// @ts-ignore remove when typed\nconst commas = require('comma-separated-tokens')\nconst style = require('style-to-object')\n\nexports.hastToReact = toReact\nexports.hastChildrenToReact = childrenToReact\n\n/**\n * @typedef {JSX.IntrinsicElements} IntrinsicElements\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('unist').Position} Position\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Text} Text\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').DocType} Doctype\n */\n\n/**\n * @typedef {Object} Info\n * @property {string?} space\n * @property {string?} attribute\n * @property {string?} property\n * @property {boolean} boolean\n * @property {boolean} booleanish\n * @property {boolean} overloadedBoolean\n * @property {boolean} number\n * @property {boolean} commaSeparated\n * @property {boolean} spaceSeparated\n * @property {boolean} commaOrSpaceSeparated\n * @property {boolean} mustUseProperty\n * @property {boolean} defined\n *\n * @typedef {Object} Schema\n * @property {Object.<string, Info>} property\n * @property {Object.<string, string>} normal\n * @property {string?} space\n *\n * @typedef {Object} Raw\n * @property {'raw'} type\n * @property {string} value\n *\n * @typedef {Object} Context\n * @property {TransformOptions} options\n * @property {Schema} schema\n * @property {number} listDepth\n *\n * @callback TransformLink\n * @param {string} href\n * @param {Array.<Comment|Element|Text>} children\n * @param {string?} title\n * @returns {string}\n *\n * @callback TransformImage\n * @param {string} src\n * @param {string} alt\n * @param {string?} title\n * @returns {string}\n *\n * @callback TransformLinkTarget\n * @param {string} href\n * @param {Array.<Comment|Element|Text>} children\n * @param {string?} title\n * @returns {string}\n *\n * @typedef {keyof IntrinsicElements} ReactMarkdownNames\n *\n * @typedef {{ [key: string]: unknown, className?: string }} ReactBaseProps\n *\n * To do: is `data-sourcepos` typeable?\n *\n * @typedef {Object} ReactMarkdownProps\n * @property {Element} node\n * @property {string} key\n * @property {ReactNode[]} children\n * @property {Position?} [sourcePosition] Passed when `options.rawSourcePos` is given\n * @property {number} [index] Passed when `options.includeElementIndex` is given\n * @property {number} [siblingCount] Passed when `options.includeElementIndex` is given\n *\n * @callback NormalComponent\n * @param {ReactBaseProps & ReactMarkdownProps} props\n * @returns {ReactNode}\n *\n * @callback CodeComponent\n * @param {ReactBaseProps & ReactMarkdownProps & {inline?: boolean}} props\n * @returns {ReactNode}\n *\n * @callback HeadingComponent\n * @param {ReactBaseProps & ReactMarkdownProps & {level: number}} props\n * @returns {ReactNode}\n *\n * @callback LiComponent\n * @param {ReactBaseProps & ReactMarkdownProps & {checked: boolean|null, index: number, ordered: boolean}} props\n * @returns {ReactNode}\n *\n * @callback OrderedListComponent\n * @param {ReactBaseProps & ReactMarkdownProps & {depth: number, ordered: true}} props\n * @returns {ReactNode}\n *\n * @callback TableCellComponent\n * @param {ReactBaseProps & ReactMarkdownProps & {style?: Object.<string, unknown>, isHeader: boolean}} props\n * @returns {ReactNode}\n *\n * @callback TableRowComponent\n * @param {ReactBaseProps & ReactMarkdownProps & {isHeader: boolean}} props\n * @returns {ReactNode}\n *\n * @callback UnorderedListComponent\n * @param {ReactBaseProps & ReactMarkdownProps & {depth: number, ordered: false}} props\n * @returns {ReactNode}\n *\n * @typedef {Object} SpecialComponents\n * @property {CodeComponent|ReactMarkdownNames} code\n * @property {HeadingComponent|ReactMarkdownNames} h1\n * @property {HeadingComponent|ReactMarkdownNames} h2\n * @property {HeadingComponent|ReactMarkdownNames} h3\n * @property {HeadingComponent|ReactMarkdownNames} h4\n * @property {HeadingComponent|ReactMarkdownNames} h5\n * @property {HeadingComponent|ReactMarkdownNames} h6\n * @property {LiComponent|ReactMarkdownNames} li\n * @property {OrderedListComponent|ReactMarkdownNames} ol\n * @property {TableCellComponent|ReactMarkdownNames} td\n * @property {TableCellComponent|ReactMarkdownNames} th\n * @property {TableRowComponent|ReactMarkdownNames} tr\n * @property {UnorderedListComponent|ReactMarkdownNames} ul\n *\n * @typedef {Record<Exclude<ReactMarkdownNames, keyof SpecialComponents>, NormalComponent|ReactMarkdownNames>} NormalComponents\n * @typedef {Partial<NormalComponents & SpecialComponents>} Components\n */\n\n/**\n * @typedef {Object} TransformOptions\n * @property {boolean} [sourcePos=false]\n * @property {boolean} [rawSourcePos=false]\n * @property {boolean} [skipHtml=false]\n * @property {boolean} [includeElementIndex=false]\n * @property {false|TransformLink} [transformLinkUri]\n * @property {TransformImage} [transformImageUri]\n * @property {string|TransformLinkTarget} [linkTarget]\n * @property {Components} [components]\n */\n\nconst own = {}.hasOwnProperty\n\n// The table-related elements that must not contain whitespace text according\n// to React.\nconst tableElements = new Set(['table', 'thead', 'tbody', 'tfoot', 'tr'])\n\n/**\n * @param {Context} context\n * @param {Element|Root} node\n */\nfunction childrenToReact(context, node) {\n  /** @type {Array.<ReactNode>} */\n  const children = []\n  let childIndex = -1\n  /** @type {Comment|Doctype|Element|Raw|Text} */\n  let child\n\n  while (++childIndex < node.children.length) {\n    child = node.children[childIndex]\n\n    if (child.type === 'element') {\n      children.push(toReact(context, child, childIndex, node))\n    } else if (child.type === 'text') {\n      // React does not permit whitespace text elements as children of table:\n      // cf. https://github.com/remarkjs/react-markdown/issues/576\n      if (\n        node.type !== 'element' ||\n        !tableElements.has(node.tagName) ||\n        child.value !== '\\n'\n      ) {\n        children.push(child.value)\n      }\n    }\n    // @ts-ignore `raw` nodes are non-standard\n    else if (child.type === 'raw' && !context.options.skipHtml) {\n      // Default behavior is to show (encoded) HTML.\n      // @ts-ignore `raw` nodes are non-standard\n      children.push(child.value)\n    }\n  }\n\n  return children\n}\n\n/**\n * @param {Context} context\n * @param {Element} node\n * @param {number} index\n * @param {Element|Root} parent\n */\nfunction toReact(context, node, index, parent) {\n  const options = context.options\n  const parentSchema = context.schema\n  /** @type {ReactMarkdownNames} */\n  // @ts-ignore assume a known HTML/SVG element.\n  const name = node.tagName\n  /** @type {Object.<string, unknown>} */\n  const properties = {}\n  let schema = parentSchema\n  /** @type {string} */\n  let property\n\n  if (parentSchema.space === 'html' && name === 'svg') {\n    schema = svg\n    context.schema = schema\n  }\n\n  for (property in node.properties) {\n    /* istanbul ignore else - prototype polution. */\n    if (own.call(node.properties, property)) {\n      addProperty(properties, property, node.properties[property], context)\n    }\n  }\n\n  if (name === 'ol' || name === 'ul') {\n    context.listDepth++\n  }\n\n  const children = childrenToReact(context, node)\n\n  if (name === 'ol' || name === 'ul') {\n    context.listDepth--\n  }\n\n  // Restore parent schema.\n  context.schema = parentSchema\n\n  // Nodes created by plugins do not have positional info, in which case we use\n  // an object that matches the positon interface.\n  const position = node.position || {\n    start: {line: null, column: null, offset: null},\n    end: {line: null, column: null, offset: null}\n  }\n  /** @type {NormalComponent|SpecialComponents[keyof SpecialComponents]|ReactMarkdownNames} */\n  const component =\n    options.components && own.call(options.components, name)\n      ? options.components[name]\n      : name\n  const basic = typeof component === 'string' || component === React.Fragment\n\n  if (!ReactIs.isValidElementType(component)) {\n    throw new TypeError(\n      `Component for name \\`${name}\\` not defined or is not renderable`\n    )\n  }\n\n  properties.key = [\n    name,\n    position.start.line,\n    position.start.column,\n    index\n  ].join('-')\n\n  if (name === 'a' && options.linkTarget) {\n    properties.target =\n      typeof options.linkTarget === 'function'\n        ? // @ts-ignore assume `href` is a string\n          options.linkTarget(properties.href, node.children, properties.title)\n        : options.linkTarget\n  }\n\n  if (name === 'a' && options.transformLinkUri) {\n    properties.href = options.transformLinkUri(\n      // @ts-ignore assume `href` is a string\n      properties.href,\n      node.children,\n      properties.title\n    )\n  }\n\n  if (!basic && name === 'code' && parent.tagName !== 'pre') {\n    properties.inline = true\n  }\n\n  if (\n    !basic &&\n    (name === 'h1' ||\n      name === 'h2' ||\n      name === 'h3' ||\n      name === 'h4' ||\n      name === 'h5' ||\n      name === 'h6')\n  ) {\n    properties.level = parseInt(name.charAt(1), 10)\n  }\n\n  if (name === 'img' && options.transformImageUri) {\n    properties.src = options.transformImageUri(\n      // @ts-ignore assume `src` is a string\n      properties.src,\n      properties.alt,\n      properties.title\n    )\n  }\n\n  if (!basic && name === 'li') {\n    const input = getInputElement(node)\n    properties.checked = input ? Boolean(input.properties.checked) : null\n    properties.index = getElementsBeforeCount(parent, node)\n    properties.ordered = parent.tagName === 'ol'\n  }\n\n  if (!basic && (name === 'ol' || name === 'ul')) {\n    properties.ordered = name === 'ol'\n    properties.depth = context.listDepth\n  }\n\n  if (name === 'td' || name === 'th') {\n    if (properties.align) {\n      if (!properties.style) properties.style = {}\n      // @ts-ignore assume `style` is an object\n      properties.style.textAlign = properties.align\n      delete properties.align\n    }\n\n    if (!basic) {\n      properties.isHeader = name === 'th'\n    }\n  }\n\n  if (!basic && name === 'tr') {\n    properties.isHeader = Boolean(parent.tagName === 'thead')\n  }\n\n  // If `sourcePos` is given, pass source information (line/column info from markdown source).\n  if (options.sourcePos) {\n    properties['data-sourcepos'] = flattenPosition(position)\n  }\n\n  if (!basic && options.rawSourcePos) {\n    properties.sourcePosition = node.position\n  }\n\n  // If `includeElementIndex` is given, pass node index info to components.\n  if (!basic && options.includeElementIndex) {\n    properties.index = getElementsBeforeCount(parent, node)\n    properties.siblingCount = getElementsBeforeCount(parent)\n  }\n\n  if (!basic) {\n    properties.node = node\n  }\n\n  // Ensure no React warnings are emitted for void elements w/ children.\n  return children.length > 0\n    ? React.createElement(component, properties, children)\n    : React.createElement(component, properties)\n}\n\n/**\n * @param {Element|Root} node\n * @returns {Element?}\n */\nfunction getInputElement(node) {\n  let index = -1\n\n  while (++index < node.children.length) {\n    const child = node.children[index]\n\n    if (child.type === 'element' && child.tagName === 'input') {\n      return child\n    }\n  }\n\n  return null\n}\n\n/**\n * @param {Element|Root} parent\n * @param {Element} [node]\n * @returns {number}\n */\nfunction getElementsBeforeCount(parent, node) {\n  let index = -1\n  let count = 0\n\n  while (++index < parent.children.length) {\n    if (parent.children[index] === node) break\n    if (parent.children[index].type === 'element') count++\n  }\n\n  return count\n}\n\n/**\n * @param {Object.<string, unknown>} props\n * @param {string} prop\n * @param {unknown} value\n * @param {Context} ctx\n */\nfunction addProperty(props, prop, value, ctx) {\n  /** @type {Info} */\n  const info = find(ctx.schema, prop)\n  let result = value\n\n  // Ignore nullish and `NaN` values.\n  // eslint-disable-next-line no-self-compare\n  if (result === null || result === undefined || result !== result) {\n    return\n  }\n\n  // Accept `array`.\n  // Most props are space-separated.\n  if (result && typeof result === 'object' && 'length' in result) {\n    // type-coverage:ignore-next-line remove when typed.\n    result = (info.commaSeparated ? commas : spaces).stringify(result)\n  }\n\n  if (info.property === 'style' && typeof result === 'string') {\n    result = parseStyle(result)\n  }\n\n  if (info.space) {\n    props[\n      own.call(hastToReact, info.property)\n        ? hastToReact[info.property]\n        : info.property\n    ] = result\n  } else {\n    props[info.attribute] = result\n  }\n}\n\n/**\n * @param {string} value\n * @returns {Object.<string, string>}\n */\nfunction parseStyle(value) {\n  /** @type {Object.<string, string>} */\n  const result = {}\n\n  try {\n    style(value, iterator)\n  } catch (/** @type {Error} */ _) {\n    // Silent.\n  }\n\n  return result\n\n  /**\n   * @param {string} name\n   * @param {string} v\n   */\n  function iterator(name, v) {\n    const k = name.slice(0, 4) === '-ms-' ? `ms-${name.slice(4)}` : name\n    result[k.replace(/-([a-z])/g, styleReplacer)] = v\n  }\n}\n\n/**\n * @param {unknown} _\n * @param {string} $1\n */\nfunction styleReplacer(_, $1) {\n  return $1.toUpperCase()\n}\n\n/**\n * @param {Position} pos\n * @returns {string}\n */\nfunction flattenPosition(pos) {\n  return [\n    pos.start.line,\n    ':',\n    pos.start.column,\n    '-',\n    pos.end.line,\n    ':',\n    pos.end.column\n  ]\n    .map((d) => String(d))\n    .join('')\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}