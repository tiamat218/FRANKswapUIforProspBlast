{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Devrim\\\\Documents\\\\FRANKswapUIforProspBlast\\\\src\\\\components\\\\Select\\\\Select.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport styled, { css } from 'styled-components';\nimport { ArrowDropDownIcon, Text } from '@pancakeswap/uikit';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DropDownHeader = styled.div`\n  width: 100%;\n  height: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0px 16px;\n  box-shadow: ${({\n  theme\n}) => theme.shadows.inset};\n  border: 1px solid ${({\n  theme\n}) => theme.colors.inputSecondary};\n  border-radius: 16px;\n  background: ${({\n  theme\n}) => theme.colors.input};\n  transition: border-radius 0.15s;\n`;\n_c = DropDownHeader;\nconst DropDownListContainer = styled.div`\n  min-width: 136px;\n  height: 0;\n  position: absolute;\n  overflow: hidden;\n  background: ${({\n  theme\n}) => theme.colors.input};\n  z-index: ${({\n  theme\n}) => theme.zIndices.dropdown};\n  transition: transform 0.15s, opacity 0.15s;\n  transform: scaleY(0);\n  transform-origin: top;\n  opacity: 0;\n  width: 100%;\n\n  ${({\n  theme\n}) => theme.mediaQueries.sm} {\n    min-width: 168px;\n  }\n`;\n_c2 = DropDownListContainer;\nconst DropDownContainer = styled.div`\n  cursor: pointer;\n  width: ${({\n  width\n}) => width}px;\n  position: relative;\n  background: ${({\n  theme\n}) => theme.colors.input};\n  border-radius: 16px;\n  height: 40px;\n  min-width: 136px;\n  user-select: none;\n\n  ${({\n  theme\n}) => theme.mediaQueries.sm} {\n    min-width: 168px;\n  }\n\n  ${props => props.isOpen && css`\n      ${DropDownHeader} {\n        border-bottom: 1px solid ${({\n  theme\n}) => theme.colors.inputSecondary};\n        box-shadow: ${({\n  theme\n}) => theme.tooltip.boxShadow};\n        border-radius: 16px 16px 0 0;\n      }\n\n      ${DropDownListContainer} {\n        height: auto;\n        transform: scaleY(1);\n        opacity: 1;\n        border: 1px solid ${({\n  theme\n}) => theme.colors.inputSecondary};\n        border-top-width: 0;\n        border-radius: 0 0 16px 16px;\n        box-shadow: ${({\n  theme\n}) => theme.tooltip.boxShadow};\n      }\n    `}\n\n  svg {\n    position: absolute;\n    right: 16px;\n    top: 50%;\n    transform: translateY(-50%);\n  }\n`;\n_c3 = DropDownContainer;\nconst DropDownList = styled.ul`\n  padding: 0;\n  margin: 0;\n  box-sizing: border-box;\n  z-index: ${({\n  theme\n}) => theme.zIndices.dropdown};\n`;\n_c4 = DropDownList;\nconst ListItem = styled.li`\n  list-style: none;\n  padding: 8px 16px;\n  &:hover {\n    background: ${({\n  theme\n}) => theme.colors.inputSecondary};\n  }\n`;\n_c5 = ListItem;\n\nconst Select = ({\n  options,\n  onChange\n}) => {\n  _s();\n\n  const containerRef = useRef(null);\n  const dropdownRef = useRef(null);\n  const [isOpen, setIsOpen] = useState(false);\n  const [selectedOptionIndex, setSelectedOptionIndex] = useState(0);\n  const [containerSize, setContainerSize] = useState({\n    width: 0,\n    height: 0\n  });\n\n  const toggling = event => {\n    setIsOpen(!isOpen);\n    event.stopPropagation();\n  };\n\n  const onOptionClicked = selectedIndex => () => {\n    setSelectedOptionIndex(selectedIndex);\n    setIsOpen(false);\n\n    if (onChange) {\n      onChange(options[selectedIndex]);\n    }\n  };\n\n  useEffect(() => {\n    setContainerSize({\n      width: dropdownRef.current.offsetWidth,\n      // Consider border\n      height: dropdownRef.current.offsetHeight\n    });\n\n    const handleClickOutside = () => {\n      setIsOpen(false);\n    };\n\n    document.addEventListener('click', handleClickOutside);\n    return () => {\n      document.removeEventListener('click', handleClickOutside);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(DropDownContainer, {\n    isOpen: isOpen,\n    ref: containerRef,\n    ...containerSize,\n    children: [containerSize.width !== 0 && /*#__PURE__*/_jsxDEV(DropDownHeader, {\n      onClick: toggling,\n      children: /*#__PURE__*/_jsxDEV(Text, {\n        children: options[selectedOptionIndex].label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ArrowDropDownIcon, {\n      color: \"text\",\n      onClick: toggling\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DropDownListContainer, {\n      children: /*#__PURE__*/_jsxDEV(DropDownList, {\n        ref: dropdownRef,\n        children: options.map((option, index) => index !== selectedOptionIndex ? /*#__PURE__*/_jsxDEV(ListItem, {\n          onClick: onOptionClicked(index),\n          children: /*#__PURE__*/_jsxDEV(Text, {\n            children: option.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 17\n          }, this)\n        }, option.label, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 15\n        }, this) : null)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Select, \"QHp792KvD40UGnaQJdmGF0X2i2c=\");\n\n_c6 = Select;\nexport default Select;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"DropDownHeader\");\n$RefreshReg$(_c2, \"DropDownListContainer\");\n$RefreshReg$(_c3, \"DropDownContainer\");\n$RefreshReg$(_c4, \"DropDownList\");\n$RefreshReg$(_c5, \"ListItem\");\n$RefreshReg$(_c6, \"Select\");","map":{"version":3,"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/components/Select/Select.tsx"],"names":["React","useState","useRef","useEffect","styled","css","ArrowDropDownIcon","Text","DropDownHeader","div","theme","shadows","inset","colors","inputSecondary","input","DropDownListContainer","zIndices","dropdown","mediaQueries","sm","DropDownContainer","width","props","isOpen","tooltip","boxShadow","DropDownList","ul","ListItem","li","Select","options","onChange","containerRef","dropdownRef","setIsOpen","selectedOptionIndex","setSelectedOptionIndex","containerSize","setContainerSize","height","toggling","event","stopPropagation","onOptionClicked","selectedIndex","current","offsetWidth","offsetHeight","handleClickOutside","document","addEventListener","removeEventListener","label","map","option","index"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from 'react'\r\nimport styled, { css } from 'styled-components'\r\nimport { ArrowDropDownIcon, Text } from '@pancakeswap/uikit'\r\n\r\nconst DropDownHeader = styled.div`\r\n  width: 100%;\r\n  height: 40px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 0px 16px;\r\n  box-shadow: ${({ theme }) => theme.shadows.inset};\r\n  border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\r\n  border-radius: 16px;\r\n  background: ${({ theme }) => theme.colors.input};\r\n  transition: border-radius 0.15s;\r\n`\r\n\r\nconst DropDownListContainer = styled.div`\r\n  min-width: 136px;\r\n  height: 0;\r\n  position: absolute;\r\n  overflow: hidden;\r\n  background: ${({ theme }) => theme.colors.input};\r\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\r\n  transition: transform 0.15s, opacity 0.15s;\r\n  transform: scaleY(0);\r\n  transform-origin: top;\r\n  opacity: 0;\r\n  width: 100%;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    min-width: 168px;\r\n  }\r\n`\r\n\r\nconst DropDownContainer = styled.div<{ isOpen: boolean; width: number; height: number }>`\r\n  cursor: pointer;\r\n  width: ${({ width }) => width}px;\r\n  position: relative;\r\n  background: ${({ theme }) => theme.colors.input};\r\n  border-radius: 16px;\r\n  height: 40px;\r\n  min-width: 136px;\r\n  user-select: none;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    min-width: 168px;\r\n  }\r\n\r\n  ${(props) =>\r\n    props.isOpen &&\r\n    css`\r\n      ${DropDownHeader} {\r\n        border-bottom: 1px solid ${({ theme }) => theme.colors.inputSecondary};\r\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\r\n        border-radius: 16px 16px 0 0;\r\n      }\r\n\r\n      ${DropDownListContainer} {\r\n        height: auto;\r\n        transform: scaleY(1);\r\n        opacity: 1;\r\n        border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\r\n        border-top-width: 0;\r\n        border-radius: 0 0 16px 16px;\r\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\r\n      }\r\n    `}\r\n\r\n  svg {\r\n    position: absolute;\r\n    right: 16px;\r\n    top: 50%;\r\n    transform: translateY(-50%);\r\n  }\r\n`\r\n\r\nconst DropDownList = styled.ul`\r\n  padding: 0;\r\n  margin: 0;\r\n  box-sizing: border-box;\r\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\r\n`\r\n\r\nconst ListItem = styled.li`\r\n  list-style: none;\r\n  padding: 8px 16px;\r\n  &:hover {\r\n    background: ${({ theme }) => theme.colors.inputSecondary};\r\n  }\r\n`\r\n\r\nexport interface SelectProps {\r\n  options: OptionProps[]\r\n  onChange?: (option: OptionProps) => void\r\n}\r\n\r\nexport interface OptionProps {\r\n  label: string\r\n  value: any\r\n}\r\n\r\nconst Select: React.FunctionComponent<SelectProps> = ({ options, onChange }) => {\r\n  const containerRef = useRef(null)\r\n  const dropdownRef = useRef(null)\r\n  const [isOpen, setIsOpen] = useState(false)\r\n  const [selectedOptionIndex, setSelectedOptionIndex] = useState(0)\r\n  const [containerSize, setContainerSize] = useState({ width: 0, height: 0 })\r\n\r\n  const toggling = (event: React.MouseEvent<HTMLDivElement>) => {\r\n    setIsOpen(!isOpen)\r\n    event.stopPropagation()\r\n  }\r\n\r\n  const onOptionClicked = (selectedIndex: number) => () => {\r\n    setSelectedOptionIndex(selectedIndex)\r\n    setIsOpen(false)\r\n\r\n    if (onChange) {\r\n      onChange(options[selectedIndex])\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    setContainerSize({\r\n      width: dropdownRef.current.offsetWidth, // Consider border\r\n      height: dropdownRef.current.offsetHeight,\r\n    })\r\n\r\n    const handleClickOutside = () => {\r\n      setIsOpen(false)\r\n    }\r\n\r\n    document.addEventListener('click', handleClickOutside)\r\n    return () => {\r\n      document.removeEventListener('click', handleClickOutside)\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <DropDownContainer isOpen={isOpen} ref={containerRef} {...containerSize}>\r\n      {containerSize.width !== 0 && (\r\n        <DropDownHeader onClick={toggling}>\r\n          <Text>{options[selectedOptionIndex].label}</Text>\r\n        </DropDownHeader>\r\n      )}\r\n      <ArrowDropDownIcon color=\"text\" onClick={toggling} />\r\n      <DropDownListContainer>\r\n        <DropDownList ref={dropdownRef}>\r\n          {options.map((option, index) =>\r\n            index !== selectedOptionIndex ? (\r\n              <ListItem onClick={onOptionClicked(index)} key={option.label}>\r\n                <Text>{option.label}</Text>\r\n              </ListItem>\r\n            ) : null,\r\n          )}\r\n        </DropDownList>\r\n      </DropDownListContainer>\r\n    </DropDownContainer>\r\n  )\r\n}\r\n\r\nexport default Select\r\n"]},"metadata":{},"sourceType":"module"}