{"ast":null,"code":"var _s = $RefreshSig$();\nimport { parse } from 'qs';\nimport { useMemo } from 'react';\nimport { useLocation } from 'react-router-dom';\nexport default function useParsedQueryString() {\n  _s();\n  const {\n    search\n  } = useLocation();\n  return useMemo(() => search && search.length > 1 ? parse(search, {\n    parseArrays: false,\n    ignoreQueryPrefix: true\n  }) : {}, [search]);\n}\n_s(useParsedQueryString, \"I+9F+Vhfmc3otMLqUKFlYflxhf8=\", false, function () {\n  return [useLocation];\n});","map":{"version":3,"names":["parse","useMemo","useLocation","useParsedQueryString","_s","search","length","parseArrays","ignoreQueryPrefix"],"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/hooks/useParsedQueryString.ts"],"sourcesContent":["import { parse, ParsedQs } from 'qs'\r\nimport { useMemo } from 'react'\r\nimport { useLocation } from 'react-router-dom'\r\n\r\nexport default function useParsedQueryString(): ParsedQs {\r\n  const { search } = useLocation()\r\n  return useMemo(\r\n    () => (search && search.length > 1 ? parse(search, { parseArrays: false, ignoreQueryPrefix: true }) : {}),\r\n    [search],\r\n  )\r\n}\r\n"],"mappings":";AAAA,SAASA,KAAK,QAAkB,IAAI;AACpC,SAASC,OAAO,QAAQ,OAAO;AAC/B,SAASC,WAAW,QAAQ,kBAAkB;AAE9C,eAAe,SAASC,oBAAoBA,CAAA,EAAa;EAAAC,EAAA;EACvD,MAAM;IAAEC;EAAO,CAAC,GAAGH,WAAW,CAAC,CAAC;EAChC,OAAOD,OAAO,CACZ,MAAOI,MAAM,IAAIA,MAAM,CAACC,MAAM,GAAG,CAAC,GAAGN,KAAK,CAACK,MAAM,EAAE;IAAEE,WAAW,EAAE,KAAK;IAAEC,iBAAiB,EAAE;EAAK,CAAC,CAAC,GAAG,CAAC,CAAE,EACzG,CAACH,MAAM,CACT,CAAC;AACH;AAACD,EAAA,CANuBD,oBAAoB;EAAA,QACvBD,WAAW;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}