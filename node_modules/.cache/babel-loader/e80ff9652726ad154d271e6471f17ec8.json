{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\frkul\\\\Documents\\\\swapUI_pancake-frontend\\\\src\\\\views\\\\Predictions\\\\components\\\\CardFlip.tsx\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Front = styled.div`\n  align-items: center;\n  backface-visibility: hidden;\n  display: flex;\n  height: 100%;\n  left: 0;\n  position: absolute;\n  top: 0;\n  transition: z-index 600ms;\n  width: 100%;\n\n  & > div {\n    flex: 1;\n  }\n`;\n_c = Front;\nconst Back = styled(Front)`\n  transform: rotateY(180deg);\n`;\n_c2 = Back;\nconst Inner = styled.div`\n  height: 100%;\n  position: relative;\n  transform: rotateY(${({\n  isFlipped\n}) => isFlipped ? 180 : 0}deg);\n  transform-style: preserve-3d;\n  transition: transform 600ms;\n\n  ${Front} {\n    z-index: ${({\n  isFlipped\n}) => isFlipped ? 5 : 10};\n  }\n\n  ${Back} {\n    z-index: ${({\n  isFlipped\n}) => isFlipped ? 10 : 5};\n  }\n`;\n_c3 = Inner;\nconst StyledCardFlip = styled.div`\n  perspective: 1000px;\n  z-index: auto;\n`;\n_c4 = StyledCardFlip;\nconst getComponents = children => {\n  if (children.length !== 2) {\n    throw new Error('CardFlip: Two children are required');\n  }\n  return children;\n};\nconst CardFlip = ({\n  isFlipped,\n  height,\n  children\n}) => {\n  const [front, back] = getComponents(children);\n  return /*#__PURE__*/_jsxDEV(StyledCardFlip, {\n    style: {\n      height\n    },\n    children: /*#__PURE__*/_jsxDEV(Inner, {\n      isFlipped: isFlipped,\n      children: [/*#__PURE__*/_jsxDEV(Front, {\n        children: front\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Back, {\n        children: back\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_c5 = CardFlip;\nexport default CardFlip;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"Front\");\n$RefreshReg$(_c2, \"Back\");\n$RefreshReg$(_c3, \"Inner\");\n$RefreshReg$(_c4, \"StyledCardFlip\");\n$RefreshReg$(_c5, \"CardFlip\");","map":{"version":3,"names":["React","styled","jsxDEV","_jsxDEV","Front","div","_c","Back","_c2","Inner","isFlipped","_c3","StyledCardFlip","_c4","getComponents","children","length","Error","CardFlip","height","front","back","style","fileName","_jsxFileName","lineNumber","columnNumber","_c5","$RefreshReg$"],"sources":["C:/Users/frkul/Documents/swapUI_pancake-frontend/src/views/Predictions/components/CardFlip.tsx"],"sourcesContent":["import React, { ReactNode } from 'react'\r\nimport styled from 'styled-components'\r\n\r\ninterface CardFlipProps {\r\n  isFlipped: boolean\r\n  height: string\r\n  children: [ReactNode, ReactNode]\r\n}\r\n\r\nconst Front = styled.div`\r\n  align-items: center;\r\n  backface-visibility: hidden;\r\n  display: flex;\r\n  height: 100%;\r\n  left: 0;\r\n  position: absolute;\r\n  top: 0;\r\n  transition: z-index 600ms;\r\n  width: 100%;\r\n\r\n  & > div {\r\n    flex: 1;\r\n  }\r\n`\r\n\r\nconst Back = styled(Front)`\r\n  transform: rotateY(180deg);\r\n`\r\n\r\nconst Inner = styled.div<{ isFlipped: CardFlipProps['isFlipped'] }>`\r\n  height: 100%;\r\n  position: relative;\r\n  transform: rotateY(${({ isFlipped }) => (isFlipped ? 180 : 0)}deg);\r\n  transform-style: preserve-3d;\r\n  transition: transform 600ms;\r\n\r\n  ${Front} {\r\n    z-index: ${({ isFlipped }) => (isFlipped ? 5 : 10)};\r\n  }\r\n\r\n  ${Back} {\r\n    z-index: ${({ isFlipped }) => (isFlipped ? 10 : 5)};\r\n  }\r\n`\r\n\r\nconst StyledCardFlip = styled.div`\r\n  perspective: 1000px;\r\n  z-index: auto;\r\n`\r\n\r\nconst getComponents = (children: CardFlipProps['children']) => {\r\n  if (children.length !== 2) {\r\n    throw new Error('CardFlip: Two children are required')\r\n  }\r\n\r\n  return children\r\n}\r\n\r\nconst CardFlip: React.FC<CardFlipProps> = ({ isFlipped, height, children }) => {\r\n  const [front, back] = getComponents(children)\r\n\r\n  return (\r\n    <StyledCardFlip style={{ height }}>\r\n      <Inner isFlipped={isFlipped}>\r\n        <Front>{front}</Front>\r\n        <Back>{back}</Back>\r\n      </Inner>\r\n    </StyledCardFlip>\r\n  )\r\n}\r\n\r\nexport default CardFlip\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAqB,OAAO;AACxC,OAAOC,MAAM,MAAM,mBAAmB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAQtC,MAAMC,KAAK,GAAGH,MAAM,CAACI,GAAG;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAAC,EAAA,GAdKF,KAAK;AAgBX,MAAMG,IAAI,GAAGN,MAAM,CAACG,KAAK,CAAC;AAC1B;AACA,CAAC;AAAAI,GAAA,GAFKD,IAAI;AAIV,MAAME,KAAK,GAAGR,MAAM,CAACI,GAA8C;AACnE;AACA;AACA,uBAAuB,CAAC;EAAEK;AAAU,CAAC,KAAMA,SAAS,GAAG,GAAG,GAAG,CAAE;AAC/D;AACA;AACA;AACA,IAAIN,KAAK;AACT,eAAe,CAAC;EAAEM;AAAU,CAAC,KAAMA,SAAS,GAAG,CAAC,GAAG,EAAG;AACtD;AACA;AACA,IAAIH,IAAI;AACR,eAAe,CAAC;EAAEG;AAAU,CAAC,KAAMA,SAAS,GAAG,EAAE,GAAG,CAAE;AACtD;AACA,CAAC;AAAAC,GAAA,GAdKF,KAAK;AAgBX,MAAMG,cAAc,GAAGX,MAAM,CAACI,GAAG;AACjC;AACA;AACA,CAAC;AAAAQ,GAAA,GAHKD,cAAc;AAKpB,MAAME,aAAa,GAAIC,QAAmC,IAAK;EAC7D,IAAIA,QAAQ,CAACC,MAAM,KAAK,CAAC,EAAE;IACzB,MAAM,IAAIC,KAAK,CAAC,qCAAqC,CAAC;EACxD;EAEA,OAAOF,QAAQ;AACjB,CAAC;AAED,MAAMG,QAAiC,GAAGA,CAAC;EAAER,SAAS;EAAES,MAAM;EAAEJ;AAAS,CAAC,KAAK;EAC7E,MAAM,CAACK,KAAK,EAAEC,IAAI,CAAC,GAAGP,aAAa,CAACC,QAAQ,CAAC;EAE7C,oBACEZ,OAAA,CAACS,cAAc;IAACU,KAAK,EAAE;MAAEH;IAAO,CAAE;IAAAJ,QAAA,eAChCZ,OAAA,CAACM,KAAK;MAACC,SAAS,EAAEA,SAAU;MAAAK,QAAA,gBAC1BZ,OAAA,CAACC,KAAK;QAAAW,QAAA,EAAEK;MAAK;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACtBvB,OAAA,CAACI,IAAI;QAAAQ,QAAA,EAAEM;MAAI;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACd;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACM,CAAC;AAErB,CAAC;AAAAC,GAAA,GAXKT,QAAiC;AAavC,eAAeA,QAAQ;AAAA,IAAAZ,EAAA,EAAAE,GAAA,EAAAG,GAAA,EAAAE,GAAA,EAAAc,GAAA;AAAAC,YAAA,CAAAtB,EAAA;AAAAsB,YAAA,CAAApB,GAAA;AAAAoB,YAAA,CAAAjB,GAAA;AAAAiB,YAAA,CAAAf,GAAA;AAAAe,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}