{"ast":null,"code":"import * as fs from 'fs';\nimport nodeFetch from 'node-fetch'; // Importing fetch from node-fetch library\n\nconst PANCAKE_EXTENDED = 'https://tokens.pancakeswap.finance/pancakeswap-extended.json';\nconst PANCAKE_TOP100 = 'https://tokens.pancakeswap.finance/pancakeswap-top-100.json';\n\nconst updateChainId = async (url, oldChainId, newChainId) => {\n  try {\n    const response = await nodeFetch(url); // Use the renamed fetch\n\n    const data = await response.json();\n    data.tokens = data.tokens.map(token => {\n      if (token.chainId === oldChainId) {\n        token.chainId = newChainId;\n      }\n\n      return token;\n    });\n    const fileName = url.split('/').pop();\n    fs.writeFileSync(`./${fileName}`, JSON.stringify(data, null, 2));\n    console.log(`Updated ${fileName}`);\n  } catch (error) {\n    console.error(`Failed to update ${url}:`, error);\n  }\n};\n\nconst main = async () => {\n  await updateChainId(PANCAKE_EXTENDED, 56, 1); // Beispiel für das Ändern der chainId von 56 (BSC) zu 1 (Ethereum)\n\n  await updateChainId(PANCAKE_TOP100, 56, 1); // Beispiel für das Ändern der chainId von 56 (BSC) zu 1 (Ethereum)\n};\n\nmain();","map":{"version":3,"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/config/constants/lists.ts"],"names":["fs","nodeFetch","PANCAKE_EXTENDED","PANCAKE_TOP100","updateChainId","url","oldChainId","newChainId","response","data","json","tokens","map","token","chainId","fileName","split","pop","writeFileSync","JSON","stringify","console","log","error","main"],"mappings":"AAAA,OAAO,KAAKA,EAAZ,MAAoB,IAApB;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAAoC;;AAEpC,MAAMC,gBAAgB,GAAG,8DAAzB;AACA,MAAMC,cAAc,GAAG,6DAAvB;;AAEA,MAAMC,aAAa,GAAG,OAAOC,GAAP,EAAoBC,UAApB,EAAwCC,UAAxC,KAA+D;AACnF,MAAI;AACF,UAAMC,QAAQ,GAAG,MAAMP,SAAS,CAACI,GAAD,CAAhC,CADE,CACqC;;AACvC,UAAMI,IAAI,GAAG,MAAMD,QAAQ,CAACE,IAAT,EAAnB;AAEAD,IAAAA,IAAI,CAACE,MAAL,GAAcF,IAAI,CAACE,MAAL,CAAYC,GAAZ,CAAiBC,KAAD,IAAgB;AAC5C,UAAIA,KAAK,CAACC,OAAN,KAAkBR,UAAtB,EAAkC;AAChCO,QAAAA,KAAK,CAACC,OAAN,GAAgBP,UAAhB;AACD;;AACD,aAAOM,KAAP;AACD,KALa,CAAd;AAOA,UAAME,QAAQ,GAAGV,GAAG,CAACW,KAAJ,CAAU,GAAV,EAAeC,GAAf,EAAjB;AACAjB,IAAAA,EAAE,CAACkB,aAAH,CAAkB,KAAIH,QAAS,EAA/B,EAAkCI,IAAI,CAACC,SAAL,CAAeX,IAAf,EAAqB,IAArB,EAA2B,CAA3B,CAAlC;AACAY,IAAAA,OAAO,CAACC,GAAR,CAAa,WAAUP,QAAS,EAAhC;AACD,GAdD,CAcE,OAAOQ,KAAP,EAAc;AACdF,IAAAA,OAAO,CAACE,KAAR,CAAe,oBAAmBlB,GAAI,GAAtC,EAA0CkB,KAA1C;AACD;AACF,CAlBD;;AAoBA,MAAMC,IAAI,GAAG,YAAY;AACvB,QAAMpB,aAAa,CAACF,gBAAD,EAAmB,EAAnB,EAAuB,CAAvB,CAAnB,CADuB,CACwB;;AAC/C,QAAME,aAAa,CAACD,cAAD,EAAiB,EAAjB,EAAqB,CAArB,CAAnB,CAFuB,CAEwB;AAChD,CAHD;;AAKAqB,IAAI","sourcesContent":["import * as fs from 'fs';\r\nimport nodeFetch from 'node-fetch'; // Importing fetch from node-fetch library\r\n\r\nconst PANCAKE_EXTENDED = 'https://tokens.pancakeswap.finance/pancakeswap-extended.json';\r\nconst PANCAKE_TOP100 = 'https://tokens.pancakeswap.finance/pancakeswap-top-100.json';\r\n\r\nconst updateChainId = async (url: string, oldChainId: number, newChainId: number) => {\r\n  try {\r\n    const response = await nodeFetch(url); // Use the renamed fetch\r\n    const data = await response.json();\r\n\r\n    data.tokens = data.tokens.map((token: any) => {\r\n      if (token.chainId === oldChainId) {\r\n        token.chainId = newChainId;\r\n      }\r\n      return token;\r\n    });\r\n\r\n    const fileName = url.split('/').pop();\r\n    fs.writeFileSync(`./${fileName}`, JSON.stringify(data, null, 2));\r\n    console.log(`Updated ${fileName}`);\r\n  } catch (error) {\r\n    console.error(`Failed to update ${url}:`, error);\r\n  }\r\n};\r\n\r\nconst main = async () => {\r\n  await updateChainId(PANCAKE_EXTENDED, 56, 1);  // Beispiel für das Ändern der chainId von 56 (BSC) zu 1 (Ethereum)\r\n  await updateChainId(PANCAKE_TOP100, 56, 1);    // Beispiel für das Ändern der chainId von 56 (BSC) zu 1 (Ethereum)\r\n};\r\n\r\nmain();\r\n"]},"metadata":{},"sourceType":"module"}