{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Devrim\\\\Documents\\\\swapUIforProspBlast\\\\src\\\\views\\\\Profile\\\\components\\\\AchievementTitle.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Text } from '@pancakeswap/uikit';\nimport { useTranslation } from 'contexts/Localization';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AchievementTitle = ({\n  title,\n  ...props\n}) => {\n  _s();\n  const {\n    t\n  } = useTranslation();\n  if (typeof title === 'string') {\n    return /*#__PURE__*/_jsxDEV(Text, {\n      bold: true,\n      ...props,\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this);\n  }\n  const {\n    key,\n    data = {}\n  } = title;\n  return /*#__PURE__*/_jsxDEV(Text, {\n    bold: true,\n    ...props,\n    children: t(key, data)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(AchievementTitle, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n_c = AchievementTitle;\nexport default AchievementTitle;\nvar _c;\n$RefreshReg$(_c, \"AchievementTitle\");","map":{"version":3,"names":["React","Text","useTranslation","jsxDEV","_jsxDEV","AchievementTitle","title","props","_s","t","bold","children","fileName","_jsxFileName","lineNumber","columnNumber","key","data","_c","$RefreshReg$"],"sources":["C:/Users/Devrim/Documents/swapUIforProspBlast/src/views/Profile/components/AchievementTitle.tsx"],"sourcesContent":["import React from 'react'\r\nimport { Text, TextProps } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { TranslatableText as AchievementTitleType } from 'state/types'\r\n\r\ninterface AchievementTitleProps extends TextProps {\r\n  title: AchievementTitleType\r\n}\r\n\r\nconst AchievementTitle: React.FC<AchievementTitleProps> = ({ title, ...props }) => {\r\n  const { t } = useTranslation()\r\n\r\n  if (typeof title === 'string') {\r\n    return (\r\n      <Text bold {...props}>\r\n        {title}\r\n      </Text>\r\n    )\r\n  }\r\n\r\n  const { key, data = {} } = title\r\n\r\n  return (\r\n    <Text bold {...props}>\r\n      {t(key, data)}\r\n    </Text>\r\n  )\r\n}\r\n\r\nexport default AchievementTitle\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAmB,oBAAoB;AACpD,SAASC,cAAc,QAAQ,uBAAuB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAOtD,MAAMC,gBAAiD,GAAGA,CAAC;EAAEC,KAAK;EAAE,GAAGC;AAAM,CAAC,KAAK;EAAAC,EAAA;EACjF,MAAM;IAAEC;EAAE,CAAC,GAAGP,cAAc,CAAC,CAAC;EAE9B,IAAI,OAAOI,KAAK,KAAK,QAAQ,EAAE;IAC7B,oBACEF,OAAA,CAACH,IAAI;MAACS,IAAI;MAAA,GAAKH,KAAK;MAAAI,QAAA,EACjBL;IAAK;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAEX;EAEA,MAAM;IAAEC,GAAG;IAAEC,IAAI,GAAG,CAAC;EAAE,CAAC,GAAGX,KAAK;EAEhC,oBACEF,OAAA,CAACH,IAAI;IAACS,IAAI;IAAA,GAAKH,KAAK;IAAAI,QAAA,EACjBF,CAAC,CAACO,GAAG,EAAEC,IAAI;EAAC;IAAAL,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACT,CAAC;AAEX,CAAC;AAAAP,EAAA,CAlBKH,gBAAiD;EAAA,QACvCH,cAAc;AAAA;AAAAgB,EAAA,GADxBb,gBAAiD;AAoBvD,eAAeA,gBAAgB;AAAA,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}