{"ast":null,"code":"import _taggedTemplateLiteral from\"C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject;import React from'react';import{CardHeader,Heading,Text,Flex}from'@pancakeswap/uikit';import styled from'styled-components';import{useTranslation}from'contexts/Localization';import{TokenPairImage}from'components/TokenImage';import CakeVaultTokenPairImage from'../CakeVaultCard/CakeVaultTokenPairImage';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Wrapper=styled(CardHeader)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  background: \",\";\\n  border-radius: \",\";\\n\"])),_ref=>{let{isFinished,background,theme}=_ref;return isFinished?theme.colors.backgroundDisabled:theme.colors.gradients[background];},_ref2=>{let{theme}=_ref2;return\"\".concat(theme.radii.card,\" \").concat(theme.radii.card,\" 0 0\");});const StyledCardHeader=_ref3=>{let{earningToken,stakingToken,isFinished=false,isAutoVault=false,isStaking=false}=_ref3;const{t}=useTranslation();const isCakePool=earningToken.symbol==='CAKE'&&stakingToken.symbol==='CAKE';const background=isStaking?'bubblegum':'cardHeader';const getHeadingPrefix=()=>{if(isAutoVault){// vault\nreturn t('Auto');}if(isCakePool){// manual cake\nreturn t('Manual');}// all other pools\nreturn t('Earn');};const getSubHeading=()=>{if(isAutoVault){return t('Automatic restaking');}if(isCakePool){return t('Earn CAKE, stake CAKE');}return t('Stake %symbol%',{symbol:stakingToken.symbol});};return/*#__PURE__*/_jsx(Wrapper,{isFinished:isFinished,background:background,children:/*#__PURE__*/_jsxs(Flex,{alignItems:\"center\",justifyContent:\"space-between\",children:[/*#__PURE__*/_jsxs(Flex,{flexDirection:\"column\",children:[/*#__PURE__*/_jsx(Heading,{color:isFinished?'textDisabled':'body',scale:\"lg\",children:\"\".concat(getHeadingPrefix(),\" \").concat(earningToken.symbol)}),/*#__PURE__*/_jsx(Text,{color:isFinished?'textDisabled':'textSubtle',children:getSubHeading()})]}),isAutoVault?/*#__PURE__*/_jsx(CakeVaultTokenPairImage,{width:64,height:64}):/*#__PURE__*/_jsx(TokenPairImage,{primaryToken:earningToken,secondaryToken:stakingToken,width:64,height:64})]})});};export default StyledCardHeader;","map":{"version":3,"names":["React","CardHeader","Heading","Text","Flex","styled","useTranslation","TokenPairImage","CakeVaultTokenPairImage","jsx","_jsx","jsxs","_jsxs","Wrapper","_templateObject","_taggedTemplateLiteral","_ref","isFinished","background","theme","colors","backgroundDisabled","gradients","_ref2","concat","radii","card","StyledCardHeader","_ref3","earningToken","stakingToken","isAutoVault","isStaking","t","isCakePool","symbol","getHeadingPrefix","getSubHeading","children","alignItems","justifyContent","flexDirection","color","scale","width","height","primaryToken","secondaryToken"],"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/views/Pools/components/PoolCard/StyledCardHeader.tsx"],"sourcesContent":["import React from 'react'\r\nimport { CardHeader, Heading, Text, Flex } from '@pancakeswap/uikit'\r\nimport styled from 'styled-components'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { Token } from 'config/constants/types'\r\nimport { TokenPairImage } from 'components/TokenImage'\r\nimport CakeVaultTokenPairImage from '../CakeVaultCard/CakeVaultTokenPairImage'\r\n\r\nconst Wrapper = styled(CardHeader)<{ isFinished?: boolean; background?: string }>`\r\n  background: ${({ isFinished, background, theme }) =>\r\n    isFinished ? theme.colors.backgroundDisabled : theme.colors.gradients[background]};\r\n  border-radius: ${({ theme }) => `${theme.radii.card} ${theme.radii.card} 0 0`};\r\n`\r\n\r\nconst StyledCardHeader: React.FC<{\r\n  earningToken: Token\r\n  stakingToken: Token\r\n  isAutoVault?: boolean\r\n  isFinished?: boolean\r\n  isStaking?: boolean\r\n}> = ({ earningToken, stakingToken, isFinished = false, isAutoVault = false, isStaking = false }) => {\r\n  const { t } = useTranslation()\r\n  const isCakePool = earningToken.symbol === 'CAKE' && stakingToken.symbol === 'CAKE'\r\n  const background = isStaking ? 'bubblegum' : 'cardHeader'\r\n\r\n  const getHeadingPrefix = () => {\r\n    if (isAutoVault) {\r\n      // vault\r\n      return t('Auto')\r\n    }\r\n    if (isCakePool) {\r\n      // manual cake\r\n      return t('Manual')\r\n    }\r\n    // all other pools\r\n    return t('Earn')\r\n  }\r\n\r\n  const getSubHeading = () => {\r\n    if (isAutoVault) {\r\n      return t('Automatic restaking')\r\n    }\r\n    if (isCakePool) {\r\n      return t('Earn CAKE, stake CAKE')\r\n    }\r\n    return t('Stake %symbol%', { symbol: stakingToken.symbol })\r\n  }\r\n\r\n  return (\r\n    <Wrapper isFinished={isFinished} background={background}>\r\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\r\n        <Flex flexDirection=\"column\">\r\n          <Heading color={isFinished ? 'textDisabled' : 'body'} scale=\"lg\">\r\n            {`${getHeadingPrefix()} ${earningToken.symbol}`}\r\n          </Heading>\r\n          <Text color={isFinished ? 'textDisabled' : 'textSubtle'}>{getSubHeading()}</Text>\r\n        </Flex>\r\n        {isAutoVault ? (\r\n          <CakeVaultTokenPairImage width={64} height={64} />\r\n        ) : (\r\n          <TokenPairImage primaryToken={earningToken} secondaryToken={stakingToken} width={64} height={64} />\r\n        )}\r\n      </Flex>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default StyledCardHeader\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}