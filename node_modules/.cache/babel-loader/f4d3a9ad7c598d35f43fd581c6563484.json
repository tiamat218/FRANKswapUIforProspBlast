{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Card,CardFooter,CardHeader,Heading,Text,TabMenu,Tab,Box,Flex,ExpandableLabel}from'@pancakeswap/uikit';import{useTranslation}from'contexts/Localization';import TopTradersGrid from'./TopTradersGrid';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const TopTradersCard=_ref=>{let{team1LeaderboardInformation,team2LeaderboardInformation,team3LeaderboardInformation,globalLeaderboardInformation,isGlobalLeaderboardDataComplete}=_ref;const{t}=useTranslation();const[activeTab,setActiveTab]=useState(0);const[isExpanded,setIsExpanded]=useState(false);const[topTradersGridData,setTopTradersGridData]=useState(null);const handleItemClick=index=>setActiveTab(index);const tabs=[t('Total'),'Storm','Flippers','Cakers'];useEffect(()=>{const getData=()=>{if(activeTab===0){setTopTradersGridData(globalLeaderboardInformation.data);}if(activeTab===1){setTopTradersGridData(team1LeaderboardInformation.leaderboardData.data);}if(activeTab===2){setTopTradersGridData(team2LeaderboardInformation.leaderboardData.data);}if(activeTab===3){setTopTradersGridData(team3LeaderboardInformation.leaderboardData.data);}};if(isGlobalLeaderboardDataComplete){getData();}},[isGlobalLeaderboardDataComplete,activeTab,globalLeaderboardInformation,team1LeaderboardInformation,team2LeaderboardInformation,team3LeaderboardInformation]);return/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(Box,{width:\"100%\",children:[/*#__PURE__*/_jsxs(CardHeader,{children:[/*#__PURE__*/_jsx(Heading,{color:\"secondary\",scale:\"lg\",children:t('Top Traders')}),/*#__PURE__*/_jsx(Text,{fontSize:\"14px\",color:\"textSubtle\",children:t('Since start of the competition')})]}),/*#__PURE__*/_jsxs(Box,{mt:\"16px\",children:[/*#__PURE__*/_jsx(TabMenu,{activeIndex:activeTab,onItemClick:handleItemClick,children:tabs.map(tabText=>{return/*#__PURE__*/_jsx(Tab,{children:tabText},tabText);})}),/*#__PURE__*/_jsx(TopTradersGrid,{data:topTradersGridData,isExpanded:isExpanded})]}),/*#__PURE__*/_jsx(CardFooter,{p:\"0px\",children:/*#__PURE__*/_jsx(Flex,{alignItems:\"center\",justifyContent:\"center\",children:/*#__PURE__*/_jsx(ExpandableLabel,{expanded:isExpanded,onClick:()=>setIsExpanded(!isExpanded),children:isExpanded?t('Hide'):t('Show More')})})})]})});};export default TopTradersCard;","map":{"version":3,"names":["React","useState","useEffect","Card","CardFooter","CardHeader","Heading","Text","TabMenu","Tab","Box","Flex","ExpandableLabel","useTranslation","TopTradersGrid","jsx","_jsx","jsxs","_jsxs","TopTradersCard","_ref","team1LeaderboardInformation","team2LeaderboardInformation","team3LeaderboardInformation","globalLeaderboardInformation","isGlobalLeaderboardDataComplete","t","activeTab","setActiveTab","isExpanded","setIsExpanded","topTradersGridData","setTopTradersGridData","handleItemClick","index","tabs","getData","data","leaderboardData","children","width","color","scale","fontSize","mt","activeIndex","onItemClick","map","tabText","p","alignItems","justifyContent","expanded","onClick"],"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/views/TradingCompetition/components/TeamRanks/TopTradersCard/index.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport {\r\n  Card,\r\n  CardFooter,\r\n  CardHeader,\r\n  Heading,\r\n  Text,\r\n  TabMenu,\r\n  Tab,\r\n  Box,\r\n  Flex,\r\n  ExpandableLabel,\r\n} from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { TeamRanksProps } from '../../../types'\r\nimport TopTradersGrid from './TopTradersGrid'\r\n\r\nconst TopTradersCard: React.FC<TeamRanksProps> = ({\r\n  team1LeaderboardInformation,\r\n  team2LeaderboardInformation,\r\n  team3LeaderboardInformation,\r\n  globalLeaderboardInformation,\r\n  isGlobalLeaderboardDataComplete,\r\n}) => {\r\n  const { t } = useTranslation()\r\n  const [activeTab, setActiveTab] = useState(0)\r\n  const [isExpanded, setIsExpanded] = useState(false)\r\n  const [topTradersGridData, setTopTradersGridData] = useState(null)\r\n  const handleItemClick = (index: number) => setActiveTab(index)\r\n  const tabs = [t('Total'), 'Storm', 'Flippers', 'Cakers']\r\n\r\n  useEffect(() => {\r\n    const getData = () => {\r\n      if (activeTab === 0) {\r\n        setTopTradersGridData(globalLeaderboardInformation.data)\r\n      }\r\n\r\n      if (activeTab === 1) {\r\n        setTopTradersGridData(team1LeaderboardInformation.leaderboardData.data)\r\n      }\r\n\r\n      if (activeTab === 2) {\r\n        setTopTradersGridData(team2LeaderboardInformation.leaderboardData.data)\r\n      }\r\n\r\n      if (activeTab === 3) {\r\n        setTopTradersGridData(team3LeaderboardInformation.leaderboardData.data)\r\n      }\r\n    }\r\n\r\n    if (isGlobalLeaderboardDataComplete) {\r\n      getData()\r\n    }\r\n  }, [\r\n    isGlobalLeaderboardDataComplete,\r\n    activeTab,\r\n    globalLeaderboardInformation,\r\n    team1LeaderboardInformation,\r\n    team2LeaderboardInformation,\r\n    team3LeaderboardInformation,\r\n  ])\r\n\r\n  return (\r\n    <Card>\r\n      <Box width=\"100%\">\r\n        <CardHeader>\r\n          <Heading color=\"secondary\" scale=\"lg\">\r\n            {t('Top Traders')}\r\n          </Heading>\r\n          <Text fontSize=\"14px\" color=\"textSubtle\">\r\n            {t('Since start of the competition')}\r\n          </Text>\r\n        </CardHeader>\r\n        <Box mt=\"16px\">\r\n          <TabMenu activeIndex={activeTab} onItemClick={handleItemClick}>\r\n            {tabs.map((tabText) => {\r\n              return <Tab key={tabText}>{tabText}</Tab>\r\n            })}\r\n          </TabMenu>\r\n          <TopTradersGrid data={topTradersGridData} isExpanded={isExpanded} />\r\n        </Box>\r\n        <CardFooter p=\"0px\">\r\n          <Flex alignItems=\"center\" justifyContent=\"center\">\r\n            <ExpandableLabel expanded={isExpanded} onClick={() => setIsExpanded(!isExpanded)}>\r\n              {isExpanded ? t('Hide') : t('Show More')}\r\n            </ExpandableLabel>\r\n          </Flex>\r\n        </CardFooter>\r\n      </Box>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default TopTradersCard\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}