{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Devrim\\\\Documents\\\\FRANKswapUIforProspBlast\\\\src\\\\views\\\\Lottery\\\\components\\\\AllHistoryCard\\\\RoundSwitcher.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport { IconButton, ArrowForwardIcon, ArrowBackIcon, ArrowLastIcon, Flex, Heading, Input } from '@pancakeswap/uikit';\nimport { useTranslation } from 'contexts/Localization';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledInput = styled(Input)`\n  width: 60px;\n  height: 100%;\n  padding: 4px 16px;\n`;\n_c = StyledInput;\nconst StyledIconButton = styled(IconButton)`\n  width: 32px;\n\n  :disabled {\n    background: none;\n\n    svg {\n      fill: ${({\n  theme\n}) => theme.colors.textDisabled};\n\n      path {\n        fill: ${({\n  theme\n}) => theme.colors.textDisabled};\n      }\n    }\n  }\n`;\n_c2 = StyledIconButton;\n\nconst RoundSwitcher = ({\n  isLoading,\n  selectedRoundId,\n  mostRecentRound,\n  handleInputChange,\n  handleArrowButonPress\n}) => {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  const selectedRoundIdAsInt = parseInt(selectedRoundId, 10);\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    children: [/*#__PURE__*/_jsxDEV(Flex, {\n      alignItems: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        mr: \"8px\",\n        children: t('Round')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StyledInput, {\n        disabled: isLoading,\n        id: \"round-id\",\n        name: \"round-id\",\n        type: \"number\",\n        value: selectedRoundId,\n        scale: \"lg\",\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Flex, {\n      alignItems: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(StyledIconButton, {\n        disabled: !selectedRoundIdAsInt || selectedRoundIdAsInt <= 1,\n        onClick: () => handleArrowButonPress(selectedRoundIdAsInt - 1),\n        variant: \"text\",\n        scale: \"sm\",\n        mr: \"4px\",\n        children: /*#__PURE__*/_jsxDEV(ArrowBackIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StyledIconButton, {\n        disabled: selectedRoundIdAsInt >= mostRecentRound,\n        onClick: () => handleArrowButonPress(selectedRoundIdAsInt + 1),\n        variant: \"text\",\n        scale: \"sm\",\n        mr: \"4px\",\n        children: /*#__PURE__*/_jsxDEV(ArrowForwardIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StyledIconButton, {\n        disabled: selectedRoundIdAsInt >= mostRecentRound,\n        onClick: () => handleArrowButonPress(mostRecentRound),\n        variant: \"text\",\n        scale: \"sm\",\n        children: /*#__PURE__*/_jsxDEV(ArrowLastIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RoundSwitcher, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n\n_c3 = RoundSwitcher;\nexport default RoundSwitcher;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"StyledInput\");\n$RefreshReg$(_c2, \"StyledIconButton\");\n$RefreshReg$(_c3, \"RoundSwitcher\");","map":{"version":3,"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/views/Lottery/components/AllHistoryCard/RoundSwitcher.tsx"],"names":["React","styled","IconButton","ArrowForwardIcon","ArrowBackIcon","ArrowLastIcon","Flex","Heading","Input","useTranslation","StyledInput","StyledIconButton","theme","colors","textDisabled","RoundSwitcher","isLoading","selectedRoundId","mostRecentRound","handleInputChange","handleArrowButonPress","t","selectedRoundIdAsInt","parseInt"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { IconButton, ArrowForwardIcon, ArrowBackIcon, ArrowLastIcon, Flex, Heading, Input } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\nconst StyledInput = styled(Input)`\r\n  width: 60px;\r\n  height: 100%;\r\n  padding: 4px 16px;\r\n`\r\n\r\nconst StyledIconButton = styled(IconButton)`\r\n  width: 32px;\r\n\r\n  :disabled {\r\n    background: none;\r\n\r\n    svg {\r\n      fill: ${({ theme }) => theme.colors.textDisabled};\r\n\r\n      path {\r\n        fill: ${({ theme }) => theme.colors.textDisabled};\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\ninterface RoundSwitcherProps {\r\n  isLoading: boolean\r\n  selectedRoundId: string\r\n  mostRecentRound: number\r\n  handleInputChange: (event: any) => void\r\n  handleArrowButonPress: (targetRound: number) => void\r\n}\r\n\r\nconst RoundSwitcher: React.FC<RoundSwitcherProps> = ({\r\n  isLoading,\r\n  selectedRoundId,\r\n  mostRecentRound,\r\n  handleInputChange,\r\n  handleArrowButonPress,\r\n}) => {\r\n  const { t } = useTranslation()\r\n  const selectedRoundIdAsInt = parseInt(selectedRoundId, 10)\r\n\r\n  return (\r\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\r\n      <Flex alignItems=\"center\">\r\n        <Heading mr=\"8px\">{t('Round')}</Heading>\r\n        <StyledInput\r\n          disabled={isLoading}\r\n          id=\"round-id\"\r\n          name=\"round-id\"\r\n          type=\"number\"\r\n          value={selectedRoundId}\r\n          scale=\"lg\"\r\n          onChange={handleInputChange}\r\n        />\r\n      </Flex>\r\n      <Flex alignItems=\"center\">\r\n        <StyledIconButton\r\n          disabled={!selectedRoundIdAsInt || selectedRoundIdAsInt <= 1}\r\n          onClick={() => handleArrowButonPress(selectedRoundIdAsInt - 1)}\r\n          variant=\"text\"\r\n          scale=\"sm\"\r\n          mr=\"4px\"\r\n        >\r\n          <ArrowBackIcon />\r\n        </StyledIconButton>\r\n        <StyledIconButton\r\n          disabled={selectedRoundIdAsInt >= mostRecentRound}\r\n          onClick={() => handleArrowButonPress(selectedRoundIdAsInt + 1)}\r\n          variant=\"text\"\r\n          scale=\"sm\"\r\n          mr=\"4px\"\r\n        >\r\n          <ArrowForwardIcon />\r\n        </StyledIconButton>\r\n        <StyledIconButton\r\n          disabled={selectedRoundIdAsInt >= mostRecentRound}\r\n          onClick={() => handleArrowButonPress(mostRecentRound)}\r\n          variant=\"text\"\r\n          scale=\"sm\"\r\n        >\r\n          <ArrowLastIcon />\r\n        </StyledIconButton>\r\n      </Flex>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default RoundSwitcher\r\n"]},"metadata":{},"sourceType":"module"}