{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.browserSha512 = exports.browserSha256 = exports.browserHmacSha512Sign = exports.browserHmacSha256Sign = exports.browserAesDecrypt = exports.browserAesEncrypt = exports.browserImportKey = exports.browserExportKey = exports.getOps = exports.getAlgo = exports.getSubtleCrypto = exports.getBrowerCrypto = void 0;\nconst constants_1 = require(\"../constants\");\nfunction getBrowerCrypto() {\n  return (global === null || global === void 0 ? void 0 : global.crypto) || (global === null || global === void 0 ? void 0 : global.msCrypto) || {};\n}\nexports.getBrowerCrypto = getBrowerCrypto;\nfunction getSubtleCrypto() {\n  const browserCrypto = getBrowerCrypto();\n  return browserCrypto.subtle || browserCrypto.webkitSubtle;\n}\nexports.getSubtleCrypto = getSubtleCrypto;\nfunction getAlgo(type) {\n  return type === constants_1.AES_BROWSER_ALGO ? {\n    length: constants_1.AES_LENGTH,\n    name: constants_1.AES_BROWSER_ALGO\n  } : {\n    hash: {\n      name: constants_1.HMAC_BROWSER_ALGO\n    },\n    name: constants_1.HMAC_BROWSER\n  };\n}\nexports.getAlgo = getAlgo;\nfunction getOps(type) {\n  return type === constants_1.AES_BROWSER_ALGO ? [constants_1.ENCRYPT_OP, constants_1.DECRYPT_OP] : [constants_1.SIGN_OP, constants_1.VERIFY_OP];\n}\nexports.getOps = getOps;\nfunction browserExportKey(cryptoKey) {\n  let type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : constants_1.AES_BROWSER_ALGO;\n  return __awaiter(this, void 0, void 0, function* () {\n    const subtle = getSubtleCrypto();\n    return new Uint8Array(yield subtle.exportKey('raw', cryptoKey));\n  });\n}\nexports.browserExportKey = browserExportKey;\nfunction browserImportKey(buffer) {\n  let type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : constants_1.AES_BROWSER_ALGO;\n  return __awaiter(this, void 0, void 0, function* () {\n    return getSubtleCrypto().importKey('raw', buffer, getAlgo(type), true, getOps(type));\n  });\n}\nexports.browserImportKey = browserImportKey;\nfunction browserAesEncrypt(iv, key, data) {\n  return __awaiter(this, void 0, void 0, function* () {\n    const subtle = getSubtleCrypto();\n    const cryptoKey = yield browserImportKey(key, constants_1.AES_BROWSER_ALGO);\n    const result = yield subtle.encrypt({\n      iv,\n      name: constants_1.AES_BROWSER_ALGO\n    }, cryptoKey, data);\n    return new Uint8Array(result);\n  });\n}\nexports.browserAesEncrypt = browserAesEncrypt;\nfunction browserAesDecrypt(iv, key, data) {\n  return __awaiter(this, void 0, void 0, function* () {\n    const subtle = getSubtleCrypto();\n    const cryptoKey = yield browserImportKey(key, constants_1.AES_BROWSER_ALGO);\n    const result = yield subtle.decrypt({\n      iv,\n      name: constants_1.AES_BROWSER_ALGO\n    }, cryptoKey, data);\n    return new Uint8Array(result);\n  });\n}\nexports.browserAesDecrypt = browserAesDecrypt;\nfunction browserHmacSha256Sign(key, data) {\n  return __awaiter(this, void 0, void 0, function* () {\n    const subtle = getSubtleCrypto();\n    const cryptoKey = yield browserImportKey(key, constants_1.HMAC_BROWSER);\n    const signature = yield subtle.sign({\n      length: constants_1.HMAC_LENGTH,\n      name: constants_1.HMAC_BROWSER\n    }, cryptoKey, data);\n    return new Uint8Array(signature);\n  });\n}\nexports.browserHmacSha256Sign = browserHmacSha256Sign;\nfunction browserHmacSha512Sign(key, data) {\n  return __awaiter(this, void 0, void 0, function* () {\n    const subtle = getSubtleCrypto();\n    const cryptoKey = yield browserImportKey(key, constants_1.HMAC_BROWSER);\n    const signature = yield subtle.sign({\n      length: constants_1.LENGTH_512,\n      name: constants_1.HMAC_BROWSER\n    }, cryptoKey, data);\n    return new Uint8Array(signature);\n  });\n}\nexports.browserHmacSha512Sign = browserHmacSha512Sign;\nfunction browserSha256(data) {\n  return __awaiter(this, void 0, void 0, function* () {\n    const subtle = getSubtleCrypto();\n    const result = yield subtle.digest({\n      name: constants_1.SHA256_BROWSER_ALGO\n    }, data);\n    return new Uint8Array(result);\n  });\n}\nexports.browserSha256 = browserSha256;\nfunction browserSha512(data) {\n  return __awaiter(this, void 0, void 0, function* () {\n    const subtle = getSubtleCrypto();\n    const result = yield subtle.digest({\n      name: constants_1.SHA512_BROWSER_ALGO\n    }, data);\n    return new Uint8Array(result);\n  });\n}\nexports.browserSha512 = browserSha512;","map":{"version":3,"names":["constants_1","require","getBrowerCrypto","global","crypto","msCrypto","exports","getSubtleCrypto","browserCrypto","subtle","webkitSubtle","getAlgo","type","AES_BROWSER_ALGO","length","AES_LENGTH","name","hash","HMAC_BROWSER_ALGO","HMAC_BROWSER","getOps","ENCRYPT_OP","DECRYPT_OP","SIGN_OP","VERIFY_OP","browserExportKey","cryptoKey","arguments","undefined","Uint8Array","exportKey","browserImportKey","buffer","importKey","browserAesEncrypt","iv","key","data","result","encrypt","browserAesDecrypt","decrypt","browserHmacSha256Sign","signature","sign","HMAC_LENGTH","browserHmacSha512Sign","LENGTH_512","browserSha256","digest","SHA256_BROWSER_ALGO","browserSha512","SHA512_BROWSER_ALGO"],"sources":["../../../../src/helpers/env/browser.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}