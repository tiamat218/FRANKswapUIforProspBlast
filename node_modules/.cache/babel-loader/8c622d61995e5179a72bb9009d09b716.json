{"ast":null,"code":"import _taggedTemplateLiteral from\"C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject;import React from'react';import styled from'styled-components';import{ChevronDownIcon,ChevronUpIcon,Text}from'@pancakeswap/uikit';import{useTranslation}from'contexts/Localization';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Wrapper=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  cursor: pointer;\\n\\n  svg {\\n    fill: \",\";\\n  }\\n\"])),_ref=>{let{theme}=_ref;return theme.colors.primary;});const ExpandableSectionButton=_ref2=>{let{onClick,expanded}=_ref2;const{t}=useTranslation();return/*#__PURE__*/_jsxs(Wrapper,{\"aria-label\":t('Hide or show expandable content'),role:\"button\",onClick:()=>onClick(),children:[/*#__PURE__*/_jsx(Text,{color:\"primary\",bold:true,children:expanded?t('Hide'):t('Details')}),expanded?/*#__PURE__*/_jsx(ChevronUpIcon,{}):/*#__PURE__*/_jsx(ChevronDownIcon,{})]});};ExpandableSectionButton.defaultProps={expanded:false};export default ExpandableSectionButton;","map":{"version":3,"names":["React","styled","ChevronDownIcon","ChevronUpIcon","Text","useTranslation","jsx","_jsx","jsxs","_jsxs","Wrapper","div","_templateObject","_taggedTemplateLiteral","_ref","theme","colors","primary","ExpandableSectionButton","_ref2","onClick","expanded","t","role","children","color","bold","defaultProps"],"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/components/ExpandableSectionButton/ExpandableSectionButton.tsx"],"sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { ChevronDownIcon, ChevronUpIcon, Text } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\nexport interface ExpandableSectionButtonProps {\r\n  onClick?: () => void\r\n  expanded?: boolean\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  cursor: pointer;\r\n\r\n  svg {\r\n    fill: ${({ theme }) => theme.colors.primary};\r\n  }\r\n`\r\n\r\nconst ExpandableSectionButton: React.FC<ExpandableSectionButtonProps> = ({ onClick, expanded }) => {\r\n  const { t } = useTranslation()\r\n\r\n  return (\r\n    <Wrapper aria-label={t('Hide or show expandable content')} role=\"button\" onClick={() => onClick()}>\r\n      <Text color=\"primary\" bold>\r\n        {expanded ? t('Hide') : t('Details')}\r\n      </Text>\r\n      {expanded ? <ChevronUpIcon /> : <ChevronDownIcon />}\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nExpandableSectionButton.defaultProps = {\r\n  expanded: false,\r\n}\r\n\r\nexport default ExpandableSectionButton\r\n"],"mappings":"6MAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,MAAO,CAAAC,MAAM,KAAM,mBAAmB,CACtC,OAASC,eAAe,CAAEC,aAAa,CAAEC,IAAI,KAAQ,oBAAoB,CACzE,OAASC,cAAc,KAAQ,uBAAuB,QAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAOtD,KAAM,CAAAC,OAAO,CAAGT,MAAM,CAACU,GAAG,CAAAC,eAAA,GAAAA,eAAA,CAAAC,sBAAA,oIAOdC,IAAA,MAAC,CAAEC,KAAM,CAAC,CAAAD,IAAA,OAAK,CAAAC,KAAK,CAACC,MAAM,CAACC,OAAO,GAE9C,CAED,KAAM,CAAAC,uBAA+D,CAAGC,KAAA,EAA2B,IAA1B,CAAEC,OAAO,CAAEC,QAAS,CAAC,CAAAF,KAAA,CAC5F,KAAM,CAAEG,CAAE,CAAC,CAAGjB,cAAc,CAAC,CAAC,CAE9B,mBACEI,KAAA,CAACC,OAAO,EAAC,aAAYY,CAAC,CAAC,iCAAiC,CAAE,CAACC,IAAI,CAAC,QAAQ,CAACH,OAAO,CAAEA,CAAA,GAAMA,OAAO,CAAC,CAAE,CAAAI,QAAA,eAChGjB,IAAA,CAACH,IAAI,EAACqB,KAAK,CAAC,SAAS,CAACC,IAAI,MAAAF,QAAA,CACvBH,QAAQ,CAAGC,CAAC,CAAC,MAAM,CAAC,CAAGA,CAAC,CAAC,SAAS,CAAC,CAChC,CAAC,CACND,QAAQ,cAAGd,IAAA,CAACJ,aAAa,GAAE,CAAC,cAAGI,IAAA,CAACL,eAAe,GAAE,CAAC,EAC5C,CAAC,CAEd,CAAC,CAEDgB,uBAAuB,CAACS,YAAY,CAAG,CACrCN,QAAQ,CAAE,KACZ,CAAC,CAED,cAAe,CAAAH,uBAAuB","ignoreList":[]},"metadata":{},"sourceType":"module"}