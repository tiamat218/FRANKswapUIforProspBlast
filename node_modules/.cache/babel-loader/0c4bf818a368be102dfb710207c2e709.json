{"ast":null,"code":"var _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$();\nimport { useCallback, useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport useActiveWeb3React from 'hooks/useActiveWeb3React';\nimport { addTransaction } from './actions';\n// helper that can take a ethers library transaction response and add it to the list of transactions\nexport function useTransactionAdder() {\n  _s();\n  const {\n    chainId,\n    account\n  } = useActiveWeb3React();\n  const dispatch = useDispatch();\n  return useCallback((response, {\n    summary,\n    approval,\n    claim\n  } = {}) => {\n    if (!account) return;\n    if (!chainId) return;\n    const {\n      hash\n    } = response;\n    if (!hash) {\n      throw Error('No transaction hash found.');\n    }\n    dispatch(addTransaction({\n      hash,\n      from: account,\n      chainId,\n      approval,\n      summary,\n      claim\n    }));\n  }, [dispatch, chainId, account]);\n}\n\n// returns all the transactions for the current chain\n_s(useTransactionAdder, \"MEh+TAztv1BWq5c2lTL2SEy/Uq8=\", false, function () {\n  return [useActiveWeb3React, useDispatch];\n});\nexport function useAllTransactions() {\n  _s2();\n  var _state$chainId;\n  const {\n    chainId\n  } = useActiveWeb3React();\n  const state = useSelector(s => s.transactions);\n  return chainId ? (_state$chainId = state[chainId]) !== null && _state$chainId !== void 0 ? _state$chainId : {} : {};\n}\n_s2(useAllTransactions, \"3FhVoM2yUUuTIyL07ycVqdy9Zqs=\", false, function () {\n  return [useActiveWeb3React, useSelector];\n});\nexport function useIsTransactionPending(transactionHash) {\n  _s3();\n  const transactions = useAllTransactions();\n  if (!transactionHash || !transactions[transactionHash]) return false;\n  return !transactions[transactionHash].receipt;\n}\n\n/**\r\n * Returns whether a transaction happened in the last day (86400 seconds * 1000 milliseconds / second)\r\n * @param tx to check for recency\r\n */\n_s3(useIsTransactionPending, \"hqz1TRfIl9I1+vK9TqtScGR9Kdg=\", false, function () {\n  return [useAllTransactions];\n});\nexport function isTransactionRecent(tx) {\n  return new Date().getTime() - tx.addedTime < 86400000;\n}\n\n// returns whether a token has a pending approval transaction\nexport function useHasPendingApproval(tokenAddress, spender) {\n  _s4();\n  const allTransactions = useAllTransactions();\n  return useMemo(() => typeof tokenAddress === 'string' && typeof spender === 'string' && Object.keys(allTransactions).some(hash => {\n    const tx = allTransactions[hash];\n    if (!tx) return false;\n    if (tx.receipt) {\n      return false;\n    }\n    const {\n      approval\n    } = tx;\n    if (!approval) return false;\n    return approval.spender === spender && approval.tokenAddress === tokenAddress && isTransactionRecent(tx);\n  }), [allTransactions, spender, tokenAddress]);\n}\n_s4(useHasPendingApproval, \"VezVe/KwFqNDaRAkqywKb3KU5lg=\", false, function () {\n  return [useAllTransactions];\n});","map":{"version":3,"names":["useCallback","useMemo","useDispatch","useSelector","useActiveWeb3React","addTransaction","useTransactionAdder","_s","chainId","account","dispatch","response","summary","approval","claim","hash","Error","from","useAllTransactions","_s2","_state$chainId","state","s","transactions","useIsTransactionPending","transactionHash","_s3","receipt","isTransactionRecent","tx","Date","getTime","addedTime","useHasPendingApproval","tokenAddress","spender","_s4","allTransactions","Object","keys","some"],"sources":["C:/Users/frkul/Documents/swapUI_pancake-frontend/src/state/transactions/hooks.tsx"],"sourcesContent":["import { TransactionResponse } from '@ethersproject/providers'\r\nimport { useCallback, useMemo } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport { AppDispatch, AppState } from '../index'\r\nimport { addTransaction } from './actions'\r\nimport { TransactionDetails } from './reducer'\r\n\r\n// helper that can take a ethers library transaction response and add it to the list of transactions\r\nexport function useTransactionAdder(): (\r\n  response: TransactionResponse,\r\n  customData?: {\r\n    summary?: string\r\n    approval?: { tokenAddress: string; spender: string }\r\n    claim?: { recipient: string }\r\n  },\r\n) => void {\r\n  const { chainId, account } = useActiveWeb3React()\r\n  const dispatch = useDispatch<AppDispatch>()\r\n\r\n  return useCallback(\r\n    (\r\n      response: TransactionResponse,\r\n      {\r\n        summary,\r\n        approval,\r\n        claim,\r\n      }: { summary?: string; claim?: { recipient: string }; approval?: { tokenAddress: string; spender: string } } = {},\r\n    ) => {\r\n      if (!account) return\r\n      if (!chainId) return\r\n\r\n      const { hash } = response\r\n      if (!hash) {\r\n        throw Error('No transaction hash found.')\r\n      }\r\n      dispatch(addTransaction({ hash, from: account, chainId, approval, summary, claim }))\r\n    },\r\n    [dispatch, chainId, account],\r\n  )\r\n}\r\n\r\n// returns all the transactions for the current chain\r\nexport function useAllTransactions(): { [txHash: string]: TransactionDetails } {\r\n  const { chainId } = useActiveWeb3React()\r\n\r\n  const state = useSelector<AppState, AppState['transactions']>((s) => s.transactions)\r\n\r\n  return chainId ? state[chainId] ?? {} : {}\r\n}\r\n\r\nexport function useIsTransactionPending(transactionHash?: string): boolean {\r\n  const transactions = useAllTransactions()\r\n\r\n  if (!transactionHash || !transactions[transactionHash]) return false\r\n\r\n  return !transactions[transactionHash].receipt\r\n}\r\n\r\n/**\r\n * Returns whether a transaction happened in the last day (86400 seconds * 1000 milliseconds / second)\r\n * @param tx to check for recency\r\n */\r\nexport function isTransactionRecent(tx: TransactionDetails): boolean {\r\n  return new Date().getTime() - tx.addedTime < 86_400_000\r\n}\r\n\r\n// returns whether a token has a pending approval transaction\r\nexport function useHasPendingApproval(tokenAddress: string | undefined, spender: string | undefined): boolean {\r\n  const allTransactions = useAllTransactions()\r\n  return useMemo(\r\n    () =>\r\n      typeof tokenAddress === 'string' &&\r\n      typeof spender === 'string' &&\r\n      Object.keys(allTransactions).some((hash) => {\r\n        const tx = allTransactions[hash]\r\n        if (!tx) return false\r\n        if (tx.receipt) {\r\n          return false\r\n        }\r\n        const { approval } = tx\r\n        if (!approval) return false\r\n        return approval.spender === spender && approval.tokenAddress === tokenAddress && isTransactionRecent(tx)\r\n      }),\r\n    [allTransactions, spender, tokenAddress],\r\n  )\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}