{"ast":null,"code":"import BigNumber from 'bignumber.js';\nimport { ethers } from 'ethers';\nimport { formatUnits } from 'ethers/lib/utils';\nimport { BIG_TEN } from './bigNumber';\n\n/**\r\n * Take a formatted amount, e.g. 15 BNB and convert it to full decimal value, e.g. 15000000000000000\r\n */\nexport const getDecimalAmount = (amount, decimals = 18) => {\n  return new BigNumber(amount).times(BIG_TEN.pow(decimals));\n};\nexport const getBalanceAmount = (amount, decimals = 18) => {\n  return new BigNumber(amount).dividedBy(BIG_TEN.pow(decimals));\n};\n\n/**\r\n * This function is not really necessary but is used throughout the site.\r\n */\nexport const getBalanceNumber = (balance, decimals = 18) => {\n  return getBalanceAmount(balance, decimals).toNumber();\n};\nexport const getFullDisplayBalance = (balance, decimals = 18, displayDecimals) => {\n  return getBalanceAmount(balance, decimals).toFixed(displayDecimals);\n};\nexport const formatNumber = (number, minPrecision = 2, maxPrecision = 2) => {\n  const options = {\n    minimumFractionDigits: minPrecision,\n    maximumFractionDigits: maxPrecision\n  };\n  return number.toLocaleString(undefined, options);\n};\n\n/**\r\n * Method to format the display of wei given an ethers.BigNumber object\r\n * Note: does NOT round\r\n */\nexport const formatBigNumber = (number, displayDecimals = 18, decimals = 18) => {\n  const remainder = number.mod(ethers.BigNumber.from(10).pow(decimals - displayDecimals));\n  return formatUnits(number.sub(remainder), decimals);\n};\n\n/**\r\n * Method to format the display of wei given an ethers.BigNumber object with toFixed\r\n * Note: rounds\r\n */\nexport const formatBigNumberToFixed = (number, displayDecimals = 18, decimals = 18) => {\n  const formattedString = formatUnits(number, decimals);\n  return (+formattedString).toFixed(displayDecimals);\n};\n\n/**\r\n * Formats a FixedNumber like BigNumber\r\n * i.e. Formats 9763410526137450427.1196 into 9.763 (3 display decimals)\r\n */\nexport const formatFixedNumber = (number, displayDecimals = 18, decimals = 18) => {\n  // Remove decimal\n  const [leftSide] = number.toString().split('.');\n  return formatBigNumber(ethers.BigNumber.from(leftSide), displayDecimals, decimals);\n};","map":{"version":3,"names":["BigNumber","ethers","formatUnits","BIG_TEN","getDecimalAmount","amount","decimals","times","pow","getBalanceAmount","dividedBy","getBalanceNumber","balance","toNumber","getFullDisplayBalance","displayDecimals","toFixed","formatNumber","number","minPrecision","maxPrecision","options","minimumFractionDigits","maximumFractionDigits","toLocaleString","undefined","formatBigNumber","remainder","mod","from","sub","formatBigNumberToFixed","formattedString","formatFixedNumber","leftSide","toString","split"],"sources":["C:/Users/frkul/Documents/swapUI_pancake-frontend/src/utils/formatBalance.ts"],"sourcesContent":["import BigNumber from 'bignumber.js'\r\nimport { ethers } from 'ethers'\r\nimport { formatUnits } from 'ethers/lib/utils'\r\nimport { BIG_TEN } from './bigNumber'\r\n\r\n/**\r\n * Take a formatted amount, e.g. 15 BNB and convert it to full decimal value, e.g. 15000000000000000\r\n */\r\nexport const getDecimalAmount = (amount: BigNumber, decimals = 18) => {\r\n  return new BigNumber(amount).times(BIG_TEN.pow(decimals))\r\n}\r\n\r\nexport const getBalanceAmount = (amount: BigNumber, decimals = 18) => {\r\n  return new BigNumber(amount).dividedBy(BIG_TEN.pow(decimals))\r\n}\r\n\r\n/**\r\n * This function is not really necessary but is used throughout the site.\r\n */\r\nexport const getBalanceNumber = (balance: BigNumber, decimals = 18) => {\r\n  return getBalanceAmount(balance, decimals).toNumber()\r\n}\r\n\r\nexport const getFullDisplayBalance = (balance: BigNumber, decimals = 18, displayDecimals?: number) => {\r\n  return getBalanceAmount(balance, decimals).toFixed(displayDecimals)\r\n}\r\n\r\nexport const formatNumber = (number: number, minPrecision = 2, maxPrecision = 2) => {\r\n  const options = {\r\n    minimumFractionDigits: minPrecision,\r\n    maximumFractionDigits: maxPrecision,\r\n  }\r\n  return number.toLocaleString(undefined, options)\r\n}\r\n\r\n/**\r\n * Method to format the display of wei given an ethers.BigNumber object\r\n * Note: does NOT round\r\n */\r\nexport const formatBigNumber = (number: ethers.BigNumber, displayDecimals = 18, decimals = 18) => {\r\n  const remainder = number.mod(ethers.BigNumber.from(10).pow(decimals - displayDecimals))\r\n  return formatUnits(number.sub(remainder), decimals)\r\n}\r\n\r\n/**\r\n * Method to format the display of wei given an ethers.BigNumber object with toFixed\r\n * Note: rounds\r\n */\r\nexport const formatBigNumberToFixed = (number: ethers.BigNumber, displayDecimals = 18, decimals = 18) => {\r\n  const formattedString = formatUnits(number, decimals)\r\n  return (+formattedString).toFixed(displayDecimals)\r\n}\r\n\r\n/**\r\n * Formats a FixedNumber like BigNumber\r\n * i.e. Formats 9763410526137450427.1196 into 9.763 (3 display decimals)\r\n */\r\nexport const formatFixedNumber = (number: ethers.FixedNumber, displayDecimals = 18, decimals = 18) => {\r\n  // Remove decimal\r\n  const [leftSide] = number.toString().split('.')\r\n  return formatBigNumber(ethers.BigNumber.from(leftSide), displayDecimals, decimals)\r\n}\r\n"],"mappings":"AAAA,OAAOA,SAAS,MAAM,cAAc;AACpC,SAASC,MAAM,QAAQ,QAAQ;AAC/B,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,OAAO,QAAQ,aAAa;;AAErC;AACA;AACA;AACA,OAAO,MAAMC,gBAAgB,GAAGA,CAACC,MAAiB,EAAEC,QAAQ,GAAG,EAAE,KAAK;EACpE,OAAO,IAAIN,SAAS,CAACK,MAAM,CAAC,CAACE,KAAK,CAACJ,OAAO,CAACK,GAAG,CAACF,QAAQ,CAAC,CAAC;AAC3D,CAAC;AAED,OAAO,MAAMG,gBAAgB,GAAGA,CAACJ,MAAiB,EAAEC,QAAQ,GAAG,EAAE,KAAK;EACpE,OAAO,IAAIN,SAAS,CAACK,MAAM,CAAC,CAACK,SAAS,CAACP,OAAO,CAACK,GAAG,CAACF,QAAQ,CAAC,CAAC;AAC/D,CAAC;;AAED;AACA;AACA;AACA,OAAO,MAAMK,gBAAgB,GAAGA,CAACC,OAAkB,EAAEN,QAAQ,GAAG,EAAE,KAAK;EACrE,OAAOG,gBAAgB,CAACG,OAAO,EAAEN,QAAQ,CAAC,CAACO,QAAQ,CAAC,CAAC;AACvD,CAAC;AAED,OAAO,MAAMC,qBAAqB,GAAGA,CAACF,OAAkB,EAAEN,QAAQ,GAAG,EAAE,EAAES,eAAwB,KAAK;EACpG,OAAON,gBAAgB,CAACG,OAAO,EAAEN,QAAQ,CAAC,CAACU,OAAO,CAACD,eAAe,CAAC;AACrE,CAAC;AAED,OAAO,MAAME,YAAY,GAAGA,CAACC,MAAc,EAAEC,YAAY,GAAG,CAAC,EAAEC,YAAY,GAAG,CAAC,KAAK;EAClF,MAAMC,OAAO,GAAG;IACdC,qBAAqB,EAAEH,YAAY;IACnCI,qBAAqB,EAAEH;EACzB,CAAC;EACD,OAAOF,MAAM,CAACM,cAAc,CAACC,SAAS,EAAEJ,OAAO,CAAC;AAClD,CAAC;;AAED;AACA;AACA;AACA;AACA,OAAO,MAAMK,eAAe,GAAGA,CAACR,MAAwB,EAAEH,eAAe,GAAG,EAAE,EAAET,QAAQ,GAAG,EAAE,KAAK;EAChG,MAAMqB,SAAS,GAAGT,MAAM,CAACU,GAAG,CAAC3B,MAAM,CAACD,SAAS,CAAC6B,IAAI,CAAC,EAAE,CAAC,CAACrB,GAAG,CAACF,QAAQ,GAAGS,eAAe,CAAC,CAAC;EACvF,OAAOb,WAAW,CAACgB,MAAM,CAACY,GAAG,CAACH,SAAS,CAAC,EAAErB,QAAQ,CAAC;AACrD,CAAC;;AAED;AACA;AACA;AACA;AACA,OAAO,MAAMyB,sBAAsB,GAAGA,CAACb,MAAwB,EAAEH,eAAe,GAAG,EAAE,EAAET,QAAQ,GAAG,EAAE,KAAK;EACvG,MAAM0B,eAAe,GAAG9B,WAAW,CAACgB,MAAM,EAAEZ,QAAQ,CAAC;EACrD,OAAO,CAAC,CAAC0B,eAAe,EAAEhB,OAAO,CAACD,eAAe,CAAC;AACpD,CAAC;;AAED;AACA;AACA;AACA;AACA,OAAO,MAAMkB,iBAAiB,GAAGA,CAACf,MAA0B,EAAEH,eAAe,GAAG,EAAE,EAAET,QAAQ,GAAG,EAAE,KAAK;EACpG;EACA,MAAM,CAAC4B,QAAQ,CAAC,GAAGhB,MAAM,CAACiB,QAAQ,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC;EAC/C,OAAOV,eAAe,CAACzB,MAAM,CAACD,SAAS,CAAC6B,IAAI,CAACK,QAAQ,CAAC,EAAEnB,eAAe,EAAET,QAAQ,CAAC;AACpF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}