{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Devrim\\\\Documents\\\\FRANKswapUIforProspBlast\\\\src\\\\Providers.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { ModalProvider, light, dark } from '@pancakeswap/uikit';\nimport { Web3ReactProvider } from '@web3-react/core';\nimport { HelmetProvider } from 'react-helmet-async';\nimport { Provider } from 'react-redux';\nimport { ThemeProvider } from 'styled-components';\nimport { useThemeManager } from 'state/user/hooks';\nimport { getLibrary } from 'utils/web3React';\nimport { LanguageProvider } from 'contexts/Localization';\nimport { RefreshContextProvider } from 'contexts/RefreshContext';\nimport { ToastsProvider } from 'contexts/ToastsContext';\nimport store from 'state';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ThemeProviderWrapper = props => {\n  _s();\n\n  const [isDark] = useThemeManager();\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: isDark ? dark : light,\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 10\n  }, this);\n};\n\n_s(ThemeProviderWrapper, \"P6JyyVK7MPzkTBrGlK4JgucDJno=\", false, function () {\n  return [useThemeManager];\n});\n\n_c = ThemeProviderWrapper;\n\nconst Providers = ({\n  children\n}) => {\n  return /*#__PURE__*/_jsxDEV(Web3ReactProvider, {\n    getLibrary: getLibrary,\n    children: /*#__PURE__*/_jsxDEV(Provider, {\n      store: store,\n      children: /*#__PURE__*/_jsxDEV(ToastsProvider, {\n        children: /*#__PURE__*/_jsxDEV(HelmetProvider, {\n          children: /*#__PURE__*/_jsxDEV(ThemeProviderWrapper, {\n            children: /*#__PURE__*/_jsxDEV(LanguageProvider, {\n              children: /*#__PURE__*/_jsxDEV(RefreshContextProvider, {\n                children: /*#__PURE__*/_jsxDEV(ModalProvider, {\n                  children: children\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 28,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 27,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = Providers;\nexport default Providers;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ThemeProviderWrapper\");\n$RefreshReg$(_c2, \"Providers\");","map":{"version":3,"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/Providers.tsx"],"names":["React","ModalProvider","light","dark","Web3ReactProvider","HelmetProvider","Provider","ThemeProvider","useThemeManager","getLibrary","LanguageProvider","RefreshContextProvider","ToastsProvider","store","ThemeProviderWrapper","props","isDark","Providers","children"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,EAAwBC,KAAxB,EAA+BC,IAA/B,QAA2C,oBAA3C;AACA,SAASC,iBAAT,QAAkC,kBAAlC;AACA,SAASC,cAAT,QAA+B,oBAA/B;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,aAAT,QAA8B,mBAA9B;AACA,SAASC,eAAT,QAAgC,kBAAhC;AACA,SAASC,UAAT,QAA2B,iBAA3B;AACA,SAASC,gBAAT,QAAiC,uBAAjC;AACA,SAASC,sBAAT,QAAuC,yBAAvC;AACA,SAASC,cAAT,QAA+B,wBAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,oBAAoB,GAAIC,KAAD,IAAW;AAAA;;AACtC,QAAM,CAACC,MAAD,IAAWR,eAAe,EAAhC;AACA,sBAAO,QAAC,aAAD;AAAe,IAAA,KAAK,EAAEQ,MAAM,GAAGb,IAAH,GAAUD,KAAtC;AAAA,OAAiDa;AAAjD;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAHD;;GAAMD,oB;UACaN,e;;;KADbM,oB;;AAKN,MAAMG,SAAmB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAC5C,sBACE,QAAC,iBAAD;AAAmB,IAAA,UAAU,EAAET,UAA/B;AAAA,2BACE,QAAC,QAAD;AAAU,MAAA,KAAK,EAAEI,KAAjB;AAAA,6BACE,QAAC,cAAD;AAAA,+BACE,QAAC,cAAD;AAAA,iCACE,QAAC,oBAAD;AAAA,mCACE,QAAC,gBAAD;AAAA,qCACE,QAAC,sBAAD;AAAA,uCACE,QAAC,aAAD;AAAA,4BAAgBK;AAAhB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CAlBD;;MAAMD,S;AAoBN,eAAeA,SAAf","sourcesContent":["import React from 'react'\r\nimport { ModalProvider, light, dark } from '@pancakeswap/uikit'\r\nimport { Web3ReactProvider } from '@web3-react/core'\r\nimport { HelmetProvider } from 'react-helmet-async'\r\nimport { Provider } from 'react-redux'\r\nimport { ThemeProvider } from 'styled-components'\r\nimport { useThemeManager } from 'state/user/hooks'\r\nimport { getLibrary } from 'utils/web3React'\r\nimport { LanguageProvider } from 'contexts/Localization'\r\nimport { RefreshContextProvider } from 'contexts/RefreshContext'\r\nimport { ToastsProvider } from 'contexts/ToastsContext'\r\nimport store from 'state'\r\n\r\nconst ThemeProviderWrapper = (props) => {\r\n  const [isDark] = useThemeManager()\r\n  return <ThemeProvider theme={isDark ? dark : light} {...props} />\r\n}\r\n\r\nconst Providers: React.FC = ({ children }) => {\r\n  return (\r\n    <Web3ReactProvider getLibrary={getLibrary}>\r\n      <Provider store={store}>\r\n        <ToastsProvider>\r\n          <HelmetProvider>\r\n            <ThemeProviderWrapper>\r\n              <LanguageProvider>\r\n                <RefreshContextProvider>\r\n                  <ModalProvider>{children}</ModalProvider>\r\n                </RefreshContextProvider>\r\n              </LanguageProvider>\r\n            </ThemeProviderWrapper>\r\n          </HelmetProvider>\r\n        </ToastsProvider>\r\n      </Provider>\r\n    </Web3ReactProvider>\r\n  )\r\n}\r\n\r\nexport default Providers\r\n"]},"metadata":{},"sourceType":"module"}