{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\frkul\\\\Documents\\\\swapUI_pancake-frontend\\\\src\\\\views\\\\Predictions\\\\components\\\\RoundCard\\\\EnteredTag.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport styled from 'styled-components';\nimport { CheckmarkCircleIcon, CheckmarkCircleFillIcon, Tag, useTooltip } from '@pancakeswap/uikit';\nimport { useTranslation } from 'contexts/Localization';\nimport { formatBnbv2 } from '../../helpers';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst StyledEnteredTag = styled(Tag)`\n  font-weight: bold;\n  text-transform: uppercase;\n  background: ${({\n  theme\n}) => theme.colors.background};\n`;\n_c = StyledEnteredTag;\nconst EnteredTag = ({\n  amount,\n  hasClaimed = false\n}) => {\n  _s();\n  const {\n    t\n  } = useTranslation();\n  const {\n    targetRef,\n    tooltipVisible,\n    tooltip\n  } = useTooltip( /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      whiteSpace: 'nowrap'\n    },\n    children: `${formatBnbv2(amount)} BNB`\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this), {\n    placement: 'bottom'\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      ref: targetRef,\n      children: [/*#__PURE__*/_jsxDEV(StyledEnteredTag, {\n        variant: \"secondary\",\n        outline: !hasClaimed,\n        startIcon: hasClaimed ? /*#__PURE__*/_jsxDEV(CheckmarkCircleFillIcon, {\n          width: \"18px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 35\n        }, this) : /*#__PURE__*/_jsxDEV(CheckmarkCircleIcon, {\n          width: \"18px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 78\n        }, this),\n        children: hasClaimed ? t('Claimed') : t('Entered')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), ' ']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), ' ', tooltipVisible && tooltip]\n  }, void 0, true);\n};\n_s(EnteredTag, \"dT7/5xuQD+c5fIpoRLpehDsm8gY=\", false, function () {\n  return [useTranslation, useTooltip];\n});\n_c2 = EnteredTag;\nexport default EnteredTag;\nvar _c, _c2;\n$RefreshReg$(_c, \"StyledEnteredTag\");\n$RefreshReg$(_c2, \"EnteredTag\");","map":{"version":3,"names":["React","styled","CheckmarkCircleIcon","CheckmarkCircleFillIcon","Tag","useTooltip","useTranslation","formatBnbv2","jsxDEV","_jsxDEV","Fragment","_Fragment","StyledEnteredTag","theme","colors","background","_c","EnteredTag","amount","hasClaimed","_s","t","targetRef","tooltipVisible","tooltip","style","whiteSpace","children","fileName","_jsxFileName","lineNumber","columnNumber","placement","ref","variant","outline","startIcon","width","_c2","$RefreshReg$"],"sources":["C:/Users/frkul/Documents/swapUI_pancake-frontend/src/views/Predictions/components/RoundCard/EnteredTag.tsx"],"sourcesContent":["import React from 'react'\r\nimport { ethers } from 'ethers'\r\nimport styled from 'styled-components'\r\nimport { CheckmarkCircleIcon, CheckmarkCircleFillIcon, Tag, useTooltip } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { formatBnbv2 } from '../../helpers'\r\n\r\ninterface EnteredTagProps {\r\n  amount?: ethers.BigNumber\r\n  hasClaimed?: boolean\r\n}\r\n\r\nconst StyledEnteredTag = styled(Tag)`\r\n  font-weight: bold;\r\n  text-transform: uppercase;\r\n  background: ${({ theme }) => theme.colors.background};\r\n`\r\n\r\nconst EnteredTag: React.FC<EnteredTagProps> = ({ amount, hasClaimed = false }) => {\r\n  const { t } = useTranslation()\r\n  const { targetRef, tooltipVisible, tooltip } = useTooltip(\r\n    <div style={{ whiteSpace: 'nowrap' }}>{`${formatBnbv2(amount)} BNB`}</div>,\r\n    { placement: 'bottom' },\r\n  )\r\n\r\n  return (\r\n    <>\r\n      <span ref={targetRef}>\r\n        <StyledEnteredTag\r\n          variant=\"secondary\"\r\n          outline={!hasClaimed}\r\n          startIcon={hasClaimed ? <CheckmarkCircleFillIcon width=\"18px\" /> : <CheckmarkCircleIcon width=\"18px\" />}\r\n        >\r\n          {hasClaimed ? t('Claimed') : t('Entered')}\r\n        </StyledEnteredTag>{' '}\r\n      </span>{' '}\r\n      {tooltipVisible && tooltip}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default EnteredTag\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,mBAAmB,EAAEC,uBAAuB,EAAEC,GAAG,EAAEC,UAAU,QAAQ,oBAAoB;AAClG,SAASC,cAAc,QAAQ,uBAAuB;AACtD,SAASC,WAAW,QAAQ,eAAe;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAO3C,MAAMC,gBAAgB,GAAGX,MAAM,CAACG,GAAG,CAAC;AACpC;AACA;AACA,gBAAgB,CAAC;EAAES;AAAM,CAAC,KAAKA,KAAK,CAACC,MAAM,CAACC,UAAU;AACtD,CAAC;AAAAC,EAAA,GAJKJ,gBAAgB;AAMtB,MAAMK,UAAqC,GAAGA,CAAC;EAAEC,MAAM;EAAEC,UAAU,GAAG;AAAM,CAAC,KAAK;EAAAC,EAAA;EAChF,MAAM;IAAEC;EAAE,CAAC,GAAGf,cAAc,CAAC,CAAC;EAC9B,MAAM;IAAEgB,SAAS;IAAEC,cAAc;IAAEC;EAAQ,CAAC,GAAGnB,UAAU,eACvDI,OAAA;IAAKgB,KAAK,EAAE;MAAEC,UAAU,EAAE;IAAS,CAAE;IAAAC,QAAA,EAAE,GAAGpB,WAAW,CAACW,MAAM,CAAC;EAAM;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC,EAC1E;IAAEC,SAAS,EAAE;EAAS,CACxB,CAAC;EAED,oBACEvB,OAAA,CAAAE,SAAA;IAAAgB,QAAA,gBACElB,OAAA;MAAMwB,GAAG,EAAEX,SAAU;MAAAK,QAAA,gBACnBlB,OAAA,CAACG,gBAAgB;QACfsB,OAAO,EAAC,WAAW;QACnBC,OAAO,EAAE,CAAChB,UAAW;QACrBiB,SAAS,EAAEjB,UAAU,gBAAGV,OAAA,CAACN,uBAAuB;UAACkC,KAAK,EAAC;QAAM;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,gBAAGtB,OAAA,CAACP,mBAAmB;UAACmC,KAAK,EAAC;QAAM;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAE;QAAAJ,QAAA,EAEvGR,UAAU,GAAGE,CAAC,CAAC,SAAS,CAAC,GAAGA,CAAC,CAAC,SAAS;MAAC;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzB,CAAC,EAAC,GAAG;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnB,CAAC,EAAC,GAAG,EACVR,cAAc,IAAIC,OAAO;EAAA,eAC1B,CAAC;AAEP,CAAC;AAAAJ,EAAA,CArBKH,UAAqC;EAAA,QAC3BX,cAAc,EACmBD,UAAU;AAAA;AAAAiC,GAAA,GAFrDrB,UAAqC;AAuB3C,eAAeA,UAAU;AAAA,IAAAD,EAAA,EAAAsB,GAAA;AAAAC,YAAA,CAAAvB,EAAA;AAAAuB,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}