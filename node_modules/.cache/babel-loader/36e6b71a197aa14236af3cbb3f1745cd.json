{"ast":null,"code":"import React,{useCallback,useEffect,useState}from'react';import{Modal,Text,Button,AutoRenewIcon}from'@pancakeswap/uikit';import{useWeb3React}from'@web3-react/core';import useToast from'hooks/useToast';import{useClaimRefundContract}from'hooks/useContract';import{useTranslation}from'contexts/Localization';import{getClaimRefundContract}from'utils/contractHelpers';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export const useCanClaim=()=>{const[canClaim,setCanClaim]=useState(false);const[refresh,setRefresh]=useState(1);const{account}=useWeb3React();const checkClaimStatus=useCallback(()=>{setRefresh(prevRefresh=>prevRefresh+1);},[setRefresh]);useEffect(()=>{const fetchClaimStatus=async()=>{const claimRefundContract=getClaimRefundContract();const walletCanClaim=await claimRefundContract.canClaim(account);setCanClaim(walletCanClaim);};if(account){fetchClaimStatus();}},[account,refresh,setCanClaim]);return{canClaim,checkClaimStatus};};const ClaimGift=_ref=>{let{onSuccess,onDismiss}=_ref;const[isConfirming,setIsConfirming]=useState(false);const{t}=useTranslation();const{canClaim}=useCanClaim();const claimRefundContract=useClaimRefundContract();const{toastSuccess,toastError}=useToast();const handleClick=async()=>{const tx=await claimRefundContract.getCakeBack();setIsConfirming(true);const receipt=await tx.wait();if(receipt.status){toastSuccess(t('Success!'));onSuccess();onDismiss();}else{setIsConfirming(false);toastError(t('Error'),t('Please try again. Confirm the transaction and make sure you are paying enough gas!'));}};return/*#__PURE__*/_jsx(Modal,{title:t('Claim your Gift!'),onDismiss:onDismiss,children:/*#__PURE__*/_jsxs(\"div\",{style:{maxWidth:'640px'},children:[/*#__PURE__*/_jsx(Text,{as:\"p\",children:t('Thank you for being a day-one user of Pancake Profiles!')}),/*#__PURE__*/_jsx(Text,{as:\"p\",mb:\"8px\",children:t(\"If you haven't already noticed, we made a mistake and the starter bunny you chose got mixed up and changed into another bunny. Oops!\")}),/*#__PURE__*/_jsx(Text,{as:\"p\",children:t('To make it up to you, we’ll refund you the full 4 CAKE it cost to make your bunny.')}),/*#__PURE__*/_jsx(Text,{as:\"p\",mb:\"8px\",children:t('We’re also preparing an all-new collectible for you to claim (for free!) in the near future.')}),/*#__PURE__*/_jsx(Text,{as:\"p\",mb:\"24px\",children:t('Once you claim the refund, you can make another account with another wallet, mint a new bunny, and send it to your main account via the NFT page.')}),/*#__PURE__*/_jsx(Button,{endIcon:isConfirming?/*#__PURE__*/_jsx(AutoRenewIcon,{spin:true,color:\"currentColor\"}):null,isLoading:isConfirming,onClick:handleClick,disabled:!canClaim,children:t('Claim Your CAKE')})]})});};export default ClaimGift;","map":{"version":3,"names":["React","useCallback","useEffect","useState","Modal","Text","Button","AutoRenewIcon","useWeb3React","useToast","useClaimRefundContract","useTranslation","getClaimRefundContract","jsx","_jsx","jsxs","_jsxs","useCanClaim","canClaim","setCanClaim","refresh","setRefresh","account","checkClaimStatus","prevRefresh","fetchClaimStatus","claimRefundContract","walletCanClaim","ClaimGift","_ref","onSuccess","onDismiss","isConfirming","setIsConfirming","t","toastSuccess","toastError","handleClick","tx","getCakeBack","receipt","wait","status","title","children","style","maxWidth","as","mb","endIcon","spin","color","isLoading","onClick","disabled"],"sources":["C:/Users/frkul/Documents/swapUI_pancake-frontend/src/views/Profile/components/ClaimGiftModal.tsx"],"sourcesContent":["import React, { useCallback, useEffect, useState } from 'react'\r\nimport { Modal, Text, InjectedModalProps, Button, AutoRenewIcon } from '@pancakeswap/uikit'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport useToast from 'hooks/useToast'\r\nimport { useClaimRefundContract } from 'hooks/useContract'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { getClaimRefundContract } from 'utils/contractHelpers'\r\n\r\ninterface ClaimGiftProps extends InjectedModalProps {\r\n  onSuccess: () => void\r\n}\r\n\r\nexport const useCanClaim = () => {\r\n  const [canClaim, setCanClaim] = useState(false)\r\n  const [refresh, setRefresh] = useState(1)\r\n  const { account } = useWeb3React()\r\n\r\n  const checkClaimStatus = useCallback(() => {\r\n    setRefresh((prevRefresh) => prevRefresh + 1)\r\n  }, [setRefresh])\r\n\r\n  useEffect(() => {\r\n    const fetchClaimStatus = async () => {\r\n      const claimRefundContract = getClaimRefundContract()\r\n      const walletCanClaim = await claimRefundContract.canClaim(account)\r\n      setCanClaim(walletCanClaim)\r\n    }\r\n\r\n    if (account) {\r\n      fetchClaimStatus()\r\n    }\r\n  }, [account, refresh, setCanClaim])\r\n\r\n  return { canClaim, checkClaimStatus }\r\n}\r\n\r\nconst ClaimGift: React.FC<ClaimGiftProps> = ({ onSuccess, onDismiss }) => {\r\n  const [isConfirming, setIsConfirming] = useState(false)\r\n  const { t } = useTranslation()\r\n  const { canClaim } = useCanClaim()\r\n  const claimRefundContract = useClaimRefundContract()\r\n  const { toastSuccess, toastError } = useToast()\r\n\r\n  const handleClick = async () => {\r\n    const tx = await claimRefundContract.getCakeBack()\r\n    setIsConfirming(true)\r\n    const receipt = await tx.wait()\r\n    if (receipt.status) {\r\n      toastSuccess(t('Success!'))\r\n      onSuccess()\r\n      onDismiss()\r\n    } else {\r\n      setIsConfirming(false)\r\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Modal title={t('Claim your Gift!')} onDismiss={onDismiss}>\r\n      <div style={{ maxWidth: '640px' }}>\r\n        <Text as=\"p\">{t('Thank you for being a day-one user of Pancake Profiles!')}</Text>\r\n        <Text as=\"p\" mb=\"8px\">\r\n          {t(\r\n            \"If you haven't already noticed, we made a mistake and the starter bunny you chose got mixed up and changed into another bunny. Oops!\",\r\n          )}\r\n        </Text>\r\n        <Text as=\"p\">{t('To make it up to you, we’ll refund you the full 4 CAKE it cost to make your bunny.')}</Text>\r\n        <Text as=\"p\" mb=\"8px\">\r\n          {t('We’re also preparing an all-new collectible for you to claim (for free!) in the near future.')}\r\n        </Text>\r\n        <Text as=\"p\" mb=\"24px\">\r\n          {t(\r\n            'Once you claim the refund, you can make another account with another wallet, mint a new bunny, and send it to your main account via the NFT page.',\r\n          )}\r\n        </Text>\r\n        <Button\r\n          endIcon={isConfirming ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\r\n          isLoading={isConfirming}\r\n          onClick={handleClick}\r\n          disabled={!canClaim}\r\n        >\r\n          {t('Claim Your CAKE')}\r\n        </Button>\r\n      </div>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default ClaimGift\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}