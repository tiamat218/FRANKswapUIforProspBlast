{"ast":null,"code":"import _taggedTemplateLiteral from\"C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject;import React from'react';import styled from'styled-components';import{Box,CardBody,Flex,Text,useMatchBreakpoints}from'@pancakeswap/uikit';import{useTranslation}from'contexts/Localization';import{useWeb3React}from'@web3-react/core';import ConnectWalletButton from'components/ConnectWalletButton';import tokens from'config/constants/tokens';import{useCakeVault}from'state/pools/hooks';import AprRow from'../PoolCard/AprRow';import{StyledCard,StyledCardInner}from'../PoolCard/StyledCard';import CardFooter from'../PoolCard/CardFooter';import StyledCardHeader from'../PoolCard/StyledCardHeader';import VaultCardActions from'./VaultCardActions';import UnstakingFeeCountdownRow from'./UnstakingFeeCountdownRow';import RecentCakeProfitRow from'./RecentCakeProfitRow';import{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";const StyledCardBody=styled(CardBody)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  min-height: \",\";\\n\"])),_ref=>{let{isLoading}=_ref;return isLoading?'0':'254px';});const CakeVaultCard=_ref2=>{let{pool,showStakedOnly}=_ref2;const{t}=useTranslation();const{isXl}=useMatchBreakpoints();const{account}=useWeb3React();const{userData:{userShares,isLoading:isVaultUserDataLoading},fees:{performanceFee}}=useCakeVault();const accountHasSharesStaked=userShares&&userShares.gt(0);const isLoading=!pool.userData||isVaultUserDataLoading;const performanceFeeAsDecimal=performanceFee&&performanceFee/100;if(showStakedOnly&&!accountHasSharesStaked){return null;}return/*#__PURE__*/_jsx(StyledCard,{isPromoted:{isDesktop:isXl},children:/*#__PURE__*/_jsxs(StyledCardInner,{children:[/*#__PURE__*/_jsx(StyledCardHeader,{isStaking:accountHasSharesStaked,isAutoVault:true,earningToken:tokens.cake,stakingToken:tokens.cake}),/*#__PURE__*/_jsxs(StyledCardBody,{isLoading:isLoading,children:[/*#__PURE__*/_jsx(AprRow,{pool:pool,performanceFee:performanceFeeAsDecimal}),/*#__PURE__*/_jsx(Box,{mt:\"24px\",children:/*#__PURE__*/_jsx(RecentCakeProfitRow,{})}),/*#__PURE__*/_jsx(Box,{mt:\"8px\",children:/*#__PURE__*/_jsx(UnstakingFeeCountdownRow,{})}),/*#__PURE__*/_jsx(Flex,{mt:\"32px\",flexDirection:\"column\",children:account?/*#__PURE__*/_jsx(VaultCardActions,{pool:pool,accountHasSharesStaked:accountHasSharesStaked,isLoading:isLoading}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Text,{mb:\"10px\",textTransform:\"uppercase\",fontSize:\"12px\",color:\"textSubtle\",bold:true,children:t('Start earning')}),/*#__PURE__*/_jsx(ConnectWalletButton,{})]})})]}),/*#__PURE__*/_jsx(CardFooter,{pool:pool,account:account})]})});};export default CakeVaultCard;","map":{"version":3,"names":["React","styled","Box","CardBody","Flex","Text","useMatchBreakpoints","useTranslation","useWeb3React","ConnectWalletButton","tokens","useCakeVault","AprRow","StyledCard","StyledCardInner","CardFooter","StyledCardHeader","VaultCardActions","UnstakingFeeCountdownRow","RecentCakeProfitRow","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","StyledCardBody","_templateObject","_taggedTemplateLiteral","_ref","isLoading","CakeVaultCard","_ref2","pool","showStakedOnly","t","isXl","account","userData","userShares","isVaultUserDataLoading","fees","performanceFee","accountHasSharesStaked","gt","performanceFeeAsDecimal","isPromoted","isDesktop","children","isStaking","isAutoVault","earningToken","cake","stakingToken","mt","flexDirection","mb","textTransform","fontSize","color","bold"],"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/views/Pools/components/CakeVaultCard/index.tsx"],"sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Box, CardBody, Flex, Text, useMatchBreakpoints } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport ConnectWalletButton from 'components/ConnectWalletButton'\r\nimport tokens from 'config/constants/tokens'\r\nimport { useCakeVault } from 'state/pools/hooks'\r\nimport { Pool } from 'state/types'\r\nimport AprRow from '../PoolCard/AprRow'\r\nimport { StyledCard, StyledCardInner } from '../PoolCard/StyledCard'\r\nimport CardFooter from '../PoolCard/CardFooter'\r\nimport StyledCardHeader from '../PoolCard/StyledCardHeader'\r\nimport VaultCardActions from './VaultCardActions'\r\nimport UnstakingFeeCountdownRow from './UnstakingFeeCountdownRow'\r\nimport RecentCakeProfitRow from './RecentCakeProfitRow'\r\n\r\nconst StyledCardBody = styled(CardBody)<{ isLoading: boolean }>`\r\n  min-height: ${({ isLoading }) => (isLoading ? '0' : '254px')};\r\n`\r\n\r\ninterface CakeVaultProps {\r\n  pool: Pool\r\n  showStakedOnly: boolean\r\n}\r\n\r\nconst CakeVaultCard: React.FC<CakeVaultProps> = ({ pool, showStakedOnly }) => {\r\n  const { t } = useTranslation()\r\n  const { isXl } = useMatchBreakpoints()\r\n  const { account } = useWeb3React()\r\n  const {\r\n    userData: { userShares, isLoading: isVaultUserDataLoading },\r\n    fees: { performanceFee },\r\n  } = useCakeVault()\r\n\r\n  const accountHasSharesStaked = userShares && userShares.gt(0)\r\n  const isLoading = !pool.userData || isVaultUserDataLoading\r\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\r\n\r\n  if (showStakedOnly && !accountHasSharesStaked) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <StyledCard isPromoted={{ isDesktop: isXl }}>\r\n      <StyledCardInner>\r\n        <StyledCardHeader\r\n          isStaking={accountHasSharesStaked}\r\n          isAutoVault\r\n          earningToken={tokens.cake}\r\n          stakingToken={tokens.cake}\r\n        />\r\n        <StyledCardBody isLoading={isLoading}>\r\n          <AprRow pool={pool} performanceFee={performanceFeeAsDecimal} />\r\n          <Box mt=\"24px\">\r\n            <RecentCakeProfitRow />\r\n          </Box>\r\n          <Box mt=\"8px\">\r\n            <UnstakingFeeCountdownRow />\r\n          </Box>\r\n          <Flex mt=\"32px\" flexDirection=\"column\">\r\n            {account ? (\r\n              <VaultCardActions pool={pool} accountHasSharesStaked={accountHasSharesStaked} isLoading={isLoading} />\r\n            ) : (\r\n              <>\r\n                <Text mb=\"10px\" textTransform=\"uppercase\" fontSize=\"12px\" color=\"textSubtle\" bold>\r\n                  {t('Start earning')}\r\n                </Text>\r\n                <ConnectWalletButton />\r\n              </>\r\n            )}\r\n          </Flex>\r\n        </StyledCardBody>\r\n        <CardFooter pool={pool} account={account} />\r\n      </StyledCardInner>\r\n    </StyledCard>\r\n  )\r\n}\r\n\r\nexport default CakeVaultCard\r\n"],"mappings":"6MAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,MAAO,CAAAC,MAAM,KAAM,mBAAmB,CACtC,OAASC,GAAG,CAAEC,QAAQ,CAAEC,IAAI,CAAEC,IAAI,CAAEC,mBAAmB,KAAQ,oBAAoB,CACnF,OAASC,cAAc,KAAQ,uBAAuB,CACtD,OAASC,YAAY,KAAQ,kBAAkB,CAC/C,MAAO,CAAAC,mBAAmB,KAAM,gCAAgC,CAChE,MAAO,CAAAC,MAAM,KAAM,yBAAyB,CAC5C,OAASC,YAAY,KAAQ,mBAAmB,CAEhD,MAAO,CAAAC,MAAM,KAAM,oBAAoB,CACvC,OAASC,UAAU,CAAEC,eAAe,KAAQ,wBAAwB,CACpE,MAAO,CAAAC,UAAU,KAAM,wBAAwB,CAC/C,MAAO,CAAAC,gBAAgB,KAAM,8BAA8B,CAC3D,MAAO,CAAAC,gBAAgB,KAAM,oBAAoB,CACjD,MAAO,CAAAC,wBAAwB,KAAM,4BAA4B,CACjE,MAAO,CAAAC,mBAAmB,KAAM,uBAAuB,QAAAC,GAAA,IAAAC,IAAA,CAAAC,QAAA,IAAAC,SAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEvD,KAAM,CAAAC,cAAc,CAAGzB,MAAM,CAACE,QAAQ,CAAC,CAAAwB,eAAA,GAAAA,eAAA,CAAAC,sBAAA,8BACvBC,IAAA,MAAC,CAAEC,SAAU,CAAC,CAAAD,IAAA,OAAM,CAAAC,SAAS,CAAG,GAAG,CAAG,OAAO,EAAC,CAC7D,CAOD,KAAM,CAAAC,aAAuC,CAAGC,KAAA,EAA8B,IAA7B,CAAEC,IAAI,CAAEC,cAAe,CAAC,CAAAF,KAAA,CACvE,KAAM,CAAEG,CAAE,CAAC,CAAG5B,cAAc,CAAC,CAAC,CAC9B,KAAM,CAAE6B,IAAK,CAAC,CAAG9B,mBAAmB,CAAC,CAAC,CACtC,KAAM,CAAE+B,OAAQ,CAAC,CAAG7B,YAAY,CAAC,CAAC,CAClC,KAAM,CACJ8B,QAAQ,CAAE,CAAEC,UAAU,CAAET,SAAS,CAAEU,sBAAuB,CAAC,CAC3DC,IAAI,CAAE,CAAEC,cAAe,CACzB,CAAC,CAAG/B,YAAY,CAAC,CAAC,CAElB,KAAM,CAAAgC,sBAAsB,CAAGJ,UAAU,EAAIA,UAAU,CAACK,EAAE,CAAC,CAAC,CAAC,CAC7D,KAAM,CAAAd,SAAS,CAAG,CAACG,IAAI,CAACK,QAAQ,EAAIE,sBAAsB,CAC1D,KAAM,CAAAK,uBAAuB,CAAGH,cAAc,EAAIA,cAAc,CAAG,GAAG,CAEtE,GAAIR,cAAc,EAAI,CAACS,sBAAsB,CAAE,CAC7C,MAAO,KAAI,CACb,CAEA,mBACEtB,IAAA,CAACR,UAAU,EAACiC,UAAU,CAAE,CAAEC,SAAS,CAAEX,IAAK,CAAE,CAAAY,QAAA,cAC1CvB,KAAA,CAACX,eAAe,EAAAkC,QAAA,eACd3B,IAAA,CAACL,gBAAgB,EACfiC,SAAS,CAAEN,sBAAuB,CAClCO,WAAW,MACXC,YAAY,CAAEzC,MAAM,CAAC0C,IAAK,CAC1BC,YAAY,CAAE3C,MAAM,CAAC0C,IAAK,CAC3B,CAAC,cACF3B,KAAA,CAACC,cAAc,EAACI,SAAS,CAAEA,SAAU,CAAAkB,QAAA,eACnC3B,IAAA,CAACT,MAAM,EAACqB,IAAI,CAAEA,IAAK,CAACS,cAAc,CAAEG,uBAAwB,CAAE,CAAC,cAC/DxB,IAAA,CAACnB,GAAG,EAACoD,EAAE,CAAC,MAAM,CAAAN,QAAA,cACZ3B,IAAA,CAACF,mBAAmB,GAAE,CAAC,CACpB,CAAC,cACNE,IAAA,CAACnB,GAAG,EAACoD,EAAE,CAAC,KAAK,CAAAN,QAAA,cACX3B,IAAA,CAACH,wBAAwB,GAAE,CAAC,CACzB,CAAC,cACNG,IAAA,CAACjB,IAAI,EAACkD,EAAE,CAAC,MAAM,CAACC,aAAa,CAAC,QAAQ,CAAAP,QAAA,CACnCX,OAAO,cACNhB,IAAA,CAACJ,gBAAgB,EAACgB,IAAI,CAAEA,IAAK,CAACU,sBAAsB,CAAEA,sBAAuB,CAACb,SAAS,CAAEA,SAAU,CAAE,CAAC,cAEtGL,KAAA,CAAAF,SAAA,EAAAyB,QAAA,eACE3B,IAAA,CAAChB,IAAI,EAACmD,EAAE,CAAC,MAAM,CAACC,aAAa,CAAC,WAAW,CAACC,QAAQ,CAAC,MAAM,CAACC,KAAK,CAAC,YAAY,CAACC,IAAI,MAAAZ,QAAA,CAC9Eb,CAAC,CAAC,eAAe,CAAC,CACf,CAAC,cACPd,IAAA,CAACZ,mBAAmB,GAAE,CAAC,EACvB,CACH,CACG,CAAC,EACO,CAAC,cACjBY,IAAA,CAACN,UAAU,EAACkB,IAAI,CAAEA,IAAK,CAACI,OAAO,CAAEA,OAAQ,CAAE,CAAC,EAC7B,CAAC,CACR,CAAC,CAEjB,CAAC,CAED,cAAe,CAAAN,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module"}