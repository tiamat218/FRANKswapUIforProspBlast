{"ast":null,"code":"import React from'react';import{useTranslation}from'contexts/Localization';import{useWeb3React}from'@web3-react/core';import ConnectWalletButton from'components/ConnectWalletButton';import ContributeButton from'./ContributeButton';import ClaimButton from'./ClaimButton';import{SkeletonCardActions}from'./Skeletons';import{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";const IfoCardActions=_ref=>{let{poolId,ifo,publicIfoData,walletIfoData,hasProfile,isLoading}=_ref;const{t}=useTranslation();const{account}=useWeb3React();const userPoolCharacteristics=walletIfoData[poolId];if(isLoading){return/*#__PURE__*/_jsx(SkeletonCardActions,{});}if(!account){return/*#__PURE__*/_jsx(ConnectWalletButton,{width:\"100%\"});}/*   if (!hasProfile) {\r\n    return (\r\n      <Button as={Link} to=\"/profile\" width=\"100%\">\r\n        {t('Activate your Profile')}\r\n      </Button>\r\n    )\r\n  } */return/*#__PURE__*/_jsxs(_Fragment,{children:[publicIfoData.status==='live'&&/*#__PURE__*/_jsx(ContributeButton,{poolId:poolId,ifo:ifo,publicIfoData:publicIfoData,walletIfoData:walletIfoData}),publicIfoData.status==='finished'&&!userPoolCharacteristics.hasClaimed&&(userPoolCharacteristics.offeringAmountInToken.isGreaterThan(0)||userPoolCharacteristics.refundingAmountInLP.isGreaterThan(0))&&/*#__PURE__*/_jsx(ClaimButton,{poolId:poolId,ifoVersion:ifo.version,walletIfoData:walletIfoData})]});};export default IfoCardActions;","map":{"version":3,"names":["React","useTranslation","useWeb3React","ConnectWalletButton","ContributeButton","ClaimButton","SkeletonCardActions","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","IfoCardActions","_ref","poolId","ifo","publicIfoData","walletIfoData","hasProfile","isLoading","t","account","userPoolCharacteristics","width","children","status","hasClaimed","offeringAmountInToken","isGreaterThan","refundingAmountInLP","ifoVersion","version"],"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/views/Ifos/components/IfoFoldableCard/IfoPoolCard/IfoCardActions.tsx"],"sourcesContent":["import React from 'react'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { Button } from '@pancakeswap/uikit'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { Link } from 'react-router-dom'\r\nimport { Ifo, PoolIds } from 'config/constants/types'\r\nimport { WalletIfoData, PublicIfoData } from 'views/Ifos/types'\r\nimport ConnectWalletButton from 'components/ConnectWalletButton'\r\nimport ContributeButton from './ContributeButton'\r\nimport ClaimButton from './ClaimButton'\r\nimport { SkeletonCardActions } from './Skeletons'\r\n\r\ninterface Props {\r\n  poolId: PoolIds\r\n  ifo: Ifo\r\n  publicIfoData: PublicIfoData\r\n  walletIfoData: WalletIfoData\r\n  hasProfile: boolean\r\n  isLoading: boolean\r\n}\r\n\r\nconst IfoCardActions: React.FC<Props> = ({ poolId, ifo, publicIfoData, walletIfoData, hasProfile, isLoading }) => {\r\n  const { t } = useTranslation()\r\n  const { account } = useWeb3React()\r\n  const userPoolCharacteristics = walletIfoData[poolId]\r\n\r\n  if (isLoading) {\r\n    return <SkeletonCardActions />\r\n  }\r\n\r\n  if (!account) {\r\n    return <ConnectWalletButton width=\"100%\" />\r\n  }\r\n\r\n/*   if (!hasProfile) {\r\n    return (\r\n      <Button as={Link} to=\"/profile\" width=\"100%\">\r\n        {t('Activate your Profile')}\r\n      </Button>\r\n    )\r\n  } */\r\n\r\n  return (\r\n    <>\r\n      {publicIfoData.status === 'live' && (\r\n        <ContributeButton poolId={poolId} ifo={ifo} publicIfoData={publicIfoData} walletIfoData={walletIfoData} />\r\n      )}\r\n      {publicIfoData.status === 'finished' &&\r\n        !userPoolCharacteristics.hasClaimed &&\r\n        (userPoolCharacteristics.offeringAmountInToken.isGreaterThan(0) ||\r\n          userPoolCharacteristics.refundingAmountInLP.isGreaterThan(0)) && (\r\n          <ClaimButton poolId={poolId} ifoVersion={ifo.version} walletIfoData={walletIfoData} />\r\n        )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default IfoCardActions\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,cAAc,KAAQ,uBAAuB,CAEtD,OAASC,YAAY,KAAQ,kBAAkB,CAI/C,MAAO,CAAAC,mBAAmB,KAAM,gCAAgC,CAChE,MAAO,CAAAC,gBAAgB,KAAM,oBAAoB,CACjD,MAAO,CAAAC,WAAW,KAAM,eAAe,CACvC,OAASC,mBAAmB,KAAQ,aAAa,QAAAC,GAAA,IAAAC,IAAA,CAAAC,QAAA,IAAAC,SAAA,CAAAC,IAAA,IAAAC,KAAA,yBAWjD,KAAM,CAAAC,cAA+B,CAAGC,IAAA,EAA0E,IAAzE,CAAEC,MAAM,CAAEC,GAAG,CAAEC,aAAa,CAAEC,aAAa,CAAEC,UAAU,CAAEC,SAAU,CAAC,CAAAN,IAAA,CAC3G,KAAM,CAAEO,CAAE,CAAC,CAAGpB,cAAc,CAAC,CAAC,CAC9B,KAAM,CAAEqB,OAAQ,CAAC,CAAGpB,YAAY,CAAC,CAAC,CAClC,KAAM,CAAAqB,uBAAuB,CAAGL,aAAa,CAACH,MAAM,CAAC,CAErD,GAAIK,SAAS,CAAE,CACb,mBAAOZ,IAAA,CAACF,mBAAmB,GAAE,CAAC,CAChC,CAEA,GAAI,CAACgB,OAAO,CAAE,CACZ,mBAAOd,IAAA,CAACL,mBAAmB,EAACqB,KAAK,CAAC,MAAM,CAAE,CAAC,CAC7C,CAEF;AACA;AACA;AACA;AACA;AACA;AACA,MAEE,mBACEZ,KAAA,CAAAF,SAAA,EAAAe,QAAA,EACGR,aAAa,CAACS,MAAM,GAAK,MAAM,eAC9BlB,IAAA,CAACJ,gBAAgB,EAACW,MAAM,CAAEA,MAAO,CAACC,GAAG,CAAEA,GAAI,CAACC,aAAa,CAAEA,aAAc,CAACC,aAAa,CAAEA,aAAc,CAAE,CAC1G,CACAD,aAAa,CAACS,MAAM,GAAK,UAAU,EAClC,CAACH,uBAAuB,CAACI,UAAU,GAClCJ,uBAAuB,CAACK,qBAAqB,CAACC,aAAa,CAAC,CAAC,CAAC,EAC7DN,uBAAuB,CAACO,mBAAmB,CAACD,aAAa,CAAC,CAAC,CAAC,CAAC,eAC7DrB,IAAA,CAACH,WAAW,EAACU,MAAM,CAAEA,MAAO,CAACgB,UAAU,CAAEf,GAAG,CAACgB,OAAQ,CAACd,aAAa,CAAEA,aAAc,CAAE,CACtF,EACH,CAAC,CAEP,CAAC,CAED,cAAe,CAAAL,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module"}