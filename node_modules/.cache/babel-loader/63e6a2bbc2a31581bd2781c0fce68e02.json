{"ast":null,"code":"import _taggedTemplateLiteral from\"C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2,_templateObject3;import React,{useEffect,useState}from'react';import styled from'styled-components';import BigNumber from'bignumber.js';import{Card,CardBody,Heading,Text,Input as UIKitInput,Button,AutoRenewIcon,CheckmarkIcon,Flex,WarningIcon,useModal,Skeleton,Checkbox}from'@pancakeswap/uikit';import{parseISO,formatDistance}from'date-fns';import{useWeb3React}from'@web3-react/core';import useToast from'hooks/useToast';import{signMessage}from'utils/web3React';import useWeb3Provider from'hooks/useActiveWeb3React';import{useTranslation}from'contexts/Localization';import useHasCakeBalance from'hooks/useHasCakeBalance';import{DEFAULT_TOKEN_DECIMAL}from'config';import debounce from'lodash/debounce';import ConfirmProfileCreationModal from'../components/ConfirmProfileCreationModal';import useProfileCreation from'./contexts/hook';import{USERNAME_MIN_LENGTH,USERNAME_MAX_LENGTH,REGISTER_COST}from'./config';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";var ExistingUserState;// username has not been created\n(function(ExistingUserState){ExistingUserState[\"IDLE\"]=\"idle\";ExistingUserState[\"CREATED\"]=\"created\";ExistingUserState[\"NEW\"]=\"new\";})(ExistingUserState||(ExistingUserState={}));const profileApiUrl=process.env.REACT_APP_API_PROFILE;const minimumCakeToRegister=new BigNumber(REGISTER_COST).multipliedBy(DEFAULT_TOKEN_DECIMAL);const InputWrap=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  position: relative;\\n  max-width: 240px;\\n\"])));const Input=styled(UIKitInput)(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  padding-right: 40px;\\n\"])));const Indicator=styled(Flex)(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  align-items: center;\\n  height: 24px;\\n  justify-content: center;\\n  margin-top: -12px;\\n  position: absolute;\\n  right: 16px;\\n  top: 50%;\\n  width: 24px;\\n\"])));const UserName=()=>{const[isAcknowledged,setIsAcknowledged]=useState(false);const{teamId,selectedNft,userName,actions,minimumCakeRequired,allowance}=useProfileCreation();const{t}=useTranslation();const{account}=useWeb3React();const{toastError}=useToast();const{library}=useWeb3Provider();const[existingUserState,setExistingUserState]=useState(ExistingUserState.IDLE);const[isValid,setIsValid]=useState(false);const[isLoading,setIsLoading]=useState(false);const[message,setMessage]=useState('');const hasMinimumCakeRequired=useHasCakeBalance(minimumCakeToRegister);const[onPresentConfirmProfileCreation]=useModal(/*#__PURE__*/_jsx(ConfirmProfileCreationModal,{userName:userName,selectedNft:selectedNft,account:account,teamId:teamId,minimumCakeRequired:minimumCakeRequired,allowance:allowance}),false);const isUserCreated=existingUserState===ExistingUserState.CREATED;const checkUsernameValidity=debounce(async value=>{try{setIsLoading(true);const res=await fetch(\"\".concat(profileApiUrl,\"/api/users/valid/\").concat(value));if(res.ok){setIsValid(true);setMessage('');}else{var _data$error;const data=await res.json();setIsValid(false);setMessage(data===null||data===void 0?void 0:(_data$error=data.error)===null||_data$error===void 0?void 0:_data$error.message);}}finally{setIsLoading(false);}},200);const handleChange=event=>{const{value}=event.target;actions.setUserName(value);checkUsernameValidity(value);};const handleConfirm=async()=>{try{setIsLoading(true);const signature=await signMessage(library,account,userName);const response=await fetch(\"\".concat(profileApiUrl,\"/api/users/register\"),{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({address:account,username:userName,signature})});if(response.ok){setExistingUserState(ExistingUserState.CREATED);}else{var _data$error2;const data=await response.json();toastError(t('Error'),data===null||data===void 0?void 0:(_data$error2=data.error)===null||_data$error2===void 0?void 0:_data$error2.message);}}catch(error){toastError((error===null||error===void 0?void 0:error.message)?error.message:JSON.stringify(error));}finally{setIsLoading(false);}};const handleAcknowledge=()=>setIsAcknowledged(!isAcknowledged);// Perform an initial check to see if the wallet has already created a username\nuseEffect(()=>{const fetchUser=async()=>{try{const response=await fetch(\"\".concat(profileApiUrl,\"/api/users/\").concat(account));const data=await response.json();if(response.ok){const dateCreated=formatDistance(parseISO(data.created_at),new Date());setMessage(t('Created %dateCreated% ago',{dateCreated}));actions.setUserName(data.username);setExistingUserState(ExistingUserState.CREATED);setIsValid(true);}else{setExistingUserState(ExistingUserState.NEW);}}catch(error){toastError(t('Error'),t('Unable to verify username'));}};if(account){fetchUser();}},[account,setExistingUserState,setIsValid,setMessage,actions,toastError,t]);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Text,{fontSize:\"20px\",color:\"textSubtle\",bold:true,children:t('Step %num%',{num:4})}),/*#__PURE__*/_jsx(Heading,{as:\"h3\",scale:\"xl\",mb:\"24px\",children:t('Set Your Name')}),/*#__PURE__*/_jsx(Text,{as:\"p\",mb:\"24px\",children:t('This name will be shown in team leaderboards and search results as long as your profile is active.')}),/*#__PURE__*/_jsx(Card,{mb:\"24px\",children:/*#__PURE__*/_jsxs(CardBody,{children:[/*#__PURE__*/_jsx(Heading,{as:\"h4\",scale:\"lg\",mb:\"8px\",children:t('Set Your Name')}),/*#__PURE__*/_jsx(Text,{as:\"p\",color:\"textSubtle\",mb:\"24px\",children:t('Your name must be at least 3 and at most 15 standard letters and numbers long. You canâ€™t change this once you click Confirm.')}),existingUserState===ExistingUserState.IDLE?/*#__PURE__*/_jsx(Skeleton,{height:\"40px\",width:\"240px\"}):/*#__PURE__*/_jsxs(InputWrap,{children:[/*#__PURE__*/_jsx(Input,{onChange:handleChange,isWarning:userName&&!isValid,isSuccess:userName&&isValid,minLength:USERNAME_MIN_LENGTH,maxLength:USERNAME_MAX_LENGTH,disabled:isUserCreated,placeholder:t('Enter your name...'),value:userName}),/*#__PURE__*/_jsxs(Indicator,{children:[isLoading&&/*#__PURE__*/_jsx(AutoRenewIcon,{spin:true}),!isLoading&&isValid&&userName&&/*#__PURE__*/_jsx(CheckmarkIcon,{color:\"success\"}),!isLoading&&!isValid&&userName&&/*#__PURE__*/_jsx(WarningIcon,{color:\"failure\"})]})]}),/*#__PURE__*/_jsx(Text,{color:\"textSubtle\",fontSize:\"14px\",py:\"4px\",mb:\"16px\",style:{minHeight:'30px'},children:message}),/*#__PURE__*/_jsx(Text,{as:\"p\",color:\"failure\",mb:\"8px\",children:t(\"Only reuse a name from other social media if you're OK with people viewing your wallet. You can't change your name once you click Confirm.\")}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"checkbox\",style:{display:'block',cursor:'pointer',marginBottom:'24px'},children:/*#__PURE__*/_jsxs(Flex,{alignItems:\"center\",children:[/*#__PURE__*/_jsx(\"div\",{style:{flex:'none'},children:/*#__PURE__*/_jsx(Checkbox,{id:\"checkbox\",scale:\"sm\",checked:isAcknowledged,onChange:handleAcknowledge})}),/*#__PURE__*/_jsx(Text,{ml:\"8px\",children:t('I understand that people can view my wallet if they know my username')})]})}),/*#__PURE__*/_jsx(Button,{onClick:handleConfirm,disabled:!isValid||isUserCreated||isLoading||!isAcknowledged,children:t('Confirm')})]})}),/*#__PURE__*/_jsx(Button,{onClick:onPresentConfirmProfileCreation,disabled:!isValid||!isUserCreated,id:\"completeProfileCreation\",children:t('Complete Profile')}),!hasMinimumCakeRequired&&/*#__PURE__*/_jsx(Text,{color:\"failure\",mt:\"16px\",children:t('A minimum of %num% CAKE is required',{num:REGISTER_COST})})]});};export default UserName;","map":{"version":3,"names":["React","useEffect","useState","styled","BigNumber","Card","CardBody","Heading","Text","Input","UIKitInput","Button","AutoRenewIcon","CheckmarkIcon","Flex","WarningIcon","useModal","Skeleton","Checkbox","parseISO","formatDistance","useWeb3React","useToast","signMessage","useWeb3Provider","useTranslation","useHasCakeBalance","DEFAULT_TOKEN_DECIMAL","debounce","ConfirmProfileCreationModal","useProfileCreation","USERNAME_MIN_LENGTH","USERNAME_MAX_LENGTH","REGISTER_COST","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","ExistingUserState","profileApiUrl","process","env","REACT_APP_API_PROFILE","minimumCakeToRegister","multipliedBy","InputWrap","div","_templateObject","_taggedTemplateLiteral","_templateObject2","Indicator","_templateObject3","UserName","isAcknowledged","setIsAcknowledged","teamId","selectedNft","userName","actions","minimumCakeRequired","allowance","t","account","toastError","library","existingUserState","setExistingUserState","IDLE","isValid","setIsValid","isLoading","setIsLoading","message","setMessage","hasMinimumCakeRequired","onPresentConfirmProfileCreation","isUserCreated","CREATED","checkUsernameValidity","value","res","fetch","concat","ok","_data$error","data","json","error","handleChange","event","target","setUserName","handleConfirm","signature","response","method","headers","body","JSON","stringify","address","username","_data$error2","handleAcknowledge","fetchUser","dateCreated","created_at","Date","NEW","children","fontSize","color","bold","num","as","scale","mb","height","width","onChange","isWarning","isSuccess","minLength","maxLength","disabled","placeholder","spin","py","style","minHeight","htmlFor","display","cursor","marginBottom","alignItems","flex","id","checked","ml","onClick","mt"],"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/views/Profile/ProfileCreation/UserName.tsx"],"sourcesContent":["import React, { ChangeEvent, useEffect, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport BigNumber from 'bignumber.js'\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Heading,\r\n  Text,\r\n  Input as UIKitInput,\r\n  Button,\r\n  AutoRenewIcon,\r\n  CheckmarkIcon,\r\n  Flex,\r\n  WarningIcon,\r\n  useModal,\r\n  Skeleton,\r\n  Checkbox,\r\n} from '@pancakeswap/uikit'\r\nimport { parseISO, formatDistance } from 'date-fns'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport useToast from 'hooks/useToast'\r\nimport { signMessage } from 'utils/web3React'\r\nimport useWeb3Provider from 'hooks/useActiveWeb3React'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useHasCakeBalance from 'hooks/useHasCakeBalance'\r\nimport { DEFAULT_TOKEN_DECIMAL } from 'config'\r\nimport debounce from 'lodash/debounce'\r\nimport ConfirmProfileCreationModal from '../components/ConfirmProfileCreationModal'\r\nimport useProfileCreation from './contexts/hook'\r\nimport { USERNAME_MIN_LENGTH, USERNAME_MAX_LENGTH, REGISTER_COST } from './config'\r\n\r\nenum ExistingUserState {\r\n  IDLE = 'idle', // initial state\r\n  CREATED = 'created', // username has already been created\r\n  NEW = 'new', // username has not been created\r\n}\r\n\r\nconst profileApiUrl = process.env.REACT_APP_API_PROFILE\r\nconst minimumCakeToRegister = new BigNumber(REGISTER_COST).multipliedBy(DEFAULT_TOKEN_DECIMAL)\r\n\r\nconst InputWrap = styled.div`\r\n  position: relative;\r\n  max-width: 240px;\r\n`\r\n\r\nconst Input = styled(UIKitInput)`\r\n  padding-right: 40px;\r\n`\r\n\r\nconst Indicator = styled(Flex)`\r\n  align-items: center;\r\n  height: 24px;\r\n  justify-content: center;\r\n  margin-top: -12px;\r\n  position: absolute;\r\n  right: 16px;\r\n  top: 50%;\r\n  width: 24px;\r\n`\r\n\r\nconst UserName: React.FC = () => {\r\n  const [isAcknowledged, setIsAcknowledged] = useState(false)\r\n  const { teamId, selectedNft, userName, actions, minimumCakeRequired, allowance } = useProfileCreation()\r\n  const { t } = useTranslation()\r\n  const { account } = useWeb3React()\r\n  const { toastError } = useToast()\r\n  const { library } = useWeb3Provider()\r\n  const [existingUserState, setExistingUserState] = useState<ExistingUserState>(ExistingUserState.IDLE)\r\n  const [isValid, setIsValid] = useState(false)\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [message, setMessage] = useState('')\r\n  const hasMinimumCakeRequired = useHasCakeBalance(minimumCakeToRegister)\r\n  const [onPresentConfirmProfileCreation] = useModal(\r\n    <ConfirmProfileCreationModal\r\n      userName={userName}\r\n      selectedNft={selectedNft}\r\n      account={account}\r\n      teamId={teamId}\r\n      minimumCakeRequired={minimumCakeRequired}\r\n      allowance={allowance}\r\n    />,\r\n    false,\r\n  )\r\n  const isUserCreated = existingUserState === ExistingUserState.CREATED\r\n\r\n  const checkUsernameValidity = debounce(async (value: string) => {\r\n    try {\r\n      setIsLoading(true)\r\n      const res = await fetch(`${profileApiUrl}/api/users/valid/${value}`)\r\n\r\n      if (res.ok) {\r\n        setIsValid(true)\r\n        setMessage('')\r\n      } else {\r\n        const data = await res.json()\r\n        setIsValid(false)\r\n        setMessage(data?.error?.message)\r\n      }\r\n    } finally {\r\n      setIsLoading(false)\r\n    }\r\n  }, 200)\r\n\r\n  const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n    const { value } = event.target\r\n    actions.setUserName(value)\r\n    checkUsernameValidity(value)\r\n  }\r\n\r\n  const handleConfirm = async () => {\r\n    try {\r\n      setIsLoading(true)\r\n\r\n      const signature = await signMessage(library, account, userName)\r\n      const response = await fetch(`${profileApiUrl}/api/users/register`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          address: account,\r\n          username: userName,\r\n          signature,\r\n        }),\r\n      })\r\n\r\n      if (response.ok) {\r\n        setExistingUserState(ExistingUserState.CREATED)\r\n      } else {\r\n        const data = await response.json()\r\n        toastError(t('Error'), data?.error?.message)\r\n      }\r\n    } catch (error) {\r\n      toastError(error?.message ? error.message : JSON.stringify(error))\r\n    } finally {\r\n      setIsLoading(false)\r\n    }\r\n  }\r\n\r\n  const handleAcknowledge = () => setIsAcknowledged(!isAcknowledged)\r\n\r\n  // Perform an initial check to see if the wallet has already created a username\r\n  useEffect(() => {\r\n    const fetchUser = async () => {\r\n      try {\r\n        const response = await fetch(`${profileApiUrl}/api/users/${account}`)\r\n        const data = await response.json()\r\n\r\n        if (response.ok) {\r\n          const dateCreated = formatDistance(parseISO(data.created_at), new Date())\r\n          setMessage(t('Created %dateCreated% ago', { dateCreated }))\r\n\r\n          actions.setUserName(data.username)\r\n          setExistingUserState(ExistingUserState.CREATED)\r\n          setIsValid(true)\r\n        } else {\r\n          setExistingUserState(ExistingUserState.NEW)\r\n        }\r\n      } catch (error) {\r\n        toastError(t('Error'), t('Unable to verify username'))\r\n      }\r\n    }\r\n\r\n    if (account) {\r\n      fetchUser()\r\n    }\r\n  }, [account, setExistingUserState, setIsValid, setMessage, actions, toastError, t])\r\n\r\n  return (\r\n    <>\r\n      <Text fontSize=\"20px\" color=\"textSubtle\" bold>\r\n        {t('Step %num%', { num: 4 })}\r\n      </Text>\r\n      <Heading as=\"h3\" scale=\"xl\" mb=\"24px\">\r\n        {t('Set Your Name')}\r\n      </Heading>\r\n      <Text as=\"p\" mb=\"24px\">\r\n        {t('This name will be shown in team leaderboards and search results as long as your profile is active.')}\r\n      </Text>\r\n      <Card mb=\"24px\">\r\n        <CardBody>\r\n          <Heading as=\"h4\" scale=\"lg\" mb=\"8px\">\r\n            {t('Set Your Name')}\r\n          </Heading>\r\n          <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\r\n            {t(\r\n              'Your name must be at least 3 and at most 15 standard letters and numbers long. You canâ€™t change this once you click Confirm.',\r\n            )}\r\n          </Text>\r\n          {existingUserState === ExistingUserState.IDLE ? (\r\n            <Skeleton height=\"40px\" width=\"240px\" />\r\n          ) : (\r\n            <InputWrap>\r\n              <Input\r\n                onChange={handleChange}\r\n                isWarning={userName && !isValid}\r\n                isSuccess={userName && isValid}\r\n                minLength={USERNAME_MIN_LENGTH}\r\n                maxLength={USERNAME_MAX_LENGTH}\r\n                disabled={isUserCreated}\r\n                placeholder={t('Enter your name...')}\r\n                value={userName}\r\n              />\r\n              <Indicator>\r\n                {isLoading && <AutoRenewIcon spin />}\r\n                {!isLoading && isValid && userName && <CheckmarkIcon color=\"success\" />}\r\n                {!isLoading && !isValid && userName && <WarningIcon color=\"failure\" />}\r\n              </Indicator>\r\n            </InputWrap>\r\n          )}\r\n          <Text color=\"textSubtle\" fontSize=\"14px\" py=\"4px\" mb=\"16px\" style={{ minHeight: '30px' }}>\r\n            {message}\r\n          </Text>\r\n          <Text as=\"p\" color=\"failure\" mb=\"8px\">\r\n            {t(\r\n              \"Only reuse a name from other social media if you're OK with people viewing your wallet. You can't change your name once you click Confirm.\",\r\n            )}\r\n          </Text>\r\n          <label htmlFor=\"checkbox\" style={{ display: 'block', cursor: 'pointer', marginBottom: '24px' }}>\r\n            <Flex alignItems=\"center\">\r\n              <div style={{ flex: 'none' }}>\r\n                <Checkbox id=\"checkbox\" scale=\"sm\" checked={isAcknowledged} onChange={handleAcknowledge} />\r\n              </div>\r\n              <Text ml=\"8px\">{t('I understand that people can view my wallet if they know my username')}</Text>\r\n            </Flex>\r\n          </label>\r\n          <Button onClick={handleConfirm} disabled={!isValid || isUserCreated || isLoading || !isAcknowledged}>\r\n            {t('Confirm')}\r\n          </Button>\r\n        </CardBody>\r\n      </Card>\r\n      <Button\r\n        onClick={onPresentConfirmProfileCreation}\r\n        disabled={!isValid || !isUserCreated}\r\n        id=\"completeProfileCreation\"\r\n      >\r\n        {t('Complete Profile')}\r\n      </Button>\r\n      {!hasMinimumCakeRequired && (\r\n        <Text color=\"failure\" mt=\"16px\">\r\n          {t('A minimum of %num% CAKE is required', { num: REGISTER_COST })}\r\n        </Text>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default UserName\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}