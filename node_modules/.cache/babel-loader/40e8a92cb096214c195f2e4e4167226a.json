{"ast":null,"code":"import _taggedTemplateLiteral from\"C:/Users/frkul/Documents/swapUI_pancake-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject;import React from'react';import styled from'styled-components';import BigNumber from'bignumber.js';import{Button,useModal,IconButton,AddIcon,MinusIcon,Skeleton,useTooltip,Flex,Text}from'@pancakeswap/uikit';import ConnectWalletButton from'components/ConnectWalletButton';import{useWeb3React}from'@web3-react/core';import{useCakeVault}from'state/pools/hooks';import Balance from'components/Balance';import{useTranslation}from'contexts/Localization';import{getBalanceNumber}from'utils/formatBalance';import{PoolCategory}from'config/constants/types';import{BIG_ZERO}from'utils/bigNumber';import{getAddress}from'utils/addressHelpers';import{useERC20}from'hooks/useContract';import{convertSharesToCake}from'views/Pools/helpers';import{ActionContainer,ActionTitles,ActionContent}from'./styles';import NotEnoughTokensModal from'../../PoolCard/Modals/NotEnoughTokensModal';import StakeModal from'../../PoolCard/Modals/StakeModal';import VaultStakeModal from'../../CakeVaultCard/VaultStakeModal';import{useCheckVaultApprovalStatus,useApprovePool,useVaultApprove}from'../../../hooks/useApprove';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const IconButtonWrapper=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  display: flex;\\n\"])));const Staked=_ref=>{let{pool,userDataLoaded}=_ref;const{sousId,stakingToken,earningToken,stakingLimit,isFinished,poolCategory,userData,stakingTokenPrice,isAutoVault}=pool;const{t}=useTranslation();const{account}=useWeb3React();const stakingTokenContract=useERC20(stakingToken.address?getAddress(stakingToken.address):'');const{handleApprove:handlePoolApprove,requestedApproval:requestedPoolApproval}=useApprovePool(stakingTokenContract,sousId,earningToken.symbol);const{isVaultApproved,setLastUpdated}=useCheckVaultApprovalStatus();const{handleApprove:handleVaultApprove,requestedApproval:requestedVaultApproval}=useVaultApprove(setLastUpdated);const handleApprove=isAutoVault?handleVaultApprove:handlePoolApprove;const requestedApproval=isAutoVault?requestedVaultApproval:requestedPoolApproval;const isBnbPool=poolCategory===PoolCategory.BINANCE;const allowance=(userData===null||userData===void 0?void 0:userData.allowance)?new BigNumber(userData.allowance):BIG_ZERO;const stakedBalance=(userData===null||userData===void 0?void 0:userData.stakedBalance)?new BigNumber(userData.stakedBalance):BIG_ZERO;const isNotVaultAndHasStake=!isAutoVault&&stakedBalance.gt(0);const stakingTokenBalance=(userData===null||userData===void 0?void 0:userData.stakingTokenBalance)?new BigNumber(userData.stakingTokenBalance):BIG_ZERO;const stakedTokenBalance=getBalanceNumber(stakedBalance,stakingToken.decimals);const stakedTokenDollarBalance=getBalanceNumber(stakedBalance.multipliedBy(stakingTokenPrice),stakingToken.decimals);const{userData:{userShares},pricePerFullShare}=useCakeVault();const{cakeAsBigNumber,cakeAsNumberBalance}=convertSharesToCake(userShares,pricePerFullShare);const hasSharesStaked=userShares&&userShares.gt(0);const isVaultWithShares=isAutoVault&&hasSharesStaked;const stakedAutoDollarValue=getBalanceNumber(cakeAsBigNumber.multipliedBy(stakingTokenPrice),stakingToken.decimals);const needsApproval=isAutoVault?!isVaultApproved:!allowance.gt(0)&&!isBnbPool;const[onPresentTokenRequired]=useModal(/*#__PURE__*/_jsx(NotEnoughTokensModal,{tokenSymbol:stakingToken.symbol}));const[onPresentStake]=useModal(/*#__PURE__*/_jsx(StakeModal,{isBnbPool:isBnbPool,pool:pool,stakingTokenBalance:stakingTokenBalance,stakingTokenPrice:stakingTokenPrice}));const[onPresentVaultStake]=useModal(/*#__PURE__*/_jsx(VaultStakeModal,{stakingMax:stakingTokenBalance,pool:pool}));const[onPresentUnstake]=useModal(/*#__PURE__*/_jsx(StakeModal,{stakingTokenBalance:stakingTokenBalance,isBnbPool:isBnbPool,pool:pool,stakingTokenPrice:stakingTokenPrice,isRemovingStake:true}));const[onPresentVaultUnstake]=useModal(/*#__PURE__*/_jsx(VaultStakeModal,{stakingMax:cakeAsBigNumber,pool:pool,isRemovingStake:true}));const onStake=()=>{if(isAutoVault){onPresentVaultStake();}else{onPresentStake();}};const onUnstake=()=>{if(isAutoVault){onPresentVaultUnstake();}else{onPresentUnstake();}};const{targetRef,tooltip,tooltipVisible}=useTooltip(t(\"You've already staked the maximum amount you can stake in this pool!\"),{placement:'bottom'});const reachStakingLimit=stakingLimit.gt(0)&&userData.stakedBalance.gte(stakingLimit);if(!account){return/*#__PURE__*/_jsxs(ActionContainer,{children:[/*#__PURE__*/_jsx(ActionTitles,{children:/*#__PURE__*/_jsx(Text,{fontSize:\"12px\",bold:true,color:\"textSubtle\",as:\"span\",textTransform:\"uppercase\",children:t('Start staking')})}),/*#__PURE__*/_jsx(ActionContent,{children:/*#__PURE__*/_jsx(ConnectWalletButton,{width:\"100%\"})})]});}if(!userDataLoaded){return/*#__PURE__*/_jsxs(ActionContainer,{children:[/*#__PURE__*/_jsx(ActionTitles,{children:/*#__PURE__*/_jsx(Text,{fontSize:\"12px\",bold:true,color:\"textSubtle\",as:\"span\",textTransform:\"uppercase\",children:t('Start staking')})}),/*#__PURE__*/_jsx(ActionContent,{children:/*#__PURE__*/_jsx(Skeleton,{width:180,height:\"32px\",marginTop:14})})]});}if(needsApproval){return/*#__PURE__*/_jsxs(ActionContainer,{children:[/*#__PURE__*/_jsx(ActionTitles,{children:/*#__PURE__*/_jsx(Text,{fontSize:\"12px\",bold:true,color:\"textSubtle\",as:\"span\",textTransform:\"uppercase\",children:t('Enable pool')})}),/*#__PURE__*/_jsx(ActionContent,{children:/*#__PURE__*/_jsx(Button,{width:\"100%\",disabled:requestedApproval,onClick:handleApprove,variant:\"secondary\",children:t('Enable')})})]});}// Wallet connected, user data loaded and approved\nif(isNotVaultAndHasStake||isVaultWithShares){return/*#__PURE__*/_jsxs(ActionContainer,{children:[/*#__PURE__*/_jsxs(ActionTitles,{children:[/*#__PURE__*/_jsxs(Text,{fontSize:\"12px\",bold:true,color:\"secondary\",as:\"span\",textTransform:\"uppercase\",children:[stakingToken.symbol,' ']}),/*#__PURE__*/_jsx(Text,{fontSize:\"12px\",bold:true,color:\"textSubtle\",as:\"span\",textTransform:\"uppercase\",children:isAutoVault?t('Staked (compounding)'):t('Staked')})]}),/*#__PURE__*/_jsxs(ActionContent,{children:[/*#__PURE__*/_jsxs(Flex,{flex:\"1\",pt:\"16px\",flexDirection:\"column\",alignSelf:\"flex-start\",children:[/*#__PURE__*/_jsx(Balance,{lineHeight:\"1\",bold:true,fontSize:\"20px\",decimals:5,value:isAutoVault?cakeAsNumberBalance:stakedTokenBalance}),/*#__PURE__*/_jsx(Balance,{fontSize:\"12px\",display:\"inline\",color:\"textSubtle\",decimals:2,value:isAutoVault?stakedAutoDollarValue:stakedTokenDollarBalance,unit:\" USD\",prefix:\"~\"})]}),/*#__PURE__*/_jsxs(IconButtonWrapper,{children:[/*#__PURE__*/_jsx(IconButton,{variant:\"secondary\",onClick:onUnstake,mr:\"6px\",children:/*#__PURE__*/_jsx(MinusIcon,{color:\"primary\",width:\"14px\"})}),reachStakingLimit?/*#__PURE__*/_jsx(\"span\",{ref:targetRef,children:/*#__PURE__*/_jsx(IconButton,{variant:\"secondary\",disabled:true,children:/*#__PURE__*/_jsx(AddIcon,{color:\"textDisabled\",width:\"24px\",height:\"24px\"})})}):/*#__PURE__*/_jsx(IconButton,{variant:\"secondary\",onClick:stakingTokenBalance.gt(0)?onStake:onPresentTokenRequired,disabled:isFinished,children:/*#__PURE__*/_jsx(AddIcon,{color:\"primary\",width:\"14px\"})})]}),tooltipVisible&&tooltip]})]});}return/*#__PURE__*/_jsxs(ActionContainer,{children:[/*#__PURE__*/_jsxs(ActionTitles,{children:[/*#__PURE__*/_jsxs(Text,{fontSize:\"12px\",bold:true,color:\"secondary\",as:\"span\",textTransform:\"uppercase\",children:[t('Stake'),' ']}),/*#__PURE__*/_jsx(Text,{fontSize:\"12px\",bold:true,color:\"textSubtle\",as:\"span\",textTransform:\"uppercase\",children:stakingToken.symbol})]}),/*#__PURE__*/_jsx(ActionContent,{children:/*#__PURE__*/_jsx(Button,{width:\"100%\",onClick:stakingTokenBalance.gt(0)?onStake:onPresentTokenRequired,variant:\"secondary\",disabled:isFinished,children:t('Stake')})})]});};export default Staked;","map":{"version":3,"names":["React","styled","BigNumber","Button","useModal","IconButton","AddIcon","MinusIcon","Skeleton","useTooltip","Flex","Text","ConnectWalletButton","useWeb3React","useCakeVault","Balance","useTranslation","getBalanceNumber","PoolCategory","BIG_ZERO","getAddress","useERC20","convertSharesToCake","ActionContainer","ActionTitles","ActionContent","NotEnoughTokensModal","StakeModal","VaultStakeModal","useCheckVaultApprovalStatus","useApprovePool","useVaultApprove","jsx","_jsx","jsxs","_jsxs","IconButtonWrapper","div","_templateObject","_taggedTemplateLiteral","Staked","_ref","pool","userDataLoaded","sousId","stakingToken","earningToken","stakingLimit","isFinished","poolCategory","userData","stakingTokenPrice","isAutoVault","t","account","stakingTokenContract","address","handleApprove","handlePoolApprove","requestedApproval","requestedPoolApproval","symbol","isVaultApproved","setLastUpdated","handleVaultApprove","requestedVaultApproval","isBnbPool","BINANCE","allowance","stakedBalance","isNotVaultAndHasStake","gt","stakingTokenBalance","stakedTokenBalance","decimals","stakedTokenDollarBalance","multipliedBy","userShares","pricePerFullShare","cakeAsBigNumber","cakeAsNumberBalance","hasSharesStaked","isVaultWithShares","stakedAutoDollarValue","needsApproval","onPresentTokenRequired","tokenSymbol","onPresentStake","onPresentVaultStake","stakingMax","onPresentUnstake","isRemovingStake","onPresentVaultUnstake","onStake","onUnstake","targetRef","tooltip","tooltipVisible","placement","reachStakingLimit","gte","children","fontSize","bold","color","as","textTransform","width","height","marginTop","disabled","onClick","variant","flex","pt","flexDirection","alignSelf","lineHeight","value","display","unit","prefix","mr","ref"],"sources":["C:/Users/frkul/Documents/swapUI_pancake-frontend/src/views/Pools/components/PoolsTable/ActionPanel/Stake.tsx"],"sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Button, useModal, IconButton, AddIcon, MinusIcon, Skeleton, useTooltip, Flex, Text } from '@pancakeswap/uikit'\r\nimport ConnectWalletButton from 'components/ConnectWalletButton'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useCakeVault } from 'state/pools/hooks'\r\nimport { Pool } from 'state/types'\r\nimport Balance from 'components/Balance'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { PoolCategory } from 'config/constants/types'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\nimport { getAddress } from 'utils/addressHelpers'\r\nimport { useERC20 } from 'hooks/useContract'\r\nimport { convertSharesToCake } from 'views/Pools/helpers'\r\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\r\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\r\nimport StakeModal from '../../PoolCard/Modals/StakeModal'\r\nimport VaultStakeModal from '../../CakeVaultCard/VaultStakeModal'\r\nimport { useCheckVaultApprovalStatus, useApprovePool, useVaultApprove } from '../../../hooks/useApprove'\r\n\r\nconst IconButtonWrapper = styled.div`\r\n  display: flex;\r\n`\r\n\r\ninterface StackedActionProps {\r\n  pool: Pool\r\n  userDataLoaded: boolean\r\n}\r\n\r\nconst Staked: React.FunctionComponent<StackedActionProps> = ({ pool, userDataLoaded }) => {\r\n  const {\r\n    sousId,\r\n    stakingToken,\r\n    earningToken,\r\n    stakingLimit,\r\n    isFinished,\r\n    poolCategory,\r\n    userData,\r\n    stakingTokenPrice,\r\n    isAutoVault,\r\n  } = pool\r\n  const { t } = useTranslation()\r\n  const { account } = useWeb3React()\r\n\r\n  const stakingTokenContract = useERC20(stakingToken.address ? getAddress(stakingToken.address) : '')\r\n  const { handleApprove: handlePoolApprove, requestedApproval: requestedPoolApproval } = useApprovePool(\r\n    stakingTokenContract,\r\n    sousId,\r\n    earningToken.symbol,\r\n  )\r\n\r\n  const { isVaultApproved, setLastUpdated } = useCheckVaultApprovalStatus()\r\n  const { handleApprove: handleVaultApprove, requestedApproval: requestedVaultApproval } =\r\n    useVaultApprove(setLastUpdated)\r\n\r\n  const handleApprove = isAutoVault ? handleVaultApprove : handlePoolApprove\r\n  const requestedApproval = isAutoVault ? requestedVaultApproval : requestedPoolApproval\r\n\r\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\r\n  const allowance = userData?.allowance ? new BigNumber(userData.allowance) : BIG_ZERO\r\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\r\n  const isNotVaultAndHasStake = !isAutoVault && stakedBalance.gt(0)\r\n\r\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\r\n\r\n  const stakedTokenBalance = getBalanceNumber(stakedBalance, stakingToken.decimals)\r\n  const stakedTokenDollarBalance = getBalanceNumber(\r\n    stakedBalance.multipliedBy(stakingTokenPrice),\r\n    stakingToken.decimals,\r\n  )\r\n\r\n  const {\r\n    userData: { userShares },\r\n    pricePerFullShare,\r\n  } = useCakeVault()\r\n\r\n  const { cakeAsBigNumber, cakeAsNumberBalance } = convertSharesToCake(userShares, pricePerFullShare)\r\n  const hasSharesStaked = userShares && userShares.gt(0)\r\n  const isVaultWithShares = isAutoVault && hasSharesStaked\r\n  const stakedAutoDollarValue = getBalanceNumber(cakeAsBigNumber.multipliedBy(stakingTokenPrice), stakingToken.decimals)\r\n\r\n  const needsApproval = isAutoVault ? !isVaultApproved : !allowance.gt(0) && !isBnbPool\r\n\r\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\r\n\r\n  const [onPresentStake] = useModal(\r\n    <StakeModal\r\n      isBnbPool={isBnbPool}\r\n      pool={pool}\r\n      stakingTokenBalance={stakingTokenBalance}\r\n      stakingTokenPrice={stakingTokenPrice}\r\n    />,\r\n  )\r\n\r\n  const [onPresentVaultStake] = useModal(<VaultStakeModal stakingMax={stakingTokenBalance} pool={pool} />)\r\n\r\n  const [onPresentUnstake] = useModal(\r\n    <StakeModal\r\n      stakingTokenBalance={stakingTokenBalance}\r\n      isBnbPool={isBnbPool}\r\n      pool={pool}\r\n      stakingTokenPrice={stakingTokenPrice}\r\n      isRemovingStake\r\n    />,\r\n  )\r\n\r\n  const [onPresentVaultUnstake] = useModal(<VaultStakeModal stakingMax={cakeAsBigNumber} pool={pool} isRemovingStake />)\r\n\r\n  const onStake = () => {\r\n    if (isAutoVault) {\r\n      onPresentVaultStake()\r\n    } else {\r\n      onPresentStake()\r\n    }\r\n  }\r\n\r\n  const onUnstake = () => {\r\n    if (isAutoVault) {\r\n      onPresentVaultUnstake()\r\n    } else {\r\n      onPresentUnstake()\r\n    }\r\n  }\r\n\r\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\r\n    t(\"You've already staked the maximum amount you can stake in this pool!\"),\r\n    { placement: 'bottom' },\r\n  )\r\n\r\n  const reachStakingLimit = stakingLimit.gt(0) && userData.stakedBalance.gte(stakingLimit)\r\n\r\n  if (!account) {\r\n    return (\r\n      <ActionContainer>\r\n        <ActionTitles>\r\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\r\n            {t('Start staking')}\r\n          </Text>\r\n        </ActionTitles>\r\n        <ActionContent>\r\n          <ConnectWalletButton width=\"100%\" />\r\n        </ActionContent>\r\n      </ActionContainer>\r\n    )\r\n  }\r\n\r\n  if (!userDataLoaded) {\r\n    return (\r\n      <ActionContainer>\r\n        <ActionTitles>\r\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\r\n            {t('Start staking')}\r\n          </Text>\r\n        </ActionTitles>\r\n        <ActionContent>\r\n          <Skeleton width={180} height=\"32px\" marginTop={14} />\r\n        </ActionContent>\r\n      </ActionContainer>\r\n    )\r\n  }\r\n\r\n  if (needsApproval) {\r\n    return (\r\n      <ActionContainer>\r\n        <ActionTitles>\r\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\r\n            {t('Enable pool')}\r\n          </Text>\r\n        </ActionTitles>\r\n        <ActionContent>\r\n          <Button width=\"100%\" disabled={requestedApproval} onClick={handleApprove} variant=\"secondary\">\r\n            {t('Enable')}\r\n          </Button>\r\n        </ActionContent>\r\n      </ActionContainer>\r\n    )\r\n  }\r\n\r\n  // Wallet connected, user data loaded and approved\r\n  if (isNotVaultAndHasStake || isVaultWithShares) {\r\n    return (\r\n      <ActionContainer>\r\n        <ActionTitles>\r\n          <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\r\n            {stakingToken.symbol}{' '}\r\n          </Text>\r\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\r\n            {isAutoVault ? t('Staked (compounding)') : t('Staked')}\r\n          </Text>\r\n        </ActionTitles>\r\n        <ActionContent>\r\n          <Flex flex=\"1\" pt=\"16px\" flexDirection=\"column\" alignSelf=\"flex-start\">\r\n            <Balance\r\n              lineHeight=\"1\"\r\n              bold\r\n              fontSize=\"20px\"\r\n              decimals={5}\r\n              value={isAutoVault ? cakeAsNumberBalance : stakedTokenBalance}\r\n            />\r\n            <Balance\r\n              fontSize=\"12px\"\r\n              display=\"inline\"\r\n              color=\"textSubtle\"\r\n              decimals={2}\r\n              value={isAutoVault ? stakedAutoDollarValue : stakedTokenDollarBalance}\r\n              unit=\" USD\"\r\n              prefix=\"~\"\r\n            />\r\n          </Flex>\r\n          <IconButtonWrapper>\r\n            <IconButton variant=\"secondary\" onClick={onUnstake} mr=\"6px\">\r\n              <MinusIcon color=\"primary\" width=\"14px\" />\r\n            </IconButton>\r\n            {reachStakingLimit ? (\r\n              <span ref={targetRef}>\r\n                <IconButton variant=\"secondary\" disabled>\r\n                  <AddIcon color=\"textDisabled\" width=\"24px\" height=\"24px\" />\r\n                </IconButton>\r\n              </span>\r\n            ) : (\r\n              <IconButton\r\n                variant=\"secondary\"\r\n                onClick={stakingTokenBalance.gt(0) ? onStake : onPresentTokenRequired}\r\n                disabled={isFinished}\r\n              >\r\n                <AddIcon color=\"primary\" width=\"14px\" />\r\n              </IconButton>\r\n            )}\r\n          </IconButtonWrapper>\r\n          {tooltipVisible && tooltip}\r\n        </ActionContent>\r\n      </ActionContainer>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <ActionContainer>\r\n      <ActionTitles>\r\n        <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\r\n          {t('Stake')}{' '}\r\n        </Text>\r\n        <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\r\n          {stakingToken.symbol}\r\n        </Text>\r\n      </ActionTitles>\r\n      <ActionContent>\r\n        <Button\r\n          width=\"100%\"\r\n          onClick={stakingTokenBalance.gt(0) ? onStake : onPresentTokenRequired}\r\n          variant=\"secondary\"\r\n          disabled={isFinished}\r\n        >\r\n          {t('Stake')}\r\n        </Button>\r\n      </ActionContent>\r\n    </ActionContainer>\r\n  )\r\n}\r\n\r\nexport default Staked\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}