{"ast":null,"code":"import BigNumber from 'bignumber.js';\nimport { getAddress } from 'utils/addressHelpers';\nimport { BIG_ZERO } from 'utils/bigNumber';\nexport const transformUserData = userData => {\n  return {\n    allowance: userData ? new BigNumber(userData.allowance) : BIG_ZERO,\n    stakingTokenBalance: userData ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO,\n    stakedBalance: userData ? new BigNumber(userData.stakedBalance) : BIG_ZERO,\n    pendingReward: userData ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  };\n};\nexport const transformPool = pool => {\n  const {\n    totalStaked,\n    stakingLimit,\n    userData,\n    ...rest\n  } = pool;\n  return {\n    ...rest,\n    userData: transformUserData(userData),\n    totalStaked: new BigNumber(totalStaked),\n    stakingLimit: new BigNumber(stakingLimit)\n  };\n};\nexport const getTokenPricesFromFarm = farms => {\n  return farms.reduce((prices, farm) => {\n    const quoteTokenAddress = getAddress(farm.quoteToken.address).toLocaleLowerCase();\n    const tokenAddress = getAddress(farm.token.address).toLocaleLowerCase();\n    /* eslint-disable no-param-reassign */\n    if (!prices[quoteTokenAddress]) {\n      prices[quoteTokenAddress] = new BigNumber(farm.quoteToken.busdPrice).toNumber();\n    }\n    if (!prices[tokenAddress]) {\n      prices[tokenAddress] = new BigNumber(farm.token.busdPrice).toNumber();\n    }\n    /* eslint-enable no-param-reassign */\n    return prices;\n  }, {});\n};","map":{"version":3,"names":["BigNumber","getAddress","BIG_ZERO","transformUserData","userData","allowance","stakingTokenBalance","stakedBalance","pendingReward","transformPool","pool","totalStaked","stakingLimit","rest","getTokenPricesFromFarm","farms","reduce","prices","farm","quoteTokenAddress","quoteToken","address","toLocaleLowerCase","tokenAddress","token","busdPrice","toNumber"],"sources":["C:/Users/frkul/Documents/swapUI_pancake-frontend/src/state/pools/helpers.ts"],"sourcesContent":["import BigNumber from 'bignumber.js'\r\nimport { Farm, Pool } from 'state/types'\r\nimport { getAddress } from 'utils/addressHelpers'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\n\r\ntype UserData =\r\n  | Pool['userData']\r\n  | {\r\n      allowance: number | string\r\n      stakingTokenBalance: number | string\r\n      stakedBalance: number | string\r\n      pendingReward: number | string\r\n    }\r\n\r\nexport const transformUserData = (userData: UserData) => {\r\n  return {\r\n    allowance: userData ? new BigNumber(userData.allowance) : BIG_ZERO,\r\n    stakingTokenBalance: userData ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO,\r\n    stakedBalance: userData ? new BigNumber(userData.stakedBalance) : BIG_ZERO,\r\n    pendingReward: userData ? new BigNumber(userData.pendingReward) : BIG_ZERO,\r\n  }\r\n}\r\n\r\nexport const transformPool = (pool: Pool): Pool => {\r\n  const { totalStaked, stakingLimit, userData, ...rest } = pool\r\n\r\n  return {\r\n    ...rest,\r\n    userData: transformUserData(userData),\r\n    totalStaked: new BigNumber(totalStaked),\r\n    stakingLimit: new BigNumber(stakingLimit),\r\n  } as Pool\r\n}\r\n\r\nexport const getTokenPricesFromFarm = (farms: Farm[]) => {\r\n  return farms.reduce((prices, farm) => {\r\n    const quoteTokenAddress = getAddress(farm.quoteToken.address).toLocaleLowerCase()\r\n    const tokenAddress = getAddress(farm.token.address).toLocaleLowerCase()\r\n    /* eslint-disable no-param-reassign */\r\n    if (!prices[quoteTokenAddress]) {\r\n      prices[quoteTokenAddress] = new BigNumber(farm.quoteToken.busdPrice).toNumber()\r\n    }\r\n    if (!prices[tokenAddress]) {\r\n      prices[tokenAddress] = new BigNumber(farm.token.busdPrice).toNumber()\r\n    }\r\n    /* eslint-enable no-param-reassign */\r\n    return prices\r\n  }, {})\r\n}\r\n"],"mappings":"AAAA,OAAOA,SAAS,MAAM,cAAc;AAEpC,SAASC,UAAU,QAAQ,sBAAsB;AACjD,SAASC,QAAQ,QAAQ,iBAAiB;AAW1C,OAAO,MAAMC,iBAAiB,GAAIC,QAAkB,IAAK;EACvD,OAAO;IACLC,SAAS,EAAED,QAAQ,GAAG,IAAIJ,SAAS,CAACI,QAAQ,CAACC,SAAS,CAAC,GAAGH,QAAQ;IAClEI,mBAAmB,EAAEF,QAAQ,GAAG,IAAIJ,SAAS,CAACI,QAAQ,CAACE,mBAAmB,CAAC,GAAGJ,QAAQ;IACtFK,aAAa,EAAEH,QAAQ,GAAG,IAAIJ,SAAS,CAACI,QAAQ,CAACG,aAAa,CAAC,GAAGL,QAAQ;IAC1EM,aAAa,EAAEJ,QAAQ,GAAG,IAAIJ,SAAS,CAACI,QAAQ,CAACI,aAAa,CAAC,GAAGN;EACpE,CAAC;AACH,CAAC;AAED,OAAO,MAAMO,aAAa,GAAIC,IAAU,IAAW;EACjD,MAAM;IAAEC,WAAW;IAAEC,YAAY;IAAER,QAAQ;IAAE,GAAGS;EAAK,CAAC,GAAGH,IAAI;EAE7D,OAAO;IACL,GAAGG,IAAI;IACPT,QAAQ,EAAED,iBAAiB,CAACC,QAAQ,CAAC;IACrCO,WAAW,EAAE,IAAIX,SAAS,CAACW,WAAW,CAAC;IACvCC,YAAY,EAAE,IAAIZ,SAAS,CAACY,YAAY;EAC1C,CAAC;AACH,CAAC;AAED,OAAO,MAAME,sBAAsB,GAAIC,KAAa,IAAK;EACvD,OAAOA,KAAK,CAACC,MAAM,CAAC,CAACC,MAAM,EAAEC,IAAI,KAAK;IACpC,MAAMC,iBAAiB,GAAGlB,UAAU,CAACiB,IAAI,CAACE,UAAU,CAACC,OAAO,CAAC,CAACC,iBAAiB,CAAC,CAAC;IACjF,MAAMC,YAAY,GAAGtB,UAAU,CAACiB,IAAI,CAACM,KAAK,CAACH,OAAO,CAAC,CAACC,iBAAiB,CAAC,CAAC;IACvE;IACA,IAAI,CAACL,MAAM,CAACE,iBAAiB,CAAC,EAAE;MAC9BF,MAAM,CAACE,iBAAiB,CAAC,GAAG,IAAInB,SAAS,CAACkB,IAAI,CAACE,UAAU,CAACK,SAAS,CAAC,CAACC,QAAQ,CAAC,CAAC;IACjF;IACA,IAAI,CAACT,MAAM,CAACM,YAAY,CAAC,EAAE;MACzBN,MAAM,CAACM,YAAY,CAAC,GAAG,IAAIvB,SAAS,CAACkB,IAAI,CAACM,KAAK,CAACC,SAAS,CAAC,CAACC,QAAQ,CAAC,CAAC;IACvE;IACA;IACA,OAAOT,MAAM;EACf,CAAC,EAAE,CAAC,CAAC,CAAC;AACR,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}