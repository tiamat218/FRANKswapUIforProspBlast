{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\frkul\\\\Documents\\\\swapUI_pancake-frontend\\\\src\\\\views\\\\Predictions\\\\Positions.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport styled from 'styled-components';\nimport SwiperCore, { Keyboard, Mousewheel } from 'swiper';\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport { Box } from '@pancakeswap/uikit';\nimport { useGetCurrentEpoch, useGetSortedRounds } from 'state/hooks';\nimport 'swiper/swiper.min.css';\nimport RoundCard from './components/RoundCard';\nimport Menu from './components/Menu';\nimport useSwiper from './hooks/useSwiper';\nimport useOnNextRound from './hooks/useOnNextRound';\nimport useOnViewChange from './hooks/useOnViewChange';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nSwiperCore.use([Keyboard, Mousewheel]);\nconst StyledSwiper = styled.div`\n  .swiper-wrapper {\n    align-items: center;\n    display: flex;\n  }\n\n  .swiper-slide {\n    width: 320px;\n  }\n`;\n_c = StyledSwiper;\nconst Positions = ({\n  view\n}) => {\n  _s();\n  const {\n    setSwiper\n  } = useSwiper();\n  const rounds = useGetSortedRounds();\n  const currentEpoch = useGetCurrentEpoch();\n  const previousEpoch = currentEpoch > 0 ? currentEpoch - 1 : currentEpoch;\n  const previousRound = rounds.find(round => round.epoch === previousEpoch);\n  const swiperIndex = rounds.indexOf(previousRound);\n  useOnNextRound();\n  useOnViewChange(swiperIndex, view);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    overflow: \"hidden\",\n    children: [/*#__PURE__*/_jsxDEV(Menu, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StyledSwiper, {\n      children: /*#__PURE__*/_jsxDEV(Swiper, {\n        initialSlide: swiperIndex,\n        onSwiper: setSwiper,\n        spaceBetween: 16,\n        slidesPerView: \"auto\",\n        freeMode: true,\n        freeModeSticky: true,\n        centeredSlides: true,\n        freeModeMomentumRatio: 0.25,\n        freeModeMomentumVelocityRatio: 0.5,\n        mousewheel: true,\n        keyboard: true,\n        resizeObserver: true,\n        children: rounds.map(round => /*#__PURE__*/_jsxDEV(SwiperSlide, {\n          children: /*#__PURE__*/_jsxDEV(RoundCard, {\n            round: round\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this)\n        }, round.epoch, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(Positions, \"GX8KoIe2HSaR+t/m8xVgr4MmAnU=\", false, function () {\n  return [useSwiper, useGetSortedRounds, useGetCurrentEpoch, useOnNextRound, useOnViewChange];\n});\n_c2 = Positions;\nexport default Positions;\nvar _c, _c2;\n$RefreshReg$(_c, \"StyledSwiper\");\n$RefreshReg$(_c2, \"Positions\");","map":{"version":3,"names":["React","styled","SwiperCore","Keyboard","Mousewheel","Swiper","SwiperSlide","Box","useGetCurrentEpoch","useGetSortedRounds","RoundCard","Menu","useSwiper","useOnNextRound","useOnViewChange","jsxDEV","_jsxDEV","use","StyledSwiper","div","_c","Positions","view","_s","setSwiper","rounds","currentEpoch","previousEpoch","previousRound","find","round","epoch","swiperIndex","indexOf","overflow","children","fileName","_jsxFileName","lineNumber","columnNumber","initialSlide","onSwiper","spaceBetween","slidesPerView","freeMode","freeModeSticky","centeredSlides","freeModeMomentumRatio","freeModeMomentumVelocityRatio","mousewheel","keyboard","resizeObserver","map","_c2","$RefreshReg$"],"sources":["C:/Users/frkul/Documents/swapUI_pancake-frontend/src/views/Predictions/Positions.tsx"],"sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\nimport SwiperCore, { Keyboard, Mousewheel } from 'swiper'\r\nimport { Swiper, SwiperSlide } from 'swiper/react'\r\nimport { Box } from '@pancakeswap/uikit'\r\nimport { useGetCurrentEpoch, useGetSortedRounds } from 'state/hooks'\r\nimport 'swiper/swiper.min.css'\r\nimport RoundCard from './components/RoundCard'\r\nimport Menu from './components/Menu'\r\nimport useSwiper from './hooks/useSwiper'\r\nimport useOnNextRound from './hooks/useOnNextRound'\r\nimport useOnViewChange from './hooks/useOnViewChange'\r\nimport { PageView } from './types'\r\n\r\nSwiperCore.use([Keyboard, Mousewheel])\r\n\r\nconst StyledSwiper = styled.div`\r\n  .swiper-wrapper {\r\n    align-items: center;\r\n    display: flex;\r\n  }\r\n\r\n  .swiper-slide {\r\n    width: 320px;\r\n  }\r\n`\r\nconst Positions: React.FC<{ view?: PageView }> = ({ view }) => {\r\n  const { setSwiper } = useSwiper()\r\n  const rounds = useGetSortedRounds()\r\n  const currentEpoch = useGetCurrentEpoch()\r\n  const previousEpoch = currentEpoch > 0 ? currentEpoch - 1 : currentEpoch\r\n  const previousRound = rounds.find((round) => round.epoch === previousEpoch)\r\n  const swiperIndex = rounds.indexOf(previousRound)\r\n\r\n  useOnNextRound()\r\n  useOnViewChange(swiperIndex, view)\r\n\r\n  return (\r\n    <Box overflow=\"hidden\">\r\n      <Menu />\r\n      <StyledSwiper>\r\n        <Swiper\r\n          initialSlide={swiperIndex}\r\n          onSwiper={setSwiper}\r\n          spaceBetween={16}\r\n          slidesPerView=\"auto\"\r\n          freeMode\r\n          freeModeSticky\r\n          centeredSlides\r\n          freeModeMomentumRatio={0.25}\r\n          freeModeMomentumVelocityRatio={0.5}\r\n          mousewheel\r\n          keyboard\r\n          resizeObserver\r\n        >\r\n          {rounds.map((round) => (\r\n            <SwiperSlide key={round.epoch}>\r\n              <RoundCard round={round} />\r\n            </SwiperSlide>\r\n          ))}\r\n        </Swiper>\r\n      </StyledSwiper>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default Positions\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}