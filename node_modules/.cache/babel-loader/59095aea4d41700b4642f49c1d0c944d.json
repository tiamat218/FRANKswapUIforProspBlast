{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Devrim\\\\Documents\\\\FRANKswapUIforProspBlast\\\\src\\\\views\\\\Ifos\\\\components\\\\IfoFoldableCard\\\\IfoPoolCard\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useTranslation } from 'contexts/Localization';\nimport { Card, CardBody, CardHeader, Text, useTooltip, HelpIcon, Flex } from '@pancakeswap/uikit';\nimport { PoolIds } from 'config/constants/types';\nimport { useProfile } from 'state/profile/hooks';\nimport IfoCardTokens from './IfoCardTokens';\nimport IfoCardActions from './IfoCardActions';\nimport IfoCardDetails from './IfoCardDetails';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst cardConfig = {\n  [PoolIds.poolBasic]: {\n    title: 'Basic Sale',\n    variant: 'blue',\n    tooltip: 'Every person can only commit a limited amount, but may expect a higher return per token committed.'\n  },\n  [PoolIds.poolUnlimited]: {\n    title: 'Unlimited Sale',\n    variant: 'violet',\n    tooltip: 'No limits on the amount you can commit. Additional fee applies when claiming.'\n  }\n};\n\nconst SmallCard = ({\n  poolId,\n  ifo,\n  publicIfoData,\n  walletIfoData,\n  onApprove,\n  enableStatus\n}) => {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  const config = cardConfig[poolId];\n  const {\n    hasProfile,\n    isLoading: isProfileLoading\n  } = useProfile();\n  const {\n    targetRef,\n    tooltip,\n    tooltipVisible\n  } = useTooltip(t(config.tooltip), {\n    placement: 'bottom'\n  });\n  const isLoading = isProfileLoading || publicIfoData.status === 'idle';\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [tooltipVisible && tooltip, /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        variant: config.variant,\n        children: /*#__PURE__*/_jsxDEV(Flex, {\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            bold: true,\n            fontSize: \"20px\",\n            children: t(config.title)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: targetRef,\n            children: /*#__PURE__*/_jsxDEV(HelpIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n        children: [/*#__PURE__*/_jsxDEV(IfoCardTokens, {\n          poolId: poolId,\n          ifo: ifo,\n          publicIfoData: publicIfoData,\n          walletIfoData: walletIfoData,\n          hasProfile: hasProfile,\n          isLoading: isLoading,\n          onApprove: onApprove,\n          enableStatus: enableStatus\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IfoCardActions, {\n          poolId: poolId,\n          ifo: ifo,\n          publicIfoData: publicIfoData,\n          walletIfoData: walletIfoData,\n          hasProfile: hasProfile,\n          isLoading: isLoading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IfoCardDetails, {\n          poolId: poolId,\n          ifo: ifo,\n          publicIfoData: publicIfoData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(SmallCard, \"+0kr4SbjmdNs2UXPWD5kXpD7hnQ=\", false, function () {\n  return [useTranslation, useProfile, useTooltip];\n});\n\n_c = SmallCard;\nexport default SmallCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"SmallCard\");","map":{"version":3,"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/views/Ifos/components/IfoFoldableCard/IfoPoolCard/index.tsx"],"names":["React","useTranslation","Card","CardBody","CardHeader","Text","useTooltip","HelpIcon","Flex","PoolIds","useProfile","IfoCardTokens","IfoCardActions","IfoCardDetails","cardConfig","poolBasic","title","variant","tooltip","poolUnlimited","SmallCard","poolId","ifo","publicIfoData","walletIfoData","onApprove","enableStatus","t","config","hasProfile","isLoading","isProfileLoading","targetRef","tooltipVisible","placement","status"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,QAA+B,uBAA/B;AACA,SAASC,IAAT,EAAeC,QAAf,EAAyBC,UAAzB,EAAqCC,IAArC,EAA2CC,UAA3C,EAAuDC,QAAvD,EAAiEC,IAAjE,QAA6E,oBAA7E;AACA,SAAcC,OAAd,QAA6B,wBAA7B;AACA,SAASC,UAAT,QAA2B,qBAA3B;AAGA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;;AAmBA,MAAMC,UAAsB,GAAG;AAC7B,GAACL,OAAO,CAACM,SAAT,GAAqB;AACnBC,IAAAA,KAAK,EAAE,YADY;AAEnBC,IAAAA,OAAO,EAAE,MAFU;AAGnBC,IAAAA,OAAO,EAAE;AAHU,GADQ;AAM7B,GAACT,OAAO,CAACU,aAAT,GAAyB;AACvBH,IAAAA,KAAK,EAAE,gBADgB;AAEvBC,IAAAA,OAAO,EAAE,QAFc;AAGvBC,IAAAA,OAAO,EAAE;AAHc;AANI,CAA/B;;AAaA,MAAME,SAAiC,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,GAAV;AAAeC,EAAAA,aAAf;AAA8BC,EAAAA,aAA9B;AAA6CC,EAAAA,SAA7C;AAAwDC,EAAAA;AAAxD,CAAD,KAA4E;AAAA;;AACpH,QAAM;AAAEC,IAAAA;AAAF,MAAQ1B,cAAc,EAA5B;AACA,QAAM2B,MAAM,GAAGd,UAAU,CAACO,MAAD,CAAzB;AACA,QAAM;AAAEQ,IAAAA,UAAF;AAAcC,IAAAA,SAAS,EAAEC;AAAzB,MAA8CrB,UAAU,EAA9D;AACA,QAAM;AAAEsB,IAAAA,SAAF;AAAad,IAAAA,OAAb;AAAsBe,IAAAA;AAAtB,MAAyC3B,UAAU,CAACqB,CAAC,CAACC,MAAM,CAACV,OAAR,CAAF,EAAoB;AAAEgB,IAAAA,SAAS,EAAE;AAAb,GAApB,CAAzD;AAEA,QAAMJ,SAAS,GAAGC,gBAAgB,IAAIR,aAAa,CAACY,MAAd,KAAyB,MAA/D;AAEA,sBACE;AAAA,eACGF,cAAc,IAAIf,OADrB,eAEE,QAAC,IAAD;AAAA,8BACE,QAAC,UAAD;AAAY,QAAA,OAAO,EAAEU,MAAM,CAACX,OAA5B;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,cAAc,EAAC,eAArB;AAAqC,UAAA,UAAU,EAAC,QAAhD;AAAA,kCACE,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAW,YAAA,QAAQ,EAAC,MAApB;AAAA,sBACGU,CAAC,CAACC,MAAM,CAACZ,KAAR;AADJ;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE;AAAK,YAAA,GAAG,EAAEgB,SAAV;AAAA,mCACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAWE,QAAC,QAAD;AAAA,gCACE,QAAC,aAAD;AACE,UAAA,MAAM,EAAEX,MADV;AAEE,UAAA,GAAG,EAAEC,GAFP;AAGE,UAAA,aAAa,EAAEC,aAHjB;AAIE,UAAA,aAAa,EAAEC,aAJjB;AAKE,UAAA,UAAU,EAAEK,UALd;AAME,UAAA,SAAS,EAAEC,SANb;AAOE,UAAA,SAAS,EAAEL,SAPb;AAQE,UAAA,YAAY,EAAEC;AARhB;AAAA;AAAA;AAAA;AAAA,gBADF,eAWE,QAAC,cAAD;AACE,UAAA,MAAM,EAAEL,MADV;AAEE,UAAA,GAAG,EAAEC,GAFP;AAGE,UAAA,aAAa,EAAEC,aAHjB;AAIE,UAAA,aAAa,EAAEC,aAJjB;AAKE,UAAA,UAAU,EAAEK,UALd;AAME,UAAA,SAAS,EAAEC;AANb;AAAA;AAAA;AAAA;AAAA,gBAXF,eAmBE,QAAC,cAAD;AAAgB,UAAA,MAAM,EAAET,MAAxB;AAAgC,UAAA,GAAG,EAAEC,GAArC;AAA0C,UAAA,aAAa,EAAEC;AAAzD;AAAA;AAAA;AAAA;AAAA,gBAnBF;AAAA;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAsCD,CA9CD;;GAAMH,S;UACUnB,c,EAEsCS,U,EACLJ,U;;;KAJ3Cc,S;AAgDN,eAAeA,SAAf","sourcesContent":["import React from 'react'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { Card, CardBody, CardHeader, Text, useTooltip, HelpIcon, Flex } from '@pancakeswap/uikit'\r\nimport { Ifo, PoolIds } from 'config/constants/types'\r\nimport { useProfile } from 'state/profile/hooks'\r\nimport { PublicIfoData, WalletIfoData } from 'views/Ifos/types'\r\nimport { EnableStatus } from '../types'\r\nimport IfoCardTokens from './IfoCardTokens'\r\nimport IfoCardActions from './IfoCardActions'\r\nimport IfoCardDetails from './IfoCardDetails'\r\n\r\ninterface IfoCardProps {\r\n  poolId: PoolIds\r\n  ifo: Ifo\r\n  publicIfoData: PublicIfoData\r\n  walletIfoData: WalletIfoData\r\n  onApprove: () => Promise<any>\r\n  enableStatus: EnableStatus\r\n}\r\n\r\ninterface CardConfig {\r\n  [key: string]: {\r\n    title: string\r\n    variant: 'blue' | 'violet'\r\n    tooltip: string\r\n  }\r\n}\r\n\r\nconst cardConfig: CardConfig = {\r\n  [PoolIds.poolBasic]: {\r\n    title: 'Basic Sale',\r\n    variant: 'blue',\r\n    tooltip: 'Every person can only commit a limited amount, but may expect a higher return per token committed.',\r\n  },\r\n  [PoolIds.poolUnlimited]: {\r\n    title: 'Unlimited Sale',\r\n    variant: 'violet',\r\n    tooltip: 'No limits on the amount you can commit. Additional fee applies when claiming.',\r\n  },\r\n}\r\n\r\nconst SmallCard: React.FC<IfoCardProps> = ({ poolId, ifo, publicIfoData, walletIfoData, onApprove, enableStatus }) => {\r\n  const { t } = useTranslation()\r\n  const config = cardConfig[poolId]\r\n  const { hasProfile, isLoading: isProfileLoading } = useProfile()\r\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(t(config.tooltip), { placement: 'bottom' })\r\n\r\n  const isLoading = isProfileLoading || publicIfoData.status === 'idle'\r\n\r\n  return (\r\n    <>\r\n      {tooltipVisible && tooltip}\r\n      <Card>\r\n        <CardHeader variant={config.variant}>\r\n          <Flex justifyContent=\"space-between\" alignItems=\"center\">\r\n            <Text bold fontSize=\"20px\">\r\n              {t(config.title)}\r\n            </Text>\r\n            <div ref={targetRef}>\r\n              <HelpIcon />\r\n            </div>\r\n          </Flex>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <IfoCardTokens\r\n            poolId={poolId}\r\n            ifo={ifo}\r\n            publicIfoData={publicIfoData}\r\n            walletIfoData={walletIfoData}\r\n            hasProfile={hasProfile}\r\n            isLoading={isLoading}\r\n            onApprove={onApprove}\r\n            enableStatus={enableStatus}\r\n          />\r\n          <IfoCardActions\r\n            poolId={poolId}\r\n            ifo={ifo}\r\n            publicIfoData={publicIfoData}\r\n            walletIfoData={walletIfoData}\r\n            hasProfile={hasProfile}\r\n            isLoading={isLoading}\r\n          />\r\n          <IfoCardDetails poolId={poolId} ifo={ifo} publicIfoData={publicIfoData} />\r\n        </CardBody>\r\n      </Card>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default SmallCard\r\n"]},"metadata":{},"sourceType":"module"}