{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Devrim\\\\Documents\\\\swapUIforProspBlast\\\\src\\\\views\\\\Voting\\\\components\\\\Proposals\\\\TimeFrame.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Text } from '@pancakeswap/uikit';\nimport { toDate, format } from 'date-fns';\nimport { useTranslation } from 'contexts/Localization';\nimport { ProposalState } from 'state/types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getFormattedDate = timestamp => {\n  const date = toDate(timestamp * 1000);\n  return format(date, 'MMM do, yyyy HH:mm');\n};\nconst TimeFrame = ({\n  startDate,\n  endDate,\n  proposalState\n}) => {\n  _s();\n  const {\n    t\n  } = useTranslation();\n  const textProps = {\n    fontSize: '16px',\n    color: 'textSubtle',\n    ml: '8px'\n  };\n  if (proposalState === ProposalState.CLOSED) {\n    return /*#__PURE__*/_jsxDEV(Text, {\n      ...textProps,\n      children: t('Ended %date%', {\n        date: getFormattedDate(endDate)\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 12\n    }, this);\n  }\n  if (proposalState === ProposalState.PENDING) {\n    return /*#__PURE__*/_jsxDEV(Text, {\n      ...textProps,\n      children: t('Starts %date%', {\n        date: getFormattedDate(startDate)\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Text, {\n    ...textProps,\n    children: t('Ends %date%', {\n      date: getFormattedDate(endDate)\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 10\n  }, this);\n};\n_s(TimeFrame, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n_c = TimeFrame;\nexport default TimeFrame;\nvar _c;\n$RefreshReg$(_c, \"TimeFrame\");","map":{"version":3,"names":["React","Text","toDate","format","useTranslation","ProposalState","jsxDEV","_jsxDEV","getFormattedDate","timestamp","date","TimeFrame","startDate","endDate","proposalState","_s","t","textProps","fontSize","color","ml","CLOSED","children","fileName","_jsxFileName","lineNumber","columnNumber","PENDING","_c","$RefreshReg$"],"sources":["C:/Users/Devrim/Documents/swapUIforProspBlast/src/views/Voting/components/Proposals/TimeFrame.tsx"],"sourcesContent":["import React from 'react'\r\nimport { Text } from '@pancakeswap/uikit'\r\nimport { toDate, format } from 'date-fns'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { ProposalState } from 'state/types'\r\n\r\ninterface TimeFrameProps {\r\n  startDate: number\r\n  endDate: number\r\n  proposalState: ProposalState\r\n}\r\n\r\nconst getFormattedDate = (timestamp: number) => {\r\n  const date = toDate(timestamp * 1000)\r\n  return format(date, 'MMM do, yyyy HH:mm')\r\n}\r\n\r\nconst TimeFrame: React.FC<TimeFrameProps> = ({ startDate, endDate, proposalState }) => {\r\n  const { t } = useTranslation()\r\n  const textProps = {\r\n    fontSize: '16px',\r\n    color: 'textSubtle',\r\n    ml: '8px',\r\n  }\r\n\r\n  if (proposalState === ProposalState.CLOSED) {\r\n    return <Text {...textProps}>{t('Ended %date%', { date: getFormattedDate(endDate) })}</Text>\r\n  }\r\n\r\n  if (proposalState === ProposalState.PENDING) {\r\n    return <Text {...textProps}>{t('Starts %date%', { date: getFormattedDate(startDate) })}</Text>\r\n  }\r\n\r\n  return <Text {...textProps}>{t('Ends %date%', { date: getFormattedDate(endDate) })}</Text>\r\n}\r\n\r\nexport default TimeFrame\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,oBAAoB;AACzC,SAASC,MAAM,EAAEC,MAAM,QAAQ,UAAU;AACzC,SAASC,cAAc,QAAQ,uBAAuB;AACtD,SAASC,aAAa,QAAQ,aAAa;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAQ3C,MAAMC,gBAAgB,GAAIC,SAAiB,IAAK;EAC9C,MAAMC,IAAI,GAAGR,MAAM,CAACO,SAAS,GAAG,IAAI,CAAC;EACrC,OAAON,MAAM,CAACO,IAAI,EAAE,oBAAoB,CAAC;AAC3C,CAAC;AAED,MAAMC,SAAmC,GAAGA,CAAC;EAAEC,SAAS;EAAEC,OAAO;EAAEC;AAAc,CAAC,KAAK;EAAAC,EAAA;EACrF,MAAM;IAAEC;EAAE,CAAC,GAAGZ,cAAc,CAAC,CAAC;EAC9B,MAAMa,SAAS,GAAG;IAChBC,QAAQ,EAAE,MAAM;IAChBC,KAAK,EAAE,YAAY;IACnBC,EAAE,EAAE;EACN,CAAC;EAED,IAAIN,aAAa,KAAKT,aAAa,CAACgB,MAAM,EAAE;IAC1C,oBAAOd,OAAA,CAACN,IAAI;MAAA,GAAKgB,SAAS;MAAAK,QAAA,EAAGN,CAAC,CAAC,cAAc,EAAE;QAAEN,IAAI,EAAEF,gBAAgB,CAACK,OAAO;MAAE,CAAC;IAAC;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC;EAC7F;EAEA,IAAIZ,aAAa,KAAKT,aAAa,CAACsB,OAAO,EAAE;IAC3C,oBAAOpB,OAAA,CAACN,IAAI;MAAA,GAAKgB,SAAS;MAAAK,QAAA,EAAGN,CAAC,CAAC,eAAe,EAAE;QAAEN,IAAI,EAAEF,gBAAgB,CAACI,SAAS;MAAE,CAAC;IAAC;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC;EAChG;EAEA,oBAAOnB,OAAA,CAACN,IAAI;IAAA,GAAKgB,SAAS;IAAAK,QAAA,EAAGN,CAAC,CAAC,aAAa,EAAE;MAAEN,IAAI,EAAEF,gBAAgB,CAACK,OAAO;IAAE,CAAC;EAAC;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAO,CAAC;AAC5F,CAAC;AAAAX,EAAA,CAjBKJ,SAAmC;EAAA,QACzBP,cAAc;AAAA;AAAAwB,EAAA,GADxBjB,SAAmC;AAmBzC,eAAeA,SAAS;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}