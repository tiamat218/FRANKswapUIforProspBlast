{"ast":null,"code":"import{useCallback}from'react';import{ethers}from'ethers';import{useMasterchef}from'hooks/useContract';const useApproveFarm=lpContract=>{const masterChefContract=useMasterchef();const handleApprove=useCallback(async()=>{try{const tx=await lpContract.approve(masterChefContract.address,ethers.constants.MaxUint256);const receipt=await tx.wait();return receipt.status;}catch(e){return false;}},[lpContract,masterChefContract]);return{onApprove:handleApprove};};export default useApproveFarm;","map":{"version":3,"names":["useCallback","ethers","useMasterchef","useApproveFarm","lpContract","masterChefContract","handleApprove","tx","approve","address","constants","MaxUint256","receipt","wait","status","e","onApprove"],"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/views/Farms/hooks/useApproveFarm.ts"],"sourcesContent":["import { useCallback } from 'react'\r\nimport { ethers, Contract } from 'ethers'\r\nimport { useMasterchef } from 'hooks/useContract'\r\n\r\nconst useApproveFarm = (lpContract: Contract) => {\r\n  const masterChefContract = useMasterchef()\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      const tx = await lpContract.approve(masterChefContract.address, ethers.constants.MaxUint256)\r\n      const receipt = await tx.wait()\r\n      return receipt.status\r\n    } catch (e) {\r\n      return false\r\n    }\r\n  }, [lpContract, masterChefContract])\r\n\r\n  return { onApprove: handleApprove }\r\n}\r\n\r\nexport default useApproveFarm\r\n"],"mappings":"AAAA,OAASA,WAAW,KAAQ,OAAO,CACnC,OAASC,MAAM,KAAkB,QAAQ,CACzC,OAASC,aAAa,KAAQ,mBAAmB,CAEjD,KAAM,CAAAC,cAAc,CAAIC,UAAoB,EAAK,CAC/C,KAAM,CAAAC,kBAAkB,CAAGH,aAAa,CAAC,CAAC,CAC1C,KAAM,CAAAI,aAAa,CAAGN,WAAW,CAAC,SAAY,CAC5C,GAAI,CACF,KAAM,CAAAO,EAAE,CAAG,KAAM,CAAAH,UAAU,CAACI,OAAO,CAACH,kBAAkB,CAACI,OAAO,CAAER,MAAM,CAACS,SAAS,CAACC,UAAU,CAAC,CAC5F,KAAM,CAAAC,OAAO,CAAG,KAAM,CAAAL,EAAE,CAACM,IAAI,CAAC,CAAC,CAC/B,MAAO,CAAAD,OAAO,CAACE,MAAM,CACvB,CAAE,MAAOC,CAAC,CAAE,CACV,MAAO,MAAK,CACd,CACF,CAAC,CAAE,CAACX,UAAU,CAAEC,kBAAkB,CAAC,CAAC,CAEpC,MAAO,CAAEW,SAAS,CAAEV,aAAc,CAAC,CACrC,CAAC,CAED,cAAe,CAAAH,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module"}