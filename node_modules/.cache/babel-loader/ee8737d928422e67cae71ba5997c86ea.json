{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Devrim\\\\Documents\\\\FRANKswapUIforProspBlast\\\\src\\\\views\\\\Voting\\\\Proposal\\\\Votes.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { AutoRenewIcon, Card, CardHeader, ChevronDownIcon, Flex, Heading, Button, ChevronUpIcon, Text } from '@pancakeswap/uikit';\nimport { useWeb3React } from '@web3-react/core';\nimport orderBy from 'lodash/orderBy';\nimport { useTranslation } from 'contexts/Localization';\nimport { VotingStateLoadingStatus } from 'state/types';\nimport { useGetVotingStateLoadingStatus } from 'state/voting/hooks';\nimport VotesLoading from '../components/Proposal/VotesLoading';\nimport VoteRow from '../components/Proposal/VoteRow';\nimport Row, { AddressColumn, ChoiceColumn, VotingPowerColumn } from '../components/Proposal/Row';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst VOTES_PER_VIEW = 20;\n\nconst parseVotePower = incomingVote => {\n  var _incomingVote$metadat;\n\n  return parseFloat(incomingVote === null || incomingVote === void 0 ? void 0 : (_incomingVote$metadat = incomingVote.metadata) === null || _incomingVote$metadat === void 0 ? void 0 : _incomingVote$metadat.votingPower);\n};\n\nconst Votes = ({\n  votes\n}) => {\n  _s();\n\n  const [showAll, setShowAll] = useState(false);\n  const {\n    t\n  } = useTranslation();\n  const {\n    account\n  } = useWeb3React();\n  const orderedVotes = orderBy(votes, [parseVotePower, 'created'], ['desc', 'desc']);\n  const displayVotes = showAll ? orderedVotes : orderedVotes.slice(0, VOTES_PER_VIEW);\n  const voteStatus = useGetVotingStateLoadingStatus();\n  const isFinished = voteStatus === VotingStateLoadingStatus.IDLE;\n\n  const handleClick = () => {\n    setShowAll(!showAll);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n      children: /*#__PURE__*/_jsxDEV(Flex, {\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n        children: [/*#__PURE__*/_jsxDEV(Heading, {\n          as: \"h3\",\n          scale: \"md\",\n          children: t('Votes (%count%)', {\n            count: votes.length.toLocaleString()\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), !isFinished && /*#__PURE__*/_jsxDEV(AutoRenewIcon, {\n          spin: true,\n          width: \"22px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), !isFinished && /*#__PURE__*/_jsxDEV(VotesLoading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 23\n    }, this), isFinished && displayVotes.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(AddressColumn, {\n          children: /*#__PURE__*/_jsxDEV(Text, {\n            fontSize: \"12px\",\n            color: \"textSubtle\",\n            textTransform: \"uppercase\",\n            bold: true,\n            children: t('Voter')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ChoiceColumn, {\n          children: /*#__PURE__*/_jsxDEV(Text, {\n            fontSize: \"12px\",\n            color: \"textSubtle\",\n            textTransform: \"uppercase\",\n            bold: true,\n            children: t('Decision')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(VotingPowerColumn, {\n          children: /*#__PURE__*/_jsxDEV(Text, {\n            fontSize: \"12px\",\n            color: \"textSubtle\",\n            textTransform: \"uppercase\",\n            bold: true,\n            children: t('Vote Weight')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), displayVotes.map(vote => {\n        const isVoter = account && vote.voter.toLowerCase() === account.toLowerCase();\n        return /*#__PURE__*/_jsxDEV(VoteRow, {\n          vote: vote,\n          isVoter: isVoter\n        }, vote.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 20\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(Flex, {\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        py: \"8px\",\n        px: \"24px\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          width: \"100%\",\n          onClick: handleClick,\n          variant: \"text\",\n          endIcon: showAll ? /*#__PURE__*/_jsxDEV(ChevronUpIcon, {\n            color: \"primary\",\n            width: \"21px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 19\n          }, this) : /*#__PURE__*/_jsxDEV(ChevronDownIcon, {\n            color: \"primary\",\n            width: \"21px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 19\n          }, this),\n          disabled: !isFinished,\n          children: showAll ? t('Hide') : t('See All')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), isFinished && displayVotes.length === 0 && /*#__PURE__*/_jsxDEV(Flex, {\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      py: \"32px\",\n      children: /*#__PURE__*/_jsxDEV(Heading, {\n        as: \"h5\",\n        children: t('No votes found')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Votes, \"jdREP4yRkrfrpu3TkD0ov8s8idY=\", false, function () {\n  return [useTranslation, useWeb3React, useGetVotingStateLoadingStatus];\n});\n\n_c = Votes;\nexport default Votes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Votes\");","map":{"version":3,"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/views/Voting/Proposal/Votes.tsx"],"names":["React","useState","AutoRenewIcon","Card","CardHeader","ChevronDownIcon","Flex","Heading","Button","ChevronUpIcon","Text","useWeb3React","orderBy","useTranslation","VotingStateLoadingStatus","useGetVotingStateLoadingStatus","VotesLoading","VoteRow","Row","AddressColumn","ChoiceColumn","VotingPowerColumn","VOTES_PER_VIEW","parseVotePower","incomingVote","parseFloat","metadata","votingPower","Votes","votes","showAll","setShowAll","t","account","orderedVotes","displayVotes","slice","voteStatus","isFinished","IDLE","handleClick","count","length","toLocaleString","map","vote","isVoter","voter","toLowerCase","id"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport {\r\n  AutoRenewIcon,\r\n  Card,\r\n  CardHeader,\r\n  ChevronDownIcon,\r\n  Flex,\r\n  Heading,\r\n  Button,\r\n  ChevronUpIcon,\r\n  Text,\r\n} from '@pancakeswap/uikit'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport orderBy from 'lodash/orderBy'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { Vote, VotingStateLoadingStatus } from 'state/types'\r\nimport { useGetVotingStateLoadingStatus } from 'state/voting/hooks'\r\nimport VotesLoading from '../components/Proposal/VotesLoading'\r\nimport VoteRow from '../components/Proposal/VoteRow'\r\nimport Row, { AddressColumn, ChoiceColumn, VotingPowerColumn } from '../components/Proposal/Row'\r\n\r\nconst VOTES_PER_VIEW = 20\r\n\r\ninterface VotesProps {\r\n  votes: Vote[]\r\n}\r\n\r\nconst parseVotePower = (incomingVote: Vote) => {\r\n  return parseFloat(incomingVote?.metadata?.votingPower)\r\n}\r\n\r\nconst Votes: React.FC<VotesProps> = ({ votes }) => {\r\n  const [showAll, setShowAll] = useState(false)\r\n  const { t } = useTranslation()\r\n  const { account } = useWeb3React()\r\n  const orderedVotes = orderBy(votes, [parseVotePower, 'created'], ['desc', 'desc'])\r\n  const displayVotes = showAll ? orderedVotes : orderedVotes.slice(0, VOTES_PER_VIEW)\r\n  const voteStatus = useGetVotingStateLoadingStatus()\r\n  const isFinished = voteStatus === VotingStateLoadingStatus.IDLE\r\n\r\n  const handleClick = () => {\r\n    setShowAll(!showAll)\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <Flex alignItems=\"center\" justifyContent=\"space-between\">\r\n          <Heading as=\"h3\" scale=\"md\">\r\n            {t('Votes (%count%)', { count: votes.length.toLocaleString() })}\r\n          </Heading>\r\n          {!isFinished && <AutoRenewIcon spin width=\"22px\" />}\r\n        </Flex>\r\n      </CardHeader>\r\n      {!isFinished && <VotesLoading />}\r\n\r\n      {isFinished && displayVotes.length > 0 && (\r\n        <>\r\n          <Row>\r\n            <AddressColumn>\r\n              <Text fontSize=\"12px\" color=\"textSubtle\" textTransform=\"uppercase\" bold>\r\n                {t('Voter')}\r\n              </Text>\r\n            </AddressColumn>\r\n            <ChoiceColumn>\r\n              <Text fontSize=\"12px\" color=\"textSubtle\" textTransform=\"uppercase\" bold>\r\n                {t('Decision')}\r\n              </Text>\r\n            </ChoiceColumn>\r\n            <VotingPowerColumn>\r\n              <Text fontSize=\"12px\" color=\"textSubtle\" textTransform=\"uppercase\" bold>\r\n                {t('Vote Weight')}\r\n              </Text>\r\n            </VotingPowerColumn>\r\n          </Row>\r\n          {displayVotes.map((vote) => {\r\n            const isVoter = account && vote.voter.toLowerCase() === account.toLowerCase()\r\n            return <VoteRow key={vote.id} vote={vote} isVoter={isVoter} />\r\n          })}\r\n          <Flex alignItems=\"center\" justifyContent=\"center\" py=\"8px\" px=\"24px\">\r\n            <Button\r\n              width=\"100%\"\r\n              onClick={handleClick}\r\n              variant=\"text\"\r\n              endIcon={\r\n                showAll ? (\r\n                  <ChevronUpIcon color=\"primary\" width=\"21px\" />\r\n                ) : (\r\n                  <ChevronDownIcon color=\"primary\" width=\"21px\" />\r\n                )\r\n              }\r\n              disabled={!isFinished}\r\n            >\r\n              {showAll ? t('Hide') : t('See All')}\r\n            </Button>\r\n          </Flex>\r\n        </>\r\n      )}\r\n\r\n      {isFinished && displayVotes.length === 0 && (\r\n        <Flex alignItems=\"center\" justifyContent=\"center\" py=\"32px\">\r\n          <Heading as=\"h5\">{t('No votes found')}</Heading>\r\n        </Flex>\r\n      )}\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default Votes\r\n"]},"metadata":{},"sourceType":"module"}