{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\frkul\\\\Documents\\\\swapUI_pancake-frontend\\\\src\\\\views\\\\Swap\\\\components\\\\ProgressSteps.tsx\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport { RowBetween } from 'components/Layout/Row';\nimport { AutoColumn } from 'components/Layout/Column';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Grouping = styled(RowBetween)`\n  width: 50%;\n`;\n_c = Grouping;\nconst Circle = styled.div`\n  min-width: 20px;\n  min-height: 20px;\n  background-color: ${({\n  theme,\n  confirmed,\n  disabled\n}) => disabled ? theme.colors.backgroundDisabled : confirmed ? theme.colors.success : theme.colors.primary};\n  border-radius: 50%;\n  color: #ffffff;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  line-height: 8px;\n  font-size: 12px;\n`;\n_c2 = Circle;\nconst CircleRow = styled.div`\n  width: calc(100% - 20px);\n  display: flex;\n  align-items: center;\n`;\n_c3 = CircleRow;\nconst Connector = styled.div`\n  width: 100%;\n  height: 2px;\n  background: linear-gradient(\n    90deg,\n    ${({\n  theme,\n  prevConfirmed,\n  disabled\n}) => disabled ? theme.colors.backgroundDisabled : prevConfirmed ? theme.colors.success : theme.colors.primary}\n      0%,\n    ${({\n  theme,\n  prevConfirmed,\n  disabled\n}) => disabled ? theme.colors.backgroundDisabled : prevConfirmed ? theme.colors.primary : theme.colors.backgroundDisabled}\n      80%\n  );\n  opacity: 0.6;\n`;\n_c4 = Connector;\n/**\r\n * Based on array of steps, create a step counter of circles.\r\n * A circle can be enabled, disabled, or confirmed. States are derived\r\n * from previous step.\r\n *\r\n * An extra circle is added to represent the ability to swap, add, or remove.\r\n * This step will never be marked as complete (because no 'txn done' state in body ui).\r\n *\r\n * @param steps  array of booleans where true means step is complete\r\n */\nexport default function ProgressCircles({\n  steps,\n  disabled = false,\n  ...rest\n}) {\n  return /*#__PURE__*/_jsxDEV(AutoColumn, {\n    justify: \"center\",\n    ...rest,\n    children: /*#__PURE__*/_jsxDEV(Grouping, {\n      children: [steps.map((step, i) => {\n        return (\n          /*#__PURE__*/\n          // eslint-disable-next-line react/no-array-index-key\n          _jsxDEV(CircleRow, {\n            children: [/*#__PURE__*/_jsxDEV(Circle, {\n              confirmed: step,\n              disabled: disabled || !steps[i - 1] && i !== 0,\n              children: step ? '✓' : i + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Connector, {\n              prevConfirmed: step,\n              disabled: disabled\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)\n        );\n      }), /*#__PURE__*/_jsxDEV(Circle, {\n        disabled: disabled || !steps[steps.length - 1],\n        children: steps.length + 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n_c5 = ProgressCircles;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"Grouping\");\n$RefreshReg$(_c2, \"Circle\");\n$RefreshReg$(_c3, \"CircleRow\");\n$RefreshReg$(_c4, \"Connector\");\n$RefreshReg$(_c5, \"ProgressCircles\");","map":{"version":3,"names":["React","styled","RowBetween","AutoColumn","jsxDEV","_jsxDEV","Grouping","_c","Circle","div","theme","confirmed","disabled","colors","backgroundDisabled","success","primary","_c2","CircleRow","_c3","Connector","prevConfirmed","_c4","ProgressCircles","steps","rest","justify","children","map","step","i","fileName","_jsxFileName","lineNumber","columnNumber","length","_c5","$RefreshReg$"],"sources":["C:/Users/frkul/Documents/swapUI_pancake-frontend/src/views/Swap/components/ProgressSteps.tsx"],"sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { RowBetween } from 'components/Layout/Row'\r\nimport { AutoColumn } from 'components/Layout/Column'\r\n\r\nconst Grouping = styled(RowBetween)`\r\n  width: 50%;\r\n`\r\n\r\nconst Circle = styled.div<{ confirmed?: boolean; disabled?: boolean }>`\r\n  min-width: 20px;\r\n  min-height: 20px;\r\n  background-color: ${({ theme, confirmed, disabled }) =>\r\n    disabled ? theme.colors.backgroundDisabled : confirmed ? theme.colors.success : theme.colors.primary};\r\n  border-radius: 50%;\r\n  color: #ffffff;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  line-height: 8px;\r\n  font-size: 12px;\r\n`\r\n\r\nconst CircleRow = styled.div`\r\n  width: calc(100% - 20px);\r\n  display: flex;\r\n  align-items: center;\r\n`\r\n\r\nconst Connector = styled.div<{ prevConfirmed?: boolean; disabled?: boolean }>`\r\n  width: 100%;\r\n  height: 2px;\r\n  background: linear-gradient(\r\n    90deg,\r\n    ${({ theme, prevConfirmed, disabled }) =>\r\n        disabled ? theme.colors.backgroundDisabled : prevConfirmed ? theme.colors.success : theme.colors.primary}\r\n      0%,\r\n    ${({ theme, prevConfirmed, disabled }) =>\r\n        disabled\r\n          ? theme.colors.backgroundDisabled\r\n          : prevConfirmed\r\n          ? theme.colors.primary\r\n          : theme.colors.backgroundDisabled}\r\n      80%\r\n  );\r\n  opacity: 0.6;\r\n`\r\n\r\ninterface ProgressCirclesProps {\r\n  steps: boolean[]\r\n  disabled?: boolean\r\n}\r\n\r\n/**\r\n * Based on array of steps, create a step counter of circles.\r\n * A circle can be enabled, disabled, or confirmed. States are derived\r\n * from previous step.\r\n *\r\n * An extra circle is added to represent the ability to swap, add, or remove.\r\n * This step will never be marked as complete (because no 'txn done' state in body ui).\r\n *\r\n * @param steps  array of booleans where true means step is complete\r\n */\r\nexport default function ProgressCircles({ steps, disabled = false, ...rest }: ProgressCirclesProps) {\r\n  return (\r\n    <AutoColumn justify=\"center\" {...rest}>\r\n      <Grouping>\r\n        {steps.map((step, i) => {\r\n          return (\r\n            // eslint-disable-next-line react/no-array-index-key\r\n            <CircleRow key={i}>\r\n              <Circle confirmed={step} disabled={disabled || (!steps[i - 1] && i !== 0)}>\r\n                {step ? '✓' : i + 1}\r\n              </Circle>\r\n              <Connector prevConfirmed={step} disabled={disabled} />\r\n            </CircleRow>\r\n          )\r\n        })}\r\n        <Circle disabled={disabled || !steps[steps.length - 1]}>{steps.length + 1}</Circle>\r\n      </Grouping>\r\n    </AutoColumn>\r\n  )\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}