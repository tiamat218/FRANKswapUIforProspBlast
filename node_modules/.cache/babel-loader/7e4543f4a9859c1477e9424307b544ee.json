{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Devrim\\\\Documents\\\\swapUIforProspBlast\\\\src\\\\views\\\\Voting\\\\Proposal\\\\Results.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Box, Text, Flex, Card, CardBody, CardHeader, Heading, Progress, Skeleton, Tag, CheckmarkCircleIcon } from '@pancakeswap/uikit';\nimport { useWeb3React } from '@web3-react/core';\nimport times from 'lodash/times';\nimport { VotingStateLoadingStatus } from 'state/types';\nimport { useGetVotingStateLoadingStatus } from 'state/voting/hooks';\nimport { useTranslation } from 'contexts/Localization';\nimport { calculateVoteResults, getTotalFromVotes } from '../helpers';\nimport TextEllipsis from '../components/TextEllipsis';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Results = ({\n  choices,\n  votes\n}) => {\n  _s();\n  const {\n    t\n  } = useTranslation();\n  const results = calculateVoteResults(votes);\n  const votingStatus = useGetVotingStateLoadingStatus();\n  const {\n    account\n  } = useWeb3React();\n  const totalVotes = getTotalFromVotes(votes);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n      children: /*#__PURE__*/_jsxDEV(Heading, {\n        as: \"h3\",\n        scale: \"md\",\n        children: t('Current Results')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n      children: [votingStatus === VotingStateLoadingStatus.IDLE && choices.map((choice, index) => {\n        const choiceVotes = results[choice] || [];\n        const totalChoiceVote = getTotalFromVotes(choiceVotes);\n        const progress = totalVotes.eq(0) ? 0 : totalChoiceVote.div(totalVotes).times(100).toNumber();\n        const hasVoted = choiceVotes.some(vote => {\n          return account && vote.voter.toLowerCase() === account.toLowerCase();\n        });\n        return /*#__PURE__*/_jsxDEV(Box, {\n          mt: index > 0 ? '24px' : '0px',\n          children: [/*#__PURE__*/_jsxDEV(Flex, {\n            alignItems: \"center\",\n            mb: \"8px\",\n            children: [/*#__PURE__*/_jsxDEV(TextEllipsis, {\n              mb: \"4px\",\n              title: choice,\n              children: choice\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 19\n            }, this), hasVoted && /*#__PURE__*/_jsxDEV(Tag, {\n              variant: \"success\",\n              outline: true,\n              ml: \"8px\",\n              children: [/*#__PURE__*/_jsxDEV(CheckmarkCircleIcon, {\n                mr: \"4px\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 23\n              }, this), \" \", t('Voted')]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            mb: \"4px\",\n            children: /*#__PURE__*/_jsxDEV(Progress, {\n              primaryStep: progress,\n              scale: \"sm\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Flex, {\n            alignItems: \"center\",\n            justifyContent: \"space-between\",\n            children: [/*#__PURE__*/_jsxDEV(Text, {\n              color: \"textSubtle\",\n              children: t('%total% Votes', {\n                total: totalChoiceVote.toFormat(3)\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Text, {\n              children: [progress.toLocaleString(undefined, {\n                minimumFractionDigits: 2,\n                maximumFractionDigits: 2\n              }), \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 17\n          }, this)]\n        }, choice, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 15\n        }, this);\n      }), votingStatus === VotingStateLoadingStatus.LOADING && times(choices.length).map((count, index) => {\n        return /*#__PURE__*/_jsxDEV(Box, {\n          mt: index > 0 ? '24px' : '0px',\n          children: /*#__PURE__*/_jsxDEV(Skeleton, {\n            height: \"36px\",\n            mb: \"4px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 17\n          }, this)\n        }, count, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 15\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(Results, \"lIzrP0ojFpFJhAWtMOaNFkaDF/8=\", false, function () {\n  return [useTranslation, useGetVotingStateLoadingStatus, useWeb3React];\n});\n_c = Results;\nexport default Results;\nvar _c;\n$RefreshReg$(_c, \"Results\");","map":{"version":3,"names":["React","Box","Text","Flex","Card","CardBody","CardHeader","Heading","Progress","Skeleton","Tag","CheckmarkCircleIcon","useWeb3React","times","VotingStateLoadingStatus","useGetVotingStateLoadingStatus","useTranslation","calculateVoteResults","getTotalFromVotes","TextEllipsis","jsxDEV","_jsxDEV","Results","choices","votes","_s","t","results","votingStatus","account","totalVotes","children","as","scale","fileName","_jsxFileName","lineNumber","columnNumber","IDLE","map","choice","index","choiceVotes","totalChoiceVote","progress","eq","div","toNumber","hasVoted","some","vote","voter","toLowerCase","mt","alignItems","mb","title","variant","outline","ml","mr","primaryStep","justifyContent","color","total","toFormat","toLocaleString","undefined","minimumFractionDigits","maximumFractionDigits","LOADING","length","count","height","_c","$RefreshReg$"],"sources":["C:/Users/Devrim/Documents/swapUIforProspBlast/src/views/Voting/Proposal/Results.tsx"],"sourcesContent":["import React from 'react'\r\nimport {\r\n  Box,\r\n  Text,\r\n  Flex,\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  Heading,\r\n  Progress,\r\n  Skeleton,\r\n  Tag,\r\n  CheckmarkCircleIcon,\r\n} from '@pancakeswap/uikit'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport times from 'lodash/times'\r\nimport { Vote, VotingStateLoadingStatus } from 'state/types'\r\nimport { useGetVotingStateLoadingStatus } from 'state/voting/hooks'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { calculateVoteResults, getTotalFromVotes } from '../helpers'\r\nimport TextEllipsis from '../components/TextEllipsis'\r\n\r\ninterface ResultsProps {\r\n  choices: string[]\r\n  votes: Vote[]\r\n}\r\n\r\nconst Results: React.FC<ResultsProps> = ({ choices, votes }) => {\r\n  const { t } = useTranslation()\r\n  const results = calculateVoteResults(votes)\r\n  const votingStatus = useGetVotingStateLoadingStatus()\r\n  const { account } = useWeb3React()\r\n  const totalVotes = getTotalFromVotes(votes)\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <Heading as=\"h3\" scale=\"md\">\r\n          {t('Current Results')}\r\n        </Heading>\r\n      </CardHeader>\r\n      <CardBody>\r\n        {votingStatus === VotingStateLoadingStatus.IDLE &&\r\n          choices.map((choice, index) => {\r\n            const choiceVotes = results[choice] || []\r\n            const totalChoiceVote = getTotalFromVotes(choiceVotes)\r\n\r\n            const progress = totalVotes.eq(0) ? 0 : totalChoiceVote.div(totalVotes).times(100).toNumber()\r\n            const hasVoted = choiceVotes.some((vote) => {\r\n              return account && vote.voter.toLowerCase() === account.toLowerCase()\r\n            })\r\n\r\n            return (\r\n              <Box key={choice} mt={index > 0 ? '24px' : '0px'}>\r\n                <Flex alignItems=\"center\" mb=\"8px\">\r\n                  <TextEllipsis mb=\"4px\" title={choice}>\r\n                    {choice}\r\n                  </TextEllipsis>\r\n                  {hasVoted && (\r\n                    <Tag variant=\"success\" outline ml=\"8px\">\r\n                      <CheckmarkCircleIcon mr=\"4px\" /> {t('Voted')}\r\n                    </Tag>\r\n                  )}\r\n                </Flex>\r\n                <Box mb=\"4px\">\r\n                  <Progress primaryStep={progress} scale=\"sm\" />\r\n                </Box>\r\n                <Flex alignItems=\"center\" justifyContent=\"space-between\">\r\n                  <Text color=\"textSubtle\">{t('%total% Votes', { total: totalChoiceVote.toFormat(3) })}</Text>\r\n                  <Text>\r\n                    {progress.toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 })}%\r\n                  </Text>\r\n                </Flex>\r\n              </Box>\r\n            )\r\n          })}\r\n\r\n        {votingStatus === VotingStateLoadingStatus.LOADING &&\r\n          times(choices.length).map((count, index) => {\r\n            return (\r\n              <Box key={count} mt={index > 0 ? '24px' : '0px'}>\r\n                <Skeleton height=\"36px\" mb=\"4px\" />\r\n              </Box>\r\n            )\r\n          })}\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default Results\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}