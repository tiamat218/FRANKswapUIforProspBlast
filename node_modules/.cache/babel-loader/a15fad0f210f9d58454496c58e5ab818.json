{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Devrim\\\\Documents\\\\FRANKswapUIforProspBlast\\\\src\\\\components\\\\SearchModal\\\\CurrencyList.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useCallback, useMemo } from 'react';\nimport { Currency, currencyEquals, ETHER, Token } from '@pancakeswap/sdk';\nimport { Text } from '@pancakeswap/uikit';\nimport styled from 'styled-components';\nimport { FixedSizeList } from 'react-window';\nimport { wrappedCurrency } from 'utils/wrappedCurrency';\nimport { LightGreyCard } from 'components/Card';\nimport QuestionHelper from 'components/QuestionHelper';\nimport { useTranslation } from 'contexts/Localization';\nimport useActiveWeb3React from 'hooks/useActiveWeb3React';\nimport { useCombinedActiveList } from '../../state/lists/hooks';\nimport { useCurrencyBalance } from '../../state/wallet/hooks';\nimport { useIsUserAddedToken, useAllInactiveTokens } from '../../hooks/Tokens';\nimport Column from '../Layout/Column';\nimport { RowFixed, RowBetween } from '../Layout/Row';\nimport { CurrencyLogo } from '../Logo';\nimport CircleLoader from '../Loader/CircleLoader';\nimport { isTokenOnList } from '../../utils';\nimport ImportRow from './ImportRow';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction currencyKey(currency) {\n  return currency instanceof Token ? currency.address : currency === ETHER ? 'ETHER' : '';\n}\n\nconst StyledBalanceText = styled(Text)`\n  white-space: nowrap;\n  overflow: hidden;\n  max-width: 5rem;\n  text-overflow: ellipsis;\n`;\n_c = StyledBalanceText;\nconst FixedContentRow = styled.div`\n  padding: 4px 20px;\n  height: 56px;\n  display: grid;\n  grid-gap: 16px;\n  align-items: center;\n`;\n_c2 = FixedContentRow;\n\nfunction Balance({\n  balance\n}) {\n  return /*#__PURE__*/_jsxDEV(StyledBalanceText, {\n    title: balance.toExact(),\n    children: balance.toSignificant(4)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 10\n  }, this);\n}\n\n_c3 = Balance;\nconst MenuItem = styled(RowBetween)`\n  padding: 4px 20px;\n  height: 56px;\n  display: grid;\n  grid-template-columns: auto minmax(auto, 1fr) minmax(0, 72px);\n  grid-gap: 8px;\n  cursor: ${({\n  disabled\n}) => !disabled && 'pointer'};\n  pointer-events: ${({\n  disabled\n}) => disabled && 'none'};\n  :hover {\n    background-color: ${({\n  theme,\n  disabled\n}) => !disabled && theme.colors.background};\n  }\n  opacity: ${({\n  disabled,\n  selected\n}) => disabled || selected ? 0.5 : 1};\n`;\n_c4 = MenuItem;\n\nfunction CurrencyRow({\n  currency,\n  onSelect,\n  isSelected,\n  otherSelected,\n  style\n}) {\n  _s();\n\n  const {\n    account\n  } = useActiveWeb3React();\n  const key = currencyKey(currency);\n  const selectedTokenList = useCombinedActiveList();\n  const isOnSelectedList = isTokenOnList(selectedTokenList, currency);\n  const customAdded = useIsUserAddedToken(currency);\n  const balance = useCurrencyBalance(account !== null && account !== void 0 ? account : undefined, currency); // only show add or remove buttons if not on selected list\n\n  return /*#__PURE__*/_jsxDEV(MenuItem, {\n    style: style,\n    className: `token-item-${key}`,\n    onClick: () => isSelected ? null : onSelect(),\n    disabled: isSelected,\n    selected: otherSelected,\n    children: [/*#__PURE__*/_jsxDEV(CurrencyLogo, {\n      currency: currency,\n      size: \"24px\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Column, {\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        bold: true,\n        children: currency.symbol\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        color: \"textSubtle\",\n        small: true,\n        ellipsis: true,\n        maxWidth: \"200px\",\n        children: [!isOnSelectedList && customAdded && 'Added by user â€¢', \" \", currency.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RowFixed, {\n      style: {\n        justifySelf: 'flex-end'\n      },\n      children: balance ? /*#__PURE__*/_jsxDEV(Balance, {\n        balance: balance\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 20\n      }, this) : account ? /*#__PURE__*/_jsxDEV(CircleLoader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 62\n      }, this) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CurrencyRow, \"KdYJt/1R7/tEnD0qTLSc2BU2fVE=\", false, function () {\n  return [useActiveWeb3React, useCombinedActiveList, useIsUserAddedToken, useCurrencyBalance];\n});\n\n_c5 = CurrencyRow;\nexport default function CurrencyList({\n  height,\n  currencies,\n  selectedCurrency,\n  onCurrencySelect,\n  otherCurrency,\n  fixedListRef,\n  showETH,\n  showImportView,\n  setImportToken,\n  breakIndex\n}) {\n  _s2();\n\n  const itemData = useMemo(() => {\n    let formatted = showETH ? [Currency.ETHER, ...currencies] : currencies;\n\n    if (breakIndex !== undefined) {\n      formatted = [...formatted.slice(0, breakIndex), undefined, ...formatted.slice(breakIndex, formatted.length)];\n    }\n\n    return formatted;\n  }, [breakIndex, currencies, showETH]);\n  const {\n    chainId\n  } = useActiveWeb3React();\n  const {\n    t\n  } = useTranslation();\n  const inactiveTokens = useAllInactiveTokens();\n  const Row = useCallback(({\n    data,\n    index,\n    style\n  }) => {\n    const currency = data[index];\n    const isSelected = Boolean(selectedCurrency && currencyEquals(selectedCurrency, currency));\n    const otherSelected = Boolean(otherCurrency && currencyEquals(otherCurrency, currency));\n\n    const handleSelect = () => onCurrencySelect(currency);\n\n    const token = wrappedCurrency(currency, chainId);\n    const showImport = inactiveTokens && token && Object.keys(inactiveTokens).includes(token.address);\n\n    if (index === breakIndex || !data) {\n      return /*#__PURE__*/_jsxDEV(FixedContentRow, {\n        style: style,\n        children: /*#__PURE__*/_jsxDEV(LightGreyCard, {\n          padding: \"8px 12px\",\n          borderRadius: \"8px\",\n          children: /*#__PURE__*/_jsxDEV(RowBetween, {\n            children: [/*#__PURE__*/_jsxDEV(Text, {\n              small: true,\n              children: t('Expanded results from inactive Token Lists')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(QuestionHelper, {\n              text: t(\"Tokens from inactive lists. Import specific tokens below or click 'Manage' to activate more lists.\"),\n              ml: \"4px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }, this);\n    }\n\n    if (showImport && token) {\n      return /*#__PURE__*/_jsxDEV(ImportRow, {\n        style: style,\n        token: token,\n        showImportView: showImportView,\n        setImportToken: setImportToken,\n        dim: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(CurrencyRow, {\n      style: style,\n      currency: currency,\n      isSelected: isSelected,\n      onSelect: handleSelect,\n      otherSelected: otherSelected\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 9\n    }, this);\n  }, [chainId, inactiveTokens, onCurrencySelect, otherCurrency, selectedCurrency, setImportToken, showImportView, breakIndex, t]);\n  const itemKey = useCallback((index, data) => currencyKey(data[index]), []);\n  return /*#__PURE__*/_jsxDEV(FixedSizeList, {\n    height: height,\n    ref: fixedListRef,\n    width: \"100%\",\n    itemData: itemData,\n    itemCount: itemData.length,\n    itemSize: 56,\n    itemKey: itemKey,\n    children: Row\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 200,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(CurrencyList, \"cs4GaH7BdcN8z9+EkbwUw4wqgVw=\", false, function () {\n  return [useActiveWeb3React, useTranslation, useAllInactiveTokens];\n});\n\n_c6 = CurrencyList;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"StyledBalanceText\");\n$RefreshReg$(_c2, \"FixedContentRow\");\n$RefreshReg$(_c3, \"Balance\");\n$RefreshReg$(_c4, \"MenuItem\");\n$RefreshReg$(_c5, \"CurrencyRow\");\n$RefreshReg$(_c6, \"CurrencyList\");","map":{"version":3,"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/components/SearchModal/CurrencyList.tsx"],"names":["React","useCallback","useMemo","Currency","currencyEquals","ETHER","Token","Text","styled","FixedSizeList","wrappedCurrency","LightGreyCard","QuestionHelper","useTranslation","useActiveWeb3React","useCombinedActiveList","useCurrencyBalance","useIsUserAddedToken","useAllInactiveTokens","Column","RowFixed","RowBetween","CurrencyLogo","CircleLoader","isTokenOnList","ImportRow","currencyKey","currency","address","StyledBalanceText","FixedContentRow","div","Balance","balance","toExact","toSignificant","MenuItem","disabled","theme","colors","background","selected","CurrencyRow","onSelect","isSelected","otherSelected","style","account","key","selectedTokenList","isOnSelectedList","customAdded","undefined","symbol","name","justifySelf","CurrencyList","height","currencies","selectedCurrency","onCurrencySelect","otherCurrency","fixedListRef","showETH","showImportView","setImportToken","breakIndex","itemData","formatted","slice","length","chainId","t","inactiveTokens","Row","data","index","Boolean","handleSelect","token","showImport","Object","keys","includes","itemKey"],"mappings":"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","sourcesContent":["import React, { CSSProperties, MutableRefObject, useCallback, useMemo } from 'react'\r\nimport { Currency, CurrencyAmount, currencyEquals, ETHER, Token } from '@pancakeswap/sdk'\r\nimport { Text } from '@pancakeswap/uikit'\r\nimport styled from 'styled-components'\r\nimport { FixedSizeList } from 'react-window'\r\nimport { wrappedCurrency } from 'utils/wrappedCurrency'\r\nimport { LightGreyCard } from 'components/Card'\r\nimport QuestionHelper from 'components/QuestionHelper'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport { useCombinedActiveList } from '../../state/lists/hooks'\r\nimport { useCurrencyBalance } from '../../state/wallet/hooks'\r\nimport { useIsUserAddedToken, useAllInactiveTokens } from '../../hooks/Tokens'\r\nimport Column from '../Layout/Column'\r\nimport { RowFixed, RowBetween } from '../Layout/Row'\r\nimport { CurrencyLogo } from '../Logo'\r\nimport CircleLoader from '../Loader/CircleLoader'\r\nimport { isTokenOnList } from '../../utils'\r\nimport ImportRow from './ImportRow'\r\n\r\nfunction currencyKey(currency: Currency): string {\r\n  return currency instanceof Token ? currency.address : currency === ETHER ? 'ETHER' : ''\r\n}\r\n\r\nconst StyledBalanceText = styled(Text)`\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  max-width: 5rem;\r\n  text-overflow: ellipsis;\r\n`\r\n\r\nconst FixedContentRow = styled.div`\r\n  padding: 4px 20px;\r\n  height: 56px;\r\n  display: grid;\r\n  grid-gap: 16px;\r\n  align-items: center;\r\n`\r\n\r\nfunction Balance({ balance }: { balance: CurrencyAmount }) {\r\n  return <StyledBalanceText title={balance.toExact()}>{balance.toSignificant(4)}</StyledBalanceText>\r\n}\r\n\r\nconst MenuItem = styled(RowBetween)<{ disabled: boolean; selected: boolean }>`\r\n  padding: 4px 20px;\r\n  height: 56px;\r\n  display: grid;\r\n  grid-template-columns: auto minmax(auto, 1fr) minmax(0, 72px);\r\n  grid-gap: 8px;\r\n  cursor: ${({ disabled }) => !disabled && 'pointer'};\r\n  pointer-events: ${({ disabled }) => disabled && 'none'};\r\n  :hover {\r\n    background-color: ${({ theme, disabled }) => !disabled && theme.colors.background};\r\n  }\r\n  opacity: ${({ disabled, selected }) => (disabled || selected ? 0.5 : 1)};\r\n`\r\n\r\nfunction CurrencyRow({\r\n  currency,\r\n  onSelect,\r\n  isSelected,\r\n  otherSelected,\r\n  style,\r\n}: {\r\n  currency: Currency\r\n  onSelect: () => void\r\n  isSelected: boolean\r\n  otherSelected: boolean\r\n  style: CSSProperties\r\n}) {\r\n  const { account } = useActiveWeb3React()\r\n  const key = currencyKey(currency)\r\n  const selectedTokenList = useCombinedActiveList()\r\n  const isOnSelectedList = isTokenOnList(selectedTokenList, currency)\r\n  const customAdded = useIsUserAddedToken(currency)\r\n  const balance = useCurrencyBalance(account ?? undefined, currency)\r\n\r\n  // only show add or remove buttons if not on selected list\r\n  return (\r\n    <MenuItem\r\n      style={style}\r\n      className={`token-item-${key}`}\r\n      onClick={() => (isSelected ? null : onSelect())}\r\n      disabled={isSelected}\r\n      selected={otherSelected}\r\n    >\r\n      <CurrencyLogo currency={currency} size=\"24px\" />\r\n      <Column>\r\n        <Text bold>{currency.symbol}</Text>\r\n        <Text color=\"textSubtle\" small ellipsis maxWidth=\"200px\">\r\n          {!isOnSelectedList && customAdded && 'Added by user â€¢'} {currency.name}\r\n        </Text>\r\n      </Column>\r\n      <RowFixed style={{ justifySelf: 'flex-end' }}>\r\n        {balance ? <Balance balance={balance} /> : account ? <CircleLoader /> : null}\r\n      </RowFixed>\r\n    </MenuItem>\r\n  )\r\n}\r\n\r\nexport default function CurrencyList({\r\n  height,\r\n  currencies,\r\n  selectedCurrency,\r\n  onCurrencySelect,\r\n  otherCurrency,\r\n  fixedListRef,\r\n  showETH,\r\n  showImportView,\r\n  setImportToken,\r\n  breakIndex,\r\n}: {\r\n  height: number\r\n  currencies: Currency[]\r\n  selectedCurrency?: Currency | null\r\n  onCurrencySelect: (currency: Currency) => void\r\n  otherCurrency?: Currency | null\r\n  fixedListRef?: MutableRefObject<FixedSizeList | undefined>\r\n  showETH: boolean\r\n  showImportView: () => void\r\n  setImportToken: (token: Token) => void\r\n  breakIndex: number | undefined\r\n}) {\r\n  const itemData: (Currency | undefined)[] = useMemo(() => {\r\n    let formatted: (Currency | undefined)[] = showETH ? [Currency.ETHER, ...currencies] : currencies\r\n    if (breakIndex !== undefined) {\r\n      formatted = [...formatted.slice(0, breakIndex), undefined, ...formatted.slice(breakIndex, formatted.length)]\r\n    }\r\n    return formatted\r\n  }, [breakIndex, currencies, showETH])\r\n\r\n  const { chainId } = useActiveWeb3React()\r\n\r\n  const { t } = useTranslation()\r\n\r\n  const inactiveTokens: {\r\n    [address: string]: Token\r\n  } = useAllInactiveTokens()\r\n\r\n  const Row = useCallback(\r\n    ({ data, index, style }) => {\r\n      const currency: Currency = data[index]\r\n      const isSelected = Boolean(selectedCurrency && currencyEquals(selectedCurrency, currency))\r\n      const otherSelected = Boolean(otherCurrency && currencyEquals(otherCurrency, currency))\r\n      const handleSelect = () => onCurrencySelect(currency)\r\n\r\n      const token = wrappedCurrency(currency, chainId)\r\n\r\n      const showImport = inactiveTokens && token && Object.keys(inactiveTokens).includes(token.address)\r\n\r\n      if (index === breakIndex || !data) {\r\n        return (\r\n          <FixedContentRow style={style}>\r\n            <LightGreyCard padding=\"8px 12px\" borderRadius=\"8px\">\r\n              <RowBetween>\r\n                <Text small>{t('Expanded results from inactive Token Lists')}</Text>\r\n                <QuestionHelper\r\n                  text={t(\r\n                    \"Tokens from inactive lists. Import specific tokens below or click 'Manage' to activate more lists.\",\r\n                  )}\r\n                  ml=\"4px\"\r\n                />\r\n              </RowBetween>\r\n            </LightGreyCard>\r\n          </FixedContentRow>\r\n        )\r\n      }\r\n\r\n      if (showImport && token) {\r\n        return (\r\n          <ImportRow style={style} token={token} showImportView={showImportView} setImportToken={setImportToken} dim />\r\n        )\r\n      }\r\n      return (\r\n        <CurrencyRow\r\n          style={style}\r\n          currency={currency}\r\n          isSelected={isSelected}\r\n          onSelect={handleSelect}\r\n          otherSelected={otherSelected}\r\n        />\r\n      )\r\n    },\r\n    [\r\n      chainId,\r\n      inactiveTokens,\r\n      onCurrencySelect,\r\n      otherCurrency,\r\n      selectedCurrency,\r\n      setImportToken,\r\n      showImportView,\r\n      breakIndex,\r\n      t,\r\n    ],\r\n  )\r\n\r\n  const itemKey = useCallback((index: number, data: any) => currencyKey(data[index]), [])\r\n\r\n  return (\r\n    <FixedSizeList\r\n      height={height}\r\n      ref={fixedListRef as any}\r\n      width=\"100%\"\r\n      itemData={itemData}\r\n      itemCount={itemData.length}\r\n      itemSize={56}\r\n      itemKey={itemKey}\r\n    >\r\n      {Row}\r\n    </FixedSizeList>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}