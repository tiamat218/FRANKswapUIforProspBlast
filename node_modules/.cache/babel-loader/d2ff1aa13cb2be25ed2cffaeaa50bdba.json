{"ast":null,"code":"import { createAction } from '@reduxjs/toolkit';\nconst ADDRESS_REGEX = /^0x[a-fA-F0-9]{40}$/;\nconst LOWER_HEX_REGEX = /^0x[a-f0-9]*$/;\nexport function toCallKey(call) {\n  if (!ADDRESS_REGEX.test(call.address)) {\n    throw new Error(`Invalid address: ${call.address}`);\n  }\n  if (!LOWER_HEX_REGEX.test(call.callData)) {\n    throw new Error(`Invalid hex: ${call.callData}`);\n  }\n  return `${call.address}-${call.callData}`;\n}\nexport function parseCallKey(callKey) {\n  const pcs = callKey.split('-');\n  if (pcs.length !== 2) {\n    throw new Error(`Invalid call key: ${callKey}`);\n  }\n  return {\n    address: pcs[0],\n    callData: pcs[1]\n  };\n}\nexport const addMulticallListeners = createAction('multicall/addMulticallListeners');\nexport const removeMulticallListeners = createAction('multicall/removeMulticallListeners');\nexport const fetchingMulticallResults = createAction('multicall/fetchingMulticallResults');\nexport const errorFetchingMulticallResults = createAction('multicall/errorFetchingMulticallResults');\nexport const updateMulticallResults = createAction('multicall/updateMulticallResults');","map":{"version":3,"names":["createAction","ADDRESS_REGEX","LOWER_HEX_REGEX","toCallKey","call","test","address","Error","callData","parseCallKey","callKey","pcs","split","length","addMulticallListeners","removeMulticallListeners","fetchingMulticallResults","errorFetchingMulticallResults","updateMulticallResults"],"sources":["C:/Users/frkul/Documents/swapUI_pancake-frontend/src/state/multicall/actions.ts"],"sourcesContent":["import { createAction } from '@reduxjs/toolkit'\r\n\r\nexport interface Call {\r\n  address: string\r\n  callData: string\r\n}\r\n\r\nconst ADDRESS_REGEX = /^0x[a-fA-F0-9]{40}$/\r\nconst LOWER_HEX_REGEX = /^0x[a-f0-9]*$/\r\nexport function toCallKey(call: Call): string {\r\n  if (!ADDRESS_REGEX.test(call.address)) {\r\n    throw new Error(`Invalid address: ${call.address}`)\r\n  }\r\n  if (!LOWER_HEX_REGEX.test(call.callData)) {\r\n    throw new Error(`Invalid hex: ${call.callData}`)\r\n  }\r\n  return `${call.address}-${call.callData}`\r\n}\r\n\r\nexport function parseCallKey(callKey: string): Call {\r\n  const pcs = callKey.split('-')\r\n  if (pcs.length !== 2) {\r\n    throw new Error(`Invalid call key: ${callKey}`)\r\n  }\r\n  return {\r\n    address: pcs[0],\r\n    callData: pcs[1],\r\n  }\r\n}\r\n\r\nexport interface ListenerOptions {\r\n  // how often this data should be fetched, by default 1\r\n  readonly blocksPerFetch?: number\r\n}\r\n\r\nexport const addMulticallListeners = createAction<{ chainId: number; calls: Call[]; options?: ListenerOptions }>(\r\n  'multicall/addMulticallListeners',\r\n)\r\nexport const removeMulticallListeners = createAction<{ chainId: number; calls: Call[]; options?: ListenerOptions }>(\r\n  'multicall/removeMulticallListeners',\r\n)\r\nexport const fetchingMulticallResults = createAction<{ chainId: number; calls: Call[]; fetchingBlockNumber: number }>(\r\n  'multicall/fetchingMulticallResults',\r\n)\r\nexport const errorFetchingMulticallResults = createAction<{\r\n  chainId: number\r\n  calls: Call[]\r\n  fetchingBlockNumber: number\r\n}>('multicall/errorFetchingMulticallResults')\r\nexport const updateMulticallResults = createAction<{\r\n  chainId: number\r\n  blockNumber: number\r\n  results: {\r\n    [callKey: string]: string | null\r\n  }\r\n}>('multicall/updateMulticallResults')\r\n"],"mappings":"AAAA,SAASA,YAAY,QAAQ,kBAAkB;AAO/C,MAAMC,aAAa,GAAG,qBAAqB;AAC3C,MAAMC,eAAe,GAAG,eAAe;AACvC,OAAO,SAASC,SAASA,CAACC,IAAU,EAAU;EAC5C,IAAI,CAACH,aAAa,CAACI,IAAI,CAACD,IAAI,CAACE,OAAO,CAAC,EAAE;IACrC,MAAM,IAAIC,KAAK,CAAC,oBAAoBH,IAAI,CAACE,OAAO,EAAE,CAAC;EACrD;EACA,IAAI,CAACJ,eAAe,CAACG,IAAI,CAACD,IAAI,CAACI,QAAQ,CAAC,EAAE;IACxC,MAAM,IAAID,KAAK,CAAC,gBAAgBH,IAAI,CAACI,QAAQ,EAAE,CAAC;EAClD;EACA,OAAO,GAAGJ,IAAI,CAACE,OAAO,IAAIF,IAAI,CAACI,QAAQ,EAAE;AAC3C;AAEA,OAAO,SAASC,YAAYA,CAACC,OAAe,EAAQ;EAClD,MAAMC,GAAG,GAAGD,OAAO,CAACE,KAAK,CAAC,GAAG,CAAC;EAC9B,IAAID,GAAG,CAACE,MAAM,KAAK,CAAC,EAAE;IACpB,MAAM,IAAIN,KAAK,CAAC,qBAAqBG,OAAO,EAAE,CAAC;EACjD;EACA,OAAO;IACLJ,OAAO,EAAEK,GAAG,CAAC,CAAC,CAAC;IACfH,QAAQ,EAAEG,GAAG,CAAC,CAAC;EACjB,CAAC;AACH;AAOA,OAAO,MAAMG,qBAAqB,GAAGd,YAAY,CAC/C,iCACF,CAAC;AACD,OAAO,MAAMe,wBAAwB,GAAGf,YAAY,CAClD,oCACF,CAAC;AACD,OAAO,MAAMgB,wBAAwB,GAAGhB,YAAY,CAClD,oCACF,CAAC;AACD,OAAO,MAAMiB,6BAA6B,GAAGjB,YAAY,CAItD,yCAAyC,CAAC;AAC7C,OAAO,MAAMkB,sBAAsB,GAAGlB,YAAY,CAM/C,kCAAkC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}