{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\frkul\\\\Documents\\\\swapUI_pancake-frontend\\\\src\\\\views\\\\Swap\\\\components\\\\AdvancedSwapDetails.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { TradeType } from '@pancakeswap/sdk';\nimport { Text } from '@pancakeswap/uikit';\nimport { Field } from 'state/swap/actions';\nimport { useUserSlippageTolerance } from 'state/user/hooks';\nimport { computeSlippageAdjustedAmounts, computeTradePriceBreakdown } from 'utils/prices';\nimport { AutoColumn } from 'components/Layout/Column';\nimport QuestionHelper from 'components/QuestionHelper';\nimport { RowBetween, RowFixed } from 'components/Layout/Row';\nimport FormattedPriceImpact from './FormattedPriceImpact';\nimport SwapRoute from './SwapRoute';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction TradeSummary({\n  trade,\n  allowedSlippage\n}) {\n  var _ref, _slippageAdjustedAmou, _ref2, _slippageAdjustedAmou2;\n  const {\n    priceImpactWithoutFee,\n    realizedLPFee\n  } = computeTradePriceBreakdown(trade);\n  const isExactIn = trade.tradeType === TradeType.EXACT_INPUT;\n  const slippageAdjustedAmounts = computeSlippageAdjustedAmounts(trade, allowedSlippage);\n  return /*#__PURE__*/_jsxDEV(AutoColumn, {\n    style: {\n      padding: '0 16px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(RowBetween, {\n      children: [/*#__PURE__*/_jsxDEV(RowFixed, {\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"14px\",\n          color: \"textSubtle\",\n          children: isExactIn ? 'Minimum received' : 'Maximum sold'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(QuestionHelper, {\n          text: \"Your transaction will revert if there is a large, unfavorable price movement before it is confirmed.\",\n          ml: \"4px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RowFixed, {\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"14px\",\n          children: isExactIn ? (_ref = `${(_slippageAdjustedAmou = slippageAdjustedAmounts[Field.OUTPUT]) === null || _slippageAdjustedAmou === void 0 ? void 0 : _slippageAdjustedAmou.toSignificant(4)} ${trade.outputAmount.currency.symbol}`) !== null && _ref !== void 0 ? _ref : '-' : (_ref2 = `${(_slippageAdjustedAmou2 = slippageAdjustedAmounts[Field.INPUT]) === null || _slippageAdjustedAmou2 === void 0 ? void 0 : _slippageAdjustedAmou2.toSignificant(4)} ${trade.inputAmount.currency.symbol}`) !== null && _ref2 !== void 0 ? _ref2 : '-'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RowBetween, {\n      children: [/*#__PURE__*/_jsxDEV(RowFixed, {\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"14px\",\n          color: \"textSubtle\",\n          children: \"Price Impact\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(QuestionHelper, {\n          text: \"The difference between the market price and estimated price due to trade size.\",\n          ml: \"4px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormattedPriceImpact, {\n        priceImpact: priceImpactWithoutFee\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RowBetween, {\n      children: [/*#__PURE__*/_jsxDEV(RowFixed, {\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"14px\",\n          color: \"textSubtle\",\n          children: \"Liquidity Provider Fee\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(QuestionHelper, {\n          text: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Text, {\n              mb: \"12px\",\n              children: \"For each trade a 0.25% fee is paid\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Text, {\n              children: \"- 0.17% to LP token holders\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Text, {\n              children: \"- 0.03% to the Treasury\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Text, {\n              children: \"- 0.05% towards CAKE buyback and burn\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true),\n          ml: \"4px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        fontSize: \"14px\",\n        children: realizedLPFee ? `${realizedLPFee.toSignificant(4)} ${trade.inputAmount.currency.symbol}` : '-'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n_c = TradeSummary;\nexport function AdvancedSwapDetails({\n  trade\n}) {\n  _s();\n  const [allowedSlippage] = useUserSlippageTolerance();\n  const showRoute = Boolean(trade && trade.route.path.length > 2);\n  return /*#__PURE__*/_jsxDEV(AutoColumn, {\n    gap: \"0px\",\n    children: trade && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(TradeSummary, {\n        trade: trade,\n        allowedSlippage: allowedSlippage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this), showRoute && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(RowBetween, {\n          style: {\n            padding: '0 16px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              display: 'flex',\n              alignItems: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Text, {\n              fontSize: \"14px\",\n              color: \"textSubtle\",\n              children: \"Route\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(QuestionHelper, {\n              text: \"Routing through these tokens resulted in the best price for your trade.\",\n              ml: \"4px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(SwapRoute, {\n            trade: trade\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 15\n        }, this)\n      }, void 0, false)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n}\n_s(AdvancedSwapDetails, \"H61stQQnrbnQDlNsdLMys3w1hVM=\", false, function () {\n  return [useUserSlippageTolerance];\n});\n_c2 = AdvancedSwapDetails;\nvar _c, _c2;\n$RefreshReg$(_c, \"TradeSummary\");\n$RefreshReg$(_c2, \"AdvancedSwapDetails\");","map":{"version":3,"names":["React","TradeType","Text","Field","useUserSlippageTolerance","computeSlippageAdjustedAmounts","computeTradePriceBreakdown","AutoColumn","QuestionHelper","RowBetween","RowFixed","FormattedPriceImpact","SwapRoute","jsxDEV","_jsxDEV","Fragment","_Fragment","TradeSummary","trade","allowedSlippage","_ref","_slippageAdjustedAmou","_ref2","_slippageAdjustedAmou2","priceImpactWithoutFee","realizedLPFee","isExactIn","tradeType","EXACT_INPUT","slippageAdjustedAmounts","style","padding","children","fontSize","color","fileName","_jsxFileName","lineNumber","columnNumber","text","ml","OUTPUT","toSignificant","outputAmount","currency","symbol","INPUT","inputAmount","priceImpact","mb","_c","AdvancedSwapDetails","_s","showRoute","Boolean","route","path","length","gap","display","alignItems","_c2","$RefreshReg$"],"sources":["C:/Users/frkul/Documents/swapUI_pancake-frontend/src/views/Swap/components/AdvancedSwapDetails.tsx"],"sourcesContent":["import React from 'react'\r\nimport { Trade, TradeType } from '@pancakeswap/sdk'\r\nimport { Text } from '@pancakeswap/uikit'\r\nimport { Field } from 'state/swap/actions'\r\nimport { useUserSlippageTolerance } from 'state/user/hooks'\r\nimport { computeSlippageAdjustedAmounts, computeTradePriceBreakdown } from 'utils/prices'\r\nimport { AutoColumn } from 'components/Layout/Column'\r\nimport QuestionHelper from 'components/QuestionHelper'\r\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\r\nimport FormattedPriceImpact from './FormattedPriceImpact'\r\nimport SwapRoute from './SwapRoute'\r\n\r\nfunction TradeSummary({ trade, allowedSlippage }: { trade: Trade; allowedSlippage: number }) {\r\n  const { priceImpactWithoutFee, realizedLPFee } = computeTradePriceBreakdown(trade)\r\n  const isExactIn = trade.tradeType === TradeType.EXACT_INPUT\r\n  const slippageAdjustedAmounts = computeSlippageAdjustedAmounts(trade, allowedSlippage)\r\n\r\n  return (\r\n    <AutoColumn style={{ padding: '0 16px' }}>\r\n      <RowBetween>\r\n        <RowFixed>\r\n          <Text fontSize=\"14px\" color=\"textSubtle\">\r\n            {isExactIn ? 'Minimum received' : 'Maximum sold'}\r\n          </Text>\r\n          <QuestionHelper\r\n            text=\"Your transaction will revert if there is a large, unfavorable price movement before it is confirmed.\"\r\n            ml=\"4px\"\r\n          />\r\n        </RowFixed>\r\n        <RowFixed>\r\n          <Text fontSize=\"14px\">\r\n            {isExactIn\r\n              ? `${slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(4)} ${trade.outputAmount.currency.symbol}` ??\r\n                '-'\r\n              : `${slippageAdjustedAmounts[Field.INPUT]?.toSignificant(4)} ${trade.inputAmount.currency.symbol}` ?? '-'}\r\n          </Text>\r\n        </RowFixed>\r\n      </RowBetween>\r\n      <RowBetween>\r\n        <RowFixed>\r\n          <Text fontSize=\"14px\" color=\"textSubtle\">\r\n            Price Impact\r\n          </Text>\r\n          <QuestionHelper\r\n            text=\"The difference between the market price and estimated price due to trade size.\"\r\n            ml=\"4px\"\r\n          />\r\n        </RowFixed>\r\n        <FormattedPriceImpact priceImpact={priceImpactWithoutFee} />\r\n      </RowBetween>\r\n\r\n      <RowBetween>\r\n        <RowFixed>\r\n          <Text fontSize=\"14px\" color=\"textSubtle\">\r\n            Liquidity Provider Fee\r\n          </Text>\r\n          <QuestionHelper\r\n            text={\r\n              <>\r\n                <Text mb=\"12px\">For each trade a 0.25% fee is paid</Text>\r\n                <Text>- 0.17% to LP token holders</Text>\r\n                <Text>- 0.03% to the Treasury</Text>\r\n                <Text>- 0.05% towards CAKE buyback and burn</Text>\r\n              </>\r\n            }\r\n            ml=\"4px\"\r\n          />\r\n        </RowFixed>\r\n        <Text fontSize=\"14px\">\r\n          {realizedLPFee ? `${realizedLPFee.toSignificant(4)} ${trade.inputAmount.currency.symbol}` : '-'}\r\n        </Text>\r\n      </RowBetween>\r\n    </AutoColumn>\r\n  )\r\n}\r\n\r\nexport interface AdvancedSwapDetailsProps {\r\n  trade?: Trade\r\n}\r\n\r\nexport function AdvancedSwapDetails({ trade }: AdvancedSwapDetailsProps) {\r\n  const [allowedSlippage] = useUserSlippageTolerance()\r\n\r\n  const showRoute = Boolean(trade && trade.route.path.length > 2)\r\n\r\n  return (\r\n    <AutoColumn gap=\"0px\">\r\n      {trade && (\r\n        <>\r\n          <TradeSummary trade={trade} allowedSlippage={allowedSlippage} />\r\n          {showRoute && (\r\n            <>\r\n              <RowBetween style={{ padding: '0 16px' }}>\r\n                <span style={{ display: 'flex', alignItems: 'center' }}>\r\n                  <Text fontSize=\"14px\" color=\"textSubtle\">\r\n                    Route\r\n                  </Text>\r\n                  <QuestionHelper\r\n                    text=\"Routing through these tokens resulted in the best price for your trade.\"\r\n                    ml=\"4px\"\r\n                  />\r\n                </span>\r\n                <SwapRoute trade={trade} />\r\n              </RowBetween>\r\n            </>\r\n          )}\r\n        </>\r\n      )}\r\n    </AutoColumn>\r\n  )\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}