{"ast":null,"code":"import{useEffect,useRef}from'react';/**\r\n * Returns the previous value of the given value\r\n *\r\n * @see https://reactjs.org/docs/hooks-faq.html#how-to-get-the-previous-props-or-state\r\n */const usePreviousValue=value=>{const ref=useRef();useEffect(()=>{ref.current=value;},[value]);return ref.current;};export default usePreviousValue;","map":{"version":3,"names":["useEffect","useRef","usePreviousValue","value","ref","current"],"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/hooks/usePreviousValue.ts"],"sourcesContent":["import { useEffect, useRef } from 'react'\r\n\r\n/**\r\n * Returns the previous value of the given value\r\n *\r\n * @see https://reactjs.org/docs/hooks-faq.html#how-to-get-the-previous-props-or-state\r\n */\r\nconst usePreviousValue = (value: any) => {\r\n  const ref = useRef()\r\n\r\n  useEffect(() => {\r\n    ref.current = value\r\n  }, [value])\r\n\r\n  return ref.current\r\n}\r\n\r\nexport default usePreviousValue\r\n"],"mappings":"AAAA,OAASA,SAAS,CAAEC,MAAM,KAAQ,OAAO,CAEzC;AACA;AACA;AACA;AACA,GACA,KAAM,CAAAC,gBAAgB,CAAIC,KAAU,EAAK,CACvC,KAAM,CAAAC,GAAG,CAAGH,MAAM,CAAC,CAAC,CAEpBD,SAAS,CAAC,IAAM,CACdI,GAAG,CAACC,OAAO,CAAGF,KAAK,CACrB,CAAC,CAAE,CAACA,KAAK,CAAC,CAAC,CAEX,MAAO,CAAAC,GAAG,CAACC,OAAO,CACpB,CAAC,CAED,cAAe,CAAAH,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module"}