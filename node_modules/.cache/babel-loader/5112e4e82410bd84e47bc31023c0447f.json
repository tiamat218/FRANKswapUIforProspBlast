{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport teamsList from 'config/constants/teams';\nimport { getTeam, getTeams } from './helpers';\nconst teamsById = teamsList.reduce((accum, team) => {\n  return {\n    ...accum,\n    [team.id]: team\n  };\n}, {});\nconst initialState = {\n  isInitialized: false,\n  isLoading: true,\n  data: teamsById\n};\nexport const teamsSlice = createSlice({\n  name: 'teams',\n  initialState,\n  reducers: {\n    fetchStart: state => {\n      state.isLoading = true;\n    },\n    fetchFailed: state => {\n      state.isLoading = false;\n      state.isInitialized = true;\n    },\n    teamFetchSucceeded: (state, action) => {\n      state.isInitialized = true;\n      state.isLoading = false;\n      state.data[action.payload.id] = action.payload;\n    },\n    teamsFetchSucceeded: (state, action) => {\n      state.isInitialized = true;\n      state.isLoading = false;\n      state.data = action.payload;\n    }\n  }\n});\n\n// Actions\nexport const {\n  fetchStart,\n  teamFetchSucceeded,\n  fetchFailed,\n  teamsFetchSucceeded\n} = teamsSlice.actions;\n\n// Thunks\nexport const fetchTeam = teamId => async dispatch => {\n  try {\n    dispatch(fetchStart());\n    const team = await getTeam(teamId);\n    dispatch(teamFetchSucceeded(team));\n  } catch (error) {\n    dispatch(fetchFailed());\n  }\n};\nexport const fetchTeams = () => async dispatch => {\n  try {\n    dispatch(fetchStart());\n    const teams = await getTeams();\n    dispatch(teamsFetchSucceeded(teams));\n  } catch (error) {\n    dispatch(fetchFailed());\n  }\n};\nexport default teamsSlice.reducer;","map":{"version":3,"names":["createSlice","teamsList","getTeam","getTeams","teamsById","reduce","accum","team","id","initialState","isInitialized","isLoading","data","teamsSlice","name","reducers","fetchStart","state","fetchFailed","teamFetchSucceeded","action","payload","teamsFetchSucceeded","actions","fetchTeam","teamId","dispatch","error","fetchTeams","teams","reducer"],"sources":["C:/Users/frkul/Documents/swapUI_pancake-frontend/src/state/teams/index.tsx"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit'\r\nimport teamsList from 'config/constants/teams'\r\nimport { Team } from 'config/constants/types'\r\nimport { TeamsById, TeamsState } from '../types'\r\nimport { getTeam, getTeams } from './helpers'\r\n\r\nconst teamsById: TeamsById = teamsList.reduce((accum, team) => {\r\n  return {\r\n    ...accum,\r\n    [team.id]: team,\r\n  }\r\n}, {})\r\n\r\nconst initialState: TeamsState = {\r\n  isInitialized: false,\r\n  isLoading: true,\r\n  data: teamsById,\r\n}\r\n\r\nexport const teamsSlice = createSlice({\r\n  name: 'teams',\r\n  initialState,\r\n  reducers: {\r\n    fetchStart: (state) => {\r\n      state.isLoading = true\r\n    },\r\n    fetchFailed: (state) => {\r\n      state.isLoading = false\r\n      state.isInitialized = true\r\n    },\r\n    teamFetchSucceeded: (state, action: PayloadAction<Team>) => {\r\n      state.isInitialized = true\r\n      state.isLoading = false\r\n      state.data[action.payload.id] = action.payload\r\n    },\r\n    teamsFetchSucceeded: (state, action: PayloadAction<TeamsById>) => {\r\n      state.isInitialized = true\r\n      state.isLoading = false\r\n      state.data = action.payload\r\n    },\r\n  },\r\n})\r\n\r\n// Actions\r\nexport const { fetchStart, teamFetchSucceeded, fetchFailed, teamsFetchSucceeded } = teamsSlice.actions\r\n\r\n// Thunks\r\nexport const fetchTeam = (teamId: number) => async (dispatch) => {\r\n  try {\r\n    dispatch(fetchStart())\r\n    const team = await getTeam(teamId)\r\n    dispatch(teamFetchSucceeded(team))\r\n  } catch (error) {\r\n    dispatch(fetchFailed())\r\n  }\r\n}\r\n\r\nexport const fetchTeams = () => async (dispatch) => {\r\n  try {\r\n    dispatch(fetchStart())\r\n    const teams = await getTeams()\r\n    dispatch(teamsFetchSucceeded(teams))\r\n  } catch (error) {\r\n    dispatch(fetchFailed())\r\n  }\r\n}\r\n\r\nexport default teamsSlice.reducer\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAuB,kBAAkB;AAC7D,OAAOC,SAAS,MAAM,wBAAwB;AAG9C,SAASC,OAAO,EAAEC,QAAQ,QAAQ,WAAW;AAE7C,MAAMC,SAAoB,GAAGH,SAAS,CAACI,MAAM,CAAC,CAACC,KAAK,EAAEC,IAAI,KAAK;EAC7D,OAAO;IACL,GAAGD,KAAK;IACR,CAACC,IAAI,CAACC,EAAE,GAAGD;EACb,CAAC;AACH,CAAC,EAAE,CAAC,CAAC,CAAC;AAEN,MAAME,YAAwB,GAAG;EAC/BC,aAAa,EAAE,KAAK;EACpBC,SAAS,EAAE,IAAI;EACfC,IAAI,EAAER;AACR,CAAC;AAED,OAAO,MAAMS,UAAU,GAAGb,WAAW,CAAC;EACpCc,IAAI,EAAE,OAAO;EACbL,YAAY;EACZM,QAAQ,EAAE;IACRC,UAAU,EAAGC,KAAK,IAAK;MACrBA,KAAK,CAACN,SAAS,GAAG,IAAI;IACxB,CAAC;IACDO,WAAW,EAAGD,KAAK,IAAK;MACtBA,KAAK,CAACN,SAAS,GAAG,KAAK;MACvBM,KAAK,CAACP,aAAa,GAAG,IAAI;IAC5B,CAAC;IACDS,kBAAkB,EAAEA,CAACF,KAAK,EAAEG,MAA2B,KAAK;MAC1DH,KAAK,CAACP,aAAa,GAAG,IAAI;MAC1BO,KAAK,CAACN,SAAS,GAAG,KAAK;MACvBM,KAAK,CAACL,IAAI,CAACQ,MAAM,CAACC,OAAO,CAACb,EAAE,CAAC,GAAGY,MAAM,CAACC,OAAO;IAChD,CAAC;IACDC,mBAAmB,EAAEA,CAACL,KAAK,EAAEG,MAAgC,KAAK;MAChEH,KAAK,CAACP,aAAa,GAAG,IAAI;MAC1BO,KAAK,CAACN,SAAS,GAAG,KAAK;MACvBM,KAAK,CAACL,IAAI,GAAGQ,MAAM,CAACC,OAAO;IAC7B;EACF;AACF,CAAC,CAAC;;AAEF;AACA,OAAO,MAAM;EAAEL,UAAU;EAAEG,kBAAkB;EAAED,WAAW;EAAEI;AAAoB,CAAC,GAAGT,UAAU,CAACU,OAAO;;AAEtG;AACA,OAAO,MAAMC,SAAS,GAAIC,MAAc,IAAK,MAAOC,QAAQ,IAAK;EAC/D,IAAI;IACFA,QAAQ,CAACV,UAAU,CAAC,CAAC,CAAC;IACtB,MAAMT,IAAI,GAAG,MAAML,OAAO,CAACuB,MAAM,CAAC;IAClCC,QAAQ,CAACP,kBAAkB,CAACZ,IAAI,CAAC,CAAC;EACpC,CAAC,CAAC,OAAOoB,KAAK,EAAE;IACdD,QAAQ,CAACR,WAAW,CAAC,CAAC,CAAC;EACzB;AACF,CAAC;AAED,OAAO,MAAMU,UAAU,GAAGA,CAAA,KAAM,MAAOF,QAAQ,IAAK;EAClD,IAAI;IACFA,QAAQ,CAACV,UAAU,CAAC,CAAC,CAAC;IACtB,MAAMa,KAAK,GAAG,MAAM1B,QAAQ,CAAC,CAAC;IAC9BuB,QAAQ,CAACJ,mBAAmB,CAACO,KAAK,CAAC,CAAC;EACtC,CAAC,CAAC,OAAOF,KAAK,EAAE;IACdD,QAAQ,CAACR,WAAW,CAAC,CAAC,CAAC;EACzB;AACF,CAAC;AAED,eAAeL,UAAU,CAACiB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module"}