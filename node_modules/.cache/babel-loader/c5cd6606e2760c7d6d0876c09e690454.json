{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Devrim\\\\Documents\\\\FRANKswapUIforProspBlast\\\\src\\\\views\\\\Predictions\\\\components\\\\RoundResult\\\\RoundResult.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Flex, Skeleton, Text } from '@pancakeswap/uikit';\nimport { BetPosition } from 'state/types';\nimport { useTranslation } from 'contexts/Localization';\nimport { formatUsdv2, getPriceDifference } from '../../helpers';\nimport PositionTag from '../PositionTag';\nimport { LockPriceRow, PrizePoolRow, RoundResultBox } from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getBetPosition = (closePrice, lockPrice) => {\n  if (!closePrice) {\n    return null;\n  }\n\n  if (closePrice.eq(lockPrice)) {\n    return BetPosition.HOUSE;\n  }\n\n  return closePrice.gt(lockPrice) ? BetPosition.BULL : BetPosition.BEAR;\n};\n\nconst RoundResult = ({\n  round,\n  hasFailed = false,\n  children,\n  ...props\n}) => {\n  _s();\n\n  const {\n    lockPrice,\n    closePrice,\n    totalAmount\n  } = round;\n  const betPosition = getBetPosition(closePrice, lockPrice);\n  const isPositionUp = betPosition === BetPosition.BULL;\n  const {\n    t\n  } = useTranslation();\n  const priceDifference = getPriceDifference(closePrice, lockPrice);\n  return /*#__PURE__*/_jsxDEV(RoundResultBox, {\n    betPosition: betPosition,\n    ...props,\n    children: [/*#__PURE__*/_jsxDEV(Text, {\n      color: \"textSubtle\",\n      fontSize: \"12px\",\n      bold: true,\n      textTransform: \"uppercase\",\n      mb: \"8px\",\n      children: t('Closed Price')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), hasFailed ? /*#__PURE__*/_jsxDEV(Text, {\n      bold: true,\n      textTransform: \"uppercase\",\n      color: \"textDisabled\",\n      mb: \"16px\",\n      fontSize: \"24px\",\n      children: t('Canceled')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Flex, {\n      alignItems: \"center\",\n      justifyContent: \"space-between\",\n      mb: \"16px\",\n      children: [closePrice ? /*#__PURE__*/_jsxDEV(Text, {\n        color: isPositionUp ? 'success' : 'failure',\n        bold: true,\n        fontSize: \"24px\",\n        children: formatUsdv2(closePrice)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(Skeleton, {\n        height: \"34px\",\n        my: \"1px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(PositionTag, {\n        betPosition: betPosition,\n        children: formatUsdv2(priceDifference)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this), lockPrice && /*#__PURE__*/_jsxDEV(LockPriceRow, {\n      lockPrice: lockPrice\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(PrizePoolRow, {\n      totalAmount: totalAmount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), children]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RoundResult, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n\n_c = RoundResult;\nexport default RoundResult;\n\nvar _c;\n\n$RefreshReg$(_c, \"RoundResult\");","map":{"version":3,"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/views/Predictions/components/RoundResult/RoundResult.tsx"],"names":["React","Flex","Skeleton","Text","BetPosition","useTranslation","formatUsdv2","getPriceDifference","PositionTag","LockPriceRow","PrizePoolRow","RoundResultBox","getBetPosition","closePrice","lockPrice","eq","HOUSE","gt","BULL","BEAR","RoundResult","round","hasFailed","children","props","totalAmount","betPosition","isPositionUp","t","priceDifference"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { ethers } from 'ethers'\r\nimport { BoxProps, Flex, Skeleton, Text } from '@pancakeswap/uikit'\r\nimport { BetPosition, NodeRound } from 'state/types'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { formatUsdv2, getPriceDifference } from '../../helpers'\r\nimport PositionTag from '../PositionTag'\r\nimport { LockPriceRow, PrizePoolRow, RoundResultBox } from './styles'\r\n\r\ninterface RoundResultProps extends BoxProps {\r\n  round: NodeRound\r\n  hasFailed?: boolean\r\n}\r\n\r\nconst getBetPosition = (closePrice: ethers.BigNumber, lockPrice: ethers.BigNumber) => {\r\n  if (!closePrice) {\r\n    return null\r\n  }\r\n\r\n  if (closePrice.eq(lockPrice)) {\r\n    return BetPosition.HOUSE\r\n  }\r\n\r\n  return closePrice.gt(lockPrice) ? BetPosition.BULL : BetPosition.BEAR\r\n}\r\n\r\nconst RoundResult: React.FC<RoundResultProps> = ({ round, hasFailed = false, children, ...props }) => {\r\n  const { lockPrice, closePrice, totalAmount } = round\r\n  const betPosition = getBetPosition(closePrice, lockPrice)\r\n  const isPositionUp = betPosition === BetPosition.BULL\r\n  const { t } = useTranslation()\r\n  const priceDifference = getPriceDifference(closePrice, lockPrice)\r\n\r\n  return (\r\n    <RoundResultBox betPosition={betPosition} {...props}>\r\n      <Text color=\"textSubtle\" fontSize=\"12px\" bold textTransform=\"uppercase\" mb=\"8px\">\r\n        {t('Closed Price')}\r\n      </Text>\r\n      {hasFailed ? (\r\n        <Text bold textTransform=\"uppercase\" color=\"textDisabled\" mb=\"16px\" fontSize=\"24px\">\r\n          {t('Canceled')}\r\n        </Text>\r\n      ) : (\r\n        <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"16px\">\r\n          {closePrice ? (\r\n            <Text color={isPositionUp ? 'success' : 'failure'} bold fontSize=\"24px\">\r\n              {formatUsdv2(closePrice)}\r\n            </Text>\r\n          ) : (\r\n            <Skeleton height=\"34px\" my=\"1px\" />\r\n          )}\r\n          <PositionTag betPosition={betPosition}>{formatUsdv2(priceDifference)}</PositionTag>\r\n        </Flex>\r\n      )}\r\n      {lockPrice && <LockPriceRow lockPrice={lockPrice} />}\r\n      <PrizePoolRow totalAmount={totalAmount} />\r\n      {children}\r\n    </RoundResultBox>\r\n  )\r\n}\r\n\r\nexport default RoundResult\r\n"]},"metadata":{},"sourceType":"module"}