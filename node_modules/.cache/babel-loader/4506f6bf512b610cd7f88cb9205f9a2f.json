{"ast":null,"code":"export const MobileColumnSchema=[{id:1,name:'farm',sortable:true,label:''},{id:2,name:'earned',sortable:true,label:'Earned'},{id:3,name:'apr',sortable:true,label:'APR'},{id:6,name:'details',sortable:true,label:''}];export const DesktopColumnSchema=[{id:1,name:'farm',sortable:true,label:''},{id:2,name:'earned',sortable:true,label:'Earned'},{id:3,name:'apr',sortable:true,label:'APR'},{id:4,name:'liquidity',sortable:true,label:'Liquidity'},{id:5,name:'multiplier',sortable:true,label:'Multiplier'},{id:6,name:'details',sortable:true,label:''}];export let ViewMode;(function(ViewMode){ViewMode[\"TABLE\"]=\"TABLE\";ViewMode[\"CARD\"]=\"CARD\";})(ViewMode||(ViewMode={}));","map":{"version":3,"names":["MobileColumnSchema","id","name","sortable","label","DesktopColumnSchema","ViewMode"],"sources":["C:/Users/frkul/Documents/swapUI_pancake-frontend/src/views/Farms/components/types.ts"],"sourcesContent":["export type TableProps = {\r\n  data?: TableDataTypes[]\r\n  selectedFilters?: string\r\n  sortBy?: string\r\n  sortDir?: string\r\n  onSort?: (value: string) => void\r\n}\r\n\r\nexport type ColumnsDefTypes = {\r\n  id: number\r\n  label: string\r\n  name: string\r\n  sortable: boolean\r\n}\r\n\r\nexport type ScrollBarProps = {\r\n  ref: string\r\n  width: number\r\n}\r\n\r\nexport type TableDataTypes = {\r\n  POOL: string\r\n  APR: string\r\n  EARNED: string\r\n  STAKED: string\r\n  DETAILS: string\r\n  LINKS: string\r\n}\r\n\r\nexport const MobileColumnSchema: ColumnsDefTypes[] = [\r\n  {\r\n    id: 1,\r\n    name: 'farm',\r\n    sortable: true,\r\n    label: '',\r\n  },\r\n  {\r\n    id: 2,\r\n    name: 'earned',\r\n    sortable: true,\r\n    label: 'Earned',\r\n  },\r\n  {\r\n    id: 3,\r\n    name: 'apr',\r\n    sortable: true,\r\n    label: 'APR',\r\n  },\r\n  {\r\n    id: 6,\r\n    name: 'details',\r\n    sortable: true,\r\n    label: '',\r\n  },\r\n]\r\n\r\nexport const DesktopColumnSchema: ColumnsDefTypes[] = [\r\n  {\r\n    id: 1,\r\n    name: 'farm',\r\n    sortable: true,\r\n    label: '',\r\n  },\r\n  {\r\n    id: 2,\r\n    name: 'earned',\r\n    sortable: true,\r\n    label: 'Earned',\r\n  },\r\n  {\r\n    id: 3,\r\n    name: 'apr',\r\n    sortable: true,\r\n    label: 'APR',\r\n  },\r\n  {\r\n    id: 4,\r\n    name: 'liquidity',\r\n    sortable: true,\r\n    label: 'Liquidity',\r\n  },\r\n  {\r\n    id: 5,\r\n    name: 'multiplier',\r\n    sortable: true,\r\n    label: 'Multiplier',\r\n  },\r\n  {\r\n    id: 6,\r\n    name: 'details',\r\n    sortable: true,\r\n    label: '',\r\n  },\r\n]\r\n\r\nexport enum ViewMode {\r\n  'TABLE' = 'TABLE',\r\n  'CARD' = 'CARD',\r\n}\r\n"],"mappings":"AA6BA,MAAO,MAAM,CAAAA,kBAAqC,CAAG,CACnD,CACEC,EAAE,CAAE,CAAC,CACLC,IAAI,CAAE,MAAM,CACZC,QAAQ,CAAE,IAAI,CACdC,KAAK,CAAE,EACT,CAAC,CACD,CACEH,EAAE,CAAE,CAAC,CACLC,IAAI,CAAE,QAAQ,CACdC,QAAQ,CAAE,IAAI,CACdC,KAAK,CAAE,QACT,CAAC,CACD,CACEH,EAAE,CAAE,CAAC,CACLC,IAAI,CAAE,KAAK,CACXC,QAAQ,CAAE,IAAI,CACdC,KAAK,CAAE,KACT,CAAC,CACD,CACEH,EAAE,CAAE,CAAC,CACLC,IAAI,CAAE,SAAS,CACfC,QAAQ,CAAE,IAAI,CACdC,KAAK,CAAE,EACT,CAAC,CACF,CAED,MAAO,MAAM,CAAAC,mBAAsC,CAAG,CACpD,CACEJ,EAAE,CAAE,CAAC,CACLC,IAAI,CAAE,MAAM,CACZC,QAAQ,CAAE,IAAI,CACdC,KAAK,CAAE,EACT,CAAC,CACD,CACEH,EAAE,CAAE,CAAC,CACLC,IAAI,CAAE,QAAQ,CACdC,QAAQ,CAAE,IAAI,CACdC,KAAK,CAAE,QACT,CAAC,CACD,CACEH,EAAE,CAAE,CAAC,CACLC,IAAI,CAAE,KAAK,CACXC,QAAQ,CAAE,IAAI,CACdC,KAAK,CAAE,KACT,CAAC,CACD,CACEH,EAAE,CAAE,CAAC,CACLC,IAAI,CAAE,WAAW,CACjBC,QAAQ,CAAE,IAAI,CACdC,KAAK,CAAE,WACT,CAAC,CACD,CACEH,EAAE,CAAE,CAAC,CACLC,IAAI,CAAE,YAAY,CAClBC,QAAQ,CAAE,IAAI,CACdC,KAAK,CAAE,YACT,CAAC,CACD,CACEH,EAAE,CAAE,CAAC,CACLC,IAAI,CAAE,SAAS,CACfC,QAAQ,CAAE,IAAI,CACdC,KAAK,CAAE,EACT,CAAC,CACF,CAED,UAAY,CAAAE,QAAQ,CAGnB,UAHWA,QAAQ,EAARA,QAAQ,kBAARA,QAAQ,mBAARA,QAAQ,GAARA,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module"}