{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Devrim\\\\Documents\\\\FRANKswapUIforProspBlast\\\\src\\\\views\\\\TradingCompetition\\\\components\\\\TeamRanks\\\\TopTradersCard\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Card, CardFooter, CardHeader, Heading, Text, TabMenu, Tab, Box, Flex, ExpandableLabel } from '@pancakeswap/uikit';\nimport { useTranslation } from 'contexts/Localization';\nimport TopTradersGrid from './TopTradersGrid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TopTradersCard = ({\n  team1LeaderboardInformation,\n  team2LeaderboardInformation,\n  team3LeaderboardInformation,\n  globalLeaderboardInformation,\n  isGlobalLeaderboardDataComplete\n}) => {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  const [activeTab, setActiveTab] = useState(0);\n  const [isExpanded, setIsExpanded] = useState(false);\n  const [topTradersGridData, setTopTradersGridData] = useState(null);\n\n  const handleItemClick = index => setActiveTab(index);\n\n  const tabs = [t('Total'), 'Storm', 'Flippers', 'Cakers'];\n  useEffect(() => {\n    const getData = () => {\n      if (activeTab === 0) {\n        setTopTradersGridData(globalLeaderboardInformation.data);\n      }\n\n      if (activeTab === 1) {\n        setTopTradersGridData(team1LeaderboardInformation.leaderboardData.data);\n      }\n\n      if (activeTab === 2) {\n        setTopTradersGridData(team2LeaderboardInformation.leaderboardData.data);\n      }\n\n      if (activeTab === 3) {\n        setTopTradersGridData(team3LeaderboardInformation.leaderboardData.data);\n      }\n    };\n\n    if (isGlobalLeaderboardDataComplete) {\n      getData();\n    }\n  }, [isGlobalLeaderboardDataComplete, activeTab, globalLeaderboardInformation, team1LeaderboardInformation, team2LeaderboardInformation, team3LeaderboardInformation]);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      width: \"100%\",\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        children: [/*#__PURE__*/_jsxDEV(Heading, {\n          color: \"secondary\",\n          scale: \"lg\",\n          children: t('Top Traders')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"14px\",\n          color: \"textSubtle\",\n          children: t('Since start of the competition')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        mt: \"16px\",\n        children: [/*#__PURE__*/_jsxDEV(TabMenu, {\n          activeIndex: activeTab,\n          onItemClick: handleItemClick,\n          children: tabs.map(tabText => {\n            return /*#__PURE__*/_jsxDEV(Tab, {\n              children: tabText\n            }, tabText, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 22\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TopTradersGrid, {\n          data: topTradersGridData,\n          isExpanded: isExpanded\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardFooter, {\n        p: \"0px\",\n        children: /*#__PURE__*/_jsxDEV(Flex, {\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          children: /*#__PURE__*/_jsxDEV(ExpandableLabel, {\n            expanded: isExpanded,\n            onClick: () => setIsExpanded(!isExpanded),\n            children: isExpanded ? t('Hide') : t('Show More')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TopTradersCard, \"orxKG7cRZd5oPnKCTRjVSzIxqYU=\", false, function () {\n  return [useTranslation];\n});\n\n_c = TopTradersCard;\nexport default TopTradersCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"TopTradersCard\");","map":{"version":3,"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/views/TradingCompetition/components/TeamRanks/TopTradersCard/index.tsx"],"names":["React","useState","useEffect","Card","CardFooter","CardHeader","Heading","Text","TabMenu","Tab","Box","Flex","ExpandableLabel","useTranslation","TopTradersGrid","TopTradersCard","team1LeaderboardInformation","team2LeaderboardInformation","team3LeaderboardInformation","globalLeaderboardInformation","isGlobalLeaderboardDataComplete","t","activeTab","setActiveTab","isExpanded","setIsExpanded","topTradersGridData","setTopTradersGridData","handleItemClick","index","tabs","getData","data","leaderboardData","map","tabText"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport {\r\n  Card,\r\n  CardFooter,\r\n  CardHeader,\r\n  Heading,\r\n  Text,\r\n  TabMenu,\r\n  Tab,\r\n  Box,\r\n  Flex,\r\n  ExpandableLabel,\r\n} from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { TeamRanksProps } from '../../../types'\r\nimport TopTradersGrid from './TopTradersGrid'\r\n\r\nconst TopTradersCard: React.FC<TeamRanksProps> = ({\r\n  team1LeaderboardInformation,\r\n  team2LeaderboardInformation,\r\n  team3LeaderboardInformation,\r\n  globalLeaderboardInformation,\r\n  isGlobalLeaderboardDataComplete,\r\n}) => {\r\n  const { t } = useTranslation()\r\n  const [activeTab, setActiveTab] = useState(0)\r\n  const [isExpanded, setIsExpanded] = useState(false)\r\n  const [topTradersGridData, setTopTradersGridData] = useState(null)\r\n  const handleItemClick = (index: number) => setActiveTab(index)\r\n  const tabs = [t('Total'), 'Storm', 'Flippers', 'Cakers']\r\n\r\n  useEffect(() => {\r\n    const getData = () => {\r\n      if (activeTab === 0) {\r\n        setTopTradersGridData(globalLeaderboardInformation.data)\r\n      }\r\n\r\n      if (activeTab === 1) {\r\n        setTopTradersGridData(team1LeaderboardInformation.leaderboardData.data)\r\n      }\r\n\r\n      if (activeTab === 2) {\r\n        setTopTradersGridData(team2LeaderboardInformation.leaderboardData.data)\r\n      }\r\n\r\n      if (activeTab === 3) {\r\n        setTopTradersGridData(team3LeaderboardInformation.leaderboardData.data)\r\n      }\r\n    }\r\n\r\n    if (isGlobalLeaderboardDataComplete) {\r\n      getData()\r\n    }\r\n  }, [\r\n    isGlobalLeaderboardDataComplete,\r\n    activeTab,\r\n    globalLeaderboardInformation,\r\n    team1LeaderboardInformation,\r\n    team2LeaderboardInformation,\r\n    team3LeaderboardInformation,\r\n  ])\r\n\r\n  return (\r\n    <Card>\r\n      <Box width=\"100%\">\r\n        <CardHeader>\r\n          <Heading color=\"secondary\" scale=\"lg\">\r\n            {t('Top Traders')}\r\n          </Heading>\r\n          <Text fontSize=\"14px\" color=\"textSubtle\">\r\n            {t('Since start of the competition')}\r\n          </Text>\r\n        </CardHeader>\r\n        <Box mt=\"16px\">\r\n          <TabMenu activeIndex={activeTab} onItemClick={handleItemClick}>\r\n            {tabs.map((tabText) => {\r\n              return <Tab key={tabText}>{tabText}</Tab>\r\n            })}\r\n          </TabMenu>\r\n          <TopTradersGrid data={topTradersGridData} isExpanded={isExpanded} />\r\n        </Box>\r\n        <CardFooter p=\"0px\">\r\n          <Flex alignItems=\"center\" justifyContent=\"center\">\r\n            <ExpandableLabel expanded={isExpanded} onClick={() => setIsExpanded(!isExpanded)}>\r\n              {isExpanded ? t('Hide') : t('Show More')}\r\n            </ExpandableLabel>\r\n          </Flex>\r\n        </CardFooter>\r\n      </Box>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default TopTradersCard\r\n"]},"metadata":{},"sourceType":"module"}