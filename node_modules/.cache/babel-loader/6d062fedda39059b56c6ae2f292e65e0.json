{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useCallback } from 'react';\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core';\nimport { NoBscProviderError } from '@binance-chain/bsc-connector';\nimport { NoEthereumProviderError, UserRejectedRequestError as UserRejectedRequestErrorInjected } from '@web3-react/injected-connector';\nimport { UserRejectedRequestError as UserRejectedRequestErrorWalletConnect, WalletConnectConnector } from '@web3-react/walletconnect-connector';\nimport { connectorLocalStorageKey } from '@pancakeswap/uikit';\nimport { connectorsByName } from 'utils/web3React';\nimport { setupNetwork } from 'utils/wallet';\nimport useToast from 'hooks/useToast';\nimport { profileClear } from 'state/profile';\nimport { useAppDispatch } from 'state';\nimport { useTranslation } from 'contexts/Localization';\nconst useAuth = () => {\n  _s();\n  const {\n    t\n  } = useTranslation();\n  const dispatch = useAppDispatch();\n  const {\n    activate,\n    deactivate\n  } = useWeb3React();\n  const {\n    toastError\n  } = useToast();\n  const login = useCallback(connectorID => {\n    const connector = connectorsByName[connectorID];\n    if (connector) {\n      activate(connector, async error => {\n        if (error instanceof UnsupportedChainIdError) {\n          const hasSetup = await setupNetwork();\n          if (hasSetup) {\n            activate(connector);\n          }\n        } else {\n          window.localStorage.removeItem(connectorLocalStorageKey);\n          if (error instanceof NoEthereumProviderError || error instanceof NoBscProviderError) {\n            toastError(t('Provider Error'), t('No provider was found'));\n          } else if (error instanceof UserRejectedRequestErrorInjected || error instanceof UserRejectedRequestErrorWalletConnect) {\n            if (connector instanceof WalletConnectConnector) {\n              const walletConnector = connector;\n              walletConnector.walletConnectProvider = null;\n            }\n            toastError(t('Authorization Error'), t('Please authorize to access your account'));\n          } else {\n            toastError(error.name, error.message);\n          }\n        }\n      });\n    } else {\n      toastError(t('Unable to find connector'), t('The connector config is wrong'));\n    }\n  }, [t, activate, toastError]);\n  const logout = useCallback(() => {\n    dispatch(profileClear());\n    deactivate();\n    // This localStorage key is set by @web3-react/walletconnect-connector\n    if (window.localStorage.getItem('walletconnect')) {\n      connectorsByName.walletconnect.close();\n      connectorsByName.walletconnect.walletConnectProvider = null;\n    }\n  }, [deactivate, dispatch]);\n  return {\n    login,\n    logout\n  };\n};\n_s(useAuth, \"vdlyxzYnTaU+tTXUy9QK2PZ7rf8=\", false, function () {\n  return [useTranslation, useAppDispatch, useWeb3React, useToast];\n});\nexport default useAuth;","map":{"version":3,"names":["useCallback","useWeb3React","UnsupportedChainIdError","NoBscProviderError","NoEthereumProviderError","UserRejectedRequestError","UserRejectedRequestErrorInjected","UserRejectedRequestErrorWalletConnect","WalletConnectConnector","connectorLocalStorageKey","connectorsByName","setupNetwork","useToast","profileClear","useAppDispatch","useTranslation","useAuth","_s","t","dispatch","activate","deactivate","toastError","login","connectorID","connector","error","hasSetup","window","localStorage","removeItem","walletConnector","walletConnectProvider","name","message","logout","getItem","walletconnect","close"],"sources":["C:/Users/Devrim/Documents/swapUIforProspBlast/src/hooks/useAuth.ts"],"sourcesContent":["import { useCallback } from 'react'\r\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\r\nimport { NoBscProviderError } from '@binance-chain/bsc-connector'\r\nimport {\r\n  NoEthereumProviderError,\r\n  UserRejectedRequestError as UserRejectedRequestErrorInjected,\r\n} from '@web3-react/injected-connector'\r\nimport {\r\n  UserRejectedRequestError as UserRejectedRequestErrorWalletConnect,\r\n  WalletConnectConnector,\r\n} from '@web3-react/walletconnect-connector'\r\nimport { ConnectorNames, connectorLocalStorageKey } from '@pancakeswap/uikit'\r\nimport { connectorsByName } from 'utils/web3React'\r\nimport { setupNetwork } from 'utils/wallet'\r\nimport useToast from 'hooks/useToast'\r\nimport { profileClear } from 'state/profile'\r\nimport { useAppDispatch } from 'state'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\nconst useAuth = () => {\r\n  const { t } = useTranslation()\r\n  const dispatch = useAppDispatch()\r\n  const { activate, deactivate } = useWeb3React()\r\n  const { toastError } = useToast()\r\n\r\n  const login = useCallback(\r\n    (connectorID: ConnectorNames) => {\r\n      const connector = connectorsByName[connectorID]\r\n      if (connector) {\r\n        activate(connector, async (error: Error) => {\r\n          if (error instanceof UnsupportedChainIdError) {\r\n            const hasSetup = await setupNetwork()\r\n            if (hasSetup) {\r\n              activate(connector)\r\n            }\r\n          } else {\r\n            window.localStorage.removeItem(connectorLocalStorageKey)\r\n            if (error instanceof NoEthereumProviderError || error instanceof NoBscProviderError) {\r\n              toastError(t('Provider Error'), t('No provider was found'))\r\n            } else if (\r\n              error instanceof UserRejectedRequestErrorInjected ||\r\n              error instanceof UserRejectedRequestErrorWalletConnect\r\n            ) {\r\n              if (connector instanceof WalletConnectConnector) {\r\n                const walletConnector = connector as WalletConnectConnector\r\n                walletConnector.walletConnectProvider = null\r\n              }\r\n              toastError(t('Authorization Error'), t('Please authorize to access your account'))\r\n            } else {\r\n              toastError(error.name, error.message)\r\n            }\r\n          }\r\n        })\r\n      } else {\r\n        toastError(t('Unable to find connector'), t('The connector config is wrong'))\r\n      }\r\n    },\r\n    [t, activate, toastError],\r\n  )\r\n\r\n  const logout = useCallback(() => {\r\n    dispatch(profileClear())\r\n    deactivate()\r\n    // This localStorage key is set by @web3-react/walletconnect-connector\r\n    if (window.localStorage.getItem('walletconnect')) {\r\n      connectorsByName.walletconnect.close()\r\n      connectorsByName.walletconnect.walletConnectProvider = null\r\n    }\r\n  }, [deactivate, dispatch])\r\n\r\n  return { login, logout }\r\n}\r\n\r\nexport default useAuth\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}