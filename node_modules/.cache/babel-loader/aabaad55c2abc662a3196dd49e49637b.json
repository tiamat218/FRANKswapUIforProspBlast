{"ast":null,"code":"import _taggedTemplateLiteral from\"C:/Users/frkul/Documents/swapUI_pancake-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2,_templateObject3;import React,{useCallback}from'react';import styled from'styled-components';import{Button,Text,ErrorIcon,ArrowUpIcon,MetamaskIcon,Flex,Box,Link,Spinner,Modal}from'@pancakeswap/uikit';import{registerToken}from'utils/wallet';import{useTranslation}from'contexts/Localization';import useActiveWeb3React from'hooks/useActiveWeb3React';import{wrappedCurrency}from'utils/wrappedCurrency';import{RowFixed}from'../Layout/Row';import{AutoColumn,ColumnCenter}from'../Layout/Column';import{getBscScanLink}from'../../utils';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Wrapper=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  width: 100%;\\n\"])));const Section=styled(AutoColumn)(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  padding: 24px;\\n\"])));const ConfirmedIcon=styled(ColumnCenter)(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  padding: 24px 0;\\n\"])));function ConfirmationPendingContent(_ref){let{pendingText}=_ref;const{t}=useTranslation();return/*#__PURE__*/_jsxs(Wrapper,{children:[/*#__PURE__*/_jsx(ConfirmedIcon,{children:/*#__PURE__*/_jsx(Spinner,{})}),/*#__PURE__*/_jsxs(AutoColumn,{gap:\"12px\",justify:\"center\",children:[/*#__PURE__*/_jsx(Text,{fontSize:\"20px\",children:t('Waiting For Confirmation')}),/*#__PURE__*/_jsx(AutoColumn,{gap:\"12px\",justify:\"center\",children:/*#__PURE__*/_jsx(Text,{bold:true,small:true,textAlign:\"center\",children:pendingText})}),/*#__PURE__*/_jsx(Text,{small:true,color:\"textSubtle\",textAlign:\"center\",children:t('Confirm this transaction in your wallet')})]})]});}function TransactionSubmittedContent(_ref2){var _library$provider;let{onDismiss,chainId,hash,currencyToAdd}=_ref2;const{library}=useActiveWeb3React();const{t}=useTranslation();const token=wrappedCurrency(currencyToAdd,chainId);return/*#__PURE__*/_jsx(Wrapper,{children:/*#__PURE__*/_jsxs(Section,{children:[/*#__PURE__*/_jsx(ConfirmedIcon,{children:/*#__PURE__*/_jsx(ArrowUpIcon,{strokeWidth:0.5,width:\"90px\",color:\"primary\"})}),/*#__PURE__*/_jsxs(AutoColumn,{gap:\"12px\",justify:\"center\",children:[/*#__PURE__*/_jsx(Text,{fontSize:\"20px\",children:t('Transaction Submitted')}),chainId&&hash&&/*#__PURE__*/_jsx(Link,{external:true,small:true,href:getBscScanLink(hash,'transaction',chainId),children:t('View on BscScan')}),currencyToAdd&&(library===null||library===void 0?void 0:(_library$provider=library.provider)===null||_library$provider===void 0?void 0:_library$provider.isMetaMask)&&/*#__PURE__*/_jsx(Button,{variant:\"tertiary\",mt:\"12px\",width:\"fit-content\",onClick:()=>registerToken(token.address,token.symbol,token.decimals),children:/*#__PURE__*/_jsxs(RowFixed,{children:[t('Add %asset% to Metamask',{asset:currencyToAdd.symbol}),/*#__PURE__*/_jsx(MetamaskIcon,{width:\"16px\",ml:\"6px\"})]})}),/*#__PURE__*/_jsx(Button,{onClick:onDismiss,mt:\"20px\",children:t('Close')})]})]})});}export function ConfirmationModalContent(_ref3){let{bottomContent,topContent}=_ref3;return/*#__PURE__*/_jsxs(Wrapper,{children:[/*#__PURE__*/_jsx(Box,{children:topContent()}),/*#__PURE__*/_jsx(Box,{children:bottomContent()})]});}export function TransactionErrorContent(_ref4){let{message,onDismiss}=_ref4;const{t}=useTranslation();return/*#__PURE__*/_jsxs(Wrapper,{children:[/*#__PURE__*/_jsxs(AutoColumn,{justify:\"center\",children:[/*#__PURE__*/_jsx(ErrorIcon,{color:\"failure\",width:\"64px\"}),/*#__PURE__*/_jsx(Text,{color:\"failure\",style:{textAlign:'center',width:'85%'},children:message})]}),/*#__PURE__*/_jsx(Flex,{justifyContent:\"center\",pt:\"24px\",children:/*#__PURE__*/_jsx(Button,{onClick:onDismiss,children:t('Dismiss')})})]});}const TransactionConfirmationModal=_ref5=>{let{title,onDismiss,customOnDismiss,attemptingTxn,hash,pendingText,content,currencyToAdd}=_ref5;const{chainId}=useActiveWeb3React();const handleDismiss=useCallback(()=>{if(customOnDismiss){customOnDismiss();}onDismiss();},[customOnDismiss,onDismiss]);if(!chainId)return null;return/*#__PURE__*/_jsx(Modal,{title:title,headerBackground:\"gradients.cardHeader\",onDismiss:handleDismiss,children:attemptingTxn?/*#__PURE__*/_jsx(ConfirmationPendingContent,{pendingText:pendingText}):hash?/*#__PURE__*/_jsx(TransactionSubmittedContent,{chainId:chainId,hash:hash,onDismiss:onDismiss,currencyToAdd:currencyToAdd}):content()});};export default TransactionConfirmationModal;","map":{"version":3,"names":["React","useCallback","styled","Button","Text","ErrorIcon","ArrowUpIcon","MetamaskIcon","Flex","Box","Link","Spinner","Modal","registerToken","useTranslation","useActiveWeb3React","wrappedCurrency","RowFixed","AutoColumn","ColumnCenter","getBscScanLink","jsx","_jsx","jsxs","_jsxs","Wrapper","div","_templateObject","_taggedTemplateLiteral","Section","_templateObject2","ConfirmedIcon","_templateObject3","ConfirmationPendingContent","_ref","pendingText","t","children","gap","justify","fontSize","bold","small","textAlign","color","TransactionSubmittedContent","_ref2","_library$provider","onDismiss","chainId","hash","currencyToAdd","library","token","strokeWidth","width","external","href","provider","isMetaMask","variant","mt","onClick","address","symbol","decimals","asset","ml","ConfirmationModalContent","_ref3","bottomContent","topContent","TransactionErrorContent","_ref4","message","style","justifyContent","pt","TransactionConfirmationModal","_ref5","title","customOnDismiss","attemptingTxn","content","handleDismiss","headerBackground"],"sources":["C:/Users/frkul/Documents/swapUI_pancake-frontend/src/components/TransactionConfirmationModal/index.tsx"],"sourcesContent":["import React, { useCallback } from 'react'\r\nimport { ChainId, Currency, Token } from '@pancakeswap/sdk'\r\nimport styled from 'styled-components'\r\nimport {\r\n  Button,\r\n  Text,\r\n  ErrorIcon,\r\n  ArrowUpIcon,\r\n  MetamaskIcon,\r\n  Flex,\r\n  Box,\r\n  Link,\r\n  Spinner,\r\n  Modal,\r\n  InjectedModalProps,\r\n} from '@pancakeswap/uikit'\r\nimport { registerToken } from 'utils/wallet'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport { wrappedCurrency } from 'utils/wrappedCurrency'\r\nimport { RowFixed } from '../Layout/Row'\r\nimport { AutoColumn, ColumnCenter } from '../Layout/Column'\r\nimport { getBscScanLink } from '../../utils'\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n`\r\nconst Section = styled(AutoColumn)`\r\n  padding: 24px;\r\n`\r\n\r\nconst ConfirmedIcon = styled(ColumnCenter)`\r\n  padding: 24px 0;\r\n`\r\n\r\nfunction ConfirmationPendingContent({ pendingText }: { pendingText: string }) {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <Wrapper>\r\n      <ConfirmedIcon>\r\n        <Spinner />\r\n      </ConfirmedIcon>\r\n      <AutoColumn gap=\"12px\" justify=\"center\">\r\n        <Text fontSize=\"20px\">{t('Waiting For Confirmation')}</Text>\r\n        <AutoColumn gap=\"12px\" justify=\"center\">\r\n          <Text bold small textAlign=\"center\">\r\n            {pendingText}\r\n          </Text>\r\n        </AutoColumn>\r\n        <Text small color=\"textSubtle\" textAlign=\"center\">\r\n          {t('Confirm this transaction in your wallet')}\r\n        </Text>\r\n      </AutoColumn>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nfunction TransactionSubmittedContent({\r\n  onDismiss,\r\n  chainId,\r\n  hash,\r\n  currencyToAdd,\r\n}: {\r\n  onDismiss: () => void\r\n  hash: string | undefined\r\n  chainId: ChainId\r\n  currencyToAdd?: Currency | undefined\r\n}) {\r\n  const { library } = useActiveWeb3React()\r\n\r\n  const { t } = useTranslation()\r\n\r\n  const token: Token | undefined = wrappedCurrency(currencyToAdd, chainId)\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Section>\r\n        <ConfirmedIcon>\r\n          <ArrowUpIcon strokeWidth={0.5} width=\"90px\" color=\"primary\" />\r\n        </ConfirmedIcon>\r\n        <AutoColumn gap=\"12px\" justify=\"center\">\r\n          <Text fontSize=\"20px\">{t('Transaction Submitted')}</Text>\r\n          {chainId && hash && (\r\n            <Link external small href={getBscScanLink(hash, 'transaction', chainId)}>\r\n              {t('View on BscScan')}\r\n            </Link>\r\n          )}\r\n          {currencyToAdd && library?.provider?.isMetaMask && (\r\n            <Button\r\n              variant=\"tertiary\"\r\n              mt=\"12px\"\r\n              width=\"fit-content\"\r\n              onClick={() => registerToken(token.address, token.symbol, token.decimals)}\r\n            >\r\n              <RowFixed>\r\n                {t('Add %asset% to Metamask', { asset: currencyToAdd.symbol })}\r\n                <MetamaskIcon width=\"16px\" ml=\"6px\" />\r\n              </RowFixed>\r\n            </Button>\r\n          )}\r\n          <Button onClick={onDismiss} mt=\"20px\">\r\n            {t('Close')}\r\n          </Button>\r\n        </AutoColumn>\r\n      </Section>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport function ConfirmationModalContent({\r\n  bottomContent,\r\n  topContent,\r\n}: {\r\n  topContent: () => React.ReactNode\r\n  bottomContent: () => React.ReactNode\r\n}) {\r\n  return (\r\n    <Wrapper>\r\n      <Box>{topContent()}</Box>\r\n      <Box>{bottomContent()}</Box>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport function TransactionErrorContent({ message, onDismiss }: { message: string; onDismiss: () => void }) {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <Wrapper>\r\n      <AutoColumn justify=\"center\">\r\n        <ErrorIcon color=\"failure\" width=\"64px\" />\r\n        <Text color=\"failure\" style={{ textAlign: 'center', width: '85%' }}>\r\n          {message}\r\n        </Text>\r\n      </AutoColumn>\r\n\r\n      <Flex justifyContent=\"center\" pt=\"24px\">\r\n        <Button onClick={onDismiss}>{t('Dismiss')}</Button>\r\n      </Flex>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\ninterface ConfirmationModalProps {\r\n  title: string\r\n  customOnDismiss?: () => void\r\n  hash: string | undefined\r\n  content: () => React.ReactNode\r\n  attemptingTxn: boolean\r\n  pendingText: string\r\n  currencyToAdd?: Currency | undefined\r\n}\r\n\r\nconst TransactionConfirmationModal: React.FC<InjectedModalProps & ConfirmationModalProps> = ({\r\n  title,\r\n  onDismiss,\r\n  customOnDismiss,\r\n  attemptingTxn,\r\n  hash,\r\n  pendingText,\r\n  content,\r\n  currencyToAdd,\r\n}) => {\r\n  const { chainId } = useActiveWeb3React()\r\n\r\n  const handleDismiss = useCallback(() => {\r\n    if (customOnDismiss) {\r\n      customOnDismiss()\r\n    }\r\n    onDismiss()\r\n  }, [customOnDismiss, onDismiss])\r\n\r\n  if (!chainId) return null\r\n\r\n  return (\r\n    <Modal title={title} headerBackground=\"gradients.cardHeader\" onDismiss={handleDismiss}>\r\n      {attemptingTxn ? (\r\n        <ConfirmationPendingContent pendingText={pendingText} />\r\n      ) : hash ? (\r\n        <TransactionSubmittedContent\r\n          chainId={chainId}\r\n          hash={hash}\r\n          onDismiss={onDismiss}\r\n          currencyToAdd={currencyToAdd}\r\n        />\r\n      ) : (\r\n        content()\r\n      )}\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default TransactionConfirmationModal\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}