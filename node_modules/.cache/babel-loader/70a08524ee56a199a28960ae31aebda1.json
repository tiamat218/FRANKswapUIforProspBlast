{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Devrim\\\\Documents\\\\FRANKswapUIforProspBlast\\\\src\\\\views\\\\Pools\\\\components\\\\PoolsTable\\\\PoolsTable.tsx\",\n  _s = $RefreshSig$();\nimport React, { useRef } from 'react';\nimport styled from 'styled-components';\nimport { Button, ChevronUpIcon } from '@pancakeswap/uikit';\nimport { useTranslation } from 'contexts/Localization';\nimport PoolRow from './PoolRow';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledTable = styled.div`\n  border-radius: ${({\n  theme\n}) => theme.radii.card};\n\n  background-color: ${({\n  theme\n}) => theme.card.background};\n  > div:not(:last-child) {\n    border-bottom: 2px solid ${({\n  theme\n}) => theme.colors.disabled};\n  }\n`;\n_c = StyledTable;\nconst StyledTableBorder = styled.div`\n  border-radius: ${({\n  theme\n}) => theme.radii.card};\n  background-color: ${({\n  theme\n}) => theme.colors.cardBorder};\n  padding: 1px 1px 3px 1px;\n  background-size: 400% 400%;\n`;\n_c2 = StyledTableBorder;\nconst ScrollButtonContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  padding-top: 5px;\n  padding-bottom: 5px;\n`;\n_c3 = ScrollButtonContainer;\nconst PoolsTable = ({\n  pools,\n  userDataLoaded,\n  account\n}) => {\n  _s();\n  const {\n    t\n  } = useTranslation();\n  const tableWrapperEl = useRef(null);\n  const scrollToTop = () => {\n    tableWrapperEl.current.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(StyledTableBorder, {\n    children: /*#__PURE__*/_jsxDEV(StyledTable, {\n      role: \"table\",\n      ref: tableWrapperEl,\n      children: [pools.map(pool => /*#__PURE__*/_jsxDEV(PoolRow, {\n        pool: pool,\n        account: account,\n        userDataLoaded: userDataLoaded\n      }, pool.isAutoVault ? 'auto-cake' : pool.sousId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(ScrollButtonContainer, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"text\",\n          onClick: scrollToTop,\n          children: [t('To Top'), /*#__PURE__*/_jsxDEV(ChevronUpIcon, {\n            color: \"primary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(PoolsTable, \"fPse25UMzcFETdiZdSnkyNd81r0=\", false, function () {\n  return [useTranslation];\n});\n_c4 = PoolsTable;\nexport default PoolsTable;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"StyledTable\");\n$RefreshReg$(_c2, \"StyledTableBorder\");\n$RefreshReg$(_c3, \"ScrollButtonContainer\");\n$RefreshReg$(_c4, \"PoolsTable\");","map":{"version":3,"names":["React","useRef","styled","Button","ChevronUpIcon","useTranslation","PoolRow","jsxDEV","_jsxDEV","StyledTable","div","theme","radii","card","background","colors","disabled","_c","StyledTableBorder","cardBorder","_c2","ScrollButtonContainer","_c3","PoolsTable","pools","userDataLoaded","account","_s","t","tableWrapperEl","scrollToTop","current","scrollIntoView","behavior","children","role","ref","map","pool","isAutoVault","sousId","fileName","_jsxFileName","lineNumber","columnNumber","variant","onClick","color","_c4","$RefreshReg$"],"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/views/Pools/components/PoolsTable/PoolsTable.tsx"],"sourcesContent":["import React, { useRef } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button, ChevronUpIcon } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { Pool } from 'state/types'\r\nimport PoolRow from './PoolRow'\r\n\r\ninterface PoolsTableProps {\r\n  pools: Pool[]\r\n  userDataLoaded: boolean\r\n  account: string\r\n}\r\n\r\nconst StyledTable = styled.div`\r\n  border-radius: ${({ theme }) => theme.radii.card};\r\n\r\n  background-color: ${({ theme }) => theme.card.background};\r\n  > div:not(:last-child) {\r\n    border-bottom: 2px solid ${({ theme }) => theme.colors.disabled};\r\n  }\r\n`\r\n\r\nconst StyledTableBorder = styled.div`\r\n  border-radius: ${({ theme }) => theme.radii.card};\r\n  background-color: ${({ theme }) => theme.colors.cardBorder};\r\n  padding: 1px 1px 3px 1px;\r\n  background-size: 400% 400%;\r\n`\r\n\r\nconst ScrollButtonContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  padding-top: 5px;\r\n  padding-bottom: 5px;\r\n`\r\n\r\nconst PoolsTable: React.FC<PoolsTableProps> = ({ pools, userDataLoaded, account }) => {\r\n  const { t } = useTranslation()\r\n  const tableWrapperEl = useRef<HTMLDivElement>(null)\r\n  const scrollToTop = (): void => {\r\n    tableWrapperEl.current.scrollIntoView({\r\n      behavior: 'smooth',\r\n    })\r\n  }\r\n  return (\r\n    <StyledTableBorder>\r\n      <StyledTable role=\"table\" ref={tableWrapperEl}>\r\n        {pools.map((pool) => (\r\n          <PoolRow\r\n            key={pool.isAutoVault ? 'auto-cake' : pool.sousId}\r\n            pool={pool}\r\n            account={account}\r\n            userDataLoaded={userDataLoaded}\r\n          />\r\n        ))}\r\n        <ScrollButtonContainer>\r\n          <Button variant=\"text\" onClick={scrollToTop}>\r\n            {t('To Top')}\r\n            <ChevronUpIcon color=\"primary\" />\r\n          </Button>\r\n        </ScrollButtonContainer>\r\n      </StyledTable>\r\n    </StyledTableBorder>\r\n  )\r\n}\r\n\r\nexport default PoolsTable\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}