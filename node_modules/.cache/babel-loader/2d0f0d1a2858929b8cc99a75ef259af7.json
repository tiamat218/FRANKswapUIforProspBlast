{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Devrim\\\\Documents\\\\swapUIforProspBlast\\\\src\\\\views\\\\TradingCompetition\\\\components\\\\RegisterModal\\\\RegisterWithProfile.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { Button, Heading, Text, Flex, Checkbox, AutoRenewIcon } from '@pancakeswap/uikit';\nimport { useTradingCompetitionContract } from 'hooks/useContract';\nimport { useTranslation } from 'contexts/Localization';\nimport useToast from 'hooks/useToast';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst StyledCheckbox = styled(Checkbox)`\n  min-width: 24px;\n`;\n_c = StyledCheckbox;\nconst StyledLabel = styled.label`\n  cursor: pointer;\n`;\n_c2 = StyledLabel;\nconst RegisterWithProfile = ({\n  profile,\n  onDismiss,\n  onRegisterSuccess\n}) => {\n  _s();\n  const [isAcknowledged, setIsAcknowledged] = useState(false);\n  const [isConfirming, setIsConfirming] = useState(false);\n  const tradingCompetitionContract = useTradingCompetitionContract();\n  const {\n    toastSuccess,\n    toastError\n  } = useToast();\n  const {\n    t\n  } = useTranslation();\n  const handleConfirmClick = async () => {\n    const tx = await tradingCompetitionContract.register();\n    setIsConfirming(true);\n    const receipt = await tx.wait();\n    if (receipt.status) {\n      toastSuccess(t('You have registered for the competition!'));\n      onDismiss();\n      onRegisterSuccess();\n    } else {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'));\n      setIsConfirming(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Heading, {\n      scale: \"md\",\n      mb: \"24px\",\n      children: `@${profile.username}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Flex, {\n      flexDirection: \"column\",\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        bold: true,\n        children: t('Registering for the competition will make your wallet address publicly visible on the leaderboard.')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        fontSize: \"14px\",\n        color: \"textSubtle\",\n        mb: \"24px\",\n        children: t('This decision cannot be reversed.')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StyledLabel, {\n        htmlFor: \"acknowledgement\",\n        children: /*#__PURE__*/_jsxDEV(Flex, {\n          alignItems: \"center\",\n          justifyContent: \"space-between\",\n          children: [/*#__PURE__*/_jsxDEV(StyledCheckbox, {\n            id: \"acknowledgement\",\n            checked: isAcknowledged,\n            onChange: () => setIsAcknowledged(!isAcknowledged),\n            scale: \"sm\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            ml: \"16px\",\n            children: t('I understand that my address may be displayed publicly throughout the competition.')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      mt: \"24px\",\n      width: \"100%\",\n      onClick: handleConfirmClick,\n      disabled: !isAcknowledged || isConfirming,\n      isLoading: isConfirming,\n      endIcon: isConfirming ? /*#__PURE__*/_jsxDEV(AutoRenewIcon, {\n        spin: true,\n        color: \"currentColor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 33\n      }, this) : null,\n      children: t('Confirm')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(RegisterWithProfile, \"BNngcNiYwyZ8VNNkE84wSFgo6TU=\", false, function () {\n  return [useTradingCompetitionContract, useToast, useTranslation];\n});\n_c3 = RegisterWithProfile;\nexport default RegisterWithProfile;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"StyledCheckbox\");\n$RefreshReg$(_c2, \"StyledLabel\");\n$RefreshReg$(_c3, \"RegisterWithProfile\");","map":{"version":3,"names":["React","useState","styled","Button","Heading","Text","Flex","Checkbox","AutoRenewIcon","useTradingCompetitionContract","useTranslation","useToast","jsxDEV","_jsxDEV","Fragment","_Fragment","StyledCheckbox","_c","StyledLabel","label","_c2","RegisterWithProfile","profile","onDismiss","onRegisterSuccess","_s","isAcknowledged","setIsAcknowledged","isConfirming","setIsConfirming","tradingCompetitionContract","toastSuccess","toastError","t","handleConfirmClick","tx","register","receipt","wait","status","children","scale","mb","username","fileName","_jsxFileName","lineNumber","columnNumber","flexDirection","bold","fontSize","color","htmlFor","alignItems","justifyContent","id","checked","onChange","ml","mt","width","onClick","disabled","isLoading","endIcon","spin","_c3","$RefreshReg$"],"sources":["C:/Users/Devrim/Documents/swapUIforProspBlast/src/views/TradingCompetition/components/RegisterModal/RegisterWithProfile.tsx"],"sourcesContent":["import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button, Heading, Text, Flex, Checkbox, AutoRenewIcon } from '@pancakeswap/uikit'\r\nimport { useTradingCompetitionContract } from 'hooks/useContract'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useToast from 'hooks/useToast'\r\nimport { CompetitionProps } from '../../types'\r\n\r\nconst StyledCheckbox = styled(Checkbox)`\r\n  min-width: 24px;\r\n`\r\n\r\nconst StyledLabel = styled.label`\r\n  cursor: pointer;\r\n`\r\n\r\nconst RegisterWithProfile: React.FC<CompetitionProps> = ({ profile, onDismiss, onRegisterSuccess }) => {\r\n  const [isAcknowledged, setIsAcknowledged] = useState(false)\r\n  const [isConfirming, setIsConfirming] = useState(false)\r\n  const tradingCompetitionContract = useTradingCompetitionContract()\r\n  const { toastSuccess, toastError } = useToast()\r\n  const { t } = useTranslation()\r\n\r\n  const handleConfirmClick = async () => {\r\n    const tx = await tradingCompetitionContract.register()\r\n    setIsConfirming(true)\r\n    const receipt = await tx.wait()\r\n    if (receipt.status) {\r\n      toastSuccess(t('You have registered for the competition!'))\r\n      onDismiss()\r\n      onRegisterSuccess()\r\n    } else {\r\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\r\n      setIsConfirming(false)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Heading scale=\"md\" mb=\"24px\">{`@${profile.username}`}</Heading>\r\n      <Flex flexDirection=\"column\">\r\n        <Text bold>\r\n          {t('Registering for the competition will make your wallet address publicly visible on the leaderboard.')}\r\n        </Text>\r\n        <Text fontSize=\"14px\" color=\"textSubtle\" mb=\"24px\">\r\n          {t('This decision cannot be reversed.')}\r\n        </Text>\r\n        <StyledLabel htmlFor=\"acknowledgement\">\r\n          <Flex alignItems=\"center\" justifyContent=\"space-between\">\r\n            <StyledCheckbox\r\n              id=\"acknowledgement\"\r\n              checked={isAcknowledged}\r\n              onChange={() => setIsAcknowledged(!isAcknowledged)}\r\n              scale=\"sm\"\r\n            />\r\n            <Text ml=\"16px\">\r\n              {t('I understand that my address may be displayed publicly throughout the competition.')}\r\n            </Text>\r\n          </Flex>\r\n        </StyledLabel>\r\n      </Flex>\r\n      <Button\r\n        mt=\"24px\"\r\n        width=\"100%\"\r\n        onClick={handleConfirmClick}\r\n        disabled={!isAcknowledged || isConfirming}\r\n        isLoading={isConfirming}\r\n        endIcon={isConfirming ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\r\n      >\r\n        {t('Confirm')}\r\n      </Button>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default RegisterWithProfile\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,MAAM,EAAEC,OAAO,EAAEC,IAAI,EAAEC,IAAI,EAAEC,QAAQ,EAAEC,aAAa,QAAQ,oBAAoB;AACzF,SAASC,6BAA6B,QAAQ,mBAAmB;AACjE,SAASC,cAAc,QAAQ,uBAAuB;AACtD,OAAOC,QAAQ,MAAM,gBAAgB;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAGrC,MAAMC,cAAc,GAAGd,MAAM,CAACK,QAAQ,CAAC;AACvC;AACA,CAAC;AAAAU,EAAA,GAFKD,cAAc;AAIpB,MAAME,WAAW,GAAGhB,MAAM,CAACiB,KAAK;AAChC;AACA,CAAC;AAAAC,GAAA,GAFKF,WAAW;AAIjB,MAAMG,mBAA+C,GAAGA,CAAC;EAAEC,OAAO;EAAEC,SAAS;EAAEC;AAAkB,CAAC,KAAK;EAAAC,EAAA;EACrG,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAG1B,QAAQ,CAAC,KAAK,CAAC;EAC3D,MAAM,CAAC2B,YAAY,EAAEC,eAAe,CAAC,GAAG5B,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM6B,0BAA0B,GAAGrB,6BAA6B,CAAC,CAAC;EAClE,MAAM;IAAEsB,YAAY;IAAEC;EAAW,CAAC,GAAGrB,QAAQ,CAAC,CAAC;EAC/C,MAAM;IAAEsB;EAAE,CAAC,GAAGvB,cAAc,CAAC,CAAC;EAE9B,MAAMwB,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACrC,MAAMC,EAAE,GAAG,MAAML,0BAA0B,CAACM,QAAQ,CAAC,CAAC;IACtDP,eAAe,CAAC,IAAI,CAAC;IACrB,MAAMQ,OAAO,GAAG,MAAMF,EAAE,CAACG,IAAI,CAAC,CAAC;IAC/B,IAAID,OAAO,CAACE,MAAM,EAAE;MAClBR,YAAY,CAACE,CAAC,CAAC,0CAA0C,CAAC,CAAC;MAC3DV,SAAS,CAAC,CAAC;MACXC,iBAAiB,CAAC,CAAC;IACrB,CAAC,MAAM;MACLQ,UAAU,CAACC,CAAC,CAAC,OAAO,CAAC,EAAEA,CAAC,CAAC,oFAAoF,CAAC,CAAC;MAC/GJ,eAAe,CAAC,KAAK,CAAC;IACxB;EACF,CAAC;EAED,oBACEhB,OAAA,CAAAE,SAAA;IAAAyB,QAAA,gBACE3B,OAAA,CAACT,OAAO;MAACqC,KAAK,EAAC,IAAI;MAACC,EAAE,EAAC,MAAM;MAAAF,QAAA,EAAE,IAAIlB,OAAO,CAACqB,QAAQ;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAU,CAAC,eAChElC,OAAA,CAACP,IAAI;MAAC0C,aAAa,EAAC,QAAQ;MAAAR,QAAA,gBAC1B3B,OAAA,CAACR,IAAI;QAAC4C,IAAI;QAAAT,QAAA,EACPP,CAAC,CAAC,oGAAoG;MAAC;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpG,CAAC,eACPlC,OAAA,CAACR,IAAI;QAAC6C,QAAQ,EAAC,MAAM;QAACC,KAAK,EAAC,YAAY;QAACT,EAAE,EAAC,MAAM;QAAAF,QAAA,EAC/CP,CAAC,CAAC,mCAAmC;MAAC;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnC,CAAC,eACPlC,OAAA,CAACK,WAAW;QAACkC,OAAO,EAAC,iBAAiB;QAAAZ,QAAA,eACpC3B,OAAA,CAACP,IAAI;UAAC+C,UAAU,EAAC,QAAQ;UAACC,cAAc,EAAC,eAAe;UAAAd,QAAA,gBACtD3B,OAAA,CAACG,cAAc;YACbuC,EAAE,EAAC,iBAAiB;YACpBC,OAAO,EAAE9B,cAAe;YACxB+B,QAAQ,EAAEA,CAAA,KAAM9B,iBAAiB,CAAC,CAACD,cAAc,CAAE;YACnDe,KAAK,EAAC;UAAI;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACX,CAAC,eACFlC,OAAA,CAACR,IAAI;YAACqD,EAAE,EAAC,MAAM;YAAAlB,QAAA,EACZP,CAAC,CAAC,oFAAoF;UAAC;YAAAW,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpF,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC,eACPlC,OAAA,CAACV,MAAM;MACLwD,EAAE,EAAC,MAAM;MACTC,KAAK,EAAC,MAAM;MACZC,OAAO,EAAE3B,kBAAmB;MAC5B4B,QAAQ,EAAE,CAACpC,cAAc,IAAIE,YAAa;MAC1CmC,SAAS,EAAEnC,YAAa;MACxBoC,OAAO,EAAEpC,YAAY,gBAAGf,OAAA,CAACL,aAAa;QAACyD,IAAI;QAACd,KAAK,EAAC;MAAc;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,GAAG,IAAK;MAAAP,QAAA,EAE1EP,CAAC,CAAC,SAAS;IAAC;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CAAC;EAAA,eACT,CAAC;AAEP,CAAC;AAAAtB,EAAA,CAzDKJ,mBAA+C;EAAA,QAGhBZ,6BAA6B,EAC3BE,QAAQ,EAC/BD,cAAc;AAAA;AAAAwD,GAAA,GALxB7C,mBAA+C;AA2DrD,eAAeA,mBAAmB;AAAA,IAAAJ,EAAA,EAAAG,GAAA,EAAA8C,GAAA;AAAAC,YAAA,CAAAlD,EAAA;AAAAkD,YAAA,CAAA/C,GAAA;AAAA+C,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}