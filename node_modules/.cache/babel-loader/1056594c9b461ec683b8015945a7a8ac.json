{"ast":null,"code":"import { AbstractConnector } from '@web3-react/abstract-connector';\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  _setPrototypeOf(subClass, superClass);\n}\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nfunction _construct(Parent, args, Class) {\n  if (_isNativeReflectConstruct()) {\n    _construct = Reflect.construct;\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) _setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n  return _construct.apply(null, arguments);\n}\nfunction _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}\nfunction _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n  _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !_isNativeFunction(Class)) return Class;\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n      _cache.set(Class, Wrapper);\n    }\n    function Wrapper() {\n      return _construct(Class, arguments, _getPrototypeOf(this).constructor);\n    }\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return _setPrototypeOf(Wrapper, Class);\n  };\n  return _wrapNativeSuper(Class);\n}\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nvar URI_AVAILABLE = 'URI_AVAILABLE';\nvar UserRejectedRequestError = /*#__PURE__*/function (_Error) {\n  _inheritsLoose(UserRejectedRequestError, _Error);\n  function UserRejectedRequestError() {\n    var _this;\n    _this = _Error.call(this) || this;\n    _this.name = _this.constructor.name;\n    _this.message = 'The user rejected the request.';\n    return _this;\n  }\n  return UserRejectedRequestError;\n}( /*#__PURE__*/_wrapNativeSuper(Error));\nfunction getSupportedChains(_ref) {\n  var supportedChainIds = _ref.supportedChainIds,\n    rpc = _ref.rpc;\n  if (supportedChainIds) {\n    return supportedChainIds;\n  }\n  return rpc ? Object.keys(rpc).map(function (k) {\n    return Number(k);\n  }) : undefined;\n}\nvar WalletConnectConnector = /*#__PURE__*/function (_AbstractConnector) {\n  _inheritsLoose(WalletConnectConnector, _AbstractConnector);\n  function WalletConnectConnector(config) {\n    var _this2;\n    _this2 = _AbstractConnector.call(this, {\n      supportedChainIds: getSupportedChains(config)\n    }) || this;\n    _this2.config = config;\n    _this2.handleChainChanged = _this2.handleChainChanged.bind(_assertThisInitialized(_this2));\n    _this2.handleAccountsChanged = _this2.handleAccountsChanged.bind(_assertThisInitialized(_this2));\n    _this2.handleDisconnect = _this2.handleDisconnect.bind(_assertThisInitialized(_this2));\n    return _this2;\n  }\n  var _proto = WalletConnectConnector.prototype;\n  _proto.handleChainChanged = function handleChainChanged(chainId) {\n    if (process.env.NODE_ENV !== \"production\") {\n      console.log(\"Handling 'chainChanged' event with payload\", chainId);\n    }\n    this.emitUpdate({\n      chainId: chainId\n    });\n  };\n  _proto.handleAccountsChanged = function handleAccountsChanged(accounts) {\n    if (process.env.NODE_ENV !== \"production\") {\n      console.log(\"Handling 'accountsChanged' event with payload\", accounts);\n    }\n    this.emitUpdate({\n      account: accounts[0]\n    });\n  };\n  _proto.handleDisconnect = function handleDisconnect() {\n    if (process.env.NODE_ENV !== \"production\") {\n      console.log(\"Handling 'disconnect' event\");\n    }\n    this.emitDeactivate(); // we have to do this because of a @walletconnect/web3-provider bug\n\n    if (this.walletConnectProvider) {\n      this.walletConnectProvider.stop();\n      this.walletConnectProvider.removeListener('chainChanged', this.handleChainChanged);\n      this.walletConnectProvider.removeListener('accountsChanged', this.handleAccountsChanged);\n      this.walletConnectProvider = undefined;\n    }\n    this.emitDeactivate();\n  };\n  _proto.activate = function activate() {\n    try {\n      var _this4 = this;\n      var _temp5 = function _temp5() {\n        function _temp2() {\n          return Promise.resolve(_this4.walletConnectProvider.enable().then(function (accounts) {\n            return accounts[0];\n          })[\"catch\"](function (error) {\n            // TODO ideally this would be a better check\n            if (error.message === 'User closed modal') {\n              throw new UserRejectedRequestError();\n            }\n            throw error;\n          })).then(function (account) {\n            _this4.walletConnectProvider.on('disconnect', _this4.handleDisconnect);\n            _this4.walletConnectProvider.on('chainChanged', _this4.handleChainChanged);\n            _this4.walletConnectProvider.on('accountsChanged', _this4.handleAccountsChanged);\n            return {\n              provider: _this4.walletConnectProvider,\n              account: account\n            };\n          });\n        }\n        var _temp = function () {\n          if (!_this4.walletConnectProvider.wc.connected) {\n            return Promise.resolve(_this4.walletConnectProvider.wc.createSession({\n              chainId: _this4.supportedChainIds && _this4.supportedChainIds.length > 0 ? _this4.supportedChainIds[0] : 1\n            })).then(function () {\n              _this4.emit(URI_AVAILABLE, _this4.walletConnectProvider.wc.uri);\n            });\n          }\n        }();\n\n        // ensure that the uri is going to be available, and emit an event if there's a new uri\n        return _temp && _temp.then ? _temp.then(_temp2) : _temp2(_temp);\n      };\n      var _temp6 = function () {\n        if (!_this4.walletConnectProvider) {\n          return Promise.resolve(import('@walletconnect/web3-provider').then(function (m) {\n            var _m$default;\n            return (_m$default = m == null ? void 0 : m[\"default\"]) != null ? _m$default : m;\n          })).then(function (WalletConnectProvider) {\n            _this4.walletConnectProvider = new WalletConnectProvider(_this4.config);\n          });\n        }\n      }();\n      return Promise.resolve(_temp6 && _temp6.then ? _temp6.then(_temp5) : _temp5(_temp6));\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n  _proto.getProvider = function getProvider() {\n    try {\n      var _this6 = this;\n      return Promise.resolve(_this6.walletConnectProvider);\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n  _proto.getChainId = function getChainId() {\n    try {\n      var _this8 = this;\n      return Promise.resolve(_this8.walletConnectProvider.send('eth_chainId'));\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n  _proto.getAccount = function getAccount() {\n    try {\n      var _this10 = this;\n      return Promise.resolve(_this10.walletConnectProvider.send('eth_accounts').then(function (accounts) {\n        return accounts[0];\n      }));\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n  _proto.deactivate = function deactivate() {\n    if (this.walletConnectProvider) {\n      this.walletConnectProvider.stop();\n      this.walletConnectProvider.removeListener('disconnect', this.handleDisconnect);\n      this.walletConnectProvider.removeListener('chainChanged', this.handleChainChanged);\n      this.walletConnectProvider.removeListener('accountsChanged', this.handleAccountsChanged);\n    }\n  };\n  _proto.close = function close() {\n    try {\n      var _this12$walletConnect;\n      var _this12 = this;\n      return Promise.resolve((_this12$walletConnect = _this12.walletConnectProvider) == null ? void 0 : _this12$walletConnect.close()).then(function () {});\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n  return WalletConnectConnector;\n}(AbstractConnector);\nexport { URI_AVAILABLE, UserRejectedRequestError, WalletConnectConnector };","map":{"version":3,"names":["URI_AVAILABLE","UserRejectedRequestError","_Error","_inheritsLoose","_this","call","name","constructor","message","_wrapNativeSuper","Error","getSupportedChains","_ref","supportedChainIds","rpc","Object","keys","map","k","Number","undefined","WalletConnectConnector","_AbstractConnector","config","_this2","handleChainChanged","bind","_assertThisInitialized","handleAccountsChanged","handleDisconnect","_proto","prototype","chainId","process","env","NODE_ENV","console","log","emitUpdate","accounts","account","emitDeactivate","walletConnectProvider","stop","removeListener","activate","_this4","enable","then","error","on","provider","wc","connected","createSession","length","emit","uri","m","_m$default","WalletConnectProvider","e","Promise","reject","getProvider","resolve","_this6","getChainId","_this8","send","getAccount","_this10","deactivate","close","_this12","_this12$walletConnect","AbstractConnector"],"sources":["../src/index.ts"],"sourcesContent":["import { ConnectorUpdate } from '@web3-react/types'\nimport { AbstractConnector } from '@web3-react/abstract-connector'\nimport { IWalletConnectProviderOptions } from '@walletconnect/types'\n\nexport const URI_AVAILABLE = 'URI_AVAILABLE'\n\nexport interface WalletConnectConnectorArguments extends IWalletConnectProviderOptions {\n  supportedChainIds?: number[]\n}\n\nexport class UserRejectedRequestError extends Error {\n  public constructor() {\n    super()\n    this.name = this.constructor.name\n    this.message = 'The user rejected the request.'\n  }\n}\n\nfunction getSupportedChains({ supportedChainIds, rpc }: WalletConnectConnectorArguments): number[] | undefined {\n  if (supportedChainIds) {\n    return supportedChainIds\n  }\n\n  return rpc ? Object.keys(rpc).map(k => Number(k)) : undefined\n}\n\nexport class WalletConnectConnector extends AbstractConnector {\n  private readonly config: WalletConnectConnectorArguments\n\n  public walletConnectProvider?: any\n\n  constructor(config: WalletConnectConnectorArguments) {\n    super({ supportedChainIds: getSupportedChains(config) })\n\n    this.config = config\n\n    this.handleChainChanged = this.handleChainChanged.bind(this)\n    this.handleAccountsChanged = this.handleAccountsChanged.bind(this)\n    this.handleDisconnect = this.handleDisconnect.bind(this)\n  }\n\n  private handleChainChanged(chainId: number | string): void {\n    if (__DEV__) {\n      console.log(\"Handling 'chainChanged' event with payload\", chainId)\n    }\n    this.emitUpdate({ chainId })\n  }\n\n  private handleAccountsChanged(accounts: string[]): void {\n    if (__DEV__) {\n      console.log(\"Handling 'accountsChanged' event with payload\", accounts)\n    }\n    this.emitUpdate({ account: accounts[0] })\n  }\n\n  private handleDisconnect(): void {\n    if (__DEV__) {\n      console.log(\"Handling 'disconnect' event\")\n    }\n    this.emitDeactivate()\n    // we have to do this because of a @walletconnect/web3-provider bug\n    if (this.walletConnectProvider) {\n      this.walletConnectProvider.stop()\n      this.walletConnectProvider.removeListener('chainChanged', this.handleChainChanged)\n      this.walletConnectProvider.removeListener('accountsChanged', this.handleAccountsChanged)\n      this.walletConnectProvider = undefined\n    }\n\n    this.emitDeactivate()\n  }\n\n  public async activate(): Promise<ConnectorUpdate> {\n    if (!this.walletConnectProvider) {\n      const WalletConnectProvider = await import('@walletconnect/web3-provider').then(m => m?.default ?? m)\n      this.walletConnectProvider = new WalletConnectProvider(this.config)\n    }\n\n    // ensure that the uri is going to be available, and emit an event if there's a new uri\n    if (!this.walletConnectProvider.wc.connected) {\n      await this.walletConnectProvider.wc.createSession({\n        chainId: this.supportedChainIds && this.supportedChainIds.length > 0 ? this.supportedChainIds[0] : 1\n      })\n      this.emit(URI_AVAILABLE, this.walletConnectProvider.wc.uri)\n    }\n\n    const account = await this.walletConnectProvider\n      .enable()\n      .then((accounts: string[]): string => accounts[0])\n      .catch((error: Error): void => {\n        // TODO ideally this would be a better check\n        if (error.message === 'User closed modal') {\n          throw new UserRejectedRequestError()\n        }\n\n        throw error\n      })\n\n    this.walletConnectProvider.on('disconnect', this.handleDisconnect)\n    this.walletConnectProvider.on('chainChanged', this.handleChainChanged)\n    this.walletConnectProvider.on('accountsChanged', this.handleAccountsChanged)\n\n    return { provider: this.walletConnectProvider, account }\n  }\n\n  public async getProvider(): Promise<any> {\n    return this.walletConnectProvider\n  }\n\n  public async getChainId(): Promise<number | string> {\n    return this.walletConnectProvider.send('eth_chainId')\n  }\n\n  public async getAccount(): Promise<null | string> {\n    return this.walletConnectProvider.send('eth_accounts').then((accounts: string[]): string => accounts[0])\n  }\n\n  public deactivate() {\n    if (this.walletConnectProvider) {\n      this.walletConnectProvider.stop()\n      this.walletConnectProvider.removeListener('disconnect', this.handleDisconnect)\n      this.walletConnectProvider.removeListener('chainChanged', this.handleChainChanged)\n      this.walletConnectProvider.removeListener('accountsChanged', this.handleAccountsChanged)\n    }\n  }\n\n  public async close() {\n    await this.walletConnectProvider?.close()\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}