{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Devrim\\\\Documents\\\\FRANKswapUIforProspBlast\\\\src\\\\views\\\\Home\\\\components\\\\CakeWalletBalance.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Text } from '@pancakeswap/uikit';\nimport { useWeb3React } from '@web3-react/core';\nimport useTokenBalance from 'hooks/useTokenBalance';\nimport { useTranslation } from 'contexts/Localization';\nimport { getCakeAddress } from 'utils/addressHelpers';\nimport { getBalanceNumber } from 'utils/formatBalance';\nimport { usePriceCakeBusd } from 'state/farms/hooks';\nimport { BigNumber } from 'bignumber.js';\nimport CardValue from './CardValue';\nimport CardBusdValue from './CardBusdValue';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CakeWalletBalance = () => {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  const {\n    balance: cakeBalance\n  } = useTokenBalance(getCakeAddress());\n  const cakePriceBusd = usePriceCakeBusd();\n  const busdBalance = new BigNumber(getBalanceNumber(cakeBalance)).multipliedBy(cakePriceBusd).toNumber();\n  const {\n    account\n  } = useWeb3React();\n\n  if (!account) {\n    return /*#__PURE__*/_jsxDEV(Text, {\n      color: \"textDisabled\",\n      style: {\n        lineHeight: '54px'\n      },\n      children: t('Locked')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CardValue, {\n      value: getBalanceNumber(cakeBalance),\n      decimals: 4,\n      fontSize: \"24px\",\n      lineHeight: \"36px\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), cakePriceBusd.gt(0) ? /*#__PURE__*/_jsxDEV(CardBusdValue, {\n      value: busdBalance\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 30\n    }, this) : /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 70\n    }, this)]\n  }, void 0, true);\n};\n\n_s(CakeWalletBalance, \"1l/VY148qFC74fvEAPR608dSzU8=\", false, function () {\n  return [useTranslation, useTokenBalance, usePriceCakeBusd, useWeb3React];\n});\n\n_c = CakeWalletBalance;\nexport default CakeWalletBalance;\n\nvar _c;\n\n$RefreshReg$(_c, \"CakeWalletBalance\");","map":{"version":3,"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/views/Home/components/CakeWalletBalance.tsx"],"names":["React","Text","useWeb3React","useTokenBalance","useTranslation","getCakeAddress","getBalanceNumber","usePriceCakeBusd","BigNumber","CardValue","CardBusdValue","CakeWalletBalance","t","balance","cakeBalance","cakePriceBusd","busdBalance","multipliedBy","toNumber","account","lineHeight","gt"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,oBAArB;AACA,SAASC,YAAT,QAA6B,kBAA7B;AACA,OAAOC,eAAP,MAA4B,uBAA5B;AACA,SAASC,cAAT,QAA+B,uBAA/B;AACA,SAASC,cAAT,QAA+B,sBAA/B;AACA,SAASC,gBAAT,QAAiC,qBAAjC;AACA,SAASC,gBAAT,QAAiC,mBAAjC;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;;;AAEA,MAAMC,iBAAiB,GAAG,MAAM;AAAA;;AAC9B,QAAM;AAAEC,IAAAA;AAAF,MAAQR,cAAc,EAA5B;AACA,QAAM;AAAES,IAAAA,OAAO,EAAEC;AAAX,MAA2BX,eAAe,CAACE,cAAc,EAAf,CAAhD;AACA,QAAMU,aAAa,GAAGR,gBAAgB,EAAtC;AACA,QAAMS,WAAW,GAAG,IAAIR,SAAJ,CAAcF,gBAAgB,CAACQ,WAAD,CAA9B,EAA6CG,YAA7C,CAA0DF,aAA1D,EAAyEG,QAAzE,EAApB;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAcjB,YAAY,EAAhC;;AAEA,MAAI,CAACiB,OAAL,EAAc;AACZ,wBACE,QAAC,IAAD;AAAM,MAAA,KAAK,EAAC,cAAZ;AAA2B,MAAA,KAAK,EAAE;AAAEC,QAAAA,UAAU,EAAE;AAAd,OAAlC;AAAA,gBACGR,CAAC,CAAC,QAAD;AADJ;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAED,sBACE;AAAA,4BACE,QAAC,SAAD;AAAW,MAAA,KAAK,EAAEN,gBAAgB,CAACQ,WAAD,CAAlC;AAAiD,MAAA,QAAQ,EAAE,CAA3D;AAA8D,MAAA,QAAQ,EAAC,MAAvE;AAA8E,MAAA,UAAU,EAAC;AAAzF;AAAA;AAAA;AAAA;AAAA,YADF,EAEGC,aAAa,CAACM,EAAd,CAAiB,CAAjB,iBAAsB,QAAC,aAAD;AAAe,MAAA,KAAK,EAAEL;AAAtB;AAAA;AAAA;AAAA;AAAA,YAAtB,gBAA8D;AAAA;AAAA;AAAA;AAAA,YAFjE;AAAA,kBADF;AAMD,CArBD;;GAAML,iB;UACUP,c,EACmBD,e,EACXI,gB,EAEFL,Y;;;KALhBS,iB;AAuBN,eAAeA,iBAAf","sourcesContent":["import React from 'react'\r\nimport { Text } from '@pancakeswap/uikit'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport useTokenBalance from 'hooks/useTokenBalance'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { getCakeAddress } from 'utils/addressHelpers'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { usePriceCakeBusd } from 'state/farms/hooks'\r\nimport { BigNumber } from 'bignumber.js'\r\nimport CardValue from './CardValue'\r\nimport CardBusdValue from './CardBusdValue'\r\n\r\nconst CakeWalletBalance = () => {\r\n  const { t } = useTranslation()\r\n  const { balance: cakeBalance } = useTokenBalance(getCakeAddress())\r\n  const cakePriceBusd = usePriceCakeBusd()\r\n  const busdBalance = new BigNumber(getBalanceNumber(cakeBalance)).multipliedBy(cakePriceBusd).toNumber()\r\n  const { account } = useWeb3React()\r\n\r\n  if (!account) {\r\n    return (\r\n      <Text color=\"textDisabled\" style={{ lineHeight: '54px' }}>\r\n        {t('Locked')}\r\n      </Text>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <CardValue value={getBalanceNumber(cakeBalance)} decimals={4} fontSize=\"24px\" lineHeight=\"36px\" />\r\n      {cakePriceBusd.gt(0) ? <CardBusdValue value={busdBalance} /> : <br />}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CakeWalletBalance\r\n"]},"metadata":{},"sourceType":"module"}