{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Devrim\\\\Documents\\\\FRANKswapUIforProspBlast\\\\src\\\\views\\\\Ifos\\\\components\\\\IfoFoldableCard\\\\IfoPoolCard\\\\GetLpModal.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Modal, ModalBody, Text, Image, Button, Link, OpenNewIcon } from '@pancakeswap/uikit';\nimport { BASE_ADD_LIQUIDITY_URL } from 'config';\nimport { useTranslation } from 'contexts/Localization';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst GetLpModal = ({\n  currency,\n  onDismiss\n}) => {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    title: t('LP Tokens required'),\n    onDismiss: onDismiss,\n    children: /*#__PURE__*/_jsxDEV(ModalBody, {\n      maxWidth: \"288px\",\n      children: [/*#__PURE__*/_jsxDEV(Image, {\n        src: `/images/farms/${currency.symbol.split(' ')[0].toLocaleLowerCase()}.svg`,\n        width: 72,\n        height: 72,\n        margin: \"auto\",\n        mb: \"24px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        mb: \"16px\",\n        children: t('You’ll need CAKE-BNB LP tokens to participate in the IFO!')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        mb: \"24px\",\n        children: t('Get LP tokens, or make sure your tokens aren’t staked somewhere else.')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        as: Link,\n        external: true,\n        href: `${BASE_ADD_LIQUIDITY_URL}/BNB/0xB60dF4A1db61B173d0d774ffa813C3c37070E38b`,\n        endIcon: /*#__PURE__*/_jsxDEV(OpenNewIcon, {\n          color: \"white\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 20\n        }, this),\n        minWidth: \"100%\" // Bypass the width=\"fit-content\" on Links\n        ,\n        children: t('Get LP tokens')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n\n_s(GetLpModal, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n\n_c = GetLpModal;\nexport default GetLpModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"GetLpModal\");","map":{"version":3,"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/views/Ifos/components/IfoFoldableCard/IfoPoolCard/GetLpModal.tsx"],"names":["React","Modal","ModalBody","Text","Image","Button","Link","OpenNewIcon","BASE_ADD_LIQUIDITY_URL","useTranslation","GetLpModal","currency","onDismiss","t","symbol","split","toLocaleLowerCase"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,SAAhB,EAA2BC,IAA3B,EAAiCC,KAAjC,EAAwCC,MAAxC,EAAgDC,IAAhD,EAAsDC,WAAtD,QAAyE,oBAAzE;AACA,SAASC,sBAAT,QAAuC,QAAvC;AAEA,SAASC,cAAT,QAA+B,uBAA/B;;;AAOA,MAAMC,UAAoC,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAA6B;AAAA;;AACxE,QAAM;AAAEC,IAAAA;AAAF,MAAQJ,cAAc,EAA5B;AACA,sBACE,QAAC,KAAD;AAAO,IAAA,KAAK,EAAEI,CAAC,CAAC,oBAAD,CAAf;AAAuC,IAAA,SAAS,EAAED,SAAlD;AAAA,2BACE,QAAC,SAAD;AAAW,MAAA,QAAQ,EAAC,OAApB;AAAA,8BACE,QAAC,KAAD;AACE,QAAA,GAAG,EAAG,iBAAgBD,QAAQ,CAACG,MAAT,CAAgBC,KAAhB,CAAsB,GAAtB,EAA2B,CAA3B,EAA8BC,iBAA9B,EAAkD,MAD1E;AAEE,QAAA,KAAK,EAAE,EAFT;AAGE,QAAA,MAAM,EAAE,EAHV;AAIE,QAAA,MAAM,EAAC,MAJT;AAKE,QAAA,EAAE,EAAC;AALL;AAAA;AAAA;AAAA;AAAA,cADF,eAQE,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,MAAT;AAAA,kBAAiBH,CAAC,CAAC,2DAAD;AAAlB;AAAA;AAAA;AAAA;AAAA,cARF,eASE,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,MAAT;AAAA,kBAAiBA,CAAC,CAAC,uEAAD;AAAlB;AAAA;AAAA;AAAA;AAAA,cATF,eAUE,QAAC,MAAD;AACE,QAAA,EAAE,EAAEP,IADN;AAEE,QAAA,QAAQ,MAFV;AAGE,QAAA,IAAI,EAAG,GAAEE,sBAAuB,iDAHlC;AAIE,QAAA,OAAO,eAAE,QAAC,WAAD;AAAa,UAAA,KAAK,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA,gBAJX;AAKE,QAAA,QAAQ,EAAC,MALX,CAKkB;AALlB;AAAA,kBAOGK,CAAC,CAAC,eAAD;AAPJ;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD,CA1BD;;GAAMH,U;UACUD,c;;;KADVC,U;AA4BN,eAAeA,UAAf","sourcesContent":["import React from 'react'\r\nimport { Modal, ModalBody, Text, Image, Button, Link, OpenNewIcon } from '@pancakeswap/uikit'\r\nimport { BASE_ADD_LIQUIDITY_URL } from 'config'\r\nimport { Token } from 'config/constants/types'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\ninterface Props {\r\n  currency: Token\r\n  onDismiss?: () => void\r\n}\r\n\r\nconst GetLpModal: React.FC<Partial<Props>> = ({ currency, onDismiss }) => {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <Modal title={t('LP Tokens required')} onDismiss={onDismiss}>\r\n      <ModalBody maxWidth=\"288px\">\r\n        <Image\r\n          src={`/images/farms/${currency.symbol.split(' ')[0].toLocaleLowerCase()}.svg`}\r\n          width={72}\r\n          height={72}\r\n          margin=\"auto\"\r\n          mb=\"24px\"\r\n        />\r\n        <Text mb=\"16px\">{t('You’ll need CAKE-BNB LP tokens to participate in the IFO!')}</Text>\r\n        <Text mb=\"24px\">{t('Get LP tokens, or make sure your tokens aren’t staked somewhere else.')}</Text>\r\n        <Button\r\n          as={Link}\r\n          external\r\n          href={`${BASE_ADD_LIQUIDITY_URL}/BNB/0xB60dF4A1db61B173d0d774ffa813C3c37070E38b`}\r\n          endIcon={<OpenNewIcon color=\"white\" />}\r\n          minWidth=\"100%\" // Bypass the width=\"fit-content\" on Links\r\n        >\r\n          {t('Get LP tokens')}\r\n        </Button>\r\n      </ModalBody>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default GetLpModal\r\n"]},"metadata":{},"sourceType":"module"}