{"ast":null,"code":"import BigNumber from'bignumber.js';import{getCakeVaultContract}from'utils/contractHelpers';const cakeVaultContract=getCakeVaultContract();const fetchVaultUser=async account=>{try{const userContractResponse=await cakeVaultContract.userInfo(account);return{isLoading:false,userShares:new BigNumber(userContractResponse.shares.toString()).toJSON(),lastDepositedTime:userContractResponse.lastDepositedTime.toString(),lastUserActionTime:userContractResponse.lastUserActionTime.toString(),cakeAtLastUserAction:new BigNumber(userContractResponse.cakeAtLastUserAction.toString()).toJSON()};}catch(error){return{isLoading:true,userShares:null,lastDepositedTime:null,lastUserActionTime:null,cakeAtLastUserAction:null};}};export default fetchVaultUser;","map":{"version":3,"names":["BigNumber","getCakeVaultContract","cakeVaultContract","fetchVaultUser","account","userContractResponse","userInfo","isLoading","userShares","shares","toString","toJSON","lastDepositedTime","lastUserActionTime","cakeAtLastUserAction","error"],"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/state/pools/fetchVaultUser.ts"],"sourcesContent":["import BigNumber from 'bignumber.js'\r\nimport { getCakeVaultContract } from 'utils/contractHelpers'\r\n\r\nconst cakeVaultContract = getCakeVaultContract()\r\n\r\nconst fetchVaultUser = async (account: string) => {\r\n  try {\r\n    const userContractResponse = await cakeVaultContract.userInfo(account)\r\n    return {\r\n      isLoading: false,\r\n      userShares: new BigNumber(userContractResponse.shares.toString()).toJSON(),\r\n      lastDepositedTime: userContractResponse.lastDepositedTime.toString(),\r\n      lastUserActionTime: userContractResponse.lastUserActionTime.toString(),\r\n      cakeAtLastUserAction: new BigNumber(userContractResponse.cakeAtLastUserAction.toString()).toJSON(),\r\n    }\r\n  } catch (error) {\r\n    return {\r\n      isLoading: true,\r\n      userShares: null,\r\n      lastDepositedTime: null,\r\n      lastUserActionTime: null,\r\n      cakeAtLastUserAction: null,\r\n    }\r\n  }\r\n}\r\n\r\nexport default fetchVaultUser\r\n"],"mappings":"AAAA,MAAO,CAAAA,SAAS,KAAM,cAAc,CACpC,OAASC,oBAAoB,KAAQ,uBAAuB,CAE5D,KAAM,CAAAC,iBAAiB,CAAGD,oBAAoB,CAAC,CAAC,CAEhD,KAAM,CAAAE,cAAc,CAAG,KAAO,CAAAC,OAAe,EAAK,CAChD,GAAI,CACF,KAAM,CAAAC,oBAAoB,CAAG,KAAM,CAAAH,iBAAiB,CAACI,QAAQ,CAACF,OAAO,CAAC,CACtE,MAAO,CACLG,SAAS,CAAE,KAAK,CAChBC,UAAU,CAAE,GAAI,CAAAR,SAAS,CAACK,oBAAoB,CAACI,MAAM,CAACC,QAAQ,CAAC,CAAC,CAAC,CAACC,MAAM,CAAC,CAAC,CAC1EC,iBAAiB,CAAEP,oBAAoB,CAACO,iBAAiB,CAACF,QAAQ,CAAC,CAAC,CACpEG,kBAAkB,CAAER,oBAAoB,CAACQ,kBAAkB,CAACH,QAAQ,CAAC,CAAC,CACtEI,oBAAoB,CAAE,GAAI,CAAAd,SAAS,CAACK,oBAAoB,CAACS,oBAAoB,CAACJ,QAAQ,CAAC,CAAC,CAAC,CAACC,MAAM,CAAC,CACnG,CAAC,CACH,CAAE,MAAOI,KAAK,CAAE,CACd,MAAO,CACLR,SAAS,CAAE,IAAI,CACfC,UAAU,CAAE,IAAI,CAChBI,iBAAiB,CAAE,IAAI,CACvBC,kBAAkB,CAAE,IAAI,CACxBC,oBAAoB,CAAE,IACxB,CAAC,CACH,CACF,CAAC,CAED,cAAe,CAAAX,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module"}