{"ast":null,"code":"var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useAppDispatch } from 'state';\nimport { fetchTeam, fetchTeams } from '.';\nexport const useTeam = id => {\n  _s();\n\n  const team = useSelector(state => state.teams.data[id]);\n  const dispatch = useAppDispatch();\n  useEffect(() => {\n    dispatch(fetchTeam(id));\n  }, [id, dispatch]);\n  return team;\n};\n\n_s(useTeam, \"DyuMdVerOKX5fcfe5TyEmnC8m+o=\", false, function () {\n  return [useSelector, useAppDispatch];\n});\n\nexport const useTeams = () => {\n  _s2();\n\n  const {\n    isInitialized,\n    isLoading,\n    data\n  } = useSelector(state => state.teams);\n  const dispatch = useAppDispatch();\n  useEffect(() => {\n    dispatch(fetchTeams());\n  }, [dispatch]);\n  return {\n    teams: data,\n    isInitialized,\n    isLoading\n  };\n};\n\n_s2(useTeams, \"MG/rX3obHehsmT4LdcT3JsnsVRA=\", false, function () {\n  return [useSelector, useAppDispatch];\n});","map":{"version":3,"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/state/teams/hooks.ts"],"names":["useEffect","useSelector","useAppDispatch","fetchTeam","fetchTeams","useTeam","id","team","state","teams","data","dispatch","useTeams","isInitialized","isLoading"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,cAAT,QAA+B,OAA/B;AAGA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,GAAtC;AAEA,OAAO,MAAMC,OAAO,GAAIC,EAAD,IAAgB;AAAA;;AACrC,QAAMC,IAAU,GAAGN,WAAW,CAAEO,KAAD,IAAkBA,KAAK,CAACC,KAAN,CAAYC,IAAZ,CAAiBJ,EAAjB,CAAnB,CAA9B;AACA,QAAMK,QAAQ,GAAGT,cAAc,EAA/B;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,QAAQ,CAACR,SAAS,CAACG,EAAD,CAAV,CAAR;AACD,GAFQ,EAEN,CAACA,EAAD,EAAKK,QAAL,CAFM,CAAT;AAIA,SAAOJ,IAAP;AACD,CATM;;GAAMF,O;UACQJ,W,EACFC,c;;;AASnB,OAAO,MAAMU,QAAQ,GAAG,MAAM;AAAA;;AAC5B,QAAM;AAAEC,IAAAA,aAAF;AAAiBC,IAAAA,SAAjB;AAA4BJ,IAAAA;AAA5B,MAAiDT,WAAW,CAAEO,KAAD,IAAkBA,KAAK,CAACC,KAAzB,CAAlE;AACA,QAAME,QAAQ,GAAGT,cAAc,EAA/B;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,QAAQ,CAACP,UAAU,EAAX,CAAR;AACD,GAFQ,EAEN,CAACO,QAAD,CAFM,CAAT;AAIA,SAAO;AAAEF,IAAAA,KAAK,EAAEC,IAAT;AAAeG,IAAAA,aAAf;AAA8BC,IAAAA;AAA9B,GAAP;AACD,CATM;;IAAMF,Q;UAC4CX,W,EACtCC,c","sourcesContent":["import { useEffect } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { useAppDispatch } from 'state'\r\nimport { Team } from 'config/constants/types'\r\nimport { State, TeamsState } from '../types'\r\nimport { fetchTeam, fetchTeams } from '.'\r\n\r\nexport const useTeam = (id: number) => {\r\n  const team: Team = useSelector((state: State) => state.teams.data[id])\r\n  const dispatch = useAppDispatch()\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchTeam(id))\r\n  }, [id, dispatch])\r\n\r\n  return team\r\n}\r\n\r\nexport const useTeams = () => {\r\n  const { isInitialized, isLoading, data }: TeamsState = useSelector((state: State) => state.teams)\r\n  const dispatch = useAppDispatch()\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchTeams())\r\n  }, [dispatch])\r\n\r\n  return { teams: data, isInitialized, isLoading }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}