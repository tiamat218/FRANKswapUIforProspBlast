{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.parseTransactionData = exports.parsePersonalSign = exports.isValidAddress = exports.toChecksumAddress = void 0;\nconst js_sha3_1 = require(\"js-sha3\");\nconst encoding_1 = require(\"./encoding\");\nconst misc_1 = require(\"./misc\");\nconst validators_1 = require(\"./validators\");\nconst enc_utils_1 = require(\"enc-utils\");\nfunction toChecksumAddress(address) {\n  address = enc_utils_1.removeHexPrefix(address.toLowerCase());\n  const hash = enc_utils_1.removeHexPrefix(js_sha3_1.keccak_256(encoding_1.convertUtf8ToBuffer(address)));\n  let checksum = \"\";\n  for (let i = 0; i < address.length; i++) {\n    if (parseInt(hash[i], 16) > 7) {\n      checksum += address[i].toUpperCase();\n    } else {\n      checksum += address[i];\n    }\n  }\n  return enc_utils_1.addHexPrefix(checksum);\n}\nexports.toChecksumAddress = toChecksumAddress;\nconst isValidAddress = address => {\n  if (!address) {\n    return false;\n  } else if (address.toLowerCase().substring(0, 2) !== \"0x\") {\n    return false;\n  } else if (!/^(0x)?[0-9a-f]{40}$/i.test(address)) {\n    return false;\n  } else if (/^(0x)?[0-9a-f]{40}$/.test(address) || /^(0x)?[0-9A-F]{40}$/.test(address)) {\n    return true;\n  } else {\n    return address === toChecksumAddress(address);\n  }\n};\nexports.isValidAddress = isValidAddress;\nfunction parsePersonalSign(params) {\n  if (!validators_1.isEmptyArray(params) && !validators_1.isHexString(params[0])) {\n    params[0] = encoding_1.convertUtf8ToHex(params[0]);\n  }\n  return params;\n}\nexports.parsePersonalSign = parsePersonalSign;\nfunction parseTransactionData(txData) {\n  if (typeof txData.from === \"undefined\" || !exports.isValidAddress(txData.from)) {\n    throw new Error(\"Transaction object must include a valid 'from' value.\");\n  }\n  function parseHexValues(value) {\n    let result = value;\n    if (typeof value === \"number\" || typeof value === \"string\" && !validators_1.isEmptyString(value)) {\n      if (!validators_1.isHexString(value)) {\n        result = encoding_1.convertNumberToHex(value);\n      } else if (typeof value === \"string\") {\n        result = misc_1.sanitizeHex(value);\n      }\n    }\n    if (typeof result === \"string\") {\n      result = misc_1.removeHexLeadingZeros(result);\n    }\n    return result;\n  }\n  const txDataRPC = {\n    from: misc_1.sanitizeHex(txData.from),\n    to: typeof txData.to === \"undefined\" ? \"\" : misc_1.sanitizeHex(txData.to),\n    gasPrice: typeof txData.gasPrice === \"undefined\" ? \"\" : parseHexValues(txData.gasPrice),\n    gas: typeof txData.gas === \"undefined\" ? typeof txData.gasLimit === \"undefined\" ? \"\" : parseHexValues(txData.gasLimit) : parseHexValues(txData.gas),\n    value: typeof txData.value === \"undefined\" ? \"\" : parseHexValues(txData.value),\n    nonce: typeof txData.nonce === \"undefined\" ? \"\" : parseHexValues(txData.nonce),\n    data: typeof txData.data === \"undefined\" ? \"\" : misc_1.sanitizeHex(txData.data) || \"0x\"\n  };\n  const prunable = [\"gasPrice\", \"gas\", \"value\", \"nonce\"];\n  Object.keys(txDataRPC).forEach(key => {\n    if (!txDataRPC[key].trim().length && prunable.includes(key)) {\n      delete txDataRPC[key];\n    }\n  });\n  return txDataRPC;\n}\nexports.parseTransactionData = parseTransactionData;","map":{"version":3,"names":["js_sha3_1","require","encoding_1","misc_1","validators_1","enc_utils_1","toChecksumAddress","address","removeHexPrefix","toLowerCase","hash","keccak_256","convertUtf8ToBuffer","checksum","i","length","parseInt","toUpperCase","addHexPrefix","exports","isValidAddress","substring","test","parsePersonalSign","params","isEmptyArray","isHexString","convertUtf8ToHex","parseTransactionData","txData","from","Error","parseHexValues","value","result","isEmptyString","convertNumberToHex","sanitizeHex","removeHexLeadingZeros","txDataRPC","to","gasPrice","gas","gasLimit","nonce","data","prunable","Object","keys","forEach","key","trim","includes"],"sources":["../../src/ethereum.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}