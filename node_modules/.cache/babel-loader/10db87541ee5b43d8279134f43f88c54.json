{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\frkul\\\\Documents\\\\swapUI_pancake-frontend\\\\src\\\\views\\\\Predictions\\\\components\\\\RoundCard\\\\CanceledRoundCard.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { CardBody, Text, Flex, BlockIcon, LinkExternal } from '@pancakeswap/uikit';\nimport { useTranslation } from 'contexts/Localization';\nimport { BetPosition } from 'state/types';\nimport { useGetTotalIntervalBlocks } from 'state/hooks';\nimport ReclaimPositionButton from '../ReclaimPositionButton';\nimport useIsRefundable from '../../hooks/useIsRefundable';\nimport { RoundResultBox } from '../RoundResult';\nimport MultiplierArrow from './MultiplierArrow';\nimport Card from './Card';\nimport CardHeader from './CardHeader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CanceledRoundCard = ({\n  round\n}) => {\n  _s();\n  const {\n    t\n  } = useTranslation();\n  const interval = useGetTotalIntervalBlocks();\n  const {\n    isRefundable,\n    setIsRefundable\n  } = useIsRefundable(round.epoch);\n  const {\n    epoch,\n    startBlock\n  } = round;\n  const estimatedEndBlock = startBlock + interval;\n  const handleSuccess = async () => {\n    setIsRefundable(false);\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n      status: \"canceled\",\n      icon: /*#__PURE__*/_jsxDEV(BlockIcon, {\n        mr: \"4px\",\n        width: \"21px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 15\n      }, this),\n      title: t('Canceled'),\n      epoch: round.epoch,\n      blockNumber: estimatedEndBlock\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n      p: \"16px\",\n      children: [/*#__PURE__*/_jsxDEV(MultiplierArrow, {\n        isDisabled: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RoundResultBox, {\n        children: /*#__PURE__*/_jsxDEV(Flex, {\n          flexDirection: \"column\",\n          alignItems: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            bold: true,\n            color: isRefundable ? 'text' : 'textDisabled',\n            children: t('Round Canceled')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), isRefundable && /*#__PURE__*/_jsxDEV(ReclaimPositionButton, {\n            epoch: epoch,\n            onSuccess: handleSuccess,\n            width: \"100%\",\n            my: \"8px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 30\n          }, this), /*#__PURE__*/_jsxDEV(LinkExternal, {\n            href: \"https://docs.pancakeswap.finance/products/prediction\",\n            external: true,\n            children: t('Learn More')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MultiplierArrow, {\n        betPosition: BetPosition.BEAR,\n        isDisabled: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(CanceledRoundCard, \"JenY2UDwlyuEmboiYMj2/JunzRk=\", false, function () {\n  return [useTranslation, useGetTotalIntervalBlocks, useIsRefundable];\n});\n_c = CanceledRoundCard;\nexport default CanceledRoundCard;\nvar _c;\n$RefreshReg$(_c, \"CanceledRoundCard\");","map":{"version":3,"names":["React","CardBody","Text","Flex","BlockIcon","LinkExternal","useTranslation","BetPosition","useGetTotalIntervalBlocks","ReclaimPositionButton","useIsRefundable","RoundResultBox","MultiplierArrow","Card","CardHeader","jsxDEV","_jsxDEV","CanceledRoundCard","round","_s","t","interval","isRefundable","setIsRefundable","epoch","startBlock","estimatedEndBlock","handleSuccess","children","status","icon","mr","width","fileName","_jsxFileName","lineNumber","columnNumber","title","blockNumber","p","isDisabled","flexDirection","alignItems","bold","color","onSuccess","my","href","external","betPosition","BEAR","_c","$RefreshReg$"],"sources":["C:/Users/frkul/Documents/swapUI_pancake-frontend/src/views/Predictions/components/RoundCard/CanceledRoundCard.tsx"],"sourcesContent":["import React from 'react'\r\nimport { CardBody, Text, Flex, BlockIcon, LinkExternal } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { NodeRound, BetPosition } from 'state/types'\r\nimport { useGetTotalIntervalBlocks } from 'state/hooks'\r\nimport ReclaimPositionButton from '../ReclaimPositionButton'\r\nimport useIsRefundable from '../../hooks/useIsRefundable'\r\nimport { RoundResultBox } from '../RoundResult'\r\nimport MultiplierArrow from './MultiplierArrow'\r\nimport Card from './Card'\r\nimport CardHeader from './CardHeader'\r\n\r\ninterface CanceledRoundCardProps {\r\n  round: NodeRound\r\n}\r\n\r\nconst CanceledRoundCard: React.FC<CanceledRoundCardProps> = ({ round }) => {\r\n  const { t } = useTranslation()\r\n  const interval = useGetTotalIntervalBlocks()\r\n  const { isRefundable, setIsRefundable } = useIsRefundable(round.epoch)\r\n  const { epoch, startBlock } = round\r\n  const estimatedEndBlock = startBlock + interval\r\n\r\n  const handleSuccess = async () => {\r\n    setIsRefundable(false)\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader\r\n        status=\"canceled\"\r\n        icon={<BlockIcon mr=\"4px\" width=\"21px\" />}\r\n        title={t('Canceled')}\r\n        epoch={round.epoch}\r\n        blockNumber={estimatedEndBlock}\r\n      />\r\n      <CardBody p=\"16px\">\r\n        <MultiplierArrow isDisabled />\r\n        <RoundResultBox>\r\n          <Flex flexDirection=\"column\" alignItems=\"center\">\r\n            <Text bold color={isRefundable ? 'text' : 'textDisabled'}>\r\n              {t('Round Canceled')}\r\n            </Text>\r\n            {isRefundable && <ReclaimPositionButton epoch={epoch} onSuccess={handleSuccess} width=\"100%\" my=\"8px\" />}\r\n            <LinkExternal href=\"https://docs.pancakeswap.finance/products/prediction\" external>\r\n              {t('Learn More')}\r\n            </LinkExternal>\r\n          </Flex>\r\n        </RoundResultBox>\r\n        <MultiplierArrow betPosition={BetPosition.BEAR} isDisabled />\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default CanceledRoundCard\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}