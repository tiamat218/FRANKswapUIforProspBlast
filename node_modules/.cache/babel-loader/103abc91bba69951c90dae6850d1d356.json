{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Devrim\\\\Documents\\\\FRANKswapUIforProspBlast\\\\src\\\\views\\\\Predictions\\\\Positions.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport SwiperCore, { Keyboard, Mousewheel } from 'swiper';\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport { Box } from '@pancakeswap/uikit';\nimport { useGetCurrentEpoch, useGetSortedRounds } from 'state/hooks';\nimport 'swiper/swiper.min.css';\nimport RoundCard from './components/RoundCard';\nimport Menu from './components/Menu';\nimport useSwiper from './hooks/useSwiper';\nimport useOnNextRound from './hooks/useOnNextRound';\nimport useOnViewChange from './hooks/useOnViewChange';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nSwiperCore.use([Keyboard, Mousewheel]);\nconst StyledSwiper = styled.div`\n  .swiper-wrapper {\n    align-items: center;\n    display: flex;\n  }\n\n  .swiper-slide {\n    width: 320px;\n  }\n`;\n_c = StyledSwiper;\n\nconst Positions = ({\n  view\n}) => {\n  _s();\n\n  const {\n    setSwiper\n  } = useSwiper();\n  const rounds = useGetSortedRounds();\n  const currentEpoch = useGetCurrentEpoch();\n  const previousEpoch = currentEpoch > 0 ? currentEpoch - 1 : currentEpoch;\n  const previousRound = rounds.find(round => round.epoch === previousEpoch);\n  const swiperIndex = rounds.indexOf(previousRound);\n  useOnNextRound();\n  useOnViewChange(swiperIndex, view);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    overflow: \"hidden\",\n    children: [/*#__PURE__*/_jsxDEV(Menu, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StyledSwiper, {\n      children: /*#__PURE__*/_jsxDEV(Swiper, {\n        initialSlide: swiperIndex,\n        onSwiper: setSwiper,\n        spaceBetween: 16,\n        slidesPerView: \"auto\",\n        freeMode: true,\n        freeModeSticky: true,\n        centeredSlides: true,\n        freeModeMomentumRatio: 0.25,\n        freeModeMomentumVelocityRatio: 0.5,\n        mousewheel: true,\n        keyboard: true,\n        resizeObserver: true,\n        children: rounds.map(round => /*#__PURE__*/_jsxDEV(SwiperSlide, {\n          children: /*#__PURE__*/_jsxDEV(RoundCard, {\n            round: round\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this)\n        }, round.epoch, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Positions, \"GX8KoIe2HSaR+t/m8xVgr4MmAnU=\", false, function () {\n  return [useSwiper, useGetSortedRounds, useGetCurrentEpoch, useOnNextRound, useOnViewChange];\n});\n\n_c2 = Positions;\nexport default Positions;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"StyledSwiper\");\n$RefreshReg$(_c2, \"Positions\");","map":{"version":3,"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/views/Predictions/Positions.tsx"],"names":["React","styled","SwiperCore","Keyboard","Mousewheel","Swiper","SwiperSlide","Box","useGetCurrentEpoch","useGetSortedRounds","RoundCard","Menu","useSwiper","useOnNextRound","useOnViewChange","use","StyledSwiper","div","Positions","view","setSwiper","rounds","currentEpoch","previousEpoch","previousRound","find","round","epoch","swiperIndex","indexOf","map"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,UAAP,IAAqBC,QAArB,EAA+BC,UAA/B,QAAiD,QAAjD;AACA,SAASC,MAAT,EAAiBC,WAAjB,QAAoC,cAApC;AACA,SAASC,GAAT,QAAoB,oBAApB;AACA,SAASC,kBAAT,EAA6BC,kBAA7B,QAAuD,aAAvD;AACA,OAAO,uBAAP;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AACA,OAAOC,cAAP,MAA2B,wBAA3B;AACA,OAAOC,eAAP,MAA4B,yBAA5B;;AAGAZ,UAAU,CAACa,GAAX,CAAe,CAACZ,QAAD,EAAWC,UAAX,CAAf;AAEA,MAAMY,YAAY,GAAGf,MAAM,CAACgB,GAAI;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATA;KAAMD,Y;;AAUN,MAAME,SAAwC,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAAA;;AAC7D,QAAM;AAAEC,IAAAA;AAAF,MAAgBR,SAAS,EAA/B;AACA,QAAMS,MAAM,GAAGZ,kBAAkB,EAAjC;AACA,QAAMa,YAAY,GAAGd,kBAAkB,EAAvC;AACA,QAAMe,aAAa,GAAGD,YAAY,GAAG,CAAf,GAAmBA,YAAY,GAAG,CAAlC,GAAsCA,YAA5D;AACA,QAAME,aAAa,GAAGH,MAAM,CAACI,IAAP,CAAaC,KAAD,IAAWA,KAAK,CAACC,KAAN,KAAgBJ,aAAvC,CAAtB;AACA,QAAMK,WAAW,GAAGP,MAAM,CAACQ,OAAP,CAAeL,aAAf,CAApB;AAEAX,EAAAA,cAAc;AACdC,EAAAA,eAAe,CAACc,WAAD,EAAcT,IAAd,CAAf;AAEA,sBACE,QAAC,GAAD;AAAK,IAAA,QAAQ,EAAC,QAAd;AAAA,4BACE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,YAAD;AAAA,6BACE,QAAC,MAAD;AACE,QAAA,YAAY,EAAES,WADhB;AAEE,QAAA,QAAQ,EAAER,SAFZ;AAGE,QAAA,YAAY,EAAE,EAHhB;AAIE,QAAA,aAAa,EAAC,MAJhB;AAKE,QAAA,QAAQ,MALV;AAME,QAAA,cAAc,MANhB;AAOE,QAAA,cAAc,MAPhB;AAQE,QAAA,qBAAqB,EAAE,IARzB;AASE,QAAA,6BAA6B,EAAE,GATjC;AAUE,QAAA,UAAU,MAVZ;AAWE,QAAA,QAAQ,MAXV;AAYE,QAAA,cAAc,MAZhB;AAAA,kBAcGC,MAAM,CAACS,GAAP,CAAYJ,KAAD,iBACV,QAAC,WAAD;AAAA,iCACE,QAAC,SAAD;AAAW,YAAA,KAAK,EAAEA;AAAlB;AAAA;AAAA;AAAA;AAAA;AADF,WAAkBA,KAAK,CAACC,KAAxB;AAAA;AAAA;AAAA;AAAA,gBADD;AAdH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD,CAtCD;;GAAMT,S;UACkBN,S,EACPH,kB,EACMD,kB,EAKrBK,c,EACAC,e;;;MATII,S;AAwCN,eAAeA,SAAf","sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\nimport SwiperCore, { Keyboard, Mousewheel } from 'swiper'\r\nimport { Swiper, SwiperSlide } from 'swiper/react'\r\nimport { Box } from '@pancakeswap/uikit'\r\nimport { useGetCurrentEpoch, useGetSortedRounds } from 'state/hooks'\r\nimport 'swiper/swiper.min.css'\r\nimport RoundCard from './components/RoundCard'\r\nimport Menu from './components/Menu'\r\nimport useSwiper from './hooks/useSwiper'\r\nimport useOnNextRound from './hooks/useOnNextRound'\r\nimport useOnViewChange from './hooks/useOnViewChange'\r\nimport { PageView } from './types'\r\n\r\nSwiperCore.use([Keyboard, Mousewheel])\r\n\r\nconst StyledSwiper = styled.div`\r\n  .swiper-wrapper {\r\n    align-items: center;\r\n    display: flex;\r\n  }\r\n\r\n  .swiper-slide {\r\n    width: 320px;\r\n  }\r\n`\r\nconst Positions: React.FC<{ view?: PageView }> = ({ view }) => {\r\n  const { setSwiper } = useSwiper()\r\n  const rounds = useGetSortedRounds()\r\n  const currentEpoch = useGetCurrentEpoch()\r\n  const previousEpoch = currentEpoch > 0 ? currentEpoch - 1 : currentEpoch\r\n  const previousRound = rounds.find((round) => round.epoch === previousEpoch)\r\n  const swiperIndex = rounds.indexOf(previousRound)\r\n\r\n  useOnNextRound()\r\n  useOnViewChange(swiperIndex, view)\r\n\r\n  return (\r\n    <Box overflow=\"hidden\">\r\n      <Menu />\r\n      <StyledSwiper>\r\n        <Swiper\r\n          initialSlide={swiperIndex}\r\n          onSwiper={setSwiper}\r\n          spaceBetween={16}\r\n          slidesPerView=\"auto\"\r\n          freeMode\r\n          freeModeSticky\r\n          centeredSlides\r\n          freeModeMomentumRatio={0.25}\r\n          freeModeMomentumVelocityRatio={0.5}\r\n          mousewheel\r\n          keyboard\r\n          resizeObserver\r\n        >\r\n          {rounds.map((round) => (\r\n            <SwiperSlide key={round.epoch}>\r\n              <RoundCard round={round} />\r\n            </SwiperSlide>\r\n          ))}\r\n        </Swiper>\r\n      </StyledSwiper>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default Positions\r\n"]},"metadata":{},"sourceType":"module"}