{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Devrim\\\\Documents\\\\FRANKswapUIforProspBlast\\\\src\\\\views\\\\Swap\\\\components\\\\SwapModalFooter.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useMemo, useState } from 'react';\nimport styled from 'styled-components';\nimport { TradeType } from '@pancakeswap/sdk';\nimport { Button, Text, AutoRenewIcon } from '@pancakeswap/uikit';\nimport { Field } from 'state/swap/actions';\nimport { computeSlippageAdjustedAmounts, computeTradePriceBreakdown, formatExecutionPrice, warningSeverity } from 'utils/prices';\nimport { AutoColumn } from 'components/Layout/Column';\nimport QuestionHelper from 'components/QuestionHelper';\nimport { AutoRow, RowBetween, RowFixed } from 'components/Layout/Row';\nimport FormattedPriceImpact from './FormattedPriceImpact';\nimport { StyledBalanceMaxMini, SwapCallbackError } from './styleds';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SwapModalFooterContainer = styled(AutoColumn)`\n  margin-top: 24px;\n  padding: 16px;\n  border-radius: ${({\n  theme\n}) => theme.radii.default};\n  border: 1px solid ${({\n  theme\n}) => theme.colors.cardBorder};\n  background-color: ${({\n  theme\n}) => theme.colors.background};\n`;\n_c = SwapModalFooterContainer;\nexport default function SwapModalFooter({\n  trade,\n  onConfirm,\n  allowedSlippage,\n  swapErrorMessage,\n  disabledConfirm\n}) {\n  _s();\n\n  var _slippageAdjustedAmou, _slippageAdjustedAmou2, _slippageAdjustedAmou3, _slippageAdjustedAmou4;\n\n  const [showInverted, setShowInverted] = useState(false);\n  const slippageAdjustedAmounts = useMemo(() => computeSlippageAdjustedAmounts(trade, allowedSlippage), [allowedSlippage, trade]);\n  const {\n    priceImpactWithoutFee,\n    realizedLPFee\n  } = useMemo(() => computeTradePriceBreakdown(trade), [trade]);\n  const severity = warningSeverity(priceImpactWithoutFee);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(SwapModalFooterContainer, {\n      children: [/*#__PURE__*/_jsxDEV(RowBetween, {\n        align: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"14px\",\n          children: \"Price\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"14px\",\n          style: {\n            justifyContent: 'center',\n            alignItems: 'center',\n            display: 'flex',\n            textAlign: 'right',\n            paddingLeft: '10px'\n          },\n          children: [formatExecutionPrice(trade, showInverted), /*#__PURE__*/_jsxDEV(StyledBalanceMaxMini, {\n            onClick: () => setShowInverted(!showInverted),\n            children: /*#__PURE__*/_jsxDEV(AutoRenewIcon, {\n              width: \"14px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RowBetween, {\n        children: [/*#__PURE__*/_jsxDEV(RowFixed, {\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            fontSize: \"14px\",\n            children: trade.tradeType === TradeType.EXACT_INPUT ? 'Minimum received' : 'Maximum sold'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(QuestionHelper, {\n            text: \"Your transaction will revert if there is a large, unfavorable price movement before it is confirmed.\",\n            ml: \"4px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RowFixed, {\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            fontSize: \"14px\",\n            children: trade.tradeType === TradeType.EXACT_INPUT ? (_slippageAdjustedAmou = (_slippageAdjustedAmou2 = slippageAdjustedAmounts[Field.OUTPUT]) === null || _slippageAdjustedAmou2 === void 0 ? void 0 : _slippageAdjustedAmou2.toSignificant(4)) !== null && _slippageAdjustedAmou !== void 0 ? _slippageAdjustedAmou : '-' : (_slippageAdjustedAmou3 = (_slippageAdjustedAmou4 = slippageAdjustedAmounts[Field.INPUT]) === null || _slippageAdjustedAmou4 === void 0 ? void 0 : _slippageAdjustedAmou4.toSignificant(4)) !== null && _slippageAdjustedAmou3 !== void 0 ? _slippageAdjustedAmou3 : '-'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            fontSize: \"14px\",\n            marginLeft: \"4px\",\n            children: trade.tradeType === TradeType.EXACT_INPUT ? trade.outputAmount.currency.symbol : trade.inputAmount.currency.symbol\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RowBetween, {\n        children: [/*#__PURE__*/_jsxDEV(RowFixed, {\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            fontSize: \"14px\",\n            children: \"Price Impact\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(QuestionHelper, {\n            text: \"The difference between the market price and your price due to trade size.\",\n            ml: \"4px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormattedPriceImpact, {\n          priceImpact: priceImpactWithoutFee\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RowBetween, {\n        children: [/*#__PURE__*/_jsxDEV(RowFixed, {\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            fontSize: \"14px\",\n            children: \"Liquidity Provider Fee\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(QuestionHelper, {\n            text: /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Text, {\n                mb: \"12px\",\n                children: \"For each trade a 0.25% fee is paid\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Text, {\n                children: \"- 0.17% to LP token holders\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Text, {\n                children: \"- 0.03% to the Treasury\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Text, {\n                children: \"- 0.05% towards CAKE buyback and burn\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true),\n            ml: \"4px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"14px\",\n          children: realizedLPFee ? `${realizedLPFee === null || realizedLPFee === void 0 ? void 0 : realizedLPFee.toSignificant(6)} ${trade.inputAmount.currency.symbol}` : '-'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AutoRow, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: severity > 2 ? 'danger' : 'primary',\n        onClick: onConfirm,\n        disabled: disabledConfirm,\n        mt: \"12px\",\n        id: \"confirm-swap-or-send\",\n        width: \"100%\",\n        children: severity > 2 ? 'Swap Anyway' : 'Confirm Swap'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), swapErrorMessage ? /*#__PURE__*/_jsxDEV(SwapCallbackError, {\n        error: swapErrorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 29\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(SwapModalFooter, \"EHVFZ8x+z7x1/4xs5fkdJEiuFR4=\");\n\n_c2 = SwapModalFooter;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SwapModalFooterContainer\");\n$RefreshReg$(_c2, \"SwapModalFooter\");","map":{"version":3,"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/views/Swap/components/SwapModalFooter.tsx"],"names":["React","useMemo","useState","styled","TradeType","Button","Text","AutoRenewIcon","Field","computeSlippageAdjustedAmounts","computeTradePriceBreakdown","formatExecutionPrice","warningSeverity","AutoColumn","QuestionHelper","AutoRow","RowBetween","RowFixed","FormattedPriceImpact","StyledBalanceMaxMini","SwapCallbackError","SwapModalFooterContainer","theme","radii","default","colors","cardBorder","background","SwapModalFooter","trade","onConfirm","allowedSlippage","swapErrorMessage","disabledConfirm","showInverted","setShowInverted","slippageAdjustedAmounts","priceImpactWithoutFee","realizedLPFee","severity","justifyContent","alignItems","display","textAlign","paddingLeft","tradeType","EXACT_INPUT","OUTPUT","toSignificant","INPUT","outputAmount","currency","symbol","inputAmount"],"mappings":"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","sourcesContent":["import React, { useMemo, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Trade, TradeType } from '@pancakeswap/sdk'\r\nimport { Button, Text, AutoRenewIcon } from '@pancakeswap/uikit'\r\nimport { Field } from 'state/swap/actions'\r\nimport {\r\n  computeSlippageAdjustedAmounts,\r\n  computeTradePriceBreakdown,\r\n  formatExecutionPrice,\r\n  warningSeverity,\r\n} from 'utils/prices'\r\nimport { AutoColumn } from 'components/Layout/Column'\r\nimport QuestionHelper from 'components/QuestionHelper'\r\nimport { AutoRow, RowBetween, RowFixed } from 'components/Layout/Row'\r\nimport FormattedPriceImpact from './FormattedPriceImpact'\r\nimport { StyledBalanceMaxMini, SwapCallbackError } from './styleds'\r\n\r\nconst SwapModalFooterContainer = styled(AutoColumn)`\r\n  margin-top: 24px;\r\n  padding: 16px;\r\n  border-radius: ${({ theme }) => theme.radii.default};\r\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\r\n  background-color: ${({ theme }) => theme.colors.background};\r\n`\r\n\r\nexport default function SwapModalFooter({\r\n  trade,\r\n  onConfirm,\r\n  allowedSlippage,\r\n  swapErrorMessage,\r\n  disabledConfirm,\r\n}: {\r\n  trade: Trade\r\n  allowedSlippage: number\r\n  onConfirm: () => void\r\n  swapErrorMessage: string | undefined\r\n  disabledConfirm: boolean\r\n}) {\r\n  const [showInverted, setShowInverted] = useState<boolean>(false)\r\n  const slippageAdjustedAmounts = useMemo(\r\n    () => computeSlippageAdjustedAmounts(trade, allowedSlippage),\r\n    [allowedSlippage, trade],\r\n  )\r\n  const { priceImpactWithoutFee, realizedLPFee } = useMemo(() => computeTradePriceBreakdown(trade), [trade])\r\n  const severity = warningSeverity(priceImpactWithoutFee)\r\n\r\n  return (\r\n    <>\r\n      <SwapModalFooterContainer>\r\n        <RowBetween align=\"center\">\r\n          <Text fontSize=\"14px\">Price</Text>\r\n          <Text\r\n            fontSize=\"14px\"\r\n            style={{\r\n              justifyContent: 'center',\r\n              alignItems: 'center',\r\n              display: 'flex',\r\n              textAlign: 'right',\r\n              paddingLeft: '10px',\r\n            }}\r\n          >\r\n            {formatExecutionPrice(trade, showInverted)}\r\n            <StyledBalanceMaxMini onClick={() => setShowInverted(!showInverted)}>\r\n              <AutoRenewIcon width=\"14px\" />\r\n            </StyledBalanceMaxMini>\r\n          </Text>\r\n        </RowBetween>\r\n\r\n        <RowBetween>\r\n          <RowFixed>\r\n            <Text fontSize=\"14px\">\r\n              {trade.tradeType === TradeType.EXACT_INPUT ? 'Minimum received' : 'Maximum sold'}\r\n            </Text>\r\n            <QuestionHelper\r\n              text=\"Your transaction will revert if there is a large, unfavorable price movement before it is confirmed.\"\r\n              ml=\"4px\"\r\n            />\r\n          </RowFixed>\r\n          <RowFixed>\r\n            <Text fontSize=\"14px\">\r\n              {trade.tradeType === TradeType.EXACT_INPUT\r\n                ? slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(4) ?? '-'\r\n                : slippageAdjustedAmounts[Field.INPUT]?.toSignificant(4) ?? '-'}\r\n            </Text>\r\n            <Text fontSize=\"14px\" marginLeft=\"4px\">\r\n              {trade.tradeType === TradeType.EXACT_INPUT\r\n                ? trade.outputAmount.currency.symbol\r\n                : trade.inputAmount.currency.symbol}\r\n            </Text>\r\n          </RowFixed>\r\n        </RowBetween>\r\n        <RowBetween>\r\n          <RowFixed>\r\n            <Text fontSize=\"14px\">Price Impact</Text>\r\n            <QuestionHelper text=\"The difference between the market price and your price due to trade size.\" ml=\"4px\" />\r\n          </RowFixed>\r\n          <FormattedPriceImpact priceImpact={priceImpactWithoutFee} />\r\n        </RowBetween>\r\n        <RowBetween>\r\n          <RowFixed>\r\n            <Text fontSize=\"14px\">Liquidity Provider Fee</Text>\r\n            <QuestionHelper\r\n              text={\r\n                <>\r\n                  <Text mb=\"12px\">For each trade a 0.25% fee is paid</Text>\r\n                  <Text>- 0.17% to LP token holders</Text>\r\n                  <Text>- 0.03% to the Treasury</Text>\r\n                  <Text>- 0.05% towards CAKE buyback and burn</Text>\r\n                </>\r\n              }\r\n              ml=\"4px\"\r\n            />\r\n          </RowFixed>\r\n          <Text fontSize=\"14px\">\r\n            {realizedLPFee ? `${realizedLPFee?.toSignificant(6)} ${trade.inputAmount.currency.symbol}` : '-'}\r\n          </Text>\r\n        </RowBetween>\r\n      </SwapModalFooterContainer>\r\n\r\n      <AutoRow>\r\n        <Button\r\n          variant={severity > 2 ? 'danger' : 'primary'}\r\n          onClick={onConfirm}\r\n          disabled={disabledConfirm}\r\n          mt=\"12px\"\r\n          id=\"confirm-swap-or-send\"\r\n          width=\"100%\"\r\n        >\r\n          {severity > 2 ? 'Swap Anyway' : 'Confirm Swap'}\r\n        </Button>\r\n\r\n        {swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\r\n      </AutoRow>\r\n    </>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}