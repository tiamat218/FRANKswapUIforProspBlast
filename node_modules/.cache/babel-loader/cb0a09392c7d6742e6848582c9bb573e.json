{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Devrim\\\\Documents\\\\FRANKswapUIforProspBlast\\\\src\\\\views\\\\Pools\\\\components\\\\CakeVaultCard\\\\FeeSummary.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Text, Flex, useTooltip, TooltipText } from '@pancakeswap/uikit';\nimport { useTranslation } from 'contexts/Localization';\nimport { useCakeVault } from 'state/pools/hooks';\nimport UnstakingFeeCountdownRow from './UnstakingFeeCountdownRow';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst FeeSummary = ({\n  stakingTokenSymbol,\n  stakeAmount\n}) => {\n  _s();\n  const {\n    t\n  } = useTranslation();\n  const {\n    fees: {\n      withdrawalFee\n    }\n  } = useCakeVault();\n  const feeAsDecimal = withdrawalFee / 100;\n  const feeInCake = (parseFloat(stakeAmount) * (feeAsDecimal / 100)).toFixed(4);\n  const {\n    targetRef,\n    tooltip,\n    tooltipVisible\n  } = useTooltip( /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Text, {\n      bold: true,\n      mb: \"4px\",\n      children: t('Unstaking fee: %fee%%', {\n        fee: feeAsDecimal\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Text, {\n      children: t('Only applies within 3 days of staking. Unstaking after 3 days will not include a fee. Timer resets every time you stake new CAKE in the pool.')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true), {\n    placement: 'top-start'\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Flex, {\n      mt: \"24px\",\n      alignItems: \"center\",\n      justifyContent: \"space-between\",\n      children: [tooltipVisible && tooltip, /*#__PURE__*/_jsxDEV(TooltipText, {\n        ref: targetRef,\n        small: true,\n        children: t('Unstaking Fee')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        fontSize: \"14px\",\n        children: [stakeAmount ? feeInCake : '-', \" \", stakingTokenSymbol]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UnstakingFeeCountdownRow, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(FeeSummary, \"qEwjUWAhAvIekiWTolM7CN3wiEY=\", false, function () {\n  return [useTranslation, useCakeVault, useTooltip];\n});\n_c = FeeSummary;\nexport default FeeSummary;\nvar _c;\n$RefreshReg$(_c, \"FeeSummary\");","map":{"version":3,"names":["React","Text","Flex","useTooltip","TooltipText","useTranslation","useCakeVault","UnstakingFeeCountdownRow","jsxDEV","_jsxDEV","Fragment","_Fragment","FeeSummary","stakingTokenSymbol","stakeAmount","_s","t","fees","withdrawalFee","feeAsDecimal","feeInCake","parseFloat","toFixed","targetRef","tooltip","tooltipVisible","children","bold","mb","fee","fileName","_jsxFileName","lineNumber","columnNumber","placement","mt","alignItems","justifyContent","ref","small","fontSize","_c","$RefreshReg$"],"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/views/Pools/components/CakeVaultCard/FeeSummary.tsx"],"sourcesContent":["import React from 'react'\r\nimport { Text, Flex, useTooltip, TooltipText } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useCakeVault } from 'state/pools/hooks'\r\nimport UnstakingFeeCountdownRow from './UnstakingFeeCountdownRow'\r\n\r\ninterface FeeSummaryProps {\r\n  stakingTokenSymbol: string\r\n  stakeAmount: string\r\n}\r\n\r\nconst FeeSummary: React.FC<FeeSummaryProps> = ({ stakingTokenSymbol, stakeAmount }) => {\r\n  const { t } = useTranslation()\r\n  const {\r\n    fees: { withdrawalFee },\r\n  } = useCakeVault()\r\n  const feeAsDecimal = withdrawalFee / 100\r\n  const feeInCake = (parseFloat(stakeAmount) * (feeAsDecimal / 100)).toFixed(4)\r\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\r\n    <>\r\n      <Text bold mb=\"4px\">\r\n        {t('Unstaking fee: %fee%%', { fee: feeAsDecimal })}\r\n      </Text>\r\n      <Text>\r\n        {t(\r\n          'Only applies within 3 days of staking. Unstaking after 3 days will not include a fee. Timer resets every time you stake new CAKE in the pool.',\r\n        )}\r\n      </Text>\r\n    </>,\r\n    { placement: 'top-start' },\r\n  )\r\n\r\n  return (\r\n    <>\r\n      <Flex mt=\"24px\" alignItems=\"center\" justifyContent=\"space-between\">\r\n        {tooltipVisible && tooltip}\r\n        <TooltipText ref={targetRef} small>\r\n          {t('Unstaking Fee')}\r\n        </TooltipText>\r\n        <Text fontSize=\"14px\">\r\n          {stakeAmount ? feeInCake : '-'} {stakingTokenSymbol}\r\n        </Text>\r\n      </Flex>\r\n      <UnstakingFeeCountdownRow />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default FeeSummary\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,EAAEC,IAAI,EAAEC,UAAU,EAAEC,WAAW,QAAQ,oBAAoB;AACxE,SAASC,cAAc,QAAQ,uBAAuB;AACtD,SAASC,YAAY,QAAQ,mBAAmB;AAChD,OAAOC,wBAAwB,MAAM,4BAA4B;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAOjE,MAAMC,UAAqC,GAAGA,CAAC;EAAEC,kBAAkB;EAAEC;AAAY,CAAC,KAAK;EAAAC,EAAA;EACrF,MAAM;IAAEC;EAAE,CAAC,GAAGX,cAAc,CAAC,CAAC;EAC9B,MAAM;IACJY,IAAI,EAAE;MAAEC;IAAc;EACxB,CAAC,GAAGZ,YAAY,CAAC,CAAC;EAClB,MAAMa,YAAY,GAAGD,aAAa,GAAG,GAAG;EACxC,MAAME,SAAS,GAAG,CAACC,UAAU,CAACP,WAAW,CAAC,IAAIK,YAAY,GAAG,GAAG,CAAC,EAAEG,OAAO,CAAC,CAAC,CAAC;EAC7E,MAAM;IAAEC,SAAS;IAAEC,OAAO;IAAEC;EAAe,CAAC,GAAGtB,UAAU,eACvDM,OAAA,CAAAE,SAAA;IAAAe,QAAA,gBACEjB,OAAA,CAACR,IAAI;MAAC0B,IAAI;MAACC,EAAE,EAAC,KAAK;MAAAF,QAAA,EAChBV,CAAC,CAAC,uBAAuB,EAAE;QAAEa,GAAG,EAAEV;MAAa,CAAC;IAAC;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CAAC,eACPxB,OAAA,CAACR,IAAI;MAAAyB,QAAA,EACFV,CAAC,CACA,+IACF;IAAC;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC;EAAA,eACP,CAAC,EACH;IAAEC,SAAS,EAAE;EAAY,CAC3B,CAAC;EAED,oBACEzB,OAAA,CAAAE,SAAA;IAAAe,QAAA,gBACEjB,OAAA,CAACP,IAAI;MAACiC,EAAE,EAAC,MAAM;MAACC,UAAU,EAAC,QAAQ;MAACC,cAAc,EAAC,eAAe;MAAAX,QAAA,GAC/DD,cAAc,IAAID,OAAO,eAC1Bf,OAAA,CAACL,WAAW;QAACkC,GAAG,EAAEf,SAAU;QAACgB,KAAK;QAAAb,QAAA,EAC/BV,CAAC,CAAC,eAAe;MAAC;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CAAC,eACdxB,OAAA,CAACR,IAAI;QAACuC,QAAQ,EAAC,MAAM;QAAAd,QAAA,GAClBZ,WAAW,GAAGM,SAAS,GAAG,GAAG,EAAC,GAAC,EAACP,kBAAkB;MAAA;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACPxB,OAAA,CAACF,wBAAwB;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eAC5B,CAAC;AAEP,CAAC;AAAAlB,EAAA,CAnCKH,UAAqC;EAAA,QAC3BP,cAAc,EAGxBC,YAAY,EAG+BH,UAAU;AAAA;AAAAsC,EAAA,GAPrD7B,UAAqC;AAqC3C,eAAeA,UAAU;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}