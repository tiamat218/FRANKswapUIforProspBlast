{"ast":null,"code":"import{useCallback}from'react';import{useWeb3React}from'@web3-react/core';import{useAppDispatch}from'state';import{updateUserBalance,updateUserPendingReward}from'state/actions';import{harvestFarm}from'utils/calls';import{BIG_ZERO}from'utils/bigNumber';import{useMasterchef,useSousChef}from'hooks/useContract';import{DEFAULT_GAS_LIMIT}from'config';const options={gasLimit:DEFAULT_GAS_LIMIT};const harvestPool=async sousChefContract=>{const tx=await sousChefContract.deposit('0',options);const receipt=await tx.wait();return receipt.status;};const harvestPoolBnb=async sousChefContract=>{const tx=await sousChefContract.deposit({...options,value:BIG_ZERO});const receipt=await tx.wait();return receipt.status;};const useHarvestPool=function(sousId){let isUsingBnb=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;const dispatch=useAppDispatch();const{account}=useWeb3React();const sousChefContract=useSousChef(sousId);const masterChefContract=useMasterchef();const handleHarvest=useCallback(async()=>{if(sousId===0){await harvestFarm(masterChefContract,0);}else if(isUsingBnb){await harvestPoolBnb(sousChefContract);}else{await harvestPool(sousChefContract);}dispatch(updateUserPendingReward(sousId,account));dispatch(updateUserBalance(sousId,account));},[account,dispatch,isUsingBnb,masterChefContract,sousChefContract,sousId]);return{onReward:handleHarvest};};export default useHarvestPool;","map":{"version":3,"names":["useCallback","useWeb3React","useAppDispatch","updateUserBalance","updateUserPendingReward","harvestFarm","BIG_ZERO","useMasterchef","useSousChef","DEFAULT_GAS_LIMIT","options","gasLimit","harvestPool","sousChefContract","tx","deposit","receipt","wait","status","harvestPoolBnb","value","useHarvestPool","sousId","isUsingBnb","arguments","length","undefined","dispatch","account","masterChefContract","handleHarvest","onReward"],"sources":["C:/Users/frkul/Documents/swapUI_pancake-frontend/src/views/Pools/hooks/useHarvestPool.ts"],"sourcesContent":["import { useCallback } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useAppDispatch } from 'state'\r\nimport { updateUserBalance, updateUserPendingReward } from 'state/actions'\r\nimport { harvestFarm } from 'utils/calls'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\nimport { useMasterchef, useSousChef } from 'hooks/useContract'\r\nimport { DEFAULT_GAS_LIMIT } from 'config'\r\n\r\nconst options = {\r\n  gasLimit: DEFAULT_GAS_LIMIT,\r\n}\r\n\r\nconst harvestPool = async (sousChefContract) => {\r\n  const tx = await sousChefContract.deposit('0', options)\r\n  const receipt = await tx.wait()\r\n  return receipt.status\r\n}\r\n\r\nconst harvestPoolBnb = async (sousChefContract) => {\r\n  const tx = await sousChefContract.deposit({ ...options, value: BIG_ZERO })\r\n  const receipt = await tx.wait()\r\n  return receipt.status\r\n}\r\n\r\nconst useHarvestPool = (sousId, isUsingBnb = false) => {\r\n  const dispatch = useAppDispatch()\r\n  const { account } = useWeb3React()\r\n  const sousChefContract = useSousChef(sousId)\r\n  const masterChefContract = useMasterchef()\r\n\r\n  const handleHarvest = useCallback(async () => {\r\n    if (sousId === 0) {\r\n      await harvestFarm(masterChefContract, 0)\r\n    } else if (isUsingBnb) {\r\n      await harvestPoolBnb(sousChefContract)\r\n    } else {\r\n      await harvestPool(sousChefContract)\r\n    }\r\n    dispatch(updateUserPendingReward(sousId, account))\r\n    dispatch(updateUserBalance(sousId, account))\r\n  }, [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId])\r\n\r\n  return { onReward: handleHarvest }\r\n}\r\n\r\nexport default useHarvestPool\r\n"],"mappings":"AAAA,OAASA,WAAW,KAAQ,OAAO,CACnC,OAASC,YAAY,KAAQ,kBAAkB,CAC/C,OAASC,cAAc,KAAQ,OAAO,CACtC,OAASC,iBAAiB,CAAEC,uBAAuB,KAAQ,eAAe,CAC1E,OAASC,WAAW,KAAQ,aAAa,CACzC,OAASC,QAAQ,KAAQ,iBAAiB,CAC1C,OAASC,aAAa,CAAEC,WAAW,KAAQ,mBAAmB,CAC9D,OAASC,iBAAiB,KAAQ,QAAQ,CAE1C,KAAM,CAAAC,OAAO,CAAG,CACdC,QAAQ,CAAEF,iBACZ,CAAC,CAED,KAAM,CAAAG,WAAW,CAAG,KAAO,CAAAC,gBAAgB,EAAK,CAC9C,KAAM,CAAAC,EAAE,CAAG,KAAM,CAAAD,gBAAgB,CAACE,OAAO,CAAC,GAAG,CAAEL,OAAO,CAAC,CACvD,KAAM,CAAAM,OAAO,CAAG,KAAM,CAAAF,EAAE,CAACG,IAAI,CAAC,CAAC,CAC/B,MAAO,CAAAD,OAAO,CAACE,MAAM,CACvB,CAAC,CAED,KAAM,CAAAC,cAAc,CAAG,KAAO,CAAAN,gBAAgB,EAAK,CACjD,KAAM,CAAAC,EAAE,CAAG,KAAM,CAAAD,gBAAgB,CAACE,OAAO,CAAC,CAAE,GAAGL,OAAO,CAAEU,KAAK,CAAEd,QAAS,CAAC,CAAC,CAC1E,KAAM,CAAAU,OAAO,CAAG,KAAM,CAAAF,EAAE,CAACG,IAAI,CAAC,CAAC,CAC/B,MAAO,CAAAD,OAAO,CAACE,MAAM,CACvB,CAAC,CAED,KAAM,CAAAG,cAAc,CAAG,QAAAA,CAACC,MAAM,CAAyB,IAAvB,CAAAC,UAAU,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,KAAK,CAChD,KAAM,CAAAG,QAAQ,CAAGzB,cAAc,CAAC,CAAC,CACjC,KAAM,CAAE0B,OAAQ,CAAC,CAAG3B,YAAY,CAAC,CAAC,CAClC,KAAM,CAAAY,gBAAgB,CAAGL,WAAW,CAACc,MAAM,CAAC,CAC5C,KAAM,CAAAO,kBAAkB,CAAGtB,aAAa,CAAC,CAAC,CAE1C,KAAM,CAAAuB,aAAa,CAAG9B,WAAW,CAAC,SAAY,CAC5C,GAAIsB,MAAM,GAAK,CAAC,CAAE,CAChB,KAAM,CAAAjB,WAAW,CAACwB,kBAAkB,CAAE,CAAC,CAAC,CAC1C,CAAC,IAAM,IAAIN,UAAU,CAAE,CACrB,KAAM,CAAAJ,cAAc,CAACN,gBAAgB,CAAC,CACxC,CAAC,IAAM,CACL,KAAM,CAAAD,WAAW,CAACC,gBAAgB,CAAC,CACrC,CACAc,QAAQ,CAACvB,uBAAuB,CAACkB,MAAM,CAAEM,OAAO,CAAC,CAAC,CAClDD,QAAQ,CAACxB,iBAAiB,CAACmB,MAAM,CAAEM,OAAO,CAAC,CAAC,CAC9C,CAAC,CAAE,CAACA,OAAO,CAAED,QAAQ,CAAEJ,UAAU,CAAEM,kBAAkB,CAAEhB,gBAAgB,CAAES,MAAM,CAAC,CAAC,CAEjF,MAAO,CAAES,QAAQ,CAAED,aAAc,CAAC,CACpC,CAAC,CAED,cAAe,CAAAT,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module"}