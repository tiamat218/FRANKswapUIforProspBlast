{"ast":null,"code":"import React,{useState}from'react';import{Button,Skeleton,Text}from'@pancakeswap/uikit';import{useWeb3React}from'@web3-react/core';import{useAppDispatch}from'state';import{useGetCollectibles}from'state/hooks';import{useProfile}from'state/profile/hooks';import{useTranslation}from'contexts/Localization';import useToast from'hooks/useToast';import{fetchProfile}from'state/profile';import{getAddressByType}from'utils/collectibles';import useApproveConfirmTransaction from'hooks/useApproveConfirmTransaction';import{getErc721Contract}from'utils/contractHelpers';import{useProfile as useProfileContract}from'hooks/useContract';import{getPancakeProfileAddress}from'utils/addressHelpers';import SelectionCard from'../SelectionCard';import ApproveConfirmButtons from'../ApproveConfirmButtons';import{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";const ChangeProfilePicPage=_ref=>{let{onDismiss}=_ref;const[selectedNft,setSelectedNft]=useState({tokenId:null,nftAddress:null});const{t}=useTranslation();const{isLoading,tokenIds,nftsInWallet}=useGetCollectibles();const dispatch=useAppDispatch();const{profile}=useProfile();const profileContract=useProfileContract();const{account,library}=useWeb3React();const{toastSuccess}=useToast();const{isApproving,isApproved,isConfirmed,isConfirming,handleApprove,handleConfirm}=useApproveConfirmTransaction({onApprove:()=>{const contract=getErc721Contract(selectedNft.nftAddress,library.getSigner());return contract.approve(getPancakeProfileAddress(),selectedNft.tokenId);},onConfirm:()=>{if(!profile.isActive){return profileContract.reactivateProfile(selectedNft.nftAddress,selectedNft.tokenId);}return profileContract.updateProfile(selectedNft.nftAddress,selectedNft.tokenId);},onSuccess:async()=>{// Re-fetch profile\nawait dispatch(fetchProfile(account));toastSuccess(t('Profile Updated!'));onDismiss();}});return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Text,{as:\"p\",color:\"textSubtle\",mb:\"24px\",children:t('Choose a new Collectible to use as your profile pic.')}),isLoading?/*#__PURE__*/_jsx(Skeleton,{height:\"80px\",mb:\"16px\"}):nftsInWallet.map(walletNft=>{const[firstTokenId]=tokenIds[walletNft.identifier];const handleChange=value=>{setSelectedNft({tokenId:Number(value),nftAddress:getAddressByType(walletNft.type)});};return/*#__PURE__*/_jsx(SelectionCard,{name:\"profilePicture\",value:firstTokenId,image:\"/images/nfts/\".concat(walletNft.images.md),isChecked:firstTokenId===selectedNft.tokenId,onChange:handleChange,disabled:isApproving||isConfirming||isConfirmed,children:/*#__PURE__*/_jsx(Text,{bold:true,children:walletNft.name})},walletNft.identifier);}),!isLoading&&nftsInWallet.length===0&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Text,{as:\"p\",color:\"textSubtle\",mb:\"16px\",children:t('Sorry! You don’t have any eligible Collectibles in your wallet to use!')}),/*#__PURE__*/_jsx(Text,{as:\"p\",color:\"textSubtle\",mb:\"24px\",children:t('Make sure you have a Pancake Collectible in your wallet and try again!')})]}),/*#__PURE__*/_jsx(ApproveConfirmButtons,{isApproveDisabled:isConfirmed||isConfirming||isApproved||selectedNft.tokenId===null,isApproving:isApproving,isConfirmDisabled:!isApproved||isConfirmed||selectedNft.tokenId===null,isConfirming:isConfirming,onApprove:handleApprove,onConfirm:handleConfirm}),/*#__PURE__*/_jsx(Button,{variant:\"text\",width:\"100%\",onClick:onDismiss,disabled:isApproving||isConfirming,children:t('Close Window')})]});};export default ChangeProfilePicPage;","map":{"version":3,"names":["React","useState","Button","Skeleton","Text","useWeb3React","useAppDispatch","useGetCollectibles","useProfile","useTranslation","useToast","fetchProfile","getAddressByType","useApproveConfirmTransaction","getErc721Contract","useProfileContract","getPancakeProfileAddress","SelectionCard","ApproveConfirmButtons","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","ChangeProfilePicPage","_ref","onDismiss","selectedNft","setSelectedNft","tokenId","nftAddress","t","isLoading","tokenIds","nftsInWallet","dispatch","profile","profileContract","account","library","toastSuccess","isApproving","isApproved","isConfirmed","isConfirming","handleApprove","handleConfirm","onApprove","contract","getSigner","approve","onConfirm","isActive","reactivateProfile","updateProfile","onSuccess","children","as","color","mb","height","map","walletNft","firstTokenId","identifier","handleChange","value","Number","type","name","image","concat","images","md","isChecked","onChange","disabled","bold","length","isApproveDisabled","isConfirmDisabled","variant","width","onClick"],"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/views/Profile/components/EditProfileModal/ChangeProfilePicView.tsx"],"sourcesContent":["import React, { useState } from 'react'\r\nimport { Button, InjectedModalProps, Skeleton, Text } from '@pancakeswap/uikit'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useAppDispatch } from 'state'\r\nimport { useGetCollectibles } from 'state/hooks'\r\nimport { useProfile } from 'state/profile/hooks'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useToast from 'hooks/useToast'\r\nimport { fetchProfile } from 'state/profile'\r\nimport { getAddressByType } from 'utils/collectibles'\r\nimport useApproveConfirmTransaction from 'hooks/useApproveConfirmTransaction'\r\nimport { getErc721Contract } from 'utils/contractHelpers'\r\nimport { useProfile as useProfileContract } from 'hooks/useContract'\r\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\r\nimport SelectionCard from '../SelectionCard'\r\nimport ApproveConfirmButtons from '../ApproveConfirmButtons'\r\n\r\ntype ChangeProfilePicPageProps = InjectedModalProps\r\n\r\nconst ChangeProfilePicPage: React.FC<ChangeProfilePicPageProps> = ({ onDismiss }) => {\r\n  const [selectedNft, setSelectedNft] = useState({\r\n    tokenId: null,\r\n    nftAddress: null,\r\n  })\r\n  const { t } = useTranslation()\r\n  const { isLoading, tokenIds, nftsInWallet } = useGetCollectibles()\r\n  const dispatch = useAppDispatch()\r\n  const { profile } = useProfile()\r\n  const profileContract = useProfileContract()\r\n  const { account, library } = useWeb3React()\r\n  const { toastSuccess } = useToast()\r\n  const { isApproving, isApproved, isConfirmed, isConfirming, handleApprove, handleConfirm } =\r\n    useApproveConfirmTransaction({\r\n      onApprove: () => {\r\n        const contract = getErc721Contract(selectedNft.nftAddress, library.getSigner())\r\n        return contract.approve(getPancakeProfileAddress(), selectedNft.tokenId)\r\n      },\r\n      onConfirm: () => {\r\n        if (!profile.isActive) {\r\n          return profileContract.reactivateProfile(selectedNft.nftAddress, selectedNft.tokenId)\r\n        }\r\n\r\n        return profileContract.updateProfile(selectedNft.nftAddress, selectedNft.tokenId)\r\n      },\r\n      onSuccess: async () => {\r\n        // Re-fetch profile\r\n        await dispatch(fetchProfile(account))\r\n        toastSuccess(t('Profile Updated!'))\r\n\r\n        onDismiss()\r\n      },\r\n    })\r\n\r\n  return (\r\n    <>\r\n      <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\r\n        {t('Choose a new Collectible to use as your profile pic.')}\r\n      </Text>\r\n      {isLoading ? (\r\n        <Skeleton height=\"80px\" mb=\"16px\" />\r\n      ) : (\r\n        nftsInWallet.map((walletNft) => {\r\n          const [firstTokenId] = tokenIds[walletNft.identifier]\r\n          const handleChange = (value: string) => {\r\n            setSelectedNft({\r\n              tokenId: Number(value),\r\n              nftAddress: getAddressByType(walletNft.type),\r\n            })\r\n          }\r\n\r\n          return (\r\n            <SelectionCard\r\n              name=\"profilePicture\"\r\n              key={walletNft.identifier}\r\n              value={firstTokenId}\r\n              image={`/images/nfts/${walletNft.images.md}`}\r\n              isChecked={firstTokenId === selectedNft.tokenId}\r\n              onChange={handleChange}\r\n              disabled={isApproving || isConfirming || isConfirmed}\r\n            >\r\n              <Text bold>{walletNft.name}</Text>\r\n            </SelectionCard>\r\n          )\r\n        })\r\n      )}\r\n      {!isLoading && nftsInWallet.length === 0 && (\r\n        <>\r\n          <Text as=\"p\" color=\"textSubtle\" mb=\"16px\">\r\n            {t('Sorry! You don’t have any eligible Collectibles in your wallet to use!')}\r\n          </Text>\r\n          <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\r\n            {t('Make sure you have a Pancake Collectible in your wallet and try again!')}\r\n          </Text>\r\n        </>\r\n      )}\r\n      <ApproveConfirmButtons\r\n        isApproveDisabled={isConfirmed || isConfirming || isApproved || selectedNft.tokenId === null}\r\n        isApproving={isApproving}\r\n        isConfirmDisabled={!isApproved || isConfirmed || selectedNft.tokenId === null}\r\n        isConfirming={isConfirming}\r\n        onApprove={handleApprove}\r\n        onConfirm={handleConfirm}\r\n      />\r\n      <Button variant=\"text\" width=\"100%\" onClick={onDismiss} disabled={isApproving || isConfirming}>\r\n        {t('Close Window')}\r\n      </Button>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ChangeProfilePicPage\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}