{"ast":null,"code":"import _taggedTemplateLiteral from\"C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject;import React from'react';import styled from'styled-components';import{useWeb3React}from'@web3-react/core';import{Box,BlockIcon,CardBody}from'@pancakeswap/uikit';import{useTranslation}from'contexts/Localization';import{BetPosition}from'state/types';import{useGetBetByEpoch}from'state/hooks';import{useBlock}from'state/block/hooks';import{formatBigNumberToFixed}from'utils/formatBalance';import{getHasRoundFailed,getNetPayoutv2}from'../../helpers';import{RoundResult}from'../RoundResult';import MultiplierArrow from'./MultiplierArrow';import Card from'./Card';import CardHeader from'./CardHeader';import CollectWinningsOverlay from'./CollectWinningsOverlay';import CanceledRoundCard from'./CanceledRoundCard';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const StyledExpiredRoundCard=styled(Card)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  opacity: 0.7;\\n  transition: opacity 300ms;\\n\\n  &:hover {\\n    opacity: 1;\\n  }\\n\"])));const ExpiredRoundCard=_ref=>{let{round,betAmount,hasEnteredUp,hasEnteredDown,hasClaimedUp,hasClaimedDown,bullMultiplier,bearMultiplier}=_ref;const{t}=useTranslation();const{account}=useWeb3React();const{initialBlock}=useBlock();const{epoch,endBlock,lockPrice,closePrice}=round;const betPosition=closePrice>lockPrice?BetPosition.BULL:BetPosition.BEAR;const ledger=useGetBetByEpoch(account,epoch);const payout=getNetPayoutv2(ledger,round);const formattedPayout=payout.toUnsafeFloat().toFixed(4);const hasRoundFailed=getHasRoundFailed(round,initialBlock);if(hasRoundFailed){return/*#__PURE__*/_jsx(CanceledRoundCard,{round:round});}return/*#__PURE__*/_jsxs(Box,{position:\"relative\",children:[/*#__PURE__*/_jsxs(StyledExpiredRoundCard,{children:[/*#__PURE__*/_jsx(CardHeader,{status:\"expired\",icon:/*#__PURE__*/_jsx(BlockIcon,{mr:\"4px\",width:\"21px\",color:\"textDisabled\"}),title:t('Expired'),blockNumber:endBlock,epoch:round.epoch}),/*#__PURE__*/_jsxs(CardBody,{p:\"16px\",style:{position:'relative'},children:[/*#__PURE__*/_jsx(MultiplierArrow,{betAmount:betAmount,multiplier:bullMultiplier,isActive:betPosition===BetPosition.BULL,hasEntered:hasEnteredUp,hasClaimed:hasClaimedUp}),/*#__PURE__*/_jsx(RoundResult,{round:round,hasFailed:hasRoundFailed}),/*#__PURE__*/_jsx(MultiplierArrow,{betAmount:betAmount,multiplier:bearMultiplier,betPosition:BetPosition.BEAR,isActive:betPosition===BetPosition.BEAR,hasEntered:hasEnteredDown,hasClaimed:hasClaimedDown})]})]}),/*#__PURE__*/_jsx(CollectWinningsOverlay,{epoch:epoch,payout:formattedPayout,betAmount:betAmount?formatBigNumberToFixed(betAmount,4):'0',isBottom:hasEnteredDown})]});};export default ExpiredRoundCard;","map":{"version":3,"names":["React","styled","useWeb3React","Box","BlockIcon","CardBody","useTranslation","BetPosition","useGetBetByEpoch","useBlock","formatBigNumberToFixed","getHasRoundFailed","getNetPayoutv2","RoundResult","MultiplierArrow","Card","CardHeader","CollectWinningsOverlay","CanceledRoundCard","jsx","_jsx","jsxs","_jsxs","StyledExpiredRoundCard","_templateObject","_taggedTemplateLiteral","ExpiredRoundCard","_ref","round","betAmount","hasEnteredUp","hasEnteredDown","hasClaimedUp","hasClaimedDown","bullMultiplier","bearMultiplier","t","account","initialBlock","epoch","endBlock","lockPrice","closePrice","betPosition","BULL","BEAR","ledger","payout","formattedPayout","toUnsafeFloat","toFixed","hasRoundFailed","position","children","status","icon","mr","width","color","title","blockNumber","p","style","multiplier","isActive","hasEntered","hasClaimed","hasFailed","isBottom"],"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/views/Predictions/components/RoundCard/ExpiredRoundCard.tsx"],"sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { Box, BlockIcon, CardBody } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { NodeRound, BetPosition, NodeLedger } from 'state/types'\r\nimport { useGetBetByEpoch } from 'state/hooks'\r\nimport { useBlock } from 'state/block/hooks'\r\nimport { formatBigNumberToFixed } from 'utils/formatBalance'\r\nimport { getHasRoundFailed, getNetPayoutv2 } from '../../helpers'\r\nimport { RoundResult } from '../RoundResult'\r\nimport MultiplierArrow from './MultiplierArrow'\r\nimport Card from './Card'\r\nimport CardHeader from './CardHeader'\r\nimport CollectWinningsOverlay from './CollectWinningsOverlay'\r\nimport CanceledRoundCard from './CanceledRoundCard'\r\n\r\ninterface ExpiredRoundCardProps {\r\n  round: NodeRound\r\n  betAmount?: NodeLedger['amount']\r\n  hasEnteredUp: boolean\r\n  hasEnteredDown: boolean\r\n  hasClaimedUp: boolean\r\n  hasClaimedDown: boolean\r\n  bullMultiplier: string\r\n  bearMultiplier: string\r\n}\r\n\r\nconst StyledExpiredRoundCard = styled(Card)`\r\n  opacity: 0.7;\r\n  transition: opacity 300ms;\r\n\r\n  &:hover {\r\n    opacity: 1;\r\n  }\r\n`\r\n\r\nconst ExpiredRoundCard: React.FC<ExpiredRoundCardProps> = ({\r\n  round,\r\n  betAmount,\r\n  hasEnteredUp,\r\n  hasEnteredDown,\r\n  hasClaimedUp,\r\n  hasClaimedDown,\r\n  bullMultiplier,\r\n  bearMultiplier,\r\n}) => {\r\n  const { t } = useTranslation()\r\n  const { account } = useWeb3React()\r\n  const { initialBlock } = useBlock()\r\n  const { epoch, endBlock, lockPrice, closePrice } = round\r\n\r\n  const betPosition = closePrice > lockPrice ? BetPosition.BULL : BetPosition.BEAR\r\n  const ledger = useGetBetByEpoch(account, epoch)\r\n  const payout = getNetPayoutv2(ledger, round)\r\n  const formattedPayout = payout.toUnsafeFloat().toFixed(4)\r\n  const hasRoundFailed = getHasRoundFailed(round, initialBlock)\r\n\r\n  if (hasRoundFailed) {\r\n    return <CanceledRoundCard round={round} />\r\n  }\r\n\r\n  return (\r\n    <Box position=\"relative\">\r\n      <StyledExpiredRoundCard>\r\n        <CardHeader\r\n          status=\"expired\"\r\n          icon={<BlockIcon mr=\"4px\" width=\"21px\" color=\"textDisabled\" />}\r\n          title={t('Expired')}\r\n          blockNumber={endBlock}\r\n          epoch={round.epoch}\r\n        />\r\n        <CardBody p=\"16px\" style={{ position: 'relative' }}>\r\n          <MultiplierArrow\r\n            betAmount={betAmount}\r\n            multiplier={bullMultiplier}\r\n            isActive={betPosition === BetPosition.BULL}\r\n            hasEntered={hasEnteredUp}\r\n            hasClaimed={hasClaimedUp}\r\n          />\r\n          <RoundResult round={round} hasFailed={hasRoundFailed} />\r\n          <MultiplierArrow\r\n            betAmount={betAmount}\r\n            multiplier={bearMultiplier}\r\n            betPosition={BetPosition.BEAR}\r\n            isActive={betPosition === BetPosition.BEAR}\r\n            hasEntered={hasEnteredDown}\r\n            hasClaimed={hasClaimedDown}\r\n          />\r\n        </CardBody>\r\n      </StyledExpiredRoundCard>\r\n      <CollectWinningsOverlay\r\n        epoch={epoch}\r\n        payout={formattedPayout}\r\n        betAmount={betAmount ? formatBigNumberToFixed(betAmount, 4) : '0'}\r\n        isBottom={hasEnteredDown}\r\n      />\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default ExpiredRoundCard\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}