{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Devrim\\\\Documents\\\\FRANKswapUIforProspBlast\\\\src\\\\views\\\\Swap\\\\components\\\\SwapWarningModal\\\\Acknowledgement.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useTranslation } from 'contexts/Localization';\nimport { Text, Flex, Checkbox, Button } from '@pancakeswap/uikit';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Acknowledgement = ({\n  handleContinueClick\n}) => {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  const [isConfirmed, setIsConfirmed] = useState(false);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Flex, {\n      justifyContent: \"space-between\",\n      children: [/*#__PURE__*/_jsxDEV(Flex, {\n        alignItems: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n          name: \"confirmed\",\n          type: \"checkbox\",\n          checked: isConfirmed,\n          onChange: () => setIsConfirmed(!isConfirmed),\n          scale: \"sm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          ml: \"10px\",\n          style: {\n            userSelect: 'none'\n          },\n          children: t('I understand')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        disabled: !isConfirmed,\n        onClick: handleContinueClick,\n        children: t('Continue')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Acknowledgement, \"uB4ZTMaDXsP/PWTu3O+xN6h8B6w=\", false, function () {\n  return [useTranslation];\n});\n\n_c = Acknowledgement;\nexport default Acknowledgement;\n\nvar _c;\n\n$RefreshReg$(_c, \"Acknowledgement\");","map":{"version":3,"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/views/Swap/components/SwapWarningModal/Acknowledgement.tsx"],"names":["React","useState","useTranslation","Text","Flex","Checkbox","Button","Acknowledgement","handleContinueClick","t","isConfirmed","setIsConfirmed","userSelect"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,cAAT,QAA+B,uBAA/B;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,QAArB,EAA+BC,MAA/B,QAA6C,oBAA7C;;;;AAMA,MAAMC,eAA+C,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAA6B;AAAA;;AACnF,QAAM;AAAEC,IAAAA;AAAF,MAAQP,cAAc,EAA5B;AACA,QAAM,CAACQ,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAAC,KAAD,CAA9C;AAEA,sBACE;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,cAAc,EAAC,eAArB;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,UAAU,EAAC,QAAjB;AAAA,gCACE,QAAC,QAAD;AACE,UAAA,IAAI,EAAC,WADP;AAEE,UAAA,IAAI,EAAC,UAFP;AAGE,UAAA,OAAO,EAAES,WAHX;AAIE,UAAA,QAAQ,EAAE,MAAMC,cAAc,CAAC,CAACD,WAAF,CAJhC;AAKE,UAAA,KAAK,EAAC;AALR;AAAA;AAAA;AAAA;AAAA,gBADF,eAQE,QAAC,IAAD;AAAM,UAAA,EAAE,EAAC,MAAT;AAAgB,UAAA,KAAK,EAAE;AAAEE,YAAAA,UAAU,EAAE;AAAd,WAAvB;AAAA,oBACGH,CAAC,CAAC,cAAD;AADJ;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAcE,QAAC,MAAD;AAAQ,QAAA,QAAQ,EAAE,CAACC,WAAnB;AAAgC,QAAA,OAAO,EAAEF,mBAAzC;AAAA,kBACGC,CAAC,CAAC,UAAD;AADJ;AAAA;AAAA;AAAA;AAAA,cAdF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAsBD,CA1BD;;GAAMF,e;UACUL,c;;;KADVK,e;AA4BN,eAAeA,eAAf","sourcesContent":["import React, { useState } from 'react'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { Text, Flex, Checkbox, Button } from '@pancakeswap/uikit'\r\n\r\ninterface AcknowledgementProps {\r\n  handleContinueClick: () => void\r\n}\r\n\r\nconst Acknowledgement: React.FC<AcknowledgementProps> = ({ handleContinueClick }) => {\r\n  const { t } = useTranslation()\r\n  const [isConfirmed, setIsConfirmed] = useState(false)\r\n\r\n  return (\r\n    <>\r\n      <Flex justifyContent=\"space-between\">\r\n        <Flex alignItems=\"center\">\r\n          <Checkbox\r\n            name=\"confirmed\"\r\n            type=\"checkbox\"\r\n            checked={isConfirmed}\r\n            onChange={() => setIsConfirmed(!isConfirmed)}\r\n            scale=\"sm\"\r\n          />\r\n          <Text ml=\"10px\" style={{ userSelect: 'none' }}>\r\n            {t('I understand')}\r\n          </Text>\r\n        </Flex>\r\n\r\n        <Button disabled={!isConfirmed} onClick={handleContinueClick}>\r\n          {t('Continue')}\r\n        </Button>\r\n      </Flex>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Acknowledgement\r\n"]},"metadata":{},"sourceType":"module"}