{"ast":null,"code":"/**\r\n * id: The campaign id (required)\r\n * type: The type of the achievement\r\n * title: A string or an object to be translated.\r\n * Note: If the value is a string it is likely used as data in a translation object\r\n *\r\n * badge: Achievement avatar\r\n */\nconst campaigns = [{\n  id: '511110000',\n  type: 'ifo',\n  title: 'Kalmar',\n  badge: 'ifo-kalm.svg'\n}, {\n  id: '511100000',\n  type: 'ifo',\n  title: 'Hotcross',\n  badge: 'ifo-hotcross.svg'\n}, {\n  id: '511090000',\n  type: 'ifo',\n  title: 'Horizon Protocol',\n  badge: 'ifo-hzn.svg'\n}, {\n  id: '511080000',\n  type: 'ifo',\n  title: 'Belt',\n  badge: 'ifo-belt.svg'\n}, {\n  id: '511070000',\n  type: 'ifo',\n  title: 'Yieldwatch',\n  badge: 'ifo-watch.svg'\n}, {\n  id: '511060000',\n  type: 'ifo',\n  title: 'Berry',\n  badge: 'ifo-bry.svg'\n}, {\n  id: '511050000',\n  type: 'ifo',\n  title: 'Soteria',\n  badge: 'ifo-wsote.svg'\n}, {\n  id: '511040000',\n  type: 'ifo',\n  title: 'Helmet',\n  badge: 'ifo-helmet.svg'\n}, {\n  id: '511030000',\n  type: 'ifo',\n  title: 'Tenet',\n  badge: 'ifo-ten.svg'\n}, {\n  id: '511020000',\n  type: 'ifo',\n  title: 'Ditto',\n  badge: 'ifo-ditto.svg'\n}, {\n  id: '511010000',\n  type: 'ifo',\n  title: 'Blink',\n  badge: 'ifo-blk.svg'\n}, {\n  id: '512010001',\n  type: 'teambattle',\n  title: 'Easter Champion: Gold',\n  badge: 'easter-champion-gold.svg'\n}, {\n  id: '512010002',\n  type: 'teambattle',\n  title: 'Easter Top 500: Gold',\n  badge: 'easter-top-500-gold.svg'\n}, {\n  id: '512010003',\n  type: 'teambattle',\n  title: 'Easter Top 500: Gold',\n  badge: 'easter-top-500-gold.svg'\n}, {\n  id: '512010004',\n  type: 'teambattle',\n  title: 'Easter Top 500: Gold',\n  badge: 'easter-top-500-gold.svg'\n}, {\n  id: '512010005',\n  type: 'teambattle',\n  title: 'Easter Participant: Gold',\n  badge: 'easter-participant-gold.svg'\n}, {\n  id: '512010006',\n  type: 'teambattle',\n  title: 'Easter Champion: Silver',\n  badge: 'easter-champion-silver.svg'\n}, {\n  id: '512010007',\n  type: 'teambattle',\n  title: 'Easter Top 500: Silver',\n  badge: 'easter-top-500-silver.svg'\n}, {\n  id: '512010008',\n  type: 'teambattle',\n  title: 'Easter Top 500: Silver',\n  badge: 'easter-top-500-silver.svg'\n}, {\n  id: '512010009',\n  type: 'teambattle',\n  title: 'Easter Top 500: Silver',\n  badge: 'easter-top-500-silver.svg'\n}, {\n  id: '512010010',\n  type: 'teambattle',\n  title: 'Easter Participant: Silver',\n  badge: 'easter-participant-silver.svg'\n}, {\n  id: '512010011',\n  type: 'teambattle',\n  title: 'Easter Champion: Bronze',\n  badge: 'easter-champion-bronze.svg'\n}, {\n  id: '512010012',\n  type: 'teambattle',\n  title: 'Easter Top 500: Bronze',\n  badge: 'easter-top-500-bronze.svg'\n}, {\n  id: '512010013',\n  type: 'teambattle',\n  title: 'Easter Top 500: Bronze',\n  badge: 'easter-top-500-bronze.svg'\n}, {\n  id: '512010014',\n  type: 'teambattle',\n  title: 'Easter Top 500: Bronze',\n  badge: 'easter-top-500-bronze.svg'\n}, {\n  id: '512010015',\n  type: 'teambattle',\n  title: 'Easter Participant: Bronze',\n  badge: 'easter-participant-bronze.svg'\n}, {\n  id: '513010001',\n  type: 'participation',\n  title: 'Syrup Soaker',\n  description: 'Took a dip in the early days of the Auto CAKE Pool',\n  badge: 'syrup-soaker.svg'\n}, {\n  id: '514010001',\n  type: 'participation',\n  title: 'Clairvoyant',\n  description: 'Played a round of Prediction before round 12,120',\n  badge: 'clairvoyant.svg'\n}];\n/**\r\n * Transform the campaign config into a map. Keeps the config the same\r\n * as the others and allows easy access to a campaign by id\r\n */\n\nexport const campaignMap = new Map();\ncampaigns.forEach(campaign => {\n  campaignMap.set(campaign.id, campaign);\n});\nexport default campaigns;","map":{"version":3,"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/config/constants/campaigns.ts"],"names":["campaigns","id","type","title","badge","description","campaignMap","Map","forEach","campaign","set"],"mappings":"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","sourcesContent":["import { Campaign } from './types'\r\n\r\n/**\r\n * id: The campaign id (required)\r\n * type: The type of the achievement\r\n * title: A string or an object to be translated.\r\n * Note: If the value is a string it is likely used as data in a translation object\r\n *\r\n * badge: Achievement avatar\r\n */\r\n\r\nconst campaigns: Campaign[] = [\r\n  {\r\n    id: '511110000',\r\n    type: 'ifo',\r\n    title: 'Kalmar',\r\n    badge: 'ifo-kalm.svg',\r\n  },\r\n  {\r\n    id: '511100000',\r\n    type: 'ifo',\r\n    title: 'Hotcross',\r\n    badge: 'ifo-hotcross.svg',\r\n  },\r\n  {\r\n    id: '511090000',\r\n    type: 'ifo',\r\n    title: 'Horizon Protocol',\r\n    badge: 'ifo-hzn.svg',\r\n  },\r\n  {\r\n    id: '511080000',\r\n    type: 'ifo',\r\n    title: 'Belt',\r\n    badge: 'ifo-belt.svg',\r\n  },\r\n  {\r\n    id: '511070000',\r\n    type: 'ifo',\r\n    title: 'Yieldwatch',\r\n    badge: 'ifo-watch.svg',\r\n  },\r\n  {\r\n    id: '511060000',\r\n    type: 'ifo',\r\n    title: 'Berry',\r\n    badge: 'ifo-bry.svg',\r\n  },\r\n  {\r\n    id: '511050000',\r\n    type: 'ifo',\r\n    title: 'Soteria',\r\n    badge: 'ifo-wsote.svg',\r\n  },\r\n  {\r\n    id: '511040000',\r\n    type: 'ifo',\r\n    title: 'Helmet',\r\n    badge: 'ifo-helmet.svg',\r\n  },\r\n  {\r\n    id: '511030000',\r\n    type: 'ifo',\r\n    title: 'Tenet',\r\n    badge: 'ifo-ten.svg',\r\n  },\r\n  {\r\n    id: '511020000',\r\n    type: 'ifo',\r\n    title: 'Ditto',\r\n    badge: 'ifo-ditto.svg',\r\n  },\r\n  {\r\n    id: '511010000',\r\n    type: 'ifo',\r\n    title: 'Blink',\r\n    badge: 'ifo-blk.svg',\r\n  },\r\n  {\r\n    id: '512010001',\r\n    type: 'teambattle',\r\n    title: 'Easter Champion: Gold',\r\n    badge: 'easter-champion-gold.svg',\r\n  },\r\n  {\r\n    id: '512010002',\r\n    type: 'teambattle',\r\n    title: 'Easter Top 500: Gold',\r\n    badge: 'easter-top-500-gold.svg',\r\n  },\r\n  {\r\n    id: '512010003',\r\n    type: 'teambattle',\r\n    title: 'Easter Top 500: Gold',\r\n    badge: 'easter-top-500-gold.svg',\r\n  },\r\n  {\r\n    id: '512010004',\r\n    type: 'teambattle',\r\n    title: 'Easter Top 500: Gold',\r\n    badge: 'easter-top-500-gold.svg',\r\n  },\r\n  {\r\n    id: '512010005',\r\n    type: 'teambattle',\r\n    title: 'Easter Participant: Gold',\r\n    badge: 'easter-participant-gold.svg',\r\n  },\r\n  {\r\n    id: '512010006',\r\n    type: 'teambattle',\r\n    title: 'Easter Champion: Silver',\r\n    badge: 'easter-champion-silver.svg',\r\n  },\r\n  {\r\n    id: '512010007',\r\n    type: 'teambattle',\r\n    title: 'Easter Top 500: Silver',\r\n    badge: 'easter-top-500-silver.svg',\r\n  },\r\n  {\r\n    id: '512010008',\r\n    type: 'teambattle',\r\n    title: 'Easter Top 500: Silver',\r\n    badge: 'easter-top-500-silver.svg',\r\n  },\r\n  {\r\n    id: '512010009',\r\n    type: 'teambattle',\r\n    title: 'Easter Top 500: Silver',\r\n    badge: 'easter-top-500-silver.svg',\r\n  },\r\n  {\r\n    id: '512010010',\r\n    type: 'teambattle',\r\n    title: 'Easter Participant: Silver',\r\n    badge: 'easter-participant-silver.svg',\r\n  },\r\n  {\r\n    id: '512010011',\r\n    type: 'teambattle',\r\n    title: 'Easter Champion: Bronze',\r\n    badge: 'easter-champion-bronze.svg',\r\n  },\r\n  {\r\n    id: '512010012',\r\n    type: 'teambattle',\r\n    title: 'Easter Top 500: Bronze',\r\n    badge: 'easter-top-500-bronze.svg',\r\n  },\r\n  {\r\n    id: '512010013',\r\n    type: 'teambattle',\r\n    title: 'Easter Top 500: Bronze',\r\n    badge: 'easter-top-500-bronze.svg',\r\n  },\r\n  {\r\n    id: '512010014',\r\n    type: 'teambattle',\r\n    title: 'Easter Top 500: Bronze',\r\n    badge: 'easter-top-500-bronze.svg',\r\n  },\r\n  {\r\n    id: '512010015',\r\n    type: 'teambattle',\r\n    title: 'Easter Participant: Bronze',\r\n    badge: 'easter-participant-bronze.svg',\r\n  },\r\n  {\r\n    id: '513010001',\r\n    type: 'participation',\r\n    title: 'Syrup Soaker',\r\n    description: 'Took a dip in the early days of the Auto CAKE Pool',\r\n    badge: 'syrup-soaker.svg',\r\n  },\r\n  {\r\n    id: '514010001',\r\n    type: 'participation',\r\n    title: 'Clairvoyant',\r\n    description: 'Played a round of Prediction before round 12,120',\r\n    badge: 'clairvoyant.svg',\r\n  },\r\n]\r\n\r\n/**\r\n * Transform the campaign config into a map. Keeps the config the same\r\n * as the others and allows easy access to a campaign by id\r\n */\r\nexport const campaignMap = new Map<string, Campaign>()\r\n\r\ncampaigns.forEach((campaign) => {\r\n  campaignMap.set(campaign.id, campaign)\r\n})\r\n\r\nexport default campaigns\r\n"]},"metadata":{},"sourceType":"module"}