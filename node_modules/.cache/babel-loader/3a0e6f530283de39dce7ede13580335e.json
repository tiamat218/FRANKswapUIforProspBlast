{"ast":null,"code":"import{getCakeAddress}from'utils/addressHelpers';import useTokenBalance from'./useTokenBalance';/**\r\n * A hook to check if a wallet's CAKE balance is at least the amount passed in\r\n */const useHasCakeBalance=minimumBalance=>{const{balance:cakeBalance}=useTokenBalance(getCakeAddress());return cakeBalance.gte(minimumBalance);};export default useHasCakeBalance;","map":{"version":3,"names":["getCakeAddress","useTokenBalance","useHasCakeBalance","minimumBalance","balance","cakeBalance","gte"],"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/hooks/useHasCakeBalance.ts"],"sourcesContent":["import BigNumber from 'bignumber.js'\r\nimport { getCakeAddress } from 'utils/addressHelpers'\r\nimport useTokenBalance from './useTokenBalance'\r\n\r\n/**\r\n * A hook to check if a wallet's CAKE balance is at least the amount passed in\r\n */\r\nconst useHasCakeBalance = (minimumBalance: BigNumber) => {\r\n  const { balance: cakeBalance } = useTokenBalance(getCakeAddress())\r\n  return cakeBalance.gte(minimumBalance)\r\n}\r\n\r\nexport default useHasCakeBalance\r\n"],"mappings":"AACA,OAASA,cAAc,KAAQ,sBAAsB,CACrD,MAAO,CAAAC,eAAe,KAAM,mBAAmB,CAE/C;AACA;AACA,GACA,KAAM,CAAAC,iBAAiB,CAAIC,cAAyB,EAAK,CACvD,KAAM,CAAEC,OAAO,CAAEC,WAAY,CAAC,CAAGJ,eAAe,CAACD,cAAc,CAAC,CAAC,CAAC,CAClE,MAAO,CAAAK,WAAW,CAACC,GAAG,CAACH,cAAc,CAAC,CACxC,CAAC,CAED,cAAe,CAAAD,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module"}