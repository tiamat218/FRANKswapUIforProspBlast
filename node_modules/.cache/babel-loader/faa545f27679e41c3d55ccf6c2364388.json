{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Devrim\\\\Documents\\\\FRANKswapUIforProspBlast\\\\src\\\\views\\\\Collectibles\\\\components\\\\NftCard\\\\index.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { Card, CardBody, Heading, Tag, Button, ChevronUpIcon, ChevronDownIcon, Text, CardFooter, useModal } from '@pancakeswap/uikit';\nimport { useProfile } from 'state/profile/hooks';\nimport { useTranslation } from 'contexts/Localization';\nimport InfoRow from '../InfoRow';\nimport TransferNftModal from '../TransferNftModal';\nimport ClaimNftModal from '../ClaimNftModal';\nimport Preview from './Preview';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Header = styled(InfoRow)`\n  min-height: 28px;\n`;\n_c = Header;\nconst DetailsButton = styled(Button).attrs({\n  variant: 'text'\n})`\n  height: auto;\n  padding: 16px 24px;\n\n  &:hover:not(:disabled):not(:active) {\n    background-color: transparent;\n  }\n\n  &:focus:not(:active) {\n    box-shadow: none;\n  }\n`;\n_c2 = DetailsButton;\nconst InfoBlock = styled.div`\n  padding: 24px;\n`;\n_c3 = InfoBlock;\nconst NftCard = ({\n  nft,\n  canClaim = false,\n  tokenIds = [],\n  onClaim,\n  refresh\n}) => {\n  _s();\n  var _profile$nft;\n  const [isOpen, setIsOpen] = useState(false);\n  const {\n    t\n  } = useTranslation();\n  const {\n    profile\n  } = useProfile();\n  const {\n    identifier,\n    name,\n    description\n  } = nft;\n  const walletOwnsNft = tokenIds.length > 0;\n  const Icon = isOpen ? ChevronUpIcon : ChevronDownIcon;\n  const handleClick = async () => {\n    setIsOpen(!isOpen);\n  };\n  const handleSuccess = () => {\n    refresh();\n  };\n  const [onPresentTransferModal] = useModal( /*#__PURE__*/_jsxDEV(TransferNftModal, {\n    nft: nft,\n    tokenIds: tokenIds,\n    onSuccess: handleSuccess\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this));\n  const [onPresentClaimModal] = useModal( /*#__PURE__*/_jsxDEV(ClaimNftModal, {\n    nft: nft,\n    onSuccess: handleSuccess,\n    onClaim: onClaim\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 42\n  }, this));\n  return /*#__PURE__*/_jsxDEV(Card, {\n    isActive: walletOwnsNft,\n    children: [/*#__PURE__*/_jsxDEV(Preview, {\n      nft: nft,\n      isOwned: walletOwnsNft\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        children: [/*#__PURE__*/_jsxDEV(Heading, {\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), walletOwnsNft && /*#__PURE__*/_jsxDEV(Tag, {\n          outline: true,\n          variant: \"secondary\",\n          children: t('In Wallet')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this), (profile === null || profile === void 0 ? void 0 : (_profile$nft = profile.nft) === null || _profile$nft === void 0 ? void 0 : _profile$nft.identifier) === identifier && /*#__PURE__*/_jsxDEV(Tag, {\n          outline: true,\n          variant: \"success\",\n          children: t('Profile Pic')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), canClaim && /*#__PURE__*/_jsxDEV(Button, {\n        width: \"100%\",\n        mt: \"24px\",\n        onClick: onPresentClaimModal,\n        children: t('Claim this NFT')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this), walletOwnsNft && /*#__PURE__*/_jsxDEV(Button, {\n        width: \"100%\",\n        variant: \"secondary\",\n        mt: \"24px\",\n        onClick: onPresentTransferModal,\n        children: t('Transfer')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardFooter, {\n      p: \"0\",\n      children: [/*#__PURE__*/_jsxDEV(DetailsButton, {\n        width: \"100%\",\n        endIcon: /*#__PURE__*/_jsxDEV(Icon, {\n          width: \"24px\",\n          color: \"primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 46\n        }, this),\n        onClick: handleClick,\n        children: t('Details')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), isOpen && /*#__PURE__*/_jsxDEV(InfoBlock, {\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          as: \"p\",\n          color: \"textSubtle\",\n          style: {\n            textAlign: 'center'\n          },\n          children: t(description)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n_s(NftCard, \"m5kgKLlB1r/HTX5rG3RK6pbRsos=\", false, function () {\n  return [useTranslation, useProfile, useModal, useModal];\n});\n_c4 = NftCard;\nexport default NftCard;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Header\");\n$RefreshReg$(_c2, \"DetailsButton\");\n$RefreshReg$(_c3, \"InfoBlock\");\n$RefreshReg$(_c4, \"NftCard\");","map":{"version":3,"names":["React","useState","styled","Card","CardBody","Heading","Tag","Button","ChevronUpIcon","ChevronDownIcon","Text","CardFooter","useModal","useProfile","useTranslation","InfoRow","TransferNftModal","ClaimNftModal","Preview","jsxDEV","_jsxDEV","Header","_c","DetailsButton","attrs","variant","_c2","InfoBlock","div","_c3","NftCard","nft","canClaim","tokenIds","onClaim","refresh","_s","_profile$nft","isOpen","setIsOpen","t","profile","identifier","name","description","walletOwnsNft","length","Icon","handleClick","handleSuccess","onPresentTransferModal","onSuccess","fileName","_jsxFileName","lineNumber","columnNumber","onPresentClaimModal","isActive","children","isOwned","outline","width","mt","onClick","p","endIcon","color","as","style","textAlign","_c4","$RefreshReg$"],"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/views/Collectibles/components/NftCard/index.tsx"],"sourcesContent":["import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { ethers } from 'ethers'\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Heading,\r\n  Tag,\r\n  Button,\r\n  ChevronUpIcon,\r\n  ChevronDownIcon,\r\n  Text,\r\n  CardFooter,\r\n  useModal,\r\n} from '@pancakeswap/uikit'\r\nimport { useProfile } from 'state/profile/hooks'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { Nft } from 'config/constants/types'\r\nimport InfoRow from '../InfoRow'\r\nimport TransferNftModal from '../TransferNftModal'\r\nimport ClaimNftModal from '../ClaimNftModal'\r\nimport Preview from './Preview'\r\n\r\nexport interface NftCardProps {\r\n  nft: Nft\r\n  canClaim?: boolean\r\n  tokenIds?: number[]\r\n  onClaim?: () => Promise<ethers.providers.TransactionResponse>\r\n  refresh: () => void\r\n}\r\n\r\nconst Header = styled(InfoRow)`\r\n  min-height: 28px;\r\n`\r\n\r\nconst DetailsButton = styled(Button).attrs({ variant: 'text' })`\r\n  height: auto;\r\n  padding: 16px 24px;\r\n\r\n  &:hover:not(:disabled):not(:active) {\r\n    background-color: transparent;\r\n  }\r\n\r\n  &:focus:not(:active) {\r\n    box-shadow: none;\r\n  }\r\n`\r\n\r\nconst InfoBlock = styled.div`\r\n  padding: 24px;\r\n`\r\n\r\nconst NftCard: React.FC<NftCardProps> = ({ nft, canClaim = false, tokenIds = [], onClaim, refresh }) => {\r\n  const [isOpen, setIsOpen] = useState(false)\r\n  const { t } = useTranslation()\r\n  const { profile } = useProfile()\r\n  const { identifier, name, description } = nft\r\n  const walletOwnsNft = tokenIds.length > 0\r\n  const Icon = isOpen ? ChevronUpIcon : ChevronDownIcon\r\n\r\n  const handleClick = async () => {\r\n    setIsOpen(!isOpen)\r\n  }\r\n\r\n  const handleSuccess = () => {\r\n    refresh()\r\n  }\r\n\r\n  const [onPresentTransferModal] = useModal(\r\n    <TransferNftModal nft={nft} tokenIds={tokenIds} onSuccess={handleSuccess} />,\r\n  )\r\n  const [onPresentClaimModal] = useModal(<ClaimNftModal nft={nft} onSuccess={handleSuccess} onClaim={onClaim} />)\r\n\r\n  return (\r\n    <Card isActive={walletOwnsNft}>\r\n      <Preview nft={nft} isOwned={walletOwnsNft} />\r\n      <CardBody>\r\n        <Header>\r\n          <Heading>{name}</Heading>\r\n          {walletOwnsNft && (\r\n            <Tag outline variant=\"secondary\">\r\n              {t('In Wallet')}\r\n            </Tag>\r\n          )}\r\n          {profile?.nft?.identifier === identifier && (\r\n            <Tag outline variant=\"success\">\r\n              {t('Profile Pic')}\r\n            </Tag>\r\n          )}\r\n        </Header>\r\n        {canClaim && (\r\n          <Button width=\"100%\" mt=\"24px\" onClick={onPresentClaimModal}>\r\n            {t('Claim this NFT')}\r\n          </Button>\r\n        )}\r\n        {walletOwnsNft && (\r\n          <Button width=\"100%\" variant=\"secondary\" mt=\"24px\" onClick={onPresentTransferModal}>\r\n            {t('Transfer')}\r\n          </Button>\r\n        )}\r\n      </CardBody>\r\n      <CardFooter p=\"0\">\r\n        <DetailsButton width=\"100%\" endIcon={<Icon width=\"24px\" color=\"primary\" />} onClick={handleClick}>\r\n          {t('Details')}\r\n        </DetailsButton>\r\n        {isOpen && (\r\n          <InfoBlock>\r\n            <Text as=\"p\" color=\"textSubtle\" style={{ textAlign: 'center' }}>\r\n              {t(description)}\r\n            </Text>\r\n          </InfoBlock>\r\n        )}\r\n      </CardFooter>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default NftCard\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}