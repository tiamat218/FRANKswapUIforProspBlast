{"ast":null,"code":"import React,{useState}from'react';import{Modal,Text,Button,Heading,Flex,AutoRenewIcon,ButtonMenu,ButtonMenuItem,HelpIcon,useTooltip}from'@pancakeswap/uikit';import{useTranslation}from'contexts/Localization';import useTheme from'hooks/useTheme';import useToast from'hooks/useToast';import{formatNumber}from'utils/formatBalance';import useHarvestPool from'../../../hooks/useHarvestPool';import useStakePool from'../../../hooks/useStakePool';import{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";const CollectModal=_ref=>{let{formattedBalance,fullBalance,earningToken,earningsDollarValue,sousId,isBnbPool,isCompoundPool=false,onDismiss}=_ref;const{t}=useTranslation();const{theme}=useTheme();const{toastSuccess,toastError}=useToast();const{onReward}=useHarvestPool(sousId,isBnbPool);const{onStake}=useStakePool(sousId,isBnbPool);const[pendingTx,setPendingTx]=useState(false);const[shouldCompound,setShouldCompound]=useState(isCompoundPool);const{targetRef,tooltip,tooltipVisible}=useTooltip(/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Text,{mb:\"12px\",children:t('Compound: collect and restake CAKE into pool.')}),/*#__PURE__*/_jsx(Text,{children:t('Harvest: collect CAKE and send to wallet')})]}),{placement:'bottom-end',tooltipOffset:[20,10]});const handleHarvestConfirm=async()=>{setPendingTx(true);// compounding\nif(shouldCompound){try{await onStake(fullBalance,earningToken.decimals);toastSuccess(\"\".concat(t('Compounded'),\"!\"),t('Your %symbol% earnings have been re-invested into the pool!',{symbol:earningToken.symbol}));setPendingTx(false);onDismiss();}catch(e){toastError(t('Error'),t('Please try again. Confirm the transaction and make sure you are paying enough gas!'));console.error(e);setPendingTx(false);}}else{// harvesting\ntry{await onReward();toastSuccess(\"\".concat(t('Harvested'),\"!\"),t('Your %symbol% earnings have been sent to your wallet!',{symbol:earningToken.symbol}));setPendingTx(false);onDismiss();}catch(e){toastError(t('Error'),t('Please try again. Confirm the transaction and make sure you are paying enough gas!'));console.error(e);setPendingTx(false);}}};return/*#__PURE__*/_jsxs(Modal,{title:\"\".concat(earningToken.symbol,\" \").concat(isCompoundPool?t('Collect'):t('Harvest')),onDismiss:onDismiss,headerBackground:theme.colors.gradients.cardHeader,children:[isCompoundPool&&/*#__PURE__*/_jsxs(Flex,{justifyContent:\"center\",alignItems:\"center\",mb:\"24px\",children:[/*#__PURE__*/_jsxs(ButtonMenu,{activeIndex:shouldCompound?0:1,scale:\"sm\",variant:\"subtle\",onItemClick:index=>setShouldCompound(!index),children:[/*#__PURE__*/_jsx(ButtonMenuItem,{as:\"button\",children:t('Compound')}),/*#__PURE__*/_jsx(ButtonMenuItem,{as:\"button\",children:t('Harvest')})]}),/*#__PURE__*/_jsx(Flex,{ml:\"10px\",ref:targetRef,children:/*#__PURE__*/_jsx(HelpIcon,{color:\"textSubtle\"})}),tooltipVisible&&tooltip]}),/*#__PURE__*/_jsxs(Flex,{justifyContent:\"space-between\",alignItems:\"center\",mb:\"24px\",children:[/*#__PURE__*/_jsxs(Text,{children:[shouldCompound?t('Compounding'):t('Harvesting'),\":\"]}),/*#__PURE__*/_jsxs(Flex,{flexDirection:\"column\",children:[/*#__PURE__*/_jsxs(Heading,{children:[formattedBalance,\" \",earningToken.symbol]}),earningsDollarValue>0&&/*#__PURE__*/_jsx(Text,{fontSize:\"12px\",color:\"textSubtle\",children:\"~\".concat(formatNumber(earningsDollarValue),\" USD\")})]})]}),/*#__PURE__*/_jsx(Button,{mt:\"8px\",onClick:handleHarvestConfirm,isLoading:pendingTx,endIcon:pendingTx?/*#__PURE__*/_jsx(AutoRenewIcon,{spin:true,color:\"currentColor\"}):null,children:pendingTx?t('Confirming'):t('Confirm')}),/*#__PURE__*/_jsx(Button,{variant:\"text\",onClick:onDismiss,pb:\"0px\",children:t('Close Window')})]});};export default CollectModal;","map":{"version":3,"names":["React","useState","Modal","Text","Button","Heading","Flex","AutoRenewIcon","ButtonMenu","ButtonMenuItem","HelpIcon","useTooltip","useTranslation","useTheme","useToast","formatNumber","useHarvestPool","useStakePool","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","CollectModal","_ref","formattedBalance","fullBalance","earningToken","earningsDollarValue","sousId","isBnbPool","isCompoundPool","onDismiss","t","theme","toastSuccess","toastError","onReward","onStake","pendingTx","setPendingTx","shouldCompound","setShouldCompound","targetRef","tooltip","tooltipVisible","children","mb","placement","tooltipOffset","handleHarvestConfirm","decimals","concat","symbol","e","console","error","title","headerBackground","colors","gradients","cardHeader","justifyContent","alignItems","activeIndex","scale","variant","onItemClick","index","as","ml","ref","color","flexDirection","fontSize","mt","onClick","isLoading","endIcon","spin","pb"],"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/views/Pools/components/PoolCard/Modals/CollectModal.tsx"],"sourcesContent":["import React, { useState } from 'react'\r\nimport {\r\n  Modal,\r\n  Text,\r\n  Button,\r\n  Heading,\r\n  Flex,\r\n  AutoRenewIcon,\r\n  ButtonMenu,\r\n  ButtonMenuItem,\r\n  HelpIcon,\r\n  useTooltip,\r\n} from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useTheme from 'hooks/useTheme'\r\nimport useToast from 'hooks/useToast'\r\nimport { Token } from 'config/constants/types'\r\nimport { formatNumber } from 'utils/formatBalance'\r\nimport useHarvestPool from '../../../hooks/useHarvestPool'\r\nimport useStakePool from '../../../hooks/useStakePool'\r\n\r\ninterface CollectModalProps {\r\n  formattedBalance: string\r\n  fullBalance: string\r\n  earningToken: Token\r\n  earningsDollarValue: number\r\n  sousId: number\r\n  isBnbPool: boolean\r\n  isCompoundPool?: boolean\r\n  onDismiss?: () => void\r\n}\r\n\r\nconst CollectModal: React.FC<CollectModalProps> = ({\r\n  formattedBalance,\r\n  fullBalance,\r\n  earningToken,\r\n  earningsDollarValue,\r\n  sousId,\r\n  isBnbPool,\r\n  isCompoundPool = false,\r\n  onDismiss,\r\n}) => {\r\n  const { t } = useTranslation()\r\n  const { theme } = useTheme()\r\n  const { toastSuccess, toastError } = useToast()\r\n  const { onReward } = useHarvestPool(sousId, isBnbPool)\r\n  const { onStake } = useStakePool(sousId, isBnbPool)\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const [shouldCompound, setShouldCompound] = useState(isCompoundPool)\r\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\r\n    <>\r\n      <Text mb=\"12px\">{t('Compound: collect and restake CAKE into pool.')}</Text>\r\n      <Text>{t('Harvest: collect CAKE and send to wallet')}</Text>\r\n    </>,\r\n    { placement: 'bottom-end', tooltipOffset: [20, 10] },\r\n  )\r\n\r\n  const handleHarvestConfirm = async () => {\r\n    setPendingTx(true)\r\n    // compounding\r\n    if (shouldCompound) {\r\n      try {\r\n        await onStake(fullBalance, earningToken.decimals)\r\n        toastSuccess(\r\n          `${t('Compounded')}!`,\r\n          t('Your %symbol% earnings have been re-invested into the pool!', { symbol: earningToken.symbol }),\r\n        )\r\n        setPendingTx(false)\r\n        onDismiss()\r\n      } catch (e) {\r\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\r\n        console.error(e)\r\n        setPendingTx(false)\r\n      }\r\n    } else {\r\n      // harvesting\r\n      try {\r\n        await onReward()\r\n        toastSuccess(\r\n          `${t('Harvested')}!`,\r\n          t('Your %symbol% earnings have been sent to your wallet!', { symbol: earningToken.symbol }),\r\n        )\r\n        setPendingTx(false)\r\n        onDismiss()\r\n      } catch (e) {\r\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\r\n        console.error(e)\r\n        setPendingTx(false)\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      title={`${earningToken.symbol} ${isCompoundPool ? t('Collect') : t('Harvest')}`}\r\n      onDismiss={onDismiss}\r\n      headerBackground={theme.colors.gradients.cardHeader}\r\n    >\r\n      {isCompoundPool && (\r\n        <Flex justifyContent=\"center\" alignItems=\"center\" mb=\"24px\">\r\n          <ButtonMenu\r\n            activeIndex={shouldCompound ? 0 : 1}\r\n            scale=\"sm\"\r\n            variant=\"subtle\"\r\n            onItemClick={(index) => setShouldCompound(!index)}\r\n          >\r\n            <ButtonMenuItem as=\"button\">{t('Compound')}</ButtonMenuItem>\r\n            <ButtonMenuItem as=\"button\">{t('Harvest')}</ButtonMenuItem>\r\n          </ButtonMenu>\r\n          <Flex ml=\"10px\" ref={targetRef}>\r\n            <HelpIcon color=\"textSubtle\" />\r\n          </Flex>\r\n          {tooltipVisible && tooltip}\r\n        </Flex>\r\n      )}\r\n\r\n      <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"24px\">\r\n        <Text>{shouldCompound ? t('Compounding') : t('Harvesting')}:</Text>\r\n        <Flex flexDirection=\"column\">\r\n          <Heading>\r\n            {formattedBalance} {earningToken.symbol}\r\n          </Heading>\r\n          {earningsDollarValue > 0 && (\r\n            <Text fontSize=\"12px\" color=\"textSubtle\">{`~${formatNumber(earningsDollarValue)} USD`}</Text>\r\n          )}\r\n        </Flex>\r\n      </Flex>\r\n\r\n      <Button\r\n        mt=\"8px\"\r\n        onClick={handleHarvestConfirm}\r\n        isLoading={pendingTx}\r\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\r\n      >\r\n        {pendingTx ? t('Confirming') : t('Confirm')}\r\n      </Button>\r\n      <Button variant=\"text\" onClick={onDismiss} pb=\"0px\">\r\n        {t('Close Window')}\r\n      </Button>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default CollectModal\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}