{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport useActiveWeb3React from 'hooks/useActiveWeb3React';\nimport { deserializeToken } from './helpers';\nexport default function useUserAddedTokens() {\n  _s();\n\n  const {\n    chainId\n  } = useActiveWeb3React();\n  const serializedTokensMap = useSelector(({\n    user: {\n      tokens\n    }\n  }) => tokens);\n  return useMemo(() => {\n    var _serializedTokensMap;\n\n    if (!chainId) return [];\n    return Object.values((_serializedTokensMap = serializedTokensMap === null || serializedTokensMap === void 0 ? void 0 : serializedTokensMap[chainId]) !== null && _serializedTokensMap !== void 0 ? _serializedTokensMap : {}).map(deserializeToken);\n  }, [serializedTokensMap, chainId]);\n}\n\n_s(useUserAddedTokens, \"PdCPfDsyvt0iyDvIy6GqqMS0G5U=\", false, function () {\n  return [useActiveWeb3React, useSelector];\n});","map":{"version":3,"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/state/user/hooks/useUserAddedTokens.ts"],"names":["useMemo","useSelector","useActiveWeb3React","deserializeToken","useUserAddedTokens","chainId","serializedTokensMap","user","tokens","Object","values","map"],"mappings":";;AAAA,SAASA,OAAT,QAAwB,OAAxB;AAEA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,kBAAP,MAA+B,0BAA/B;AAEA,SAASC,gBAAT,QAAiC,WAAjC;AAEA,eAAe,SAASC,kBAAT,GAAuC;AAAA;;AACpD,QAAM;AAAEC,IAAAA;AAAF,MAAcH,kBAAkB,EAAtC;AACA,QAAMI,mBAAmB,GAAGL,WAAW,CAAuC,CAAC;AAAEM,IAAAA,IAAI,EAAE;AAAEC,MAAAA;AAAF;AAAR,GAAD,KAA0BA,MAAjE,CAAvC;AAEA,SAAOR,OAAO,CAAC,MAAM;AAAA;;AACnB,QAAI,CAACK,OAAL,EAAc,OAAO,EAAP;AACd,WAAOI,MAAM,CAACC,MAAP,yBAAcJ,mBAAd,aAAcA,mBAAd,uBAAcA,mBAAmB,CAAGD,OAAH,CAAjC,uEAA2D,EAA3D,EAA+DM,GAA/D,CAAmER,gBAAnE,CAAP;AACD,GAHa,EAGX,CAACG,mBAAD,EAAsBD,OAAtB,CAHW,CAAd;AAID;;GARuBD,kB;UACFF,kB,EACQD,W","sourcesContent":["import { useMemo } from 'react'\r\nimport { ChainId, Token } from '@pancakeswap/sdk'\r\nimport { useSelector } from 'react-redux'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport { AppState } from '../../index'\r\nimport { deserializeToken } from './helpers'\r\n\r\nexport default function useUserAddedTokens(): Token[] {\r\n  const { chainId } = useActiveWeb3React()\r\n  const serializedTokensMap = useSelector<AppState, AppState['user']['tokens']>(({ user: { tokens } }) => tokens)\r\n\r\n  return useMemo(() => {\r\n    if (!chainId) return []\r\n    return Object.values(serializedTokensMap?.[chainId as ChainId] ?? {}).map(deserializeToken)\r\n  }, [serializedTokensMap, chainId])\r\n}\r\n"]},"metadata":{},"sourceType":"module"}