{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Devrim\\\\Documents\\\\FRANKswapUIforProspBlast\\\\src\\\\views\\\\Predictions\\\\components\\\\History\\\\PnlTab\\\\PnlTab.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport styled from 'styled-components';\nimport { useWeb3React } from '@web3-react/core';\nimport { Box, Flex, Heading, Text, Button, Link, OpenNewIcon } from '@pancakeswap/uikit';\nimport { useTranslation } from 'contexts/Localization';\nimport { getRoundResult, Result } from 'state/predictions/helpers';\nimport { getBscScanLink } from 'utils';\nimport store from 'state';\nimport { useGetCurrentEpoch } from 'state/hooks';\nimport { usePriceBnbBusd } from 'state/farms/hooks';\nimport { BetPosition } from 'state/types';\nimport { formatBnb, getMultiplier, getNetPayout } from '../helpers';\nimport PnlChart from './PnlChart';\nimport SummaryRow from './SummaryRow';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Divider = styled.div`\n  background-color: ${({\n  theme\n}) => theme.colors.backgroundDisabled};\n  height: 1px;\n  margin: 24px auto;\n  width: 100%;\n`;\n_c = Divider;\nconst initialPnlSummary = {\n  won: {\n    rounds: 0,\n    amount: 0,\n    payout: 0,\n    // net payout after all deductions\n    bestRound: {\n      id: '0',\n      payout: 0,\n      // net payout after all deductions\n      multiplier: 0\n    }\n  },\n  lost: {\n    rounds: 0,\n    amount: 0\n  },\n  entered: {\n    rounds: 0,\n    amount: 0\n  }\n};\nconst getPnlSummary = (bets, currentEpoch) => {\n  const state = store.getState();\n  const rewardRate = state.predictions.rewardRate / 100;\n  return bets.reduce((summary, bet) => {\n    const roundResult = getRoundResult(bet, currentEpoch);\n    if (roundResult === Result.WIN) {\n      const payout = getNetPayout(bet, rewardRate);\n      let {\n        bestRound\n      } = summary.won;\n      if (payout > bestRound.payout) {\n        const {\n          bullAmount,\n          bearAmount,\n          totalAmount\n        } = bet.round;\n        const multiplier = getMultiplier(totalAmount, bet.position === BetPosition.BULL ? bullAmount : bearAmount);\n        bestRound = {\n          id: bet.round.id,\n          payout,\n          multiplier\n        };\n      }\n      return {\n        won: {\n          rounds: summary.won.rounds + 1,\n          amount: summary.won.amount + bet.amount,\n          payout: summary.won.payout + payout,\n          bestRound\n        },\n        entered: {\n          rounds: summary.entered.rounds + 1,\n          amount: summary.entered.amount + bet.amount\n        },\n        lost: summary.lost\n      };\n    }\n    if (roundResult === Result.LOSE) {\n      return {\n        lost: {\n          rounds: summary.lost.rounds + 1,\n          amount: summary.lost.amount + bet.amount\n        },\n        entered: {\n          rounds: summary.entered.rounds + 1,\n          amount: summary.entered.amount + bet.amount\n        },\n        won: summary.won\n      };\n    }\n    // Ignore Canceled and Live rounds\n    return summary;\n  }, initialPnlSummary);\n};\nconst PnlTab = ({\n  hasBetHistory,\n  bets\n}) => {\n  _s();\n  const {\n    t\n  } = useTranslation();\n  const {\n    account\n  } = useWeb3React();\n  const currentEpoch = useGetCurrentEpoch();\n  const bnbBusdPrice = usePriceBnbBusd();\n  const summary = getPnlSummary(bets, currentEpoch);\n  const netResultAmount = summary.won.payout - summary.lost.amount;\n  const netResultIsPositive = netResultAmount > 0;\n  const avgPositionEntered = summary.entered.amount / summary.entered.rounds;\n  const avgBnbWonPerRound = netResultAmount / summary.entered.rounds;\n  const avgBnbWonIsPositive = avgBnbWonPerRound > 0;\n\n  // Guard in case user has only lost rounds\n  const hasBestRound = summary.won.bestRound.payout !== 0;\n  return hasBetHistory ? /*#__PURE__*/_jsxDEV(Box, {\n    p: \"16px\",\n    children: [/*#__PURE__*/_jsxDEV(Text, {\n      bold: true,\n      fontSize: \"24px\",\n      color: \"secondary\",\n      pb: \"24px\",\n      children: t('Your history')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Flex, {\n      children: [/*#__PURE__*/_jsxDEV(PnlChart, {\n        lost: summary.lost.rounds,\n        won: summary.won.rounds\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        pl: \"24px\",\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          bold: true,\n          color: \"textSubtle\",\n          children: t('Net results')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          bold: true,\n          fontSize: \"24px\",\n          lineHeight: \"1\",\n          color: netResultIsPositive ? 'success' : 'failure',\n          children: `${netResultIsPositive ? '+' : ''}${formatBnb(netResultAmount)} BNB`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          small: true,\n          color: \"textSubtle\",\n          children: `~$${formatBnb(bnbBusdPrice.times(netResultAmount).toNumber())}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      pl: \"8px\",\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        mt: \"24px\",\n        bold: true,\n        color: \"textSubtle\",\n        children: t('Average return / round')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        bold: true,\n        color: avgBnbWonIsPositive ? 'success' : 'failure',\n        children: `${avgBnbWonIsPositive ? '+' : ''}${formatBnb(avgBnbWonPerRound)} BNB`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        small: true,\n        color: \"textSubtle\",\n        children: `~$${formatBnb(bnbBusdPrice.times(avgBnbWonPerRound).toNumber())}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), hasBestRound && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          mt: \"16px\",\n          bold: true,\n          color: \"textSubtle\",\n          children: t('Best round: #%roundId%', {\n            roundId: summary.won.bestRound.id\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Flex, {\n          alignItems: \"flex-end\",\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            bold: true,\n            color: \"success\",\n            children: `+${formatBnb(summary.won.bestRound.payout)} BNB`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            ml: \"4px\",\n            small: true,\n            color: \"textSubtle\",\n            children: [\"(\", summary.won.bestRound.multiplier.toFixed(2), \"x)\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          small: true,\n          color: \"textSubtle\",\n          children: `~$${formatBnb(bnbBusdPrice.times(summary.won.bestRound.payout).toNumber())}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(Text, {\n        mt: \"16px\",\n        bold: true,\n        color: \"textSubtle\",\n        children: t('Average position entered / round')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        bold: true,\n        children: `${formatBnb(avgPositionEntered)} BNB`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        small: true,\n        color: \"textSubtle\",\n        children: `~$${formatBnb(bnbBusdPrice.times(avgPositionEntered).toNumber())}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SummaryRow, {\n        type: \"won\",\n        summary: summary,\n        bnbBusdPrice: bnbBusdPrice\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SummaryRow, {\n        type: \"lost\",\n        summary: summary,\n        bnbBusdPrice: bnbBusdPrice\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SummaryRow, {\n        type: \"entered\",\n        summary: summary,\n        bnbBusdPrice: bnbBusdPrice\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        justifyContent: \"center\",\n        mt: \"24px\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          href: `${getBscScanLink(account, 'address')}#internaltx`,\n          mb: \"16px\",\n          external: true,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            mt: \"8px\",\n            width: \"100%\",\n            children: [t('View Reclaimed & Won'), /*#__PURE__*/_jsxDEV(OpenNewIcon, {\n              color: \"white\",\n              ml: \"4px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(Box, {\n    p: \"24px\",\n    children: [/*#__PURE__*/_jsxDEV(Heading, {\n      size: \"lg\",\n      textAlign: \"center\",\n      mb: \"8px\",\n      children: t('No prediction history available')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Text, {\n      as: \"p\",\n      textAlign: \"center\",\n      children: t('If you are sure you should see history here, make sure you’re connected to the correct wallet and try again.')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 194,\n    columnNumber: 5\n  }, this);\n};\n_s(PnlTab, \"sujD/1N7CFw5NtBq6tQW4VwkhlY=\", false, function () {\n  return [useTranslation, useWeb3React, useGetCurrentEpoch, usePriceBnbBusd];\n});\n_c2 = PnlTab;\nexport default PnlTab;\nvar _c, _c2;\n$RefreshReg$(_c, \"Divider\");\n$RefreshReg$(_c2, \"PnlTab\");","map":{"version":3,"names":["React","styled","useWeb3React","Box","Flex","Heading","Text","Button","Link","OpenNewIcon","useTranslation","getRoundResult","Result","getBscScanLink","store","useGetCurrentEpoch","usePriceBnbBusd","BetPosition","formatBnb","getMultiplier","getNetPayout","PnlChart","SummaryRow","jsxDEV","_jsxDEV","Fragment","_Fragment","Divider","div","theme","colors","backgroundDisabled","_c","initialPnlSummary","won","rounds","amount","payout","bestRound","id","multiplier","lost","entered","getPnlSummary","bets","currentEpoch","state","getState","rewardRate","predictions","reduce","summary","bet","roundResult","WIN","bullAmount","bearAmount","totalAmount","round","position","BULL","LOSE","PnlTab","hasBetHistory","_s","t","account","bnbBusdPrice","netResultAmount","netResultIsPositive","avgPositionEntered","avgBnbWonPerRound","avgBnbWonIsPositive","hasBestRound","p","children","bold","fontSize","color","pb","fileName","_jsxFileName","lineNumber","columnNumber","flexDirection","justifyContent","pl","lineHeight","small","times","toNumber","mt","roundId","alignItems","ml","toFixed","type","href","mb","external","width","size","textAlign","as","_c2","$RefreshReg$"],"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/views/Predictions/components/History/PnlTab/PnlTab.tsx"],"sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { Box, Flex, Heading, Text, Button, Link, OpenNewIcon } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { getRoundResult, Result } from 'state/predictions/helpers'\r\nimport { getBscScanLink } from 'utils'\r\nimport store from 'state'\r\nimport { useGetCurrentEpoch } from 'state/hooks'\r\nimport { usePriceBnbBusd } from 'state/farms/hooks'\r\nimport { Bet, BetPosition } from 'state/types'\r\nimport { formatBnb, getMultiplier, getNetPayout } from '../helpers'\r\nimport PnlChart from './PnlChart'\r\nimport SummaryRow from './SummaryRow'\r\n\r\ninterface PnlTabProps {\r\n  hasBetHistory: boolean\r\n  bets: Bet[]\r\n}\r\n\r\ninterface PnlCategory {\r\n  rounds: number\r\n  amount: number\r\n}\r\n\r\ninterface PnlSummary {\r\n  won: PnlCategory & { payout: number; bestRound: { id: string; payout: number; multiplier: number } }\r\n  lost: PnlCategory\r\n  entered: PnlCategory\r\n}\r\n\r\nconst Divider = styled.div`\r\n  background-color: ${({ theme }) => theme.colors.backgroundDisabled};\r\n  height: 1px;\r\n  margin: 24px auto;\r\n  width: 100%;\r\n`\r\n\r\nconst initialPnlSummary: PnlSummary = {\r\n  won: {\r\n    rounds: 0,\r\n    amount: 0,\r\n    payout: 0, // net payout after all deductions\r\n    bestRound: {\r\n      id: '0',\r\n      payout: 0, // net payout after all deductions\r\n      multiplier: 0,\r\n    },\r\n  },\r\n  lost: {\r\n    rounds: 0,\r\n    amount: 0,\r\n  },\r\n  entered: {\r\n    rounds: 0,\r\n    amount: 0,\r\n  },\r\n}\r\n\r\nconst getPnlSummary = (bets: Bet[], currentEpoch: number): PnlSummary => {\r\n  const state = store.getState()\r\n  const rewardRate = state.predictions.rewardRate / 100\r\n\r\n  return bets.reduce((summary: PnlSummary, bet) => {\r\n    const roundResult = getRoundResult(bet, currentEpoch)\r\n    if (roundResult === Result.WIN) {\r\n      const payout = getNetPayout(bet, rewardRate)\r\n      let { bestRound } = summary.won\r\n      if (payout > bestRound.payout) {\r\n        const { bullAmount, bearAmount, totalAmount } = bet.round\r\n        const multiplier = getMultiplier(totalAmount, bet.position === BetPosition.BULL ? bullAmount : bearAmount)\r\n        bestRound = { id: bet.round.id, payout, multiplier }\r\n      }\r\n      return {\r\n        won: {\r\n          rounds: summary.won.rounds + 1,\r\n          amount: summary.won.amount + bet.amount,\r\n          payout: summary.won.payout + payout,\r\n          bestRound,\r\n        },\r\n        entered: {\r\n          rounds: summary.entered.rounds + 1,\r\n          amount: summary.entered.amount + bet.amount,\r\n        },\r\n        lost: summary.lost,\r\n      }\r\n    }\r\n    if (roundResult === Result.LOSE) {\r\n      return {\r\n        lost: {\r\n          rounds: summary.lost.rounds + 1,\r\n          amount: summary.lost.amount + bet.amount,\r\n        },\r\n        entered: {\r\n          rounds: summary.entered.rounds + 1,\r\n          amount: summary.entered.amount + bet.amount,\r\n        },\r\n        won: summary.won,\r\n      }\r\n    }\r\n    // Ignore Canceled and Live rounds\r\n    return summary\r\n  }, initialPnlSummary)\r\n}\r\n\r\nconst PnlTab: React.FC<PnlTabProps> = ({ hasBetHistory, bets }) => {\r\n  const { t } = useTranslation()\r\n  const { account } = useWeb3React()\r\n  const currentEpoch = useGetCurrentEpoch()\r\n  const bnbBusdPrice = usePriceBnbBusd()\r\n\r\n  const summary = getPnlSummary(bets, currentEpoch)\r\n  const netResultAmount = summary.won.payout - summary.lost.amount\r\n  const netResultIsPositive = netResultAmount > 0\r\n  const avgPositionEntered = summary.entered.amount / summary.entered.rounds\r\n  const avgBnbWonPerRound = netResultAmount / summary.entered.rounds\r\n  const avgBnbWonIsPositive = avgBnbWonPerRound > 0\r\n\r\n  // Guard in case user has only lost rounds\r\n  const hasBestRound = summary.won.bestRound.payout !== 0\r\n\r\n  return hasBetHistory ? (\r\n    <Box p=\"16px\">\r\n      <Text bold fontSize=\"24px\" color=\"secondary\" pb=\"24px\">\r\n        {t('Your history')}\r\n      </Text>\r\n      <Flex>\r\n        <PnlChart lost={summary.lost.rounds} won={summary.won.rounds} />\r\n        <Flex flexDirection=\"column\" justifyContent=\"center\" pl=\"24px\">\r\n          <Text bold color=\"textSubtle\">\r\n            {t('Net results')}\r\n          </Text>\r\n          <Text bold fontSize=\"24px\" lineHeight=\"1\" color={netResultIsPositive ? 'success' : 'failure'}>\r\n            {`${netResultIsPositive ? '+' : ''}${formatBnb(netResultAmount)} BNB`}\r\n          </Text>\r\n          <Text small color=\"textSubtle\">\r\n            {`~$${formatBnb(bnbBusdPrice.times(netResultAmount).toNumber())}`}\r\n          </Text>\r\n        </Flex>\r\n      </Flex>\r\n      <Box pl=\"8px\">\r\n        <Text mt=\"24px\" bold color=\"textSubtle\">\r\n          {t('Average return / round')}\r\n        </Text>\r\n        <Text bold color={avgBnbWonIsPositive ? 'success' : 'failure'}>\r\n          {`${avgBnbWonIsPositive ? '+' : ''}${formatBnb(avgBnbWonPerRound)} BNB`}\r\n        </Text>\r\n        <Text small color=\"textSubtle\">\r\n          {`~$${formatBnb(bnbBusdPrice.times(avgBnbWonPerRound).toNumber())}`}\r\n        </Text>\r\n\r\n        {hasBestRound && (\r\n          <>\r\n            <Text mt=\"16px\" bold color=\"textSubtle\">\r\n              {t('Best round: #%roundId%', { roundId: summary.won.bestRound.id })}\r\n            </Text>\r\n            <Flex alignItems=\"flex-end\">\r\n              <Text bold color=\"success\">{`+${formatBnb(summary.won.bestRound.payout)} BNB`}</Text>\r\n              <Text ml=\"4px\" small color=\"textSubtle\">\r\n                ({summary.won.bestRound.multiplier.toFixed(2)}x)\r\n              </Text>\r\n            </Flex>\r\n            <Text small color=\"textSubtle\">\r\n              {`~$${formatBnb(bnbBusdPrice.times(summary.won.bestRound.payout).toNumber())}`}\r\n            </Text>\r\n          </>\r\n        )}\r\n\r\n        <Text mt=\"16px\" bold color=\"textSubtle\">\r\n          {t('Average position entered / round')}\r\n        </Text>\r\n        <Text bold>{`${formatBnb(avgPositionEntered)} BNB`}</Text>\r\n        <Text small color=\"textSubtle\">\r\n          {`~$${formatBnb(bnbBusdPrice.times(avgPositionEntered).toNumber())}`}\r\n        </Text>\r\n\r\n        <Divider />\r\n\r\n        <SummaryRow type=\"won\" summary={summary} bnbBusdPrice={bnbBusdPrice} />\r\n        <SummaryRow type=\"lost\" summary={summary} bnbBusdPrice={bnbBusdPrice} />\r\n        <SummaryRow type=\"entered\" summary={summary} bnbBusdPrice={bnbBusdPrice} />\r\n\r\n        <Flex justifyContent=\"center\" mt=\"24px\">\r\n          <Link href={`${getBscScanLink(account, 'address')}#internaltx`} mb=\"16px\" external>\r\n            <Button mt=\"8px\" width=\"100%\">\r\n              {t('View Reclaimed & Won')}\r\n              <OpenNewIcon color=\"white\" ml=\"4px\" />\r\n            </Button>\r\n          </Link>\r\n        </Flex>\r\n      </Box>\r\n    </Box>\r\n  ) : (\r\n    <Box p=\"24px\">\r\n      <Heading size=\"lg\" textAlign=\"center\" mb=\"8px\">\r\n        {t('No prediction history available')}\r\n      </Heading>\r\n      <Text as=\"p\" textAlign=\"center\">\r\n        {t(\r\n          'If you are sure you should see history here, make sure you’re connected to the correct wallet and try again.',\r\n        )}\r\n      </Text>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default PnlTab\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}