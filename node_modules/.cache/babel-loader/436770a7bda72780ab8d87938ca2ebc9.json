{"ast":null,"code":"import React from'react';import{useWeb3React}from'@web3-react/core';import Page from'components/Layout/Page';import PageLoader from'components/Loader/PageLoader';import{useProfile}from'state/profile/hooks';import{useFetchAchievements}from'state/achievements/hooks';import ProfileCreation from'./ProfileCreation';import Header from'./components/Header';import{jsx as _jsx}from\"react/jsx-runtime\";const Profile=()=>{const{isInitialized,isLoading,hasProfile}=useProfile();const{account}=useWeb3React();useFetchAchievements();if(!isInitialized||isLoading){return/*#__PURE__*/_jsx(PageLoader,{});}if(account&&!hasProfile){return/*#__PURE__*/_jsx(Page,{children:/*#__PURE__*/_jsx(ProfileCreation,{})});}return/*#__PURE__*/_jsx(Page,{children:/*#__PURE__*/_jsx(Header,{})});};export default Profile;","map":{"version":3,"names":["React","useWeb3React","Page","PageLoader","useProfile","useFetchAchievements","ProfileCreation","Header","jsx","_jsx","Profile","isInitialized","isLoading","hasProfile","account","children"],"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/views/Profile/index.tsx"],"sourcesContent":["import React from 'react'\r\nimport { Route } from 'react-router-dom'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport Page from 'components/Layout/Page'\r\nimport PageLoader from 'components/Loader/PageLoader'\r\nimport { useProfile } from 'state/profile/hooks'\r\nimport { useFetchAchievements } from 'state/achievements/hooks'\r\nimport ProfileCreation from './ProfileCreation'\r\nimport Header from './components/Header'\r\nimport TaskCenter from './TaskCenter'\r\nimport PublicProfile from './PublicProfile'\r\n\r\nconst Profile = () => {\r\n  const { isInitialized, isLoading, hasProfile } = useProfile()\r\n  const { account } = useWeb3React()\r\n\r\n  useFetchAchievements()\r\n\r\n  if (!isInitialized || isLoading) {\r\n    return <PageLoader />\r\n  }\r\n\r\n  if (account && !hasProfile) {\r\n    return (\r\n      <Page>\r\n        <ProfileCreation />\r\n      </Page>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Page>\r\n      <Header />\r\n{/*       <Route exact path=\"/profile\">\r\n        <PublicProfile />\r\n      </Route>\r\n      <Route path=\"/profile/tasks\">\r\n        <TaskCenter />\r\n      </Route> */}\r\n    </Page>\r\n  )\r\n}\r\n\r\nexport default Profile\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAEzB,OAASC,YAAY,KAAQ,kBAAkB,CAC/C,MAAO,CAAAC,IAAI,KAAM,wBAAwB,CACzC,MAAO,CAAAC,UAAU,KAAM,8BAA8B,CACrD,OAASC,UAAU,KAAQ,qBAAqB,CAChD,OAASC,oBAAoB,KAAQ,0BAA0B,CAC/D,MAAO,CAAAC,eAAe,KAAM,mBAAmB,CAC/C,MAAO,CAAAC,MAAM,KAAM,qBAAqB,QAAAC,GAAA,IAAAC,IAAA,yBAIxC,KAAM,CAAAC,OAAO,CAAGA,CAAA,GAAM,CACpB,KAAM,CAAEC,aAAa,CAAEC,SAAS,CAAEC,UAAW,CAAC,CAAGT,UAAU,CAAC,CAAC,CAC7D,KAAM,CAAEU,OAAQ,CAAC,CAAGb,YAAY,CAAC,CAAC,CAElCI,oBAAoB,CAAC,CAAC,CAEtB,GAAI,CAACM,aAAa,EAAIC,SAAS,CAAE,CAC/B,mBAAOH,IAAA,CAACN,UAAU,GAAE,CAAC,CACvB,CAEA,GAAIW,OAAO,EAAI,CAACD,UAAU,CAAE,CAC1B,mBACEJ,IAAA,CAACP,IAAI,EAAAa,QAAA,cACHN,IAAA,CAACH,eAAe,GAAE,CAAC,CACf,CAAC,CAEX,CAEA,mBACEG,IAAA,CAACP,IAAI,EAAAa,QAAA,cACHN,IAAA,CAACF,MAAM,GAAE,CAAC,CAON,CAAC,CAEX,CAAC,CAED,cAAe,CAAAG,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module"}