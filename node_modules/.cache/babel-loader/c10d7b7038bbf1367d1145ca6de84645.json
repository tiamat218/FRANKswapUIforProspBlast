{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\frkul\\\\Documents\\\\swapUI_pancake-frontend\\\\src\\\\components\\\\EasyMde\\\\index.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport EasyMde from 'easymde';\nimport styled from 'styled-components';\nimport merge from 'lodash/merge';\nimport 'easymde/dist/easymde.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Wrapper = styled.div`\n  .EasyMDEContainer .CodeMirror {\n    background: ${({\n  theme\n}) => theme.colors.input};\n    border-color: ${({\n  theme\n}) => theme.colors.cardBorder};\n    border-bottom-left-radius: 16px;\n    border-bottom-right-radius: 16px;\n    box-shadow: ${({\n  theme\n}) => theme.shadows.inset};\n    padding: 16px;\n  }\n\n  .CodeMirror-code {\n    color: ${({\n  theme\n}) => theme.colors.text};\n  }\n\n  .editor-toolbar {\n    background: ${({\n  theme\n}) => theme.card.background};\n    border-color: ${({\n  theme\n}) => theme.colors.cardBorder};\n    border-top-left-radius: 16px;\n    border-top-right-radius: 16px;\n    color: ${({\n  theme\n}) => theme.colors.text};\n\n    a,\n    button {\n      color: ${({\n  theme\n}) => theme.colors.text};\n\n      &:hover,\n      &.active {\n        background: ${({\n  theme\n}) => theme.colors.background};\n        border: 0;\n      }\n    }\n  }\n`;\n\n/**\r\n * @see https://github.com/Ionaru/easy-markdown-editor#configuration\r\n */\n_c = Wrapper;\nconst defaultOptions = {\n  autofocus: false,\n  status: false,\n  hideIcons: ['guide', 'fullscreen', 'preview', 'side-by-side'],\n  spellChecker: false,\n  styleSelectedText: false\n};\nconst SimpleMde = ({\n  options,\n  onTextChange,\n  ...props\n}) => {\n  _s();\n  const ref = useRef();\n  const onTextChangeHandler = useRef(onTextChange);\n  useEffect(() => {\n    let simpleMde = new EasyMde(merge({\n      element: ref.current\n    }, defaultOptions, options));\n    simpleMde.codemirror.on('change', () => {\n      onTextChangeHandler.current(simpleMde.value());\n    });\n    return () => {\n      if (simpleMde) {\n        simpleMde.toTextArea();\n        simpleMde = null;\n      }\n    };\n  }, [options, onTextChangeHandler, ref]);\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n      ref: ref,\n      readOnly: true,\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n_s(SimpleMde, \"w7o6VMtSTwTphBVgQjTKodHKvrE=\");\n_c2 = SimpleMde;\nexport default SimpleMde;\nvar _c, _c2;\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"SimpleMde\");","map":{"version":3,"names":["React","useEffect","useRef","EasyMde","styled","merge","jsxDEV","_jsxDEV","Wrapper","div","theme","colors","input","cardBorder","shadows","inset","text","card","background","_c","defaultOptions","autofocus","status","hideIcons","spellChecker","styleSelectedText","SimpleMde","options","onTextChange","props","_s","ref","onTextChangeHandler","simpleMde","element","current","codemirror","on","value","toTextArea","children","readOnly","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["C:/Users/frkul/Documents/swapUI_pancake-frontend/src/components/EasyMde/index.tsx"],"sourcesContent":["import React, { TextareaHTMLAttributes, useEffect, useRef } from 'react'\r\nimport EasyMde from 'easymde'\r\nimport styled from 'styled-components'\r\nimport merge from 'lodash/merge'\r\n\r\nimport 'easymde/dist/easymde.min.css'\r\n\r\ninterface SimpleMdeProps extends Omit<TextareaHTMLAttributes<HTMLTextAreaElement>, 'onChange'> {\r\n  options?: EasyMde.Options\r\n  onTextChange: (value: string) => void\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  .EasyMDEContainer .CodeMirror {\r\n    background: ${({ theme }) => theme.colors.input};\r\n    border-color: ${({ theme }) => theme.colors.cardBorder};\r\n    border-bottom-left-radius: 16px;\r\n    border-bottom-right-radius: 16px;\r\n    box-shadow: ${({ theme }) => theme.shadows.inset};\r\n    padding: 16px;\r\n  }\r\n\r\n  .CodeMirror-code {\r\n    color: ${({ theme }) => theme.colors.text};\r\n  }\r\n\r\n  .editor-toolbar {\r\n    background: ${({ theme }) => theme.card.background};\r\n    border-color: ${({ theme }) => theme.colors.cardBorder};\r\n    border-top-left-radius: 16px;\r\n    border-top-right-radius: 16px;\r\n    color: ${({ theme }) => theme.colors.text};\r\n\r\n    a,\r\n    button {\r\n      color: ${({ theme }) => theme.colors.text};\r\n\r\n      &:hover,\r\n      &.active {\r\n        background: ${({ theme }) => theme.colors.background};\r\n        border: 0;\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\n/**\r\n * @see https://github.com/Ionaru/easy-markdown-editor#configuration\r\n */\r\nconst defaultOptions: EasyMde.Options = {\r\n  autofocus: false,\r\n  status: false,\r\n  hideIcons: ['guide', 'fullscreen', 'preview', 'side-by-side'],\r\n  spellChecker: false,\r\n  styleSelectedText: false,\r\n}\r\n\r\nconst SimpleMde: React.FC<SimpleMdeProps> = ({ options, onTextChange, ...props }) => {\r\n  const ref = useRef()\r\n  const onTextChangeHandler = useRef(onTextChange)\r\n\r\n  useEffect(() => {\r\n    let simpleMde = new EasyMde(merge({ element: ref.current }, defaultOptions, options))\r\n\r\n    simpleMde.codemirror.on('change', () => {\r\n      onTextChangeHandler.current(simpleMde.value())\r\n    })\r\n\r\n    return () => {\r\n      if (simpleMde) {\r\n        simpleMde.toTextArea()\r\n        simpleMde = null\r\n      }\r\n    }\r\n  }, [options, onTextChangeHandler, ref])\r\n\r\n  return (\r\n    <Wrapper>\r\n      <textarea ref={ref} readOnly {...props} />\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default SimpleMde\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}