{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Devrim\\\\Documents\\\\FRANKswapUIforProspBlast\\\\src\\\\views\\\\Lottery\\\\components\\\\PreviousRoundCard\\\\Body.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport { CardBody, Heading, Flex, Skeleton, Text, Box, Button, useModal, CardRibbon, useMatchBreakpoints } from '@pancakeswap/uikit';\nimport { useGetUserLotteriesGraphData, useLottery } from 'state/lottery/hooks';\nimport { LotteryStatus } from 'config/constants/types';\nimport { useTranslation } from 'contexts/Localization';\nimport WinningNumbers from '../WinningNumbers';\nimport ViewTicketsModal from '../ViewTicketsModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst StyledCardBody = styled(CardBody)`\n  position: relative;\n  overflow: hidden;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n_c = StyledCardBody;\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: auto;\n\n  ${({\n  theme\n}) => theme.mediaQueries.md} {\n    grid-column-gap: 72px;\n    grid-row-gap: 36px;\n    grid-template-columns: auto 1fr;\n  }\n`;\n_c2 = Grid;\nconst StyedCardRibbon = styled(CardRibbon)`\n  right: -20px;\n  top: -20px;\n\n  ${({\n  theme\n}) => theme.mediaQueries.xs} {\n    right: -10px;\n    top: -10px;\n  }\n`;\n_c3 = StyedCardRibbon;\n\nconst PreviousRoundCardBody = ({\n  lotteryData,\n  lotteryId\n}) => {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  const {\n    currentLotteryId,\n    currentRound: {\n      status\n    }\n  } = useLottery();\n  const userLotteryData = useGetUserLotteriesGraphData();\n  const userDataForRound = userLotteryData.rounds.find(userLotteryRound => userLotteryRound.lotteryId === lotteryId);\n  const {\n    isLg,\n    isXl\n  } = useMatchBreakpoints();\n  const isDesktop = isLg || isXl;\n  const currentLotteryIdAsInt = parseInt(currentLotteryId);\n  const mostRecentFinishedRoundId = status === LotteryStatus.CLAIMABLE ? currentLotteryIdAsInt : currentLotteryIdAsInt - 1;\n  const isLatestRound = mostRecentFinishedRoundId.toString() === lotteryId;\n  const [onPresentViewTicketsModal] = useModal( /*#__PURE__*/_jsxDEV(ViewTicketsModal, {\n    roundId: lotteryId,\n    roundStatus: lotteryData === null || lotteryData === void 0 ? void 0 : lotteryData.status\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(StyledCardBody, {\n    children: [isLatestRound && /*#__PURE__*/_jsxDEV(StyedCardRibbon, {\n      text: t('Latest')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      children: [/*#__PURE__*/_jsxDEV(Flex, {\n        justifyContent: ['center', null, null, 'flex-start'],\n        children: /*#__PURE__*/_jsxDEV(Heading, {\n          mb: \"24px\",\n          children: t('Winning Number')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        maxWidth: ['240px', null, null, '100%'],\n        justifyContent: ['center', null, null, 'flex-start'],\n        children: lotteryData ? /*#__PURE__*/_jsxDEV(WinningNumbers, {\n          rotateText: isDesktop || false,\n          number: lotteryData === null || lotteryData === void 0 ? void 0 : lotteryData.finalNumber.toString(),\n          mr: [null, null, null, '32px'],\n          size: \"100%\",\n          fontSize: isDesktop ? '42px' : '16px'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Skeleton, {\n          width: ['240px', null, null, '450px'],\n          height: ['34px', null, null, '71px'],\n          mr: [null, null, null, '32px']\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), userDataForRound && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          display: ['none', null, null, 'flex'],\n          children: /*#__PURE__*/_jsxDEV(Heading, {\n            children: t('Your tickets')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Flex, {\n          flexDirection: \"column\",\n          mr: [null, null, null, '24px'],\n          alignItems: ['center', null, null, 'flex-start'],\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            mt: ['32px', null, null, 0],\n            children: [/*#__PURE__*/_jsxDEV(Text, {\n              display: \"inline\",\n              children: [t('You had'), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Text, {\n              display: \"inline\",\n              bold: true,\n              children: [userDataForRound.totalTickets, \" \", t('tickets'), ' ']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Text, {\n              display: \"inline\",\n              children: t('this round')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: onPresentViewTicketsModal,\n            height: \"auto\",\n            width: \"fit-content\",\n            p: \"0\",\n            variant: \"text\",\n            scale: \"sm\",\n            children: t('View your tickets')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PreviousRoundCardBody, \"4wr3mNMO092YAUTbh5x1g+SzrNI=\", false, function () {\n  return [useTranslation, useLottery, useGetUserLotteriesGraphData, useMatchBreakpoints, useModal];\n});\n\n_c4 = PreviousRoundCardBody;\nexport default PreviousRoundCardBody;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"StyledCardBody\");\n$RefreshReg$(_c2, \"Grid\");\n$RefreshReg$(_c3, \"StyedCardRibbon\");\n$RefreshReg$(_c4, \"PreviousRoundCardBody\");","map":{"version":3,"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/views/Lottery/components/PreviousRoundCard/Body.tsx"],"names":["React","styled","CardBody","Heading","Flex","Skeleton","Text","Box","Button","useModal","CardRibbon","useMatchBreakpoints","useGetUserLotteriesGraphData","useLottery","LotteryStatus","useTranslation","WinningNumbers","ViewTicketsModal","StyledCardBody","Grid","div","theme","mediaQueries","md","StyedCardRibbon","xs","PreviousRoundCardBody","lotteryData","lotteryId","t","currentLotteryId","currentRound","status","userLotteryData","userDataForRound","rounds","find","userLotteryRound","isLg","isXl","isDesktop","currentLotteryIdAsInt","parseInt","mostRecentFinishedRoundId","CLAIMABLE","isLatestRound","toString","onPresentViewTicketsModal","finalNumber","totalTickets"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\nimport {\r\n  CardBody,\r\n  Heading,\r\n  Flex,\r\n  Skeleton,\r\n  Text,\r\n  Box,\r\n  Button,\r\n  useModal,\r\n  CardRibbon,\r\n  useMatchBreakpoints,\r\n} from '@pancakeswap/uikit'\r\nimport { LotteryRound } from 'state/types'\r\nimport { useGetUserLotteriesGraphData, useLottery } from 'state/lottery/hooks'\r\nimport { LotteryStatus } from 'config/constants/types'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport WinningNumbers from '../WinningNumbers'\r\nimport ViewTicketsModal from '../ViewTicketsModal'\r\n\r\nconst StyledCardBody = styled(CardBody)`\r\n  position: relative;\r\n  overflow: hidden;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`\r\nconst Grid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: auto;\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    grid-column-gap: 72px;\r\n    grid-row-gap: 36px;\r\n    grid-template-columns: auto 1fr;\r\n  }\r\n`\r\n\r\nconst StyedCardRibbon = styled(CardRibbon)`\r\n  right: -20px;\r\n  top: -20px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.xs} {\r\n    right: -10px;\r\n    top: -10px;\r\n  }\r\n`\r\n\r\nconst PreviousRoundCardBody: React.FC<{ lotteryData: LotteryRound; lotteryId: string }> = ({\r\n  lotteryData,\r\n  lotteryId,\r\n}) => {\r\n  const { t } = useTranslation()\r\n  const {\r\n    currentLotteryId,\r\n    currentRound: { status },\r\n  } = useLottery()\r\n  const userLotteryData = useGetUserLotteriesGraphData()\r\n  const userDataForRound = userLotteryData.rounds.find((userLotteryRound) => userLotteryRound.lotteryId === lotteryId)\r\n  const { isLg, isXl } = useMatchBreakpoints()\r\n  const isDesktop = isLg || isXl\r\n\r\n  const currentLotteryIdAsInt = parseInt(currentLotteryId)\r\n  const mostRecentFinishedRoundId =\r\n    status === LotteryStatus.CLAIMABLE ? currentLotteryIdAsInt : currentLotteryIdAsInt - 1\r\n  const isLatestRound = mostRecentFinishedRoundId.toString() === lotteryId\r\n\r\n  const [onPresentViewTicketsModal] = useModal(\r\n    <ViewTicketsModal roundId={lotteryId} roundStatus={lotteryData?.status} />,\r\n  )\r\n\r\n  return (\r\n    <StyledCardBody>\r\n      {isLatestRound && <StyedCardRibbon text={t('Latest')} />}\r\n      <Grid>\r\n        <Flex justifyContent={['center', null, null, 'flex-start']}>\r\n          <Heading mb=\"24px\">{t('Winning Number')}</Heading>\r\n        </Flex>\r\n        <Flex maxWidth={['240px', null, null, '100%']} justifyContent={['center', null, null, 'flex-start']}>\r\n          {lotteryData ? (\r\n            <WinningNumbers\r\n              rotateText={isDesktop || false}\r\n              number={lotteryData?.finalNumber.toString()}\r\n              mr={[null, null, null, '32px']}\r\n              size=\"100%\"\r\n              fontSize={isDesktop ? '42px' : '16px'}\r\n            />\r\n          ) : (\r\n            <Skeleton\r\n              width={['240px', null, null, '450px']}\r\n              height={['34px', null, null, '71px']}\r\n              mr={[null, null, null, '32px']}\r\n            />\r\n          )}\r\n        </Flex>\r\n        {userDataForRound && (\r\n          <>\r\n            <Box display={['none', null, null, 'flex']}>\r\n              <Heading>{t('Your tickets')}</Heading>\r\n            </Box>\r\n            <Flex\r\n              flexDirection=\"column\"\r\n              mr={[null, null, null, '24px']}\r\n              alignItems={['center', null, null, 'flex-start']}\r\n            >\r\n              <Box mt={['32px', null, null, 0]}>\r\n                <Text display=\"inline\">{t('You had')} </Text>\r\n                <Text display=\"inline\" bold>\r\n                  {userDataForRound.totalTickets} {t('tickets')}{' '}\r\n                </Text>\r\n                <Text display=\"inline\">{t('this round')}</Text>\r\n              </Box>\r\n              <Button\r\n                onClick={onPresentViewTicketsModal}\r\n                height=\"auto\"\r\n                width=\"fit-content\"\r\n                p=\"0\"\r\n                variant=\"text\"\r\n                scale=\"sm\"\r\n              >\r\n                {t('View your tickets')}\r\n              </Button>\r\n            </Flex>\r\n          </>\r\n        )}\r\n      </Grid>\r\n    </StyledCardBody>\r\n  )\r\n}\r\n\r\nexport default PreviousRoundCardBody\r\n"]},"metadata":{},"sourceType":"module"}