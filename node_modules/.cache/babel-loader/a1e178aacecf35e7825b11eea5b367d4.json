{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport BigNumber from 'bignumber.js';\nimport { useWeb3React } from '@web3-react/core';\nimport { BIG_ZERO } from 'utils/bigNumber'; // Retrieve IFO allowance\n\nconst useIfoAllowance = (tokenContract, spenderAddress, dependency) => {\n  _s();\n\n  const {\n    account\n  } = useWeb3React();\n  const [allowance, setAllowance] = useState(BIG_ZERO);\n  useEffect(() => {\n    const fetch = async () => {\n      try {\n        const res = await tokenContract.allowance(account, spenderAddress);\n        setAllowance(new BigNumber(res.toString()));\n      } catch (e) {\n        console.error(e);\n      }\n    };\n\n    if (account) {\n      fetch();\n    }\n  }, [account, spenderAddress, tokenContract, dependency]);\n  return allowance;\n};\n\n_s(useIfoAllowance, \"8jzSUYMxhHTA6ks9WnH2MehwC54=\", false, function () {\n  return [useWeb3React];\n});\n\nexport default useIfoAllowance;","map":{"version":3,"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/views/Ifos/hooks/useIfoAllowance.ts"],"names":["useEffect","useState","BigNumber","useWeb3React","BIG_ZERO","useIfoAllowance","tokenContract","spenderAddress","dependency","account","allowance","setAllowance","fetch","res","toString","e","console","error"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,SAASC,YAAT,QAA6B,kBAA7B;AAEA,SAASC,QAAT,QAAyB,iBAAzB,C,CAEA;;AACA,MAAMC,eAAe,GAAG,CAACC,aAAD,EAA0BC,cAA1B,EAAkDC,UAAlD,KAAkF;AAAA;;AACxG,QAAM;AAAEC,IAAAA;AAAF,MAAcN,YAAY,EAAhC;AACA,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAACG,QAAD,CAA1C;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMY,KAAK,GAAG,YAAY;AACxB,UAAI;AACF,cAAMC,GAAG,GAAG,MAAMP,aAAa,CAACI,SAAd,CAAwBD,OAAxB,EAAiCF,cAAjC,CAAlB;AACAI,QAAAA,YAAY,CAAC,IAAIT,SAAJ,CAAcW,GAAG,CAACC,QAAJ,EAAd,CAAD,CAAZ;AACD,OAHD,CAGE,OAAOC,CAAP,EAAU;AACVC,QAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACD;AACF,KAPD;;AASA,QAAIN,OAAJ,EAAa;AACXG,MAAAA,KAAK;AACN;AACF,GAbQ,EAaN,CAACH,OAAD,EAAUF,cAAV,EAA0BD,aAA1B,EAAyCE,UAAzC,CAbM,CAAT;AAeA,SAAOE,SAAP;AACD,CApBD;;GAAML,e;UACgBF,Y;;;AAqBtB,eAAeE,eAAf","sourcesContent":["import { useEffect, useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { Contract } from 'ethers'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\n\r\n// Retrieve IFO allowance\r\nconst useIfoAllowance = (tokenContract: Contract, spenderAddress: string, dependency?: any): BigNumber => {\r\n  const { account } = useWeb3React()\r\n  const [allowance, setAllowance] = useState(BIG_ZERO)\r\n\r\n  useEffect(() => {\r\n    const fetch = async () => {\r\n      try {\r\n        const res = await tokenContract.allowance(account, spenderAddress)\r\n        setAllowance(new BigNumber(res.toString()))\r\n      } catch (e) {\r\n        console.error(e)\r\n      }\r\n    }\r\n\r\n    if (account) {\r\n      fetch()\r\n    }\r\n  }, [account, spenderAddress, tokenContract, dependency])\r\n\r\n  return allowance\r\n}\r\n\r\nexport default useIfoAllowance\r\n"]},"metadata":{},"sourceType":"module"}