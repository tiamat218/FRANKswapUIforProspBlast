{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Devrim\\\\Documents\\\\swapUIforProspBlast\\\\src\\\\views\\\\Pools\\\\components\\\\PoolsTable\\\\ActionPanel\\\\Stake.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport styled from 'styled-components';\nimport BigNumber from 'bignumber.js';\nimport { Button, useModal, IconButton, AddIcon, MinusIcon, Skeleton, useTooltip, Flex, Text } from '@pancakeswap/uikit';\nimport ConnectWalletButton from 'components/ConnectWalletButton';\nimport { useWeb3React } from '@web3-react/core';\nimport { useCakeVault } from 'state/pools/hooks';\nimport Balance from 'components/Balance';\nimport { useTranslation } from 'contexts/Localization';\nimport { getBalanceNumber } from 'utils/formatBalance';\nimport { PoolCategory } from 'config/constants/types';\nimport { BIG_ZERO } from 'utils/bigNumber';\nimport { getAddress } from 'utils/addressHelpers';\nimport { useERC20 } from 'hooks/useContract';\nimport { convertSharesToCake } from 'views/Pools/helpers';\nimport { ActionContainer, ActionTitles, ActionContent } from './styles';\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal';\nimport StakeModal from '../../PoolCard/Modals/StakeModal';\nimport VaultStakeModal from '../../CakeVaultCard/VaultStakeModal';\nimport { useCheckVaultApprovalStatus, useApprovePool, useVaultApprove } from '../../../hooks/useApprove';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst IconButtonWrapper = styled.div`\n  display: flex;\n`;\n_c = IconButtonWrapper;\nconst Staked = ({\n  pool,\n  userDataLoaded\n}) => {\n  _s();\n  const {\n    sousId,\n    stakingToken,\n    earningToken,\n    stakingLimit,\n    isFinished,\n    poolCategory,\n    userData,\n    stakingTokenPrice,\n    isAutoVault\n  } = pool;\n  const {\n    t\n  } = useTranslation();\n  const {\n    account\n  } = useWeb3React();\n  const stakingTokenContract = useERC20(stakingToken.address ? getAddress(stakingToken.address) : '');\n  const {\n    handleApprove: handlePoolApprove,\n    requestedApproval: requestedPoolApproval\n  } = useApprovePool(stakingTokenContract, sousId, earningToken.symbol);\n  const {\n    isVaultApproved,\n    setLastUpdated\n  } = useCheckVaultApprovalStatus();\n  const {\n    handleApprove: handleVaultApprove,\n    requestedApproval: requestedVaultApproval\n  } = useVaultApprove(setLastUpdated);\n  const handleApprove = isAutoVault ? handleVaultApprove : handlePoolApprove;\n  const requestedApproval = isAutoVault ? requestedVaultApproval : requestedPoolApproval;\n  const isBnbPool = poolCategory === PoolCategory.BINANCE;\n  const allowance = (userData === null || userData === void 0 ? void 0 : userData.allowance) ? new BigNumber(userData.allowance) : BIG_ZERO;\n  const stakedBalance = (userData === null || userData === void 0 ? void 0 : userData.stakedBalance) ? new BigNumber(userData.stakedBalance) : BIG_ZERO;\n  const isNotVaultAndHasStake = !isAutoVault && stakedBalance.gt(0);\n  const stakingTokenBalance = (userData === null || userData === void 0 ? void 0 : userData.stakingTokenBalance) ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO;\n  const stakedTokenBalance = getBalanceNumber(stakedBalance, stakingToken.decimals);\n  const stakedTokenDollarBalance = getBalanceNumber(stakedBalance.multipliedBy(stakingTokenPrice), stakingToken.decimals);\n  const {\n    userData: {\n      userShares\n    },\n    pricePerFullShare\n  } = useCakeVault();\n  const {\n    cakeAsBigNumber,\n    cakeAsNumberBalance\n  } = convertSharesToCake(userShares, pricePerFullShare);\n  const hasSharesStaked = userShares && userShares.gt(0);\n  const isVaultWithShares = isAutoVault && hasSharesStaked;\n  const stakedAutoDollarValue = getBalanceNumber(cakeAsBigNumber.multipliedBy(stakingTokenPrice), stakingToken.decimals);\n  const needsApproval = isAutoVault ? !isVaultApproved : !allowance.gt(0) && !isBnbPool;\n  const [onPresentTokenRequired] = useModal( /*#__PURE__*/_jsxDEV(NotEnoughTokensModal, {\n    tokenSymbol: stakingToken.symbol\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 45\n  }, this));\n  const [onPresentStake] = useModal( /*#__PURE__*/_jsxDEV(StakeModal, {\n    isBnbPool: isBnbPool,\n    pool: pool,\n    stakingTokenBalance: stakingTokenBalance,\n    stakingTokenPrice: stakingTokenPrice\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this));\n  const [onPresentVaultStake] = useModal( /*#__PURE__*/_jsxDEV(VaultStakeModal, {\n    stakingMax: stakingTokenBalance,\n    pool: pool\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 42\n  }, this));\n  const [onPresentUnstake] = useModal( /*#__PURE__*/_jsxDEV(StakeModal, {\n    stakingTokenBalance: stakingTokenBalance,\n    isBnbPool: isBnbPool,\n    pool: pool,\n    stakingTokenPrice: stakingTokenPrice,\n    isRemovingStake: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this));\n  const [onPresentVaultUnstake] = useModal( /*#__PURE__*/_jsxDEV(VaultStakeModal, {\n    stakingMax: cakeAsBigNumber,\n    pool: pool,\n    isRemovingStake: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 44\n  }, this));\n  const onStake = () => {\n    if (isAutoVault) {\n      onPresentVaultStake();\n    } else {\n      onPresentStake();\n    }\n  };\n  const onUnstake = () => {\n    if (isAutoVault) {\n      onPresentVaultUnstake();\n    } else {\n      onPresentUnstake();\n    }\n  };\n  const {\n    targetRef,\n    tooltip,\n    tooltipVisible\n  } = useTooltip(t(\"You've already staked the maximum amount you can stake in this pool!\"), {\n    placement: 'bottom'\n  });\n  const reachStakingLimit = stakingLimit.gt(0) && userData.stakedBalance.gte(stakingLimit);\n  if (!account) {\n    return /*#__PURE__*/_jsxDEV(ActionContainer, {\n      children: [/*#__PURE__*/_jsxDEV(ActionTitles, {\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"12px\",\n          bold: true,\n          color: \"textSubtle\",\n          as: \"span\",\n          textTransform: \"uppercase\",\n          children: t('Start staking')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ActionContent, {\n        children: /*#__PURE__*/_jsxDEV(ConnectWalletButton, {\n          width: \"100%\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this);\n  }\n  if (!userDataLoaded) {\n    return /*#__PURE__*/_jsxDEV(ActionContainer, {\n      children: [/*#__PURE__*/_jsxDEV(ActionTitles, {\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"12px\",\n          bold: true,\n          color: \"textSubtle\",\n          as: \"span\",\n          textTransform: \"uppercase\",\n          children: t('Start staking')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ActionContent, {\n        children: /*#__PURE__*/_jsxDEV(Skeleton, {\n          width: 180,\n          height: \"32px\",\n          marginTop: 14\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this);\n  }\n  if (needsApproval) {\n    return /*#__PURE__*/_jsxDEV(ActionContainer, {\n      children: [/*#__PURE__*/_jsxDEV(ActionTitles, {\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"12px\",\n          bold: true,\n          color: \"textSubtle\",\n          as: \"span\",\n          textTransform: \"uppercase\",\n          children: t('Enable pool')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ActionContent, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          width: \"100%\",\n          disabled: requestedApproval,\n          onClick: handleApprove,\n          variant: \"secondary\",\n          children: t('Enable')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Wallet connected, user data loaded and approved\n  if (isNotVaultAndHasStake || isVaultWithShares) {\n    return /*#__PURE__*/_jsxDEV(ActionContainer, {\n      children: [/*#__PURE__*/_jsxDEV(ActionTitles, {\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"12px\",\n          bold: true,\n          color: \"secondary\",\n          as: \"span\",\n          textTransform: \"uppercase\",\n          children: [stakingToken.symbol, ' ']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"12px\",\n          bold: true,\n          color: \"textSubtle\",\n          as: \"span\",\n          textTransform: \"uppercase\",\n          children: isAutoVault ? t('Staked (compounding)') : t('Staked')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ActionContent, {\n        children: [/*#__PURE__*/_jsxDEV(Flex, {\n          flex: \"1\",\n          pt: \"16px\",\n          flexDirection: \"column\",\n          alignSelf: \"flex-start\",\n          children: [/*#__PURE__*/_jsxDEV(Balance, {\n            lineHeight: \"1\",\n            bold: true,\n            fontSize: \"20px\",\n            decimals: 5,\n            value: isAutoVault ? cakeAsNumberBalance : stakedTokenBalance\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Balance, {\n            fontSize: \"12px\",\n            display: \"inline\",\n            color: \"textSubtle\",\n            decimals: 2,\n            value: isAutoVault ? stakedAutoDollarValue : stakedTokenDollarBalance,\n            unit: \" USD\",\n            prefix: \"~\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IconButtonWrapper, {\n          children: [/*#__PURE__*/_jsxDEV(IconButton, {\n            variant: \"secondary\",\n            onClick: onUnstake,\n            mr: \"6px\",\n            children: /*#__PURE__*/_jsxDEV(MinusIcon, {\n              color: \"primary\",\n              width: \"14px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 13\n          }, this), reachStakingLimit ? /*#__PURE__*/_jsxDEV(\"span\", {\n            ref: targetRef,\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              variant: \"secondary\",\n              disabled: true,\n              children: /*#__PURE__*/_jsxDEV(AddIcon, {\n                color: \"textDisabled\",\n                width: \"24px\",\n                height: \"24px\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(IconButton, {\n            variant: \"secondary\",\n            onClick: stakingTokenBalance.gt(0) ? onStake : onPresentTokenRequired,\n            disabled: isFinished,\n            children: /*#__PURE__*/_jsxDEV(AddIcon, {\n              color: \"primary\",\n              width: \"14px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this), tooltipVisible && tooltip]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(ActionContainer, {\n    children: [/*#__PURE__*/_jsxDEV(ActionTitles, {\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        fontSize: \"12px\",\n        bold: true,\n        color: \"secondary\",\n        as: \"span\",\n        textTransform: \"uppercase\",\n        children: [t('Stake'), ' ']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        fontSize: \"12px\",\n        bold: true,\n        color: \"textSubtle\",\n        as: \"span\",\n        textTransform: \"uppercase\",\n        children: stakingToken.symbol\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ActionContent, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        width: \"100%\",\n        onClick: stakingTokenBalance.gt(0) ? onStake : onPresentTokenRequired,\n        variant: \"secondary\",\n        disabled: isFinished,\n        children: t('Stake')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 239,\n    columnNumber: 5\n  }, this);\n};\n_s(Staked, \"Kuvd6+42Se8HzWOe9qHlAhFLE+8=\", false, function () {\n  return [useTranslation, useWeb3React, useERC20, useApprovePool, useCheckVaultApprovalStatus, useVaultApprove, useCakeVault, useModal, useModal, useModal, useModal, useModal, useTooltip];\n});\n_c2 = Staked;\nexport default Staked;\nvar _c, _c2;\n$RefreshReg$(_c, \"IconButtonWrapper\");\n$RefreshReg$(_c2, \"Staked\");","map":{"version":3,"names":["React","styled","BigNumber","Button","useModal","IconButton","AddIcon","MinusIcon","Skeleton","useTooltip","Flex","Text","ConnectWalletButton","useWeb3React","useCakeVault","Balance","useTranslation","getBalanceNumber","PoolCategory","BIG_ZERO","getAddress","useERC20","convertSharesToCake","ActionContainer","ActionTitles","ActionContent","NotEnoughTokensModal","StakeModal","VaultStakeModal","useCheckVaultApprovalStatus","useApprovePool","useVaultApprove","jsxDEV","_jsxDEV","IconButtonWrapper","div","_c","Staked","pool","userDataLoaded","_s","sousId","stakingToken","earningToken","stakingLimit","isFinished","poolCategory","userData","stakingTokenPrice","isAutoVault","t","account","stakingTokenContract","address","handleApprove","handlePoolApprove","requestedApproval","requestedPoolApproval","symbol","isVaultApproved","setLastUpdated","handleVaultApprove","requestedVaultApproval","isBnbPool","BINANCE","allowance","stakedBalance","isNotVaultAndHasStake","gt","stakingTokenBalance","stakedTokenBalance","decimals","stakedTokenDollarBalance","multipliedBy","userShares","pricePerFullShare","cakeAsBigNumber","cakeAsNumberBalance","hasSharesStaked","isVaultWithShares","stakedAutoDollarValue","needsApproval","onPresentTokenRequired","tokenSymbol","fileName","_jsxFileName","lineNumber","columnNumber","onPresentStake","onPresentVaultStake","stakingMax","onPresentUnstake","isRemovingStake","onPresentVaultUnstake","onStake","onUnstake","targetRef","tooltip","tooltipVisible","placement","reachStakingLimit","gte","children","fontSize","bold","color","as","textTransform","width","height","marginTop","disabled","onClick","variant","flex","pt","flexDirection","alignSelf","lineHeight","value","display","unit","prefix","mr","ref","_c2","$RefreshReg$"],"sources":["C:/Users/Devrim/Documents/swapUIforProspBlast/src/views/Pools/components/PoolsTable/ActionPanel/Stake.tsx"],"sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Button, useModal, IconButton, AddIcon, MinusIcon, Skeleton, useTooltip, Flex, Text } from '@pancakeswap/uikit'\r\nimport ConnectWalletButton from 'components/ConnectWalletButton'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useCakeVault } from 'state/pools/hooks'\r\nimport { Pool } from 'state/types'\r\nimport Balance from 'components/Balance'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { PoolCategory } from 'config/constants/types'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\nimport { getAddress } from 'utils/addressHelpers'\r\nimport { useERC20 } from 'hooks/useContract'\r\nimport { convertSharesToCake } from 'views/Pools/helpers'\r\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\r\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\r\nimport StakeModal from '../../PoolCard/Modals/StakeModal'\r\nimport VaultStakeModal from '../../CakeVaultCard/VaultStakeModal'\r\nimport { useCheckVaultApprovalStatus, useApprovePool, useVaultApprove } from '../../../hooks/useApprove'\r\n\r\nconst IconButtonWrapper = styled.div`\r\n  display: flex;\r\n`\r\n\r\ninterface StackedActionProps {\r\n  pool: Pool\r\n  userDataLoaded: boolean\r\n}\r\n\r\nconst Staked: React.FunctionComponent<StackedActionProps> = ({ pool, userDataLoaded }) => {\r\n  const {\r\n    sousId,\r\n    stakingToken,\r\n    earningToken,\r\n    stakingLimit,\r\n    isFinished,\r\n    poolCategory,\r\n    userData,\r\n    stakingTokenPrice,\r\n    isAutoVault,\r\n  } = pool\r\n  const { t } = useTranslation()\r\n  const { account } = useWeb3React()\r\n\r\n  const stakingTokenContract = useERC20(stakingToken.address ? getAddress(stakingToken.address) : '')\r\n  const { handleApprove: handlePoolApprove, requestedApproval: requestedPoolApproval } = useApprovePool(\r\n    stakingTokenContract,\r\n    sousId,\r\n    earningToken.symbol,\r\n  )\r\n\r\n  const { isVaultApproved, setLastUpdated } = useCheckVaultApprovalStatus()\r\n  const { handleApprove: handleVaultApprove, requestedApproval: requestedVaultApproval } =\r\n    useVaultApprove(setLastUpdated)\r\n\r\n  const handleApprove = isAutoVault ? handleVaultApprove : handlePoolApprove\r\n  const requestedApproval = isAutoVault ? requestedVaultApproval : requestedPoolApproval\r\n\r\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\r\n  const allowance = userData?.allowance ? new BigNumber(userData.allowance) : BIG_ZERO\r\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\r\n  const isNotVaultAndHasStake = !isAutoVault && stakedBalance.gt(0)\r\n\r\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\r\n\r\n  const stakedTokenBalance = getBalanceNumber(stakedBalance, stakingToken.decimals)\r\n  const stakedTokenDollarBalance = getBalanceNumber(\r\n    stakedBalance.multipliedBy(stakingTokenPrice),\r\n    stakingToken.decimals,\r\n  )\r\n\r\n  const {\r\n    userData: { userShares },\r\n    pricePerFullShare,\r\n  } = useCakeVault()\r\n\r\n  const { cakeAsBigNumber, cakeAsNumberBalance } = convertSharesToCake(userShares, pricePerFullShare)\r\n  const hasSharesStaked = userShares && userShares.gt(0)\r\n  const isVaultWithShares = isAutoVault && hasSharesStaked\r\n  const stakedAutoDollarValue = getBalanceNumber(cakeAsBigNumber.multipliedBy(stakingTokenPrice), stakingToken.decimals)\r\n\r\n  const needsApproval = isAutoVault ? !isVaultApproved : !allowance.gt(0) && !isBnbPool\r\n\r\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\r\n\r\n  const [onPresentStake] = useModal(\r\n    <StakeModal\r\n      isBnbPool={isBnbPool}\r\n      pool={pool}\r\n      stakingTokenBalance={stakingTokenBalance}\r\n      stakingTokenPrice={stakingTokenPrice}\r\n    />,\r\n  )\r\n\r\n  const [onPresentVaultStake] = useModal(<VaultStakeModal stakingMax={stakingTokenBalance} pool={pool} />)\r\n\r\n  const [onPresentUnstake] = useModal(\r\n    <StakeModal\r\n      stakingTokenBalance={stakingTokenBalance}\r\n      isBnbPool={isBnbPool}\r\n      pool={pool}\r\n      stakingTokenPrice={stakingTokenPrice}\r\n      isRemovingStake\r\n    />,\r\n  )\r\n\r\n  const [onPresentVaultUnstake] = useModal(<VaultStakeModal stakingMax={cakeAsBigNumber} pool={pool} isRemovingStake />)\r\n\r\n  const onStake = () => {\r\n    if (isAutoVault) {\r\n      onPresentVaultStake()\r\n    } else {\r\n      onPresentStake()\r\n    }\r\n  }\r\n\r\n  const onUnstake = () => {\r\n    if (isAutoVault) {\r\n      onPresentVaultUnstake()\r\n    } else {\r\n      onPresentUnstake()\r\n    }\r\n  }\r\n\r\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\r\n    t(\"You've already staked the maximum amount you can stake in this pool!\"),\r\n    { placement: 'bottom' },\r\n  )\r\n\r\n  const reachStakingLimit = stakingLimit.gt(0) && userData.stakedBalance.gte(stakingLimit)\r\n\r\n  if (!account) {\r\n    return (\r\n      <ActionContainer>\r\n        <ActionTitles>\r\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\r\n            {t('Start staking')}\r\n          </Text>\r\n        </ActionTitles>\r\n        <ActionContent>\r\n          <ConnectWalletButton width=\"100%\" />\r\n        </ActionContent>\r\n      </ActionContainer>\r\n    )\r\n  }\r\n\r\n  if (!userDataLoaded) {\r\n    return (\r\n      <ActionContainer>\r\n        <ActionTitles>\r\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\r\n            {t('Start staking')}\r\n          </Text>\r\n        </ActionTitles>\r\n        <ActionContent>\r\n          <Skeleton width={180} height=\"32px\" marginTop={14} />\r\n        </ActionContent>\r\n      </ActionContainer>\r\n    )\r\n  }\r\n\r\n  if (needsApproval) {\r\n    return (\r\n      <ActionContainer>\r\n        <ActionTitles>\r\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\r\n            {t('Enable pool')}\r\n          </Text>\r\n        </ActionTitles>\r\n        <ActionContent>\r\n          <Button width=\"100%\" disabled={requestedApproval} onClick={handleApprove} variant=\"secondary\">\r\n            {t('Enable')}\r\n          </Button>\r\n        </ActionContent>\r\n      </ActionContainer>\r\n    )\r\n  }\r\n\r\n  // Wallet connected, user data loaded and approved\r\n  if (isNotVaultAndHasStake || isVaultWithShares) {\r\n    return (\r\n      <ActionContainer>\r\n        <ActionTitles>\r\n          <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\r\n            {stakingToken.symbol}{' '}\r\n          </Text>\r\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\r\n            {isAutoVault ? t('Staked (compounding)') : t('Staked')}\r\n          </Text>\r\n        </ActionTitles>\r\n        <ActionContent>\r\n          <Flex flex=\"1\" pt=\"16px\" flexDirection=\"column\" alignSelf=\"flex-start\">\r\n            <Balance\r\n              lineHeight=\"1\"\r\n              bold\r\n              fontSize=\"20px\"\r\n              decimals={5}\r\n              value={isAutoVault ? cakeAsNumberBalance : stakedTokenBalance}\r\n            />\r\n            <Balance\r\n              fontSize=\"12px\"\r\n              display=\"inline\"\r\n              color=\"textSubtle\"\r\n              decimals={2}\r\n              value={isAutoVault ? stakedAutoDollarValue : stakedTokenDollarBalance}\r\n              unit=\" USD\"\r\n              prefix=\"~\"\r\n            />\r\n          </Flex>\r\n          <IconButtonWrapper>\r\n            <IconButton variant=\"secondary\" onClick={onUnstake} mr=\"6px\">\r\n              <MinusIcon color=\"primary\" width=\"14px\" />\r\n            </IconButton>\r\n            {reachStakingLimit ? (\r\n              <span ref={targetRef}>\r\n                <IconButton variant=\"secondary\" disabled>\r\n                  <AddIcon color=\"textDisabled\" width=\"24px\" height=\"24px\" />\r\n                </IconButton>\r\n              </span>\r\n            ) : (\r\n              <IconButton\r\n                variant=\"secondary\"\r\n                onClick={stakingTokenBalance.gt(0) ? onStake : onPresentTokenRequired}\r\n                disabled={isFinished}\r\n              >\r\n                <AddIcon color=\"primary\" width=\"14px\" />\r\n              </IconButton>\r\n            )}\r\n          </IconButtonWrapper>\r\n          {tooltipVisible && tooltip}\r\n        </ActionContent>\r\n      </ActionContainer>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <ActionContainer>\r\n      <ActionTitles>\r\n        <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\r\n          {t('Stake')}{' '}\r\n        </Text>\r\n        <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\r\n          {stakingToken.symbol}\r\n        </Text>\r\n      </ActionTitles>\r\n      <ActionContent>\r\n        <Button\r\n          width=\"100%\"\r\n          onClick={stakingTokenBalance.gt(0) ? onStake : onPresentTokenRequired}\r\n          variant=\"secondary\"\r\n          disabled={isFinished}\r\n        >\r\n          {t('Stake')}\r\n        </Button>\r\n      </ActionContent>\r\n    </ActionContainer>\r\n  )\r\n}\r\n\r\nexport default Staked\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAOC,SAAS,MAAM,cAAc;AACpC,SAASC,MAAM,EAAEC,QAAQ,EAAEC,UAAU,EAAEC,OAAO,EAAEC,SAAS,EAAEC,QAAQ,EAAEC,UAAU,EAAEC,IAAI,EAAEC,IAAI,QAAQ,oBAAoB;AACvH,OAAOC,mBAAmB,MAAM,gCAAgC;AAChE,SAASC,YAAY,QAAQ,kBAAkB;AAC/C,SAASC,YAAY,QAAQ,mBAAmB;AAEhD,OAAOC,OAAO,MAAM,oBAAoB;AACxC,SAASC,cAAc,QAAQ,uBAAuB;AACtD,SAASC,gBAAgB,QAAQ,qBAAqB;AACtD,SAASC,YAAY,QAAQ,wBAAwB;AACrD,SAASC,QAAQ,QAAQ,iBAAiB;AAC1C,SAASC,UAAU,QAAQ,sBAAsB;AACjD,SAASC,QAAQ,QAAQ,mBAAmB;AAC5C,SAASC,mBAAmB,QAAQ,qBAAqB;AACzD,SAASC,eAAe,EAAEC,YAAY,EAAEC,aAAa,QAAQ,UAAU;AACvE,OAAOC,oBAAoB,MAAM,4CAA4C;AAC7E,OAAOC,UAAU,MAAM,kCAAkC;AACzD,OAAOC,eAAe,MAAM,qCAAqC;AACjE,SAASC,2BAA2B,EAAEC,cAAc,EAAEC,eAAe,QAAQ,2BAA2B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAExG,MAAMC,iBAAiB,GAAGjC,MAAM,CAACkC,GAAG;AACpC;AACA,CAAC;AAAAC,EAAA,GAFKF,iBAAiB;AASvB,MAAMG,MAAmD,GAAGA,CAAC;EAAEC,IAAI;EAAEC;AAAe,CAAC,KAAK;EAAAC,EAAA;EACxF,MAAM;IACJC,MAAM;IACNC,YAAY;IACZC,YAAY;IACZC,YAAY;IACZC,UAAU;IACVC,YAAY;IACZC,QAAQ;IACRC,iBAAiB;IACjBC;EACF,CAAC,GAAGX,IAAI;EACR,MAAM;IAAEY;EAAE,CAAC,GAAGlC,cAAc,CAAC,CAAC;EAC9B,MAAM;IAAEmC;EAAQ,CAAC,GAAGtC,YAAY,CAAC,CAAC;EAElC,MAAMuC,oBAAoB,GAAG/B,QAAQ,CAACqB,YAAY,CAACW,OAAO,GAAGjC,UAAU,CAACsB,YAAY,CAACW,OAAO,CAAC,GAAG,EAAE,CAAC;EACnG,MAAM;IAAEC,aAAa,EAAEC,iBAAiB;IAAEC,iBAAiB,EAAEC;EAAsB,CAAC,GAAG3B,cAAc,CACnGsB,oBAAoB,EACpBX,MAAM,EACNE,YAAY,CAACe,MACf,CAAC;EAED,MAAM;IAAEC,eAAe;IAAEC;EAAe,CAAC,GAAG/B,2BAA2B,CAAC,CAAC;EACzE,MAAM;IAAEyB,aAAa,EAAEO,kBAAkB;IAAEL,iBAAiB,EAAEM;EAAuB,CAAC,GACpF/B,eAAe,CAAC6B,cAAc,CAAC;EAEjC,MAAMN,aAAa,GAAGL,WAAW,GAAGY,kBAAkB,GAAGN,iBAAiB;EAC1E,MAAMC,iBAAiB,GAAGP,WAAW,GAAGa,sBAAsB,GAAGL,qBAAqB;EAEtF,MAAMM,SAAS,GAAGjB,YAAY,KAAK5B,YAAY,CAAC8C,OAAO;EACvD,MAAMC,SAAS,GAAG,CAAAlB,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEkB,SAAS,IAAG,IAAI/D,SAAS,CAAC6C,QAAQ,CAACkB,SAAS,CAAC,GAAG9C,QAAQ;EACpF,MAAM+C,aAAa,GAAG,CAAAnB,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEmB,aAAa,IAAG,IAAIhE,SAAS,CAAC6C,QAAQ,CAACmB,aAAa,CAAC,GAAG/C,QAAQ;EAChG,MAAMgD,qBAAqB,GAAG,CAAClB,WAAW,IAAIiB,aAAa,CAACE,EAAE,CAAC,CAAC,CAAC;EAEjE,MAAMC,mBAAmB,GAAG,CAAAtB,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEsB,mBAAmB,IAAG,IAAInE,SAAS,CAAC6C,QAAQ,CAACsB,mBAAmB,CAAC,GAAGlD,QAAQ;EAElH,MAAMmD,kBAAkB,GAAGrD,gBAAgB,CAACiD,aAAa,EAAExB,YAAY,CAAC6B,QAAQ,CAAC;EACjF,MAAMC,wBAAwB,GAAGvD,gBAAgB,CAC/CiD,aAAa,CAACO,YAAY,CAACzB,iBAAiB,CAAC,EAC7CN,YAAY,CAAC6B,QACf,CAAC;EAED,MAAM;IACJxB,QAAQ,EAAE;MAAE2B;IAAW,CAAC;IACxBC;EACF,CAAC,GAAG7D,YAAY,CAAC,CAAC;EAElB,MAAM;IAAE8D,eAAe;IAAEC;EAAoB,CAAC,GAAGvD,mBAAmB,CAACoD,UAAU,EAAEC,iBAAiB,CAAC;EACnG,MAAMG,eAAe,GAAGJ,UAAU,IAAIA,UAAU,CAACN,EAAE,CAAC,CAAC,CAAC;EACtD,MAAMW,iBAAiB,GAAG9B,WAAW,IAAI6B,eAAe;EACxD,MAAME,qBAAqB,GAAG/D,gBAAgB,CAAC2D,eAAe,CAACH,YAAY,CAACzB,iBAAiB,CAAC,EAAEN,YAAY,CAAC6B,QAAQ,CAAC;EAEtH,MAAMU,aAAa,GAAGhC,WAAW,GAAG,CAACU,eAAe,GAAG,CAACM,SAAS,CAACG,EAAE,CAAC,CAAC,CAAC,IAAI,CAACL,SAAS;EAErF,MAAM,CAACmB,sBAAsB,CAAC,GAAG9E,QAAQ,eAAC6B,OAAA,CAACP,oBAAoB;IAACyD,WAAW,EAAEzC,YAAY,CAACgB;EAAO;IAAA0B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,CAAC;EAErG,MAAM,CAACC,cAAc,CAAC,GAAGpF,QAAQ,eAC/B6B,OAAA,CAACN,UAAU;IACToC,SAAS,EAAEA,SAAU;IACrBzB,IAAI,EAAEA,IAAK;IACX+B,mBAAmB,EAAEA,mBAAoB;IACzCrB,iBAAiB,EAAEA;EAAkB;IAAAoC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtC,CACH,CAAC;EAED,MAAM,CAACE,mBAAmB,CAAC,GAAGrF,QAAQ,eAAC6B,OAAA,CAACL,eAAe;IAAC8D,UAAU,EAAErB,mBAAoB;IAAC/B,IAAI,EAAEA;EAAK;IAAA8C,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,CAAC;EAExG,MAAM,CAACI,gBAAgB,CAAC,GAAGvF,QAAQ,eACjC6B,OAAA,CAACN,UAAU;IACT0C,mBAAmB,EAAEA,mBAAoB;IACzCN,SAAS,EAAEA,SAAU;IACrBzB,IAAI,EAAEA,IAAK;IACXU,iBAAiB,EAAEA,iBAAkB;IACrC4C,eAAe;EAAA;IAAAR,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChB,CACH,CAAC;EAED,MAAM,CAACM,qBAAqB,CAAC,GAAGzF,QAAQ,eAAC6B,OAAA,CAACL,eAAe;IAAC8D,UAAU,EAAEd,eAAgB;IAACtC,IAAI,EAAEA,IAAK;IAACsD,eAAe;EAAA;IAAAR,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,CAAC;EAEtH,MAAMO,OAAO,GAAGA,CAAA,KAAM;IACpB,IAAI7C,WAAW,EAAE;MACfwC,mBAAmB,CAAC,CAAC;IACvB,CAAC,MAAM;MACLD,cAAc,CAAC,CAAC;IAClB;EACF,CAAC;EAED,MAAMO,SAAS,GAAGA,CAAA,KAAM;IACtB,IAAI9C,WAAW,EAAE;MACf4C,qBAAqB,CAAC,CAAC;IACzB,CAAC,MAAM;MACLF,gBAAgB,CAAC,CAAC;IACpB;EACF,CAAC;EAED,MAAM;IAAEK,SAAS;IAAEC,OAAO;IAAEC;EAAe,CAAC,GAAGzF,UAAU,CACvDyC,CAAC,CAAC,sEAAsE,CAAC,EACzE;IAAEiD,SAAS,EAAE;EAAS,CACxB,CAAC;EAED,MAAMC,iBAAiB,GAAGxD,YAAY,CAACwB,EAAE,CAAC,CAAC,CAAC,IAAIrB,QAAQ,CAACmB,aAAa,CAACmC,GAAG,CAACzD,YAAY,CAAC;EAExF,IAAI,CAACO,OAAO,EAAE;IACZ,oBACElB,OAAA,CAACV,eAAe;MAAA+E,QAAA,gBACdrE,OAAA,CAACT,YAAY;QAAA8E,QAAA,eACXrE,OAAA,CAACtB,IAAI;UAAC4F,QAAQ,EAAC,MAAM;UAACC,IAAI;UAACC,KAAK,EAAC,YAAY;UAACC,EAAE,EAAC,MAAM;UAACC,aAAa,EAAC,WAAW;UAAAL,QAAA,EAC9EpD,CAAC,CAAC,eAAe;QAAC;UAAAkC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACf;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACK,CAAC,eACftD,OAAA,CAACR,aAAa;QAAA6E,QAAA,eACZrE,OAAA,CAACrB,mBAAmB;UAACgG,KAAK,EAAC;QAAM;UAAAxB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAEtB;EAEA,IAAI,CAAChD,cAAc,EAAE;IACnB,oBACEN,OAAA,CAACV,eAAe;MAAA+E,QAAA,gBACdrE,OAAA,CAACT,YAAY;QAAA8E,QAAA,eACXrE,OAAA,CAACtB,IAAI;UAAC4F,QAAQ,EAAC,MAAM;UAACC,IAAI;UAACC,KAAK,EAAC,YAAY;UAACC,EAAE,EAAC,MAAM;UAACC,aAAa,EAAC,WAAW;UAAAL,QAAA,EAC9EpD,CAAC,CAAC,eAAe;QAAC;UAAAkC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACf;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACK,CAAC,eACftD,OAAA,CAACR,aAAa;QAAA6E,QAAA,eACZrE,OAAA,CAACzB,QAAQ;UAACoG,KAAK,EAAE,GAAI;UAACC,MAAM,EAAC,MAAM;UAACC,SAAS,EAAE;QAAG;UAAA1B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAEtB;EAEA,IAAIN,aAAa,EAAE;IACjB,oBACEhD,OAAA,CAACV,eAAe;MAAA+E,QAAA,gBACdrE,OAAA,CAACT,YAAY;QAAA8E,QAAA,eACXrE,OAAA,CAACtB,IAAI;UAAC4F,QAAQ,EAAC,MAAM;UAACC,IAAI;UAACC,KAAK,EAAC,YAAY;UAACC,EAAE,EAAC,MAAM;UAACC,aAAa,EAAC,WAAW;UAAAL,QAAA,EAC9EpD,CAAC,CAAC,aAAa;QAAC;UAAAkC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACb;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACK,CAAC,eACftD,OAAA,CAACR,aAAa;QAAA6E,QAAA,eACZrE,OAAA,CAAC9B,MAAM;UAACyG,KAAK,EAAC,MAAM;UAACG,QAAQ,EAAEvD,iBAAkB;UAACwD,OAAO,EAAE1D,aAAc;UAAC2D,OAAO,EAAC,WAAW;UAAAX,QAAA,EAC1FpD,CAAC,CAAC,QAAQ;QAAC;UAAAkC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAEtB;;EAEA;EACA,IAAIpB,qBAAqB,IAAIY,iBAAiB,EAAE;IAC9C,oBACE9C,OAAA,CAACV,eAAe;MAAA+E,QAAA,gBACdrE,OAAA,CAACT,YAAY;QAAA8E,QAAA,gBACXrE,OAAA,CAACtB,IAAI;UAAC4F,QAAQ,EAAC,MAAM;UAACC,IAAI;UAACC,KAAK,EAAC,WAAW;UAACC,EAAE,EAAC,MAAM;UAACC,aAAa,EAAC,WAAW;UAAAL,QAAA,GAC7E5D,YAAY,CAACgB,MAAM,EAAE,GAAG;QAAA;UAAA0B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrB,CAAC,eACPtD,OAAA,CAACtB,IAAI;UAAC4F,QAAQ,EAAC,MAAM;UAACC,IAAI;UAACC,KAAK,EAAC,YAAY;UAACC,EAAE,EAAC,MAAM;UAACC,aAAa,EAAC,WAAW;UAAAL,QAAA,EAC9ErD,WAAW,GAAGC,CAAC,CAAC,sBAAsB,CAAC,GAAGA,CAAC,CAAC,QAAQ;QAAC;UAAAkC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACK,CAAC,eACftD,OAAA,CAACR,aAAa;QAAA6E,QAAA,gBACZrE,OAAA,CAACvB,IAAI;UAACwG,IAAI,EAAC,GAAG;UAACC,EAAE,EAAC,MAAM;UAACC,aAAa,EAAC,QAAQ;UAACC,SAAS,EAAC,YAAY;UAAAf,QAAA,gBACpErE,OAAA,CAAClB,OAAO;YACNuG,UAAU,EAAC,GAAG;YACdd,IAAI;YACJD,QAAQ,EAAC,MAAM;YACfhC,QAAQ,EAAE,CAAE;YACZgD,KAAK,EAAEtE,WAAW,GAAG4B,mBAAmB,GAAGP;UAAmB;YAAAc,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC/D,CAAC,eACFtD,OAAA,CAAClB,OAAO;YACNwF,QAAQ,EAAC,MAAM;YACfiB,OAAO,EAAC,QAAQ;YAChBf,KAAK,EAAC,YAAY;YAClBlC,QAAQ,EAAE,CAAE;YACZgD,KAAK,EAAEtE,WAAW,GAAG+B,qBAAqB,GAAGR,wBAAyB;YACtEiD,IAAI,EAAC,MAAM;YACXC,MAAM,EAAC;UAAG;YAAAtC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACX,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC,eACPtD,OAAA,CAACC,iBAAiB;UAAAoE,QAAA,gBAChBrE,OAAA,CAAC5B,UAAU;YAAC4G,OAAO,EAAC,WAAW;YAACD,OAAO,EAAEjB,SAAU;YAAC4B,EAAE,EAAC,KAAK;YAAArB,QAAA,eAC1DrE,OAAA,CAAC1B,SAAS;cAACkG,KAAK,EAAC,SAAS;cAACG,KAAK,EAAC;YAAM;cAAAxB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChC,CAAC,EACZa,iBAAiB,gBAChBnE,OAAA;YAAM2F,GAAG,EAAE5B,SAAU;YAAAM,QAAA,eACnBrE,OAAA,CAAC5B,UAAU;cAAC4G,OAAO,EAAC,WAAW;cAACF,QAAQ;cAAAT,QAAA,eACtCrE,OAAA,CAAC3B,OAAO;gBAACmG,KAAK,EAAC,cAAc;gBAACG,KAAK,EAAC,MAAM;gBAACC,MAAM,EAAC;cAAM;gBAAAzB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACjD;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACT,CAAC,gBAEPtD,OAAA,CAAC5B,UAAU;YACT4G,OAAO,EAAC,WAAW;YACnBD,OAAO,EAAE3C,mBAAmB,CAACD,EAAE,CAAC,CAAC,CAAC,GAAG0B,OAAO,GAAGZ,sBAAuB;YACtE6B,QAAQ,EAAElE,UAAW;YAAAyD,QAAA,eAErBrE,OAAA,CAAC3B,OAAO;cAACmG,KAAK,EAAC,SAAS;cAACG,KAAK,EAAC;YAAM;cAAAxB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC9B,CACb;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACgB,CAAC,EACnBW,cAAc,IAAID,OAAO;MAAA;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACb,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAEtB;EAEA,oBACEtD,OAAA,CAACV,eAAe;IAAA+E,QAAA,gBACdrE,OAAA,CAACT,YAAY;MAAA8E,QAAA,gBACXrE,OAAA,CAACtB,IAAI;QAAC4F,QAAQ,EAAC,MAAM;QAACC,IAAI;QAACC,KAAK,EAAC,WAAW;QAACC,EAAE,EAAC,MAAM;QAACC,aAAa,EAAC,WAAW;QAAAL,QAAA,GAC7EpD,CAAC,CAAC,OAAO,CAAC,EAAE,GAAG;MAAA;QAAAkC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACZ,CAAC,eACPtD,OAAA,CAACtB,IAAI;QAAC4F,QAAQ,EAAC,MAAM;QAACC,IAAI;QAACC,KAAK,EAAC,YAAY;QAACC,EAAE,EAAC,MAAM;QAACC,aAAa,EAAC,WAAW;QAAAL,QAAA,EAC9E5D,YAAY,CAACgB;MAAM;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACK,CAAC,eACftD,OAAA,CAACR,aAAa;MAAA6E,QAAA,eACZrE,OAAA,CAAC9B,MAAM;QACLyG,KAAK,EAAC,MAAM;QACZI,OAAO,EAAE3C,mBAAmB,CAACD,EAAE,CAAC,CAAC,CAAC,GAAG0B,OAAO,GAAGZ,sBAAuB;QACtE+B,OAAO,EAAC,WAAW;QACnBF,QAAQ,EAAElE,UAAW;QAAAyD,QAAA,EAEpBpD,CAAC,CAAC,OAAO;MAAC;QAAAkC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEtB,CAAC;AAAA/C,EAAA,CApOKH,MAAmD;EAAA,QAYzCrB,cAAc,EACRH,YAAY,EAEHQ,QAAQ,EACkDS,cAAc,EAMzDD,2BAA2B,EAErEE,eAAe,EAqBbjB,YAAY,EASiBV,QAAQ,EAEhBA,QAAQ,EASHA,QAAQ,EAEXA,QAAQ,EAUHA,QAAQ,EAkBOK,UAAU;AAAA;AAAAoH,GAAA,GA/FrDxF,MAAmD;AAsOzD,eAAeA,MAAM;AAAA,IAAAD,EAAA,EAAAyF,GAAA;AAAAC,YAAA,CAAA1F,EAAA;AAAA0F,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}