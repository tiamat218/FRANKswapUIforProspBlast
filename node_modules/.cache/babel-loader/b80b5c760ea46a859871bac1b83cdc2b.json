{"ast":null,"code":"/* eslint-disable no-param-reassign */import{parseBytes32String}from'@ethersproject/strings';import{ETHER,Token,currencyEquals}from'@pancakeswap/sdk';import{useMemo}from'react';import{arrayify}from'ethers/lib/utils';import useActiveWeb3React from'hooks/useActiveWeb3React';import{useDefaultTokenList,useUnsupportedTokenList,useCombinedActiveList,useCombinedInactiveList}from'../state/lists/hooks';import{NEVER_RELOAD,useSingleCallResult}from'../state/multicall/hooks';import useUserAddedTokens from'../state/user/hooks/useUserAddedTokens';import{isAddress}from'../utils';import{useBytes32TokenContract,useTokenContract}from'./useContract';import{filterTokens}from'../components/SearchModal/filtering';// reduce token map into standard address <-> Token mapping, optionally include user added tokens\nfunction useTokensFromMap(tokenMap,includeUserAdded){const{chainId}=useActiveWeb3React();const userAddedTokens=useUserAddedTokens();return useMemo(()=>{if(!chainId)return{};// reduce to just tokens\nconst mapWithoutUrls=Object.keys(tokenMap[chainId]).reduce((newMap,address)=>{newMap[address]=tokenMap[chainId][address].token;return newMap;},{});if(includeUserAdded){return userAddedTokens// reduce into all ALL_TOKENS filtered by the current chain\n.reduce((tokenMap_,token)=>{tokenMap_[token.address]=token;return tokenMap_;},// must make a copy because reduce modifies the map, and we do not\n// want to make a copy in every iteration\n{...mapWithoutUrls});}return mapWithoutUrls;},[chainId,userAddedTokens,tokenMap,includeUserAdded]);}export function useDefaultTokens(){const defaultList=useDefaultTokenList();return useTokensFromMap(defaultList,false);}export function useAllTokens(){const allTokens=useCombinedActiveList();return useTokensFromMap(allTokens,true);}export function useAllInactiveTokens(){// get inactive tokens\nconst inactiveTokensMap=useCombinedInactiveList();const inactiveTokens=useTokensFromMap(inactiveTokensMap,false);// filter out any token that are on active list\nconst activeTokensAddresses=Object.keys(useAllTokens());const filteredInactive=activeTokensAddresses?Object.keys(inactiveTokens).reduce((newMap,address)=>{if(!activeTokensAddresses.includes(address)){newMap[address]=inactiveTokens[address];}return newMap;},{}):inactiveTokens;return filteredInactive;}export function useUnsupportedTokens(){const unsupportedTokensMap=useUnsupportedTokenList();return useTokensFromMap(unsupportedTokensMap,false);}export function useIsTokenActive(token){const activeTokens=useAllTokens();if(!activeTokens||!token){return false;}return!!activeTokens[token.address];}// used to detect extra search results\nexport function useFoundOnInactiveList(searchQuery){const{chainId}=useActiveWeb3React();const inactiveTokens=useAllInactiveTokens();return useMemo(()=>{if(!chainId||searchQuery===''){return undefined;}const tokens=filterTokens(Object.values(inactiveTokens),searchQuery);return tokens;},[chainId,inactiveTokens,searchQuery]);}// Check if currency is included in custom list from user storage\nexport function useIsUserAddedToken(currency){const userAddedTokens=useUserAddedTokens();if(!currency){return false;}return!!userAddedTokens.find(token=>currencyEquals(currency,token));}// parse a name or symbol from a token response\nconst BYTES32_REGEX=/^0x[a-fA-F0-9]{64}$/;function parseStringOrBytes32(str,bytes32,defaultValue){return str&&str.length>0?str:// need to check for proper bytes string and valid terminator\nbytes32&&BYTES32_REGEX.test(bytes32)&&arrayify(bytes32)[31]===0?parseBytes32String(bytes32):defaultValue;}// undefined if invalid or does not exist\n// null if loading\n// otherwise returns the token\nexport function useToken(tokenAddress){const{chainId}=useActiveWeb3React();const tokens=useAllTokens();const address=isAddress(tokenAddress);const tokenContract=useTokenContract(address||undefined,false);const tokenContractBytes32=useBytes32TokenContract(address||undefined,false);const token=address?tokens[address]:undefined;const tokenName=useSingleCallResult(token?undefined:tokenContract,'name',undefined,NEVER_RELOAD);const tokenNameBytes32=useSingleCallResult(token?undefined:tokenContractBytes32,'name',undefined,NEVER_RELOAD);const symbol=useSingleCallResult(token?undefined:tokenContract,'symbol',undefined,NEVER_RELOAD);const symbolBytes32=useSingleCallResult(token?undefined:tokenContractBytes32,'symbol',undefined,NEVER_RELOAD);const decimals=useSingleCallResult(token?undefined:tokenContract,'decimals',undefined,NEVER_RELOAD);return useMemo(()=>{if(token)return token;if(!chainId||!address)return undefined;if(decimals.loading||symbol.loading||tokenName.loading)return null;if(decimals.result){var _symbol$result,_symbolBytes32$result,_tokenName$result,_tokenNameBytes32$res;return new Token(chainId,address,decimals.result[0],parseStringOrBytes32((_symbol$result=symbol.result)===null||_symbol$result===void 0?void 0:_symbol$result[0],(_symbolBytes32$result=symbolBytes32.result)===null||_symbolBytes32$result===void 0?void 0:_symbolBytes32$result[0],'UNKNOWN'),parseStringOrBytes32((_tokenName$result=tokenName.result)===null||_tokenName$result===void 0?void 0:_tokenName$result[0],(_tokenNameBytes32$res=tokenNameBytes32.result)===null||_tokenNameBytes32$res===void 0?void 0:_tokenNameBytes32$res[0],'Unknown Token'));}return undefined;},[address,chainId,decimals.loading,decimals.result,symbol.loading,symbol.result,symbolBytes32.result,token,tokenName.loading,tokenName.result,tokenNameBytes32.result]);}export function useCurrency(currencyId){const isBNB=(currencyId===null||currencyId===void 0?void 0:currencyId.toUpperCase())==='BNB';const token=useToken(isBNB?undefined:currencyId);return isBNB?ETHER:token;}","map":{"version":3,"names":["parseBytes32String","ETHER","Token","currencyEquals","useMemo","arrayify","useActiveWeb3React","useDefaultTokenList","useUnsupportedTokenList","useCombinedActiveList","useCombinedInactiveList","NEVER_RELOAD","useSingleCallResult","useUserAddedTokens","isAddress","useBytes32TokenContract","useTokenContract","filterTokens","useTokensFromMap","tokenMap","includeUserAdded","chainId","userAddedTokens","mapWithoutUrls","Object","keys","reduce","newMap","address","token","tokenMap_","useDefaultTokens","defaultList","useAllTokens","allTokens","useAllInactiveTokens","inactiveTokensMap","inactiveTokens","activeTokensAddresses","filteredInactive","includes","useUnsupportedTokens","unsupportedTokensMap","useIsTokenActive","activeTokens","useFoundOnInactiveList","searchQuery","undefined","tokens","values","useIsUserAddedToken","currency","find","BYTES32_REGEX","parseStringOrBytes32","str","bytes32","defaultValue","length","test","useToken","tokenAddress","tokenContract","tokenContractBytes32","tokenName","tokenNameBytes32","symbol","symbolBytes32","decimals","loading","result","_symbol$result","_symbolBytes32$result","_tokenName$result","_tokenNameBytes32$res","useCurrency","currencyId","isBNB","toUpperCase"],"sources":["C:/Users/frkul/Documents/swapUI_pancake-frontend/src/hooks/Tokens.ts"],"sourcesContent":["/* eslint-disable no-param-reassign */\r\nimport { parseBytes32String } from '@ethersproject/strings'\r\nimport { Currency, ETHER, Token, currencyEquals } from '@pancakeswap/sdk'\r\nimport { useMemo } from 'react'\r\nimport { arrayify } from 'ethers/lib/utils'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport {\r\n  TokenAddressMap,\r\n  useDefaultTokenList,\r\n  useUnsupportedTokenList,\r\n  useCombinedActiveList,\r\n  useCombinedInactiveList,\r\n} from '../state/lists/hooks'\r\n\r\nimport { NEVER_RELOAD, useSingleCallResult } from '../state/multicall/hooks'\r\nimport useUserAddedTokens from '../state/user/hooks/useUserAddedTokens'\r\nimport { isAddress } from '../utils'\r\n\r\nimport { useBytes32TokenContract, useTokenContract } from './useContract'\r\nimport { filterTokens } from '../components/SearchModal/filtering'\r\n\r\n// reduce token map into standard address <-> Token mapping, optionally include user added tokens\r\nfunction useTokensFromMap(tokenMap: TokenAddressMap, includeUserAdded: boolean): { [address: string]: Token } {\r\n  const { chainId } = useActiveWeb3React()\r\n  const userAddedTokens = useUserAddedTokens()\r\n\r\n  return useMemo(() => {\r\n    if (!chainId) return {}\r\n\r\n    // reduce to just tokens\r\n    const mapWithoutUrls = Object.keys(tokenMap[chainId]).reduce<{ [address: string]: Token }>((newMap, address) => {\r\n      newMap[address] = tokenMap[chainId][address].token\r\n      return newMap\r\n    }, {})\r\n\r\n    if (includeUserAdded) {\r\n      return (\r\n        userAddedTokens\r\n          // reduce into all ALL_TOKENS filtered by the current chain\r\n          .reduce<{ [address: string]: Token }>(\r\n            (tokenMap_, token) => {\r\n              tokenMap_[token.address] = token\r\n              return tokenMap_\r\n            },\r\n            // must make a copy because reduce modifies the map, and we do not\r\n            // want to make a copy in every iteration\r\n            { ...mapWithoutUrls },\r\n          )\r\n      )\r\n    }\r\n\r\n    return mapWithoutUrls\r\n  }, [chainId, userAddedTokens, tokenMap, includeUserAdded])\r\n}\r\n\r\nexport function useDefaultTokens(): { [address: string]: Token } {\r\n  const defaultList = useDefaultTokenList()\r\n  return useTokensFromMap(defaultList, false)\r\n}\r\n\r\nexport function useAllTokens(): { [address: string]: Token } {\r\n  const allTokens = useCombinedActiveList()\r\n  return useTokensFromMap(allTokens, true)\r\n}\r\n\r\nexport function useAllInactiveTokens(): { [address: string]: Token } {\r\n  // get inactive tokens\r\n  const inactiveTokensMap = useCombinedInactiveList()\r\n  const inactiveTokens = useTokensFromMap(inactiveTokensMap, false)\r\n\r\n  // filter out any token that are on active list\r\n  const activeTokensAddresses = Object.keys(useAllTokens())\r\n  const filteredInactive = activeTokensAddresses\r\n    ? Object.keys(inactiveTokens).reduce<{ [address: string]: Token }>((newMap, address) => {\r\n        if (!activeTokensAddresses.includes(address)) {\r\n          newMap[address] = inactiveTokens[address]\r\n        }\r\n        return newMap\r\n      }, {})\r\n    : inactiveTokens\r\n\r\n  return filteredInactive\r\n}\r\n\r\nexport function useUnsupportedTokens(): { [address: string]: Token } {\r\n  const unsupportedTokensMap = useUnsupportedTokenList()\r\n  return useTokensFromMap(unsupportedTokensMap, false)\r\n}\r\n\r\nexport function useIsTokenActive(token: Token | undefined | null): boolean {\r\n  const activeTokens = useAllTokens()\r\n\r\n  if (!activeTokens || !token) {\r\n    return false\r\n  }\r\n\r\n  return !!activeTokens[token.address]\r\n}\r\n\r\n// used to detect extra search results\r\nexport function useFoundOnInactiveList(searchQuery: string): Token[] | undefined {\r\n  const { chainId } = useActiveWeb3React()\r\n  const inactiveTokens = useAllInactiveTokens()\r\n\r\n  return useMemo(() => {\r\n    if (!chainId || searchQuery === '') {\r\n      return undefined\r\n    }\r\n    const tokens = filterTokens(Object.values(inactiveTokens), searchQuery)\r\n    return tokens\r\n  }, [chainId, inactiveTokens, searchQuery])\r\n}\r\n\r\n// Check if currency is included in custom list from user storage\r\nexport function useIsUserAddedToken(currency: Currency | undefined | null): boolean {\r\n  const userAddedTokens = useUserAddedTokens()\r\n\r\n  if (!currency) {\r\n    return false\r\n  }\r\n\r\n  return !!userAddedTokens.find((token) => currencyEquals(currency, token))\r\n}\r\n\r\n// parse a name or symbol from a token response\r\nconst BYTES32_REGEX = /^0x[a-fA-F0-9]{64}$/\r\n\r\nfunction parseStringOrBytes32(str: string | undefined, bytes32: string | undefined, defaultValue: string): string {\r\n  return str && str.length > 0\r\n    ? str\r\n    : // need to check for proper bytes string and valid terminator\r\n    bytes32 && BYTES32_REGEX.test(bytes32) && arrayify(bytes32)[31] === 0\r\n    ? parseBytes32String(bytes32)\r\n    : defaultValue\r\n}\r\n\r\n// undefined if invalid or does not exist\r\n// null if loading\r\n// otherwise returns the token\r\nexport function useToken(tokenAddress?: string): Token | undefined | null {\r\n  const { chainId } = useActiveWeb3React()\r\n  const tokens = useAllTokens()\r\n\r\n  const address = isAddress(tokenAddress)\r\n\r\n  const tokenContract = useTokenContract(address || undefined, false)\r\n  const tokenContractBytes32 = useBytes32TokenContract(address || undefined, false)\r\n  const token: Token | undefined = address ? tokens[address] : undefined\r\n\r\n  const tokenName = useSingleCallResult(token ? undefined : tokenContract, 'name', undefined, NEVER_RELOAD)\r\n  const tokenNameBytes32 = useSingleCallResult(\r\n    token ? undefined : tokenContractBytes32,\r\n    'name',\r\n    undefined,\r\n    NEVER_RELOAD,\r\n  )\r\n  const symbol = useSingleCallResult(token ? undefined : tokenContract, 'symbol', undefined, NEVER_RELOAD)\r\n  const symbolBytes32 = useSingleCallResult(token ? undefined : tokenContractBytes32, 'symbol', undefined, NEVER_RELOAD)\r\n  const decimals = useSingleCallResult(token ? undefined : tokenContract, 'decimals', undefined, NEVER_RELOAD)\r\n\r\n  return useMemo(() => {\r\n    if (token) return token\r\n    if (!chainId || !address) return undefined\r\n    if (decimals.loading || symbol.loading || tokenName.loading) return null\r\n    if (decimals.result) {\r\n      return new Token(\r\n        chainId,\r\n        address,\r\n        decimals.result[0],\r\n        parseStringOrBytes32(symbol.result?.[0], symbolBytes32.result?.[0], 'UNKNOWN'),\r\n        parseStringOrBytes32(tokenName.result?.[0], tokenNameBytes32.result?.[0], 'Unknown Token'),\r\n      )\r\n    }\r\n    return undefined\r\n  }, [\r\n    address,\r\n    chainId,\r\n    decimals.loading,\r\n    decimals.result,\r\n    symbol.loading,\r\n    symbol.result,\r\n    symbolBytes32.result,\r\n    token,\r\n    tokenName.loading,\r\n    tokenName.result,\r\n    tokenNameBytes32.result,\r\n  ])\r\n}\r\n\r\nexport function useCurrency(currencyId: string | undefined): Currency | null | undefined {\r\n  const isBNB = currencyId?.toUpperCase() === 'BNB'\r\n  const token = useToken(isBNB ? undefined : currencyId)\r\n  return isBNB ? ETHER : token\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}