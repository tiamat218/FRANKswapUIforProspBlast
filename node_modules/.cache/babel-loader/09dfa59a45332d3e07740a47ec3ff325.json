{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst tslib_1 = require(\"tslib\");\nconst utils_1 = require(\"@walletconnect/utils\");\nconst socket_transport_1 = tslib_1.__importDefault(require(\"@walletconnect/socket-transport\"));\nconst errors_1 = require(\"./errors\");\nconst events_1 = tslib_1.__importDefault(require(\"./events\"));\nconst storage_1 = tslib_1.__importDefault(require(\"./storage\"));\nclass Connector {\n  constructor(opts) {\n    this.protocol = \"wc\";\n    this.version = 1;\n    this._bridge = \"\";\n    this._key = null;\n    this._clientId = \"\";\n    this._clientMeta = null;\n    this._peerId = \"\";\n    this._peerMeta = null;\n    this._handshakeId = 0;\n    this._handshakeTopic = \"\";\n    this._connected = false;\n    this._accounts = [];\n    this._chainId = 0;\n    this._networkId = 0;\n    this._rpcUrl = \"\";\n    this._eventManager = new events_1.default();\n    this._clientMeta = utils_1.getClientMeta() || opts.connectorOpts.clientMeta || null;\n    this._cryptoLib = opts.cryptoLib;\n    this._sessionStorage = opts.sessionStorage || new storage_1.default();\n    this._qrcodeModal = opts.connectorOpts.qrcodeModal;\n    this._qrcodeModalOptions = opts.connectorOpts.qrcodeModalOptions;\n    if (!opts.connectorOpts.bridge && !opts.connectorOpts.uri && !opts.connectorOpts.session) {\n      throw new Error(errors_1.ERROR_MISSING_REQUIRED);\n    }\n    if (opts.connectorOpts.bridge) {\n      this.bridge = opts.connectorOpts.bridge;\n    }\n    if (opts.connectorOpts.uri) {\n      this.uri = opts.connectorOpts.uri;\n    }\n    const session = opts.connectorOpts.session || this._getStorageSession();\n    if (session) {\n      this.session = session;\n    }\n    if (this.handshakeId) {\n      this._subscribeToSessionResponse(this.handshakeId, \"Session request rejected\");\n    }\n    this._transport = opts.transport || new socket_transport_1.default({\n      protocol: this.protocol,\n      version: this.version,\n      url: this.bridge,\n      subscriptions: [this.clientId]\n    });\n    this._subscribeToInternalEvents();\n    this._initTransport();\n    if (opts.connectorOpts.uri) {\n      this._subscribeToSessionRequest();\n    }\n    if (opts.pushServerOpts) {\n      this._registerPushServer(opts.pushServerOpts);\n    }\n  }\n  set bridge(value) {\n    if (!value) {\n      return;\n    }\n    this._bridge = value;\n  }\n  get bridge() {\n    return this._bridge;\n  }\n  set key(value) {\n    if (!value) {\n      return;\n    }\n    const key = utils_1.convertHexToArrayBuffer(value);\n    this._key = key;\n  }\n  get key() {\n    if (this._key) {\n      const key = utils_1.convertArrayBufferToHex(this._key, true);\n      return key;\n    }\n    return \"\";\n  }\n  set clientId(value) {\n    if (!value) {\n      return;\n    }\n    this._clientId = value;\n  }\n  get clientId() {\n    let clientId = this._clientId;\n    if (!clientId) {\n      clientId = this._clientId = utils_1.uuid();\n    }\n    return this._clientId;\n  }\n  set peerId(value) {\n    if (!value) {\n      return;\n    }\n    this._peerId = value;\n  }\n  get peerId() {\n    return this._peerId;\n  }\n  set clientMeta(value) {}\n  get clientMeta() {\n    let clientMeta = this._clientMeta;\n    if (!clientMeta) {\n      clientMeta = this._clientMeta = utils_1.getClientMeta();\n    }\n    return clientMeta;\n  }\n  set peerMeta(value) {\n    this._peerMeta = value;\n  }\n  get peerMeta() {\n    const peerMeta = this._peerMeta;\n    return peerMeta;\n  }\n  set handshakeTopic(value) {\n    if (!value) {\n      return;\n    }\n    this._handshakeTopic = value;\n  }\n  get handshakeTopic() {\n    return this._handshakeTopic;\n  }\n  set handshakeId(value) {\n    if (!value) {\n      return;\n    }\n    this._handshakeId = value;\n  }\n  get handshakeId() {\n    return this._handshakeId;\n  }\n  get uri() {\n    const _uri = this._formatUri();\n    return _uri;\n  }\n  set uri(value) {\n    if (!value) {\n      return;\n    }\n    const {\n      handshakeTopic,\n      bridge,\n      key\n    } = this._parseUri(value);\n    this.handshakeTopic = handshakeTopic;\n    this.bridge = bridge;\n    this.key = key;\n  }\n  set chainId(value) {\n    this._chainId = value;\n  }\n  get chainId() {\n    const chainId = this._chainId;\n    return chainId;\n  }\n  set networkId(value) {\n    this._networkId = value;\n  }\n  get networkId() {\n    const networkId = this._networkId;\n    return networkId;\n  }\n  set accounts(value) {\n    this._accounts = value;\n  }\n  get accounts() {\n    const accounts = this._accounts;\n    return accounts;\n  }\n  set rpcUrl(value) {\n    this._rpcUrl = value;\n  }\n  get rpcUrl() {\n    const rpcUrl = this._rpcUrl;\n    return rpcUrl;\n  }\n  set connected(value) {}\n  get connected() {\n    return this._connected;\n  }\n  set pending(value) {}\n  get pending() {\n    return !!this._handshakeTopic;\n  }\n  get session() {\n    return {\n      connected: this.connected,\n      accounts: this.accounts,\n      chainId: this.chainId,\n      bridge: this.bridge,\n      key: this.key,\n      clientId: this.clientId,\n      clientMeta: this.clientMeta,\n      peerId: this.peerId,\n      peerMeta: this.peerMeta,\n      handshakeId: this.handshakeId,\n      handshakeTopic: this.handshakeTopic\n    };\n  }\n  set session(value) {\n    if (!value) {\n      return;\n    }\n    this._connected = value.connected;\n    this.accounts = value.accounts;\n    this.chainId = value.chainId;\n    this.bridge = value.bridge;\n    this.key = value.key;\n    this.clientId = value.clientId;\n    this.clientMeta = value.clientMeta;\n    this.peerId = value.peerId;\n    this.peerMeta = value.peerMeta;\n    this.handshakeId = value.handshakeId;\n    this.handshakeTopic = value.handshakeTopic;\n  }\n  on(event, callback) {\n    const eventEmitter = {\n      event,\n      callback\n    };\n    this._eventManager.subscribe(eventEmitter);\n  }\n  createInstantRequest(instantRequest) {\n    return tslib_1.__awaiter(this, void 0, void 0, function* () {\n      this._key = yield this._generateKey();\n      const request = this._formatRequest({\n        method: \"wc_instantRequest\",\n        params: [{\n          peerId: this.clientId,\n          peerMeta: this.clientMeta,\n          request: this._formatRequest(instantRequest)\n        }]\n      });\n      this.handshakeId = request.id;\n      this.handshakeTopic = utils_1.uuid();\n      this._eventManager.trigger({\n        event: \"display_uri\",\n        params: [this.uri]\n      });\n      this.on(\"modal_closed\", () => {\n        throw new Error(errors_1.ERROR_QRCODE_MODAL_USER_CLOSED);\n      });\n      const endInstantRequest = () => {\n        this.killSession();\n      };\n      try {\n        const result = yield this._sendCallRequest(request);\n        if (result) {\n          endInstantRequest();\n        }\n        return result;\n      } catch (error) {\n        endInstantRequest();\n        throw error;\n      }\n    });\n  }\n  connect(opts) {\n    return tslib_1.__awaiter(this, void 0, void 0, function* () {\n      if (!this._qrcodeModal) {\n        throw new Error(errors_1.ERROR_QRCODE_MODAL_NOT_PROVIDED);\n      }\n      if (this.connected) {\n        return {\n          chainId: this.chainId,\n          accounts: this.accounts\n        };\n      }\n      yield this.createSession(opts);\n      return new Promise((resolve, reject) => tslib_1.__awaiter(this, void 0, void 0, function* () {\n        this.on(\"modal_closed\", () => reject(new Error(errors_1.ERROR_QRCODE_MODAL_USER_CLOSED)));\n        this.on(\"connect\", (error, payload) => {\n          if (error) {\n            return reject(error);\n          }\n          resolve(payload.params[0]);\n        });\n      }));\n    });\n  }\n  createSession(opts) {\n    return tslib_1.__awaiter(this, void 0, void 0, function* () {\n      if (this._connected) {\n        throw new Error(errors_1.ERROR_SESSION_CONNECTED);\n      }\n      if (this.pending) {\n        return;\n      }\n      this._key = yield this._generateKey();\n      const request = this._formatRequest({\n        method: \"wc_sessionRequest\",\n        params: [{\n          peerId: this.clientId,\n          peerMeta: this.clientMeta,\n          chainId: opts && opts.chainId ? opts.chainId : null\n        }]\n      });\n      this.handshakeId = request.id;\n      this.handshakeTopic = utils_1.uuid();\n      this._sendSessionRequest(request, \"Session update rejected\", {\n        topic: this.handshakeTopic\n      });\n      this._eventManager.trigger({\n        event: \"display_uri\",\n        params: [this.uri]\n      });\n    });\n  }\n  approveSession(sessionStatus) {\n    if (this._connected) {\n      throw new Error(errors_1.ERROR_SESSION_CONNECTED);\n    }\n    this.chainId = sessionStatus.chainId;\n    this.accounts = sessionStatus.accounts;\n    this.networkId = sessionStatus.networkId || 0;\n    this.rpcUrl = sessionStatus.rpcUrl || \"\";\n    const sessionParams = {\n      approved: true,\n      chainId: this.chainId,\n      networkId: this.networkId,\n      accounts: this.accounts,\n      rpcUrl: this.rpcUrl,\n      peerId: this.clientId,\n      peerMeta: this.clientMeta\n    };\n    const response = {\n      id: this.handshakeId,\n      jsonrpc: \"2.0\",\n      result: sessionParams\n    };\n    this._sendResponse(response);\n    this._connected = true;\n    this._setStorageSession();\n    this._eventManager.trigger({\n      event: \"connect\",\n      params: [{\n        peerId: this.peerId,\n        peerMeta: this.peerMeta,\n        chainId: this.chainId,\n        accounts: this.accounts\n      }]\n    });\n  }\n  rejectSession(sessionError) {\n    if (this._connected) {\n      throw new Error(errors_1.ERROR_SESSION_CONNECTED);\n    }\n    const message = sessionError && sessionError.message ? sessionError.message : errors_1.ERROR_SESSION_REJECTED;\n    const response = this._formatResponse({\n      id: this.handshakeId,\n      error: {\n        message\n      }\n    });\n    this._sendResponse(response);\n    this._connected = false;\n    this._eventManager.trigger({\n      event: \"disconnect\",\n      params: [{\n        message\n      }]\n    });\n    this._removeStorageSession();\n  }\n  updateSession(sessionStatus) {\n    if (!this._connected) {\n      throw new Error(errors_1.ERROR_SESSION_DISCONNECTED);\n    }\n    this.chainId = sessionStatus.chainId;\n    this.accounts = sessionStatus.accounts;\n    this.networkId = sessionStatus.networkId || 0;\n    this.rpcUrl = sessionStatus.rpcUrl || \"\";\n    const sessionParams = {\n      approved: true,\n      chainId: this.chainId,\n      networkId: this.networkId,\n      accounts: this.accounts,\n      rpcUrl: this.rpcUrl\n    };\n    const request = this._formatRequest({\n      method: \"wc_sessionUpdate\",\n      params: [sessionParams]\n    });\n    this._sendSessionRequest(request, \"Session update rejected\");\n    this._eventManager.trigger({\n      event: \"session_update\",\n      params: [{\n        chainId: this.chainId,\n        accounts: this.accounts\n      }]\n    });\n    this._manageStorageSession();\n  }\n  killSession(sessionError) {\n    return tslib_1.__awaiter(this, void 0, void 0, function* () {\n      const message = sessionError ? sessionError.message : \"Session Disconnected\";\n      const sessionParams = {\n        approved: false,\n        chainId: null,\n        networkId: null,\n        accounts: null\n      };\n      const request = this._formatRequest({\n        method: \"wc_sessionUpdate\",\n        params: [sessionParams]\n      });\n      yield this._sendRequest(request);\n      this._handleSessionDisconnect(message);\n    });\n  }\n  sendTransaction(tx) {\n    return tslib_1.__awaiter(this, void 0, void 0, function* () {\n      if (!this._connected) {\n        throw new Error(errors_1.ERROR_SESSION_DISCONNECTED);\n      }\n      const parsedTx = utils_1.parseTransactionData(tx);\n      const request = this._formatRequest({\n        method: \"eth_sendTransaction\",\n        params: [parsedTx]\n      });\n      const result = yield this._sendCallRequest(request);\n      return result;\n    });\n  }\n  signTransaction(tx) {\n    return tslib_1.__awaiter(this, void 0, void 0, function* () {\n      if (!this._connected) {\n        throw new Error(errors_1.ERROR_SESSION_DISCONNECTED);\n      }\n      const parsedTx = utils_1.parseTransactionData(tx);\n      const request = this._formatRequest({\n        method: \"eth_signTransaction\",\n        params: [parsedTx]\n      });\n      const result = yield this._sendCallRequest(request);\n      return result;\n    });\n  }\n  signMessage(params) {\n    return tslib_1.__awaiter(this, void 0, void 0, function* () {\n      if (!this._connected) {\n        throw new Error(errors_1.ERROR_SESSION_DISCONNECTED);\n      }\n      const request = this._formatRequest({\n        method: \"eth_sign\",\n        params\n      });\n      const result = yield this._sendCallRequest(request);\n      return result;\n    });\n  }\n  signPersonalMessage(params) {\n    return tslib_1.__awaiter(this, void 0, void 0, function* () {\n      if (!this._connected) {\n        throw new Error(errors_1.ERROR_SESSION_DISCONNECTED);\n      }\n      params = utils_1.parsePersonalSign(params);\n      const request = this._formatRequest({\n        method: \"personal_sign\",\n        params\n      });\n      const result = yield this._sendCallRequest(request);\n      return result;\n    });\n  }\n  signTypedData(params) {\n    return tslib_1.__awaiter(this, void 0, void 0, function* () {\n      if (!this._connected) {\n        throw new Error(errors_1.ERROR_SESSION_DISCONNECTED);\n      }\n      const request = this._formatRequest({\n        method: \"eth_signTypedData\",\n        params\n      });\n      const result = yield this._sendCallRequest(request);\n      return result;\n    });\n  }\n  updateChain(chainParams) {\n    return tslib_1.__awaiter(this, void 0, void 0, function* () {\n      if (!this._connected) {\n        throw new Error(\"Session currently disconnected\");\n      }\n      const request = this._formatRequest({\n        method: \"wallet_updateChain\",\n        params: [chainParams]\n      });\n      const result = yield this._sendCallRequest(request);\n      return result;\n    });\n  }\n  unsafeSend(request, options) {\n    this._sendRequest(request, options);\n    return new Promise((resolve, reject) => {\n      this._subscribeToResponse(request.id, (error, payload) => {\n        if (error) {\n          reject(error);\n          return;\n        }\n        if (!payload) {\n          throw new Error(errors_1.ERROR_MISSING_JSON_RPC);\n        }\n        resolve(payload);\n      });\n    });\n  }\n  sendCustomRequest(request, options) {\n    return tslib_1.__awaiter(this, void 0, void 0, function* () {\n      if (!this._connected) {\n        throw new Error(errors_1.ERROR_SESSION_DISCONNECTED);\n      }\n      switch (request.method) {\n        case \"eth_accounts\":\n          return this.accounts;\n        case \"eth_chainId\":\n          return utils_1.convertNumberToHex(this.chainId);\n        case \"eth_sendTransaction\":\n        case \"eth_signTransaction\":\n          if (request.params) {\n            request.params[0] = utils_1.parseTransactionData(request.params[0]);\n          }\n          break;\n        case \"personal_sign\":\n          if (request.params) {\n            request.params = utils_1.parsePersonalSign(request.params);\n          }\n          break;\n        default:\n          break;\n      }\n      const formattedRequest = this._formatRequest(request);\n      const result = yield this._sendCallRequest(formattedRequest, options);\n      return result;\n    });\n  }\n  approveRequest(response) {\n    if (utils_1.isJsonRpcResponseSuccess(response)) {\n      const formattedResponse = this._formatResponse(response);\n      this._sendResponse(formattedResponse);\n    } else {\n      throw new Error(errors_1.ERROR_MISSING_RESULT);\n    }\n  }\n  rejectRequest(response) {\n    if (utils_1.isJsonRpcResponseError(response)) {\n      const formattedResponse = this._formatResponse(response);\n      this._sendResponse(formattedResponse);\n    } else {\n      throw new Error(errors_1.ERROR_MISSING_ERROR);\n    }\n  }\n  _sendRequest(request, options) {\n    return tslib_1.__awaiter(this, void 0, void 0, function* () {\n      const callRequest = this._formatRequest(request);\n      const encryptionPayload = yield this._encrypt(callRequest);\n      const topic = typeof (options === null || options === void 0 ? void 0 : options.topic) !== \"undefined\" ? options.topic : this.peerId;\n      const payload = JSON.stringify(encryptionPayload);\n      const silent = typeof (options === null || options === void 0 ? void 0 : options.forcePushNotification) !== \"undefined\" ? !options.forcePushNotification : utils_1.isSilentPayload(callRequest);\n      this._transport.send(payload, topic, silent);\n    });\n  }\n  _sendResponse(response) {\n    return tslib_1.__awaiter(this, void 0, void 0, function* () {\n      const encryptionPayload = yield this._encrypt(response);\n      const topic = this.peerId;\n      const payload = JSON.stringify(encryptionPayload);\n      const silent = true;\n      this._transport.send(payload, topic, silent);\n    });\n  }\n  _sendSessionRequest(request, errorMsg, options) {\n    return tslib_1.__awaiter(this, void 0, void 0, function* () {\n      this._sendRequest(request, options);\n      this._subscribeToSessionResponse(request.id, errorMsg);\n    });\n  }\n  _sendCallRequest(request, options) {\n    this._sendRequest(request, options);\n    this._eventManager.trigger({\n      event: \"call_request_sent\",\n      params: [{\n        request,\n        options\n      }]\n    });\n    if (utils_1.isMobile() && utils_1.signingMethods.includes(request.method)) {\n      const mobileLinkUrl = utils_1.getLocal(utils_1.mobileLinkChoiceKey);\n      if (mobileLinkUrl) {\n        window.location.href = mobileLinkUrl.href;\n      }\n    }\n    return this._subscribeToCallResponse(request.id);\n  }\n  _formatRequest(request) {\n    if (typeof request.method === \"undefined\") {\n      throw new Error(errors_1.ERROR_MISSING_METHOD);\n    }\n    const formattedRequest = {\n      id: typeof request.id === \"undefined\" ? utils_1.payloadId() : request.id,\n      jsonrpc: \"2.0\",\n      method: request.method,\n      params: typeof request.params === \"undefined\" ? [] : request.params\n    };\n    return formattedRequest;\n  }\n  _formatResponse(response) {\n    if (typeof response.id === \"undefined\") {\n      throw new Error(errors_1.ERROR_MISSING_ID);\n    }\n    const baseResponse = {\n      id: response.id,\n      jsonrpc: \"2.0\"\n    };\n    if (utils_1.isJsonRpcResponseError(response)) {\n      const error = utils_1.formatRpcError(response.error);\n      const errorResponse = Object.assign(Object.assign(Object.assign({}, baseResponse), response), {\n        error\n      });\n      return errorResponse;\n    } else if (utils_1.isJsonRpcResponseSuccess(response)) {\n      const successResponse = Object.assign(Object.assign({}, baseResponse), response);\n      return successResponse;\n    }\n    throw new Error(errors_1.ERROR_INVALID_RESPONSE);\n  }\n  _handleSessionDisconnect(errorMsg) {\n    const message = errorMsg || \"Session Disconnected\";\n    if (!this._connected) {\n      if (this._qrcodeModal) {\n        this._qrcodeModal.close();\n      }\n      utils_1.removeLocal(utils_1.mobileLinkChoiceKey);\n    }\n    if (this._connected) {\n      this._connected = false;\n    }\n    if (this._handshakeId) {\n      this._handshakeId = 0;\n    }\n    if (this._handshakeTopic) {\n      this._handshakeTopic = \"\";\n    }\n    this._eventManager.trigger({\n      event: \"disconnect\",\n      params: [{\n        message\n      }]\n    });\n    this._removeStorageSession();\n    this._transport.close();\n  }\n  _handleSessionResponse(errorMsg, sessionParams) {\n    if (sessionParams) {\n      if (sessionParams.approved) {\n        if (!this._connected) {\n          this._connected = true;\n          if (sessionParams.chainId) {\n            this.chainId = sessionParams.chainId;\n          }\n          if (sessionParams.accounts) {\n            this.accounts = sessionParams.accounts;\n          }\n          if (sessionParams.peerId && !this.peerId) {\n            this.peerId = sessionParams.peerId;\n          }\n          if (sessionParams.peerMeta && !this.peerMeta) {\n            this.peerMeta = sessionParams.peerMeta;\n          }\n          this._eventManager.trigger({\n            event: \"connect\",\n            params: [{\n              peerId: this.peerId,\n              peerMeta: this.peerMeta,\n              chainId: this.chainId,\n              accounts: this.accounts\n            }]\n          });\n        } else {\n          if (sessionParams.chainId) {\n            this.chainId = sessionParams.chainId;\n          }\n          if (sessionParams.accounts) {\n            this.accounts = sessionParams.accounts;\n          }\n          this._eventManager.trigger({\n            event: \"session_update\",\n            params: [{\n              chainId: this.chainId,\n              accounts: this.accounts\n            }]\n          });\n        }\n        this._manageStorageSession();\n      } else {\n        this._handleSessionDisconnect(errorMsg);\n      }\n    } else {\n      this._handleSessionDisconnect(errorMsg);\n    }\n  }\n  _handleIncomingMessages(socketMessage) {\n    return tslib_1.__awaiter(this, void 0, void 0, function* () {\n      const activeTopics = [this.clientId, this.handshakeTopic];\n      if (!activeTopics.includes(socketMessage.topic)) {\n        return;\n      }\n      let encryptionPayload;\n      try {\n        encryptionPayload = JSON.parse(socketMessage.payload);\n      } catch (error) {\n        return;\n      }\n      const payload = yield this._decrypt(encryptionPayload);\n      if (payload) {\n        this._eventManager.trigger(payload);\n      }\n    });\n  }\n  _subscribeToSessionRequest() {\n    this._transport.subscribe(this.handshakeTopic);\n  }\n  _subscribeToResponse(id, callback) {\n    this.on(\"response:\".concat(id), callback);\n  }\n  _subscribeToSessionResponse(id, errorMsg) {\n    this._subscribeToResponse(id, (error, payload) => {\n      if (error) {\n        this._handleSessionResponse(error.message);\n        return;\n      }\n      if (payload.result) {\n        this._handleSessionResponse(errorMsg, payload.result);\n      } else if (payload.error && payload.error.message) {\n        this._handleSessionResponse(payload.error.message);\n      } else {\n        this._handleSessionResponse(errorMsg);\n      }\n    });\n  }\n  _subscribeToCallResponse(id) {\n    return new Promise((resolve, reject) => {\n      this._subscribeToResponse(id, (error, payload) => {\n        if (error) {\n          reject(error);\n          return;\n        }\n        if (payload.result) {\n          resolve(payload.result);\n        } else if (payload.error && payload.error.message) {\n          reject(new Error(payload.error.message));\n        } else {\n          reject(new Error(errors_1.ERROR_INVALID_RESPONSE));\n        }\n      });\n    });\n  }\n  _subscribeToInternalEvents() {\n    this.on(\"display_uri\", () => {\n      if (this._qrcodeModal) {\n        this._qrcodeModal.open(this.uri, () => {\n          this._eventManager.trigger({\n            event: \"modal_closed\",\n            params: []\n          });\n        }, this._qrcodeModalOptions);\n      }\n    });\n    this.on(\"connect\", () => {\n      if (this._qrcodeModal) {\n        this._qrcodeModal.close();\n      }\n    });\n    this.on(\"wc_sessionRequest\", (error, payload) => {\n      if (error) {\n        this._eventManager.trigger({\n          event: \"error\",\n          params: [{\n            code: \"SESSION_REQUEST_ERROR\",\n            message: error.toString()\n          }]\n        });\n      }\n      this.handshakeId = payload.id;\n      this.peerId = payload.params[0].peerId;\n      this.peerMeta = payload.params[0].peerMeta;\n      const internalPayload = Object.assign(Object.assign({}, payload), {\n        method: \"session_request\"\n      });\n      this._eventManager.trigger(internalPayload);\n    });\n    this.on(\"wc_sessionUpdate\", (error, payload) => {\n      if (error) {\n        this._handleSessionResponse(error.message);\n      }\n      this._handleSessionResponse(\"Session disconnected\", payload.params[0]);\n    });\n  }\n  _initTransport() {\n    this._transport.on(\"message\", socketMessage => this._handleIncomingMessages(socketMessage));\n    this._transport.on(\"open\", () => this._eventManager.trigger({\n      event: \"transport_open\",\n      params: []\n    }));\n    this._transport.on(\"close\", () => this._eventManager.trigger({\n      event: \"transport_close\",\n      params: []\n    }));\n    this._transport.on(\"error\", () => this._eventManager.trigger({\n      event: \"transport_error\",\n      params: [\"Websocket connection failed\"]\n    }));\n    this._transport.open();\n  }\n  _formatUri() {\n    const protocol = this.protocol;\n    const handshakeTopic = this.handshakeTopic;\n    const version = this.version;\n    const bridge = encodeURIComponent(this.bridge);\n    const key = this.key;\n    const uri = \"\".concat(protocol, \":\").concat(handshakeTopic, \"@\").concat(version, \"?bridge=\").concat(bridge, \"&key=\").concat(key);\n    return uri;\n  }\n  _parseUri(uri) {\n    const result = utils_1.parseWalletConnectUri(uri);\n    if (result.protocol === this.protocol) {\n      if (!result.handshakeTopic) {\n        throw Error(\"Invalid or missing handshakeTopic parameter value\");\n      }\n      const handshakeTopic = result.handshakeTopic;\n      if (!result.bridge) {\n        throw Error(\"Invalid or missing bridge url parameter value\");\n      }\n      const bridge = decodeURIComponent(result.bridge);\n      if (!result.key) {\n        throw Error(\"Invalid or missing key parameter value\");\n      }\n      const key = result.key;\n      return {\n        handshakeTopic,\n        bridge,\n        key\n      };\n    } else {\n      throw new Error(errors_1.ERROR_INVALID_URI);\n    }\n  }\n  _generateKey() {\n    return tslib_1.__awaiter(this, void 0, void 0, function* () {\n      if (this._cryptoLib) {\n        const result = yield this._cryptoLib.generateKey();\n        return result;\n      }\n      return null;\n    });\n  }\n  _encrypt(data) {\n    return tslib_1.__awaiter(this, void 0, void 0, function* () {\n      const key = this._key;\n      if (this._cryptoLib && key) {\n        const result = yield this._cryptoLib.encrypt(data, key);\n        return result;\n      }\n      return null;\n    });\n  }\n  _decrypt(payload) {\n    return tslib_1.__awaiter(this, void 0, void 0, function* () {\n      const key = this._key;\n      if (this._cryptoLib && key) {\n        const result = yield this._cryptoLib.decrypt(payload, key);\n        return result;\n      }\n      return null;\n    });\n  }\n  _getStorageSession() {\n    let result = null;\n    if (this._sessionStorage) {\n      result = this._sessionStorage.getSession();\n    }\n    return result;\n  }\n  _setStorageSession() {\n    if (this._sessionStorage) {\n      this._sessionStorage.setSession(this.session);\n    }\n  }\n  _removeStorageSession() {\n    if (this._sessionStorage) {\n      this._sessionStorage.removeSession();\n    }\n  }\n  _manageStorageSession() {\n    if (this._connected) {\n      this._setStorageSession();\n    } else {\n      this._removeStorageSession();\n    }\n  }\n  _registerPushServer(pushServerOpts) {\n    if (!pushServerOpts.url || typeof pushServerOpts.url !== \"string\") {\n      throw Error(\"Invalid or missing pushServerOpts.url parameter value\");\n    }\n    if (!pushServerOpts.type || typeof pushServerOpts.type !== \"string\") {\n      throw Error(\"Invalid or missing pushServerOpts.type parameter value\");\n    }\n    if (!pushServerOpts.token || typeof pushServerOpts.token !== \"string\") {\n      throw Error(\"Invalid or missing pushServerOpts.token parameter value\");\n    }\n    const pushSubscription = {\n      bridge: this.bridge,\n      topic: this.clientId,\n      type: pushServerOpts.type,\n      token: pushServerOpts.token,\n      peerName: \"\",\n      language: pushServerOpts.language || \"\"\n    };\n    this.on(\"connect\", (error, payload) => tslib_1.__awaiter(this, void 0, void 0, function* () {\n      if (error) {\n        throw error;\n      }\n      if (pushServerOpts.peerMeta) {\n        const peerName = payload.params[0].peerMeta.name;\n        pushSubscription.peerName = peerName;\n      }\n      try {\n        const response = yield fetch(\"\".concat(pushServerOpts.url, \"/new\"), {\n          method: \"POST\",\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(pushSubscription)\n        });\n        const json = yield response.json();\n        if (!json.success) {\n          throw Error(\"Failed to register in Push Server\");\n        }\n      } catch (error) {\n        throw Error(\"Failed to register in Push Server\");\n      }\n    }));\n  }\n}\nexports.default = Connector;","map":{"version":3,"names":["utils_1","require","socket_transport_1","tslib_1","__importDefault","errors_1","events_1","storage_1","Connector","constructor","opts","protocol","version","_bridge","_key","_clientId","_clientMeta","_peerId","_peerMeta","_handshakeId","_handshakeTopic","_connected","_accounts","_chainId","_networkId","_rpcUrl","_eventManager","default","getClientMeta","connectorOpts","clientMeta","_cryptoLib","cryptoLib","_sessionStorage","sessionStorage","_qrcodeModal","qrcodeModal","_qrcodeModalOptions","qrcodeModalOptions","bridge","uri","session","Error","ERROR_MISSING_REQUIRED","_getStorageSession","handshakeId","_subscribeToSessionResponse","_transport","transport","url","subscriptions","clientId","_subscribeToInternalEvents","_initTransport","_subscribeToSessionRequest","pushServerOpts","_registerPushServer","value","key","convertHexToArrayBuffer","convertArrayBufferToHex","uuid","peerId","peerMeta","handshakeTopic","_uri","_formatUri","_parseUri","chainId","networkId","accounts","rpcUrl","connected","pending","on","event","callback","eventEmitter","subscribe","createInstantRequest","instantRequest","_generateKey","request","_formatRequest","method","params","id","trigger","ERROR_QRCODE_MODAL_USER_CLOSED","endInstantRequest","killSession","result","_sendCallRequest","error","connect","ERROR_QRCODE_MODAL_NOT_PROVIDED","createSession","Promise","resolve","reject","__awaiter","payload","ERROR_SESSION_CONNECTED","_sendSessionRequest","topic","approveSession","sessionStatus","sessionParams","approved","response","jsonrpc","_sendResponse","_setStorageSession","rejectSession","sessionError","message","ERROR_SESSION_REJECTED","_formatResponse","_removeStorageSession","updateSession","ERROR_SESSION_DISCONNECTED","_manageStorageSession","_sendRequest","_handleSessionDisconnect","sendTransaction","tx","parsedTx","parseTransactionData","signTransaction","signMessage","signPersonalMessage","parsePersonalSign","signTypedData","updateChain","chainParams","unsafeSend","options","_subscribeToResponse","ERROR_MISSING_JSON_RPC","sendCustomRequest","convertNumberToHex","formattedRequest","approveRequest","isJsonRpcResponseSuccess","formattedResponse","ERROR_MISSING_RESULT","rejectRequest","isJsonRpcResponseError","ERROR_MISSING_ERROR","callRequest","encryptionPayload","_encrypt","JSON","stringify","silent","forcePushNotification","isSilentPayload","send","errorMsg","isMobile","signingMethods","includes","mobileLinkUrl","getLocal","mobileLinkChoiceKey","window","location","href","_subscribeToCallResponse","ERROR_MISSING_METHOD","payloadId","ERROR_MISSING_ID","baseResponse","formatRpcError","errorResponse","Object","assign","successResponse","ERROR_INVALID_RESPONSE","close","removeLocal","_handleSessionResponse","_handleIncomingMessages","socketMessage","activeTopics","parse","_decrypt","concat","open","code","toString","internalPayload","encodeURIComponent","parseWalletConnectUri","decodeURIComponent","ERROR_INVALID_URI","generateKey","data","encrypt","decrypt","getSession","setSession","removeSession","type","token","pushSubscription","peerName","language","name","fetch","headers","Accept","body","json","success","exports"],"sources":["../../src/index.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}