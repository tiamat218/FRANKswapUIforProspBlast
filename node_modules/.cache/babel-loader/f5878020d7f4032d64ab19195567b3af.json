{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Devrim\\\\Documents\\\\FRANKswapUIforProspBlast\\\\src\\\\components\\\\SearchModal\\\\ImportRow.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Button, Text, CheckmarkCircleIcon } from '@pancakeswap/uikit';\nimport { AutoRow, RowFixed } from 'components/Layout/Row';\nimport { AutoColumn } from 'components/Layout/Column';\nimport CurrencyLogo from 'components/Logo/CurrencyLogo';\nimport { ListLogo } from 'components/Logo';\nimport useActiveWeb3React from 'hooks/useActiveWeb3React';\nimport { useCombinedInactiveList } from 'state/lists/hooks';\nimport styled from 'styled-components';\nimport { useIsUserAddedToken, useIsTokenActive } from 'hooks/Tokens';\nimport { useTranslation } from 'contexts/Localization';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TokenSection = styled.div`\n  padding: 4px 20px;\n  height: 56px;\n  display: grid;\n  grid-template-columns: auto minmax(auto, 1fr) auto;\n  grid-gap: 16px;\n  align-items: center;\n\n  opacity: ${({\n  dim\n}) => dim ? '0.4' : '1'};\n`;\n_c = TokenSection;\nconst CheckIcon = styled(CheckmarkCircleIcon)`\n  height: 16px;\n  width: 16px;\n  margin-right: 6px;\n  stroke: ${({\n  theme\n}) => theme.colors.success};\n`;\n_c2 = CheckIcon;\nconst NameOverflow = styled.div`\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  max-width: 140px;\n  font-size: 12px;\n`;\n_c3 = NameOverflow;\nexport default function ImportRow({\n  token,\n  style,\n  dim,\n  showImportView,\n  setImportToken\n}) {\n  _s();\n  var _inactiveTokenList$ch, _inactiveTokenList$ch2;\n  // gloabls\n  const {\n    chainId\n  } = useActiveWeb3React();\n  const {\n    t\n  } = useTranslation();\n\n  // check if token comes from list\n  const inactiveTokenList = useCombinedInactiveList();\n  const list = chainId && (inactiveTokenList === null || inactiveTokenList === void 0 ? void 0 : (_inactiveTokenList$ch = inactiveTokenList[chainId]) === null || _inactiveTokenList$ch === void 0 ? void 0 : (_inactiveTokenList$ch2 = _inactiveTokenList$ch[token.address]) === null || _inactiveTokenList$ch2 === void 0 ? void 0 : _inactiveTokenList$ch2.list);\n\n  // check if already active on list or local storage tokens\n  const isAdded = useIsUserAddedToken(token);\n  const isActive = useIsTokenActive(token);\n  return /*#__PURE__*/_jsxDEV(TokenSection, {\n    style: style,\n    children: [/*#__PURE__*/_jsxDEV(CurrencyLogo, {\n      currency: token,\n      size: \"24px\",\n      style: {\n        opacity: dim ? '0.6' : '1'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AutoColumn, {\n      gap: \"4px\",\n      style: {\n        opacity: dim ? '0.6' : '1'\n      },\n      children: [/*#__PURE__*/_jsxDEV(AutoRow, {\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          children: token.symbol\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          color: \"textDisabled\",\n          ml: \"8px\",\n          children: /*#__PURE__*/_jsxDEV(NameOverflow, {\n            title: token.name,\n            children: token.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), list && list.logoURI && /*#__PURE__*/_jsxDEV(RowFixed, {\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          small: true,\n          mr: \"4px\",\n          color: \"textSubtle\",\n          children: [t('via'), \" \", list.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ListLogo, {\n          logoURI: list.logoURI,\n          size: \"12px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), !isActive && !isAdded ? /*#__PURE__*/_jsxDEV(Button, {\n      width: \"fit-content\",\n      onClick: () => {\n        if (setImportToken) {\n          setImportToken(token);\n        }\n        showImportView();\n      },\n      children: t('Import')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(RowFixed, {\n      style: {\n        minWidth: 'fit-content'\n      },\n      children: [/*#__PURE__*/_jsxDEV(CheckIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        color: \"success\",\n        children: \"Active\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n_s(ImportRow, \"k6VBbn8Dq7VAfH9UmbWAqWe75KI=\", false, function () {\n  return [useActiveWeb3React, useTranslation, useCombinedInactiveList, useIsUserAddedToken, useIsTokenActive];\n});\n_c4 = ImportRow;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"TokenSection\");\n$RefreshReg$(_c2, \"CheckIcon\");\n$RefreshReg$(_c3, \"NameOverflow\");\n$RefreshReg$(_c4, \"ImportRow\");","map":{"version":3,"names":["React","Button","Text","CheckmarkCircleIcon","AutoRow","RowFixed","AutoColumn","CurrencyLogo","ListLogo","useActiveWeb3React","useCombinedInactiveList","styled","useIsUserAddedToken","useIsTokenActive","useTranslation","jsxDEV","_jsxDEV","TokenSection","div","dim","_c","CheckIcon","theme","colors","success","_c2","NameOverflow","_c3","ImportRow","token","style","showImportView","setImportToken","_s","_inactiveTokenList$ch","_inactiveTokenList$ch2","chainId","t","inactiveTokenList","list","address","isAdded","isActive","children","currency","size","opacity","fileName","_jsxFileName","lineNumber","columnNumber","gap","symbol","color","ml","title","name","logoURI","small","mr","width","onClick","minWidth","_c4","$RefreshReg$"],"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/components/SearchModal/ImportRow.tsx"],"sourcesContent":["import React, { CSSProperties } from 'react'\r\nimport { Token } from '@pancakeswap/sdk'\r\nimport { Button, Text, CheckmarkCircleIcon } from '@pancakeswap/uikit'\r\nimport { AutoRow, RowFixed } from 'components/Layout/Row'\r\nimport { AutoColumn } from 'components/Layout/Column'\r\nimport CurrencyLogo from 'components/Logo/CurrencyLogo'\r\nimport { ListLogo } from 'components/Logo'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport { useCombinedInactiveList } from 'state/lists/hooks'\r\nimport styled from 'styled-components'\r\nimport { useIsUserAddedToken, useIsTokenActive } from 'hooks/Tokens'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\nconst TokenSection = styled.div<{ dim?: boolean }>`\r\n  padding: 4px 20px;\r\n  height: 56px;\r\n  display: grid;\r\n  grid-template-columns: auto minmax(auto, 1fr) auto;\r\n  grid-gap: 16px;\r\n  align-items: center;\r\n\r\n  opacity: ${({ dim }) => (dim ? '0.4' : '1')};\r\n`\r\n\r\nconst CheckIcon = styled(CheckmarkCircleIcon)`\r\n  height: 16px;\r\n  width: 16px;\r\n  margin-right: 6px;\r\n  stroke: ${({ theme }) => theme.colors.success};\r\n`\r\n\r\nconst NameOverflow = styled.div`\r\n  white-space: nowrap;\r\n  text-overflow: ellipsis;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  max-width: 140px;\r\n  font-size: 12px;\r\n`\r\n\r\nexport default function ImportRow({\r\n  token,\r\n  style,\r\n  dim,\r\n  showImportView,\r\n  setImportToken,\r\n}: {\r\n  token: Token\r\n  style?: CSSProperties\r\n  dim?: boolean\r\n  showImportView: () => void\r\n  setImportToken: (token: Token) => void\r\n}) {\r\n  // gloabls\r\n  const { chainId } = useActiveWeb3React()\r\n\r\n  const { t } = useTranslation()\r\n\r\n  // check if token comes from list\r\n  const inactiveTokenList = useCombinedInactiveList()\r\n  const list = chainId && inactiveTokenList?.[chainId]?.[token.address]?.list\r\n\r\n  // check if already active on list or local storage tokens\r\n  const isAdded = useIsUserAddedToken(token)\r\n  const isActive = useIsTokenActive(token)\r\n\r\n  return (\r\n    <TokenSection style={style}>\r\n      <CurrencyLogo currency={token} size=\"24px\" style={{ opacity: dim ? '0.6' : '1' }} />\r\n      <AutoColumn gap=\"4px\" style={{ opacity: dim ? '0.6' : '1' }}>\r\n        <AutoRow>\r\n          <Text>{token.symbol}</Text>\r\n          <Text color=\"textDisabled\" ml=\"8px\">\r\n            <NameOverflow title={token.name}>{token.name}</NameOverflow>\r\n          </Text>\r\n        </AutoRow>\r\n        {list && list.logoURI && (\r\n          <RowFixed>\r\n            <Text small mr=\"4px\" color=\"textSubtle\">\r\n              {t('via')} {list.name}\r\n            </Text>\r\n            <ListLogo logoURI={list.logoURI} size=\"12px\" />\r\n          </RowFixed>\r\n        )}\r\n      </AutoColumn>\r\n      {!isActive && !isAdded ? (\r\n        <Button\r\n          width=\"fit-content\"\r\n          onClick={() => {\r\n            if (setImportToken) {\r\n              setImportToken(token)\r\n            }\r\n            showImportView()\r\n          }}\r\n        >\r\n          {t('Import')}\r\n        </Button>\r\n      ) : (\r\n        <RowFixed style={{ minWidth: 'fit-content' }}>\r\n          <CheckIcon />\r\n          <Text color=\"success\">Active</Text>\r\n        </RowFixed>\r\n      )}\r\n    </TokenSection>\r\n  )\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}