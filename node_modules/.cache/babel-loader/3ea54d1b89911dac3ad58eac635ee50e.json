{"ast":null,"code":"import{ChainId,JSBI,Percent,WETH}from'@pancakeswap/sdk';import{BUSD,BTCB,CAKE,WBNB}from'./tokens';export const ROUTER_ADDRESS='0x10ED43C718714eb63d5aA57B78B54704E256024E';// a list of tokens by chain\n// used to construct intermediary pairs for trading\nexport const BASES_TO_CHECK_TRADES_AGAINST={[ChainId.MAINNET]:[WETH[ChainId.MAINNET],CAKE[ChainId.MAINNET],BUSD[ChainId.MAINNET],BTCB],[ChainId.TESTNET]:[WETH[ChainId.TESTNET],CAKE[ChainId.TESTNET],BUSD[ChainId.TESTNET]]};/**\r\n * Addittional bases for specific tokens\r\n * @example { [WBTC.address]: [renBTC], [renBTC.address]: [WBTC] }\r\n */export const ADDITIONAL_BASES={[ChainId.MAINNET]:{}};/**\r\n * Some tokens can only be swapped via certain pairs, so we override the list of bases that are considered for these\r\n * tokens.\r\n * @example [AMPL.address]: [DAI, WETH[ChainId.MAINNET]]\r\n */export const CUSTOM_BASES={[ChainId.MAINNET]:{}};// used for display in the default list when adding liquidity\nexport const SUGGESTED_BASES={[ChainId.MAINNET]:[BUSD[ChainId.MAINNET],CAKE[ChainId.MAINNET],BTCB],[ChainId.TESTNET]:[WETH[ChainId.TESTNET],CAKE[ChainId.TESTNET],BUSD[ChainId.TESTNET]]};// used to construct the list of all pairs we consider by default in the frontend\nexport const BASES_TO_TRACK_LIQUIDITY_FOR={[ChainId.MAINNET]:[WETH[ChainId.MAINNET],BUSD[ChainId.MAINNET]],[ChainId.TESTNET]:[WETH[ChainId.TESTNET],CAKE[ChainId.TESTNET],BUSD[ChainId.TESTNET]]};export const PINNED_PAIRS={[ChainId.MAINNET]:[[CAKE[ChainId.MAINNET],WBNB],[BUSD[ChainId.MAINNET],WBNB],[BTCB,WBNB]]};export const NetworkContextName='NETWORK';// default allowed slippage, in bips\nexport const INITIAL_ALLOWED_SLIPPAGE=50;// 20 minutes, denominated in seconds\nexport const DEFAULT_DEADLINE_FROM_NOW=60*20;export const BIG_INT_ZERO=JSBI.BigInt(0);// one basis point\nexport const ONE_BIPS=new Percent(JSBI.BigInt(1),JSBI.BigInt(10000));export const BIPS_BASE=JSBI.BigInt(10000);// used for warning states\nexport const ALLOWED_PRICE_IMPACT_LOW=new Percent(JSBI.BigInt(100),BIPS_BASE);// 1%\nexport const ALLOWED_PRICE_IMPACT_MEDIUM=new Percent(JSBI.BigInt(300),BIPS_BASE);// 3%\nexport const ALLOWED_PRICE_IMPACT_HIGH=new Percent(JSBI.BigInt(500),BIPS_BASE);// 5%\n// if the price slippage exceeds this number, force the user to type 'confirm' to execute\nexport const PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN=new Percent(JSBI.BigInt(1000),BIPS_BASE);// 10%\n// for non expert mode disable swaps above this\nexport const BLOCKED_PRICE_IMPACT_NON_EXPERT=new Percent(JSBI.BigInt(1500),BIPS_BASE);// 15%\n// used to ensure the user doesn't send so much BNB so they end up with <.01\nexport const MIN_BNB=JSBI.exponentiate(JSBI.BigInt(10),JSBI.BigInt(16));// .01 BNB\nexport const BETTER_TRADE_LESS_HOPS_THRESHOLD=new Percent(JSBI.BigInt(50),JSBI.BigInt(10000));export const ZERO_PERCENT=new Percent('0');export const ONE_HUNDRED_PERCENT=new Percent('1');// SDN OFAC addresses\nexport const BLOCKED_ADDRESSES=[];export{default as farmsConfig}from'./farms';export{default as poolsConfig}from'./pools';export{default as ifosConfig}from'./ifo';","map":{"version":3,"names":["ChainId","JSBI","Percent","WETH","BUSD","BTCB","CAKE","WBNB","ROUTER_ADDRESS","BASES_TO_CHECK_TRADES_AGAINST","MAINNET","TESTNET","ADDITIONAL_BASES","CUSTOM_BASES","SUGGESTED_BASES","BASES_TO_TRACK_LIQUIDITY_FOR","PINNED_PAIRS","NetworkContextName","INITIAL_ALLOWED_SLIPPAGE","DEFAULT_DEADLINE_FROM_NOW","BIG_INT_ZERO","BigInt","ONE_BIPS","BIPS_BASE","ALLOWED_PRICE_IMPACT_LOW","ALLOWED_PRICE_IMPACT_MEDIUM","ALLOWED_PRICE_IMPACT_HIGH","PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN","BLOCKED_PRICE_IMPACT_NON_EXPERT","MIN_BNB","exponentiate","BETTER_TRADE_LESS_HOPS_THRESHOLD","ZERO_PERCENT","ONE_HUNDRED_PERCENT","BLOCKED_ADDRESSES","default","farmsConfig","poolsConfig","ifosConfig"],"sources":["C:/Users/frkul/Documents/swapUI_pancake-frontend/src/config/constants/index.ts"],"sourcesContent":["import { ChainId, JSBI, Percent, Token, WETH } from '@pancakeswap/sdk'\r\nimport { BUSD, BTCB, CAKE, WBNB } from './tokens'\r\n\r\nexport const ROUTER_ADDRESS = '0x10ED43C718714eb63d5aA57B78B54704E256024E'\r\n\r\n// a list of tokens by chain\r\ntype ChainTokenList = {\r\n  readonly [chainId in ChainId]: Token[]\r\n}\r\n\r\n// used to construct intermediary pairs for trading\r\nexport const BASES_TO_CHECK_TRADES_AGAINST: ChainTokenList = {\r\n  [ChainId.MAINNET]: [WETH[ChainId.MAINNET], CAKE[ChainId.MAINNET], BUSD[ChainId.MAINNET], BTCB],\r\n  [ChainId.TESTNET]: [WETH[ChainId.TESTNET], CAKE[ChainId.TESTNET], BUSD[ChainId.TESTNET]],\r\n}\r\n\r\n/**\r\n * Addittional bases for specific tokens\r\n * @example { [WBTC.address]: [renBTC], [renBTC.address]: [WBTC] }\r\n */\r\nexport const ADDITIONAL_BASES: { [chainId in ChainId]?: { [tokenAddress: string]: Token[] } } = {\r\n  [ChainId.MAINNET]: {},\r\n}\r\n\r\n/**\r\n * Some tokens can only be swapped via certain pairs, so we override the list of bases that are considered for these\r\n * tokens.\r\n * @example [AMPL.address]: [DAI, WETH[ChainId.MAINNET]]\r\n */\r\nexport const CUSTOM_BASES: { [chainId in ChainId]?: { [tokenAddress: string]: Token[] } } = {\r\n  [ChainId.MAINNET]: {},\r\n}\r\n\r\n// used for display in the default list when adding liquidity\r\nexport const SUGGESTED_BASES: ChainTokenList = {\r\n  [ChainId.MAINNET]: [BUSD[ChainId.MAINNET], CAKE[ChainId.MAINNET], BTCB],\r\n  [ChainId.TESTNET]: [WETH[ChainId.TESTNET], CAKE[ChainId.TESTNET], BUSD[ChainId.TESTNET]],\r\n}\r\n\r\n// used to construct the list of all pairs we consider by default in the frontend\r\nexport const BASES_TO_TRACK_LIQUIDITY_FOR: ChainTokenList = {\r\n  [ChainId.MAINNET]: [WETH[ChainId.MAINNET],  BUSD[ChainId.MAINNET], ],\r\n  [ChainId.TESTNET]: [WETH[ChainId.TESTNET], CAKE[ChainId.TESTNET], BUSD[ChainId.TESTNET]],\r\n}\r\n\r\nexport const PINNED_PAIRS: { readonly [chainId in ChainId]?: [Token, Token][] } = {\r\n  [ChainId.MAINNET]: [\r\n    [CAKE[ChainId.MAINNET], WBNB],\r\n    [BUSD[ChainId.MAINNET], WBNB],\r\n    [BTCB, WBNB],\r\n  ],\r\n}\r\n\r\nexport const NetworkContextName = 'NETWORK'\r\n\r\n// default allowed slippage, in bips\r\nexport const INITIAL_ALLOWED_SLIPPAGE = 50\r\n// 20 minutes, denominated in seconds\r\nexport const DEFAULT_DEADLINE_FROM_NOW = 60 * 20\r\n\r\nexport const BIG_INT_ZERO = JSBI.BigInt(0)\r\n\r\n// one basis point\r\nexport const ONE_BIPS = new Percent(JSBI.BigInt(1), JSBI.BigInt(10000))\r\nexport const BIPS_BASE = JSBI.BigInt(10000)\r\n// used for warning states\r\nexport const ALLOWED_PRICE_IMPACT_LOW: Percent = new Percent(JSBI.BigInt(100), BIPS_BASE) // 1%\r\nexport const ALLOWED_PRICE_IMPACT_MEDIUM: Percent = new Percent(JSBI.BigInt(300), BIPS_BASE) // 3%\r\nexport const ALLOWED_PRICE_IMPACT_HIGH: Percent = new Percent(JSBI.BigInt(500), BIPS_BASE) // 5%\r\n// if the price slippage exceeds this number, force the user to type 'confirm' to execute\r\nexport const PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN: Percent = new Percent(JSBI.BigInt(1000), BIPS_BASE) // 10%\r\n// for non expert mode disable swaps above this\r\nexport const BLOCKED_PRICE_IMPACT_NON_EXPERT: Percent = new Percent(JSBI.BigInt(1500), BIPS_BASE) // 15%\r\n\r\n// used to ensure the user doesn't send so much BNB so they end up with <.01\r\nexport const MIN_BNB: JSBI = JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(16)) // .01 BNB\r\nexport const BETTER_TRADE_LESS_HOPS_THRESHOLD = new Percent(JSBI.BigInt(50), JSBI.BigInt(10000))\r\n\r\nexport const ZERO_PERCENT = new Percent('0')\r\nexport const ONE_HUNDRED_PERCENT = new Percent('1')\r\n\r\n// SDN OFAC addresses\r\nexport const BLOCKED_ADDRESSES: string[] = [\r\n]\r\n\r\nexport { default as farmsConfig } from './farms'\r\nexport { default as poolsConfig } from './pools'\r\nexport { default as ifosConfig } from './ifo'\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}