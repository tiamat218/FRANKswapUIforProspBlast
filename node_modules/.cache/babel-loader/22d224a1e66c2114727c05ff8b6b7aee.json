{"ast":null,"code":"var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useAppDispatch } from 'state';\nimport { simpleRpcProvider } from 'utils/providers';\nimport { setBlock } from '.';\nexport const usePollBlockNumber = () => {\n  _s();\n\n  const dispatch = useAppDispatch();\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      const blockNumber = await simpleRpcProvider.getBlockNumber();\n      dispatch(setBlock(blockNumber));\n    }, 6000);\n    return () => clearInterval(interval);\n  }, [dispatch]);\n};\n\n_s(usePollBlockNumber, \"DKdeqxp2QYw2p6z8/ErYMRK/Ubo=\", false, function () {\n  return [useAppDispatch];\n});\n\nexport const useBlock = () => {\n  _s2();\n\n  return useSelector(state => state.block);\n};\n\n_s2(useBlock, \"nKHvd/QB6hocKEk0fSJoSYcCyR8=\", false, function () {\n  return [useSelector];\n});\n\nexport const useInitialBlock = () => {\n  _s3();\n\n  return useSelector(state => state.block.initialBlock);\n};\n\n_s3(useInitialBlock, \"nKHvd/QB6hocKEk0fSJoSYcCyR8=\", false, function () {\n  return [useSelector];\n});","map":{"version":3,"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/state/block/hooks.ts"],"names":["useEffect","useSelector","useAppDispatch","simpleRpcProvider","setBlock","usePollBlockNumber","dispatch","interval","setInterval","blockNumber","getBlockNumber","clearInterval","useBlock","state","block","useInitialBlock","initialBlock"],"mappings":";;;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,cAAT,QAA+B,OAA/B;AACA,SAASC,iBAAT,QAAkC,iBAAlC;AACA,SAASC,QAAT,QAAyB,GAAzB;AAGA,OAAO,MAAMC,kBAAkB,GAAG,MAAM;AAAA;;AACtC,QAAMC,QAAQ,GAAGJ,cAAc,EAA/B;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMO,QAAQ,GAAGC,WAAW,CAAC,YAAY;AACvC,YAAMC,WAAW,GAAG,MAAMN,iBAAiB,CAACO,cAAlB,EAA1B;AACAJ,MAAAA,QAAQ,CAACF,QAAQ,CAACK,WAAD,CAAT,CAAR;AACD,KAH2B,EAGzB,IAHyB,CAA5B;AAKA,WAAO,MAAME,aAAa,CAACJ,QAAD,CAA1B;AACD,GAPQ,EAON,CAACD,QAAD,CAPM,CAAT;AAQD,CAXM;;GAAMD,kB;UACMH,c;;;AAYnB,OAAO,MAAMU,QAAQ,GAAG,MAAM;AAAA;;AAC5B,SAAOX,WAAW,CAAEY,KAAD,IAAkBA,KAAK,CAACC,KAAzB,CAAlB;AACD,CAFM;;IAAMF,Q;UACJX,W;;;AAGT,OAAO,MAAMc,eAAe,GAAG,MAAM;AAAA;;AACnC,SAAOd,WAAW,CAAEY,KAAD,IAAkBA,KAAK,CAACC,KAAN,CAAYE,YAA/B,CAAlB;AACD,CAFM;;IAAMD,e;UACJd,W","sourcesContent":["import { useEffect } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { useAppDispatch } from 'state'\r\nimport { simpleRpcProvider } from 'utils/providers'\r\nimport { setBlock } from '.'\r\nimport { State } from '../types'\r\n\r\nexport const usePollBlockNumber = () => {\r\n  const dispatch = useAppDispatch()\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(async () => {\r\n      const blockNumber = await simpleRpcProvider.getBlockNumber()\r\n      dispatch(setBlock(blockNumber))\r\n    }, 6000)\r\n\r\n    return () => clearInterval(interval)\r\n  }, [dispatch])\r\n}\r\n\r\nexport const useBlock = () => {\r\n  return useSelector((state: State) => state.block)\r\n}\r\n\r\nexport const useInitialBlock = () => {\r\n  return useSelector((state: State) => state.block.initialBlock)\r\n}\r\n"]},"metadata":{},"sourceType":"module"}