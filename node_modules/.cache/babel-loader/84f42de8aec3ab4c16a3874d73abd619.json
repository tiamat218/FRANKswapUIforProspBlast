{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\frkul\\\\Documents\\\\swapUI_pancake-frontend\\\\src\\\\views\\\\Profile\\\\ProfileCreation\\\\UserName.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport BigNumber from 'bignumber.js';\nimport { Card, CardBody, Heading, Text, Input as UIKitInput, Button, AutoRenewIcon, CheckmarkIcon, Flex, WarningIcon, useModal, Skeleton, Checkbox } from '@pancakeswap/uikit';\nimport { parseISO, formatDistance } from 'date-fns';\nimport { useWeb3React } from '@web3-react/core';\nimport useToast from 'hooks/useToast';\nimport { signMessage } from 'utils/web3React';\nimport useWeb3Provider from 'hooks/useActiveWeb3React';\nimport { useTranslation } from 'contexts/Localization';\nimport useHasCakeBalance from 'hooks/useHasCakeBalance';\nimport { DEFAULT_TOKEN_DECIMAL } from 'config';\nimport debounce from 'lodash/debounce';\nimport ConfirmProfileCreationModal from '../components/ConfirmProfileCreationModal';\nimport useProfileCreation from './contexts/hook';\nimport { USERNAME_MIN_LENGTH, USERNAME_MAX_LENGTH, REGISTER_COST } from './config';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar ExistingUserState; // username has not been created\n(function (ExistingUserState) {\n  ExistingUserState[\"IDLE\"] = \"idle\";\n  ExistingUserState[\"CREATED\"] = \"created\";\n  ExistingUserState[\"NEW\"] = \"new\";\n})(ExistingUserState || (ExistingUserState = {}));\nconst profileApiUrl = process.env.REACT_APP_API_PROFILE;\nconst minimumCakeToRegister = new BigNumber(REGISTER_COST).multipliedBy(DEFAULT_TOKEN_DECIMAL);\nconst InputWrap = styled.div`\n  position: relative;\n  max-width: 240px;\n`;\n_c = InputWrap;\nconst Input = styled(UIKitInput)`\n  padding-right: 40px;\n`;\n_c2 = Input;\nconst Indicator = styled(Flex)`\n  align-items: center;\n  height: 24px;\n  justify-content: center;\n  margin-top: -12px;\n  position: absolute;\n  right: 16px;\n  top: 50%;\n  width: 24px;\n`;\n_c3 = Indicator;\nconst UserName = () => {\n  _s();\n  const [isAcknowledged, setIsAcknowledged] = useState(false);\n  const {\n    teamId,\n    selectedNft,\n    userName,\n    actions,\n    minimumCakeRequired,\n    allowance\n  } = useProfileCreation();\n  const {\n    t\n  } = useTranslation();\n  const {\n    account\n  } = useWeb3React();\n  const {\n    toastError\n  } = useToast();\n  const {\n    library\n  } = useWeb3Provider();\n  const [existingUserState, setExistingUserState] = useState(ExistingUserState.IDLE);\n  const [isValid, setIsValid] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [message, setMessage] = useState('');\n  const hasMinimumCakeRequired = useHasCakeBalance(minimumCakeToRegister);\n  const [onPresentConfirmProfileCreation] = useModal( /*#__PURE__*/_jsxDEV(ConfirmProfileCreationModal, {\n    userName: userName,\n    selectedNft: selectedNft,\n    account: account,\n    teamId: teamId,\n    minimumCakeRequired: minimumCakeRequired,\n    allowance: allowance\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this), false);\n  const isUserCreated = existingUserState === ExistingUserState.CREATED;\n  const checkUsernameValidity = debounce(async value => {\n    try {\n      setIsLoading(true);\n      const res = await fetch(`${profileApiUrl}/api/users/valid/${value}`);\n      if (res.ok) {\n        setIsValid(true);\n        setMessage('');\n      } else {\n        var _data$error;\n        const data = await res.json();\n        setIsValid(false);\n        setMessage(data === null || data === void 0 ? void 0 : (_data$error = data.error) === null || _data$error === void 0 ? void 0 : _data$error.message);\n      }\n    } finally {\n      setIsLoading(false);\n    }\n  }, 200);\n  const handleChange = event => {\n    const {\n      value\n    } = event.target;\n    actions.setUserName(value);\n    checkUsernameValidity(value);\n  };\n  const handleConfirm = async () => {\n    try {\n      setIsLoading(true);\n      const signature = await signMessage(library, account, userName);\n      const response = await fetch(`${profileApiUrl}/api/users/register`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          address: account,\n          username: userName,\n          signature\n        })\n      });\n      if (response.ok) {\n        setExistingUserState(ExistingUserState.CREATED);\n      } else {\n        var _data$error2;\n        const data = await response.json();\n        toastError(t('Error'), data === null || data === void 0 ? void 0 : (_data$error2 = data.error) === null || _data$error2 === void 0 ? void 0 : _data$error2.message);\n      }\n    } catch (error) {\n      toastError((error === null || error === void 0 ? void 0 : error.message) ? error.message : JSON.stringify(error));\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleAcknowledge = () => setIsAcknowledged(!isAcknowledged);\n\n  // Perform an initial check to see if the wallet has already created a username\n  useEffect(() => {\n    const fetchUser = async () => {\n      try {\n        const response = await fetch(`${profileApiUrl}/api/users/${account}`);\n        const data = await response.json();\n        if (response.ok) {\n          const dateCreated = formatDistance(parseISO(data.created_at), new Date());\n          setMessage(t('Created %dateCreated% ago', {\n            dateCreated\n          }));\n          actions.setUserName(data.username);\n          setExistingUserState(ExistingUserState.CREATED);\n          setIsValid(true);\n        } else {\n          setExistingUserState(ExistingUserState.NEW);\n        }\n      } catch (error) {\n        toastError(t('Error'), t('Unable to verify username'));\n      }\n    };\n    if (account) {\n      fetchUser();\n    }\n  }, [account, setExistingUserState, setIsValid, setMessage, actions, toastError, t]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Text, {\n      fontSize: \"20px\",\n      color: \"textSubtle\",\n      bold: true,\n      children: t('Step %num%', {\n        num: 4\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Heading, {\n      as: \"h3\",\n      scale: \"xl\",\n      mb: \"24px\",\n      children: t('Set Your Name')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Text, {\n      as: \"p\",\n      mb: \"24px\",\n      children: t('This name will be shown in team leaderboards and search results as long as your profile is active.')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      mb: \"24px\",\n      children: /*#__PURE__*/_jsxDEV(CardBody, {\n        children: [/*#__PURE__*/_jsxDEV(Heading, {\n          as: \"h4\",\n          scale: \"lg\",\n          mb: \"8px\",\n          children: t('Set Your Name')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          as: \"p\",\n          color: \"textSubtle\",\n          mb: \"24px\",\n          children: t('Your name must be at least 3 and at most 15 standard letters and numbers long. You canâ€™t change this once you click Confirm.')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this), existingUserState === ExistingUserState.IDLE ? /*#__PURE__*/_jsxDEV(Skeleton, {\n          height: \"40px\",\n          width: \"240px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(InputWrap, {\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            onChange: handleChange,\n            isWarning: userName && !isValid,\n            isSuccess: userName && isValid,\n            minLength: USERNAME_MIN_LENGTH,\n            maxLength: USERNAME_MAX_LENGTH,\n            disabled: isUserCreated,\n            placeholder: t('Enter your name...'),\n            value: userName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Indicator, {\n            children: [isLoading && /*#__PURE__*/_jsxDEV(AutoRenewIcon, {\n              spin: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 31\n            }, this), !isLoading && isValid && userName && /*#__PURE__*/_jsxDEV(CheckmarkIcon, {\n              color: \"success\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 55\n            }, this), !isLoading && !isValid && userName && /*#__PURE__*/_jsxDEV(WarningIcon, {\n              color: \"failure\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 56\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          color: \"textSubtle\",\n          fontSize: \"14px\",\n          py: \"4px\",\n          mb: \"16px\",\n          style: {\n            minHeight: '30px'\n          },\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          as: \"p\",\n          color: \"failure\",\n          mb: \"8px\",\n          children: t(\"Only reuse a name from other social media if you're OK with people viewing your wallet. You can't change your name once you click Confirm.\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"checkbox\",\n          style: {\n            display: 'block',\n            cursor: 'pointer',\n            marginBottom: '24px'\n          },\n          children: /*#__PURE__*/_jsxDEV(Flex, {\n            alignItems: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                flex: 'none'\n              },\n              children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                id: \"checkbox\",\n                scale: \"sm\",\n                checked: isAcknowledged,\n                onChange: handleAcknowledge\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Text, {\n              ml: \"8px\",\n              children: t('I understand that people can view my wallet if they know my username')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleConfirm,\n          disabled: !isValid || isUserCreated || isLoading || !isAcknowledged,\n          children: t('Confirm')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: onPresentConfirmProfileCreation,\n      disabled: !isValid || !isUserCreated,\n      id: \"completeProfileCreation\",\n      children: t('Complete Profile')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }, this), !hasMinimumCakeRequired && /*#__PURE__*/_jsxDEV(Text, {\n      color: \"failure\",\n      mt: \"16px\",\n      children: t('A minimum of %num% CAKE is required', {\n        num: REGISTER_COST\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(UserName, \"v/GbSA44OzOmcAVinjbAU+YfFd4=\", false, function () {\n  return [useProfileCreation, useTranslation, useWeb3React, useToast, useWeb3Provider, useHasCakeBalance, useModal];\n});\n_c4 = UserName;\nexport default UserName;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"InputWrap\");\n$RefreshReg$(_c2, \"Input\");\n$RefreshReg$(_c3, \"Indicator\");\n$RefreshReg$(_c4, \"UserName\");","map":{"version":3,"names":["React","useEffect","useState","styled","BigNumber","Card","CardBody","Heading","Text","Input","UIKitInput","Button","AutoRenewIcon","CheckmarkIcon","Flex","WarningIcon","useModal","Skeleton","Checkbox","parseISO","formatDistance","useWeb3React","useToast","signMessage","useWeb3Provider","useTranslation","useHasCakeBalance","DEFAULT_TOKEN_DECIMAL","debounce","ConfirmProfileCreationModal","useProfileCreation","USERNAME_MIN_LENGTH","USERNAME_MAX_LENGTH","REGISTER_COST","jsxDEV","_jsxDEV","Fragment","_Fragment","ExistingUserState","profileApiUrl","process","env","REACT_APP_API_PROFILE","minimumCakeToRegister","multipliedBy","InputWrap","div","_c","_c2","Indicator","_c3","UserName","_s","isAcknowledged","setIsAcknowledged","teamId","selectedNft","userName","actions","minimumCakeRequired","allowance","t","account","toastError","library","existingUserState","setExistingUserState","IDLE","isValid","setIsValid","isLoading","setIsLoading","message","setMessage","hasMinimumCakeRequired","onPresentConfirmProfileCreation","fileName","_jsxFileName","lineNumber","columnNumber","isUserCreated","CREATED","checkUsernameValidity","value","res","fetch","ok","_data$error","data","json","error","handleChange","event","target","setUserName","handleConfirm","signature","response","method","headers","body","JSON","stringify","address","username","_data$error2","handleAcknowledge","fetchUser","dateCreated","created_at","Date","NEW","children","fontSize","color","bold","num","as","scale","mb","height","width","onChange","isWarning","isSuccess","minLength","maxLength","disabled","placeholder","spin","py","style","minHeight","htmlFor","display","cursor","marginBottom","alignItems","flex","id","checked","ml","onClick","mt","_c4","$RefreshReg$"],"sources":["C:/Users/frkul/Documents/swapUI_pancake-frontend/src/views/Profile/ProfileCreation/UserName.tsx"],"sourcesContent":["import React, { ChangeEvent, useEffect, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport BigNumber from 'bignumber.js'\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Heading,\r\n  Text,\r\n  Input as UIKitInput,\r\n  Button,\r\n  AutoRenewIcon,\r\n  CheckmarkIcon,\r\n  Flex,\r\n  WarningIcon,\r\n  useModal,\r\n  Skeleton,\r\n  Checkbox,\r\n} from '@pancakeswap/uikit'\r\nimport { parseISO, formatDistance } from 'date-fns'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport useToast from 'hooks/useToast'\r\nimport { signMessage } from 'utils/web3React'\r\nimport useWeb3Provider from 'hooks/useActiveWeb3React'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useHasCakeBalance from 'hooks/useHasCakeBalance'\r\nimport { DEFAULT_TOKEN_DECIMAL } from 'config'\r\nimport debounce from 'lodash/debounce'\r\nimport ConfirmProfileCreationModal from '../components/ConfirmProfileCreationModal'\r\nimport useProfileCreation from './contexts/hook'\r\nimport { USERNAME_MIN_LENGTH, USERNAME_MAX_LENGTH, REGISTER_COST } from './config'\r\n\r\nenum ExistingUserState {\r\n  IDLE = 'idle', // initial state\r\n  CREATED = 'created', // username has already been created\r\n  NEW = 'new', // username has not been created\r\n}\r\n\r\nconst profileApiUrl = process.env.REACT_APP_API_PROFILE\r\nconst minimumCakeToRegister = new BigNumber(REGISTER_COST).multipliedBy(DEFAULT_TOKEN_DECIMAL)\r\n\r\nconst InputWrap = styled.div`\r\n  position: relative;\r\n  max-width: 240px;\r\n`\r\n\r\nconst Input = styled(UIKitInput)`\r\n  padding-right: 40px;\r\n`\r\n\r\nconst Indicator = styled(Flex)`\r\n  align-items: center;\r\n  height: 24px;\r\n  justify-content: center;\r\n  margin-top: -12px;\r\n  position: absolute;\r\n  right: 16px;\r\n  top: 50%;\r\n  width: 24px;\r\n`\r\n\r\nconst UserName: React.FC = () => {\r\n  const [isAcknowledged, setIsAcknowledged] = useState(false)\r\n  const { teamId, selectedNft, userName, actions, minimumCakeRequired, allowance } = useProfileCreation()\r\n  const { t } = useTranslation()\r\n  const { account } = useWeb3React()\r\n  const { toastError } = useToast()\r\n  const { library } = useWeb3Provider()\r\n  const [existingUserState, setExistingUserState] = useState<ExistingUserState>(ExistingUserState.IDLE)\r\n  const [isValid, setIsValid] = useState(false)\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [message, setMessage] = useState('')\r\n  const hasMinimumCakeRequired = useHasCakeBalance(minimumCakeToRegister)\r\n  const [onPresentConfirmProfileCreation] = useModal(\r\n    <ConfirmProfileCreationModal\r\n      userName={userName}\r\n      selectedNft={selectedNft}\r\n      account={account}\r\n      teamId={teamId}\r\n      minimumCakeRequired={minimumCakeRequired}\r\n      allowance={allowance}\r\n    />,\r\n    false,\r\n  )\r\n  const isUserCreated = existingUserState === ExistingUserState.CREATED\r\n\r\n  const checkUsernameValidity = debounce(async (value: string) => {\r\n    try {\r\n      setIsLoading(true)\r\n      const res = await fetch(`${profileApiUrl}/api/users/valid/${value}`)\r\n\r\n      if (res.ok) {\r\n        setIsValid(true)\r\n        setMessage('')\r\n      } else {\r\n        const data = await res.json()\r\n        setIsValid(false)\r\n        setMessage(data?.error?.message)\r\n      }\r\n    } finally {\r\n      setIsLoading(false)\r\n    }\r\n  }, 200)\r\n\r\n  const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n    const { value } = event.target\r\n    actions.setUserName(value)\r\n    checkUsernameValidity(value)\r\n  }\r\n\r\n  const handleConfirm = async () => {\r\n    try {\r\n      setIsLoading(true)\r\n\r\n      const signature = await signMessage(library, account, userName)\r\n      const response = await fetch(`${profileApiUrl}/api/users/register`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          address: account,\r\n          username: userName,\r\n          signature,\r\n        }),\r\n      })\r\n\r\n      if (response.ok) {\r\n        setExistingUserState(ExistingUserState.CREATED)\r\n      } else {\r\n        const data = await response.json()\r\n        toastError(t('Error'), data?.error?.message)\r\n      }\r\n    } catch (error) {\r\n      toastError(error?.message ? error.message : JSON.stringify(error))\r\n    } finally {\r\n      setIsLoading(false)\r\n    }\r\n  }\r\n\r\n  const handleAcknowledge = () => setIsAcknowledged(!isAcknowledged)\r\n\r\n  // Perform an initial check to see if the wallet has already created a username\r\n  useEffect(() => {\r\n    const fetchUser = async () => {\r\n      try {\r\n        const response = await fetch(`${profileApiUrl}/api/users/${account}`)\r\n        const data = await response.json()\r\n\r\n        if (response.ok) {\r\n          const dateCreated = formatDistance(parseISO(data.created_at), new Date())\r\n          setMessage(t('Created %dateCreated% ago', { dateCreated }))\r\n\r\n          actions.setUserName(data.username)\r\n          setExistingUserState(ExistingUserState.CREATED)\r\n          setIsValid(true)\r\n        } else {\r\n          setExistingUserState(ExistingUserState.NEW)\r\n        }\r\n      } catch (error) {\r\n        toastError(t('Error'), t('Unable to verify username'))\r\n      }\r\n    }\r\n\r\n    if (account) {\r\n      fetchUser()\r\n    }\r\n  }, [account, setExistingUserState, setIsValid, setMessage, actions, toastError, t])\r\n\r\n  return (\r\n    <>\r\n      <Text fontSize=\"20px\" color=\"textSubtle\" bold>\r\n        {t('Step %num%', { num: 4 })}\r\n      </Text>\r\n      <Heading as=\"h3\" scale=\"xl\" mb=\"24px\">\r\n        {t('Set Your Name')}\r\n      </Heading>\r\n      <Text as=\"p\" mb=\"24px\">\r\n        {t('This name will be shown in team leaderboards and search results as long as your profile is active.')}\r\n      </Text>\r\n      <Card mb=\"24px\">\r\n        <CardBody>\r\n          <Heading as=\"h4\" scale=\"lg\" mb=\"8px\">\r\n            {t('Set Your Name')}\r\n          </Heading>\r\n          <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\r\n            {t(\r\n              'Your name must be at least 3 and at most 15 standard letters and numbers long. You canâ€™t change this once you click Confirm.',\r\n            )}\r\n          </Text>\r\n          {existingUserState === ExistingUserState.IDLE ? (\r\n            <Skeleton height=\"40px\" width=\"240px\" />\r\n          ) : (\r\n            <InputWrap>\r\n              <Input\r\n                onChange={handleChange}\r\n                isWarning={userName && !isValid}\r\n                isSuccess={userName && isValid}\r\n                minLength={USERNAME_MIN_LENGTH}\r\n                maxLength={USERNAME_MAX_LENGTH}\r\n                disabled={isUserCreated}\r\n                placeholder={t('Enter your name...')}\r\n                value={userName}\r\n              />\r\n              <Indicator>\r\n                {isLoading && <AutoRenewIcon spin />}\r\n                {!isLoading && isValid && userName && <CheckmarkIcon color=\"success\" />}\r\n                {!isLoading && !isValid && userName && <WarningIcon color=\"failure\" />}\r\n              </Indicator>\r\n            </InputWrap>\r\n          )}\r\n          <Text color=\"textSubtle\" fontSize=\"14px\" py=\"4px\" mb=\"16px\" style={{ minHeight: '30px' }}>\r\n            {message}\r\n          </Text>\r\n          <Text as=\"p\" color=\"failure\" mb=\"8px\">\r\n            {t(\r\n              \"Only reuse a name from other social media if you're OK with people viewing your wallet. You can't change your name once you click Confirm.\",\r\n            )}\r\n          </Text>\r\n          <label htmlFor=\"checkbox\" style={{ display: 'block', cursor: 'pointer', marginBottom: '24px' }}>\r\n            <Flex alignItems=\"center\">\r\n              <div style={{ flex: 'none' }}>\r\n                <Checkbox id=\"checkbox\" scale=\"sm\" checked={isAcknowledged} onChange={handleAcknowledge} />\r\n              </div>\r\n              <Text ml=\"8px\">{t('I understand that people can view my wallet if they know my username')}</Text>\r\n            </Flex>\r\n          </label>\r\n          <Button onClick={handleConfirm} disabled={!isValid || isUserCreated || isLoading || !isAcknowledged}>\r\n            {t('Confirm')}\r\n          </Button>\r\n        </CardBody>\r\n      </Card>\r\n      <Button\r\n        onClick={onPresentConfirmProfileCreation}\r\n        disabled={!isValid || !isUserCreated}\r\n        id=\"completeProfileCreation\"\r\n      >\r\n        {t('Complete Profile')}\r\n      </Button>\r\n      {!hasMinimumCakeRequired && (\r\n        <Text color=\"failure\" mt=\"16px\">\r\n          {t('A minimum of %num% CAKE is required', { num: REGISTER_COST })}\r\n        </Text>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default UserName\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}