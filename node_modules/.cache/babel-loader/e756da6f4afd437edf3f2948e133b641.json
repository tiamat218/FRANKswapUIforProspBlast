{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useMemo } from 'react';\nimport { useAllTokenBalances } from '../../state/wallet/hooks';\n\n// compare two token amounts with highest one coming first\nfunction balanceComparator(balanceA, balanceB) {\n  if (balanceA && balanceB) {\n    return balanceA.greaterThan(balanceB) ? -1 : balanceA.equalTo(balanceB) ? 0 : 1;\n  }\n  if (balanceA && balanceA.greaterThan('0')) {\n    return -1;\n  }\n  if (balanceB && balanceB.greaterThan('0')) {\n    return 1;\n  }\n  return 0;\n}\nfunction getTokenComparator(balances) {\n  return function sortTokens(tokenA, tokenB) {\n    // -1 = a is first\n    // 1 = b is first\n\n    // sort by balances\n    const balanceA = balances[tokenA.address];\n    const balanceB = balances[tokenB.address];\n    const balanceComp = balanceComparator(balanceA, balanceB);\n    if (balanceComp !== 0) return balanceComp;\n    if (tokenA.symbol && tokenB.symbol) {\n      // sort by symbol\n      return tokenA.symbol.toLowerCase() < tokenB.symbol.toLowerCase() ? -1 : 1;\n    }\n    return tokenA.symbol ? -1 : tokenB.symbol ? -1 : 0;\n  };\n}\nfunction useTokenComparator(inverted) {\n  _s();\n  const balances = useAllTokenBalances();\n  const comparator = useMemo(() => getTokenComparator(balances !== null && balances !== void 0 ? balances : {}), [balances]);\n  return useMemo(() => {\n    if (inverted) {\n      return (tokenA, tokenB) => comparator(tokenA, tokenB) * -1;\n    }\n    return comparator;\n  }, [inverted, comparator]);\n}\n_s(useTokenComparator, \"hXJEt3u0yPW0rBCA9PpnEAzwUpI=\", false, function () {\n  return [useAllTokenBalances];\n});\nexport default useTokenComparator;","map":{"version":3,"names":["useMemo","useAllTokenBalances","balanceComparator","balanceA","balanceB","greaterThan","equalTo","getTokenComparator","balances","sortTokens","tokenA","tokenB","address","balanceComp","symbol","toLowerCase","useTokenComparator","inverted","_s","comparator"],"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/components/SearchModal/sorting.ts"],"sourcesContent":["import { Token, TokenAmount } from '@pancakeswap/sdk'\r\nimport { useMemo } from 'react'\r\nimport { useAllTokenBalances } from '../../state/wallet/hooks'\r\n\r\n// compare two token amounts with highest one coming first\r\nfunction balanceComparator(balanceA?: TokenAmount, balanceB?: TokenAmount) {\r\n  if (balanceA && balanceB) {\r\n    return balanceA.greaterThan(balanceB) ? -1 : balanceA.equalTo(balanceB) ? 0 : 1\r\n  }\r\n  if (balanceA && balanceA.greaterThan('0')) {\r\n    return -1\r\n  }\r\n  if (balanceB && balanceB.greaterThan('0')) {\r\n    return 1\r\n  }\r\n  return 0\r\n}\r\n\r\nfunction getTokenComparator(balances: {\r\n  [tokenAddress: string]: TokenAmount | undefined\r\n}): (tokenA: Token, tokenB: Token) => number {\r\n  return function sortTokens(tokenA: Token, tokenB: Token): number {\r\n    // -1 = a is first\r\n    // 1 = b is first\r\n\r\n    // sort by balances\r\n    const balanceA = balances[tokenA.address]\r\n    const balanceB = balances[tokenB.address]\r\n\r\n    const balanceComp = balanceComparator(balanceA, balanceB)\r\n    if (balanceComp !== 0) return balanceComp\r\n\r\n    if (tokenA.symbol && tokenB.symbol) {\r\n      // sort by symbol\r\n      return tokenA.symbol.toLowerCase() < tokenB.symbol.toLowerCase() ? -1 : 1\r\n    }\r\n    return tokenA.symbol ? -1 : tokenB.symbol ? -1 : 0\r\n  }\r\n}\r\n\r\nfunction useTokenComparator(inverted: boolean): (tokenA: Token, tokenB: Token) => number {\r\n  const balances = useAllTokenBalances()\r\n  const comparator = useMemo(() => getTokenComparator(balances ?? {}), [balances])\r\n  return useMemo(() => {\r\n    if (inverted) {\r\n      return (tokenA: Token, tokenB: Token) => comparator(tokenA, tokenB) * -1\r\n    }\r\n    return comparator\r\n  }, [inverted, comparator])\r\n}\r\n\r\nexport default useTokenComparator\r\n"],"mappings":";AACA,SAASA,OAAO,QAAQ,OAAO;AAC/B,SAASC,mBAAmB,QAAQ,0BAA0B;;AAE9D;AACA,SAASC,iBAAiBA,CAACC,QAAsB,EAAEC,QAAsB,EAAE;EACzE,IAAID,QAAQ,IAAIC,QAAQ,EAAE;IACxB,OAAOD,QAAQ,CAACE,WAAW,CAACD,QAAQ,CAAC,GAAG,CAAC,CAAC,GAAGD,QAAQ,CAACG,OAAO,CAACF,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAC;EACjF;EACA,IAAID,QAAQ,IAAIA,QAAQ,CAACE,WAAW,CAAC,GAAG,CAAC,EAAE;IACzC,OAAO,CAAC,CAAC;EACX;EACA,IAAID,QAAQ,IAAIA,QAAQ,CAACC,WAAW,CAAC,GAAG,CAAC,EAAE;IACzC,OAAO,CAAC;EACV;EACA,OAAO,CAAC;AACV;AAEA,SAASE,kBAAkBA,CAACC,QAE3B,EAA4C;EAC3C,OAAO,SAASC,UAAUA,CAACC,MAAa,EAAEC,MAAa,EAAU;IAC/D;IACA;;IAEA;IACA,MAAMR,QAAQ,GAAGK,QAAQ,CAACE,MAAM,CAACE,OAAO,CAAC;IACzC,MAAMR,QAAQ,GAAGI,QAAQ,CAACG,MAAM,CAACC,OAAO,CAAC;IAEzC,MAAMC,WAAW,GAAGX,iBAAiB,CAACC,QAAQ,EAAEC,QAAQ,CAAC;IACzD,IAAIS,WAAW,KAAK,CAAC,EAAE,OAAOA,WAAW;IAEzC,IAAIH,MAAM,CAACI,MAAM,IAAIH,MAAM,CAACG,MAAM,EAAE;MAClC;MACA,OAAOJ,MAAM,CAACI,MAAM,CAACC,WAAW,CAAC,CAAC,GAAGJ,MAAM,CAACG,MAAM,CAACC,WAAW,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;IAC3E;IACA,OAAOL,MAAM,CAACI,MAAM,GAAG,CAAC,CAAC,GAAGH,MAAM,CAACG,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC;EACpD,CAAC;AACH;AAEA,SAASE,kBAAkBA,CAACC,QAAiB,EAA4C;EAAAC,EAAA;EACvF,MAAMV,QAAQ,GAAGP,mBAAmB,CAAC,CAAC;EACtC,MAAMkB,UAAU,GAAGnB,OAAO,CAAC,MAAMO,kBAAkB,CAACC,QAAQ,aAARA,QAAQ,cAARA,QAAQ,GAAI,CAAC,CAAC,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;EAChF,OAAOR,OAAO,CAAC,MAAM;IACnB,IAAIiB,QAAQ,EAAE;MACZ,OAAO,CAACP,MAAa,EAAEC,MAAa,KAAKQ,UAAU,CAACT,MAAM,EAAEC,MAAM,CAAC,GAAG,CAAC,CAAC;IAC1E;IACA,OAAOQ,UAAU;EACnB,CAAC,EAAE,CAACF,QAAQ,EAAEE,UAAU,CAAC,CAAC;AAC5B;AAACD,EAAA,CATQF,kBAAkB;EAAA,QACRf,mBAAmB;AAAA;AAUtC,eAAee,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"module"}