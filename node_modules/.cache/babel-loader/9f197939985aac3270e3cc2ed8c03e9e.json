{"ast":null,"code":"import _taggedTemplateLiteral from\"C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2,_templateObject3,_templateObject4;import React,{useState,useEffect}from'react';import{useTranslation}from'contexts/Localization';import{useWeb3React}from'@web3-react/core';import{useProfile}from'state/profile/hooks';import{Flex,Box,Image}from'@pancakeswap/uikit';import styled from'styled-components';import{useTradingCompetitionContract}from'hooks/useContract';import useTheme from'hooks/useTheme';import{SmartContractPhases,CompetitionPhases,LIVE,FINISHED,CLAIM,OVER,REGISTRATION}from'config/constants/trading-competition/easterPhases';import PageSection from'components/PageSection';import{DARKBG,MIDBLUEBG,MIDBLUEBG_DARK,LIGHTBLUEBG,LIGHTBLUEBG_DARK}from'./pageSectionStyles';import{PrizesIcon,RanksIcon,RulesIcon}from'./svgs';import Countdown from'./components/Countdown';import YourScore from'./components/YourScore';import StormBunny from'./pngs/storm.png';import RibbonWithImage from'./components/RibbonWithImage';import HowToJoin from'./components/HowToJoin';import BattleBanner from'./components/BattleBanner';import BattleCta from'./components/BattleCta';import PrizesInfo from'./components/PrizesInfo';import Rules from'./components/Rules';import TeamRanks from'./components/TeamRanks';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const CompetitionPage=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  min-height: calc(100vh - 64px);\\n\"])));const BannerFlex=styled(Flex)(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  flex-direction: column;\\n  \",\" {\\n    padding-top: 10px;\\n    flex-direction: row-reverse;\\n    justify-content: space-between;\\n  }\\n\\n  @media screen and (min-width: 1920px) {\\n    padding-top: 32px;\\n  }\\n\"])),_ref=>{let{theme}=_ref;return theme.mediaQueries.xl;});const BattleBannerSection=styled(PageSection)(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  margin-top: -32px;\\n  \",\" {\\n    margin-top: -64px;\\n  }\\n\"])),_ref2=>{let{theme}=_ref2;return theme.mediaQueries.lg;});const BottomBunnyWrapper=styled(Box)(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n  display: none;\\n\\n  \",\" {\\n    display: flex;\\n    margin-left: 40px;\\n    width: 147px;\\n    height: 200px;\\n  }\\n\"])),_ref3=>{let{theme}=_ref3;return theme.mediaQueries.md;});const TradingCompetition=()=>{const profileApiUrl=process.env.REACT_APP_API_PROFILE;const{account}=useWeb3React();const{t}=useTranslation();const{profile,isLoading}=useProfile();const{isDark,theme}=useTheme();const tradingCompetitionContract=useTradingCompetitionContract();const[currentPhase,setCurrentPhase]=useState(CompetitionPhases.LIVE);const[registrationSuccessful,setRegistrationSuccessful]=useState(false);const[claimSuccessful,setClaimSuccessful]=useState(false);const[userTradingInformation,setUserTradingInformation]=useState({hasRegistered:false,hasUserClaimed:false,userRewardGroup:'0',userCakeRewards:'0',userPointReward:'0',canClaimNFT:false});const[globalLeaderboardInformation,setGlobalLeaderboardInformation]=useState(null);const[userLeaderboardInformation,setUserLeaderboardInformation]=useState({global:0,team:0,volume:0,next_rank:0});// 1. Storm\nconst[team1LeaderboardInformation,setTeam1LeaderboardInformation]=useState({teamId:1,leaderboardData:null});// 2. Flippers\nconst[team2LeaderboardInformation,setTeam2LeaderboardInformation]=useState({teamId:2,leaderboardData:null});// 3. Cakers\nconst[team3LeaderboardInformation,setTeam3LeaderboardInformation]=useState({teamId:3,leaderboardData:null});const isCompetitionLive=currentPhase.state===LIVE;const hasCompetitionEnded=currentPhase.state===FINISHED||currentPhase.state===CLAIM||currentPhase.state===OVER;const{hasUserClaimed,userCakeRewards,userPointReward,canClaimNFT}=userTradingInformation;const userCanClaimPrizes=currentPhase.state===CLAIM&&!hasUserClaimed&&(userCakeRewards!=='0'||userPointReward!=='0'||canClaimNFT);const finishedAndPrizesClaimed=hasCompetitionEnded&&account&&hasUserClaimed;const finishedAndNothingToClaim=hasCompetitionEnded&&account&&!userCanClaimPrizes;const onRegisterSuccess=()=>{setRegistrationSuccessful(true);};const onClaimSuccess=()=>{setClaimSuccessful(true);};useEffect(()=>{const fetchCompetitionInfoContract=async()=>{const competitionStatus=await tradingCompetitionContract.currentStatus();setCurrentPhase(SmartContractPhases[competitionStatus]);};const fetchUserContract=async()=>{const user=await tradingCompetitionContract.claimInformation(account);const userObject={hasRegistered:user[0],hasUserClaimed:user[1],userRewardGroup:user[2].toString(),userCakeRewards:user[3].toString(),userPointReward:user[4].toString(),canClaimNFT:user[5]};setUserTradingInformation(userObject);};if(account){fetchUserContract();}else{setUserTradingInformation({hasRegistered:false,hasUserClaimed:false,userRewardGroup:'0',userCakeRewards:'0',userPointReward:'0',canClaimNFT:false});}fetchCompetitionInfoContract();},[account,registrationSuccessful,claimSuccessful,tradingCompetitionContract]);useEffect(()=>{const fetchUserTradingStats=async()=>{const res=await fetch(\"\".concat(profileApiUrl,\"/api/users/\").concat(account));const data=await res.json();setUserLeaderboardInformation(data.leaderboard);};// If user has not registered, user trading information will not be displayed and should not be fetched\nif(account&&userTradingInformation.hasRegistered){fetchUserTradingStats();}},[account,userTradingInformation,profileApiUrl]);useEffect(()=>{const fetchGlobalLeaderboardStats=async()=>{const res=await fetch(\"\".concat(profileApiUrl,\"/api/leaderboard/global\"));const data=await res.json();setGlobalLeaderboardInformation(data);};const fetchTeamsLeaderboardStats=async(teamId,callBack)=>{try{const res=await fetch(\"\".concat(profileApiUrl,\"/api/leaderboard/team/\").concat(teamId));const data=await res.json();callBack(data);}catch(e){console.error(e);}};fetchTeamsLeaderboardStats(1,data=>setTeam1LeaderboardInformation(prevState=>{return{...prevState,leaderboardData:data};}));fetchTeamsLeaderboardStats(2,data=>setTeam2LeaderboardInformation(prevState=>{return{...prevState,leaderboardData:data};}));fetchTeamsLeaderboardStats(3,data=>setTeam3LeaderboardInformation(prevState=>{return{...prevState,leaderboardData:data};}));fetchGlobalLeaderboardStats();},[profileApiUrl]);// Don't hide when loading. Hide if the account is connected && the user hasn't registered && the competition is live or finished\nconst shouldHideCta=!isLoading&&account&&!userTradingInformation.hasRegistered&&(isCompetitionLive||hasCompetitionEnded);return/*#__PURE__*/_jsxs(CompetitionPage,{children:[/*#__PURE__*/_jsx(BattleBannerSection,{background:DARKBG,hasCurvedDivider:false,index:1,children:/*#__PURE__*/_jsxs(BannerFlex,{mb:shouldHideCta?'0px':'48px',children:[/*#__PURE__*/_jsx(Countdown,{currentPhase:currentPhase,hasCompetitionEnded:hasCompetitionEnded}),/*#__PURE__*/_jsx(BattleBanner,{})]})}),/*#__PURE__*/_jsx(PageSection,{containerProps:{style:{marginTop:'-30px'}},background:isDark?MIDBLUEBG_DARK:MIDBLUEBG,concaveDivider:true,clipFill:{light:'#CCD8F0',dark:'#434575'},dividerPosition:\"top\",index:2,dividerComponent:shouldHideCta?null:/*#__PURE__*/_jsx(BattleCta,{userTradingInformation:userTradingInformation,currentPhase:currentPhase,account:account,isCompetitionLive:isCompetitionLive,hasCompetitionEnded:hasCompetitionEnded,userCanClaimPrizes:userCanClaimPrizes,finishedAndPrizesClaimed:finishedAndPrizesClaimed,finishedAndNothingToClaim:finishedAndNothingToClaim,profile:profile,isLoading:isLoading,onRegisterSuccess:onRegisterSuccess,onClaimSuccess:onClaimSuccess}),children:/*#__PURE__*/_jsx(Box,{mt:shouldHideCta?'0px':['94px',null,'36px'],mb:\"64px\",children:currentPhase.state===REGISTRATION?/*#__PURE__*/_jsx(HowToJoin,{}):/*#__PURE__*/_jsx(YourScore,{currentPhase:currentPhase,hasRegistered:userTradingInformation.hasRegistered,userTradingInformation:userTradingInformation,account:account,profile:profile,isLoading:isLoading,userLeaderboardInformation:userLeaderboardInformation,userCanClaimPrizes:userCanClaimPrizes,finishedAndPrizesClaimed:finishedAndPrizesClaimed,finishedAndNothingToClaim:finishedAndNothingToClaim,onClaimSuccess:onClaimSuccess})})}),/*#__PURE__*/_jsx(PageSection,{containerProps:{style:{marginTop:'-30px'}},index:3,concaveDivider:true,clipFill:{light:theme.colors.background},dividerPosition:\"top\",dividerComponent:/*#__PURE__*/_jsx(RibbonWithImage,{imageComponent:/*#__PURE__*/_jsx(RanksIcon,{width:\"175px\"}),ribbonDirection:\"up\",children:t('Team Ranks')}),children:/*#__PURE__*/_jsx(Box,{my:\"64px\",children:/*#__PURE__*/_jsx(TeamRanks,{team1LeaderboardInformation:team1LeaderboardInformation,team2LeaderboardInformation:team2LeaderboardInformation,team3LeaderboardInformation:team3LeaderboardInformation,globalLeaderboardInformation:globalLeaderboardInformation})})}),/*#__PURE__*/_jsx(PageSection,{containerProps:{style:{marginTop:'-30px'}},dividerComponent:/*#__PURE__*/_jsx(RibbonWithImage,{imageComponent:/*#__PURE__*/_jsx(PrizesIcon,{width:\"175px\"}),ribbonDirection:\"up\",children:t('Prizes')}),concaveDivider:true,clipFill:{light:'linear-gradient(139.73deg, #e5fcfe 0%, #ecf6ff 100%)',dark:'linear-gradient(139.73deg, #303d5b 0%, #363457 100%)'},dividerPosition:\"top\",background:isDark?LIGHTBLUEBG_DARK:LIGHTBLUEBG,index:4,children:/*#__PURE__*/_jsx(Box,{my:\"64px\",children:/*#__PURE__*/_jsx(PrizesInfo,{})})}),/*#__PURE__*/_jsx(PageSection,{containerProps:{style:{marginTop:'-1px'}},index:5,dividerPosition:\"top\",clipFill:{light:'linear-gradient(139.73deg, #ecf5ff 0%, #f2effe 100%)',dark:'linear-gradient(139.73deg, #383357 0%, #3d2b53 100%)'},dividerComponent:/*#__PURE__*/_jsx(RibbonWithImage,{imageComponent:/*#__PURE__*/_jsx(RulesIcon,{width:\"175px\"}),ribbonDirection:\"up\",children:t('Rules')}),children:/*#__PURE__*/_jsx(Box,{mt:\"64px\",children:/*#__PURE__*/_jsx(Rules,{})})}),/*#__PURE__*/_jsx(PageSection,{index:6,dividerPosition:\"top\",dividerFill:{light:'#191326'},clipFill:{light:theme.colors.background},background:DARKBG,children:/*#__PURE__*/_jsxs(Flex,{alignItems:\"center\",children:[shouldHideCta?null:/*#__PURE__*/_jsx(Flex,{height:\"fit-content\",children:/*#__PURE__*/_jsx(BattleCta,{userTradingInformation:userTradingInformation,currentPhase:currentPhase,account:account,isCompetitionLive:isCompetitionLive,hasCompetitionEnded:hasCompetitionEnded,userCanClaimPrizes:userCanClaimPrizes,finishedAndPrizesClaimed:finishedAndPrizesClaimed,finishedAndNothingToClaim:finishedAndNothingToClaim,profile:profile,isLoading:isLoading,onRegisterSuccess:onRegisterSuccess,onClaimSuccess:onClaimSuccess})}),/*#__PURE__*/_jsx(BottomBunnyWrapper,{children:/*#__PURE__*/_jsx(Image,{src:StormBunny,width:147,height:200})})]})})]});};export default TradingCompetition;","map":{"version":3,"names":["React","useState","useEffect","useTranslation","useWeb3React","useProfile","Flex","Box","Image","styled","useTradingCompetitionContract","useTheme","SmartContractPhases","CompetitionPhases","LIVE","FINISHED","CLAIM","OVER","REGISTRATION","PageSection","DARKBG","MIDBLUEBG","MIDBLUEBG_DARK","LIGHTBLUEBG","LIGHTBLUEBG_DARK","PrizesIcon","RanksIcon","RulesIcon","Countdown","YourScore","StormBunny","RibbonWithImage","HowToJoin","BattleBanner","BattleCta","PrizesInfo","Rules","TeamRanks","jsx","_jsx","jsxs","_jsxs","CompetitionPage","div","_templateObject","_taggedTemplateLiteral","BannerFlex","_templateObject2","_ref","theme","mediaQueries","xl","BattleBannerSection","_templateObject3","_ref2","lg","BottomBunnyWrapper","_templateObject4","_ref3","md","TradingCompetition","profileApiUrl","process","env","REACT_APP_API_PROFILE","account","t","profile","isLoading","isDark","tradingCompetitionContract","currentPhase","setCurrentPhase","registrationSuccessful","setRegistrationSuccessful","claimSuccessful","setClaimSuccessful","userTradingInformation","setUserTradingInformation","hasRegistered","hasUserClaimed","userRewardGroup","userCakeRewards","userPointReward","canClaimNFT","globalLeaderboardInformation","setGlobalLeaderboardInformation","userLeaderboardInformation","setUserLeaderboardInformation","global","team","volume","next_rank","team1LeaderboardInformation","setTeam1LeaderboardInformation","teamId","leaderboardData","team2LeaderboardInformation","setTeam2LeaderboardInformation","team3LeaderboardInformation","setTeam3LeaderboardInformation","isCompetitionLive","state","hasCompetitionEnded","userCanClaimPrizes","finishedAndPrizesClaimed","finishedAndNothingToClaim","onRegisterSuccess","onClaimSuccess","fetchCompetitionInfoContract","competitionStatus","currentStatus","fetchUserContract","user","claimInformation","userObject","toString","fetchUserTradingStats","res","fetch","concat","data","json","leaderboard","fetchGlobalLeaderboardStats","fetchTeamsLeaderboardStats","callBack","e","console","error","prevState","shouldHideCta","children","background","hasCurvedDivider","index","mb","containerProps","style","marginTop","concaveDivider","clipFill","light","dark","dividerPosition","dividerComponent","mt","colors","imageComponent","width","ribbonDirection","my","dividerFill","alignItems","height","src"],"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/views/TradingCompetition/index.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useProfile } from 'state/profile/hooks'\r\nimport { Flex, Box, Image } from '@pancakeswap/uikit'\r\nimport styled from 'styled-components'\r\nimport { useTradingCompetitionContract } from 'hooks/useContract'\r\nimport useTheme from 'hooks/useTheme'\r\nimport {\r\n  SmartContractPhases,\r\n  CompetitionPhases,\r\n  LIVE,\r\n  FINISHED,\r\n  CLAIM,\r\n  OVER,\r\n  REGISTRATION,\r\n} from 'config/constants/trading-competition/easterPhases'\r\nimport PageSection from 'components/PageSection'\r\nimport { DARKBG, MIDBLUEBG, MIDBLUEBG_DARK, LIGHTBLUEBG, LIGHTBLUEBG_DARK } from './pageSectionStyles'\r\nimport { PrizesIcon, RanksIcon, RulesIcon } from './svgs'\r\nimport Countdown from './components/Countdown'\r\nimport YourScore from './components/YourScore'\r\nimport StormBunny from './pngs/storm.png'\r\nimport RibbonWithImage from './components/RibbonWithImage'\r\nimport HowToJoin from './components/HowToJoin'\r\nimport BattleBanner from './components/BattleBanner'\r\nimport BattleCta from './components/BattleCta'\r\nimport PrizesInfo from './components/PrizesInfo'\r\nimport Rules from './components/Rules'\r\nimport TeamRanks from './components/TeamRanks'\r\n\r\nconst CompetitionPage = styled.div`\r\n  min-height: calc(100vh - 64px);\r\n`\r\n\r\nconst BannerFlex = styled(Flex)`\r\n  flex-direction: column;\r\n  ${({ theme }) => theme.mediaQueries.xl} {\r\n    padding-top: 10px;\r\n    flex-direction: row-reverse;\r\n    justify-content: space-between;\r\n  }\r\n\r\n  @media screen and (min-width: 1920px) {\r\n    padding-top: 32px;\r\n  }\r\n`\r\n\r\nconst BattleBannerSection = styled(PageSection)`\r\n  margin-top: -32px;\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    margin-top: -64px;\r\n  }\r\n`\r\n\r\nconst BottomBunnyWrapper = styled(Box)`\r\n  display: none;\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    display: flex;\r\n    margin-left: 40px;\r\n    width: 147px;\r\n    height: 200px;\r\n  }\r\n`\r\n\r\nconst TradingCompetition = () => {\r\n  const profileApiUrl = process.env.REACT_APP_API_PROFILE\r\n  const { account } = useWeb3React()\r\n  const { t } = useTranslation()\r\n  const { profile, isLoading } = useProfile()\r\n  const { isDark, theme } = useTheme()\r\n  const tradingCompetitionContract = useTradingCompetitionContract()\r\n  const [currentPhase, setCurrentPhase] = useState(CompetitionPhases.LIVE)\r\n  const [registrationSuccessful, setRegistrationSuccessful] = useState(false)\r\n  const [claimSuccessful, setClaimSuccessful] = useState(false)\r\n  const [userTradingInformation, setUserTradingInformation] = useState({\r\n    hasRegistered: false,\r\n    hasUserClaimed: false,\r\n    userRewardGroup: '0',\r\n    userCakeRewards: '0',\r\n    userPointReward: '0',\r\n    canClaimNFT: false,\r\n  })\r\n  const [globalLeaderboardInformation, setGlobalLeaderboardInformation] = useState(null)\r\n  const [userLeaderboardInformation, setUserLeaderboardInformation] = useState({\r\n    global: 0,\r\n    team: 0,\r\n    volume: 0,\r\n    next_rank: 0,\r\n  })\r\n  // 1. Storm\r\n  const [team1LeaderboardInformation, setTeam1LeaderboardInformation] = useState({ teamId: 1, leaderboardData: null })\r\n  // 2. Flippers\r\n  const [team2LeaderboardInformation, setTeam2LeaderboardInformation] = useState({ teamId: 2, leaderboardData: null })\r\n  // 3. Cakers\r\n  const [team3LeaderboardInformation, setTeam3LeaderboardInformation] = useState({ teamId: 3, leaderboardData: null })\r\n\r\n  const isCompetitionLive = currentPhase.state === LIVE\r\n  const hasCompetitionEnded =\r\n    currentPhase.state === FINISHED || currentPhase.state === CLAIM || currentPhase.state === OVER\r\n\r\n  const { hasUserClaimed, userCakeRewards, userPointReward, canClaimNFT } = userTradingInformation\r\n\r\n  const userCanClaimPrizes =\r\n    currentPhase.state === CLAIM &&\r\n    !hasUserClaimed &&\r\n    (userCakeRewards !== '0' || userPointReward !== '0' || canClaimNFT)\r\n  const finishedAndPrizesClaimed = hasCompetitionEnded && account && hasUserClaimed\r\n  const finishedAndNothingToClaim = hasCompetitionEnded && account && !userCanClaimPrizes\r\n\r\n  const onRegisterSuccess = () => {\r\n    setRegistrationSuccessful(true)\r\n  }\r\n\r\n  const onClaimSuccess = () => {\r\n    setClaimSuccessful(true)\r\n  }\r\n\r\n  useEffect(() => {\r\n    const fetchCompetitionInfoContract = async () => {\r\n      const competitionStatus = await tradingCompetitionContract.currentStatus()\r\n      setCurrentPhase(SmartContractPhases[competitionStatus])\r\n    }\r\n\r\n    const fetchUserContract = async () => {\r\n      const user = await tradingCompetitionContract.claimInformation(account)\r\n      const userObject = {\r\n        hasRegistered: user[0],\r\n        hasUserClaimed: user[1],\r\n        userRewardGroup: user[2].toString(),\r\n        userCakeRewards: user[3].toString(),\r\n        userPointReward: user[4].toString(),\r\n        canClaimNFT: user[5],\r\n      }\r\n      setUserTradingInformation(userObject)\r\n    }\r\n\r\n    if (account) {\r\n      fetchUserContract()\r\n    } else {\r\n      setUserTradingInformation({\r\n        hasRegistered: false,\r\n        hasUserClaimed: false,\r\n        userRewardGroup: '0',\r\n        userCakeRewards: '0',\r\n        userPointReward: '0',\r\n        canClaimNFT: false,\r\n      })\r\n    }\r\n    fetchCompetitionInfoContract()\r\n  }, [account, registrationSuccessful, claimSuccessful, tradingCompetitionContract])\r\n\r\n  useEffect(() => {\r\n    const fetchUserTradingStats = async () => {\r\n      const res = await fetch(`${profileApiUrl}/api/users/${account}`)\r\n      const data = await res.json()\r\n      setUserLeaderboardInformation(data.leaderboard)\r\n    }\r\n    // If user has not registered, user trading information will not be displayed and should not be fetched\r\n    if (account && userTradingInformation.hasRegistered) {\r\n      fetchUserTradingStats()\r\n    }\r\n  }, [account, userTradingInformation, profileApiUrl])\r\n\r\n  useEffect(() => {\r\n    const fetchGlobalLeaderboardStats = async () => {\r\n      const res = await fetch(`${profileApiUrl}/api/leaderboard/global`)\r\n      const data = await res.json()\r\n      setGlobalLeaderboardInformation(data)\r\n    }\r\n\r\n    const fetchTeamsLeaderboardStats = async (teamId: number, callBack: (data: any) => void) => {\r\n      try {\r\n        const res = await fetch(`${profileApiUrl}/api/leaderboard/team/${teamId}`)\r\n        const data = await res.json()\r\n        callBack(data)\r\n      } catch (e) {\r\n        console.error(e)\r\n      }\r\n    }\r\n\r\n    fetchTeamsLeaderboardStats(1, (data) =>\r\n      setTeam1LeaderboardInformation((prevState) => {\r\n        return { ...prevState, leaderboardData: data }\r\n      }),\r\n    )\r\n    fetchTeamsLeaderboardStats(2, (data) =>\r\n      setTeam2LeaderboardInformation((prevState) => {\r\n        return { ...prevState, leaderboardData: data }\r\n      }),\r\n    )\r\n    fetchTeamsLeaderboardStats(3, (data) =>\r\n      setTeam3LeaderboardInformation((prevState) => {\r\n        return { ...prevState, leaderboardData: data }\r\n      }),\r\n    )\r\n    fetchGlobalLeaderboardStats()\r\n  }, [profileApiUrl])\r\n\r\n  // Don't hide when loading. Hide if the account is connected && the user hasn't registered && the competition is live or finished\r\n  const shouldHideCta =\r\n    !isLoading && account && !userTradingInformation.hasRegistered && (isCompetitionLive || hasCompetitionEnded)\r\n\r\n  return (\r\n    <CompetitionPage>\r\n      <BattleBannerSection background={DARKBG} hasCurvedDivider={false} index={1}>\r\n        <BannerFlex mb={shouldHideCta ? '0px' : '48px'}>\r\n          <Countdown currentPhase={currentPhase} hasCompetitionEnded={hasCompetitionEnded} />\r\n          <BattleBanner />\r\n        </BannerFlex>\r\n      </BattleBannerSection>\r\n      <PageSection\r\n        containerProps={{ style: { marginTop: '-30px' } }}\r\n        background={isDark ? MIDBLUEBG_DARK : MIDBLUEBG}\r\n        concaveDivider\r\n        clipFill={{ light: '#CCD8F0', dark: '#434575' }}\r\n        dividerPosition=\"top\"\r\n        index={2}\r\n        dividerComponent={\r\n          shouldHideCta ? null : (\r\n            <BattleCta\r\n              userTradingInformation={userTradingInformation}\r\n              currentPhase={currentPhase}\r\n              account={account}\r\n              isCompetitionLive={isCompetitionLive}\r\n              hasCompetitionEnded={hasCompetitionEnded}\r\n              userCanClaimPrizes={userCanClaimPrizes}\r\n              finishedAndPrizesClaimed={finishedAndPrizesClaimed}\r\n              finishedAndNothingToClaim={finishedAndNothingToClaim}\r\n              profile={profile}\r\n              isLoading={isLoading}\r\n              onRegisterSuccess={onRegisterSuccess}\r\n              onClaimSuccess={onClaimSuccess}\r\n            />\r\n          )\r\n        }\r\n      >\r\n        <Box mt={shouldHideCta ? '0px' : ['94px', null, '36px']} mb=\"64px\">\r\n          {/* If competition has not yet started, render HowToJoin component - if not, render YourScore */}\r\n          {currentPhase.state === REGISTRATION ? (\r\n            <HowToJoin />\r\n          ) : (\r\n            <YourScore\r\n              currentPhase={currentPhase}\r\n              hasRegistered={userTradingInformation.hasRegistered}\r\n              userTradingInformation={userTradingInformation}\r\n              account={account}\r\n              profile={profile}\r\n              isLoading={isLoading}\r\n              userLeaderboardInformation={userLeaderboardInformation}\r\n              userCanClaimPrizes={userCanClaimPrizes}\r\n              finishedAndPrizesClaimed={finishedAndPrizesClaimed}\r\n              finishedAndNothingToClaim={finishedAndNothingToClaim}\r\n              onClaimSuccess={onClaimSuccess}\r\n            />\r\n          )}\r\n        </Box>\r\n      </PageSection>\r\n      <PageSection\r\n        containerProps={{ style: { marginTop: '-30px' } }}\r\n        index={3}\r\n        concaveDivider\r\n        clipFill={{ light: theme.colors.background }}\r\n        dividerPosition=\"top\"\r\n        dividerComponent={\r\n          <RibbonWithImage imageComponent={<RanksIcon width=\"175px\" />} ribbonDirection=\"up\">\r\n            {t('Team Ranks')}\r\n          </RibbonWithImage>\r\n        }\r\n      >\r\n        <Box my=\"64px\">\r\n          <TeamRanks\r\n            team1LeaderboardInformation={team1LeaderboardInformation}\r\n            team2LeaderboardInformation={team2LeaderboardInformation}\r\n            team3LeaderboardInformation={team3LeaderboardInformation}\r\n            globalLeaderboardInformation={globalLeaderboardInformation}\r\n          />\r\n        </Box>\r\n      </PageSection>\r\n      <PageSection\r\n        containerProps={{ style: { marginTop: '-30px' } }}\r\n        dividerComponent={\r\n          <RibbonWithImage imageComponent={<PrizesIcon width=\"175px\" />} ribbonDirection=\"up\">\r\n            {t('Prizes')}\r\n          </RibbonWithImage>\r\n        }\r\n        concaveDivider\r\n        clipFill={{\r\n          light: 'linear-gradient(139.73deg, #e5fcfe 0%, #ecf6ff 100%)',\r\n          dark: 'linear-gradient(139.73deg, #303d5b 0%, #363457 100%)',\r\n        }}\r\n        dividerPosition=\"top\"\r\n        background={isDark ? LIGHTBLUEBG_DARK : LIGHTBLUEBG}\r\n        index={4}\r\n      >\r\n        <Box my=\"64px\">\r\n          <PrizesInfo />\r\n        </Box>\r\n      </PageSection>\r\n      <PageSection\r\n        containerProps={{ style: { marginTop: '-1px' } }}\r\n        index={5}\r\n        dividerPosition=\"top\"\r\n        clipFill={{\r\n          light: 'linear-gradient(139.73deg, #ecf5ff 0%, #f2effe 100%)',\r\n          dark: 'linear-gradient(139.73deg, #383357 0%, #3d2b53 100%)',\r\n        }}\r\n        dividerComponent={\r\n          <RibbonWithImage imageComponent={<RulesIcon width=\"175px\" />} ribbonDirection=\"up\">\r\n            {t('Rules')}\r\n          </RibbonWithImage>\r\n        }\r\n      >\r\n        <Box mt=\"64px\">\r\n          <Rules />\r\n        </Box>\r\n      </PageSection>\r\n      <PageSection\r\n        index={6}\r\n        dividerPosition=\"top\"\r\n        dividerFill={{ light: '#191326' }}\r\n        clipFill={{ light: theme.colors.background }}\r\n        background={DARKBG}\r\n      >\r\n        <Flex alignItems=\"center\">\r\n          {shouldHideCta ? null : (\r\n            <Flex height=\"fit-content\">\r\n              <BattleCta\r\n                userTradingInformation={userTradingInformation}\r\n                currentPhase={currentPhase}\r\n                account={account}\r\n                isCompetitionLive={isCompetitionLive}\r\n                hasCompetitionEnded={hasCompetitionEnded}\r\n                userCanClaimPrizes={userCanClaimPrizes}\r\n                finishedAndPrizesClaimed={finishedAndPrizesClaimed}\r\n                finishedAndNothingToClaim={finishedAndNothingToClaim}\r\n                profile={profile}\r\n                isLoading={isLoading}\r\n                onRegisterSuccess={onRegisterSuccess}\r\n                onClaimSuccess={onClaimSuccess}\r\n              />\r\n            </Flex>\r\n          )}\r\n          <BottomBunnyWrapper>\r\n            <Image src={StormBunny} width={147} height={200} />\r\n          </BottomBunnyWrapper>\r\n        </Flex>\r\n      </PageSection>\r\n    </CompetitionPage>\r\n  )\r\n}\r\n\r\nexport default TradingCompetition\r\n"],"mappings":"gQAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,OAASC,cAAc,KAAQ,uBAAuB,CACtD,OAASC,YAAY,KAAQ,kBAAkB,CAC/C,OAASC,UAAU,KAAQ,qBAAqB,CAChD,OAASC,IAAI,CAAEC,GAAG,CAAEC,KAAK,KAAQ,oBAAoB,CACrD,MAAO,CAAAC,MAAM,KAAM,mBAAmB,CACtC,OAASC,6BAA6B,KAAQ,mBAAmB,CACjE,MAAO,CAAAC,QAAQ,KAAM,gBAAgB,CACrC,OACEC,mBAAmB,CACnBC,iBAAiB,CACjBC,IAAI,CACJC,QAAQ,CACRC,KAAK,CACLC,IAAI,CACJC,YAAY,KACP,mDAAmD,CAC1D,MAAO,CAAAC,WAAW,KAAM,wBAAwB,CAChD,OAASC,MAAM,CAAEC,SAAS,CAAEC,cAAc,CAAEC,WAAW,CAAEC,gBAAgB,KAAQ,qBAAqB,CACtG,OAASC,UAAU,CAAEC,SAAS,CAAEC,SAAS,KAAQ,QAAQ,CACzD,MAAO,CAAAC,SAAS,KAAM,wBAAwB,CAC9C,MAAO,CAAAC,SAAS,KAAM,wBAAwB,CAC9C,MAAO,CAAAC,UAAU,KAAM,kBAAkB,CACzC,MAAO,CAAAC,eAAe,KAAM,8BAA8B,CAC1D,MAAO,CAAAC,SAAS,KAAM,wBAAwB,CAC9C,MAAO,CAAAC,YAAY,KAAM,2BAA2B,CACpD,MAAO,CAAAC,SAAS,KAAM,wBAAwB,CAC9C,MAAO,CAAAC,UAAU,KAAM,yBAAyB,CAChD,MAAO,CAAAC,KAAK,KAAM,oBAAoB,CACtC,MAAO,CAAAC,SAAS,KAAM,wBAAwB,QAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE9C,KAAM,CAAAC,eAAe,CAAGjC,MAAM,CAACkC,GAAG,CAAAC,eAAA,GAAAA,eAAA,CAAAC,sBAAA,6CAEjC,CAED,KAAM,CAAAC,UAAU,CAAGrC,MAAM,CAACH,IAAI,CAAC,CAAAyC,gBAAA,GAAAA,gBAAA,CAAAF,sBAAA,4NAE3BG,IAAA,MAAC,CAAEC,KAAM,CAAC,CAAAD,IAAA,OAAK,CAAAC,KAAK,CAACC,YAAY,CAACC,EAAE,GASvC,CAED,KAAM,CAAAC,mBAAmB,CAAG3C,MAAM,CAACU,WAAW,CAAC,CAAAkC,gBAAA,GAAAA,gBAAA,CAAAR,sBAAA,sEAE3CS,KAAA,MAAC,CAAEL,KAAM,CAAC,CAAAK,KAAA,OAAK,CAAAL,KAAK,CAACC,YAAY,CAACK,EAAE,GAGvC,CAED,KAAM,CAAAC,kBAAkB,CAAG/C,MAAM,CAACF,GAAG,CAAC,CAAAkD,gBAAA,GAAAA,gBAAA,CAAAZ,sBAAA,+HAGlCa,KAAA,MAAC,CAAET,KAAM,CAAC,CAAAS,KAAA,OAAK,CAAAT,KAAK,CAACC,YAAY,CAACS,EAAE,GAMvC,CAED,KAAM,CAAAC,kBAAkB,CAAGA,CAAA,GAAM,CAC/B,KAAM,CAAAC,aAAa,CAAGC,OAAO,CAACC,GAAG,CAACC,qBAAqB,CACvD,KAAM,CAAEC,OAAQ,CAAC,CAAG7D,YAAY,CAAC,CAAC,CAClC,KAAM,CAAE8D,CAAE,CAAC,CAAG/D,cAAc,CAAC,CAAC,CAC9B,KAAM,CAAEgE,OAAO,CAAEC,SAAU,CAAC,CAAG/D,UAAU,CAAC,CAAC,CAC3C,KAAM,CAAEgE,MAAM,CAAEpB,KAAM,CAAC,CAAGtC,QAAQ,CAAC,CAAC,CACpC,KAAM,CAAA2D,0BAA0B,CAAG5D,6BAA6B,CAAC,CAAC,CAClE,KAAM,CAAC6D,YAAY,CAAEC,eAAe,CAAC,CAAGvE,QAAQ,CAACY,iBAAiB,CAACC,IAAI,CAAC,CACxE,KAAM,CAAC2D,sBAAsB,CAAEC,yBAAyB,CAAC,CAAGzE,QAAQ,CAAC,KAAK,CAAC,CAC3E,KAAM,CAAC0E,eAAe,CAAEC,kBAAkB,CAAC,CAAG3E,QAAQ,CAAC,KAAK,CAAC,CAC7D,KAAM,CAAC4E,sBAAsB,CAAEC,yBAAyB,CAAC,CAAG7E,QAAQ,CAAC,CACnE8E,aAAa,CAAE,KAAK,CACpBC,cAAc,CAAE,KAAK,CACrBC,eAAe,CAAE,GAAG,CACpBC,eAAe,CAAE,GAAG,CACpBC,eAAe,CAAE,GAAG,CACpBC,WAAW,CAAE,KACf,CAAC,CAAC,CACF,KAAM,CAACC,4BAA4B,CAAEC,+BAA+B,CAAC,CAAGrF,QAAQ,CAAC,IAAI,CAAC,CACtF,KAAM,CAACsF,0BAA0B,CAAEC,6BAA6B,CAAC,CAAGvF,QAAQ,CAAC,CAC3EwF,MAAM,CAAE,CAAC,CACTC,IAAI,CAAE,CAAC,CACPC,MAAM,CAAE,CAAC,CACTC,SAAS,CAAE,CACb,CAAC,CAAC,CACF;AACA,KAAM,CAACC,2BAA2B,CAAEC,8BAA8B,CAAC,CAAG7F,QAAQ,CAAC,CAAE8F,MAAM,CAAE,CAAC,CAAEC,eAAe,CAAE,IAAK,CAAC,CAAC,CACpH;AACA,KAAM,CAACC,2BAA2B,CAAEC,8BAA8B,CAAC,CAAGjG,QAAQ,CAAC,CAAE8F,MAAM,CAAE,CAAC,CAAEC,eAAe,CAAE,IAAK,CAAC,CAAC,CACpH;AACA,KAAM,CAACG,2BAA2B,CAAEC,8BAA8B,CAAC,CAAGnG,QAAQ,CAAC,CAAE8F,MAAM,CAAE,CAAC,CAAEC,eAAe,CAAE,IAAK,CAAC,CAAC,CAEpH,KAAM,CAAAK,iBAAiB,CAAG9B,YAAY,CAAC+B,KAAK,GAAKxF,IAAI,CACrD,KAAM,CAAAyF,mBAAmB,CACvBhC,YAAY,CAAC+B,KAAK,GAAKvF,QAAQ,EAAIwD,YAAY,CAAC+B,KAAK,GAAKtF,KAAK,EAAIuD,YAAY,CAAC+B,KAAK,GAAKrF,IAAI,CAEhG,KAAM,CAAE+D,cAAc,CAAEE,eAAe,CAAEC,eAAe,CAAEC,WAAY,CAAC,CAAGP,sBAAsB,CAEhG,KAAM,CAAA2B,kBAAkB,CACtBjC,YAAY,CAAC+B,KAAK,GAAKtF,KAAK,EAC5B,CAACgE,cAAc,GACdE,eAAe,GAAK,GAAG,EAAIC,eAAe,GAAK,GAAG,EAAIC,WAAW,CAAC,CACrE,KAAM,CAAAqB,wBAAwB,CAAGF,mBAAmB,EAAItC,OAAO,EAAIe,cAAc,CACjF,KAAM,CAAA0B,yBAAyB,CAAGH,mBAAmB,EAAItC,OAAO,EAAI,CAACuC,kBAAkB,CAEvF,KAAM,CAAAG,iBAAiB,CAAGA,CAAA,GAAM,CAC9BjC,yBAAyB,CAAC,IAAI,CAAC,CACjC,CAAC,CAED,KAAM,CAAAkC,cAAc,CAAGA,CAAA,GAAM,CAC3BhC,kBAAkB,CAAC,IAAI,CAAC,CAC1B,CAAC,CAED1E,SAAS,CAAC,IAAM,CACd,KAAM,CAAA2G,4BAA4B,CAAG,KAAAA,CAAA,GAAY,CAC/C,KAAM,CAAAC,iBAAiB,CAAG,KAAM,CAAAxC,0BAA0B,CAACyC,aAAa,CAAC,CAAC,CAC1EvC,eAAe,CAAC5D,mBAAmB,CAACkG,iBAAiB,CAAC,CAAC,CACzD,CAAC,CAED,KAAM,CAAAE,iBAAiB,CAAG,KAAAA,CAAA,GAAY,CACpC,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAA3C,0BAA0B,CAAC4C,gBAAgB,CAACjD,OAAO,CAAC,CACvE,KAAM,CAAAkD,UAAU,CAAG,CACjBpC,aAAa,CAAEkC,IAAI,CAAC,CAAC,CAAC,CACtBjC,cAAc,CAAEiC,IAAI,CAAC,CAAC,CAAC,CACvBhC,eAAe,CAAEgC,IAAI,CAAC,CAAC,CAAC,CAACG,QAAQ,CAAC,CAAC,CACnClC,eAAe,CAAE+B,IAAI,CAAC,CAAC,CAAC,CAACG,QAAQ,CAAC,CAAC,CACnCjC,eAAe,CAAE8B,IAAI,CAAC,CAAC,CAAC,CAACG,QAAQ,CAAC,CAAC,CACnChC,WAAW,CAAE6B,IAAI,CAAC,CAAC,CACrB,CAAC,CACDnC,yBAAyB,CAACqC,UAAU,CAAC,CACvC,CAAC,CAED,GAAIlD,OAAO,CAAE,CACX+C,iBAAiB,CAAC,CAAC,CACrB,CAAC,IAAM,CACLlC,yBAAyB,CAAC,CACxBC,aAAa,CAAE,KAAK,CACpBC,cAAc,CAAE,KAAK,CACrBC,eAAe,CAAE,GAAG,CACpBC,eAAe,CAAE,GAAG,CACpBC,eAAe,CAAE,GAAG,CACpBC,WAAW,CAAE,KACf,CAAC,CAAC,CACJ,CACAyB,4BAA4B,CAAC,CAAC,CAChC,CAAC,CAAE,CAAC5C,OAAO,CAAEQ,sBAAsB,CAAEE,eAAe,CAAEL,0BAA0B,CAAC,CAAC,CAElFpE,SAAS,CAAC,IAAM,CACd,KAAM,CAAAmH,qBAAqB,CAAG,KAAAA,CAAA,GAAY,CACxC,KAAM,CAAAC,GAAG,CAAG,KAAM,CAAAC,KAAK,IAAAC,MAAA,CAAI3D,aAAa,gBAAA2D,MAAA,CAAcvD,OAAO,CAAE,CAAC,CAChE,KAAM,CAAAwD,IAAI,CAAG,KAAM,CAAAH,GAAG,CAACI,IAAI,CAAC,CAAC,CAC7BlC,6BAA6B,CAACiC,IAAI,CAACE,WAAW,CAAC,CACjD,CAAC,CACD;AACA,GAAI1D,OAAO,EAAIY,sBAAsB,CAACE,aAAa,CAAE,CACnDsC,qBAAqB,CAAC,CAAC,CACzB,CACF,CAAC,CAAE,CAACpD,OAAO,CAAEY,sBAAsB,CAAEhB,aAAa,CAAC,CAAC,CAEpD3D,SAAS,CAAC,IAAM,CACd,KAAM,CAAA0H,2BAA2B,CAAG,KAAAA,CAAA,GAAY,CAC9C,KAAM,CAAAN,GAAG,CAAG,KAAM,CAAAC,KAAK,IAAAC,MAAA,CAAI3D,aAAa,2BAAyB,CAAC,CAClE,KAAM,CAAA4D,IAAI,CAAG,KAAM,CAAAH,GAAG,CAACI,IAAI,CAAC,CAAC,CAC7BpC,+BAA+B,CAACmC,IAAI,CAAC,CACvC,CAAC,CAED,KAAM,CAAAI,0BAA0B,CAAG,KAAAA,CAAO9B,MAAc,CAAE+B,QAA6B,GAAK,CAC1F,GAAI,CACF,KAAM,CAAAR,GAAG,CAAG,KAAM,CAAAC,KAAK,IAAAC,MAAA,CAAI3D,aAAa,2BAAA2D,MAAA,CAAyBzB,MAAM,CAAE,CAAC,CAC1E,KAAM,CAAA0B,IAAI,CAAG,KAAM,CAAAH,GAAG,CAACI,IAAI,CAAC,CAAC,CAC7BI,QAAQ,CAACL,IAAI,CAAC,CAChB,CAAE,MAAOM,CAAC,CAAE,CACVC,OAAO,CAACC,KAAK,CAACF,CAAC,CAAC,CAClB,CACF,CAAC,CAEDF,0BAA0B,CAAC,CAAC,CAAGJ,IAAI,EACjC3B,8BAA8B,CAAEoC,SAAS,EAAK,CAC5C,MAAO,CAAE,GAAGA,SAAS,CAAElC,eAAe,CAAEyB,IAAK,CAAC,CAChD,CAAC,CACH,CAAC,CACDI,0BAA0B,CAAC,CAAC,CAAGJ,IAAI,EACjCvB,8BAA8B,CAAEgC,SAAS,EAAK,CAC5C,MAAO,CAAE,GAAGA,SAAS,CAAElC,eAAe,CAAEyB,IAAK,CAAC,CAChD,CAAC,CACH,CAAC,CACDI,0BAA0B,CAAC,CAAC,CAAGJ,IAAI,EACjCrB,8BAA8B,CAAE8B,SAAS,EAAK,CAC5C,MAAO,CAAE,GAAGA,SAAS,CAAElC,eAAe,CAAEyB,IAAK,CAAC,CAChD,CAAC,CACH,CAAC,CACDG,2BAA2B,CAAC,CAAC,CAC/B,CAAC,CAAE,CAAC/D,aAAa,CAAC,CAAC,CAEnB;AACA,KAAM,CAAAsE,aAAa,CACjB,CAAC/D,SAAS,EAAIH,OAAO,EAAI,CAACY,sBAAsB,CAACE,aAAa,GAAKsB,iBAAiB,EAAIE,mBAAmB,CAAC,CAE9G,mBACE9D,KAAA,CAACC,eAAe,EAAA0F,QAAA,eACd7F,IAAA,CAACa,mBAAmB,EAACiF,UAAU,CAAEjH,MAAO,CAACkH,gBAAgB,CAAE,KAAM,CAACC,KAAK,CAAE,CAAE,CAAAH,QAAA,cACzE3F,KAAA,CAACK,UAAU,EAAC0F,EAAE,CAAEL,aAAa,CAAG,KAAK,CAAG,MAAO,CAAAC,QAAA,eAC7C7F,IAAA,CAACX,SAAS,EAAC2C,YAAY,CAAEA,YAAa,CAACgC,mBAAmB,CAAEA,mBAAoB,CAAE,CAAC,cACnFhE,IAAA,CAACN,YAAY,GAAE,CAAC,EACN,CAAC,CACM,CAAC,cACtBM,IAAA,CAACpB,WAAW,EACVsH,cAAc,CAAE,CAAEC,KAAK,CAAE,CAAEC,SAAS,CAAE,OAAQ,CAAE,CAAE,CAClDN,UAAU,CAAEhE,MAAM,CAAG/C,cAAc,CAAGD,SAAU,CAChDuH,cAAc,MACdC,QAAQ,CAAE,CAAEC,KAAK,CAAE,SAAS,CAAEC,IAAI,CAAE,SAAU,CAAE,CAChDC,eAAe,CAAC,KAAK,CACrBT,KAAK,CAAE,CAAE,CACTU,gBAAgB,CACdd,aAAa,CAAG,IAAI,cAClB5F,IAAA,CAACL,SAAS,EACR2C,sBAAsB,CAAEA,sBAAuB,CAC/CN,YAAY,CAAEA,YAAa,CAC3BN,OAAO,CAAEA,OAAQ,CACjBoC,iBAAiB,CAAEA,iBAAkB,CACrCE,mBAAmB,CAAEA,mBAAoB,CACzCC,kBAAkB,CAAEA,kBAAmB,CACvCC,wBAAwB,CAAEA,wBAAyB,CACnDC,yBAAyB,CAAEA,yBAA0B,CACrDvC,OAAO,CAAEA,OAAQ,CACjBC,SAAS,CAAEA,SAAU,CACrBuC,iBAAiB,CAAEA,iBAAkB,CACrCC,cAAc,CAAEA,cAAe,CAChC,CAEJ,CAAAwB,QAAA,cAED7F,IAAA,CAAChC,GAAG,EAAC2I,EAAE,CAAEf,aAAa,CAAG,KAAK,CAAG,CAAC,MAAM,CAAE,IAAI,CAAE,MAAM,CAAE,CAACK,EAAE,CAAC,MAAM,CAAAJ,QAAA,CAE/D7D,YAAY,CAAC+B,KAAK,GAAKpF,YAAY,cAClCqB,IAAA,CAACP,SAAS,GAAE,CAAC,cAEbO,IAAA,CAACV,SAAS,EACR0C,YAAY,CAAEA,YAAa,CAC3BQ,aAAa,CAAEF,sBAAsB,CAACE,aAAc,CACpDF,sBAAsB,CAAEA,sBAAuB,CAC/CZ,OAAO,CAAEA,OAAQ,CACjBE,OAAO,CAAEA,OAAQ,CACjBC,SAAS,CAAEA,SAAU,CACrBmB,0BAA0B,CAAEA,0BAA2B,CACvDiB,kBAAkB,CAAEA,kBAAmB,CACvCC,wBAAwB,CAAEA,wBAAyB,CACnDC,yBAAyB,CAAEA,yBAA0B,CACrDE,cAAc,CAAEA,cAAe,CAChC,CACF,CACE,CAAC,CACK,CAAC,cACdrE,IAAA,CAACpB,WAAW,EACVsH,cAAc,CAAE,CAAEC,KAAK,CAAE,CAAEC,SAAS,CAAE,OAAQ,CAAE,CAAE,CAClDJ,KAAK,CAAE,CAAE,CACTK,cAAc,MACdC,QAAQ,CAAE,CAAEC,KAAK,CAAE7F,KAAK,CAACkG,MAAM,CAACd,UAAW,CAAE,CAC7CW,eAAe,CAAC,KAAK,CACrBC,gBAAgB,cACd1G,IAAA,CAACR,eAAe,EAACqH,cAAc,cAAE7G,IAAA,CAACb,SAAS,EAAC2H,KAAK,CAAC,OAAO,CAAE,CAAE,CAACC,eAAe,CAAC,IAAI,CAAAlB,QAAA,CAC/ElE,CAAC,CAAC,YAAY,CAAC,CACD,CAClB,CAAAkE,QAAA,cAED7F,IAAA,CAAChC,GAAG,EAACgJ,EAAE,CAAC,MAAM,CAAAnB,QAAA,cACZ7F,IAAA,CAACF,SAAS,EACRwD,2BAA2B,CAAEA,2BAA4B,CACzDI,2BAA2B,CAAEA,2BAA4B,CACzDE,2BAA2B,CAAEA,2BAA4B,CACzDd,4BAA4B,CAAEA,4BAA6B,CAC5D,CAAC,CACC,CAAC,CACK,CAAC,cACd9C,IAAA,CAACpB,WAAW,EACVsH,cAAc,CAAE,CAAEC,KAAK,CAAE,CAAEC,SAAS,CAAE,OAAQ,CAAE,CAAE,CAClDM,gBAAgB,cACd1G,IAAA,CAACR,eAAe,EAACqH,cAAc,cAAE7G,IAAA,CAACd,UAAU,EAAC4H,KAAK,CAAC,OAAO,CAAE,CAAE,CAACC,eAAe,CAAC,IAAI,CAAAlB,QAAA,CAChFlE,CAAC,CAAC,QAAQ,CAAC,CACG,CAClB,CACD0E,cAAc,MACdC,QAAQ,CAAE,CACRC,KAAK,CAAE,sDAAsD,CAC7DC,IAAI,CAAE,sDACR,CAAE,CACFC,eAAe,CAAC,KAAK,CACrBX,UAAU,CAAEhE,MAAM,CAAG7C,gBAAgB,CAAGD,WAAY,CACpDgH,KAAK,CAAE,CAAE,CAAAH,QAAA,cAET7F,IAAA,CAAChC,GAAG,EAACgJ,EAAE,CAAC,MAAM,CAAAnB,QAAA,cACZ7F,IAAA,CAACJ,UAAU,GAAE,CAAC,CACX,CAAC,CACK,CAAC,cACdI,IAAA,CAACpB,WAAW,EACVsH,cAAc,CAAE,CAAEC,KAAK,CAAE,CAAEC,SAAS,CAAE,MAAO,CAAE,CAAE,CACjDJ,KAAK,CAAE,CAAE,CACTS,eAAe,CAAC,KAAK,CACrBH,QAAQ,CAAE,CACRC,KAAK,CAAE,sDAAsD,CAC7DC,IAAI,CAAE,sDACR,CAAE,CACFE,gBAAgB,cACd1G,IAAA,CAACR,eAAe,EAACqH,cAAc,cAAE7G,IAAA,CAACZ,SAAS,EAAC0H,KAAK,CAAC,OAAO,CAAE,CAAE,CAACC,eAAe,CAAC,IAAI,CAAAlB,QAAA,CAC/ElE,CAAC,CAAC,OAAO,CAAC,CACI,CAClB,CAAAkE,QAAA,cAED7F,IAAA,CAAChC,GAAG,EAAC2I,EAAE,CAAC,MAAM,CAAAd,QAAA,cACZ7F,IAAA,CAACH,KAAK,GAAE,CAAC,CACN,CAAC,CACK,CAAC,cACdG,IAAA,CAACpB,WAAW,EACVoH,KAAK,CAAE,CAAE,CACTS,eAAe,CAAC,KAAK,CACrBQ,WAAW,CAAE,CAAEV,KAAK,CAAE,SAAU,CAAE,CAClCD,QAAQ,CAAE,CAAEC,KAAK,CAAE7F,KAAK,CAACkG,MAAM,CAACd,UAAW,CAAE,CAC7CA,UAAU,CAAEjH,MAAO,CAAAgH,QAAA,cAEnB3F,KAAA,CAACnC,IAAI,EAACmJ,UAAU,CAAC,QAAQ,CAAArB,QAAA,EACtBD,aAAa,CAAG,IAAI,cACnB5F,IAAA,CAACjC,IAAI,EAACoJ,MAAM,CAAC,aAAa,CAAAtB,QAAA,cACxB7F,IAAA,CAACL,SAAS,EACR2C,sBAAsB,CAAEA,sBAAuB,CAC/CN,YAAY,CAAEA,YAAa,CAC3BN,OAAO,CAAEA,OAAQ,CACjBoC,iBAAiB,CAAEA,iBAAkB,CACrCE,mBAAmB,CAAEA,mBAAoB,CACzCC,kBAAkB,CAAEA,kBAAmB,CACvCC,wBAAwB,CAAEA,wBAAyB,CACnDC,yBAAyB,CAAEA,yBAA0B,CACrDvC,OAAO,CAAEA,OAAQ,CACjBC,SAAS,CAAEA,SAAU,CACrBuC,iBAAiB,CAAEA,iBAAkB,CACrCC,cAAc,CAAEA,cAAe,CAChC,CAAC,CACE,CACP,cACDrE,IAAA,CAACiB,kBAAkB,EAAA4E,QAAA,cACjB7F,IAAA,CAAC/B,KAAK,EAACmJ,GAAG,CAAE7H,UAAW,CAACuH,KAAK,CAAE,GAAI,CAACK,MAAM,CAAE,GAAI,CAAE,CAAC,CACjC,CAAC,EACjB,CAAC,CACI,CAAC,EACC,CAAC,CAEtB,CAAC,CAED,cAAe,CAAA9F,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"module"}