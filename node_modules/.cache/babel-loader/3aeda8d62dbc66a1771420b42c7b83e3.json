{"ast":null,"code":"import _taggedTemplateLiteral from\"C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject;import React from'react';import styled from'styled-components';import every from'lodash/every';import{Stepper,Step,Card,CardBody,Heading,Text,Button,Link,OpenNewIcon}from'@pancakeswap/uikit';import{BASE_ADD_LIQUIDITY_URL}from'config';import{useTranslation}from'contexts/Localization';import useTokenBalance from'hooks/useTokenBalance';import Container from'components/Layout/Container';import{useProfile}from'state/profile/hooks';import{getAddress}from'utils/addressHelpers';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Wrapper=styled(Container)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  background: \",\";\\n  margin-left: -16px;\\n  margin-right: -16px;\\n  padding-top: 48px;\\n  padding-bottom: 48px;\\n\\n  \",\" {\\n    margin-left: -24px;\\n    margin-right: -24px;\\n  }\\n\"])),_ref=>{let{theme}=_ref;return theme.colors.gradients.bubblegum;},_ref2=>{let{theme}=_ref2;return theme.mediaQueries.sm;});const IfoSteps=_ref3=>{let{ifo,walletIfoData}=_ref3;const{poolBasic,poolUnlimited}=walletIfoData;const{hasProfile}=useProfile();const{t}=useTranslation();const{balance}=useTokenBalance(getAddress(ifo.currency.address));const stepsValidationStatus=[hasProfile,balance.isGreaterThan(0),poolBasic.amountTokenCommittedInLP.isGreaterThan(0)||poolUnlimited.amountTokenCommittedInLP.isGreaterThan(0),poolBasic.hasClaimed||poolUnlimited.hasClaimed];const getStatusProp=index=>{const arePreviousValid=index===0?true:every(stepsValidationStatus.slice(0,index),Boolean);if(stepsValidationStatus[index]){return arePreviousValid?'past':'future';}return arePreviousValid?'current':'future';};const renderCardBody=step=>{const isStepValid=stepsValidationStatus[step];switch(step){case 0:return/*#__PURE__*/_jsxs(CardBody,{children:[/*#__PURE__*/_jsx(Heading,{as:\"h4\",color:\"secondary\",mb:\"16px\",children:t('Activate your Profile')}),/*#__PURE__*/_jsx(Text,{color:\"textSubtle\",small:true,mb:\"16px\",children:t('You’ll need an active PancakeSwap Profile to take part in an IFO!')})]});case 1:return/*#__PURE__*/_jsxs(CardBody,{children:[/*#__PURE__*/_jsx(Heading,{as:\"h4\",color:\"secondary\",mb:\"16px\",children:t('Get CAKE-BNB LP Tokens')}),/*#__PURE__*/_jsxs(Text,{color:\"textSubtle\",small:true,children:[t('Stake CAKE and BNB in the liquidity pool to get LP tokens.'),\" \",/*#__PURE__*/_jsx(\"br\",{}),t('You’ll spend them to buy IFO sale tokens.')]}),/*#__PURE__*/_jsx(Button,{as:Link,external:true,href:\"\".concat(BASE_ADD_LIQUIDITY_URL,\"/BNB/0e09fabb73bd3ade0a17ecc321fd13a19e81ce82\"),endIcon:/*#__PURE__*/_jsx(OpenNewIcon,{color:\"white\"}),mt:\"16px\",children:t('Get LP tokens')})]});case 2:return/*#__PURE__*/_jsxs(CardBody,{children:[/*#__PURE__*/_jsx(Heading,{as:\"h4\",color:\"secondary\",mb:\"16px\",children:t('Commit LP Tokens')}),/*#__PURE__*/_jsxs(Text,{color:\"textSubtle\",small:true,children:[t('When the IFO sales are live, you can “commit” your LP tokens to buy the tokens being sold.'),\" \",/*#__PURE__*/_jsx(\"br\",{}),t('We recommend committing to the Basic Sale first, but you can do both if you like.')]})]});case 3:return/*#__PURE__*/_jsxs(CardBody,{children:[/*#__PURE__*/_jsx(Heading,{as:\"h4\",color:\"secondary\",mb:\"16px\",children:t('Claim your tokens and achievement')}),/*#__PURE__*/_jsx(Text,{color:\"textSubtle\",small:true,children:t('After the IFO sales finish, you can claim any IFO tokens that you bought, and any unspent CAKE-BNB LP tokens will be returned to your wallet.')})]});default:return null;}};return/*#__PURE__*/_jsxs(Wrapper,{children:[/*#__PURE__*/_jsx(Heading,{as:\"h2\",scale:\"xl\",color:\"secondary\",mb:\"24px\",textAlign:\"center\",children:t('How to Take Part')}),/*#__PURE__*/_jsx(Stepper,{children:stepsValidationStatus.map((_,index)=>/*#__PURE__*/ // eslint-disable-next-line react/no-array-index-key\n_jsx(Step,{index:index,status:getStatusProp(index),children:/*#__PURE__*/_jsx(Card,{children:renderCardBody(index)})},index))})]});};export default IfoSteps;","map":{"version":3,"names":["React","styled","every","Stepper","Step","Card","CardBody","Heading","Text","Button","Link","OpenNewIcon","BASE_ADD_LIQUIDITY_URL","useTranslation","useTokenBalance","Container","useProfile","getAddress","jsx","_jsx","jsxs","_jsxs","Wrapper","_templateObject","_taggedTemplateLiteral","_ref","theme","colors","gradients","bubblegum","_ref2","mediaQueries","sm","IfoSteps","_ref3","ifo","walletIfoData","poolBasic","poolUnlimited","hasProfile","t","balance","currency","address","stepsValidationStatus","isGreaterThan","amountTokenCommittedInLP","hasClaimed","getStatusProp","index","arePreviousValid","slice","Boolean","renderCardBody","step","isStepValid","children","as","color","mb","small","external","href","concat","endIcon","mt","scale","textAlign","map","_","status"],"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/views/Ifos/components/IfoSteps.tsx"],"sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\nimport every from 'lodash/every'\r\nimport { Stepper, Step, StepStatus, Card, CardBody, Heading, Text, Button, Link, OpenNewIcon } from '@pancakeswap/uikit'\r\nimport { BASE_ADD_LIQUIDITY_URL } from 'config'\r\nimport { Ifo } from 'config/constants/types'\r\nimport { WalletIfoData } from 'views/Ifos/types'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useTokenBalance from 'hooks/useTokenBalance'\r\nimport Container from 'components/Layout/Container'\r\nimport { useProfile } from 'state/profile/hooks'\r\nimport { getAddress } from 'utils/addressHelpers'\r\n\r\ninterface Props {\r\n  ifo: Ifo\r\n  walletIfoData: WalletIfoData\r\n}\r\n\r\nconst Wrapper = styled(Container)`\r\n  background: ${({ theme }) => theme.colors.gradients.bubblegum};\r\n  margin-left: -16px;\r\n  margin-right: -16px;\r\n  padding-top: 48px;\r\n  padding-bottom: 48px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    margin-left: -24px;\r\n    margin-right: -24px;\r\n  }\r\n`\r\n\r\nconst IfoSteps: React.FC<Props> = ({ ifo, walletIfoData }) => {\r\n  const { poolBasic, poolUnlimited } = walletIfoData\r\n  const { hasProfile } = useProfile()\r\n  const { t } = useTranslation()\r\n  const { balance } = useTokenBalance(getAddress(ifo.currency.address))\r\n  const stepsValidationStatus = [\r\n    hasProfile,\r\n    balance.isGreaterThan(0),\r\n    poolBasic.amountTokenCommittedInLP.isGreaterThan(0) || poolUnlimited.amountTokenCommittedInLP.isGreaterThan(0),\r\n    poolBasic.hasClaimed || poolUnlimited.hasClaimed,\r\n  ]\r\n\r\n  const getStatusProp = (index: number): StepStatus => {\r\n    const arePreviousValid = index === 0 ? true : every(stepsValidationStatus.slice(0, index), Boolean)\r\n    if (stepsValidationStatus[index]) {\r\n      return arePreviousValid ? 'past' : 'future'\r\n    }\r\n    return arePreviousValid ? 'current' : 'future'\r\n  }\r\n\r\n  const renderCardBody = (step: number) => {\r\n    const isStepValid = stepsValidationStatus[step]\r\n    switch (step) {\r\n      case 0:\r\n        return (\r\n          <CardBody>\r\n            <Heading as=\"h4\" color=\"secondary\" mb=\"16px\">\r\n              {t('Activate your Profile')}\r\n            </Heading>\r\n            <Text color=\"textSubtle\" small mb=\"16px\">\r\n              {t('You’ll need an active PancakeSwap Profile to take part in an IFO!')}\r\n            </Text>\r\n\r\n{/*             {isStepValid ? (\r\n              <Text color=\"success\" bold>\r\n                {t('Profile Active!')}\r\n              </Text>\r\n            ) : (\r\n              <Button as={Link} href=\"/profile\">\r\n                {t('Activate your Profile')}\r\n              </Button>\r\n            )} */}\r\n\r\n          </CardBody>\r\n        )\r\n      case 1:\r\n        return (\r\n          <CardBody>\r\n            <Heading as=\"h4\" color=\"secondary\" mb=\"16px\">\r\n              {t('Get CAKE-BNB LP Tokens')}\r\n            </Heading>\r\n            <Text color=\"textSubtle\" small>\r\n              {t('Stake CAKE and BNB in the liquidity pool to get LP tokens.')} <br />\r\n              {t('You’ll spend them to buy IFO sale tokens.')}\r\n            </Text>\r\n            <Button\r\n              as={Link}\r\n              external\r\n              href={`${BASE_ADD_LIQUIDITY_URL}/BNB/0e09fabb73bd3ade0a17ecc321fd13a19e81ce82`}\r\n              endIcon={<OpenNewIcon color=\"white\" />}\r\n              mt=\"16px\"\r\n            >\r\n              {t('Get LP tokens')}\r\n            </Button>\r\n          </CardBody>\r\n        )\r\n      case 2:\r\n        return (\r\n          <CardBody>\r\n            <Heading as=\"h4\" color=\"secondary\" mb=\"16px\">\r\n              {t('Commit LP Tokens')}\r\n            </Heading>\r\n            <Text color=\"textSubtle\" small>\r\n              {t('When the IFO sales are live, you can “commit” your LP tokens to buy the tokens being sold.')} <br />\r\n              {t('We recommend committing to the Basic Sale first, but you can do both if you like.')}\r\n            </Text>\r\n          </CardBody>\r\n        )\r\n      case 3:\r\n        return (\r\n          <CardBody>\r\n            <Heading as=\"h4\" color=\"secondary\" mb=\"16px\">\r\n              {t('Claim your tokens and achievement')}\r\n            </Heading>\r\n            <Text color=\"textSubtle\" small>\r\n              {t(\r\n                'After the IFO sales finish, you can claim any IFO tokens that you bought, and any unspent CAKE-BNB LP tokens will be returned to your wallet.',\r\n              )}\r\n            </Text>\r\n          </CardBody>\r\n        )\r\n      default:\r\n        return null\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Heading as=\"h2\" scale=\"xl\" color=\"secondary\" mb=\"24px\" textAlign=\"center\">\r\n        {t('How to Take Part')}\r\n      </Heading>\r\n      <Stepper>\r\n        {stepsValidationStatus.map((_, index) => (\r\n          // eslint-disable-next-line react/no-array-index-key\r\n          <Step key={index} index={index} status={getStatusProp(index)}>\r\n            <Card>{renderCardBody(index)}</Card>\r\n          </Step>\r\n        ))}\r\n      </Stepper>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default IfoSteps\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}