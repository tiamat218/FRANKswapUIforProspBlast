{"ast":null,"code":"import React,{useState}from'react';import{BlockIcon,Box,CheckmarkCircleIcon,Flex,MedalBronzeIcon,MedalGoldIcon,MedalPurpleIcon,MedalSilverIcon,MedalTealIcon,CrownIcon,Tab,TabMenu,Text,TeamPlayerIcon,TrophyGoldIcon}from'@pancakeswap/uikit';import{useTranslation}from'contexts/Localization';import easterPrizes,{Tiers}from'config/constants/trading-competition/easter';import{Td,BoldTd,StyledPrizeTable}from'../../StyledPrizeTable';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const COLOR_GOLD='#FFBF33';const COLOR_SILVER='#C1C1C1';const COLOR_BRONZE='#E79559';const COLOR_PURPLE='#A57CFD';const COLOR_TEAL='#4CD2DD';const tierStyleMap={[Tiers.GOLD]:{icon:MedalGoldIcon,label:{text:'Gold'},color:COLOR_GOLD},[Tiers.SILVER]:{icon:MedalSilverIcon,label:{text:'Silver'},color:COLOR_SILVER},[Tiers.BRONZE]:{icon:MedalBronzeIcon,label:{text:'Bronze'},color:COLOR_BRONZE},[Tiers.SILVER]:{icon:MedalSilverIcon,label:{text:'Silver'},color:COLOR_SILVER},[Tiers.PURPLE]:{icon:MedalPurpleIcon,label:{text:'Purple'},color:COLOR_PURPLE},[Tiers.TEAL]:{icon:MedalTealIcon,label:{text:'Teal'},color:COLOR_TEAL}};const getTotalAchievementPoints=achievements=>{return Object.values(achievements).reduce((accum,achievement)=>{return achievement?accum+achievement:accum;},0);};const PrizesGrid=()=>{const[tab,setTab]=useState(0);const{t}=useTranslation();const rows=easterPrizes[tab+1];const handleItemClick=index=>setTab(index);return/*#__PURE__*/_jsxs(Box,{pt:\"24px\",children:[/*#__PURE__*/_jsx(TabMenu,{activeIndex:tab,onItemClick:handleItemClick,children:Object.keys(easterPrizes).map(team=>{return/*#__PURE__*/_jsx(Tab,{children:t('#%team% Team',{team})},team);})}),/*#__PURE__*/_jsx(Box,{minWidth:\"288px\",overflowX:\"auto\",maxWidth:\"100%\",children:/*#__PURE__*/_jsxs(StyledPrizeTable,{children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:t('Rank in team')}),/*#__PURE__*/_jsx(\"th\",{children:t('Tier')}),/*#__PURE__*/_jsx(\"th\",{children:t('CAKE Prizes (Split)')}),/*#__PURE__*/_jsx(\"th\",{children:t('Achievements')}),/*#__PURE__*/_jsx(\"th\",{children:t('NFT')})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:rows.map(row=>{const{icon:Icon,label,color}=tierStyleMap[row.tier];const{champion,teamPlayer}=row.achievements;return/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(BoldTd,{children:row.rank}),/*#__PURE__*/_jsxs(Td,{children:[/*#__PURE__*/_jsx(Icon,{}),/*#__PURE__*/_jsx(Text,{color:color,fontSize:\"12px\",bold:true,textTransform:\"uppercase\",children:t(label.text)})]}),/*#__PURE__*/_jsx(BoldTd,{children:\"$\".concat(row.cakePrizeInUsd.toLocaleString(undefined,{minimumFractionDigits:0,maximumFractionDigits:0}))}),/*#__PURE__*/_jsx(Td,{children:/*#__PURE__*/_jsxs(Flex,{alignItems:\"center\",flexWrap:\"wrap\",justifyContent:\"center\",width:\"100%\",children:[champion&&/*#__PURE__*/_jsx(CrownIcon,{mr:[0,'4px']}),teamPlayer&&/*#__PURE__*/_jsx(TeamPlayerIcon,{mr:[0,'4px']}),/*#__PURE__*/_jsx(TrophyGoldIcon,{mr:[0,'4px']}),/*#__PURE__*/_jsx(Text,{fontSize:\"12px\",color:\"textSubtle\",children:\"+\".concat(getTotalAchievementPoints(row.achievements).toLocaleString(undefined,{minimumFractionDigits:0,maximumFractionDigits:0}))})]})}),/*#__PURE__*/_jsx(Td,{children:row.hasNft?/*#__PURE__*/_jsx(CheckmarkCircleIcon,{color:\"success\"}):/*#__PURE__*/_jsx(BlockIcon,{color:\"textDisabled\"})})]},row.rank);})})]})})]});};export default PrizesGrid;","map":{"version":3,"names":["React","useState","BlockIcon","Box","CheckmarkCircleIcon","Flex","MedalBronzeIcon","MedalGoldIcon","MedalPurpleIcon","MedalSilverIcon","MedalTealIcon","CrownIcon","Tab","TabMenu","Text","TeamPlayerIcon","TrophyGoldIcon","useTranslation","easterPrizes","Tiers","Td","BoldTd","StyledPrizeTable","jsx","_jsx","jsxs","_jsxs","COLOR_GOLD","COLOR_SILVER","COLOR_BRONZE","COLOR_PURPLE","COLOR_TEAL","tierStyleMap","GOLD","icon","label","text","color","SILVER","BRONZE","PURPLE","TEAL","getTotalAchievementPoints","achievements","Object","values","reduce","accum","achievement","PrizesGrid","tab","setTab","t","rows","handleItemClick","index","pt","children","activeIndex","onItemClick","keys","map","team","minWidth","overflowX","maxWidth","row","Icon","tier","champion","teamPlayer","rank","fontSize","bold","textTransform","concat","cakePrizeInUsd","toLocaleString","undefined","minimumFractionDigits","maximumFractionDigits","alignItems","flexWrap","justifyContent","width","mr","hasNft"],"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/views/TradingCompetition/components/PrizesInfo/PrizesGrid/index.tsx"],"sourcesContent":["import React, { useState } from 'react'\r\nimport {\r\n  BlockIcon,\r\n  Box,\r\n  CheckmarkCircleIcon,\r\n  Flex,\r\n  MedalBronzeIcon,\r\n  MedalGoldIcon,\r\n  MedalPurpleIcon,\r\n  MedalSilverIcon,\r\n  MedalTealIcon,\r\n  CrownIcon,\r\n  Tab,\r\n  TabMenu,\r\n  Text,\r\n  TeamPlayerIcon,\r\n  TrophyGoldIcon,\r\n} from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport easterPrizes, { Tiers, Rank } from 'config/constants/trading-competition/easter'\r\nimport { Td, BoldTd, StyledPrizeTable } from '../../StyledPrizeTable'\r\n\r\nconst COLOR_GOLD = '#FFBF33'\r\nconst COLOR_SILVER = '#C1C1C1'\r\nconst COLOR_BRONZE = '#E79559'\r\nconst COLOR_PURPLE = '#A57CFD'\r\nconst COLOR_TEAL = '#4CD2DD'\r\n\r\nconst tierStyleMap = {\r\n  [Tiers.GOLD]: {\r\n    icon: MedalGoldIcon,\r\n    label: {\r\n      text: 'Gold',\r\n    },\r\n    color: COLOR_GOLD,\r\n  },\r\n  [Tiers.SILVER]: {\r\n    icon: MedalSilverIcon,\r\n    label: {\r\n      text: 'Silver',\r\n    },\r\n    color: COLOR_SILVER,\r\n  },\r\n  [Tiers.BRONZE]: {\r\n    icon: MedalBronzeIcon,\r\n    label: {\r\n      text: 'Bronze',\r\n    },\r\n    color: COLOR_BRONZE,\r\n  },\r\n  [Tiers.SILVER]: {\r\n    icon: MedalSilverIcon,\r\n    label: {\r\n      text: 'Silver',\r\n    },\r\n    color: COLOR_SILVER,\r\n  },\r\n  [Tiers.PURPLE]: {\r\n    icon: MedalPurpleIcon,\r\n    label: {\r\n      text: 'Purple',\r\n    },\r\n    color: COLOR_PURPLE,\r\n  },\r\n  [Tiers.TEAL]: {\r\n    icon: MedalTealIcon,\r\n    label: {\r\n      text: 'Teal',\r\n    },\r\n    color: COLOR_TEAL,\r\n  },\r\n}\r\n\r\nconst getTotalAchievementPoints = (achievements: Rank['achievements']) => {\r\n  return Object.values(achievements).reduce((accum, achievement) => {\r\n    return achievement ? accum + achievement : accum\r\n  }, 0)\r\n}\r\n\r\nconst PrizesGrid = () => {\r\n  const [tab, setTab] = useState(0)\r\n  const { t } = useTranslation()\r\n  const rows = easterPrizes[tab + 1]\r\n\r\n  const handleItemClick = (index: number) => setTab(index)\r\n\r\n  return (\r\n    <Box pt=\"24px\">\r\n      <TabMenu activeIndex={tab} onItemClick={handleItemClick}>\r\n        {Object.keys(easterPrizes).map((team) => {\r\n          return <Tab key={team}>{t('#%team% Team', { team })}</Tab>\r\n        })}\r\n      </TabMenu>\r\n      <Box minWidth=\"288px\" overflowX=\"auto\" maxWidth=\"100%\">\r\n        <StyledPrizeTable>\r\n          <thead>\r\n            <tr>\r\n              <th>{t('Rank in team')}</th>\r\n              <th>{t('Tier')}</th>\r\n              <th>{t('CAKE Prizes (Split)')}</th>\r\n              <th>{t('Achievements')}</th>\r\n              <th>{t('NFT')}</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {rows.map((row) => {\r\n              const { icon: Icon, label, color } = tierStyleMap[row.tier]\r\n              const { champion, teamPlayer } = row.achievements\r\n\r\n              return (\r\n                <tr key={row.rank}>\r\n                  <BoldTd>{row.rank}</BoldTd>\r\n                  <Td>\r\n                    <Icon />\r\n                    <Text color={color} fontSize=\"12px\" bold textTransform=\"uppercase\">\r\n                      {t(label.text)}\r\n                    </Text>\r\n                  </Td>\r\n                  <BoldTd>\r\n                    {`$${row.cakePrizeInUsd.toLocaleString(undefined, {\r\n                      minimumFractionDigits: 0,\r\n                      maximumFractionDigits: 0,\r\n                    })}`}\r\n                  </BoldTd>\r\n                  <Td>\r\n                    <Flex alignItems=\"center\" flexWrap=\"wrap\" justifyContent=\"center\" width=\"100%\">\r\n                      {champion && <CrownIcon mr={[0, '4px']} />}\r\n                      {teamPlayer && <TeamPlayerIcon mr={[0, '4px']} />}\r\n                      <TrophyGoldIcon mr={[0, '4px']} />\r\n                      <Text fontSize=\"12px\" color=\"textSubtle\">\r\n                        {`+${getTotalAchievementPoints(row.achievements).toLocaleString(undefined, {\r\n                          minimumFractionDigits: 0,\r\n                          maximumFractionDigits: 0,\r\n                        })}`}\r\n                      </Text>\r\n                    </Flex>\r\n                  </Td>\r\n                  <Td>{row.hasNft ? <CheckmarkCircleIcon color=\"success\" /> : <BlockIcon color=\"textDisabled\" />}</Td>\r\n                </tr>\r\n              )\r\n            })}\r\n          </tbody>\r\n        </StyledPrizeTable>\r\n      </Box>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default PrizesGrid\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}