{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Devrim\\\\Documents\\\\swapUIforProspBlast\\\\src\\\\views\\\\Lottery\\\\components\\\\Countdown\\\\index.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Flex, Heading, Skeleton } from '@pancakeswap/uikit';\nimport getTimePeriods from 'utils/getTimePeriods';\nimport Timer from './Timer';\nimport useNextEventCountdown from '../../hooks/useNextEventCountdown';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Countdown = ({\n  nextEventTime,\n  preCountdownText,\n  postCountdownText\n}) => {\n  _s();\n  const secondsRemaining = useNextEventCountdown(nextEventTime);\n  const {\n    days,\n    hours,\n    minutes\n  } = getTimePeriods(secondsRemaining);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: secondsRemaining ? /*#__PURE__*/_jsxDEV(Flex, {\n      display: \"inline-flex\",\n      justifyContent: \"flex-end\",\n      alignItems: \"flex-end\",\n      children: [preCountdownText && /*#__PURE__*/_jsxDEV(Heading, {\n        mr: \"12px\",\n        color: \"#ffff\",\n        children: preCountdownText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Timer, {\n        minutes: minutes + 1 // We don't show seconds - so values from 0 - 59s should be shown as 1 min\n        ,\n        hours: hours,\n        days: days\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this), postCountdownText && /*#__PURE__*/_jsxDEV(Heading, {\n        color: \"#ffff\",\n        children: postCountdownText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Skeleton, {\n      height: \"41px\",\n      width: \"250px\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(Countdown, \"feps5JGza/V1XEiS6BRv1/f7Q7o=\", false, function () {\n  return [useNextEventCountdown];\n});\n_c = Countdown;\nexport default Countdown;\nvar _c;\n$RefreshReg$(_c, \"Countdown\");","map":{"version":3,"names":["React","Flex","Heading","Skeleton","getTimePeriods","Timer","useNextEventCountdown","jsxDEV","_jsxDEV","Fragment","_Fragment","Countdown","nextEventTime","preCountdownText","postCountdownText","_s","secondsRemaining","days","hours","minutes","children","display","justifyContent","alignItems","mr","color","fileName","_jsxFileName","lineNumber","columnNumber","height","width","_c","$RefreshReg$"],"sources":["C:/Users/Devrim/Documents/swapUIforProspBlast/src/views/Lottery/components/Countdown/index.tsx"],"sourcesContent":["import React from 'react'\r\nimport { Flex, Heading, Skeleton } from '@pancakeswap/uikit'\r\nimport getTimePeriods from 'utils/getTimePeriods'\r\nimport Timer from './Timer'\r\nimport useNextEventCountdown from '../../hooks/useNextEventCountdown'\r\n\r\ninterface CountdownProps {\r\n  nextEventTime: number\r\n  preCountdownText?: string\r\n  postCountdownText?: string\r\n}\r\n\r\nconst Countdown: React.FC<CountdownProps> = ({ nextEventTime, preCountdownText, postCountdownText }) => {\r\n  const secondsRemaining = useNextEventCountdown(nextEventTime)\r\n  const { days, hours, minutes } = getTimePeriods(secondsRemaining)\r\n\r\n  return (\r\n    <>\r\n      {secondsRemaining ? (\r\n        <Flex display=\"inline-flex\" justifyContent=\"flex-end\" alignItems=\"flex-end\">\r\n          {preCountdownText && (\r\n            <Heading mr=\"12px\" color=\"#ffff\">\r\n              {preCountdownText}\r\n            </Heading>\r\n          )}\r\n          <Timer\r\n            minutes={minutes + 1} // We don't show seconds - so values from 0 - 59s should be shown as 1 min\r\n            hours={hours}\r\n            days={days}\r\n          />\r\n          {postCountdownText && <Heading color=\"#ffff\">{postCountdownText}</Heading>}\r\n        </Flex>\r\n      ) : (\r\n        <Skeleton height=\"41px\" width=\"250px\" />\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Countdown\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,EAAEC,OAAO,EAAEC,QAAQ,QAAQ,oBAAoB;AAC5D,OAAOC,cAAc,MAAM,sBAAsB;AACjD,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,qBAAqB,MAAM,mCAAmC;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAQrE,MAAMC,SAAmC,GAAGA,CAAC;EAAEC,aAAa;EAAEC,gBAAgB;EAAEC;AAAkB,CAAC,KAAK;EAAAC,EAAA;EACtG,MAAMC,gBAAgB,GAAGV,qBAAqB,CAACM,aAAa,CAAC;EAC7D,MAAM;IAAEK,IAAI;IAAEC,KAAK;IAAEC;EAAQ,CAAC,GAAGf,cAAc,CAACY,gBAAgB,CAAC;EAEjE,oBACER,OAAA,CAAAE,SAAA;IAAAU,QAAA,EACGJ,gBAAgB,gBACfR,OAAA,CAACP,IAAI;MAACoB,OAAO,EAAC,aAAa;MAACC,cAAc,EAAC,UAAU;MAACC,UAAU,EAAC,UAAU;MAAAH,QAAA,GACxEP,gBAAgB,iBACfL,OAAA,CAACN,OAAO;QAACsB,EAAE,EAAC,MAAM;QAACC,KAAK,EAAC,OAAO;QAAAL,QAAA,EAC7BP;MAAgB;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACV,CACV,eACDrB,OAAA,CAACH,KAAK;QACJc,OAAO,EAAEA,OAAO,GAAG,CAAE,CAAC;QAAA;QACtBD,KAAK,EAAEA,KAAM;QACbD,IAAI,EAAEA;MAAK;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACZ,CAAC,EACDf,iBAAiB,iBAAIN,OAAA,CAACN,OAAO;QAACuB,KAAK,EAAC,OAAO;QAAAL,QAAA,EAAEN;MAAiB;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAU,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtE,CAAC,gBAEPrB,OAAA,CAACL,QAAQ;MAAC2B,MAAM,EAAC,MAAM;MAACC,KAAK,EAAC;IAAO;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EACxC,gBACD,CAAC;AAEP,CAAC;AAAAd,EAAA,CAzBKJ,SAAmC;EAAA,QACdL,qBAAqB;AAAA;AAAA0B,EAAA,GAD1CrB,SAAmC;AA2BzC,eAAeA,SAAS;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}