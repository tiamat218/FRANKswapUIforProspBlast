{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isConstantTime = exports.isNode = exports.isBrowser = exports.assert = void 0;\nconst env_1 = require(\"./env\");\nfunction assert(condition, message) {\n  if (!condition) {\n    throw new Error(message || 'Assertion failed');\n  }\n}\nexports.assert = assert;\nfunction isBrowser() {\n  return !!env_1.getBrowerCrypto() && !!env_1.getSubtleCrypto();\n}\nexports.isBrowser = isBrowser;\nfunction isNode() {\n  return typeof process !== 'undefined' && typeof process.versions !== 'undefined' && typeof process.versions.node !== 'undefined';\n}\nexports.isNode = isNode;\nfunction isConstantTime(arr1, arr2) {\n  if (arr1.length !== arr2.length) {\n    return false;\n  }\n  let res = 0;\n  for (let i = 0; i < arr1.length; i++) {\n    res |= arr1[i] ^ arr2[i];\n  }\n  return res === 0;\n}\nexports.isConstantTime = isConstantTime;","map":{"version":3,"names":["env_1","require","assert","condition","message","Error","exports","isBrowser","getBrowerCrypto","getSubtleCrypto","isNode","process","versions","node","isConstantTime","arr1","arr2","length","res","i"],"sources":["../../../src/helpers/validators.ts"],"sourcesContent":[null],"mappings":";;;;;;AAAA,MAAAA,KAAA,GAAAC,OAAA;AAEA,SAAgBC,MAAMA,CAACC,SAAkB,EAAEC,OAAe;EACxD,IAAI,CAACD,SAAS,EAAE;IACd,MAAM,IAAIE,KAAK,CAACD,OAAO,IAAI,kBAAkB,CAAC;;AAElD;AAJAE,OAAA,CAAAJ,MAAA,GAAAA,MAAA;AAMA,SAAgBK,SAASA,CAAA;EACvB,OAAO,CAAC,CAACP,KAAA,CAAAQ,eAAe,EAAE,IAAI,CAAC,CAACR,KAAA,CAAAS,eAAe,EAAE;AACnD;AAFAH,OAAA,CAAAC,SAAA,GAAAA,SAAA;AAIA,SAAgBG,MAAMA,CAAA;EACpB,OACE,OAAOC,OAAO,KAAK,WAAW,IAC9B,OAAOA,OAAO,CAACC,QAAQ,KAAK,WAAW,IACvC,OAAOD,OAAO,CAACC,QAAQ,CAACC,IAAI,KAAK,WAAW;AAEhD;AANAP,OAAA,CAAAI,MAAA,GAAAA,MAAA;AAQA,SAAgBI,cAAcA,CAACC,IAAgB,EAAEC,IAAgB;EAC/D,IAAID,IAAI,CAACE,MAAM,KAAKD,IAAI,CAACC,MAAM,EAAE;IAC/B,OAAO,KAAK;;EAEd,IAAIC,GAAG,GAAG,CAAC;EACX,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,IAAI,CAACE,MAAM,EAAEE,CAAC,EAAE,EAAE;IACpCD,GAAG,IAAIH,IAAI,CAACI,CAAC,CAAC,GAAGH,IAAI,CAACG,CAAC,CAAC;;EAE1B,OAAOD,GAAG,KAAK,CAAC;AAClB;AATAZ,OAAA,CAAAQ,cAAA,GAAAA,cAAA","ignoreList":[]},"metadata":{},"sourceType":"script"}