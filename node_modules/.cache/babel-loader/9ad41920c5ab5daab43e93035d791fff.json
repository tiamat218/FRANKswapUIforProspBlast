{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Devrim\\\\Documents\\\\FRANKswapUIforProspBlast\\\\src\\\\views\\\\Profile\\\\components\\\\EditProfileModal\\\\PauseProfileView.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { AutoRenewIcon, Button, Checkbox, Flex, Text } from '@pancakeswap/uikit';\nimport { useTranslation } from 'contexts/Localization';\nimport useGetProfileCosts from 'views/Profile/hooks/useGetProfileCosts';\nimport { useAppDispatch } from 'state';\nimport { useProfile } from 'state/profile/hooks';\nimport { fetchProfile } from 'state/profile';\nimport useToast from 'hooks/useToast';\nimport { getBalanceNumber } from 'utils/formatBalance';\nimport { useProfile as useProfileContract } from 'hooks/useContract';\nimport { useWeb3React } from '@web3-react/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst PauseProfilePage = ({\n  onDismiss\n}) => {\n  _s();\n\n  const [isAcknowledged, setIsAcknowledged] = useState(false);\n  const [isConfirming, setIsConfirming] = useState(false);\n  const {\n    profile\n  } = useProfile();\n  const {\n    numberCakeToReactivate\n  } = useGetProfileCosts();\n  const {\n    t\n  } = useTranslation();\n  const pancakeProfileContract = useProfileContract();\n  const {\n    account\n  } = useWeb3React();\n  const {\n    toastSuccess,\n    toastError\n  } = useToast();\n  const dispatch = useAppDispatch();\n\n  const handleChange = () => setIsAcknowledged(!isAcknowledged);\n\n  const handleDeactivateProfile = async () => {\n    const tx = await pancakeProfileContract.pauseProfile();\n    setIsConfirming(true);\n    const receipt = await tx.wait();\n\n    if (receipt.status) {\n      // Re-fetch profile\n      await dispatch(fetchProfile(account));\n      toastSuccess(t('Profile Paused!'));\n      onDismiss();\n    } else {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'));\n      setIsConfirming(false);\n    }\n  };\n\n  if (!profile) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Text, {\n      as: \"p\",\n      color: \"failure\",\n      mb: \"24px\",\n      children: t('This will suspend your profile and send your Collectible back to your wallet')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Text, {\n      as: \"p\",\n      color: \"textSubtle\",\n      mb: \"24px\",\n      children: t(\"While your profile is suspended, you won't be able to earn points, but your achievements and points will stay associated with your profile\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Text, {\n      as: \"p\",\n      color: \"textSubtle\",\n      mb: \"24px\",\n      children: t('Cost to reactivate in the future: %cost% CAKE', {\n        cost: getBalanceNumber(numberCakeToReactivate)\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"acknowledgement\",\n      style: {\n        cursor: 'pointer',\n        display: 'block',\n        marginBottom: '24px'\n      },\n      children: /*#__PURE__*/_jsxDEV(Flex, {\n        alignItems: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n          id: \"acknowledgement\",\n          checked: isAcknowledged,\n          onChange: handleChange,\n          scale: \"sm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          ml: \"8px\",\n          children: t('I understand')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      width: \"100%\",\n      isLoading: isConfirming,\n      endIcon: isConfirming ? /*#__PURE__*/_jsxDEV(AutoRenewIcon, {\n        spin: true,\n        color: \"currentColor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 33\n      }, this) : null,\n      disabled: !isAcknowledged || isConfirming,\n      onClick: handleDeactivateProfile,\n      mb: \"8px\",\n      children: t('Confirm')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"text\",\n      width: \"100%\",\n      onClick: onDismiss,\n      children: t('Close Window')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(PauseProfilePage, \"hOSCp9EmCHAUlZtig//RobKS48Y=\", false, function () {\n  return [useProfile, useGetProfileCosts, useTranslation, useProfileContract, useWeb3React, useToast, useAppDispatch];\n});\n\n_c = PauseProfilePage;\nexport default PauseProfilePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"PauseProfilePage\");","map":{"version":3,"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/views/Profile/components/EditProfileModal/PauseProfileView.tsx"],"names":["React","useState","AutoRenewIcon","Button","Checkbox","Flex","Text","useTranslation","useGetProfileCosts","useAppDispatch","useProfile","fetchProfile","useToast","getBalanceNumber","useProfileContract","useWeb3React","PauseProfilePage","onDismiss","isAcknowledged","setIsAcknowledged","isConfirming","setIsConfirming","profile","numberCakeToReactivate","t","pancakeProfileContract","account","toastSuccess","toastError","dispatch","handleChange","handleDeactivateProfile","tx","pauseProfile","receipt","wait","status","cost","cursor","display","marginBottom"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport { AutoRenewIcon, Button, Checkbox, Flex, InjectedModalProps, Text } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useGetProfileCosts from 'views/Profile/hooks/useGetProfileCosts'\r\nimport { useAppDispatch } from 'state'\r\nimport { useProfile } from 'state/profile/hooks'\r\nimport { fetchProfile } from 'state/profile'\r\nimport useToast from 'hooks/useToast'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { useProfile as useProfileContract } from 'hooks/useContract'\r\nimport { useWeb3React } from '@web3-react/core'\r\n\r\ntype PauseProfilePageProps = InjectedModalProps\r\n\r\nconst PauseProfilePage: React.FC<PauseProfilePageProps> = ({ onDismiss }) => {\r\n  const [isAcknowledged, setIsAcknowledged] = useState(false)\r\n  const [isConfirming, setIsConfirming] = useState(false)\r\n  const { profile } = useProfile()\r\n  const { numberCakeToReactivate } = useGetProfileCosts()\r\n  const { t } = useTranslation()\r\n  const pancakeProfileContract = useProfileContract()\r\n  const { account } = useWeb3React()\r\n  const { toastSuccess, toastError } = useToast()\r\n  const dispatch = useAppDispatch()\r\n\r\n  const handleChange = () => setIsAcknowledged(!isAcknowledged)\r\n\r\n  const handleDeactivateProfile = async () => {\r\n    const tx = await pancakeProfileContract.pauseProfile()\r\n    setIsConfirming(true)\r\n    const receipt = await tx.wait()\r\n    if (receipt.status) {\r\n      // Re-fetch profile\r\n      await dispatch(fetchProfile(account))\r\n      toastSuccess(t('Profile Paused!'))\r\n      onDismiss()\r\n    } else {\r\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\r\n      setIsConfirming(false)\r\n    }\r\n  }\r\n\r\n  if (!profile) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Text as=\"p\" color=\"failure\" mb=\"24px\">\r\n        {t('This will suspend your profile and send your Collectible back to your wallet')}\r\n      </Text>\r\n      <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\r\n        {t(\r\n          \"While your profile is suspended, you won't be able to earn points, but your achievements and points will stay associated with your profile\",\r\n        )}\r\n      </Text>\r\n      <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\r\n        {t('Cost to reactivate in the future: %cost% CAKE', { cost: getBalanceNumber(numberCakeToReactivate) })}\r\n      </Text>\r\n      <label htmlFor=\"acknowledgement\" style={{ cursor: 'pointer', display: 'block', marginBottom: '24px' }}>\r\n        <Flex alignItems=\"center\">\r\n          <Checkbox id=\"acknowledgement\" checked={isAcknowledged} onChange={handleChange} scale=\"sm\" />\r\n          <Text ml=\"8px\">{t('I understand')}</Text>\r\n        </Flex>\r\n      </label>\r\n      <Button\r\n        width=\"100%\"\r\n        isLoading={isConfirming}\r\n        endIcon={isConfirming ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\r\n        disabled={!isAcknowledged || isConfirming}\r\n        onClick={handleDeactivateProfile}\r\n        mb=\"8px\"\r\n      >\r\n        {t('Confirm')}\r\n      </Button>\r\n      <Button variant=\"text\" width=\"100%\" onClick={onDismiss}>\r\n        {t('Close Window')}\r\n      </Button>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PauseProfilePage\r\n"]},"metadata":{},"sourceType":"module"}