{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\frkul\\\\Documents\\\\swapUI_pancake-frontend\\\\src\\\\views\\\\Pools\\\\components\\\\PoolCard\\\\CardActions\\\\StakeActions.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Flex, Text, Button, IconButton, AddIcon, MinusIcon, useModal, Skeleton, useTooltip } from '@pancakeswap/uikit';\nimport { useTranslation } from 'contexts/Localization';\nimport { getBalanceNumber } from 'utils/formatBalance';\nimport Balance from 'components/Balance';\nimport NotEnoughTokensModal from '../Modals/NotEnoughTokensModal';\nimport StakeModal from '../Modals/StakeModal';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst StakeAction = ({\n  pool,\n  stakingTokenBalance,\n  stakedBalance,\n  isBnbPool,\n  isStaked,\n  isLoading = false\n}) => {\n  _s();\n  const {\n    stakingToken,\n    stakingTokenPrice,\n    stakingLimit,\n    isFinished,\n    userData\n  } = pool;\n  const {\n    t\n  } = useTranslation();\n  const stakedTokenBalance = getBalanceNumber(stakedBalance, stakingToken.decimals);\n  const stakedTokenDollarBalance = getBalanceNumber(stakedBalance.multipliedBy(stakingTokenPrice), stakingToken.decimals);\n  const [onPresentTokenRequired] = useModal( /*#__PURE__*/_jsxDEV(NotEnoughTokensModal, {\n    tokenSymbol: stakingToken.symbol\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 45\n  }, this));\n  const [onPresentStake] = useModal( /*#__PURE__*/_jsxDEV(StakeModal, {\n    isBnbPool: isBnbPool,\n    pool: pool,\n    stakingTokenBalance: stakingTokenBalance,\n    stakingTokenPrice: stakingTokenPrice\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this));\n  const [onPresentUnstake] = useModal( /*#__PURE__*/_jsxDEV(StakeModal, {\n    stakingTokenBalance: stakingTokenBalance,\n    isBnbPool: isBnbPool,\n    pool: pool,\n    stakingTokenPrice: stakingTokenPrice,\n    isRemovingStake: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this));\n  const {\n    targetRef,\n    tooltip,\n    tooltipVisible\n  } = useTooltip(t('Youâ€™ve already staked the maximum amount you can stake in this pool!'), {\n    placement: 'bottom'\n  });\n  const reachStakingLimit = stakingLimit.gt(0) && userData.stakedBalance.gte(stakingLimit);\n  const renderStakeAction = () => {\n    return isStaked ? /*#__PURE__*/_jsxDEV(Flex, {\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(Flex, {\n        flexDirection: \"column\",\n        children: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Balance, {\n            bold: true,\n            fontSize: \"20px\",\n            decimals: 3,\n            value: stakedTokenBalance\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), stakingTokenPrice !== 0 && /*#__PURE__*/_jsxDEV(Text, {\n            fontSize: \"12px\",\n            color: \"textSubtle\",\n            children: /*#__PURE__*/_jsxDEV(Balance, {\n              fontSize: \"12px\",\n              color: \"textSubtle\",\n              decimals: 2,\n              value: stakedTokenDollarBalance,\n              prefix: \"~\",\n              unit: \" USD\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          variant: \"secondary\",\n          onClick: onPresentUnstake,\n          mr: \"6px\",\n          children: /*#__PURE__*/_jsxDEV(MinusIcon, {\n            color: \"primary\",\n            width: \"24px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), reachStakingLimit ? /*#__PURE__*/_jsxDEV(\"span\", {\n          ref: targetRef,\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            variant: \"secondary\",\n            disabled: true,\n            children: /*#__PURE__*/_jsxDEV(AddIcon, {\n              color: \"textDisabled\",\n              width: \"24px\",\n              height: \"24px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(IconButton, {\n          variant: \"secondary\",\n          onClick: stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired,\n          disabled: isFinished,\n          children: /*#__PURE__*/_jsxDEV(AddIcon, {\n            color: \"primary\",\n            width: \"24px\",\n            height: \"24px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), tooltipVisible && tooltip]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(Button, {\n      disabled: isFinished,\n      onClick: stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired,\n      children: t('Stake')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    flexDirection: \"column\",\n    children: isLoading ? /*#__PURE__*/_jsxDEV(Skeleton, {\n      width: \"100%\",\n      height: \"52px\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 52\n    }, this) : renderStakeAction()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 10\n  }, this);\n};\n_s(StakeAction, \"MESHHOSVv0yaZVMPryU+igdHMGA=\", false, function () {\n  return [useTranslation, useModal, useModal, useModal, useTooltip];\n});\n_c = StakeAction;\nexport default StakeAction;\nvar _c;\n$RefreshReg$(_c, \"StakeAction\");","map":{"version":3,"names":["React","Flex","Text","Button","IconButton","AddIcon","MinusIcon","useModal","Skeleton","useTooltip","useTranslation","getBalanceNumber","Balance","NotEnoughTokensModal","StakeModal","jsxDEV","_jsxDEV","Fragment","_Fragment","StakeAction","pool","stakingTokenBalance","stakedBalance","isBnbPool","isStaked","isLoading","_s","stakingToken","stakingTokenPrice","stakingLimit","isFinished","userData","t","stakedTokenBalance","decimals","stakedTokenDollarBalance","multipliedBy","onPresentTokenRequired","tokenSymbol","symbol","fileName","_jsxFileName","lineNumber","columnNumber","onPresentStake","onPresentUnstake","isRemovingStake","targetRef","tooltip","tooltipVisible","placement","reachStakingLimit","gt","gte","renderStakeAction","justifyContent","alignItems","children","flexDirection","bold","fontSize","value","color","prefix","unit","variant","onClick","mr","width","ref","disabled","height","_c","$RefreshReg$"],"sources":["C:/Users/frkul/Documents/swapUI_pancake-frontend/src/views/Pools/components/PoolCard/CardActions/StakeActions.tsx"],"sourcesContent":["import React from 'react'\r\nimport { Flex, Text, Button, IconButton, AddIcon, MinusIcon, useModal, Skeleton, useTooltip } from '@pancakeswap/uikit'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { Pool } from 'state/types'\r\nimport Balance from 'components/Balance'\r\nimport NotEnoughTokensModal from '../Modals/NotEnoughTokensModal'\r\nimport StakeModal from '../Modals/StakeModal'\r\n\r\ninterface StakeActionsProps {\r\n  pool: Pool\r\n  stakingTokenBalance: BigNumber\r\n  stakedBalance: BigNumber\r\n  isBnbPool: boolean\r\n  isStaked: ConstrainBoolean\r\n  isLoading?: boolean\r\n}\r\n\r\nconst StakeAction: React.FC<StakeActionsProps> = ({\r\n  pool,\r\n  stakingTokenBalance,\r\n  stakedBalance,\r\n  isBnbPool,\r\n  isStaked,\r\n  isLoading = false,\r\n}) => {\r\n  const { stakingToken, stakingTokenPrice, stakingLimit, isFinished, userData } = pool\r\n  const { t } = useTranslation()\r\n  const stakedTokenBalance = getBalanceNumber(stakedBalance, stakingToken.decimals)\r\n  const stakedTokenDollarBalance = getBalanceNumber(\r\n    stakedBalance.multipliedBy(stakingTokenPrice),\r\n    stakingToken.decimals,\r\n  )\r\n\r\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\r\n\r\n  const [onPresentStake] = useModal(\r\n    <StakeModal\r\n      isBnbPool={isBnbPool}\r\n      pool={pool}\r\n      stakingTokenBalance={stakingTokenBalance}\r\n      stakingTokenPrice={stakingTokenPrice}\r\n    />,\r\n  )\r\n\r\n  const [onPresentUnstake] = useModal(\r\n    <StakeModal\r\n      stakingTokenBalance={stakingTokenBalance}\r\n      isBnbPool={isBnbPool}\r\n      pool={pool}\r\n      stakingTokenPrice={stakingTokenPrice}\r\n      isRemovingStake\r\n    />,\r\n  )\r\n\r\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\r\n    t('Youâ€™ve already staked the maximum amount you can stake in this pool!'),\r\n    { placement: 'bottom' },\r\n  )\r\n\r\n  const reachStakingLimit = stakingLimit.gt(0) && userData.stakedBalance.gte(stakingLimit)\r\n\r\n  const renderStakeAction = () => {\r\n    return isStaked ? (\r\n      <Flex justifyContent=\"space-between\" alignItems=\"center\">\r\n        <Flex flexDirection=\"column\">\r\n          <>\r\n            <Balance bold fontSize=\"20px\" decimals={3} value={stakedTokenBalance} />\r\n            {stakingTokenPrice !== 0 && (\r\n              <Text fontSize=\"12px\" color=\"textSubtle\">\r\n                <Balance\r\n                  fontSize=\"12px\"\r\n                  color=\"textSubtle\"\r\n                  decimals={2}\r\n                  value={stakedTokenDollarBalance}\r\n                  prefix=\"~\"\r\n                  unit=\" USD\"\r\n                />\r\n              </Text>\r\n            )}\r\n          </>\r\n        </Flex>\r\n        <Flex>\r\n          <IconButton variant=\"secondary\" onClick={onPresentUnstake} mr=\"6px\">\r\n            <MinusIcon color=\"primary\" width=\"24px\" />\r\n          </IconButton>\r\n          {reachStakingLimit ? (\r\n            <span ref={targetRef}>\r\n              <IconButton variant=\"secondary\" disabled>\r\n                <AddIcon color=\"textDisabled\" width=\"24px\" height=\"24px\" />\r\n              </IconButton>\r\n            </span>\r\n          ) : (\r\n            <IconButton\r\n              variant=\"secondary\"\r\n              onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}\r\n              disabled={isFinished}\r\n            >\r\n              <AddIcon color=\"primary\" width=\"24px\" height=\"24px\" />\r\n            </IconButton>\r\n          )}\r\n        </Flex>\r\n        {tooltipVisible && tooltip}\r\n      </Flex>\r\n    ) : (\r\n      <Button disabled={isFinished} onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>\r\n        {t('Stake')}\r\n      </Button>\r\n    )\r\n  }\r\n\r\n  return <Flex flexDirection=\"column\">{isLoading ? <Skeleton width=\"100%\" height=\"52px\" /> : renderStakeAction()}</Flex>\r\n}\r\n\r\nexport default StakeAction\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}