{"ast":null,"code":"import React,{createContext,useState}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";export const SwiperContext=/*#__PURE__*/createContext(undefined);const SwiperProvider=_ref=>{let{children}=_ref;const[swiper,setSwiper]=useState(null);const destroySwiper=()=>{if(swiper){swiper.destroy();setSwiper(null);}};return/*#__PURE__*/_jsx(SwiperContext.Provider,{value:{swiper,setSwiper,destroySwiper},children:children});};export default SwiperProvider;","map":{"version":3,"names":["React","createContext","useState","jsx","_jsx","SwiperContext","undefined","SwiperProvider","_ref","children","swiper","setSwiper","destroySwiper","destroy","Provider","value"],"sources":["C:/Users/frkul/Documents/swapUI_pancake-frontend/src/views/Predictions/context/SwiperProvider.tsx"],"sourcesContent":["import React, { createContext, Dispatch, useState } from 'react'\r\nimport SwiperCore from 'swiper'\r\n\r\ninterface Context {\r\n  swiper: SwiperCore\r\n  setSwiper: Dispatch<React.SetStateAction<SwiperCore>>\r\n  destroySwiper: () => void\r\n}\r\n\r\nexport const SwiperContext = createContext<Context>(undefined)\r\n\r\nconst SwiperProvider = ({ children }) => {\r\n  const [swiper, setSwiper] = useState<SwiperCore>(null)\r\n\r\n  const destroySwiper = () => {\r\n    if (swiper) {\r\n      swiper.destroy()\r\n      setSwiper(null)\r\n    }\r\n  }\r\n\r\n  return <SwiperContext.Provider value={{ swiper, setSwiper, destroySwiper }}>{children}</SwiperContext.Provider>\r\n}\r\n\r\nexport default SwiperProvider\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAYC,QAAQ,KAAQ,OAAO,QAAAC,GAAA,IAAAC,IAAA,yBAShE,MAAO,MAAM,CAAAC,aAAa,cAAGJ,aAAa,CAAUK,SAAS,CAAC,CAE9D,KAAM,CAAAC,cAAc,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CAClC,KAAM,CAACE,MAAM,CAAEC,SAAS,CAAC,CAAGT,QAAQ,CAAa,IAAI,CAAC,CAEtD,KAAM,CAAAU,aAAa,CAAGA,CAAA,GAAM,CAC1B,GAAIF,MAAM,CAAE,CACVA,MAAM,CAACG,OAAO,CAAC,CAAC,CAChBF,SAAS,CAAC,IAAI,CAAC,CACjB,CACF,CAAC,CAED,mBAAOP,IAAA,CAACC,aAAa,CAACS,QAAQ,EAACC,KAAK,CAAE,CAAEL,MAAM,CAAEC,SAAS,CAAEC,aAAc,CAAE,CAAAH,QAAA,CAAEA,QAAQ,CAAyB,CAAC,CACjH,CAAC,CAED,cAAe,CAAAF,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module"}