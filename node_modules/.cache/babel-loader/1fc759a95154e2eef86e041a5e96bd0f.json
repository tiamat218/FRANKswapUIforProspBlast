{"ast":null,"code":"import{useEffect,useState,useCallback}from'react';import BigNumber from'bignumber.js';import{BSC_BLOCK_TIME}from'config';import{useBlock}from'state/block/hooks';import{useLpTokenPrice}from'state/farms/hooks';import useRefresh from'hooks/useRefresh';import{multicallv2}from'utils/multicall';import ifoV2Abi from'config/abi/ifoV2.json';import{BIG_ZERO}from'utils/bigNumber';import{getStatus}from'../helpers';// https://github.com/pancakeswap/pancake-contracts/blob/master/projects/ifo/contracts/IFOV2.sol#L431\n// 1,000,000,000 / 100\nconst TAX_PRECISION=10000000000;const formatPool=pool=>({raisingAmountPool:pool?new BigNumber(pool[0].toString()):BIG_ZERO,offeringAmountPool:pool?new BigNumber(pool[1].toString()):BIG_ZERO,limitPerUserInLP:pool?new BigNumber(pool[2].toString()):BIG_ZERO,hasTax:pool?pool[3]:false,totalAmountPool:pool?new BigNumber(pool[4].toString()):BIG_ZERO,sumTaxesOverflow:pool?new BigNumber(pool[5].toString()):BIG_ZERO});/**\r\n * Gets all public data of an IFO\r\n */const useGetPublicIfoData=ifo=>{const{address,releaseBlockNumber}=ifo;const lpTokenPriceInUsd=useLpTokenPrice(ifo.currency.symbol);const{fastRefresh}=useRefresh();const[state,setState]=useState({status:'idle',blocksRemaining:0,secondsUntilStart:0,progress:5,secondsUntilEnd:0,poolBasic:{raisingAmountPool:BIG_ZERO,offeringAmountPool:BIG_ZERO,limitPerUserInLP:BIG_ZERO,taxRate:0,totalAmountPool:BIG_ZERO,sumTaxesOverflow:BIG_ZERO},poolUnlimited:{raisingAmountPool:BIG_ZERO,offeringAmountPool:BIG_ZERO,limitPerUserInLP:BIG_ZERO,taxRate:0,totalAmountPool:BIG_ZERO,sumTaxesOverflow:BIG_ZERO},startBlockNum:0,endBlockNum:0,numberPoints:0});const{currentBlock}=useBlock();const fetchIfoData=useCallback(async()=>{const ifoCalls=[{address,name:'startBlock'},{address,name:'endBlock'},{address,name:'viewPoolInformation',params:[0]},{address,name:'viewPoolInformation',params:[1]},{address,name:'viewPoolTaxRateOverflow',params:[1]},{address,name:'numberPoints'}];const[startBlock,endBlock,poolBasic,poolUnlimited,taxRate,numberPoints]=await multicallv2(ifoV2Abi,ifoCalls);const poolBasicFormatted=formatPool(poolBasic);const poolUnlimitedFormatted=formatPool(poolUnlimited);const startBlockNum=startBlock?startBlock[0].toNumber():0;const endBlockNum=endBlock?endBlock[0].toNumber():0;const taxRateNum=taxRate?taxRate[0].div(TAX_PRECISION).toNumber():0;const status=getStatus(currentBlock,startBlockNum,endBlockNum);const totalBlocks=endBlockNum-startBlockNum;const blocksRemaining=endBlockNum-currentBlock;// Calculate the total progress until finished or until start\nconst progress=currentBlock>startBlockNum?(currentBlock-startBlockNum)/totalBlocks*100:(currentBlock-releaseBlockNumber)/(startBlockNum-releaseBlockNumber)*100;setState(prev=>({...prev,secondsUntilEnd:blocksRemaining*BSC_BLOCK_TIME,secondsUntilStart:(startBlockNum-currentBlock)*BSC_BLOCK_TIME,poolBasic:{...poolBasicFormatted,taxRate:0},poolUnlimited:{...poolUnlimitedFormatted,taxRate:taxRateNum},status,progress,blocksRemaining,startBlockNum,endBlockNum,numberPoints:numberPoints?numberPoints[0].toNumber():0}));},[address,currentBlock,releaseBlockNumber]);useEffect(()=>{fetchIfoData();},[fetchIfoData,fastRefresh]);return{...state,currencyPriceInUSD:lpTokenPriceInUsd,fetchIfoData};};export default useGetPublicIfoData;","map":{"version":3,"names":["useEffect","useState","useCallback","BigNumber","BSC_BLOCK_TIME","useBlock","useLpTokenPrice","useRefresh","multicallv2","ifoV2Abi","BIG_ZERO","getStatus","TAX_PRECISION","formatPool","pool","raisingAmountPool","toString","offeringAmountPool","limitPerUserInLP","hasTax","totalAmountPool","sumTaxesOverflow","useGetPublicIfoData","ifo","address","releaseBlockNumber","lpTokenPriceInUsd","currency","symbol","fastRefresh","state","setState","status","blocksRemaining","secondsUntilStart","progress","secondsUntilEnd","poolBasic","taxRate","poolUnlimited","startBlockNum","endBlockNum","numberPoints","currentBlock","fetchIfoData","ifoCalls","name","params","startBlock","endBlock","poolBasicFormatted","poolUnlimitedFormatted","toNumber","taxRateNum","div","totalBlocks","prev","currencyPriceInUSD"],"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/views/Ifos/hooks/v2/useGetPublicIfoData.ts"],"sourcesContent":["import { useEffect, useState, useCallback } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { BSC_BLOCK_TIME } from 'config'\r\nimport { Ifo, IfoStatus } from 'config/constants/types'\r\nimport { useBlock } from 'state/block/hooks'\r\nimport { useLpTokenPrice } from 'state/farms/hooks'\r\nimport useRefresh from 'hooks/useRefresh'\r\nimport { multicallv2 } from 'utils/multicall'\r\nimport ifoV2Abi from 'config/abi/ifoV2.json'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\nimport { PublicIfoData } from '../../types'\r\nimport { getStatus } from '../helpers'\r\n\r\n// https://github.com/pancakeswap/pancake-contracts/blob/master/projects/ifo/contracts/IFOV2.sol#L431\r\n// 1,000,000,000 / 100\r\nconst TAX_PRECISION = 10000000000\r\n\r\nconst formatPool = (pool) => ({\r\n  raisingAmountPool: pool ? new BigNumber(pool[0].toString()) : BIG_ZERO,\r\n  offeringAmountPool: pool ? new BigNumber(pool[1].toString()) : BIG_ZERO,\r\n  limitPerUserInLP: pool ? new BigNumber(pool[2].toString()) : BIG_ZERO,\r\n  hasTax: pool ? pool[3] : false,\r\n  totalAmountPool: pool ? new BigNumber(pool[4].toString()) : BIG_ZERO,\r\n  sumTaxesOverflow: pool ? new BigNumber(pool[5].toString()) : BIG_ZERO,\r\n})\r\n\r\n/**\r\n * Gets all public data of an IFO\r\n */\r\nconst useGetPublicIfoData = (ifo: Ifo): PublicIfoData => {\r\n  const { address, releaseBlockNumber } = ifo\r\n  const lpTokenPriceInUsd = useLpTokenPrice(ifo.currency.symbol)\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  const [state, setState] = useState({\r\n    status: 'idle' as IfoStatus,\r\n    blocksRemaining: 0,\r\n    secondsUntilStart: 0,\r\n    progress: 5,\r\n    secondsUntilEnd: 0,\r\n    poolBasic: {\r\n      raisingAmountPool: BIG_ZERO,\r\n      offeringAmountPool: BIG_ZERO,\r\n      limitPerUserInLP: BIG_ZERO,\r\n      taxRate: 0,\r\n      totalAmountPool: BIG_ZERO,\r\n      sumTaxesOverflow: BIG_ZERO,\r\n    },\r\n    poolUnlimited: {\r\n      raisingAmountPool: BIG_ZERO,\r\n      offeringAmountPool: BIG_ZERO,\r\n      limitPerUserInLP: BIG_ZERO,\r\n      taxRate: 0,\r\n      totalAmountPool: BIG_ZERO,\r\n      sumTaxesOverflow: BIG_ZERO,\r\n    },\r\n    startBlockNum: 0,\r\n    endBlockNum: 0,\r\n    numberPoints: 0,\r\n  })\r\n  const { currentBlock } = useBlock()\r\n\r\n  const fetchIfoData = useCallback(async () => {\r\n    const ifoCalls = [\r\n      {\r\n        address,\r\n        name: 'startBlock',\r\n      },\r\n      {\r\n        address,\r\n        name: 'endBlock',\r\n      },\r\n      {\r\n        address,\r\n        name: 'viewPoolInformation',\r\n        params: [0],\r\n      },\r\n      {\r\n        address,\r\n        name: 'viewPoolInformation',\r\n        params: [1],\r\n      },\r\n      {\r\n        address,\r\n        name: 'viewPoolTaxRateOverflow',\r\n        params: [1],\r\n      },\r\n      {\r\n        address,\r\n        name: 'numberPoints',\r\n      },\r\n    ]\r\n\r\n    const [startBlock, endBlock, poolBasic, poolUnlimited, taxRate, numberPoints] = await multicallv2(\r\n      ifoV2Abi,\r\n      ifoCalls,\r\n    )\r\n\r\n    const poolBasicFormatted = formatPool(poolBasic)\r\n    const poolUnlimitedFormatted = formatPool(poolUnlimited)\r\n\r\n    const startBlockNum = startBlock ? startBlock[0].toNumber() : 0\r\n    const endBlockNum = endBlock ? endBlock[0].toNumber() : 0\r\n    const taxRateNum = taxRate ? taxRate[0].div(TAX_PRECISION).toNumber() : 0\r\n\r\n    const status = getStatus(currentBlock, startBlockNum, endBlockNum)\r\n    const totalBlocks = endBlockNum - startBlockNum\r\n    const blocksRemaining = endBlockNum - currentBlock\r\n\r\n    // Calculate the total progress until finished or until start\r\n    const progress =\r\n      currentBlock > startBlockNum\r\n        ? ((currentBlock - startBlockNum) / totalBlocks) * 100\r\n        : ((currentBlock - releaseBlockNumber) / (startBlockNum - releaseBlockNumber)) * 100\r\n\r\n    setState((prev) => ({\r\n      ...prev,\r\n      secondsUntilEnd: blocksRemaining * BSC_BLOCK_TIME,\r\n      secondsUntilStart: (startBlockNum - currentBlock) * BSC_BLOCK_TIME,\r\n      poolBasic: { ...poolBasicFormatted, taxRate: 0 },\r\n      poolUnlimited: { ...poolUnlimitedFormatted, taxRate: taxRateNum },\r\n      status,\r\n      progress,\r\n      blocksRemaining,\r\n      startBlockNum,\r\n      endBlockNum,\r\n      numberPoints: numberPoints ? numberPoints[0].toNumber() : 0,\r\n    }))\r\n  }, [address, currentBlock, releaseBlockNumber])\r\n\r\n  useEffect(() => {\r\n    fetchIfoData()\r\n  }, [fetchIfoData, fastRefresh])\r\n\r\n  return { ...state, currencyPriceInUSD: lpTokenPriceInUsd, fetchIfoData }\r\n}\r\n\r\nexport default useGetPublicIfoData\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}