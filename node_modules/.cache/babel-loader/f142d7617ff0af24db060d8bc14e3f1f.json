{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Devrim\\\\Documents\\\\FRANKswapUIforProspBlast\\\\src\\\\views\\\\Voting\\\\components\\\\Proposal\\\\VoteRow.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport BigNumber from 'bignumber.js';\nimport { Flex, LinkExternal, Text, Tag, CheckmarkCircleIcon } from '@pancakeswap/uikit';\nimport truncateWalletAddress from 'utils/truncateWalletAddress';\nimport { getBscScanLink } from 'utils';\nimport { useTranslation } from 'contexts/Localization';\nimport { IPFS_GATEWAY } from '../../config';\nimport TextEllipsis from '../TextEllipsis';\nimport Row, { AddressColumn, ChoiceColumn, VotingPowerColumn } from './Row';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst VoteRow = ({\n  vote,\n  isVoter\n}) => {\n  _s();\n\n  var _vote$metadata;\n\n  const {\n    t\n  } = useTranslation();\n  const hasVotingPower = !!((_vote$metadata = vote.metadata) === null || _vote$metadata === void 0 ? void 0 : _vote$metadata.votingPower);\n  const votingPower = hasVotingPower ? new BigNumber(vote.metadata.votingPower).toFormat(3) : '--';\n  return /*#__PURE__*/_jsxDEV(Row, {\n    children: [/*#__PURE__*/_jsxDEV(AddressColumn, {\n      children: /*#__PURE__*/_jsxDEV(Flex, {\n        alignItems: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(LinkExternal, {\n          href: getBscScanLink(vote.voter, 'address'),\n          children: truncateWalletAddress(vote.voter)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), isVoter && /*#__PURE__*/_jsxDEV(Tag, {\n          variant: \"success\",\n          outline: true,\n          ml: \"8px\",\n          children: [/*#__PURE__*/_jsxDEV(CheckmarkCircleIcon, {\n            mr: \"4px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 15\n          }, this), \" \", t('Voted')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChoiceColumn, {\n      children: /*#__PURE__*/_jsxDEV(TextEllipsis, {\n        title: vote.proposal.choices[vote.choice - 1],\n        children: vote.proposal.choices[vote.choice - 1]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(VotingPowerColumn, {\n      children: /*#__PURE__*/_jsxDEV(Flex, {\n        alignItems: \"center\",\n        justifyContent: \"end\",\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          title: vote.metadata.votingPower,\n          children: votingPower\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), hasVotingPower && /*#__PURE__*/_jsxDEV(LinkExternal, {\n          href: `${IPFS_GATEWAY}/${vote.id}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 30\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_s(VoteRow, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n\n_c = VoteRow;\nexport default VoteRow;\n\nvar _c;\n\n$RefreshReg$(_c, \"VoteRow\");","map":{"version":3,"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/views/Voting/components/Proposal/VoteRow.tsx"],"names":["React","BigNumber","Flex","LinkExternal","Text","Tag","CheckmarkCircleIcon","truncateWalletAddress","getBscScanLink","useTranslation","IPFS_GATEWAY","TextEllipsis","Row","AddressColumn","ChoiceColumn","VotingPowerColumn","VoteRow","vote","isVoter","t","hasVotingPower","metadata","votingPower","toFormat","voter","proposal","choices","choice","id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,SAASC,IAAT,EAAeC,YAAf,EAA6BC,IAA7B,EAAmCC,GAAnC,EAAwCC,mBAAxC,QAAmE,oBAAnE;AACA,OAAOC,qBAAP,MAAkC,6BAAlC;AACA,SAASC,cAAT,QAA+B,OAA/B;AACA,SAASC,cAAT,QAA+B,uBAA/B;AAEA,SAASC,YAAT,QAA6B,cAA7B;AACA,OAAOC,YAAP,MAAyB,iBAAzB;AACA,OAAOC,GAAP,IAAcC,aAAd,EAA6BC,YAA7B,EAA2CC,iBAA3C,QAAoE,OAApE;;;AAOA,MAAMC,OAA+B,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAAuB;AAAA;;AAAA;;AAC7D,QAAM;AAAEC,IAAAA;AAAF,MAAQV,cAAc,EAA5B;AACA,QAAMW,cAAc,GAAG,CAAC,oBAACH,IAAI,CAACI,QAAN,mDAAC,eAAeC,WAAhB,CAAxB;AACA,QAAMA,WAAW,GAAGF,cAAc,GAAG,IAAInB,SAAJ,CAAcgB,IAAI,CAACI,QAAL,CAAcC,WAA5B,EAAyCC,QAAzC,CAAkD,CAAlD,CAAH,GAA0D,IAA5F;AAEA,sBACE,QAAC,GAAD;AAAA,4BACE,QAAC,aAAD;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,UAAU,EAAC,QAAjB;AAAA,gCACE,QAAC,YAAD;AAAc,UAAA,IAAI,EAAEf,cAAc,CAACS,IAAI,CAACO,KAAN,EAAa,SAAb,CAAlC;AAAA,oBAA4DjB,qBAAqB,CAACU,IAAI,CAACO,KAAN;AAAjF;AAAA;AAAA;AAAA;AAAA,gBADF,EAEGN,OAAO,iBACN,QAAC,GAAD;AAAK,UAAA,OAAO,EAAC,SAAb;AAAuB,UAAA,OAAO,MAA9B;AAA+B,UAAA,EAAE,EAAC,KAAlC;AAAA,kCACE,QAAC,mBAAD;AAAqB,YAAA,EAAE,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA,kBADF,OACoCC,CAAC,CAAC,OAAD,CADrC;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAWE,QAAC,YAAD;AAAA,6BACE,QAAC,YAAD;AAAc,QAAA,KAAK,EAAEF,IAAI,CAACQ,QAAL,CAAcC,OAAd,CAAsBT,IAAI,CAACU,MAAL,GAAc,CAApC,CAArB;AAAA,kBACGV,IAAI,CAACQ,QAAL,CAAcC,OAAd,CAAsBT,IAAI,CAACU,MAAL,GAAc,CAApC;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAXF,eAgBE,QAAC,iBAAD;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,UAAU,EAAC,QAAjB;AAA0B,QAAA,cAAc,EAAC,KAAzC;AAAA,gCACE,QAAC,IAAD;AAAM,UAAA,KAAK,EAAEV,IAAI,CAACI,QAAL,CAAcC,WAA3B;AAAA,oBAAyCA;AAAzC;AAAA;AAAA;AAAA;AAAA,gBADF,EAEGF,cAAc,iBAAI,QAAC,YAAD;AAAc,UAAA,IAAI,EAAG,GAAEV,YAAa,IAAGO,IAAI,CAACW,EAAG;AAA/C;AAAA;AAAA;AAAA;AAAA,gBAFrB;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD,CA9BD;;GAAMZ,O;UACUP,c;;;KADVO,O;AAgCN,eAAeA,OAAf","sourcesContent":["import React from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Flex, LinkExternal, Text, Tag, CheckmarkCircleIcon } from '@pancakeswap/uikit'\r\nimport truncateWalletAddress from 'utils/truncateWalletAddress'\r\nimport { getBscScanLink } from 'utils'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { Vote } from 'state/types'\r\nimport { IPFS_GATEWAY } from '../../config'\r\nimport TextEllipsis from '../TextEllipsis'\r\nimport Row, { AddressColumn, ChoiceColumn, VotingPowerColumn } from './Row'\r\n\r\ninterface VoteRowProps {\r\n  vote: Vote\r\n  isVoter: boolean\r\n}\r\n\r\nconst VoteRow: React.FC<VoteRowProps> = ({ vote, isVoter }) => {\r\n  const { t } = useTranslation()\r\n  const hasVotingPower = !!vote.metadata?.votingPower\r\n  const votingPower = hasVotingPower ? new BigNumber(vote.metadata.votingPower).toFormat(3) : '--'\r\n\r\n  return (\r\n    <Row>\r\n      <AddressColumn>\r\n        <Flex alignItems=\"center\">\r\n          <LinkExternal href={getBscScanLink(vote.voter, 'address')}>{truncateWalletAddress(vote.voter)}</LinkExternal>\r\n          {isVoter && (\r\n            <Tag variant=\"success\" outline ml=\"8px\">\r\n              <CheckmarkCircleIcon mr=\"4px\" /> {t('Voted')}\r\n            </Tag>\r\n          )}\r\n        </Flex>\r\n      </AddressColumn>\r\n      <ChoiceColumn>\r\n        <TextEllipsis title={vote.proposal.choices[vote.choice - 1]}>\r\n          {vote.proposal.choices[vote.choice - 1]}\r\n        </TextEllipsis>\r\n      </ChoiceColumn>\r\n      <VotingPowerColumn>\r\n        <Flex alignItems=\"center\" justifyContent=\"end\">\r\n          <Text title={vote.metadata.votingPower}>{votingPower}</Text>\r\n          {hasVotingPower && <LinkExternal href={`${IPFS_GATEWAY}/${vote.id}`} />}\r\n        </Flex>\r\n      </VotingPowerColumn>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default VoteRow\r\n"]},"metadata":{},"sourceType":"module"}