{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Devrim\\\\Documents\\\\FRANKswapUIforProspBlast\\\\src\\\\components\\\\TransactionConfirmationModal\\\\index.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n\nimport React, { useCallback } from 'react';\nimport styled from 'styled-components';\nimport { Button, Text, ErrorIcon, ArrowUpIcon, MetamaskIcon, Flex, Box, Link, Spinner, Modal } from '@pancakeswap/uikit';\nimport { registerToken } from 'utils/wallet';\nimport { useTranslation } from 'contexts/Localization';\nimport useActiveWeb3React from 'hooks/useActiveWeb3React';\nimport { wrappedCurrency } from 'utils/wrappedCurrency';\nimport { RowFixed } from '../Layout/Row';\nimport { AutoColumn, ColumnCenter } from '../Layout/Column';\nimport { getBscScanLink } from '../../utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Wrapper = styled.div`\n  width: 100%;\n`;\n_c = Wrapper;\nconst Section = styled(AutoColumn)`\n  padding: 24px;\n`;\n_c2 = Section;\nconst ConfirmedIcon = styled(ColumnCenter)`\n  padding: 24px 0;\n`;\n_c3 = ConfirmedIcon;\n\nfunction ConfirmationPendingContent({\n  pendingText\n}) {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: [/*#__PURE__*/_jsxDEV(ConfirmedIcon, {\n      children: /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AutoColumn, {\n      gap: \"12px\",\n      justify: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        fontSize: \"20px\",\n        children: t('Waiting For Confirmation')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AutoColumn, {\n        gap: \"12px\",\n        justify: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          bold: true,\n          small: true,\n          textAlign: \"center\",\n          children: pendingText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        small: true,\n        color: \"textSubtle\",\n        textAlign: \"center\",\n        children: t('Confirm this transaction in your wallet')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ConfirmationPendingContent, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n\n_c4 = ConfirmationPendingContent;\n\nfunction TransactionSubmittedContent({\n  onDismiss,\n  chainId,\n  hash,\n  currencyToAdd\n}) {\n  _s2();\n\n  var _library$provider;\n\n  const {\n    library\n  } = useActiveWeb3React();\n  const {\n    t\n  } = useTranslation();\n  const token = wrappedCurrency(currencyToAdd, chainId);\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: /*#__PURE__*/_jsxDEV(Section, {\n      children: [/*#__PURE__*/_jsxDEV(ConfirmedIcon, {\n        children: /*#__PURE__*/_jsxDEV(ArrowUpIcon, {\n          strokeWidth: 0.5,\n          width: \"90px\",\n          color: \"primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AutoColumn, {\n        gap: \"12px\",\n        justify: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"20px\",\n          children: t('Transaction Submitted')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), chainId && hash && /*#__PURE__*/_jsxDEV(Link, {\n          external: true,\n          small: true,\n          href: getBscScanLink(hash, 'transaction', chainId),\n          children: t('View on BscScan')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this), currencyToAdd && (library === null || library === void 0 ? void 0 : (_library$provider = library.provider) === null || _library$provider === void 0 ? void 0 : _library$provider.isMetaMask) && /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"tertiary\",\n          mt: \"12px\",\n          width: \"fit-content\",\n          onClick: () => registerToken(token.address, token.symbol, token.decimals),\n          children: /*#__PURE__*/_jsxDEV(RowFixed, {\n            children: [t('Add %asset% to Metamask', {\n              asset: currencyToAdd.symbol\n            }), /*#__PURE__*/_jsxDEV(MetamaskIcon, {\n              width: \"16px\",\n              ml: \"6px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: onDismiss,\n          mt: \"20px\",\n          children: t('Close')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(TransactionSubmittedContent, \"OWC5DlPOi2ZCTEch8QTjuWerFhE=\", false, function () {\n  return [useActiveWeb3React, useTranslation];\n});\n\n_c5 = TransactionSubmittedContent;\nexport function ConfirmationModalContent({\n  bottomContent,\n  topContent\n}) {\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      children: topContent()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      children: bottomContent()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n}\n_c6 = ConfirmationModalContent;\nexport function TransactionErrorContent({\n  message,\n  onDismiss\n}) {\n  _s3();\n\n  const {\n    t\n  } = useTranslation();\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: [/*#__PURE__*/_jsxDEV(AutoColumn, {\n      justify: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(ErrorIcon, {\n        color: \"failure\",\n        width: \"64px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        color: \"failure\",\n        style: {\n          textAlign: 'center',\n          width: '85%'\n        },\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Flex, {\n      justifyContent: \"center\",\n      pt: \"24px\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: onDismiss,\n        children: t('Dismiss')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n}\n\n_s3(TransactionErrorContent, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n\n_c7 = TransactionErrorContent;\n\nconst TransactionConfirmationModal = ({\n  title,\n  onDismiss,\n  customOnDismiss,\n  attemptingTxn,\n  hash,\n  pendingText,\n  content,\n  currencyToAdd\n}) => {\n  _s4();\n\n  const {\n    chainId\n  } = useActiveWeb3React();\n  const handleDismiss = useCallback(() => {\n    if (customOnDismiss) {\n      customOnDismiss();\n    }\n\n    onDismiss();\n  }, [customOnDismiss, onDismiss]);\n  if (!chainId) return null;\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    title: title,\n    headerBackground: \"gradients.cardHeader\",\n    onDismiss: handleDismiss,\n    children: attemptingTxn ? /*#__PURE__*/_jsxDEV(ConfirmationPendingContent, {\n      pendingText: pendingText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 9\n    }, this) : hash ? /*#__PURE__*/_jsxDEV(TransactionSubmittedContent, {\n      chainId: chainId,\n      hash: hash,\n      onDismiss: onDismiss,\n      currencyToAdd: currencyToAdd\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 9\n    }, this) : content()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 175,\n    columnNumber: 5\n  }, this);\n};\n\n_s4(TransactionConfirmationModal, \"Xu77vNR80ZXuKwXed9dbBUAFcXA=\", false, function () {\n  return [useActiveWeb3React];\n});\n\n_c8 = TransactionConfirmationModal;\nexport default TransactionConfirmationModal;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8;\n\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"Section\");\n$RefreshReg$(_c3, \"ConfirmedIcon\");\n$RefreshReg$(_c4, \"ConfirmationPendingContent\");\n$RefreshReg$(_c5, \"TransactionSubmittedContent\");\n$RefreshReg$(_c6, \"ConfirmationModalContent\");\n$RefreshReg$(_c7, \"TransactionErrorContent\");\n$RefreshReg$(_c8, \"TransactionConfirmationModal\");","map":{"version":3,"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/components/TransactionConfirmationModal/index.tsx"],"names":["React","useCallback","styled","Button","Text","ErrorIcon","ArrowUpIcon","MetamaskIcon","Flex","Box","Link","Spinner","Modal","registerToken","useTranslation","useActiveWeb3React","wrappedCurrency","RowFixed","AutoColumn","ColumnCenter","getBscScanLink","Wrapper","div","Section","ConfirmedIcon","ConfirmationPendingContent","pendingText","t","TransactionSubmittedContent","onDismiss","chainId","hash","currencyToAdd","library","token","provider","isMetaMask","address","symbol","decimals","asset","ConfirmationModalContent","bottomContent","topContent","TransactionErrorContent","message","textAlign","width","TransactionConfirmationModal","title","customOnDismiss","attemptingTxn","content","handleDismiss"],"mappings":"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","sourcesContent":["import React, { useCallback } from 'react'\r\nimport { ChainId, Currency, Token } from '@pancakeswap/sdk'\r\nimport styled from 'styled-components'\r\nimport {\r\n  Button,\r\n  Text,\r\n  ErrorIcon,\r\n  ArrowUpIcon,\r\n  MetamaskIcon,\r\n  Flex,\r\n  Box,\r\n  Link,\r\n  Spinner,\r\n  Modal,\r\n  InjectedModalProps,\r\n} from '@pancakeswap/uikit'\r\nimport { registerToken } from 'utils/wallet'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport { wrappedCurrency } from 'utils/wrappedCurrency'\r\nimport { RowFixed } from '../Layout/Row'\r\nimport { AutoColumn, ColumnCenter } from '../Layout/Column'\r\nimport { getBscScanLink } from '../../utils'\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n`\r\nconst Section = styled(AutoColumn)`\r\n  padding: 24px;\r\n`\r\n\r\nconst ConfirmedIcon = styled(ColumnCenter)`\r\n  padding: 24px 0;\r\n`\r\n\r\nfunction ConfirmationPendingContent({ pendingText }: { pendingText: string }) {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <Wrapper>\r\n      <ConfirmedIcon>\r\n        <Spinner />\r\n      </ConfirmedIcon>\r\n      <AutoColumn gap=\"12px\" justify=\"center\">\r\n        <Text fontSize=\"20px\">{t('Waiting For Confirmation')}</Text>\r\n        <AutoColumn gap=\"12px\" justify=\"center\">\r\n          <Text bold small textAlign=\"center\">\r\n            {pendingText}\r\n          </Text>\r\n        </AutoColumn>\r\n        <Text small color=\"textSubtle\" textAlign=\"center\">\r\n          {t('Confirm this transaction in your wallet')}\r\n        </Text>\r\n      </AutoColumn>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nfunction TransactionSubmittedContent({\r\n  onDismiss,\r\n  chainId,\r\n  hash,\r\n  currencyToAdd,\r\n}: {\r\n  onDismiss: () => void\r\n  hash: string | undefined\r\n  chainId: ChainId\r\n  currencyToAdd?: Currency | undefined\r\n}) {\r\n  const { library } = useActiveWeb3React()\r\n\r\n  const { t } = useTranslation()\r\n\r\n  const token: Token | undefined = wrappedCurrency(currencyToAdd, chainId)\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Section>\r\n        <ConfirmedIcon>\r\n          <ArrowUpIcon strokeWidth={0.5} width=\"90px\" color=\"primary\" />\r\n        </ConfirmedIcon>\r\n        <AutoColumn gap=\"12px\" justify=\"center\">\r\n          <Text fontSize=\"20px\">{t('Transaction Submitted')}</Text>\r\n          {chainId && hash && (\r\n            <Link external small href={getBscScanLink(hash, 'transaction', chainId)}>\r\n              {t('View on BscScan')}\r\n            </Link>\r\n          )}\r\n          {currencyToAdd && library?.provider?.isMetaMask && (\r\n            <Button\r\n              variant=\"tertiary\"\r\n              mt=\"12px\"\r\n              width=\"fit-content\"\r\n              onClick={() => registerToken(token.address, token.symbol, token.decimals)}\r\n            >\r\n              <RowFixed>\r\n                {t('Add %asset% to Metamask', { asset: currencyToAdd.symbol })}\r\n                <MetamaskIcon width=\"16px\" ml=\"6px\" />\r\n              </RowFixed>\r\n            </Button>\r\n          )}\r\n          <Button onClick={onDismiss} mt=\"20px\">\r\n            {t('Close')}\r\n          </Button>\r\n        </AutoColumn>\r\n      </Section>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport function ConfirmationModalContent({\r\n  bottomContent,\r\n  topContent,\r\n}: {\r\n  topContent: () => React.ReactNode\r\n  bottomContent: () => React.ReactNode\r\n}) {\r\n  return (\r\n    <Wrapper>\r\n      <Box>{topContent()}</Box>\r\n      <Box>{bottomContent()}</Box>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport function TransactionErrorContent({ message, onDismiss }: { message: string; onDismiss: () => void }) {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <Wrapper>\r\n      <AutoColumn justify=\"center\">\r\n        <ErrorIcon color=\"failure\" width=\"64px\" />\r\n        <Text color=\"failure\" style={{ textAlign: 'center', width: '85%' }}>\r\n          {message}\r\n        </Text>\r\n      </AutoColumn>\r\n\r\n      <Flex justifyContent=\"center\" pt=\"24px\">\r\n        <Button onClick={onDismiss}>{t('Dismiss')}</Button>\r\n      </Flex>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\ninterface ConfirmationModalProps {\r\n  title: string\r\n  customOnDismiss?: () => void\r\n  hash: string | undefined\r\n  content: () => React.ReactNode\r\n  attemptingTxn: boolean\r\n  pendingText: string\r\n  currencyToAdd?: Currency | undefined\r\n}\r\n\r\nconst TransactionConfirmationModal: React.FC<InjectedModalProps & ConfirmationModalProps> = ({\r\n  title,\r\n  onDismiss,\r\n  customOnDismiss,\r\n  attemptingTxn,\r\n  hash,\r\n  pendingText,\r\n  content,\r\n  currencyToAdd,\r\n}) => {\r\n  const { chainId } = useActiveWeb3React()\r\n\r\n  const handleDismiss = useCallback(() => {\r\n    if (customOnDismiss) {\r\n      customOnDismiss()\r\n    }\r\n    onDismiss()\r\n  }, [customOnDismiss, onDismiss])\r\n\r\n  if (!chainId) return null\r\n\r\n  return (\r\n    <Modal title={title} headerBackground=\"gradients.cardHeader\" onDismiss={handleDismiss}>\r\n      {attemptingTxn ? (\r\n        <ConfirmationPendingContent pendingText={pendingText} />\r\n      ) : hash ? (\r\n        <TransactionSubmittedContent\r\n          chainId={chainId}\r\n          hash={hash}\r\n          onDismiss={onDismiss}\r\n          currencyToAdd={currencyToAdd}\r\n        />\r\n      ) : (\r\n        content()\r\n      )}\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default TransactionConfirmationModal\r\n"]},"metadata":{},"sourceType":"module"}