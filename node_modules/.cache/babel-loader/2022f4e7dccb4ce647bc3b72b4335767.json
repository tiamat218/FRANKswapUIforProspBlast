{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\frkul\\\\Documents\\\\swapUI_pancake-frontend\\\\src\\\\views\\\\TradingCompetition\\\\components\\\\TeamRanks\\\\TopTradersCard\\\\index.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Card, CardFooter, CardHeader, Heading, Text, TabMenu, Tab, Box, Flex, ExpandableLabel } from '@pancakeswap/uikit';\nimport { useTranslation } from 'contexts/Localization';\nimport TopTradersGrid from './TopTradersGrid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TopTradersCard = ({\n  team1LeaderboardInformation,\n  team2LeaderboardInformation,\n  team3LeaderboardInformation,\n  globalLeaderboardInformation,\n  isGlobalLeaderboardDataComplete\n}) => {\n  _s();\n  const {\n    t\n  } = useTranslation();\n  const [activeTab, setActiveTab] = useState(0);\n  const [isExpanded, setIsExpanded] = useState(false);\n  const [topTradersGridData, setTopTradersGridData] = useState(null);\n  const handleItemClick = index => setActiveTab(index);\n  const tabs = [t('Total'), 'Storm', 'Flippers', 'Cakers'];\n  useEffect(() => {\n    const getData = () => {\n      if (activeTab === 0) {\n        setTopTradersGridData(globalLeaderboardInformation.data);\n      }\n      if (activeTab === 1) {\n        setTopTradersGridData(team1LeaderboardInformation.leaderboardData.data);\n      }\n      if (activeTab === 2) {\n        setTopTradersGridData(team2LeaderboardInformation.leaderboardData.data);\n      }\n      if (activeTab === 3) {\n        setTopTradersGridData(team3LeaderboardInformation.leaderboardData.data);\n      }\n    };\n    if (isGlobalLeaderboardDataComplete) {\n      getData();\n    }\n  }, [isGlobalLeaderboardDataComplete, activeTab, globalLeaderboardInformation, team1LeaderboardInformation, team2LeaderboardInformation, team3LeaderboardInformation]);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      width: \"100%\",\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        children: [/*#__PURE__*/_jsxDEV(Heading, {\n          color: \"secondary\",\n          scale: \"lg\",\n          children: t('Top Traders')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"14px\",\n          color: \"textSubtle\",\n          children: t('Since start of the competition')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        mt: \"16px\",\n        children: [/*#__PURE__*/_jsxDEV(TabMenu, {\n          activeIndex: activeTab,\n          onItemClick: handleItemClick,\n          children: tabs.map(tabText => {\n            return /*#__PURE__*/_jsxDEV(Tab, {\n              children: tabText\n            }, tabText, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 22\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TopTradersGrid, {\n          data: topTradersGridData,\n          isExpanded: isExpanded\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardFooter, {\n        p: \"0px\",\n        children: /*#__PURE__*/_jsxDEV(Flex, {\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          children: /*#__PURE__*/_jsxDEV(ExpandableLabel, {\n            expanded: isExpanded,\n            onClick: () => setIsExpanded(!isExpanded),\n            children: isExpanded ? t('Hide') : t('Show More')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(TopTradersCard, \"orxKG7cRZd5oPnKCTRjVSzIxqYU=\", false, function () {\n  return [useTranslation];\n});\n_c = TopTradersCard;\nexport default TopTradersCard;\nvar _c;\n$RefreshReg$(_c, \"TopTradersCard\");","map":{"version":3,"names":["React","useState","useEffect","Card","CardFooter","CardHeader","Heading","Text","TabMenu","Tab","Box","Flex","ExpandableLabel","useTranslation","TopTradersGrid","jsxDEV","_jsxDEV","TopTradersCard","team1LeaderboardInformation","team2LeaderboardInformation","team3LeaderboardInformation","globalLeaderboardInformation","isGlobalLeaderboardDataComplete","_s","t","activeTab","setActiveTab","isExpanded","setIsExpanded","topTradersGridData","setTopTradersGridData","handleItemClick","index","tabs","getData","data","leaderboardData","children","width","color","scale","fileName","_jsxFileName","lineNumber","columnNumber","fontSize","mt","activeIndex","onItemClick","map","tabText","p","alignItems","justifyContent","expanded","onClick","_c","$RefreshReg$"],"sources":["C:/Users/frkul/Documents/swapUI_pancake-frontend/src/views/TradingCompetition/components/TeamRanks/TopTradersCard/index.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport {\r\n  Card,\r\n  CardFooter,\r\n  CardHeader,\r\n  Heading,\r\n  Text,\r\n  TabMenu,\r\n  Tab,\r\n  Box,\r\n  Flex,\r\n  ExpandableLabel,\r\n} from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { TeamRanksProps } from '../../../types'\r\nimport TopTradersGrid from './TopTradersGrid'\r\n\r\nconst TopTradersCard: React.FC<TeamRanksProps> = ({\r\n  team1LeaderboardInformation,\r\n  team2LeaderboardInformation,\r\n  team3LeaderboardInformation,\r\n  globalLeaderboardInformation,\r\n  isGlobalLeaderboardDataComplete,\r\n}) => {\r\n  const { t } = useTranslation()\r\n  const [activeTab, setActiveTab] = useState(0)\r\n  const [isExpanded, setIsExpanded] = useState(false)\r\n  const [topTradersGridData, setTopTradersGridData] = useState(null)\r\n  const handleItemClick = (index: number) => setActiveTab(index)\r\n  const tabs = [t('Total'), 'Storm', 'Flippers', 'Cakers']\r\n\r\n  useEffect(() => {\r\n    const getData = () => {\r\n      if (activeTab === 0) {\r\n        setTopTradersGridData(globalLeaderboardInformation.data)\r\n      }\r\n\r\n      if (activeTab === 1) {\r\n        setTopTradersGridData(team1LeaderboardInformation.leaderboardData.data)\r\n      }\r\n\r\n      if (activeTab === 2) {\r\n        setTopTradersGridData(team2LeaderboardInformation.leaderboardData.data)\r\n      }\r\n\r\n      if (activeTab === 3) {\r\n        setTopTradersGridData(team3LeaderboardInformation.leaderboardData.data)\r\n      }\r\n    }\r\n\r\n    if (isGlobalLeaderboardDataComplete) {\r\n      getData()\r\n    }\r\n  }, [\r\n    isGlobalLeaderboardDataComplete,\r\n    activeTab,\r\n    globalLeaderboardInformation,\r\n    team1LeaderboardInformation,\r\n    team2LeaderboardInformation,\r\n    team3LeaderboardInformation,\r\n  ])\r\n\r\n  return (\r\n    <Card>\r\n      <Box width=\"100%\">\r\n        <CardHeader>\r\n          <Heading color=\"secondary\" scale=\"lg\">\r\n            {t('Top Traders')}\r\n          </Heading>\r\n          <Text fontSize=\"14px\" color=\"textSubtle\">\r\n            {t('Since start of the competition')}\r\n          </Text>\r\n        </CardHeader>\r\n        <Box mt=\"16px\">\r\n          <TabMenu activeIndex={activeTab} onItemClick={handleItemClick}>\r\n            {tabs.map((tabText) => {\r\n              return <Tab key={tabText}>{tabText}</Tab>\r\n            })}\r\n          </TabMenu>\r\n          <TopTradersGrid data={topTradersGridData} isExpanded={isExpanded} />\r\n        </Box>\r\n        <CardFooter p=\"0px\">\r\n          <Flex alignItems=\"center\" justifyContent=\"center\">\r\n            <ExpandableLabel expanded={isExpanded} onClick={() => setIsExpanded(!isExpanded)}>\r\n              {isExpanded ? t('Hide') : t('Show More')}\r\n            </ExpandableLabel>\r\n          </Flex>\r\n        </CardFooter>\r\n      </Box>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default TopTradersCard\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}