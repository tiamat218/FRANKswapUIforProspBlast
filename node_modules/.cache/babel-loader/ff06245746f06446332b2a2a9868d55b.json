{"ast":null,"code":"import BigNumber from'bignumber.js';/**\r\n * Remove the '1' and reverse the digits in a lottery number retreived from the smart contract\r\n */export const parseRetreivedNumber=number=>{const numberAsArray=number.split('');numberAsArray.splice(0,1);numberAsArray.reverse();return numberAsArray.join('');};export const getDrawnDate=endTime=>{const endTimeInMs=parseInt(endTime,10)*1000;const endTimeAsDate=new Date(endTimeInMs);return endTimeAsDate.toLocaleDateString(undefined,dateTimeOptions);};export const dateOptions={year:'numeric',month:'short',day:'numeric'};export const timeOptions={hour:'numeric',minute:'numeric'};export const dateTimeOptions={...dateOptions,...timeOptions};export const processLotteryResponse=lotteryData=>{const{priceTicketInCake:priceTicketInCakeAsString,discountDivisor:discountDivisorAsString,amountCollectedInCake:amountCollectedInCakeAsString}=lotteryData;const discountDivisor=new BigNumber(discountDivisorAsString);const priceTicketInCake=new BigNumber(priceTicketInCakeAsString);const amountCollectedInCake=new BigNumber(amountCollectedInCakeAsString);return{isLoading:lotteryData.isLoading,lotteryId:lotteryData.lotteryId,userTickets:lotteryData.userTickets,status:lotteryData.status,startTime:lotteryData.startTime,endTime:lotteryData.endTime,priceTicketInCake,discountDivisor,treasuryFee:lotteryData.treasuryFee,firstTicketId:lotteryData.firstTicketId,lastTicketId:lotteryData.lastTicketId,amountCollectedInCake,finalNumber:lotteryData.finalNumber,cakePerBracket:lotteryData.cakePerBracket,countWinnersPerBracket:lotteryData.countWinnersPerBracket,rewardsBreakdown:lotteryData.rewardsBreakdown};};","map":{"version":3,"names":["BigNumber","parseRetreivedNumber","number","numberAsArray","split","splice","reverse","join","getDrawnDate","endTime","endTimeInMs","parseInt","endTimeAsDate","Date","toLocaleDateString","undefined","dateTimeOptions","dateOptions","year","month","day","timeOptions","hour","minute","processLotteryResponse","lotteryData","priceTicketInCake","priceTicketInCakeAsString","discountDivisor","discountDivisorAsString","amountCollectedInCake","amountCollectedInCakeAsString","isLoading","lotteryId","userTickets","status","startTime","treasuryFee","firstTicketId","lastTicketId","finalNumber","cakePerBracket","countWinnersPerBracket","rewardsBreakdown"],"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/views/Lottery/helpers.tsx"],"sourcesContent":["import BigNumber from 'bignumber.js'\r\nimport { LotteryResponse, LotteryRound, LotteryRoundUserTickets } from 'state/types'\r\n\r\n/**\r\n * Remove the '1' and reverse the digits in a lottery number retreived from the smart contract\r\n */\r\nexport const parseRetreivedNumber = (number: string): string => {\r\n  const numberAsArray = number.split('')\r\n  numberAsArray.splice(0, 1)\r\n  numberAsArray.reverse()\r\n  return numberAsArray.join('')\r\n}\r\n\r\nexport const getDrawnDate = (endTime: string) => {\r\n  const endTimeInMs = parseInt(endTime, 10) * 1000\r\n  const endTimeAsDate = new Date(endTimeInMs)\r\n  return endTimeAsDate.toLocaleDateString(undefined, dateTimeOptions)\r\n}\r\n\r\nexport const dateOptions: Intl.DateTimeFormatOptions = {\r\n  year: 'numeric',\r\n  month: 'short',\r\n  day: 'numeric',\r\n}\r\n\r\nexport const timeOptions: Intl.DateTimeFormatOptions = {\r\n  hour: 'numeric',\r\n  minute: 'numeric',\r\n}\r\n\r\nexport const dateTimeOptions: Intl.DateTimeFormatOptions = {\r\n  ...dateOptions,\r\n  ...timeOptions,\r\n}\r\n\r\nexport const processLotteryResponse = (\r\n  lotteryData: LotteryResponse & { userTickets?: LotteryRoundUserTickets },\r\n): LotteryRound => {\r\n  const {\r\n    priceTicketInCake: priceTicketInCakeAsString,\r\n    discountDivisor: discountDivisorAsString,\r\n    amountCollectedInCake: amountCollectedInCakeAsString,\r\n  } = lotteryData\r\n\r\n  const discountDivisor = new BigNumber(discountDivisorAsString)\r\n  const priceTicketInCake = new BigNumber(priceTicketInCakeAsString)\r\n  const amountCollectedInCake = new BigNumber(amountCollectedInCakeAsString)\r\n\r\n  return {\r\n    isLoading: lotteryData.isLoading,\r\n    lotteryId: lotteryData.lotteryId,\r\n    userTickets: lotteryData.userTickets,\r\n    status: lotteryData.status,\r\n    startTime: lotteryData.startTime,\r\n    endTime: lotteryData.endTime,\r\n    priceTicketInCake,\r\n    discountDivisor,\r\n    treasuryFee: lotteryData.treasuryFee,\r\n    firstTicketId: lotteryData.firstTicketId,\r\n    lastTicketId: lotteryData.lastTicketId,\r\n    amountCollectedInCake,\r\n    finalNumber: lotteryData.finalNumber,\r\n    cakePerBracket: lotteryData.cakePerBracket,\r\n    countWinnersPerBracket: lotteryData.countWinnersPerBracket,\r\n    rewardsBreakdown: lotteryData.rewardsBreakdown,\r\n  }\r\n}\r\n"],"mappings":"AAAA,MAAO,CAAAA,SAAS,KAAM,cAAc,CAGpC;AACA;AACA,GACA,MAAO,MAAM,CAAAC,oBAAoB,CAAIC,MAAc,EAAa,CAC9D,KAAM,CAAAC,aAAa,CAAGD,MAAM,CAACE,KAAK,CAAC,EAAE,CAAC,CACtCD,aAAa,CAACE,MAAM,CAAC,CAAC,CAAE,CAAC,CAAC,CAC1BF,aAAa,CAACG,OAAO,CAAC,CAAC,CACvB,MAAO,CAAAH,aAAa,CAACI,IAAI,CAAC,EAAE,CAAC,CAC/B,CAAC,CAED,MAAO,MAAM,CAAAC,YAAY,CAAIC,OAAe,EAAK,CAC/C,KAAM,CAAAC,WAAW,CAAGC,QAAQ,CAACF,OAAO,CAAE,EAAE,CAAC,CAAG,IAAI,CAChD,KAAM,CAAAG,aAAa,CAAG,GAAI,CAAAC,IAAI,CAACH,WAAW,CAAC,CAC3C,MAAO,CAAAE,aAAa,CAACE,kBAAkB,CAACC,SAAS,CAAEC,eAAe,CAAC,CACrE,CAAC,CAED,MAAO,MAAM,CAAAC,WAAuC,CAAG,CACrDC,IAAI,CAAE,SAAS,CACfC,KAAK,CAAE,OAAO,CACdC,GAAG,CAAE,SACP,CAAC,CAED,MAAO,MAAM,CAAAC,WAAuC,CAAG,CACrDC,IAAI,CAAE,SAAS,CACfC,MAAM,CAAE,SACV,CAAC,CAED,MAAO,MAAM,CAAAP,eAA2C,CAAG,CACzD,GAAGC,WAAW,CACd,GAAGI,WACL,CAAC,CAED,MAAO,MAAM,CAAAG,sBAAsB,CACjCC,WAAwE,EACvD,CACjB,KAAM,CACJC,iBAAiB,CAAEC,yBAAyB,CAC5CC,eAAe,CAAEC,uBAAuB,CACxCC,qBAAqB,CAAEC,6BACzB,CAAC,CAAGN,WAAW,CAEf,KAAM,CAAAG,eAAe,CAAG,GAAI,CAAA5B,SAAS,CAAC6B,uBAAuB,CAAC,CAC9D,KAAM,CAAAH,iBAAiB,CAAG,GAAI,CAAA1B,SAAS,CAAC2B,yBAAyB,CAAC,CAClE,KAAM,CAAAG,qBAAqB,CAAG,GAAI,CAAA9B,SAAS,CAAC+B,6BAA6B,CAAC,CAE1E,MAAO,CACLC,SAAS,CAAEP,WAAW,CAACO,SAAS,CAChCC,SAAS,CAAER,WAAW,CAACQ,SAAS,CAChCC,WAAW,CAAET,WAAW,CAACS,WAAW,CACpCC,MAAM,CAAEV,WAAW,CAACU,MAAM,CAC1BC,SAAS,CAAEX,WAAW,CAACW,SAAS,CAChC3B,OAAO,CAAEgB,WAAW,CAAChB,OAAO,CAC5BiB,iBAAiB,CACjBE,eAAe,CACfS,WAAW,CAAEZ,WAAW,CAACY,WAAW,CACpCC,aAAa,CAAEb,WAAW,CAACa,aAAa,CACxCC,YAAY,CAAEd,WAAW,CAACc,YAAY,CACtCT,qBAAqB,CACrBU,WAAW,CAAEf,WAAW,CAACe,WAAW,CACpCC,cAAc,CAAEhB,WAAW,CAACgB,cAAc,CAC1CC,sBAAsB,CAAEjB,WAAW,CAACiB,sBAAsB,CAC1DC,gBAAgB,CAAElB,WAAW,CAACkB,gBAChC,CAAC,CACH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}