{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Devrim\\\\Documents\\\\FRANKswapUIforProspBlast\\\\src\\\\views\\\\Lottery\\\\components\\\\Countdown\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Flex, Heading, Skeleton } from '@pancakeswap/uikit';\nimport getTimePeriods from 'utils/getTimePeriods';\nimport Timer from './Timer';\nimport useNextEventCountdown from '../../hooks/useNextEventCountdown';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Countdown = ({\n  nextEventTime,\n  preCountdownText,\n  postCountdownText\n}) => {\n  _s();\n\n  const secondsRemaining = useNextEventCountdown(nextEventTime);\n  const {\n    days,\n    hours,\n    minutes\n  } = getTimePeriods(secondsRemaining);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: secondsRemaining ? /*#__PURE__*/_jsxDEV(Flex, {\n      display: \"inline-flex\",\n      justifyContent: \"flex-end\",\n      alignItems: \"flex-end\",\n      children: [preCountdownText && /*#__PURE__*/_jsxDEV(Heading, {\n        mr: \"12px\",\n        color: \"#ffff\",\n        children: preCountdownText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Timer, {\n        minutes: minutes + 1 // We don't show seconds - so values from 0 - 59s should be shown as 1 min\n        ,\n        hours: hours,\n        days: days\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this), postCountdownText && /*#__PURE__*/_jsxDEV(Heading, {\n        color: \"#ffff\",\n        children: postCountdownText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Skeleton, {\n      height: \"41px\",\n      width: \"250px\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(Countdown, \"feps5JGza/V1XEiS6BRv1/f7Q7o=\", false, function () {\n  return [useNextEventCountdown];\n});\n\n_c = Countdown;\nexport default Countdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"Countdown\");","map":{"version":3,"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/views/Lottery/components/Countdown/index.tsx"],"names":["React","Flex","Heading","Skeleton","getTimePeriods","Timer","useNextEventCountdown","Countdown","nextEventTime","preCountdownText","postCountdownText","secondsRemaining","days","hours","minutes"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,OAAf,EAAwBC,QAAxB,QAAwC,oBAAxC;AACA,OAAOC,cAAP,MAA2B,sBAA3B;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,qBAAP,MAAkC,mCAAlC;;;;AAQA,MAAMC,SAAmC,GAAG,CAAC;AAAEC,EAAAA,aAAF;AAAiBC,EAAAA,gBAAjB;AAAmCC,EAAAA;AAAnC,CAAD,KAA4D;AAAA;;AACtG,QAAMC,gBAAgB,GAAGL,qBAAqB,CAACE,aAAD,CAA9C;AACA,QAAM;AAAEI,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA;AAAf,MAA2BV,cAAc,CAACO,gBAAD,CAA/C;AAEA,sBACE;AAAA,cACGA,gBAAgB,gBACf,QAAC,IAAD;AAAM,MAAA,OAAO,EAAC,aAAd;AAA4B,MAAA,cAAc,EAAC,UAA3C;AAAsD,MAAA,UAAU,EAAC,UAAjE;AAAA,iBACGF,gBAAgB,iBACf,QAAC,OAAD;AAAS,QAAA,EAAE,EAAC,MAAZ;AAAmB,QAAA,KAAK,EAAC,OAAzB;AAAA,kBACGA;AADH;AAAA;AAAA;AAAA;AAAA,cAFJ,eAME,QAAC,KAAD;AACE,QAAA,OAAO,EAAEK,OAAO,GAAG,CADrB,CACwB;AADxB;AAEE,QAAA,KAAK,EAAED,KAFT;AAGE,QAAA,IAAI,EAAED;AAHR;AAAA;AAAA;AAAA;AAAA,cANF,EAWGF,iBAAiB,iBAAI,QAAC,OAAD;AAAS,QAAA,KAAK,EAAC,OAAf;AAAA,kBAAwBA;AAAxB;AAAA;AAAA;AAAA;AAAA,cAXxB;AAAA;AAAA;AAAA;AAAA;AAAA,YADe,gBAef,QAAC,QAAD;AAAU,MAAA,MAAM,EAAC,MAAjB;AAAwB,MAAA,KAAK,EAAC;AAA9B;AAAA;AAAA;AAAA;AAAA;AAhBJ,mBADF;AAqBD,CAzBD;;GAAMH,S;UACqBD,qB;;;KADrBC,S;AA2BN,eAAeA,SAAf","sourcesContent":["import React from 'react'\r\nimport { Flex, Heading, Skeleton } from '@pancakeswap/uikit'\r\nimport getTimePeriods from 'utils/getTimePeriods'\r\nimport Timer from './Timer'\r\nimport useNextEventCountdown from '../../hooks/useNextEventCountdown'\r\n\r\ninterface CountdownProps {\r\n  nextEventTime: number\r\n  preCountdownText?: string\r\n  postCountdownText?: string\r\n}\r\n\r\nconst Countdown: React.FC<CountdownProps> = ({ nextEventTime, preCountdownText, postCountdownText }) => {\r\n  const secondsRemaining = useNextEventCountdown(nextEventTime)\r\n  const { days, hours, minutes } = getTimePeriods(secondsRemaining)\r\n\r\n  return (\r\n    <>\r\n      {secondsRemaining ? (\r\n        <Flex display=\"inline-flex\" justifyContent=\"flex-end\" alignItems=\"flex-end\">\r\n          {preCountdownText && (\r\n            <Heading mr=\"12px\" color=\"#ffff\">\r\n              {preCountdownText}\r\n            </Heading>\r\n          )}\r\n          <Timer\r\n            minutes={minutes + 1} // We don't show seconds - so values from 0 - 59s should be shown as 1 min\r\n            hours={hours}\r\n            days={days}\r\n          />\r\n          {postCountdownText && <Heading color=\"#ffff\">{postCountdownText}</Heading>}\r\n        </Flex>\r\n      ) : (\r\n        <Skeleton height=\"41px\" width=\"250px\" />\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Countdown\r\n"]},"metadata":{},"sourceType":"module"}