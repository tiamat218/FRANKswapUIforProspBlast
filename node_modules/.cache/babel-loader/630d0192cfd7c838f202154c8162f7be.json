{"ast":null,"code":"import BigNumber from'bignumber.js';import{ethers}from'ethers';import{formatUnits}from'ethers/lib/utils';import{BIG_TEN}from'./bigNumber';/**\r\n * Take a formatted amount, e.g. 15 BNB and convert it to full decimal value, e.g. 15000000000000000\r\n */export const getDecimalAmount=function(amount){let decimals=arguments.length>1&&arguments[1]!==undefined?arguments[1]:18;return new BigNumber(amount).times(BIG_TEN.pow(decimals));};export const getBalanceAmount=function(amount){let decimals=arguments.length>1&&arguments[1]!==undefined?arguments[1]:18;return new BigNumber(amount).dividedBy(BIG_TEN.pow(decimals));};/**\r\n * This function is not really necessary but is used throughout the site.\r\n */export const getBalanceNumber=function(balance){let decimals=arguments.length>1&&arguments[1]!==undefined?arguments[1]:18;return getBalanceAmount(balance,decimals).toNumber();};export const getFullDisplayBalance=function(balance){let decimals=arguments.length>1&&arguments[1]!==undefined?arguments[1]:18;let displayDecimals=arguments.length>2?arguments[2]:undefined;return getBalanceAmount(balance,decimals).toFixed(displayDecimals);};export const formatNumber=function(number){let minPrecision=arguments.length>1&&arguments[1]!==undefined?arguments[1]:2;let maxPrecision=arguments.length>2&&arguments[2]!==undefined?arguments[2]:2;const options={minimumFractionDigits:minPrecision,maximumFractionDigits:maxPrecision};return number.toLocaleString(undefined,options);};/**\r\n * Method to format the display of wei given an ethers.BigNumber object\r\n * Note: does NOT round\r\n */export const formatBigNumber=function(number){let displayDecimals=arguments.length>1&&arguments[1]!==undefined?arguments[1]:18;let decimals=arguments.length>2&&arguments[2]!==undefined?arguments[2]:18;const remainder=number.mod(ethers.BigNumber.from(10).pow(decimals-displayDecimals));return formatUnits(number.sub(remainder),decimals);};/**\r\n * Method to format the display of wei given an ethers.BigNumber object with toFixed\r\n * Note: rounds\r\n */export const formatBigNumberToFixed=function(number){let displayDecimals=arguments.length>1&&arguments[1]!==undefined?arguments[1]:18;let decimals=arguments.length>2&&arguments[2]!==undefined?arguments[2]:18;const formattedString=formatUnits(number,decimals);return(+formattedString).toFixed(displayDecimals);};/**\r\n * Formats a FixedNumber like BigNumber\r\n * i.e. Formats 9763410526137450427.1196 into 9.763 (3 display decimals)\r\n */export const formatFixedNumber=function(number){let displayDecimals=arguments.length>1&&arguments[1]!==undefined?arguments[1]:18;let decimals=arguments.length>2&&arguments[2]!==undefined?arguments[2]:18;// Remove decimal\nconst[leftSide]=number.toString().split('.');return formatBigNumber(ethers.BigNumber.from(leftSide),displayDecimals,decimals);};","map":{"version":3,"names":["BigNumber","ethers","formatUnits","BIG_TEN","getDecimalAmount","amount","decimals","arguments","length","undefined","times","pow","getBalanceAmount","dividedBy","getBalanceNumber","balance","toNumber","getFullDisplayBalance","displayDecimals","toFixed","formatNumber","number","minPrecision","maxPrecision","options","minimumFractionDigits","maximumFractionDigits","toLocaleString","formatBigNumber","remainder","mod","from","sub","formatBigNumberToFixed","formattedString","formatFixedNumber","leftSide","toString","split"],"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/utils/formatBalance.ts"],"sourcesContent":["import BigNumber from 'bignumber.js'\r\nimport { ethers } from 'ethers'\r\nimport { formatUnits } from 'ethers/lib/utils'\r\nimport { BIG_TEN } from './bigNumber'\r\n\r\n/**\r\n * Take a formatted amount, e.g. 15 BNB and convert it to full decimal value, e.g. 15000000000000000\r\n */\r\nexport const getDecimalAmount = (amount: BigNumber, decimals = 18) => {\r\n  return new BigNumber(amount).times(BIG_TEN.pow(decimals))\r\n}\r\n\r\nexport const getBalanceAmount = (amount: BigNumber, decimals = 18) => {\r\n  return new BigNumber(amount).dividedBy(BIG_TEN.pow(decimals))\r\n}\r\n\r\n/**\r\n * This function is not really necessary but is used throughout the site.\r\n */\r\nexport const getBalanceNumber = (balance: BigNumber, decimals = 18) => {\r\n  return getBalanceAmount(balance, decimals).toNumber()\r\n}\r\n\r\nexport const getFullDisplayBalance = (balance: BigNumber, decimals = 18, displayDecimals?: number) => {\r\n  return getBalanceAmount(balance, decimals).toFixed(displayDecimals)\r\n}\r\n\r\nexport const formatNumber = (number: number, minPrecision = 2, maxPrecision = 2) => {\r\n  const options = {\r\n    minimumFractionDigits: minPrecision,\r\n    maximumFractionDigits: maxPrecision,\r\n  }\r\n  return number.toLocaleString(undefined, options)\r\n}\r\n\r\n/**\r\n * Method to format the display of wei given an ethers.BigNumber object\r\n * Note: does NOT round\r\n */\r\nexport const formatBigNumber = (number: ethers.BigNumber, displayDecimals = 18, decimals = 18) => {\r\n  const remainder = number.mod(ethers.BigNumber.from(10).pow(decimals - displayDecimals))\r\n  return formatUnits(number.sub(remainder), decimals)\r\n}\r\n\r\n/**\r\n * Method to format the display of wei given an ethers.BigNumber object with toFixed\r\n * Note: rounds\r\n */\r\nexport const formatBigNumberToFixed = (number: ethers.BigNumber, displayDecimals = 18, decimals = 18) => {\r\n  const formattedString = formatUnits(number, decimals)\r\n  return (+formattedString).toFixed(displayDecimals)\r\n}\r\n\r\n/**\r\n * Formats a FixedNumber like BigNumber\r\n * i.e. Formats 9763410526137450427.1196 into 9.763 (3 display decimals)\r\n */\r\nexport const formatFixedNumber = (number: ethers.FixedNumber, displayDecimals = 18, decimals = 18) => {\r\n  // Remove decimal\r\n  const [leftSide] = number.toString().split('.')\r\n  return formatBigNumber(ethers.BigNumber.from(leftSide), displayDecimals, decimals)\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}