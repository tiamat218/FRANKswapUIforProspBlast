{"ast":null,"code":"import _taggedTemplateLiteral from\"C:/Users/frkul/Documents/swapUI_pancake-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject;import React from'react';import styled from'styled-components';import{Text,Box,Flex}from'@pancakeswap/uikit';import{useTranslation}from'contexts/Localization';import{LotteryStatus}from'config/constants/types';import{useGetUserLotteriesGraphData}from'state/lottery/hooks';import FinishedRoundRow from'./FinishedRoundRow';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const Grid=styled(Box)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  display: grid;\\n  grid-template-columns: repeat(3, 1fr) auto;\\n\"])));const FinishedRoundTable=_ref=>{let{handleHistoryRowClick}=_ref;const{t}=useTranslation();const userLotteryData=useGetUserLotteriesGraphData();const filteredForClaimable=userLotteryData===null||userLotteryData===void 0?void 0:userLotteryData.rounds.filter(round=>{return round.status.toLowerCase()===LotteryStatus.CLAIMABLE;});const sortedByRoundId=filteredForClaimable===null||filteredForClaimable===void 0?void 0:filteredForClaimable.sort((roundA,roundB)=>{return parseInt(roundB.lotteryId,10)-parseInt(roundA.lotteryId,10);});return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(Grid,{px:\"24px\",pt:\"24px\",mb:\"8px\",children:[/*#__PURE__*/_jsx(Text,{bold:true,fontSize:\"12px\",color:\"secondary\",children:\"#\"}),/*#__PURE__*/_jsx(Text,{bold:true,fontSize:\"12px\",color:\"secondary\",textTransform:\"uppercase\",children:t('Date')}),/*#__PURE__*/_jsx(Text,{bold:true,fontSize:\"12px\",color:\"secondary\",textTransform:\"uppercase\",children:t('Your Tickets')}),/*#__PURE__*/_jsx(Box,{width:\"20px\"})]}),/*#__PURE__*/_jsx(Flex,{px:\"24px\",pb:\"24px\",flexDirection:\"column\",overflowY:\"scroll\",height:\"240px\",children:userLotteryData&&sortedByRoundId.map(finishedRound=>/*#__PURE__*/_jsx(FinishedRoundRow,{roundId:finishedRound.lotteryId,hasWon:finishedRound.claimed,numberTickets:finishedRound.totalTickets,endTime:finishedRound.endTime,onClick:handleHistoryRowClick},finishedRound.lotteryId))})]});};export default FinishedRoundTable;","map":{"version":3,"names":["React","styled","Text","Box","Flex","useTranslation","LotteryStatus","useGetUserLotteriesGraphData","FinishedRoundRow","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Grid","_templateObject","_taggedTemplateLiteral","FinishedRoundTable","_ref","handleHistoryRowClick","t","userLotteryData","filteredForClaimable","rounds","filter","round","status","toLowerCase","CLAIMABLE","sortedByRoundId","sort","roundA","roundB","parseInt","lotteryId","children","px","pt","mb","bold","fontSize","color","textTransform","width","pb","flexDirection","overflowY","height","map","finishedRound","roundId","hasWon","claimed","numberTickets","totalTickets","endTime","onClick"],"sources":["C:/Users/frkul/Documents/swapUI_pancake-frontend/src/views/Lottery/components/YourHistoryCard/FinishedRoundTable.tsx"],"sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text, Box, Flex } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { LotteryStatus } from 'config/constants/types'\r\nimport { useGetUserLotteriesGraphData } from 'state/lottery/hooks'\r\nimport FinishedRoundRow from './FinishedRoundRow'\r\n\r\nconst Grid = styled(Box)`\r\n  display: grid;\r\n  grid-template-columns: repeat(3, 1fr) auto;\r\n`\r\n\r\ninterface FinishedRoundTableProps {\r\n  handleHistoryRowClick: (string) => void\r\n}\r\n\r\nconst FinishedRoundTable: React.FC<FinishedRoundTableProps> = ({ handleHistoryRowClick }) => {\r\n  const { t } = useTranslation()\r\n  const userLotteryData = useGetUserLotteriesGraphData()\r\n\r\n  const filteredForClaimable = userLotteryData?.rounds.filter((round) => {\r\n    return round.status.toLowerCase() === LotteryStatus.CLAIMABLE\r\n  })\r\n\r\n  const sortedByRoundId = filteredForClaimable?.sort((roundA, roundB) => {\r\n    return parseInt(roundB.lotteryId, 10) - parseInt(roundA.lotteryId, 10)\r\n  })\r\n\r\n  return (\r\n    <>\r\n      <Grid px=\"24px\" pt=\"24px\" mb=\"8px\">\r\n        <Text bold fontSize=\"12px\" color=\"secondary\">\r\n          #\r\n        </Text>\r\n        <Text bold fontSize=\"12px\" color=\"secondary\" textTransform=\"uppercase\">\r\n          {t('Date')}\r\n        </Text>\r\n        <Text bold fontSize=\"12px\" color=\"secondary\" textTransform=\"uppercase\">\r\n          {t('Your Tickets')}\r\n        </Text>\r\n        <Box width=\"20px\" />\r\n      </Grid>\r\n      <Flex px=\"24px\" pb=\"24px\" flexDirection=\"column\" overflowY=\"scroll\" height=\"240px\">\r\n        {userLotteryData &&\r\n          sortedByRoundId.map((finishedRound) => (\r\n            <FinishedRoundRow\r\n              key={finishedRound.lotteryId}\r\n              roundId={finishedRound.lotteryId}\r\n              hasWon={finishedRound.claimed}\r\n              numberTickets={finishedRound.totalTickets}\r\n              endTime={finishedRound.endTime}\r\n              onClick={handleHistoryRowClick}\r\n            />\r\n          ))}\r\n      </Flex>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default FinishedRoundTable\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}