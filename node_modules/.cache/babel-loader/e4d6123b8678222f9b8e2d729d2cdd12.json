{"ast":null,"code":"import React,{useState}from'react';import{useWeb3React}from'@web3-react/core';import BigNumber from'bignumber.js';import{ethers}from'ethers';import{Modal,ModalBody,Text,Image,Button,BalanceInput,Flex}from'@pancakeswap/uikit';import{PoolIds}from'config/constants/types';import{useTranslation}from'contexts/Localization';import{getBalanceAmount}from'utils/formatBalance';import{getAddress}from'utils/addressHelpers';import ApproveConfirmButtons from'views/Profile/components/ApproveConfirmButtons';import useApproveConfirmTransaction from'hooks/useApproveConfirmTransaction';import{DEFAULT_TOKEN_DECIMAL}from'config';import{useERC20}from'hooks/useContract';import{BIG_NINE,BIG_TEN}from'utils/bigNumber';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const multiplierValues=[0.1,0.25,0.5,0.75,1];// Default value for transaction setting, tweak based on BSC network congestion.\nconst gasPrice=BIG_TEN.times(BIG_TEN.pow(BIG_NINE)).toString();const ContributeModal=_ref=>{let{poolId,ifo,publicIfoData,walletIfoData,userCurrencyBalance,onDismiss,onSuccess}=_ref;const publicPoolCharacteristics=publicIfoData[poolId];const userPoolCharacteristics=walletIfoData[poolId];const{currency}=ifo;const{limitPerUserInLP}=publicPoolCharacteristics;const{amountTokenCommittedInLP}=userPoolCharacteristics;const{contract}=walletIfoData;const[value,setValue]=useState('');const{account}=useWeb3React();const raisingTokenContract=useERC20(getAddress(currency.address));const{t}=useTranslation();const valueWithTokenDecimals=new BigNumber(value).times(DEFAULT_TOKEN_DECIMAL);const{isApproving,isApproved,isConfirmed,isConfirming,handleApprove,handleConfirm}=useApproveConfirmTransaction({onRequiresApproval:async()=>{try{const response=await raisingTokenContract.allowance(account,contract.address);const currentAllowance=new BigNumber(response.toString());return currentAllowance.gt(0);}catch(error){return false;}},onApprove:()=>{return raisingTokenContract.approve(contract.address,ethers.constants.MaxUint256,{gasPrice});},onConfirm:()=>{return contract.depositPool(valueWithTokenDecimals.toString(),poolId===PoolIds.poolBasic?0:1,{gasPrice});},onSuccess:async()=>{await onSuccess(valueWithTokenDecimals);onDismiss();}});const maximumLpCommitable=(()=>{if(limitPerUserInLP.isGreaterThan(0)){return limitPerUserInLP.minus(amountTokenCommittedInLP).isLessThanOrEqualTo(userCurrencyBalance)?limitPerUserInLP:userCurrencyBalance;}return userCurrencyBalance;})();return/*#__PURE__*/_jsx(Modal,{title:t('Contribute %symbol%',{symbol:currency.symbol}),onDismiss:onDismiss,children:/*#__PURE__*/_jsxs(ModalBody,{maxWidth:\"320px\",children:[limitPerUserInLP.isGreaterThan(0)&&/*#__PURE__*/_jsxs(Flex,{justifyContent:\"space-between\",mb:\"16px\",children:[/*#__PURE__*/_jsx(Text,{children:t('Max. LP token entry')}),/*#__PURE__*/_jsx(Text,{children:getBalanceAmount(limitPerUserInLP,currency.decimals).toString()})]}),/*#__PURE__*/_jsxs(Flex,{justifyContent:\"space-between\",mb:\"8px\",children:[/*#__PURE__*/_jsxs(Text,{children:[t('Commit'),\":\"]}),/*#__PURE__*/_jsxs(Flex,{flexGrow:1,justifyContent:\"flex-end\",children:[/*#__PURE__*/_jsx(Image,{src:\"/images/farms/\".concat(currency.symbol.split(' ')[0].toLocaleLowerCase(),\".svg\"),width:24,height:24}),/*#__PURE__*/_jsx(Text,{children:currency.symbol})]})]}),/*#__PURE__*/_jsx(BalanceInput,{value:value,currencyValue:publicIfoData.currencyPriceInUSD.times(value||0).toFixed(2),onUserInput:setValue,isWarning:valueWithTokenDecimals.isGreaterThan(maximumLpCommitable),decimals:currency.decimals,mb:\"8px\"}),/*#__PURE__*/_jsx(Text,{color:\"textSubtle\",textAlign:\"right\",fontSize:\"12px\",mb:\"16px\",children:t('Balance: %balance%',{balance:getBalanceAmount(userCurrencyBalance,currency.decimals).toString()})}),/*#__PURE__*/_jsx(Flex,{justifyContent:\"space-between\",mb:\"16px\",children:multiplierValues.map((multiplierValue,index)=>/*#__PURE__*/_jsxs(Button,{scale:\"xs\",variant:\"tertiary\",onClick:()=>setValue(getBalanceAmount(maximumLpCommitable.times(multiplierValue)).toString()),mr:index<multiplierValues.length-1?'8px':0,children:[multiplierValue*100,\"%\"]},multiplierValue))}),/*#__PURE__*/_jsx(Text,{color:\"textSubtle\",fontSize:\"12px\",mb:\"24px\",children:t('If you donâ€™t commit enough LP tokens, you may not receive any IFO tokens at all and will only receive a full refund of your LP tokens.')}),/*#__PURE__*/_jsx(ApproveConfirmButtons,{isApproveDisabled:isConfirmed||isConfirming||isApproved,isApproving:isApproving,isConfirmDisabled:!isApproved||isConfirmed||valueWithTokenDecimals.isNaN()||valueWithTokenDecimals.eq(0),isConfirming:isConfirming,onApprove:handleApprove,onConfirm:handleConfirm})]})});};export default ContributeModal;","map":{"version":3,"names":["React","useState","useWeb3React","BigNumber","ethers","Modal","ModalBody","Text","Image","Button","BalanceInput","Flex","PoolIds","useTranslation","getBalanceAmount","getAddress","ApproveConfirmButtons","useApproveConfirmTransaction","DEFAULT_TOKEN_DECIMAL","useERC20","BIG_NINE","BIG_TEN","jsx","_jsx","jsxs","_jsxs","multiplierValues","gasPrice","times","pow","toString","ContributeModal","_ref","poolId","ifo","publicIfoData","walletIfoData","userCurrencyBalance","onDismiss","onSuccess","publicPoolCharacteristics","userPoolCharacteristics","currency","limitPerUserInLP","amountTokenCommittedInLP","contract","value","setValue","account","raisingTokenContract","address","t","valueWithTokenDecimals","isApproving","isApproved","isConfirmed","isConfirming","handleApprove","handleConfirm","onRequiresApproval","response","allowance","currentAllowance","gt","error","onApprove","approve","constants","MaxUint256","onConfirm","depositPool","poolBasic","maximumLpCommitable","isGreaterThan","minus","isLessThanOrEqualTo","title","symbol","children","maxWidth","justifyContent","mb","decimals","flexGrow","src","concat","split","toLocaleLowerCase","width","height","currencyValue","currencyPriceInUSD","toFixed","onUserInput","isWarning","color","textAlign","fontSize","balance","map","multiplierValue","index","scale","variant","onClick","mr","length","isApproveDisabled","isConfirmDisabled","isNaN","eq"],"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/views/Ifos/components/IfoFoldableCard/IfoPoolCard/ContributeModal.tsx"],"sourcesContent":["import React, { useState } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport BigNumber from 'bignumber.js'\r\nimport { ethers } from 'ethers'\r\nimport { Modal, ModalBody, Text, Image, Button, BalanceInput, Flex } from '@pancakeswap/uikit'\r\nimport { PoolIds, Ifo } from 'config/constants/types'\r\nimport { WalletIfoData, PublicIfoData } from 'views/Ifos/types'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { getBalanceAmount } from 'utils/formatBalance'\r\nimport { getAddress } from 'utils/addressHelpers'\r\nimport ApproveConfirmButtons from 'views/Profile/components/ApproveConfirmButtons'\r\nimport useApproveConfirmTransaction from 'hooks/useApproveConfirmTransaction'\r\nimport { DEFAULT_TOKEN_DECIMAL } from 'config'\r\nimport { useERC20 } from 'hooks/useContract'\r\nimport { BIG_NINE, BIG_TEN } from 'utils/bigNumber'\r\n\r\ninterface Props {\r\n  poolId: PoolIds\r\n  ifo: Ifo\r\n  publicIfoData: PublicIfoData\r\n  walletIfoData: WalletIfoData\r\n  userCurrencyBalance: BigNumber\r\n  onSuccess: (amount: BigNumber) => void\r\n  onDismiss?: () => void\r\n}\r\n\r\nconst multiplierValues = [0.1, 0.25, 0.5, 0.75, 1]\r\n\r\n// Default value for transaction setting, tweak based on BSC network congestion.\r\nconst gasPrice = BIG_TEN.times(BIG_TEN.pow(BIG_NINE)).toString()\r\n\r\nconst ContributeModal: React.FC<Props> = ({\r\n  poolId,\r\n  ifo,\r\n  publicIfoData,\r\n  walletIfoData,\r\n  userCurrencyBalance,\r\n  onDismiss,\r\n  onSuccess,\r\n}) => {\r\n  const publicPoolCharacteristics = publicIfoData[poolId]\r\n  const userPoolCharacteristics = walletIfoData[poolId]\r\n\r\n  const { currency } = ifo\r\n  const { limitPerUserInLP } = publicPoolCharacteristics\r\n  const { amountTokenCommittedInLP } = userPoolCharacteristics\r\n  const { contract } = walletIfoData\r\n  const [value, setValue] = useState('')\r\n  const { account } = useWeb3React()\r\n  const raisingTokenContract = useERC20(getAddress(currency.address))\r\n  const { t } = useTranslation()\r\n  const valueWithTokenDecimals = new BigNumber(value).times(DEFAULT_TOKEN_DECIMAL)\r\n\r\n  const { isApproving, isApproved, isConfirmed, isConfirming, handleApprove, handleConfirm } =\r\n    useApproveConfirmTransaction({\r\n      onRequiresApproval: async () => {\r\n        try {\r\n          const response = await raisingTokenContract.allowance(account, contract.address)\r\n          const currentAllowance = new BigNumber(response.toString())\r\n          return currentAllowance.gt(0)\r\n        } catch (error) {\r\n          return false\r\n        }\r\n      },\r\n      onApprove: () => {\r\n        return raisingTokenContract.approve(contract.address, ethers.constants.MaxUint256, { gasPrice })\r\n      },\r\n      onConfirm: () => {\r\n        return contract.depositPool(valueWithTokenDecimals.toString(), poolId === PoolIds.poolBasic ? 0 : 1, {\r\n          gasPrice,\r\n        })\r\n      },\r\n      onSuccess: async () => {\r\n        await onSuccess(valueWithTokenDecimals)\r\n        onDismiss()\r\n      },\r\n    })\r\n\r\n  const maximumLpCommitable = (() => {\r\n    if (limitPerUserInLP.isGreaterThan(0)) {\r\n      return limitPerUserInLP.minus(amountTokenCommittedInLP).isLessThanOrEqualTo(userCurrencyBalance)\r\n        ? limitPerUserInLP\r\n        : userCurrencyBalance\r\n    }\r\n    return userCurrencyBalance\r\n  })()\r\n\r\n  return (\r\n    <Modal title={t('Contribute %symbol%', { symbol: currency.symbol })} onDismiss={onDismiss}>\r\n      <ModalBody maxWidth=\"320px\">\r\n        {limitPerUserInLP.isGreaterThan(0) && (\r\n          <Flex justifyContent=\"space-between\" mb=\"16px\">\r\n            <Text>{t('Max. LP token entry')}</Text>\r\n            <Text>{getBalanceAmount(limitPerUserInLP, currency.decimals).toString()}</Text>\r\n          </Flex>\r\n        )}\r\n        <Flex justifyContent=\"space-between\" mb=\"8px\">\r\n          <Text>{t('Commit')}:</Text>\r\n          <Flex flexGrow={1} justifyContent=\"flex-end\">\r\n            <Image\r\n              src={`/images/farms/${currency.symbol.split(' ')[0].toLocaleLowerCase()}.svg`}\r\n              width={24}\r\n              height={24}\r\n            />\r\n            <Text>{currency.symbol}</Text>\r\n          </Flex>\r\n        </Flex>\r\n        <BalanceInput\r\n          value={value}\r\n          currencyValue={publicIfoData.currencyPriceInUSD.times(value || 0).toFixed(2)}\r\n          onUserInput={setValue}\r\n          isWarning={valueWithTokenDecimals.isGreaterThan(maximumLpCommitable)}\r\n          decimals={currency.decimals}\r\n          mb=\"8px\"\r\n        />\r\n        <Text color=\"textSubtle\" textAlign=\"right\" fontSize=\"12px\" mb=\"16px\">\r\n          {t('Balance: %balance%', {\r\n            balance: getBalanceAmount(userCurrencyBalance, currency.decimals).toString(),\r\n          })}\r\n        </Text>\r\n        <Flex justifyContent=\"space-between\" mb=\"16px\">\r\n          {multiplierValues.map((multiplierValue, index) => (\r\n            <Button\r\n              key={multiplierValue}\r\n              scale=\"xs\"\r\n              variant=\"tertiary\"\r\n              onClick={() => setValue(getBalanceAmount(maximumLpCommitable.times(multiplierValue)).toString())}\r\n              mr={index < multiplierValues.length - 1 ? '8px' : 0}\r\n            >\r\n              {multiplierValue * 100}%\r\n            </Button>\r\n          ))}\r\n        </Flex>\r\n        <Text color=\"textSubtle\" fontSize=\"12px\" mb=\"24px\">\r\n          {t(\r\n            'If you donâ€™t commit enough LP tokens, you may not receive any IFO tokens at all and will only receive a full refund of your LP tokens.',\r\n          )}\r\n        </Text>\r\n        <ApproveConfirmButtons\r\n          isApproveDisabled={isConfirmed || isConfirming || isApproved}\r\n          isApproving={isApproving}\r\n          isConfirmDisabled={\r\n            !isApproved || isConfirmed || valueWithTokenDecimals.isNaN() || valueWithTokenDecimals.eq(0)\r\n          }\r\n          isConfirming={isConfirming}\r\n          onApprove={handleApprove}\r\n          onConfirm={handleConfirm}\r\n        />\r\n      </ModalBody>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default ContributeModal\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}