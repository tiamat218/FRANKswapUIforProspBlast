{"ast":null,"code":"import{BetPosition}from'state/types';import{formatNumber}from'utils/formatBalance';export const formatUsd=usd=>{return\"$\".concat(formatNumber(usd||0,3,3));};export const formatBnb=bnb=>{return bnb?bnb.toLocaleString(undefined,{minimumFractionDigits:3,maximumFractionDigits:3}):'0';};export const getMultiplier=(total,amount)=>{if(total===0||amount===0){return 0;}return total/amount;};/**\r\n * Calculates the total payout given a bet\r\n */export const getPayout=function(bet){let rewardRate=arguments.length>1&&arguments[1]!==undefined?arguments[1]:1;if(!bet||!bet.round){return 0;}const{bullAmount,bearAmount,totalAmount}=bet.round;const multiplier=getMultiplier(totalAmount,bet.position===BetPosition.BULL?bullAmount:bearAmount);return bet.amount*multiplier*rewardRate;};export const getNetPayout=function(bet){let rewardRate=arguments.length>1&&arguments[1]!==undefined?arguments[1]:1;if(!bet||!bet.round){return 0;}const payout=getPayout(bet,rewardRate);return payout-bet.amount;};","map":{"version":3,"names":["BetPosition","formatNumber","formatUsd","usd","concat","formatBnb","bnb","toLocaleString","undefined","minimumFractionDigits","maximumFractionDigits","getMultiplier","total","amount","getPayout","bet","rewardRate","arguments","length","round","bullAmount","bearAmount","totalAmount","multiplier","position","BULL","getNetPayout","payout"],"sources":["C:/Users/frkul/Documents/swapUI_pancake-frontend/src/views/Predictions/components/History/helpers.ts"],"sourcesContent":["import { Bet, BetPosition } from 'state/types'\r\nimport { formatNumber } from 'utils/formatBalance'\r\n\r\nexport const formatUsd = (usd: number) => {\r\n  return `$${formatNumber(usd || 0, 3, 3)}`\r\n}\r\n\r\nexport const formatBnb = (bnb: number) => {\r\n  return bnb ? bnb.toLocaleString(undefined, { minimumFractionDigits: 3, maximumFractionDigits: 3 }) : '0'\r\n}\r\n\r\nexport const getMultiplier = (total: number, amount: number) => {\r\n  if (total === 0 || amount === 0) {\r\n    return 0\r\n  }\r\n\r\n  return total / amount\r\n}\r\n\r\n/**\r\n * Calculates the total payout given a bet\r\n */\r\nexport const getPayout = (bet: Bet, rewardRate = 1) => {\r\n  if (!bet || !bet.round) {\r\n    return 0\r\n  }\r\n\r\n  const { bullAmount, bearAmount, totalAmount } = bet.round\r\n  const multiplier = getMultiplier(totalAmount, bet.position === BetPosition.BULL ? bullAmount : bearAmount)\r\n  return bet.amount * multiplier * rewardRate\r\n}\r\n\r\nexport const getNetPayout = (bet: Bet, rewardRate = 1): number => {\r\n  if (!bet || !bet.round) {\r\n    return 0\r\n  }\r\n\r\n  const payout = getPayout(bet, rewardRate)\r\n  return payout - bet.amount\r\n}\r\n"],"mappings":"AAAA,OAAcA,WAAW,KAAQ,aAAa,CAC9C,OAASC,YAAY,KAAQ,qBAAqB,CAElD,MAAO,MAAM,CAAAC,SAAS,CAAIC,GAAW,EAAK,CACxC,UAAAC,MAAA,CAAWH,YAAY,CAACE,GAAG,EAAI,CAAC,CAAE,CAAC,CAAE,CAAC,CAAC,EACzC,CAAC,CAED,MAAO,MAAM,CAAAE,SAAS,CAAIC,GAAW,EAAK,CACxC,MAAO,CAAAA,GAAG,CAAGA,GAAG,CAACC,cAAc,CAACC,SAAS,CAAE,CAAEC,qBAAqB,CAAE,CAAC,CAAEC,qBAAqB,CAAE,CAAE,CAAC,CAAC,CAAG,GAAG,CAC1G,CAAC,CAED,MAAO,MAAM,CAAAC,aAAa,CAAGA,CAACC,KAAa,CAAEC,MAAc,GAAK,CAC9D,GAAID,KAAK,GAAK,CAAC,EAAIC,MAAM,GAAK,CAAC,CAAE,CAC/B,MAAO,EAAC,CACV,CAEA,MAAO,CAAAD,KAAK,CAAGC,MAAM,CACvB,CAAC,CAED;AACA;AACA,GACA,MAAO,MAAM,CAAAC,SAAS,CAAG,QAAAA,CAACC,GAAQ,CAAqB,IAAnB,CAAAC,UAAU,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAT,SAAA,CAAAS,SAAA,IAAG,CAAC,CAChD,GAAI,CAACF,GAAG,EAAI,CAACA,GAAG,CAACI,KAAK,CAAE,CACtB,MAAO,EAAC,CACV,CAEA,KAAM,CAAEC,UAAU,CAAEC,UAAU,CAAEC,WAAY,CAAC,CAAGP,GAAG,CAACI,KAAK,CACzD,KAAM,CAAAI,UAAU,CAAGZ,aAAa,CAACW,WAAW,CAAEP,GAAG,CAACS,QAAQ,GAAKxB,WAAW,CAACyB,IAAI,CAAGL,UAAU,CAAGC,UAAU,CAAC,CAC1G,MAAO,CAAAN,GAAG,CAACF,MAAM,CAAGU,UAAU,CAAGP,UAAU,CAC7C,CAAC,CAED,MAAO,MAAM,CAAAU,YAAY,CAAG,QAAAA,CAACX,GAAQ,CAA6B,IAA3B,CAAAC,UAAU,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAT,SAAA,CAAAS,SAAA,IAAG,CAAC,CACnD,GAAI,CAACF,GAAG,EAAI,CAACA,GAAG,CAACI,KAAK,CAAE,CACtB,MAAO,EAAC,CACV,CAEA,KAAM,CAAAQ,MAAM,CAAGb,SAAS,CAACC,GAAG,CAAEC,UAAU,CAAC,CACzC,MAAO,CAAAW,MAAM,CAAGZ,GAAG,CAACF,MAAM,CAC5B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}