{"ast":null,"code":"import React,{useCallback,useState}from'react';import{BigNumber}from'@ethersproject/bignumber';import{currencyEquals,ETHER,WETH}from'@pancakeswap/sdk';import{Button,Text,Flex,AddIcon,CardBody,Message,useModal}from'@pancakeswap/uikit';import{useIsTransactionUnsupported}from'hooks/Trades';import{useTranslation}from'contexts/Localization';import UnsupportedCurrencyFooter from'components/UnsupportedCurrencyFooter';import useActiveWeb3React from'hooks/useActiveWeb3React';import{LightCard}from'../../components/Card';import{AutoColumn,ColumnCenter}from'../../components/Layout/Column';import TransactionConfirmationModal,{ConfirmationModalContent}from'../../components/TransactionConfirmationModal';import CurrencyInputPanel from'../../components/CurrencyInputPanel';import{DoubleCurrencyLogo}from'../../components/Logo';import{AppHeader,AppBody}from'../../components/App';import{MinimalPositionCard}from'../../components/PositionCard';import Row,{RowBetween}from'../../components/Layout/Row';import ConnectWalletButton from'../../components/ConnectWalletButton';import{ROUTER_ADDRESS}from'../../config/constants';import{PairState}from'../../hooks/usePairs';import{useCurrency}from'../../hooks/Tokens';import{ApprovalState,useApproveCallback}from'../../hooks/useApproveCallback';import useTransactionDeadline from'../../hooks/useTransactionDeadline';import{Field}from'../../state/mint/actions';import{useDerivedMintInfo,useMintActionHandlers,useMintState}from'../../state/mint/hooks';import{useTransactionAdder}from'../../state/transactions/hooks';import{useIsExpertMode,useUserSlippageTolerance}from'../../state/user/hooks';import{calculateGasMargin,calculateSlippageAmount,getRouterContract}from'../../utils';import{maxAmountSpend}from'../../utils/maxAmountSpend';import{wrappedCurrency}from'../../utils/wrappedCurrency';import Dots from'../../components/Loader/Dots';import ConfirmAddModalBottom from'./ConfirmAddModalBottom';import{currencyId}from'../../utils/currencyId';import PoolPriceBar from'./PoolPriceBar';import Page from'../Page';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";export default function AddLiquidity(_ref){var _parsedAmounts$depend,_parsedAmounts$depend2,_parsedAmounts$Field$3,_parsedAmounts$Field$4,_currencies$Field$CUR7,_currencies$Field$CUR8,_parsedAmounts$Field$5,_parsedAmounts$Field$6,_currencies$Field$CUR9,_currencies$Field$CUR10,_currencies$Field$CUR11,_currencies$Field$CUR12,_currencies$Field$CUR13,_currencies$Field$CUR14;let{match:{params:{currencyIdA,currencyIdB}},history}=_ref;const{account,chainId,library}=useActiveWeb3React();const{t}=useTranslation();const currencyA=useCurrency(currencyIdA);const currencyB=useCurrency(currencyIdB);const oneCurrencyIsWETH=Boolean(chainId&&(currencyA&&currencyEquals(currencyA,WETH[chainId])||currencyB&&currencyEquals(currencyB,WETH[chainId])));const expertMode=useIsExpertMode();// mint state\nconst{independentField,typedValue,otherTypedValue}=useMintState();const{dependentField,currencies,pair,pairState,currencyBalances,parsedAmounts,price,noLiquidity,liquidityMinted,poolTokenPercentage,error}=useDerivedMintInfo(currencyA!==null&&currencyA!==void 0?currencyA:undefined,currencyB!==null&&currencyB!==void 0?currencyB:undefined);const{onFieldAInput,onFieldBInput}=useMintActionHandlers(noLiquidity);const isValid=!error;// modal and loading\nconst[attemptingTxn,setAttemptingTxn]=useState(false);// clicked confirm\n// txn values\nconst deadline=useTransactionDeadline();// custom from users settings\nconst[allowedSlippage]=useUserSlippageTolerance();// custom from users\nconst[txHash,setTxHash]=useState('');// get formatted amounts\nconst formattedAmounts={[independentField]:typedValue,[dependentField]:noLiquidity?otherTypedValue:(_parsedAmounts$depend=(_parsedAmounts$depend2=parsedAmounts[dependentField])===null||_parsedAmounts$depend2===void 0?void 0:_parsedAmounts$depend2.toSignificant(6))!==null&&_parsedAmounts$depend!==void 0?_parsedAmounts$depend:''};// get the max amounts user can add\nconst maxAmounts=[Field.CURRENCY_A,Field.CURRENCY_B].reduce((accumulator,field)=>{return{...accumulator,[field]:maxAmountSpend(currencyBalances[field])};},{});const atMaxAmounts=[Field.CURRENCY_A,Field.CURRENCY_B].reduce((accumulator,field)=>{var _maxAmounts$field,_parsedAmounts$field;return{...accumulator,[field]:(_maxAmounts$field=maxAmounts[field])===null||_maxAmounts$field===void 0?void 0:_maxAmounts$field.equalTo((_parsedAmounts$field=parsedAmounts[field])!==null&&_parsedAmounts$field!==void 0?_parsedAmounts$field:'0')};},{});// check whether the user has approved the router on the tokens\nconst[approvalA,approveACallback]=useApproveCallback(parsedAmounts[Field.CURRENCY_A],ROUTER_ADDRESS);const[approvalB,approveBCallback]=useApproveCallback(parsedAmounts[Field.CURRENCY_B],ROUTER_ADDRESS);const addTransaction=useTransactionAdder();async function onAdd(){if(!chainId||!library||!account)return;const router=getRouterContract(chainId,library,account);const{[Field.CURRENCY_A]:parsedAmountA,[Field.CURRENCY_B]:parsedAmountB}=parsedAmounts;if(!parsedAmountA||!parsedAmountB||!currencyA||!currencyB||!deadline){return;}const amountsMin={[Field.CURRENCY_A]:calculateSlippageAmount(parsedAmountA,noLiquidity?0:allowedSlippage)[0],[Field.CURRENCY_B]:calculateSlippageAmount(parsedAmountB,noLiquidity?0:allowedSlippage)[0]};let estimate;let method;let args;let value;if(currencyA===ETHER||currencyB===ETHER){var _wrappedCurrency$addr,_wrappedCurrency;const tokenBIsETH=currencyB===ETHER;estimate=router.estimateGas.addLiquidityETH;method=router.addLiquidityETH;args=[(_wrappedCurrency$addr=(_wrappedCurrency=wrappedCurrency(tokenBIsETH?currencyA:currencyB,chainId))===null||_wrappedCurrency===void 0?void 0:_wrappedCurrency.address)!==null&&_wrappedCurrency$addr!==void 0?_wrappedCurrency$addr:'',// token\n(tokenBIsETH?parsedAmountA:parsedAmountB).raw.toString(),// token desired\namountsMin[tokenBIsETH?Field.CURRENCY_A:Field.CURRENCY_B].toString(),// token min\namountsMin[tokenBIsETH?Field.CURRENCY_B:Field.CURRENCY_A].toString(),// eth min\naccount,deadline.toHexString()];value=BigNumber.from((tokenBIsETH?parsedAmountB:parsedAmountA).raw.toString());}else{var _wrappedCurrency$addr2,_wrappedCurrency2,_wrappedCurrency$addr3,_wrappedCurrency3;estimate=router.estimateGas.addLiquidity;method=router.addLiquidity;args=[(_wrappedCurrency$addr2=(_wrappedCurrency2=wrappedCurrency(currencyA,chainId))===null||_wrappedCurrency2===void 0?void 0:_wrappedCurrency2.address)!==null&&_wrappedCurrency$addr2!==void 0?_wrappedCurrency$addr2:'',(_wrappedCurrency$addr3=(_wrappedCurrency3=wrappedCurrency(currencyB,chainId))===null||_wrappedCurrency3===void 0?void 0:_wrappedCurrency3.address)!==null&&_wrappedCurrency$addr3!==void 0?_wrappedCurrency$addr3:'',parsedAmountA.raw.toString(),parsedAmountB.raw.toString(),amountsMin[Field.CURRENCY_A].toString(),amountsMin[Field.CURRENCY_B].toString(),account,deadline.toHexString()];value=null;}setAttemptingTxn(true);await estimate(...args,value?{value}:{}).then(estimatedGasLimit=>method(...args,{...(value?{value}:{}),gasLimit:calculateGasMargin(estimatedGasLimit)}).then(response=>{var _parsedAmounts$Field$,_currencies$Field$CUR,_parsedAmounts$Field$2,_currencies$Field$CUR2;setAttemptingTxn(false);addTransaction(response,{summary:\"Add \".concat((_parsedAmounts$Field$=parsedAmounts[Field.CURRENCY_A])===null||_parsedAmounts$Field$===void 0?void 0:_parsedAmounts$Field$.toSignificant(3),\" \").concat((_currencies$Field$CUR=currencies[Field.CURRENCY_A])===null||_currencies$Field$CUR===void 0?void 0:_currencies$Field$CUR.symbol,\" and \").concat((_parsedAmounts$Field$2=parsedAmounts[Field.CURRENCY_B])===null||_parsedAmounts$Field$2===void 0?void 0:_parsedAmounts$Field$2.toSignificant(3),\" \").concat((_currencies$Field$CUR2=currencies[Field.CURRENCY_B])===null||_currencies$Field$CUR2===void 0?void 0:_currencies$Field$CUR2.symbol)});setTxHash(response.hash);})).catch(err=>{setAttemptingTxn(false);// we only care if the error is something _other_ than the user rejected the tx\nif((err===null||err===void 0?void 0:err.code)!==4001){console.error(err);}});}const modalHeader=()=>{var _currencies$Field$CUR3,_currencies$Field$CUR4,_currencies$Field$CUR5,_currencies$Field$CUR6;return noLiquidity?/*#__PURE__*/_jsxs(Flex,{alignItems:\"center\",children:[/*#__PURE__*/_jsx(Text,{fontSize:\"48px\",marginRight:\"10px\",children:\"\".concat((_currencies$Field$CUR3=currencies[Field.CURRENCY_A])===null||_currencies$Field$CUR3===void 0?void 0:_currencies$Field$CUR3.symbol,\"/\").concat((_currencies$Field$CUR4=currencies[Field.CURRENCY_B])===null||_currencies$Field$CUR4===void 0?void 0:_currencies$Field$CUR4.symbol)}),/*#__PURE__*/_jsx(DoubleCurrencyLogo,{currency0:currencies[Field.CURRENCY_A],currency1:currencies[Field.CURRENCY_B],size:30})]}):/*#__PURE__*/_jsxs(AutoColumn,{children:[/*#__PURE__*/_jsxs(Flex,{alignItems:\"center\",children:[/*#__PURE__*/_jsx(Text,{fontSize:\"48px\",marginRight:\"10px\",children:liquidityMinted===null||liquidityMinted===void 0?void 0:liquidityMinted.toSignificant(6)}),/*#__PURE__*/_jsx(DoubleCurrencyLogo,{currency0:currencies[Field.CURRENCY_A],currency1:currencies[Field.CURRENCY_B],size:30})]}),/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsx(Text,{fontSize:\"24px\",children:\"\".concat((_currencies$Field$CUR5=currencies[Field.CURRENCY_A])===null||_currencies$Field$CUR5===void 0?void 0:_currencies$Field$CUR5.symbol,\"/\").concat((_currencies$Field$CUR6=currencies[Field.CURRENCY_B])===null||_currencies$Field$CUR6===void 0?void 0:_currencies$Field$CUR6.symbol,\" Pool Tokens\")})}),/*#__PURE__*/_jsx(Text,{small:true,textAlign:\"left\",my:\"24px\",children:t('Output is estimated. If the price changes by more than %slippage%% your transaction will revert.',{slippage:allowedSlippage/100})})]});};const modalBottom=()=>{return/*#__PURE__*/_jsx(ConfirmAddModalBottom,{price:price,currencies:currencies,parsedAmounts:parsedAmounts,noLiquidity:noLiquidity,onAdd:onAdd,poolTokenPercentage:poolTokenPercentage});};const pendingText=t('Supplying %amountA% %symbolA% and %amountB% %symbolB%',{amountA:(_parsedAmounts$Field$3=(_parsedAmounts$Field$4=parsedAmounts[Field.CURRENCY_A])===null||_parsedAmounts$Field$4===void 0?void 0:_parsedAmounts$Field$4.toSignificant(6))!==null&&_parsedAmounts$Field$3!==void 0?_parsedAmounts$Field$3:'',symbolA:(_currencies$Field$CUR7=(_currencies$Field$CUR8=currencies[Field.CURRENCY_A])===null||_currencies$Field$CUR8===void 0?void 0:_currencies$Field$CUR8.symbol)!==null&&_currencies$Field$CUR7!==void 0?_currencies$Field$CUR7:'',amountB:(_parsedAmounts$Field$5=(_parsedAmounts$Field$6=parsedAmounts[Field.CURRENCY_B])===null||_parsedAmounts$Field$6===void 0?void 0:_parsedAmounts$Field$6.toSignificant(6))!==null&&_parsedAmounts$Field$5!==void 0?_parsedAmounts$Field$5:'',symbolB:(_currencies$Field$CUR9=(_currencies$Field$CUR10=currencies[Field.CURRENCY_B])===null||_currencies$Field$CUR10===void 0?void 0:_currencies$Field$CUR10.symbol)!==null&&_currencies$Field$CUR9!==void 0?_currencies$Field$CUR9:''});const handleCurrencyASelect=useCallback(currencyA_=>{const newCurrencyIdA=currencyId(currencyA_);if(newCurrencyIdA===currencyIdB){history.push(\"/add/\".concat(currencyIdB,\"/\").concat(currencyIdA));}else{history.push(\"/add/\".concat(newCurrencyIdA,\"/\").concat(currencyIdB));}},[currencyIdB,history,currencyIdA]);const handleCurrencyBSelect=useCallback(currencyB_=>{const newCurrencyIdB=currencyId(currencyB_);if(currencyIdA===newCurrencyIdB){if(currencyIdB){history.push(\"/add/\".concat(currencyIdB,\"/\").concat(newCurrencyIdB));}else{history.push(\"/add/\".concat(newCurrencyIdB));}}else{history.push(\"/add/\".concat(currencyIdA||'BNB',\"/\").concat(newCurrencyIdB));}},[currencyIdA,history,currencyIdB]);const handleDismissConfirmation=useCallback(()=>{// if there was a tx hash, we want to clear the input\nif(txHash){onFieldAInput('');}setTxHash('');},[onFieldAInput,txHash]);const addIsUnsupported=useIsTransactionUnsupported(currencies===null||currencies===void 0?void 0:currencies.CURRENCY_A,currencies===null||currencies===void 0?void 0:currencies.CURRENCY_B);const[onPresentAddLiquidityModal]=useModal(/*#__PURE__*/_jsx(TransactionConfirmationModal,{title:noLiquidity?t('You are creating a pool'):t('You will receive'),customOnDismiss:handleDismissConfirmation,attemptingTxn:attemptingTxn,hash:txHash,content:()=>/*#__PURE__*/_jsx(ConfirmationModalContent,{topContent:modalHeader,bottomContent:modalBottom}),pendingText:pendingText,currencyToAdd:pair===null||pair===void 0?void 0:pair.liquidityToken}),true,true,'addLiquidityModal');return/*#__PURE__*/_jsxs(Page,{children:[/*#__PURE__*/_jsxs(AppBody,{children:[/*#__PURE__*/_jsx(AppHeader,{title:t('Add Liquidity'),subtitle:t('Add liquidity to receive LP tokens'),helper:t('Liquidity providers earn a 0.17% trading fee on all trades made for that token pair, proportional to their share of the liquidity pool.'),backTo:\"/pool\"}),/*#__PURE__*/_jsx(CardBody,{children:/*#__PURE__*/_jsxs(AutoColumn,{gap:\"20px\",children:[noLiquidity&&/*#__PURE__*/_jsx(ColumnCenter,{children:/*#__PURE__*/_jsx(Message,{variant:\"warning\",children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Text,{bold:true,mb:\"8px\",children:t('You are the first liquidity provider.')}),/*#__PURE__*/_jsx(Text,{mb:\"8px\",children:t('The ratio of tokens you add will set the price of this pool.')}),/*#__PURE__*/_jsx(Text,{children:t('Once you are happy with the rate click supply to review.')})]})})}),/*#__PURE__*/_jsx(CurrencyInputPanel,{value:formattedAmounts[Field.CURRENCY_A],onUserInput:onFieldAInput,onMax:()=>{var _maxAmounts$Field$CUR,_maxAmounts$Field$CUR2;onFieldAInput((_maxAmounts$Field$CUR=(_maxAmounts$Field$CUR2=maxAmounts[Field.CURRENCY_A])===null||_maxAmounts$Field$CUR2===void 0?void 0:_maxAmounts$Field$CUR2.toExact())!==null&&_maxAmounts$Field$CUR!==void 0?_maxAmounts$Field$CUR:'');},onCurrencySelect:handleCurrencyASelect,showMaxButton:!atMaxAmounts[Field.CURRENCY_A],currency:currencies[Field.CURRENCY_A],id:\"add-liquidity-input-tokena\",showCommonBases:true}),/*#__PURE__*/_jsx(ColumnCenter,{children:/*#__PURE__*/_jsx(AddIcon,{width:\"16px\"})}),/*#__PURE__*/_jsx(CurrencyInputPanel,{value:formattedAmounts[Field.CURRENCY_B],onUserInput:onFieldBInput,onCurrencySelect:handleCurrencyBSelect,onMax:()=>{var _maxAmounts$Field$CUR3,_maxAmounts$Field$CUR4;onFieldBInput((_maxAmounts$Field$CUR3=(_maxAmounts$Field$CUR4=maxAmounts[Field.CURRENCY_B])===null||_maxAmounts$Field$CUR4===void 0?void 0:_maxAmounts$Field$CUR4.toExact())!==null&&_maxAmounts$Field$CUR3!==void 0?_maxAmounts$Field$CUR3:'');},showMaxButton:!atMaxAmounts[Field.CURRENCY_B],currency:currencies[Field.CURRENCY_B],id:\"add-liquidity-input-tokenb\",showCommonBases:true}),currencies[Field.CURRENCY_A]&&currencies[Field.CURRENCY_B]&&pairState!==PairState.INVALID&&/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(LightCard,{padding:\"0px\",borderRadius:\"20px\",children:[/*#__PURE__*/_jsx(RowBetween,{padding:\"1rem\",children:/*#__PURE__*/_jsx(Text,{fontSize:\"14px\",children:noLiquidity?t('Initial prices and pool share'):t('Prices and pool share')})}),' ',/*#__PURE__*/_jsx(LightCard,{padding:\"1rem\",borderRadius:\"20px\",children:/*#__PURE__*/_jsx(PoolPriceBar,{currencies:currencies,poolTokenPercentage:poolTokenPercentage,noLiquidity:noLiquidity,price:price})})]})}),addIsUnsupported?/*#__PURE__*/_jsx(Button,{disabled:true,mb:\"4px\",children:t('Unsupported Asset')}):!account?/*#__PURE__*/_jsx(ConnectWalletButton,{}):/*#__PURE__*/_jsxs(AutoColumn,{gap:\"md\",children:[(approvalA===ApprovalState.NOT_APPROVED||approvalA===ApprovalState.PENDING||approvalB===ApprovalState.NOT_APPROVED||approvalB===ApprovalState.PENDING)&&isValid&&/*#__PURE__*/_jsxs(RowBetween,{children:[approvalA!==ApprovalState.APPROVED&&/*#__PURE__*/_jsx(Button,{onClick:approveACallback,disabled:approvalA===ApprovalState.PENDING,width:approvalB!==ApprovalState.APPROVED?'48%':'100%',children:approvalA===ApprovalState.PENDING?/*#__PURE__*/_jsx(Dots,{children:t('Enabling %asset%',{asset:(_currencies$Field$CUR11=currencies[Field.CURRENCY_A])===null||_currencies$Field$CUR11===void 0?void 0:_currencies$Field$CUR11.symbol})}):t('Enable %asset%',{asset:(_currencies$Field$CUR12=currencies[Field.CURRENCY_A])===null||_currencies$Field$CUR12===void 0?void 0:_currencies$Field$CUR12.symbol})}),approvalB!==ApprovalState.APPROVED&&/*#__PURE__*/_jsx(Button,{onClick:approveBCallback,disabled:approvalB===ApprovalState.PENDING,width:approvalA!==ApprovalState.APPROVED?'48%':'100%',children:approvalB===ApprovalState.PENDING?/*#__PURE__*/_jsx(Dots,{children:t('Enabling %asset%',{asset:(_currencies$Field$CUR13=currencies[Field.CURRENCY_B])===null||_currencies$Field$CUR13===void 0?void 0:_currencies$Field$CUR13.symbol})}):t('Enable %asset%',{asset:(_currencies$Field$CUR14=currencies[Field.CURRENCY_B])===null||_currencies$Field$CUR14===void 0?void 0:_currencies$Field$CUR14.symbol})})]}),/*#__PURE__*/_jsx(Button,{variant:!isValid&&!!parsedAmounts[Field.CURRENCY_A]&&!!parsedAmounts[Field.CURRENCY_B]?'danger':'primary',onClick:()=>{if(expertMode){onAdd();}else{onPresentAddLiquidityModal();}},disabled:!isValid||approvalA!==ApprovalState.APPROVED||approvalB!==ApprovalState.APPROVED,children:error!==null&&error!==void 0?error:t('Supply')})]})]})})]}),!addIsUnsupported?pair&&!noLiquidity&&pairState!==PairState.INVALID?/*#__PURE__*/_jsx(AutoColumn,{style:{minWidth:'20rem',width:'100%',maxWidth:'400px',marginTop:'1rem'},children:/*#__PURE__*/_jsx(MinimalPositionCard,{showUnwrapped:oneCurrencyIsWETH,pair:pair})}):null:/*#__PURE__*/_jsx(UnsupportedCurrencyFooter,{currencies:[currencies.CURRENCY_A,currencies.CURRENCY_B]})]});}","map":{"version":3,"names":["React","useCallback","useState","BigNumber","currencyEquals","ETHER","WETH","Button","Text","Flex","AddIcon","CardBody","Message","useModal","useIsTransactionUnsupported","useTranslation","UnsupportedCurrencyFooter","useActiveWeb3React","LightCard","AutoColumn","ColumnCenter","TransactionConfirmationModal","ConfirmationModalContent","CurrencyInputPanel","DoubleCurrencyLogo","AppHeader","AppBody","MinimalPositionCard","Row","RowBetween","ConnectWalletButton","ROUTER_ADDRESS","PairState","useCurrency","ApprovalState","useApproveCallback","useTransactionDeadline","Field","useDerivedMintInfo","useMintActionHandlers","useMintState","useTransactionAdder","useIsExpertMode","useUserSlippageTolerance","calculateGasMargin","calculateSlippageAmount","getRouterContract","maxAmountSpend","wrappedCurrency","Dots","ConfirmAddModalBottom","currencyId","PoolPriceBar","Page","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","AddLiquidity","_ref","_parsedAmounts$depend","_parsedAmounts$depend2","_parsedAmounts$Field$3","_parsedAmounts$Field$4","_currencies$Field$CUR7","_currencies$Field$CUR8","_parsedAmounts$Field$5","_parsedAmounts$Field$6","_currencies$Field$CUR9","_currencies$Field$CUR10","_currencies$Field$CUR11","_currencies$Field$CUR12","_currencies$Field$CUR13","_currencies$Field$CUR14","match","params","currencyIdA","currencyIdB","history","account","chainId","library","t","currencyA","currencyB","oneCurrencyIsWETH","Boolean","expertMode","independentField","typedValue","otherTypedValue","dependentField","currencies","pair","pairState","currencyBalances","parsedAmounts","price","noLiquidity","liquidityMinted","poolTokenPercentage","error","undefined","onFieldAInput","onFieldBInput","isValid","attemptingTxn","setAttemptingTxn","deadline","allowedSlippage","txHash","setTxHash","formattedAmounts","toSignificant","maxAmounts","CURRENCY_A","CURRENCY_B","reduce","accumulator","field","atMaxAmounts","_maxAmounts$field","_parsedAmounts$field","equalTo","approvalA","approveACallback","approvalB","approveBCallback","addTransaction","onAdd","router","parsedAmountA","parsedAmountB","amountsMin","estimate","method","args","value","_wrappedCurrency$addr","_wrappedCurrency","tokenBIsETH","estimateGas","addLiquidityETH","address","raw","toString","toHexString","from","_wrappedCurrency$addr2","_wrappedCurrency2","_wrappedCurrency$addr3","_wrappedCurrency3","addLiquidity","then","estimatedGasLimit","gasLimit","response","_parsedAmounts$Field$","_currencies$Field$CUR","_parsedAmounts$Field$2","_currencies$Field$CUR2","summary","concat","symbol","hash","catch","err","code","console","modalHeader","_currencies$Field$CUR3","_currencies$Field$CUR4","_currencies$Field$CUR5","_currencies$Field$CUR6","alignItems","children","fontSize","marginRight","currency0","currency1","size","small","textAlign","my","slippage","modalBottom","pendingText","amountA","symbolA","amountB","symbolB","handleCurrencyASelect","currencyA_","newCurrencyIdA","push","handleCurrencyBSelect","currencyB_","newCurrencyIdB","handleDismissConfirmation","addIsUnsupported","onPresentAddLiquidityModal","title","customOnDismiss","content","topContent","bottomContent","currencyToAdd","liquidityToken","subtitle","helper","backTo","gap","variant","bold","mb","onUserInput","onMax","_maxAmounts$Field$CUR","_maxAmounts$Field$CUR2","toExact","onCurrencySelect","showMaxButton","currency","id","showCommonBases","width","_maxAmounts$Field$CUR3","_maxAmounts$Field$CUR4","INVALID","padding","borderRadius","disabled","NOT_APPROVED","PENDING","APPROVED","onClick","asset","style","minWidth","maxWidth","marginTop","showUnwrapped"],"sources":["C:/Users/frkul/Documents/swapUI_pancake-frontend/src/views/AddLiquidity/index.tsx"],"sourcesContent":["import React, { useCallback, useState } from 'react'\r\nimport { BigNumber } from '@ethersproject/bignumber'\r\nimport { TransactionResponse } from '@ethersproject/providers'\r\nimport { Currency, currencyEquals, ETHER, TokenAmount, WETH } from '@pancakeswap/sdk'\r\nimport { Button, Text, Flex, AddIcon, CardBody, Message, useModal } from '@pancakeswap/uikit'\r\nimport { RouteComponentProps } from 'react-router-dom'\r\nimport { useIsTransactionUnsupported } from 'hooks/Trades'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport UnsupportedCurrencyFooter from 'components/UnsupportedCurrencyFooter'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport { LightCard } from '../../components/Card'\r\nimport { AutoColumn, ColumnCenter } from '../../components/Layout/Column'\r\nimport TransactionConfirmationModal, { ConfirmationModalContent } from '../../components/TransactionConfirmationModal'\r\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel'\r\nimport { DoubleCurrencyLogo } from '../../components/Logo'\r\nimport { AppHeader, AppBody } from '../../components/App'\r\nimport { MinimalPositionCard } from '../../components/PositionCard'\r\nimport Row, { RowBetween } from '../../components/Layout/Row'\r\nimport ConnectWalletButton from '../../components/ConnectWalletButton'\r\n\r\nimport { ROUTER_ADDRESS } from '../../config/constants'\r\nimport { PairState } from '../../hooks/usePairs'\r\nimport { useCurrency } from '../../hooks/Tokens'\r\nimport { ApprovalState, useApproveCallback } from '../../hooks/useApproveCallback'\r\nimport useTransactionDeadline from '../../hooks/useTransactionDeadline'\r\nimport { Field } from '../../state/mint/actions'\r\nimport { useDerivedMintInfo, useMintActionHandlers, useMintState } from '../../state/mint/hooks'\r\n\r\nimport { useTransactionAdder } from '../../state/transactions/hooks'\r\nimport { useIsExpertMode, useUserSlippageTolerance } from '../../state/user/hooks'\r\nimport { calculateGasMargin, calculateSlippageAmount, getRouterContract } from '../../utils'\r\nimport { maxAmountSpend } from '../../utils/maxAmountSpend'\r\nimport { wrappedCurrency } from '../../utils/wrappedCurrency'\r\nimport Dots from '../../components/Loader/Dots'\r\nimport ConfirmAddModalBottom from './ConfirmAddModalBottom'\r\nimport { currencyId } from '../../utils/currencyId'\r\nimport PoolPriceBar from './PoolPriceBar'\r\nimport Page from '../Page'\r\n\r\nexport default function AddLiquidity({\r\n  match: {\r\n    params: { currencyIdA, currencyIdB },\r\n  },\r\n  history,\r\n}: RouteComponentProps<{ currencyIdA?: string; currencyIdB?: string }>) {\r\n  const { account, chainId, library } = useActiveWeb3React()\r\n  const { t } = useTranslation()\r\n\r\n  const currencyA = useCurrency(currencyIdA)\r\n  const currencyB = useCurrency(currencyIdB)\r\n\r\n  const oneCurrencyIsWETH = Boolean(\r\n    chainId &&\r\n      ((currencyA && currencyEquals(currencyA, WETH[chainId])) ||\r\n        (currencyB && currencyEquals(currencyB, WETH[chainId]))),\r\n  )\r\n\r\n  const expertMode = useIsExpertMode()\r\n\r\n  // mint state\r\n  const { independentField, typedValue, otherTypedValue } = useMintState()\r\n  const {\r\n    dependentField,\r\n    currencies,\r\n    pair,\r\n    pairState,\r\n    currencyBalances,\r\n    parsedAmounts,\r\n    price,\r\n    noLiquidity,\r\n    liquidityMinted,\r\n    poolTokenPercentage,\r\n    error,\r\n  } = useDerivedMintInfo(currencyA ?? undefined, currencyB ?? undefined)\r\n\r\n  const { onFieldAInput, onFieldBInput } = useMintActionHandlers(noLiquidity)\r\n\r\n  const isValid = !error\r\n\r\n  // modal and loading\r\n  const [attemptingTxn, setAttemptingTxn] = useState<boolean>(false) // clicked confirm\r\n\r\n  // txn values\r\n  const deadline = useTransactionDeadline() // custom from users settings\r\n  const [allowedSlippage] = useUserSlippageTolerance() // custom from users\r\n  const [txHash, setTxHash] = useState<string>('')\r\n\r\n  // get formatted amounts\r\n  const formattedAmounts = {\r\n    [independentField]: typedValue,\r\n    [dependentField]: noLiquidity ? otherTypedValue : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\r\n  }\r\n\r\n  // get the max amounts user can add\r\n  const maxAmounts: { [field in Field]?: TokenAmount } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\r\n    (accumulator, field) => {\r\n      return {\r\n        ...accumulator,\r\n        [field]: maxAmountSpend(currencyBalances[field]),\r\n      }\r\n    },\r\n    {},\r\n  )\r\n\r\n  const atMaxAmounts: { [field in Field]?: TokenAmount } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\r\n    (accumulator, field) => {\r\n      return {\r\n        ...accumulator,\r\n        [field]: maxAmounts[field]?.equalTo(parsedAmounts[field] ?? '0'),\r\n      }\r\n    },\r\n    {},\r\n  )\r\n\r\n  // check whether the user has approved the router on the tokens\r\n  const [approvalA, approveACallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_A], ROUTER_ADDRESS)\r\n  const [approvalB, approveBCallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_B], ROUTER_ADDRESS)\r\n\r\n  const addTransaction = useTransactionAdder()\r\n\r\n  async function onAdd() {\r\n    if (!chainId || !library || !account) return\r\n    const router = getRouterContract(chainId, library, account)\r\n\r\n    const { [Field.CURRENCY_A]: parsedAmountA, [Field.CURRENCY_B]: parsedAmountB } = parsedAmounts\r\n    if (!parsedAmountA || !parsedAmountB || !currencyA || !currencyB || !deadline) {\r\n      return\r\n    }\r\n\r\n    const amountsMin = {\r\n      [Field.CURRENCY_A]: calculateSlippageAmount(parsedAmountA, noLiquidity ? 0 : allowedSlippage)[0],\r\n      [Field.CURRENCY_B]: calculateSlippageAmount(parsedAmountB, noLiquidity ? 0 : allowedSlippage)[0],\r\n    }\r\n\r\n    let estimate\r\n    let method: (...args: any) => Promise<TransactionResponse>\r\n    let args: Array<string | string[] | number>\r\n    let value: BigNumber | null\r\n    if (currencyA === ETHER || currencyB === ETHER) {\r\n      const tokenBIsETH = currencyB === ETHER\r\n      estimate = router.estimateGas.addLiquidityETH\r\n      method = router.addLiquidityETH\r\n      args = [\r\n        wrappedCurrency(tokenBIsETH ? currencyA : currencyB, chainId)?.address ?? '', // token\r\n        (tokenBIsETH ? parsedAmountA : parsedAmountB).raw.toString(), // token desired\r\n        amountsMin[tokenBIsETH ? Field.CURRENCY_A : Field.CURRENCY_B].toString(), // token min\r\n        amountsMin[tokenBIsETH ? Field.CURRENCY_B : Field.CURRENCY_A].toString(), // eth min\r\n        account,\r\n        deadline.toHexString(),\r\n      ]\r\n      value = BigNumber.from((tokenBIsETH ? parsedAmountB : parsedAmountA).raw.toString())\r\n    } else {\r\n      estimate = router.estimateGas.addLiquidity\r\n      method = router.addLiquidity\r\n      args = [\r\n        wrappedCurrency(currencyA, chainId)?.address ?? '',\r\n        wrappedCurrency(currencyB, chainId)?.address ?? '',\r\n        parsedAmountA.raw.toString(),\r\n        parsedAmountB.raw.toString(),\r\n        amountsMin[Field.CURRENCY_A].toString(),\r\n        amountsMin[Field.CURRENCY_B].toString(),\r\n        account,\r\n        deadline.toHexString(),\r\n      ]\r\n      value = null\r\n    }\r\n\r\n    setAttemptingTxn(true)\r\n    await estimate(...args, value ? { value } : {})\r\n      .then((estimatedGasLimit) =>\r\n        method(...args, {\r\n          ...(value ? { value } : {}),\r\n          gasLimit: calculateGasMargin(estimatedGasLimit),\r\n        }).then((response) => {\r\n          setAttemptingTxn(false)\r\n\r\n          addTransaction(response, {\r\n            summary: `Add ${parsedAmounts[Field.CURRENCY_A]?.toSignificant(3)} ${\r\n              currencies[Field.CURRENCY_A]?.symbol\r\n            } and ${parsedAmounts[Field.CURRENCY_B]?.toSignificant(3)} ${currencies[Field.CURRENCY_B]?.symbol}`,\r\n          })\r\n\r\n          setTxHash(response.hash)\r\n        }),\r\n      )\r\n      .catch((err) => {\r\n        setAttemptingTxn(false)\r\n        // we only care if the error is something _other_ than the user rejected the tx\r\n        if (err?.code !== 4001) {\r\n          console.error(err)\r\n        }\r\n      })\r\n  }\r\n\r\n  const modalHeader = () => {\r\n    return noLiquidity ? (\r\n      <Flex alignItems=\"center\">\r\n        <Text fontSize=\"48px\" marginRight=\"10px\">\r\n          {`${currencies[Field.CURRENCY_A]?.symbol}/${currencies[Field.CURRENCY_B]?.symbol}`}\r\n        </Text>\r\n        <DoubleCurrencyLogo\r\n          currency0={currencies[Field.CURRENCY_A]}\r\n          currency1={currencies[Field.CURRENCY_B]}\r\n          size={30}\r\n        />\r\n      </Flex>\r\n    ) : (\r\n      <AutoColumn>\r\n        <Flex alignItems=\"center\">\r\n          <Text fontSize=\"48px\" marginRight=\"10px\">\r\n            {liquidityMinted?.toSignificant(6)}\r\n          </Text>\r\n          <DoubleCurrencyLogo\r\n            currency0={currencies[Field.CURRENCY_A]}\r\n            currency1={currencies[Field.CURRENCY_B]}\r\n            size={30}\r\n          />\r\n        </Flex>\r\n        <Row>\r\n          <Text fontSize=\"24px\">\r\n            {`${currencies[Field.CURRENCY_A]?.symbol}/${currencies[Field.CURRENCY_B]?.symbol} Pool Tokens`}\r\n          </Text>\r\n        </Row>\r\n        <Text small textAlign=\"left\" my=\"24px\">\r\n          {t('Output is estimated. If the price changes by more than %slippage%% your transaction will revert.', {\r\n            slippage: allowedSlippage / 100,\r\n          })}\r\n        </Text>\r\n      </AutoColumn>\r\n    )\r\n  }\r\n\r\n  const modalBottom = () => {\r\n    return (\r\n      <ConfirmAddModalBottom\r\n        price={price}\r\n        currencies={currencies}\r\n        parsedAmounts={parsedAmounts}\r\n        noLiquidity={noLiquidity}\r\n        onAdd={onAdd}\r\n        poolTokenPercentage={poolTokenPercentage}\r\n      />\r\n    )\r\n  }\r\n\r\n  const pendingText = t('Supplying %amountA% %symbolA% and %amountB% %symbolB%', {\r\n    amountA: parsedAmounts[Field.CURRENCY_A]?.toSignificant(6) ?? '',\r\n    symbolA: currencies[Field.CURRENCY_A]?.symbol ?? '',\r\n    amountB: parsedAmounts[Field.CURRENCY_B]?.toSignificant(6) ?? '',\r\n    symbolB: currencies[Field.CURRENCY_B]?.symbol ?? '',\r\n  })\r\n\r\n  const handleCurrencyASelect = useCallback(\r\n    (currencyA_: Currency) => {\r\n      const newCurrencyIdA = currencyId(currencyA_)\r\n      if (newCurrencyIdA === currencyIdB) {\r\n        history.push(`/add/${currencyIdB}/${currencyIdA}`)\r\n      } else {\r\n        history.push(`/add/${newCurrencyIdA}/${currencyIdB}`)\r\n      }\r\n    },\r\n    [currencyIdB, history, currencyIdA],\r\n  )\r\n  const handleCurrencyBSelect = useCallback(\r\n    (currencyB_: Currency) => {\r\n      const newCurrencyIdB = currencyId(currencyB_)\r\n      if (currencyIdA === newCurrencyIdB) {\r\n        if (currencyIdB) {\r\n          history.push(`/add/${currencyIdB}/${newCurrencyIdB}`)\r\n        } else {\r\n          history.push(`/add/${newCurrencyIdB}`)\r\n        }\r\n      } else {\r\n        history.push(`/add/${currencyIdA || 'BNB'}/${newCurrencyIdB}`)\r\n      }\r\n    },\r\n    [currencyIdA, history, currencyIdB],\r\n  )\r\n\r\n  const handleDismissConfirmation = useCallback(() => {\r\n    // if there was a tx hash, we want to clear the input\r\n    if (txHash) {\r\n      onFieldAInput('')\r\n    }\r\n    setTxHash('')\r\n  }, [onFieldAInput, txHash])\r\n\r\n  const addIsUnsupported = useIsTransactionUnsupported(currencies?.CURRENCY_A, currencies?.CURRENCY_B)\r\n\r\n  const [onPresentAddLiquidityModal] = useModal(\r\n    <TransactionConfirmationModal\r\n      title={noLiquidity ? t('You are creating a pool') : t('You will receive')}\r\n      customOnDismiss={handleDismissConfirmation}\r\n      attemptingTxn={attemptingTxn}\r\n      hash={txHash}\r\n      content={() => <ConfirmationModalContent topContent={modalHeader} bottomContent={modalBottom} />}\r\n      pendingText={pendingText}\r\n      currencyToAdd={pair?.liquidityToken}\r\n    />,\r\n    true,\r\n    true,\r\n    'addLiquidityModal',\r\n  )\r\n\r\n  return (\r\n    <Page>\r\n      <AppBody>\r\n        <AppHeader\r\n          title={t('Add Liquidity')}\r\n          subtitle={t('Add liquidity to receive LP tokens')}\r\n          helper={t(\r\n            'Liquidity providers earn a 0.17% trading fee on all trades made for that token pair, proportional to their share of the liquidity pool.',\r\n          )}\r\n          backTo=\"/pool\"\r\n        />\r\n        <CardBody>\r\n          <AutoColumn gap=\"20px\">\r\n            {noLiquidity && (\r\n              <ColumnCenter>\r\n                <Message variant=\"warning\">\r\n                  <div>\r\n                    <Text bold mb=\"8px\">\r\n                      {t('You are the first liquidity provider.')}\r\n                    </Text>\r\n                    <Text mb=\"8px\">{t('The ratio of tokens you add will set the price of this pool.')}</Text>\r\n                    <Text>{t('Once you are happy with the rate click supply to review.')}</Text>\r\n                  </div>\r\n                </Message>\r\n              </ColumnCenter>\r\n            )}\r\n            <CurrencyInputPanel\r\n              value={formattedAmounts[Field.CURRENCY_A]}\r\n              onUserInput={onFieldAInput}\r\n              onMax={() => {\r\n                onFieldAInput(maxAmounts[Field.CURRENCY_A]?.toExact() ?? '')\r\n              }}\r\n              onCurrencySelect={handleCurrencyASelect}\r\n              showMaxButton={!atMaxAmounts[Field.CURRENCY_A]}\r\n              currency={currencies[Field.CURRENCY_A]}\r\n              id=\"add-liquidity-input-tokena\"\r\n              showCommonBases\r\n            />\r\n            <ColumnCenter>\r\n              <AddIcon width=\"16px\" />\r\n            </ColumnCenter>\r\n            <CurrencyInputPanel\r\n              value={formattedAmounts[Field.CURRENCY_B]}\r\n              onUserInput={onFieldBInput}\r\n              onCurrencySelect={handleCurrencyBSelect}\r\n              onMax={() => {\r\n                onFieldBInput(maxAmounts[Field.CURRENCY_B]?.toExact() ?? '')\r\n              }}\r\n              showMaxButton={!atMaxAmounts[Field.CURRENCY_B]}\r\n              currency={currencies[Field.CURRENCY_B]}\r\n              id=\"add-liquidity-input-tokenb\"\r\n              showCommonBases\r\n            />\r\n            {currencies[Field.CURRENCY_A] && currencies[Field.CURRENCY_B] && pairState !== PairState.INVALID && (\r\n              <>\r\n                <LightCard padding=\"0px\" borderRadius=\"20px\">\r\n                  <RowBetween padding=\"1rem\">\r\n                    <Text fontSize=\"14px\">\r\n                      {noLiquidity ? t('Initial prices and pool share') : t('Prices and pool share')}\r\n                    </Text>\r\n                  </RowBetween>{' '}\r\n                  <LightCard padding=\"1rem\" borderRadius=\"20px\">\r\n                    <PoolPriceBar\r\n                      currencies={currencies}\r\n                      poolTokenPercentage={poolTokenPercentage}\r\n                      noLiquidity={noLiquidity}\r\n                      price={price}\r\n                    />\r\n                  </LightCard>\r\n                </LightCard>\r\n              </>\r\n            )}\r\n\r\n            {addIsUnsupported ? (\r\n              <Button disabled mb=\"4px\">\r\n                {t('Unsupported Asset')}\r\n              </Button>\r\n            ) : !account ? (\r\n              <ConnectWalletButton />\r\n            ) : (\r\n              <AutoColumn gap=\"md\">\r\n                {(approvalA === ApprovalState.NOT_APPROVED ||\r\n                  approvalA === ApprovalState.PENDING ||\r\n                  approvalB === ApprovalState.NOT_APPROVED ||\r\n                  approvalB === ApprovalState.PENDING) &&\r\n                  isValid && (\r\n                    <RowBetween>\r\n                      {approvalA !== ApprovalState.APPROVED && (\r\n                        <Button\r\n                          onClick={approveACallback}\r\n                          disabled={approvalA === ApprovalState.PENDING}\r\n                          width={approvalB !== ApprovalState.APPROVED ? '48%' : '100%'}\r\n                        >\r\n                          {approvalA === ApprovalState.PENDING ? (\r\n                            <Dots>{t('Enabling %asset%', { asset: currencies[Field.CURRENCY_A]?.symbol })}</Dots>\r\n                          ) : (\r\n                            t('Enable %asset%', { asset: currencies[Field.CURRENCY_A]?.symbol })\r\n                          )}\r\n                        </Button>\r\n                      )}\r\n                      {approvalB !== ApprovalState.APPROVED && (\r\n                        <Button\r\n                          onClick={approveBCallback}\r\n                          disabled={approvalB === ApprovalState.PENDING}\r\n                          width={approvalA !== ApprovalState.APPROVED ? '48%' : '100%'}\r\n                        >\r\n                          {approvalB === ApprovalState.PENDING ? (\r\n                            <Dots>{t('Enabling %asset%', { asset: currencies[Field.CURRENCY_B]?.symbol })}</Dots>\r\n                          ) : (\r\n                            t('Enable %asset%', { asset: currencies[Field.CURRENCY_B]?.symbol })\r\n                          )}\r\n                        </Button>\r\n                      )}\r\n                    </RowBetween>\r\n                  )}\r\n                <Button\r\n                  variant={\r\n                    !isValid && !!parsedAmounts[Field.CURRENCY_A] && !!parsedAmounts[Field.CURRENCY_B]\r\n                      ? 'danger'\r\n                      : 'primary'\r\n                  }\r\n                  onClick={() => {\r\n                    if (expertMode) {\r\n                      onAdd()\r\n                    } else {\r\n                      onPresentAddLiquidityModal()\r\n                    }\r\n                  }}\r\n                  disabled={!isValid || approvalA !== ApprovalState.APPROVED || approvalB !== ApprovalState.APPROVED}\r\n                >\r\n                  {error ?? t('Supply')}\r\n                </Button>\r\n              </AutoColumn>\r\n            )}\r\n          </AutoColumn>\r\n        </CardBody>\r\n      </AppBody>\r\n      {!addIsUnsupported ? (\r\n        pair && !noLiquidity && pairState !== PairState.INVALID ? (\r\n          <AutoColumn style={{ minWidth: '20rem', width: '100%', maxWidth: '400px', marginTop: '1rem' }}>\r\n            <MinimalPositionCard showUnwrapped={oneCurrencyIsWETH} pair={pair} />\r\n          </AutoColumn>\r\n        ) : null\r\n      ) : (\r\n        <UnsupportedCurrencyFooter currencies={[currencies.CURRENCY_A, currencies.CURRENCY_B]} />\r\n      )}\r\n    </Page>\r\n  )\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}