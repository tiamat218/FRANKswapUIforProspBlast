{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Devrim\\\\Documents\\\\swapUIforProspBlast\\\\src\\\\views\\\\TradingCompetition\\\\index.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useTranslation } from 'contexts/Localization';\nimport { useWeb3React } from '@web3-react/core';\nimport { useProfile } from 'state/profile/hooks';\nimport { Flex, Box, Image } from '@pancakeswap/uikit';\nimport styled from 'styled-components';\nimport { useTradingCompetitionContract } from 'hooks/useContract';\nimport useTheme from 'hooks/useTheme';\nimport { SmartContractPhases, CompetitionPhases, LIVE, FINISHED, CLAIM, OVER } from 'config/constants/trading-competition/easterPhases';\nimport PageSection from 'components/PageSection';\nimport { DARKBG, MIDBLUEBG, MIDBLUEBG_DARK, LIGHTBLUEBG, LIGHTBLUEBG_DARK } from './pageSectionStyles';\nimport { PrizesIcon, RanksIcon, RulesIcon } from './svgs';\nimport Countdown from './components/Countdown';\nimport StormBunny from './pngs/storm.png';\nimport RibbonWithImage from './components/RibbonWithImage';\nimport BattleBanner from './components/BattleBanner';\nimport BattleCta from './components/BattleCta';\nimport PrizesInfo from './components/PrizesInfo';\nimport Rules from './components/Rules';\nimport TeamRanks from './components/TeamRanks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CompetitionPage = styled.div`\n  min-height: calc(100vh - 64px);\n`;\n_c = CompetitionPage;\nconst BannerFlex = styled(Flex)`\n  flex-direction: column;\n  ${({\n  theme\n}) => theme.mediaQueries.xl} {\n    padding-top: 10px;\n    flex-direction: row-reverse;\n    justify-content: space-between;\n  }\n\n  @media screen and (min-width: 1920px) {\n    padding-top: 32px;\n  }\n`;\n_c2 = BannerFlex;\nconst BattleBannerSection = styled(PageSection)`\n  margin-top: -32px;\n  ${({\n  theme\n}) => theme.mediaQueries.lg} {\n    margin-top: -64px;\n  }\n`;\n_c3 = BattleBannerSection;\nconst BottomBunnyWrapper = styled(Box)`\n  display: none;\n\n  ${({\n  theme\n}) => theme.mediaQueries.md} {\n    display: flex;\n    margin-left: 40px;\n    width: 147px;\n    height: 200px;\n  }\n`;\n_c4 = BottomBunnyWrapper;\nconst TradingCompetition = () => {\n  _s();\n  const profileApiUrl = process.env.REACT_APP_API_PROFILE;\n  const {\n    account\n  } = useWeb3React();\n  const {\n    t\n  } = useTranslation();\n  const {\n    profile,\n    isLoading\n  } = useProfile();\n  const {\n    isDark,\n    theme\n  } = useTheme();\n  const tradingCompetitionContract = useTradingCompetitionContract();\n  const [currentPhase, setCurrentPhase] = useState(CompetitionPhases.LIVE);\n  const [registrationSuccessful, setRegistrationSuccessful] = useState(false);\n  const [claimSuccessful, setClaimSuccessful] = useState(false);\n  const [userTradingInformation, setUserTradingInformation] = useState({\n    hasRegistered: false,\n    hasUserClaimed: false,\n    userRewardGroup: '0',\n    userCakeRewards: '0',\n    userPointReward: '0',\n    canClaimNFT: false\n  });\n  const [globalLeaderboardInformation, setGlobalLeaderboardInformation] = useState(null);\n  const [userLeaderboardInformation, setUserLeaderboardInformation] = useState({\n    global: 0,\n    team: 0,\n    volume: 0,\n    next_rank: 0\n  });\n  // 1. Storm\n  const [team1LeaderboardInformation, setTeam1LeaderboardInformation] = useState({\n    teamId: 1,\n    leaderboardData: null\n  });\n  // 2. Flippers\n  const [team2LeaderboardInformation, setTeam2LeaderboardInformation] = useState({\n    teamId: 2,\n    leaderboardData: null\n  });\n  // 3. Cakers\n  const [team3LeaderboardInformation, setTeam3LeaderboardInformation] = useState({\n    teamId: 3,\n    leaderboardData: null\n  });\n  const isCompetitionLive = currentPhase.state === LIVE;\n  const hasCompetitionEnded = currentPhase.state === FINISHED || currentPhase.state === CLAIM || currentPhase.state === OVER;\n  const {\n    hasUserClaimed,\n    userCakeRewards,\n    userPointReward,\n    canClaimNFT\n  } = userTradingInformation;\n  const userCanClaimPrizes = currentPhase.state === CLAIM && !hasUserClaimed && (userCakeRewards !== '0' || userPointReward !== '0' || canClaimNFT);\n  const finishedAndPrizesClaimed = hasCompetitionEnded && account && hasUserClaimed;\n  const finishedAndNothingToClaim = hasCompetitionEnded && account && !userCanClaimPrizes;\n  const onRegisterSuccess = () => {\n    setRegistrationSuccessful(true);\n  };\n  const onClaimSuccess = () => {\n    setClaimSuccessful(true);\n  };\n  useEffect(() => {\n    const fetchCompetitionInfoContract = async () => {\n      const competitionStatus = await tradingCompetitionContract.currentStatus();\n      setCurrentPhase(SmartContractPhases[competitionStatus]);\n    };\n    const fetchUserContract = async () => {\n      const user = await tradingCompetitionContract.claimInformation(account);\n      const userObject = {\n        hasRegistered: user[0],\n        hasUserClaimed: user[1],\n        userRewardGroup: user[2].toString(),\n        userCakeRewards: user[3].toString(),\n        userPointReward: user[4].toString(),\n        canClaimNFT: user[5]\n      };\n      setUserTradingInformation(userObject);\n    };\n    if (account) {\n      fetchUserContract();\n    } else {\n      setUserTradingInformation({\n        hasRegistered: false,\n        hasUserClaimed: false,\n        userRewardGroup: '0',\n        userCakeRewards: '0',\n        userPointReward: '0',\n        canClaimNFT: false\n      });\n    }\n    fetchCompetitionInfoContract();\n  }, [account, registrationSuccessful, claimSuccessful, tradingCompetitionContract]);\n  useEffect(() => {\n    const fetchUserTradingStats = async () => {\n      const res = await fetch(`${profileApiUrl}/api/users/${account}`);\n      const data = await res.json();\n      setUserLeaderboardInformation(data.leaderboard);\n    };\n    // If user has not registered, user trading information will not be displayed and should not be fetched\n    if (account && userTradingInformation.hasRegistered) {\n      fetchUserTradingStats();\n    }\n  }, [account, userTradingInformation, profileApiUrl]);\n  useEffect(() => {\n    const fetchGlobalLeaderboardStats = async () => {\n      const res = await fetch(`${profileApiUrl}/api/leaderboard/global`);\n      const data = await res.json();\n      setGlobalLeaderboardInformation(data);\n    };\n    const fetchTeamsLeaderboardStats = async (teamId, callBack) => {\n      try {\n        const res = await fetch(`${profileApiUrl}/api/leaderboard/team/${teamId}`);\n        const data = await res.json();\n        callBack(data);\n      } catch (e) {\n        console.error(e);\n      }\n    };\n    fetchTeamsLeaderboardStats(1, data => setTeam1LeaderboardInformation(prevState => {\n      return {\n        ...prevState,\n        leaderboardData: data\n      };\n    }));\n    fetchTeamsLeaderboardStats(2, data => setTeam2LeaderboardInformation(prevState => {\n      return {\n        ...prevState,\n        leaderboardData: data\n      };\n    }));\n    fetchTeamsLeaderboardStats(3, data => setTeam3LeaderboardInformation(prevState => {\n      return {\n        ...prevState,\n        leaderboardData: data\n      };\n    }));\n    fetchGlobalLeaderboardStats();\n  }, [profileApiUrl]);\n\n  // Don't hide when loading. Hide if the account is connected && the user hasn't registered && the competition is live or finished\n  const shouldHideCta = !isLoading && account && !userTradingInformation.hasRegistered && (isCompetitionLive || hasCompetitionEnded);\n  return /*#__PURE__*/_jsxDEV(CompetitionPage, {\n    children: [/*#__PURE__*/_jsxDEV(BattleBannerSection, {\n      background: DARKBG,\n      hasCurvedDivider: false,\n      index: 1,\n      children: /*#__PURE__*/_jsxDEV(BannerFlex, {\n        mb: shouldHideCta ? '0px' : '48px',\n        children: [/*#__PURE__*/_jsxDEV(Countdown, {\n          currentPhase: currentPhase,\n          hasCompetitionEnded: hasCompetitionEnded\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(BattleBanner, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PageSection, {\n      containerProps: {\n        style: {\n          marginTop: '-30px'\n        }\n      },\n      background: isDark ? MIDBLUEBG_DARK : MIDBLUEBG,\n      concaveDivider: true,\n      clipFill: {\n        light: '#CCD8F0',\n        dark: '#434575'\n      },\n      dividerPosition: \"top\",\n      index: 2,\n      dividerComponent: shouldHideCta ? null : /*#__PURE__*/_jsxDEV(BattleCta, {\n        userTradingInformation: userTradingInformation,\n        currentPhase: currentPhase,\n        account: account,\n        isCompetitionLive: isCompetitionLive,\n        hasCompetitionEnded: hasCompetitionEnded,\n        userCanClaimPrizes: userCanClaimPrizes,\n        finishedAndPrizesClaimed: finishedAndPrizesClaimed,\n        finishedAndNothingToClaim: finishedAndNothingToClaim,\n        profile: profile,\n        isLoading: isLoading,\n        onRegisterSuccess: onRegisterSuccess,\n        onClaimSuccess: onClaimSuccess\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 13\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        mt: shouldHideCta ? '0px' : ['94px', null, '36px'],\n        mb: \"64px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PageSection, {\n      containerProps: {\n        style: {\n          marginTop: '-30px'\n        }\n      },\n      index: 3,\n      concaveDivider: true,\n      clipFill: {\n        light: theme.colors.background\n      },\n      dividerPosition: \"top\",\n      dividerComponent: /*#__PURE__*/_jsxDEV(RibbonWithImage, {\n        imageComponent: /*#__PURE__*/_jsxDEV(RanksIcon, {\n          width: \"175px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 44\n        }, this),\n        ribbonDirection: \"up\",\n        children: t('Team Ranks')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 11\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        my: \"64px\",\n        children: /*#__PURE__*/_jsxDEV(TeamRanks, {\n          team1LeaderboardInformation: team1LeaderboardInformation,\n          team2LeaderboardInformation: team2LeaderboardInformation,\n          team3LeaderboardInformation: team3LeaderboardInformation,\n          globalLeaderboardInformation: globalLeaderboardInformation\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PageSection, {\n      containerProps: {\n        style: {\n          marginTop: '-30px'\n        }\n      },\n      dividerComponent: /*#__PURE__*/_jsxDEV(RibbonWithImage, {\n        imageComponent: /*#__PURE__*/_jsxDEV(PrizesIcon, {\n          width: \"175px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 44\n        }, this),\n        ribbonDirection: \"up\",\n        children: t('Prizes')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 11\n      }, this),\n      concaveDivider: true,\n      clipFill: {\n        light: 'linear-gradient(139.73deg, #e5fcfe 0%, #ecf6ff 100%)',\n        dark: 'linear-gradient(139.73deg, #303d5b 0%, #363457 100%)'\n      },\n      dividerPosition: \"top\",\n      background: isDark ? LIGHTBLUEBG_DARK : LIGHTBLUEBG,\n      index: 4,\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        my: \"64px\",\n        children: /*#__PURE__*/_jsxDEV(PrizesInfo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PageSection, {\n      containerProps: {\n        style: {\n          marginTop: '-1px'\n        }\n      },\n      index: 5,\n      dividerPosition: \"top\",\n      clipFill: {\n        light: 'linear-gradient(139.73deg, #ecf5ff 0%, #f2effe 100%)',\n        dark: 'linear-gradient(139.73deg, #383357 0%, #3d2b53 100%)'\n      },\n      dividerComponent: /*#__PURE__*/_jsxDEV(RibbonWithImage, {\n        imageComponent: /*#__PURE__*/_jsxDEV(RulesIcon, {\n          width: \"175px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 44\n        }, this),\n        ribbonDirection: \"up\",\n        children: t('Rules')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 11\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        mt: \"64px\",\n        children: /*#__PURE__*/_jsxDEV(Rules, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PageSection, {\n      index: 6,\n      dividerPosition: \"top\",\n      dividerFill: {\n        light: '#191326'\n      },\n      clipFill: {\n        light: theme.colors.background\n      },\n      background: DARKBG,\n      children: /*#__PURE__*/_jsxDEV(Flex, {\n        alignItems: \"center\",\n        children: [shouldHideCta ? null : /*#__PURE__*/_jsxDEV(Flex, {\n          height: \"fit-content\",\n          children: /*#__PURE__*/_jsxDEV(BattleCta, {\n            userTradingInformation: userTradingInformation,\n            currentPhase: currentPhase,\n            account: account,\n            isCompetitionLive: isCompetitionLive,\n            hasCompetitionEnded: hasCompetitionEnded,\n            userCanClaimPrizes: userCanClaimPrizes,\n            finishedAndPrizesClaimed: finishedAndPrizesClaimed,\n            finishedAndNothingToClaim: finishedAndNothingToClaim,\n            profile: profile,\n            isLoading: isLoading,\n            onRegisterSuccess: onRegisterSuccess,\n            onClaimSuccess: onClaimSuccess\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(BottomBunnyWrapper, {\n          children: /*#__PURE__*/_jsxDEV(Image, {\n            src: StormBunny,\n            width: 147,\n            height: 200\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 206,\n    columnNumber: 5\n  }, this);\n};\n_s(TradingCompetition, \"x/UmSuFSwb2BATA+fKztgixpeok=\", false, function () {\n  return [useWeb3React, useTranslation, useProfile, useTheme, useTradingCompetitionContract];\n});\n_c5 = TradingCompetition;\nexport default TradingCompetition;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"CompetitionPage\");\n$RefreshReg$(_c2, \"BannerFlex\");\n$RefreshReg$(_c3, \"BattleBannerSection\");\n$RefreshReg$(_c4, \"BottomBunnyWrapper\");\n$RefreshReg$(_c5, \"TradingCompetition\");","map":{"version":3,"names":["React","useState","useEffect","useTranslation","useWeb3React","useProfile","Flex","Box","Image","styled","useTradingCompetitionContract","useTheme","SmartContractPhases","CompetitionPhases","LIVE","FINISHED","CLAIM","OVER","PageSection","DARKBG","MIDBLUEBG","MIDBLUEBG_DARK","LIGHTBLUEBG","LIGHTBLUEBG_DARK","PrizesIcon","RanksIcon","RulesIcon","Countdown","StormBunny","RibbonWithImage","BattleBanner","BattleCta","PrizesInfo","Rules","TeamRanks","jsxDEV","_jsxDEV","CompetitionPage","div","_c","BannerFlex","theme","mediaQueries","xl","_c2","BattleBannerSection","lg","_c3","BottomBunnyWrapper","md","_c4","TradingCompetition","_s","profileApiUrl","process","env","REACT_APP_API_PROFILE","account","t","profile","isLoading","isDark","tradingCompetitionContract","currentPhase","setCurrentPhase","registrationSuccessful","setRegistrationSuccessful","claimSuccessful","setClaimSuccessful","userTradingInformation","setUserTradingInformation","hasRegistered","hasUserClaimed","userRewardGroup","userCakeRewards","userPointReward","canClaimNFT","globalLeaderboardInformation","setGlobalLeaderboardInformation","userLeaderboardInformation","setUserLeaderboardInformation","global","team","volume","next_rank","team1LeaderboardInformation","setTeam1LeaderboardInformation","teamId","leaderboardData","team2LeaderboardInformation","setTeam2LeaderboardInformation","team3LeaderboardInformation","setTeam3LeaderboardInformation","isCompetitionLive","state","hasCompetitionEnded","userCanClaimPrizes","finishedAndPrizesClaimed","finishedAndNothingToClaim","onRegisterSuccess","onClaimSuccess","fetchCompetitionInfoContract","competitionStatus","currentStatus","fetchUserContract","user","claimInformation","userObject","toString","fetchUserTradingStats","res","fetch","data","json","leaderboard","fetchGlobalLeaderboardStats","fetchTeamsLeaderboardStats","callBack","e","console","error","prevState","shouldHideCta","children","background","hasCurvedDivider","index","mb","fileName","_jsxFileName","lineNumber","columnNumber","containerProps","style","marginTop","concaveDivider","clipFill","light","dark","dividerPosition","dividerComponent","mt","colors","imageComponent","width","ribbonDirection","my","dividerFill","alignItems","height","src","_c5","$RefreshReg$"],"sources":["C:/Users/Devrim/Documents/swapUIforProspBlast/src/views/TradingCompetition/index.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useProfile } from 'state/profile/hooks'\r\nimport { Flex, Box, Image } from '@pancakeswap/uikit'\r\nimport styled from 'styled-components'\r\nimport { useTradingCompetitionContract } from 'hooks/useContract'\r\nimport useTheme from 'hooks/useTheme'\r\nimport {\r\n  SmartContractPhases,\r\n  CompetitionPhases,\r\n  LIVE,\r\n  FINISHED,\r\n  CLAIM,\r\n  OVER,\r\n  REGISTRATION,\r\n} from 'config/constants/trading-competition/easterPhases'\r\nimport PageSection from 'components/PageSection'\r\nimport { DARKBG, MIDBLUEBG, MIDBLUEBG_DARK, LIGHTBLUEBG, LIGHTBLUEBG_DARK } from './pageSectionStyles'\r\nimport { PrizesIcon, RanksIcon, RulesIcon } from './svgs'\r\nimport Countdown from './components/Countdown'\r\n\r\nimport StormBunny from './pngs/storm.png'\r\nimport RibbonWithImage from './components/RibbonWithImage'\r\nimport HowToJoin from './components/HowToJoin'\r\nimport BattleBanner from './components/BattleBanner'\r\nimport BattleCta from './components/BattleCta'\r\nimport PrizesInfo from './components/PrizesInfo'\r\nimport Rules from './components/Rules'\r\nimport TeamRanks from './components/TeamRanks'\r\n\r\nconst CompetitionPage = styled.div`\r\n  min-height: calc(100vh - 64px);\r\n`\r\n\r\nconst BannerFlex = styled(Flex)`\r\n  flex-direction: column;\r\n  ${({ theme }) => theme.mediaQueries.xl} {\r\n    padding-top: 10px;\r\n    flex-direction: row-reverse;\r\n    justify-content: space-between;\r\n  }\r\n\r\n  @media screen and (min-width: 1920px) {\r\n    padding-top: 32px;\r\n  }\r\n`\r\n\r\nconst BattleBannerSection = styled(PageSection)`\r\n  margin-top: -32px;\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    margin-top: -64px;\r\n  }\r\n`\r\n\r\nconst BottomBunnyWrapper = styled(Box)`\r\n  display: none;\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    display: flex;\r\n    margin-left: 40px;\r\n    width: 147px;\r\n    height: 200px;\r\n  }\r\n`\r\n\r\nconst TradingCompetition = () => {\r\n  const profileApiUrl = process.env.REACT_APP_API_PROFILE\r\n  const { account } = useWeb3React()\r\n  const { t } = useTranslation()\r\n  const { profile, isLoading } = useProfile()\r\n  const { isDark, theme } = useTheme()\r\n  const tradingCompetitionContract = useTradingCompetitionContract()\r\n  const [currentPhase, setCurrentPhase] = useState(CompetitionPhases.LIVE)\r\n  const [registrationSuccessful, setRegistrationSuccessful] = useState(false)\r\n  const [claimSuccessful, setClaimSuccessful] = useState(false)\r\n  const [userTradingInformation, setUserTradingInformation] = useState({\r\n    hasRegistered: false,\r\n    hasUserClaimed: false,\r\n    userRewardGroup: '0',\r\n    userCakeRewards: '0',\r\n    userPointReward: '0',\r\n    canClaimNFT: false,\r\n  })\r\n  const [globalLeaderboardInformation, setGlobalLeaderboardInformation] = useState(null)\r\n  const [userLeaderboardInformation, setUserLeaderboardInformation] = useState({\r\n    global: 0,\r\n    team: 0,\r\n    volume: 0,\r\n    next_rank: 0,\r\n  })\r\n  // 1. Storm\r\n  const [team1LeaderboardInformation, setTeam1LeaderboardInformation] = useState({ teamId: 1, leaderboardData: null })\r\n  // 2. Flippers\r\n  const [team2LeaderboardInformation, setTeam2LeaderboardInformation] = useState({ teamId: 2, leaderboardData: null })\r\n  // 3. Cakers\r\n  const [team3LeaderboardInformation, setTeam3LeaderboardInformation] = useState({ teamId: 3, leaderboardData: null })\r\n\r\n  const isCompetitionLive = currentPhase.state === LIVE\r\n  const hasCompetitionEnded =\r\n    currentPhase.state === FINISHED || currentPhase.state === CLAIM || currentPhase.state === OVER\r\n\r\n  const { hasUserClaimed, userCakeRewards, userPointReward, canClaimNFT } = userTradingInformation\r\n\r\n  const userCanClaimPrizes =\r\n    currentPhase.state === CLAIM &&\r\n    !hasUserClaimed &&\r\n    (userCakeRewards !== '0' || userPointReward !== '0' || canClaimNFT)\r\n  const finishedAndPrizesClaimed = hasCompetitionEnded && account && hasUserClaimed\r\n  const finishedAndNothingToClaim = hasCompetitionEnded && account && !userCanClaimPrizes\r\n\r\n  const onRegisterSuccess = () => {\r\n    setRegistrationSuccessful(true)\r\n  }\r\n\r\n  const onClaimSuccess = () => {\r\n    setClaimSuccessful(true)\r\n  }\r\n\r\n  useEffect(() => {\r\n    const fetchCompetitionInfoContract = async () => {\r\n      const competitionStatus = await tradingCompetitionContract.currentStatus()\r\n      setCurrentPhase(SmartContractPhases[competitionStatus])\r\n    }\r\n\r\n    const fetchUserContract = async () => {\r\n      const user = await tradingCompetitionContract.claimInformation(account)\r\n      const userObject = {\r\n        hasRegistered: user[0],\r\n        hasUserClaimed: user[1],\r\n        userRewardGroup: user[2].toString(),\r\n        userCakeRewards: user[3].toString(),\r\n        userPointReward: user[4].toString(),\r\n        canClaimNFT: user[5],\r\n      }\r\n      setUserTradingInformation(userObject)\r\n    }\r\n\r\n    if (account) {\r\n      fetchUserContract()\r\n    } else {\r\n      setUserTradingInformation({\r\n        hasRegistered: false,\r\n        hasUserClaimed: false,\r\n        userRewardGroup: '0',\r\n        userCakeRewards: '0',\r\n        userPointReward: '0',\r\n        canClaimNFT: false,\r\n      })\r\n    }\r\n    fetchCompetitionInfoContract()\r\n  }, [account, registrationSuccessful, claimSuccessful, tradingCompetitionContract])\r\n\r\n  useEffect(() => {\r\n    const fetchUserTradingStats = async () => {\r\n      const res = await fetch(`${profileApiUrl}/api/users/${account}`)\r\n      const data = await res.json()\r\n      setUserLeaderboardInformation(data.leaderboard)\r\n    }\r\n    // If user has not registered, user trading information will not be displayed and should not be fetched\r\n    if (account && userTradingInformation.hasRegistered) {\r\n      fetchUserTradingStats()\r\n    }\r\n  }, [account, userTradingInformation, profileApiUrl])\r\n\r\n  useEffect(() => {\r\n    const fetchGlobalLeaderboardStats = async () => {\r\n      const res = await fetch(`${profileApiUrl}/api/leaderboard/global`)\r\n      const data = await res.json()\r\n      setGlobalLeaderboardInformation(data)\r\n    }\r\n\r\n    const fetchTeamsLeaderboardStats = async (teamId: number, callBack: (data: any) => void) => {\r\n      try {\r\n        const res = await fetch(`${profileApiUrl}/api/leaderboard/team/${teamId}`)\r\n        const data = await res.json()\r\n        callBack(data)\r\n      } catch (e) {\r\n        console.error(e)\r\n      }\r\n    }\r\n\r\n    fetchTeamsLeaderboardStats(1, (data) =>\r\n      setTeam1LeaderboardInformation((prevState) => {\r\n        return { ...prevState, leaderboardData: data }\r\n      }),\r\n    )\r\n    fetchTeamsLeaderboardStats(2, (data) =>\r\n      setTeam2LeaderboardInformation((prevState) => {\r\n        return { ...prevState, leaderboardData: data }\r\n      }),\r\n    )\r\n    fetchTeamsLeaderboardStats(3, (data) =>\r\n      setTeam3LeaderboardInformation((prevState) => {\r\n        return { ...prevState, leaderboardData: data }\r\n      }),\r\n    )\r\n    fetchGlobalLeaderboardStats()\r\n  }, [profileApiUrl])\r\n\r\n  // Don't hide when loading. Hide if the account is connected && the user hasn't registered && the competition is live or finished\r\n  const shouldHideCta =\r\n    !isLoading && account && !userTradingInformation.hasRegistered && (isCompetitionLive || hasCompetitionEnded)\r\n\r\n  return (\r\n    <CompetitionPage>\r\n      <BattleBannerSection background={DARKBG} hasCurvedDivider={false} index={1}>\r\n        <BannerFlex mb={shouldHideCta ? '0px' : '48px'}>\r\n          <Countdown currentPhase={currentPhase} hasCompetitionEnded={hasCompetitionEnded} />\r\n          <BattleBanner />\r\n        </BannerFlex>\r\n      </BattleBannerSection>\r\n      <PageSection\r\n        containerProps={{ style: { marginTop: '-30px' } }}\r\n        background={isDark ? MIDBLUEBG_DARK : MIDBLUEBG}\r\n        concaveDivider\r\n        clipFill={{ light: '#CCD8F0', dark: '#434575' }}\r\n        dividerPosition=\"top\"\r\n        index={2}\r\n        dividerComponent={\r\n          shouldHideCta ? null : (\r\n            <BattleCta\r\n              userTradingInformation={userTradingInformation}\r\n              currentPhase={currentPhase}\r\n              account={account}\r\n              isCompetitionLive={isCompetitionLive}\r\n              hasCompetitionEnded={hasCompetitionEnded}\r\n              userCanClaimPrizes={userCanClaimPrizes}\r\n              finishedAndPrizesClaimed={finishedAndPrizesClaimed}\r\n              finishedAndNothingToClaim={finishedAndNothingToClaim}\r\n              profile={profile}\r\n              isLoading={isLoading}\r\n              onRegisterSuccess={onRegisterSuccess}\r\n              onClaimSuccess={onClaimSuccess}\r\n            />\r\n          )\r\n        }\r\n      >\r\n        <Box mt={shouldHideCta ? '0px' : ['94px', null, '36px']} mb=\"64px\">\r\n          {/* If competition has not yet started, render HowToJoin component - if not, render YourScore */}\r\n\r\n        </Box>\r\n      </PageSection>\r\n      <PageSection\r\n        containerProps={{ style: { marginTop: '-30px' } }}\r\n        index={3}\r\n        concaveDivider\r\n        clipFill={{ light: theme.colors.background }}\r\n        dividerPosition=\"top\"\r\n        dividerComponent={\r\n          <RibbonWithImage imageComponent={<RanksIcon width=\"175px\" />} ribbonDirection=\"up\">\r\n            {t('Team Ranks')}\r\n          </RibbonWithImage>\r\n        }\r\n      >\r\n        <Box my=\"64px\">\r\n          <TeamRanks\r\n            team1LeaderboardInformation={team1LeaderboardInformation}\r\n            team2LeaderboardInformation={team2LeaderboardInformation}\r\n            team3LeaderboardInformation={team3LeaderboardInformation}\r\n            globalLeaderboardInformation={globalLeaderboardInformation}\r\n          />\r\n        </Box>\r\n      </PageSection>\r\n      <PageSection\r\n        containerProps={{ style: { marginTop: '-30px' } }}\r\n        dividerComponent={\r\n          <RibbonWithImage imageComponent={<PrizesIcon width=\"175px\" />} ribbonDirection=\"up\">\r\n            {t('Prizes')}\r\n          </RibbonWithImage>\r\n        }\r\n        concaveDivider\r\n        clipFill={{\r\n          light: 'linear-gradient(139.73deg, #e5fcfe 0%, #ecf6ff 100%)',\r\n          dark: 'linear-gradient(139.73deg, #303d5b 0%, #363457 100%)',\r\n        }}\r\n        dividerPosition=\"top\"\r\n        background={isDark ? LIGHTBLUEBG_DARK : LIGHTBLUEBG}\r\n        index={4}\r\n      >\r\n        <Box my=\"64px\">\r\n          <PrizesInfo />\r\n        </Box>\r\n      </PageSection>\r\n      <PageSection\r\n        containerProps={{ style: { marginTop: '-1px' } }}\r\n        index={5}\r\n        dividerPosition=\"top\"\r\n        clipFill={{\r\n          light: 'linear-gradient(139.73deg, #ecf5ff 0%, #f2effe 100%)',\r\n          dark: 'linear-gradient(139.73deg, #383357 0%, #3d2b53 100%)',\r\n        }}\r\n        dividerComponent={\r\n          <RibbonWithImage imageComponent={<RulesIcon width=\"175px\" />} ribbonDirection=\"up\">\r\n            {t('Rules')}\r\n          </RibbonWithImage>\r\n        }\r\n      >\r\n        <Box mt=\"64px\">\r\n          <Rules />\r\n        </Box>\r\n      </PageSection>\r\n      <PageSection\r\n        index={6}\r\n        dividerPosition=\"top\"\r\n        dividerFill={{ light: '#191326' }}\r\n        clipFill={{ light: theme.colors.background }}\r\n        background={DARKBG}\r\n      >\r\n        <Flex alignItems=\"center\">\r\n          {shouldHideCta ? null : (\r\n            <Flex height=\"fit-content\">\r\n              <BattleCta\r\n                userTradingInformation={userTradingInformation}\r\n                currentPhase={currentPhase}\r\n                account={account}\r\n                isCompetitionLive={isCompetitionLive}\r\n                hasCompetitionEnded={hasCompetitionEnded}\r\n                userCanClaimPrizes={userCanClaimPrizes}\r\n                finishedAndPrizesClaimed={finishedAndPrizesClaimed}\r\n                finishedAndNothingToClaim={finishedAndNothingToClaim}\r\n                profile={profile}\r\n                isLoading={isLoading}\r\n                onRegisterSuccess={onRegisterSuccess}\r\n                onClaimSuccess={onClaimSuccess}\r\n              />\r\n            </Flex>\r\n          )}\r\n          <BottomBunnyWrapper>\r\n            <Image src={StormBunny} width={147} height={200} />\r\n          </BottomBunnyWrapper>\r\n        </Flex>\r\n      </PageSection>\r\n    </CompetitionPage>\r\n  )\r\n}\r\n\r\nexport default TradingCompetition\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}