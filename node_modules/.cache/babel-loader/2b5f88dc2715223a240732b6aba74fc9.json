{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Devrim\\\\Documents\\\\FRANKswapUIforProspBlast\\\\src\\\\views\\\\Pools\\\\components\\\\PoolsTable\\\\PoolsTable.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from 'react';\nimport styled from 'styled-components';\nimport { Button, ChevronUpIcon } from '@pancakeswap/uikit';\nimport { useTranslation } from 'contexts/Localization';\nimport PoolRow from './PoolRow';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledTable = styled.div`\n  border-radius: ${({\n  theme\n}) => theme.radii.card};\n\n  background-color: ${({\n  theme\n}) => theme.card.background};\n  > div:not(:last-child) {\n    border-bottom: 2px solid ${({\n  theme\n}) => theme.colors.disabled};\n  }\n`;\n_c = StyledTable;\nconst StyledTableBorder = styled.div`\n  border-radius: ${({\n  theme\n}) => theme.radii.card};\n  background-color: ${({\n  theme\n}) => theme.colors.cardBorder};\n  padding: 1px 1px 3px 1px;\n  background-size: 400% 400%;\n`;\n_c2 = StyledTableBorder;\nconst ScrollButtonContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  padding-top: 5px;\n  padding-bottom: 5px;\n`;\n_c3 = ScrollButtonContainer;\n\nconst PoolsTable = ({\n  pools,\n  userDataLoaded,\n  account\n}) => {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  const tableWrapperEl = useRef(null);\n\n  const scrollToTop = () => {\n    tableWrapperEl.current.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(StyledTableBorder, {\n    children: /*#__PURE__*/_jsxDEV(StyledTable, {\n      role: \"table\",\n      ref: tableWrapperEl,\n      children: [pools.map(pool => /*#__PURE__*/_jsxDEV(PoolRow, {\n        pool: pool,\n        account: account,\n        userDataLoaded: userDataLoaded\n      }, pool.isAutoVault ? 'auto-cake' : pool.sousId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(ScrollButtonContainer, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"text\",\n          onClick: scrollToTop,\n          children: [t('To Top'), /*#__PURE__*/_jsxDEV(ChevronUpIcon, {\n            color: \"primary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PoolsTable, \"fPse25UMzcFETdiZdSnkyNd81r0=\", false, function () {\n  return [useTranslation];\n});\n\n_c4 = PoolsTable;\nexport default PoolsTable;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"StyledTable\");\n$RefreshReg$(_c2, \"StyledTableBorder\");\n$RefreshReg$(_c3, \"ScrollButtonContainer\");\n$RefreshReg$(_c4, \"PoolsTable\");","map":{"version":3,"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/views/Pools/components/PoolsTable/PoolsTable.tsx"],"names":["React","useRef","styled","Button","ChevronUpIcon","useTranslation","PoolRow","StyledTable","div","theme","radii","card","background","colors","disabled","StyledTableBorder","cardBorder","ScrollButtonContainer","PoolsTable","pools","userDataLoaded","account","t","tableWrapperEl","scrollToTop","current","scrollIntoView","behavior","map","pool","isAutoVault","sousId"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,MAAT,EAAiBC,aAAjB,QAAsC,oBAAtC;AACA,SAASC,cAAT,QAA+B,uBAA/B;AAEA,OAAOC,OAAP,MAAoB,WAApB;;AAQA,MAAMC,WAAW,GAAGL,MAAM,CAACM,GAAI;AAC/B,mBAAmB,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,KAAN,CAAYC,IAAK;AACnD;AACA,sBAAsB,CAAC;AAAEF,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACE,IAAN,CAAWC,UAAW;AAC3D;AACA,+BAA+B,CAAC;AAAEH,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACI,MAAN,CAAaC,QAAS;AACpE;AACA,CAPA;KAAMP,W;AASN,MAAMQ,iBAAiB,GAAGb,MAAM,CAACM,GAAI;AACrC,mBAAmB,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,KAAN,CAAYC,IAAK;AACnD,sBAAsB,CAAC;AAAEF,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACI,MAAN,CAAaG,UAAW;AAC7D;AACA;AACA,CALA;MAAMD,iB;AAON,MAAME,qBAAqB,GAAGf,MAAM,CAACM,GAAI;AACzC;AACA;AACA;AACA;AACA,CALA;MAAMS,qB;;AAON,MAAMC,UAAqC,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,cAAT;AAAyBC,EAAAA;AAAzB,CAAD,KAAwC;AAAA;;AACpF,QAAM;AAAEC,IAAAA;AAAF,MAAQjB,cAAc,EAA5B;AACA,QAAMkB,cAAc,GAAGtB,MAAM,CAAiB,IAAjB,CAA7B;;AACA,QAAMuB,WAAW,GAAG,MAAY;AAC9BD,IAAAA,cAAc,CAACE,OAAf,CAAuBC,cAAvB,CAAsC;AACpCC,MAAAA,QAAQ,EAAE;AAD0B,KAAtC;AAGD,GAJD;;AAKA,sBACE,QAAC,iBAAD;AAAA,2BACE,QAAC,WAAD;AAAa,MAAA,IAAI,EAAC,OAAlB;AAA0B,MAAA,GAAG,EAAEJ,cAA/B;AAAA,iBACGJ,KAAK,CAACS,GAAN,CAAWC,IAAD,iBACT,QAAC,OAAD;AAEE,QAAA,IAAI,EAAEA,IAFR;AAGE,QAAA,OAAO,EAAER,OAHX;AAIE,QAAA,cAAc,EAAED;AAJlB,SACOS,IAAI,CAACC,WAAL,GAAmB,WAAnB,GAAiCD,IAAI,CAACE,MAD7C;AAAA;AAAA;AAAA;AAAA,cADD,CADH,eASE,QAAC,qBAAD;AAAA,+BACE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,MAAhB;AAAuB,UAAA,OAAO,EAAEP,WAAhC;AAAA,qBACGF,CAAC,CAAC,QAAD,CADJ,eAEE,QAAC,aAAD;AAAe,YAAA,KAAK,EAAC;AAArB;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD,CA5BD;;GAAMJ,U;UACUb,c;;;MADVa,U;AA8BN,eAAeA,UAAf","sourcesContent":["import React, { useRef } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button, ChevronUpIcon } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { Pool } from 'state/types'\r\nimport PoolRow from './PoolRow'\r\n\r\ninterface PoolsTableProps {\r\n  pools: Pool[]\r\n  userDataLoaded: boolean\r\n  account: string\r\n}\r\n\r\nconst StyledTable = styled.div`\r\n  border-radius: ${({ theme }) => theme.radii.card};\r\n\r\n  background-color: ${({ theme }) => theme.card.background};\r\n  > div:not(:last-child) {\r\n    border-bottom: 2px solid ${({ theme }) => theme.colors.disabled};\r\n  }\r\n`\r\n\r\nconst StyledTableBorder = styled.div`\r\n  border-radius: ${({ theme }) => theme.radii.card};\r\n  background-color: ${({ theme }) => theme.colors.cardBorder};\r\n  padding: 1px 1px 3px 1px;\r\n  background-size: 400% 400%;\r\n`\r\n\r\nconst ScrollButtonContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  padding-top: 5px;\r\n  padding-bottom: 5px;\r\n`\r\n\r\nconst PoolsTable: React.FC<PoolsTableProps> = ({ pools, userDataLoaded, account }) => {\r\n  const { t } = useTranslation()\r\n  const tableWrapperEl = useRef<HTMLDivElement>(null)\r\n  const scrollToTop = (): void => {\r\n    tableWrapperEl.current.scrollIntoView({\r\n      behavior: 'smooth',\r\n    })\r\n  }\r\n  return (\r\n    <StyledTableBorder>\r\n      <StyledTable role=\"table\" ref={tableWrapperEl}>\r\n        {pools.map((pool) => (\r\n          <PoolRow\r\n            key={pool.isAutoVault ? 'auto-cake' : pool.sousId}\r\n            pool={pool}\r\n            account={account}\r\n            userDataLoaded={userDataLoaded}\r\n          />\r\n        ))}\r\n        <ScrollButtonContainer>\r\n          <Button variant=\"text\" onClick={scrollToTop}>\r\n            {t('To Top')}\r\n            <ChevronUpIcon color=\"primary\" />\r\n          </Button>\r\n        </ScrollButtonContainer>\r\n      </StyledTable>\r\n    </StyledTableBorder>\r\n  )\r\n}\r\n\r\nexport default PoolsTable\r\n"]},"metadata":{},"sourceType":"module"}