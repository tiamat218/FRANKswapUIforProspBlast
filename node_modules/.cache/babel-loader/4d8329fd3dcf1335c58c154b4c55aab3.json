{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Devrim\\\\Documents\\\\FRANKswapUIforProspBlast\\\\src\\\\views\\\\Pool\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useMemo } from 'react';\nimport styled from 'styled-components';\nimport { Text, Flex, CardBody, CardFooter, Button, AddIcon } from '@pancakeswap/uikit';\nimport { Link } from 'react-router-dom';\nimport { useTranslation } from 'contexts/Localization';\nimport useActiveWeb3React from 'hooks/useActiveWeb3React';\nimport FullPositionCard from '../../components/PositionCard';\nimport { useTokenBalancesWithLoadingIndicator } from '../../state/wallet/hooks';\nimport { usePairs } from '../../hooks/usePairs';\nimport { toV2LiquidityToken, useTrackedTokenPairs } from '../../state/user/hooks';\nimport Dots from '../../components/Loader/Dots';\nimport { AppHeader, AppBody } from '../../components/App';\nimport Page from '../Page';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Body = styled(CardBody)`\n  background-color: ${({\n  theme\n}) => theme.colors.dropdownDeep};\n`;\n_c = Body;\nexport default function Pool() {\n  _s();\n\n  const {\n    account\n  } = useActiveWeb3React();\n  const {\n    t\n  } = useTranslation(); // fetch the user's balances of all tracked V2 LP tokens\n\n  const trackedTokenPairs = useTrackedTokenPairs();\n  const tokenPairsWithLiquidityTokens = useMemo(() => trackedTokenPairs.map(tokens => ({\n    liquidityToken: toV2LiquidityToken(tokens),\n    tokens\n  })), [trackedTokenPairs]);\n  const liquidityTokens = useMemo(() => tokenPairsWithLiquidityTokens.map(tpwlt => tpwlt.liquidityToken), [tokenPairsWithLiquidityTokens]);\n  const [v2PairsBalances, fetchingV2PairBalances] = useTokenBalancesWithLoadingIndicator(account !== null && account !== void 0 ? account : undefined, liquidityTokens); // fetch the reserves for all V2 pools in which the user has a balance\n\n  const liquidityTokensWithBalances = useMemo(() => tokenPairsWithLiquidityTokens.filter(({\n    liquidityToken\n  }) => {\n    var _v2PairsBalances$liqu;\n\n    return (_v2PairsBalances$liqu = v2PairsBalances[liquidityToken.address]) === null || _v2PairsBalances$liqu === void 0 ? void 0 : _v2PairsBalances$liqu.greaterThan('0');\n  }), [tokenPairsWithLiquidityTokens, v2PairsBalances]);\n  const v2Pairs = usePairs(liquidityTokensWithBalances.map(({\n    tokens\n  }) => tokens));\n  const v2IsLoading = fetchingV2PairBalances || (v2Pairs === null || v2Pairs === void 0 ? void 0 : v2Pairs.length) < liquidityTokensWithBalances.length || (v2Pairs === null || v2Pairs === void 0 ? void 0 : v2Pairs.some(V2Pair => !V2Pair));\n  const allV2PairsWithLiquidity = v2Pairs.map(([, pair]) => pair).filter(v2Pair => Boolean(v2Pair));\n\n  const renderBody = () => {\n    if (!account) {\n      return /*#__PURE__*/_jsxDEV(Text, {\n        color: \"textSubtle\",\n        textAlign: \"center\",\n        children: t('Connect to a wallet to view your liquidity.')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this);\n    }\n\n    if (v2IsLoading) {\n      return /*#__PURE__*/_jsxDEV(Text, {\n        color: \"textSubtle\",\n        textAlign: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Dots, {\n          children: t('Loading')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this);\n    }\n\n    if ((allV2PairsWithLiquidity === null || allV2PairsWithLiquidity === void 0 ? void 0 : allV2PairsWithLiquidity.length) > 0) {\n      return allV2PairsWithLiquidity.map((v2Pair, index) => /*#__PURE__*/_jsxDEV(FullPositionCard, {\n        pair: v2Pair,\n        mb: index < allV2PairsWithLiquidity.length - 1 ? '16px' : 0\n      }, v2Pair.liquidityToken.address, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this));\n    }\n\n    return /*#__PURE__*/_jsxDEV(Text, {\n      color: \"textSubtle\",\n      textAlign: \"center\",\n      children: t('No liquidity found.')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Page, {\n    children: /*#__PURE__*/_jsxDEV(AppBody, {\n      children: [/*#__PURE__*/_jsxDEV(AppHeader, {\n        title: t('Your Liquidity'),\n        subtitle: t('Remove liquidity to receive tokens back')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Body, {\n        children: [renderBody(), account && !v2IsLoading && /*#__PURE__*/_jsxDEV(Flex, {\n          flexDirection: \"column\",\n          alignItems: \"center\",\n          mt: \"24px\",\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            color: \"textSubtle\",\n            mb: \"8px\",\n            children: t(\"Don't see a pool you joined?\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            id: \"import-pool-link\",\n            variant: \"secondary\",\n            scale: \"sm\",\n            as: Link,\n            to: \"/find\",\n            children: t('Find other LP tokens')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardFooter, {\n        style: {\n          textAlign: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          id: \"join-pool-button\",\n          as: Link,\n          to: \"/add\",\n          width: \"100%\",\n          startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {\n            color: \"white\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 85\n          }, this),\n          children: t('Add Liquidity')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Pool, \"j4oTWCFY8dJLdCH8IivouscQ9Fw=\", false, function () {\n  return [useActiveWeb3React, useTranslation, useTrackedTokenPairs, useTokenBalancesWithLoadingIndicator, usePairs];\n});\n\n_c2 = Pool;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Body\");\n$RefreshReg$(_c2, \"Pool\");","map":{"version":3,"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/views/Pool/index.tsx"],"names":["React","useMemo","styled","Text","Flex","CardBody","CardFooter","Button","AddIcon","Link","useTranslation","useActiveWeb3React","FullPositionCard","useTokenBalancesWithLoadingIndicator","usePairs","toV2LiquidityToken","useTrackedTokenPairs","Dots","AppHeader","AppBody","Page","Body","theme","colors","dropdownDeep","Pool","account","t","trackedTokenPairs","tokenPairsWithLiquidityTokens","map","tokens","liquidityToken","liquidityTokens","tpwlt","v2PairsBalances","fetchingV2PairBalances","undefined","liquidityTokensWithBalances","filter","address","greaterThan","v2Pairs","v2IsLoading","length","some","V2Pair","allV2PairsWithLiquidity","pair","v2Pair","Boolean","renderBody","index","textAlign"],"mappings":"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","sourcesContent":["import React, { useMemo } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Pair } from '@pancakeswap/sdk'\r\nimport { Text, Flex, CardBody, CardFooter, Button, AddIcon } from '@pancakeswap/uikit'\r\nimport { Link } from 'react-router-dom'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport FullPositionCard from '../../components/PositionCard'\r\nimport { useTokenBalancesWithLoadingIndicator } from '../../state/wallet/hooks'\r\nimport { usePairs } from '../../hooks/usePairs'\r\nimport { toV2LiquidityToken, useTrackedTokenPairs } from '../../state/user/hooks'\r\nimport Dots from '../../components/Loader/Dots'\r\nimport { AppHeader, AppBody } from '../../components/App'\r\nimport Page from '../Page'\r\n\r\nconst Body = styled(CardBody)`\r\n  background-color: ${({ theme }) => theme.colors.dropdownDeep};\r\n`\r\n\r\nexport default function Pool() {\r\n  const { account } = useActiveWeb3React()\r\n  const { t } = useTranslation()\r\n\r\n  // fetch the user's balances of all tracked V2 LP tokens\r\n  const trackedTokenPairs = useTrackedTokenPairs()\r\n  const tokenPairsWithLiquidityTokens = useMemo(\r\n    () => trackedTokenPairs.map((tokens) => ({ liquidityToken: toV2LiquidityToken(tokens), tokens })),\r\n    [trackedTokenPairs],\r\n  )\r\n  const liquidityTokens = useMemo(\r\n    () => tokenPairsWithLiquidityTokens.map((tpwlt) => tpwlt.liquidityToken),\r\n    [tokenPairsWithLiquidityTokens],\r\n  )\r\n  const [v2PairsBalances, fetchingV2PairBalances] = useTokenBalancesWithLoadingIndicator(\r\n    account ?? undefined,\r\n    liquidityTokens,\r\n  )\r\n\r\n  // fetch the reserves for all V2 pools in which the user has a balance\r\n  const liquidityTokensWithBalances = useMemo(\r\n    () =>\r\n      tokenPairsWithLiquidityTokens.filter(({ liquidityToken }) =>\r\n        v2PairsBalances[liquidityToken.address]?.greaterThan('0'),\r\n      ),\r\n    [tokenPairsWithLiquidityTokens, v2PairsBalances],\r\n  )\r\n\r\n  const v2Pairs = usePairs(liquidityTokensWithBalances.map(({ tokens }) => tokens))\r\n  const v2IsLoading =\r\n    fetchingV2PairBalances || v2Pairs?.length < liquidityTokensWithBalances.length || v2Pairs?.some((V2Pair) => !V2Pair)\r\n\r\n  const allV2PairsWithLiquidity = v2Pairs.map(([, pair]) => pair).filter((v2Pair): v2Pair is Pair => Boolean(v2Pair))\r\n\r\n  const renderBody = () => {\r\n    if (!account) {\r\n      return (\r\n        <Text color=\"textSubtle\" textAlign=\"center\">\r\n          {t('Connect to a wallet to view your liquidity.')}\r\n        </Text>\r\n      )\r\n    }\r\n    if (v2IsLoading) {\r\n      return (\r\n        <Text color=\"textSubtle\" textAlign=\"center\">\r\n          <Dots>{t('Loading')}</Dots>\r\n        </Text>\r\n      )\r\n    }\r\n    if (allV2PairsWithLiquidity?.length > 0) {\r\n      return allV2PairsWithLiquidity.map((v2Pair, index) => (\r\n        <FullPositionCard\r\n          key={v2Pair.liquidityToken.address}\r\n          pair={v2Pair}\r\n          mb={index < allV2PairsWithLiquidity.length - 1 ? '16px' : 0}\r\n        />\r\n      ))\r\n    }\r\n    return (\r\n      <Text color=\"textSubtle\" textAlign=\"center\">\r\n        {t('No liquidity found.')}\r\n      </Text>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Page>\r\n      <AppBody>\r\n        <AppHeader title={t('Your Liquidity')} subtitle={t('Remove liquidity to receive tokens back')} />\r\n        <Body>\r\n          {renderBody()}\r\n          {account && !v2IsLoading && (\r\n            <Flex flexDirection=\"column\" alignItems=\"center\" mt=\"24px\">\r\n              <Text color=\"textSubtle\" mb=\"8px\">\r\n                {t(\"Don't see a pool you joined?\")}\r\n              </Text>\r\n              <Button id=\"import-pool-link\" variant=\"secondary\" scale=\"sm\" as={Link} to=\"/find\">\r\n                {t('Find other LP tokens')}\r\n              </Button>\r\n            </Flex>\r\n          )}\r\n        </Body>\r\n        <CardFooter style={{ textAlign: 'center' }}>\r\n          <Button id=\"join-pool-button\" as={Link} to=\"/add\" width=\"100%\" startIcon={<AddIcon color=\"white\" />}>\r\n            {t('Add Liquidity')}\r\n          </Button>\r\n        </CardFooter>\r\n      </AppBody>\r\n    </Page>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}