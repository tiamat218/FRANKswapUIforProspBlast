{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Devrim\\\\Documents\\\\FRANKswapUIforProspBlast\\\\src\\\\components\\\\Logo\\\\CurrencyLogo.tsx\",\n  _s = $RefreshSig$();\nimport { ETHER, Token } from '@pancakeswap/sdk';\nimport { BinanceIcon } from '@pancakeswap/uikit';\nimport React, { useMemo } from 'react';\nimport styled from 'styled-components';\nimport useHttpLocations from '../../hooks/useHttpLocations';\nimport { WrappedTokenInfo } from '../../state/lists/hooks';\nimport getTokenLogoURL from '../../utils/getTokenLogoURL';\nimport Logo from './Logo';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledLogo = styled(Logo)`\n  width: ${({\n  size\n}) => size};\n  height: ${({\n  size\n}) => size};\n`;\n_c = StyledLogo;\nexport default function CurrencyLogo({\n  currency,\n  size = '24px',\n  style\n}) {\n  _s();\n  var _currency$symbol;\n  const uriLocations = useHttpLocations(currency instanceof WrappedTokenInfo ? currency.logoURI : undefined);\n  const srcs = useMemo(() => {\n    if (currency === ETHER) return [];\n    if (currency instanceof Token) {\n      if (currency instanceof WrappedTokenInfo) {\n        return [...uriLocations, getTokenLogoURL(currency.address)];\n      }\n      return [getTokenLogoURL(currency.address)];\n    }\n    return [];\n  }, [currency, uriLocations]);\n  if (currency === ETHER) {\n    return /*#__PURE__*/_jsxDEV(BinanceIcon, {\n      width: size,\n      style: style\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(StyledLogo, {\n    size: size,\n    srcs: srcs,\n    alt: `${(_currency$symbol = currency === null || currency === void 0 ? void 0 : currency.symbol) !== null && _currency$symbol !== void 0 ? _currency$symbol : 'token'} logo`,\n    style: style\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 10\n  }, this);\n}\n_s(CurrencyLogo, \"jo2gP9fsIv3AxI3dA7ElsR2yU5g=\", false, function () {\n  return [useHttpLocations];\n});\n_c2 = CurrencyLogo;\nvar _c, _c2;\n$RefreshReg$(_c, \"StyledLogo\");\n$RefreshReg$(_c2, \"CurrencyLogo\");","map":{"version":3,"names":["ETHER","Token","BinanceIcon","React","useMemo","styled","useHttpLocations","WrappedTokenInfo","getTokenLogoURL","Logo","jsxDEV","_jsxDEV","StyledLogo","size","_c","CurrencyLogo","currency","style","_s","_currency$symbol","uriLocations","logoURI","undefined","srcs","address","width","fileName","_jsxFileName","lineNumber","columnNumber","alt","symbol","_c2","$RefreshReg$"],"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/components/Logo/CurrencyLogo.tsx"],"sourcesContent":["import { Currency, ETHER, Token } from '@pancakeswap/sdk'\r\nimport { BinanceIcon } from '@pancakeswap/uikit'\r\nimport React, { useMemo } from 'react'\r\nimport styled from 'styled-components'\r\nimport useHttpLocations from '../../hooks/useHttpLocations'\r\nimport { WrappedTokenInfo } from '../../state/lists/hooks'\r\nimport getTokenLogoURL from '../../utils/getTokenLogoURL'\r\nimport Logo from './Logo'\r\n\r\nconst StyledLogo = styled(Logo)<{ size: string }>`\r\n  width: ${({ size }) => size};\r\n  height: ${({ size }) => size};\r\n`\r\n\r\nexport default function CurrencyLogo({\r\n  currency,\r\n  size = '24px',\r\n  style,\r\n}: {\r\n  currency?: Currency\r\n  size?: string\r\n  style?: React.CSSProperties\r\n}) {\r\n  const uriLocations = useHttpLocations(currency instanceof WrappedTokenInfo ? currency.logoURI : undefined)\r\n\r\n  const srcs: string[] = useMemo(() => {\r\n    if (currency === ETHER) return []\r\n\r\n    if (currency instanceof Token) {\r\n      if (currency instanceof WrappedTokenInfo) {\r\n        return [...uriLocations, getTokenLogoURL(currency.address)]\r\n      }\r\n      return [getTokenLogoURL(currency.address)]\r\n    }\r\n    return []\r\n  }, [currency, uriLocations])\r\n\r\n  if (currency === ETHER) {\r\n    return <BinanceIcon width={size} style={style} />\r\n  }\r\n\r\n  return <StyledLogo size={size} srcs={srcs} alt={`${currency?.symbol ?? 'token'} logo`} style={style} />\r\n}\r\n"],"mappings":";;AAAA,SAAmBA,KAAK,EAAEC,KAAK,QAAQ,kBAAkB;AACzD,SAASC,WAAW,QAAQ,oBAAoB;AAChD,OAAOC,KAAK,IAAIC,OAAO,QAAQ,OAAO;AACtC,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAOC,gBAAgB,MAAM,8BAA8B;AAC3D,SAASC,gBAAgB,QAAQ,yBAAyB;AAC1D,OAAOC,eAAe,MAAM,6BAA6B;AACzD,OAAOC,IAAI,MAAM,QAAQ;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,UAAU,GAAGP,MAAM,CAACI,IAAI,CAAmB;AACjD,WAAW,CAAC;EAAEI;AAAK,CAAC,KAAKA,IAAI;AAC7B,YAAY,CAAC;EAAEA;AAAK,CAAC,KAAKA,IAAI;AAC9B,CAAC;AAAAC,EAAA,GAHKF,UAAU;AAKhB,eAAe,SAASG,YAAYA,CAAC;EACnCC,QAAQ;EACRH,IAAI,GAAG,MAAM;EACbI;AAKF,CAAC,EAAE;EAAAC,EAAA;EAAA,IAAAC,gBAAA;EACD,MAAMC,YAAY,GAAGd,gBAAgB,CAACU,QAAQ,YAAYT,gBAAgB,GAAGS,QAAQ,CAACK,OAAO,GAAGC,SAAS,CAAC;EAE1G,MAAMC,IAAc,GAAGnB,OAAO,CAAC,MAAM;IACnC,IAAIY,QAAQ,KAAKhB,KAAK,EAAE,OAAO,EAAE;IAEjC,IAAIgB,QAAQ,YAAYf,KAAK,EAAE;MAC7B,IAAIe,QAAQ,YAAYT,gBAAgB,EAAE;QACxC,OAAO,CAAC,GAAGa,YAAY,EAAEZ,eAAe,CAACQ,QAAQ,CAACQ,OAAO,CAAC,CAAC;MAC7D;MACA,OAAO,CAAChB,eAAe,CAACQ,QAAQ,CAACQ,OAAO,CAAC,CAAC;IAC5C;IACA,OAAO,EAAE;EACX,CAAC,EAAE,CAACR,QAAQ,EAAEI,YAAY,CAAC,CAAC;EAE5B,IAAIJ,QAAQ,KAAKhB,KAAK,EAAE;IACtB,oBAAOW,OAAA,CAACT,WAAW;MAACuB,KAAK,EAAEZ,IAAK;MAACI,KAAK,EAAEA;IAAM;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACnD;EAEA,oBAAOlB,OAAA,CAACC,UAAU;IAACC,IAAI,EAAEA,IAAK;IAACU,IAAI,EAAEA,IAAK;IAACO,GAAG,EAAE,IAAAX,gBAAA,GAAGH,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEe,MAAM,cAAAZ,gBAAA,cAAAA,gBAAA,GAAI,OAAO,OAAQ;IAACF,KAAK,EAAEA;EAAM;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACzG;AAACX,EAAA,CA5BuBH,YAAY;EAAA,QASbT,gBAAgB;AAAA;AAAA0B,GAAA,GATfjB,YAAY;AAAA,IAAAD,EAAA,EAAAkB,GAAA;AAAAC,YAAA,CAAAnB,EAAA;AAAAmB,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}