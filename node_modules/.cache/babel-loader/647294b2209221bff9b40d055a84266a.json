{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Devrim\\\\Documents\\\\FRANKswapUIforProspBlast\\\\src\\\\views\\\\Voting\\\\Proposal\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { ArrowBackIcon, Box, Button, Flex, Heading } from '@pancakeswap/uikit';\nimport { useWeb3React } from '@web3-react/core';\nimport { Link, useParams } from 'react-router-dom';\nimport { useAppDispatch } from 'state';\nimport { ProposalState, VotingStateLoadingStatus } from 'state/types';\nimport { useGetProposal, useGetVotingStateLoadingStatus, useGetVotes, useGetProposalLoadingStatus } from 'state/voting/hooks';\nimport { fetchProposal, fetchVotes, verifyVotes } from 'state/voting';\nimport { useTranslation } from 'contexts/Localization';\nimport Container from 'components/Layout/Container';\nimport ReactMarkdown from 'components/ReactMarkdown';\nimport PageLoader from 'components/Loader/PageLoader';\nimport { isCoreProposal } from '../helpers';\nimport { ProposalStateTag, ProposalTypeTag } from '../components/Proposals/tags';\nimport Layout from '../components/Layout';\nimport Details from './Details';\nimport Results from './Results';\nimport Vote from './Vote';\nimport Votes from './Votes';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Proposal = () => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const proposal = useGetProposal(id);\n  const {\n    t\n  } = useTranslation();\n  const {\n    account\n  } = useWeb3React();\n  const dispatch = useAppDispatch();\n  const votes = useGetVotes(id);\n  const voteLoadingStatus = useGetVotingStateLoadingStatus();\n  const proposalLoadingStatus = useGetProposalLoadingStatus();\n  const hasAccountVoted = account && votes.some(vote => vote.voter.toLowerCase() === account.toLowerCase());\n  const {\n    id: proposalId = null,\n    snapshot = null\n  } = proposal !== null && proposal !== void 0 ? proposal : {};\n  const isPageLoading = voteLoadingStatus === VotingStateLoadingStatus.LOADING || proposalLoadingStatus === VotingStateLoadingStatus.LOADING;\n  useEffect(() => {\n    dispatch(fetchProposal(id));\n  }, [id, dispatch]); // We have to wait for the proposal to load before fetching the votes because we need to include the snapshot\n\n  useEffect(() => {\n    const getVotes = async () => {\n      await dispatch(fetchVotes({\n        proposalId,\n        block: Number(snapshot)\n      }));\n      dispatch(verifyVotes({\n        proposalId,\n        snapshot\n      }));\n    };\n\n    if (proposalId && snapshot) {\n      getVotes();\n    }\n  }, [proposalId, snapshot, dispatch]);\n\n  if (!proposal) {\n    return /*#__PURE__*/_jsxDEV(PageLoader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    py: \"40px\",\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      mb: \"40px\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        as: Link,\n        to: \"/voting\",\n        variant: \"text\",\n        startIcon: /*#__PURE__*/_jsxDEV(ArrowBackIcon, {\n          color: \"primary\",\n          width: \"24px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 66\n        }, this),\n        px: \"0\",\n        children: t('Back to Vote Overview')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Layout, {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          mb: \"32px\",\n          children: [/*#__PURE__*/_jsxDEV(Flex, {\n            alignItems: \"center\",\n            mb: \"8px\",\n            children: [/*#__PURE__*/_jsxDEV(ProposalStateTag, {\n              proposalState: proposal.state\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ProposalTypeTag, {\n              isCoreProposal: isCoreProposal(proposal),\n              ml: \"8px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Heading, {\n            as: \"h1\",\n            scale: \"xl\",\n            mb: \"16px\",\n            children: proposal.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            children: /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n              children: proposal.body\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), !isPageLoading && !hasAccountVoted && proposal.state === ProposalState.ACTIVE && /*#__PURE__*/_jsxDEV(Vote, {\n          proposal: proposal,\n          mb: \"16px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Votes, {\n          votes: votes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(Details, {\n          proposal: proposal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Results, {\n          choices: proposal.choices,\n          votes: votes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Proposal, \"n8S/cNkiICCDoLEIxdZnpa3dgtA=\", false, function () {\n  return [useParams, useGetProposal, useTranslation, useWeb3React, useAppDispatch, useGetVotes, useGetVotingStateLoadingStatus, useGetProposalLoadingStatus];\n});\n\n_c = Proposal;\nexport default Proposal;\n\nvar _c;\n\n$RefreshReg$(_c, \"Proposal\");","map":{"version":3,"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/views/Voting/Proposal/index.tsx"],"names":["React","useEffect","ArrowBackIcon","Box","Button","Flex","Heading","useWeb3React","Link","useParams","useAppDispatch","ProposalState","VotingStateLoadingStatus","useGetProposal","useGetVotingStateLoadingStatus","useGetVotes","useGetProposalLoadingStatus","fetchProposal","fetchVotes","verifyVotes","useTranslation","Container","ReactMarkdown","PageLoader","isCoreProposal","ProposalStateTag","ProposalTypeTag","Layout","Details","Results","Vote","Votes","Proposal","id","proposal","t","account","dispatch","votes","voteLoadingStatus","proposalLoadingStatus","hasAccountVoted","some","vote","voter","toLowerCase","proposalId","snapshot","isPageLoading","LOADING","getVotes","block","Number","state","title","body","ACTIVE","choices"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\r\nimport { ArrowBackIcon, Box, Button, Flex, Heading } from '@pancakeswap/uikit'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { Link, useParams } from 'react-router-dom'\r\nimport { useAppDispatch } from 'state'\r\nimport { ProposalState, VotingStateLoadingStatus } from 'state/types'\r\nimport {\r\n  useGetProposal,\r\n  useGetVotingStateLoadingStatus,\r\n  useGetVotes,\r\n  useGetProposalLoadingStatus,\r\n} from 'state/voting/hooks'\r\nimport { fetchProposal, fetchVotes, verifyVotes } from 'state/voting'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport Container from 'components/Layout/Container'\r\nimport ReactMarkdown from 'components/ReactMarkdown'\r\nimport PageLoader from 'components/Loader/PageLoader'\r\nimport { isCoreProposal } from '../helpers'\r\nimport { ProposalStateTag, ProposalTypeTag } from '../components/Proposals/tags'\r\nimport Layout from '../components/Layout'\r\nimport Details from './Details'\r\nimport Results from './Results'\r\nimport Vote from './Vote'\r\nimport Votes from './Votes'\r\n\r\nconst Proposal = () => {\r\n  const { id }: { id: string } = useParams()\r\n  const proposal = useGetProposal(id)\r\n  const { t } = useTranslation()\r\n  const { account } = useWeb3React()\r\n  const dispatch = useAppDispatch()\r\n  const votes = useGetVotes(id)\r\n  const voteLoadingStatus = useGetVotingStateLoadingStatus()\r\n  const proposalLoadingStatus = useGetProposalLoadingStatus()\r\n  const hasAccountVoted = account && votes.some((vote) => vote.voter.toLowerCase() === account.toLowerCase())\r\n  const { id: proposalId = null, snapshot = null } = proposal ?? {}\r\n  const isPageLoading =\r\n    voteLoadingStatus === VotingStateLoadingStatus.LOADING || proposalLoadingStatus === VotingStateLoadingStatus.LOADING\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchProposal(id))\r\n  }, [id, dispatch])\r\n\r\n  // We have to wait for the proposal to load before fetching the votes because we need to include the snapshot\r\n  useEffect(() => {\r\n    const getVotes = async () => {\r\n      await dispatch(fetchVotes({ proposalId, block: Number(snapshot) }))\r\n      dispatch(verifyVotes({ proposalId, snapshot }))\r\n    }\r\n\r\n    if (proposalId && snapshot) {\r\n      getVotes()\r\n    }\r\n  }, [proposalId, snapshot, dispatch])\r\n\r\n  if (!proposal) {\r\n    return <PageLoader />\r\n  }\r\n\r\n  return (\r\n    <Container py=\"40px\">\r\n      <Box mb=\"40px\">\r\n        <Button as={Link} to=\"/voting\" variant=\"text\" startIcon={<ArrowBackIcon color=\"primary\" width=\"24px\" />} px=\"0\">\r\n          {t('Back to Vote Overview')}\r\n        </Button>\r\n      </Box>\r\n      <Layout>\r\n        <Box>\r\n          <Box mb=\"32px\">\r\n            <Flex alignItems=\"center\" mb=\"8px\">\r\n              <ProposalStateTag proposalState={proposal.state} />\r\n              <ProposalTypeTag isCoreProposal={isCoreProposal(proposal)} ml=\"8px\" />\r\n            </Flex>\r\n            <Heading as=\"h1\" scale=\"xl\" mb=\"16px\">\r\n              {proposal.title}\r\n            </Heading>\r\n            <Box>\r\n              <ReactMarkdown>{proposal.body}</ReactMarkdown>\r\n            </Box>\r\n          </Box>\r\n          {!isPageLoading && !hasAccountVoted && proposal.state === ProposalState.ACTIVE && (\r\n            <Vote proposal={proposal} mb=\"16px\" />\r\n          )}\r\n          <Votes votes={votes} />\r\n        </Box>\r\n        <Box>\r\n          <Details proposal={proposal} />\r\n          <Results choices={proposal.choices} votes={votes} />\r\n        </Box>\r\n      </Layout>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Proposal\r\n"]},"metadata":{},"sourceType":"module"}