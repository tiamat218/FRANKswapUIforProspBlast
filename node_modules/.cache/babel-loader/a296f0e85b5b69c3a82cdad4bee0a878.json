{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Devrim\\\\Documents\\\\FRANKswapUIforProspBlast\\\\src\\\\components\\\\EasyMde\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from 'react';\nimport EasyMde from 'easymde';\nimport styled from 'styled-components';\nimport merge from 'lodash/merge';\nimport 'easymde/dist/easymde.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Wrapper = styled.div`\n  .EasyMDEContainer .CodeMirror {\n    background: ${({\n  theme\n}) => theme.colors.input};\n    border-color: ${({\n  theme\n}) => theme.colors.cardBorder};\n    border-bottom-left-radius: 16px;\n    border-bottom-right-radius: 16px;\n    box-shadow: ${({\n  theme\n}) => theme.shadows.inset};\n    padding: 16px;\n  }\n\n  .CodeMirror-code {\n    color: ${({\n  theme\n}) => theme.colors.text};\n  }\n\n  .editor-toolbar {\n    background: ${({\n  theme\n}) => theme.card.background};\n    border-color: ${({\n  theme\n}) => theme.colors.cardBorder};\n    border-top-left-radius: 16px;\n    border-top-right-radius: 16px;\n    color: ${({\n  theme\n}) => theme.colors.text};\n\n    a,\n    button {\n      color: ${({\n  theme\n}) => theme.colors.text};\n\n      &:hover,\n      &.active {\n        background: ${({\n  theme\n}) => theme.colors.background};\n        border: 0;\n      }\n    }\n  }\n`;\n/**\r\n * @see https://github.com/Ionaru/easy-markdown-editor#configuration\r\n */\n\n_c = Wrapper;\nconst defaultOptions = {\n  autofocus: false,\n  status: false,\n  hideIcons: ['guide', 'fullscreen', 'preview', 'side-by-side'],\n  spellChecker: false,\n  styleSelectedText: false\n};\n\nconst SimpleMde = ({\n  options,\n  onTextChange,\n  ...props\n}) => {\n  _s();\n\n  const ref = useRef();\n  const onTextChangeHandler = useRef(onTextChange);\n  useEffect(() => {\n    let simpleMde = new EasyMde(merge({\n      element: ref.current\n    }, defaultOptions, options));\n    simpleMde.codemirror.on('change', () => {\n      onTextChangeHandler.current(simpleMde.value());\n    });\n    return () => {\n      if (simpleMde) {\n        simpleMde.toTextArea();\n        simpleMde = null;\n      }\n    };\n  }, [options, onTextChangeHandler, ref]);\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n      ref: ref,\n      readOnly: true,\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleMde, \"w7o6VMtSTwTphBVgQjTKodHKvrE=\");\n\n_c2 = SimpleMde;\nexport default SimpleMde;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"SimpleMde\");","map":{"version":3,"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/components/EasyMde/index.tsx"],"names":["React","useEffect","useRef","EasyMde","styled","merge","Wrapper","div","theme","colors","input","cardBorder","shadows","inset","text","card","background","defaultOptions","autofocus","status","hideIcons","spellChecker","styleSelectedText","SimpleMde","options","onTextChange","props","ref","onTextChangeHandler","simpleMde","element","current","codemirror","on","value","toTextArea"],"mappings":";;;AAAA,OAAOA,KAAP,IAAwCC,SAAxC,EAAmDC,MAAnD,QAAiE,OAAjE;AACA,OAAOC,OAAP,MAAoB,SAApB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,KAAP,MAAkB,cAAlB;AAEA,OAAO,8BAAP;;AAOA,MAAMC,OAAO,GAAGF,MAAM,CAACG,GAAI;AAC3B;AACA,kBAAkB,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,MAAN,CAAaC,KAAM;AACpD,oBAAoB,CAAC;AAAEF,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,MAAN,CAAaE,UAAW;AAC3D;AACA;AACA,kBAAkB,CAAC;AAAEH,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACI,OAAN,CAAcC,KAAM;AACrD;AACA;AACA;AACA;AACA,aAAa,CAAC;AAAEL,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,MAAN,CAAaK,IAAK;AAC9C;AACA;AACA;AACA,kBAAkB,CAAC;AAAEN,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACO,IAAN,CAAWC,UAAW;AACvD,oBAAoB,CAAC;AAAER,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,MAAN,CAAaE,UAAW;AAC3D;AACA;AACA,aAAa,CAAC;AAAEH,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,MAAN,CAAaK,IAAK;AAC9C;AACA;AACA;AACA,eAAe,CAAC;AAAEN,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,MAAN,CAAaK,IAAK;AAChD;AACA;AACA;AACA,sBAAsB,CAAC;AAAEN,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,MAAN,CAAaO,UAAW;AAC7D;AACA;AACA;AACA;AACA,CAhCA;AAkCA;AACA;AACA;;KApCMV,O;AAqCN,MAAMW,cAA+B,GAAG;AACtCC,EAAAA,SAAS,EAAE,KAD2B;AAEtCC,EAAAA,MAAM,EAAE,KAF8B;AAGtCC,EAAAA,SAAS,EAAE,CAAC,OAAD,EAAU,YAAV,EAAwB,SAAxB,EAAmC,cAAnC,CAH2B;AAItCC,EAAAA,YAAY,EAAE,KAJwB;AAKtCC,EAAAA,iBAAiB,EAAE;AALmB,CAAxC;;AAQA,MAAMC,SAAmC,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,YAAX;AAAyB,KAAGC;AAA5B,CAAD,KAAyC;AAAA;;AACnF,QAAMC,GAAG,GAAGzB,MAAM,EAAlB;AACA,QAAM0B,mBAAmB,GAAG1B,MAAM,CAACuB,YAAD,CAAlC;AAEAxB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI4B,SAAS,GAAG,IAAI1B,OAAJ,CAAYE,KAAK,CAAC;AAAEyB,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAAf,KAAD,EAA2Bd,cAA3B,EAA2CO,OAA3C,CAAjB,CAAhB;AAEAK,IAAAA,SAAS,CAACG,UAAV,CAAqBC,EAArB,CAAwB,QAAxB,EAAkC,MAAM;AACtCL,MAAAA,mBAAmB,CAACG,OAApB,CAA4BF,SAAS,CAACK,KAAV,EAA5B;AACD,KAFD;AAIA,WAAO,MAAM;AACX,UAAIL,SAAJ,EAAe;AACbA,QAAAA,SAAS,CAACM,UAAV;AACAN,QAAAA,SAAS,GAAG,IAAZ;AACD;AACF,KALD;AAMD,GAbQ,EAaN,CAACL,OAAD,EAAUI,mBAAV,EAA+BD,GAA/B,CAbM,CAAT;AAeA,sBACE,QAAC,OAAD;AAAA,2BACE;AAAU,MAAA,GAAG,EAAEA,GAAf;AAAoB,MAAA,QAAQ,MAA5B;AAAA,SAAiCD;AAAjC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAxBD;;GAAMH,S;;MAAAA,S;AA0BN,eAAeA,SAAf","sourcesContent":["import React, { TextareaHTMLAttributes, useEffect, useRef } from 'react'\r\nimport EasyMde from 'easymde'\r\nimport styled from 'styled-components'\r\nimport merge from 'lodash/merge'\r\n\r\nimport 'easymde/dist/easymde.min.css'\r\n\r\ninterface SimpleMdeProps extends Omit<TextareaHTMLAttributes<HTMLTextAreaElement>, 'onChange'> {\r\n  options?: EasyMde.Options\r\n  onTextChange: (value: string) => void\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  .EasyMDEContainer .CodeMirror {\r\n    background: ${({ theme }) => theme.colors.input};\r\n    border-color: ${({ theme }) => theme.colors.cardBorder};\r\n    border-bottom-left-radius: 16px;\r\n    border-bottom-right-radius: 16px;\r\n    box-shadow: ${({ theme }) => theme.shadows.inset};\r\n    padding: 16px;\r\n  }\r\n\r\n  .CodeMirror-code {\r\n    color: ${({ theme }) => theme.colors.text};\r\n  }\r\n\r\n  .editor-toolbar {\r\n    background: ${({ theme }) => theme.card.background};\r\n    border-color: ${({ theme }) => theme.colors.cardBorder};\r\n    border-top-left-radius: 16px;\r\n    border-top-right-radius: 16px;\r\n    color: ${({ theme }) => theme.colors.text};\r\n\r\n    a,\r\n    button {\r\n      color: ${({ theme }) => theme.colors.text};\r\n\r\n      &:hover,\r\n      &.active {\r\n        background: ${({ theme }) => theme.colors.background};\r\n        border: 0;\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\n/**\r\n * @see https://github.com/Ionaru/easy-markdown-editor#configuration\r\n */\r\nconst defaultOptions: EasyMde.Options = {\r\n  autofocus: false,\r\n  status: false,\r\n  hideIcons: ['guide', 'fullscreen', 'preview', 'side-by-side'],\r\n  spellChecker: false,\r\n  styleSelectedText: false,\r\n}\r\n\r\nconst SimpleMde: React.FC<SimpleMdeProps> = ({ options, onTextChange, ...props }) => {\r\n  const ref = useRef()\r\n  const onTextChangeHandler = useRef(onTextChange)\r\n\r\n  useEffect(() => {\r\n    let simpleMde = new EasyMde(merge({ element: ref.current }, defaultOptions, options))\r\n\r\n    simpleMde.codemirror.on('change', () => {\r\n      onTextChangeHandler.current(simpleMde.value())\r\n    })\r\n\r\n    return () => {\r\n      if (simpleMde) {\r\n        simpleMde.toTextArea()\r\n        simpleMde = null\r\n      }\r\n    }\r\n  }, [options, onTextChangeHandler, ref])\r\n\r\n  return (\r\n    <Wrapper>\r\n      <textarea ref={ref} readOnly {...props} />\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default SimpleMde\r\n"]},"metadata":{},"sourceType":"module"}