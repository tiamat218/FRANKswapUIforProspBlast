{"ast":null,"code":"import React,{useEffect}from'react';import{Box}from'@pancakeswap/uikit';import{useTheme}from'styled-components';import{useTranslation}from'contexts/Localization';/**\r\n * When the script tag is injected the TradingView object is not immediately\r\n * available on the window. So we listen for when it gets set\r\n */import{jsx as _jsx}from\"react/jsx-runtime\";const tradingViewListener=async()=>new Promise(resolve=>Object.defineProperty(window,'TradingView',{configurable:true,set(value){this.tv=value;resolve(value);}}));const initializeTradingView=(TradingViewObj,theme,localeCode)=>{/* eslint-disable new-cap */ /* eslint-disable no-new */ // @ts-ignore\nnew TradingViewObj.widget({autosize:true,height:'100%',symbol:'BINANCE:BNBUSDT',interval:'5',timezone:'Etc/UTC',theme:theme.isDark?'dark':'light',style:'1',locale:localeCode,toolbar_bg:'#f1f3f6',enable_publishing:false,allow_symbol_change:true,container_id:'tradingview_b239c'});};const TradingView=()=>{const{currentLanguage}=useTranslation();const theme=useTheme();useEffect(()=>{// @ts-ignore\nif(window.TradingView){// @ts-ignore\ninitializeTradingView(window.TradingView,theme,currentLanguage.code);}else{tradingViewListener().then(tv=>{initializeTradingView(tv,theme,currentLanguage.code);});}},[theme,currentLanguage]);return/*#__PURE__*/_jsx(Box,{overflow:\"hidden\",className:\"tradingview_container\",children:/*#__PURE__*/_jsx(\"div\",{id:\"tradingview_b239c\"})});};export default TradingView;","map":{"version":3,"names":["React","useEffect","Box","useTheme","useTranslation","jsx","_jsx","tradingViewListener","Promise","resolve","Object","defineProperty","window","configurable","set","value","tv","initializeTradingView","TradingViewObj","theme","localeCode","widget","autosize","height","symbol","interval","timezone","isDark","style","locale","toolbar_bg","enable_publishing","allow_symbol_change","container_id","TradingView","currentLanguage","code","then","overflow","className","children","id"],"sources":["C:/Users/frkul/Documents/swapUI_pancake-frontend/src/views/Predictions/components/TradingView.tsx"],"sourcesContent":["import React, { useEffect } from 'react'\r\nimport { Box } from '@pancakeswap/uikit'\r\nimport { DefaultTheme, useTheme } from 'styled-components'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\n/**\r\n * When the script tag is injected the TradingView object is not immediately\r\n * available on the window. So we listen for when it gets set\r\n */\r\nconst tradingViewListener = async () =>\r\n  new Promise<void>((resolve) =>\r\n    Object.defineProperty(window, 'TradingView', {\r\n      configurable: true,\r\n      set(value) {\r\n        this.tv = value\r\n        resolve(value)\r\n      },\r\n    }),\r\n  )\r\n\r\nconst initializeTradingView = (TradingViewObj: any, theme: DefaultTheme, localeCode: string) => {\r\n  /* eslint-disable new-cap */\r\n  /* eslint-disable no-new */\r\n  // @ts-ignore\r\n  new TradingViewObj.widget({\r\n    autosize: true,\r\n    height: '100%',\r\n    symbol: 'BINANCE:BNBUSDT',\r\n    interval: '5',\r\n    timezone: 'Etc/UTC',\r\n    theme: theme.isDark ? 'dark' : 'light',\r\n    style: '1',\r\n    locale: localeCode,\r\n    toolbar_bg: '#f1f3f6',\r\n    enable_publishing: false,\r\n    allow_symbol_change: true,\r\n    container_id: 'tradingview_b239c',\r\n  })\r\n}\r\n\r\nconst TradingView = () => {\r\n  const { currentLanguage } = useTranslation()\r\n  const theme = useTheme()\r\n\r\n  useEffect(() => {\r\n    // @ts-ignore\r\n    if (window.TradingView) {\r\n      // @ts-ignore\r\n      initializeTradingView(window.TradingView, theme, currentLanguage.code)\r\n    } else {\r\n      tradingViewListener().then((tv) => {\r\n        initializeTradingView(tv, theme, currentLanguage.code)\r\n      })\r\n    }\r\n  }, [theme, currentLanguage])\r\n\r\n  return (\r\n    <Box overflow=\"hidden\" className=\"tradingview_container\">\r\n      <div id=\"tradingview_b239c\" />\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default TradingView\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,KAAQ,OAAO,CACxC,OAASC,GAAG,KAAQ,oBAAoB,CACxC,OAAuBC,QAAQ,KAAQ,mBAAmB,CAC1D,OAASC,cAAc,KAAQ,uBAAuB,CAEtD;AACA;AACA;AACA,GAHA,OAAAC,GAAA,IAAAC,IAAA,yBAIA,KAAM,CAAAC,mBAAmB,CAAG,KAAAA,CAAA,GAC1B,GAAI,CAAAC,OAAO,CAAQC,OAAO,EACxBC,MAAM,CAACC,cAAc,CAACC,MAAM,CAAE,aAAa,CAAE,CAC3CC,YAAY,CAAE,IAAI,CAClBC,GAAGA,CAACC,KAAK,CAAE,CACT,IAAI,CAACC,EAAE,CAAGD,KAAK,CACfN,OAAO,CAACM,KAAK,CAAC,CAChB,CACF,CAAC,CACH,CAAC,CAEH,KAAM,CAAAE,qBAAqB,CAAGA,CAACC,cAAmB,CAAEC,KAAmB,CAAEC,UAAkB,GAAK,CAC9F,6BACA,4BACA;AACA,GAAI,CAAAF,cAAc,CAACG,MAAM,CAAC,CACxBC,QAAQ,CAAE,IAAI,CACdC,MAAM,CAAE,MAAM,CACdC,MAAM,CAAE,iBAAiB,CACzBC,QAAQ,CAAE,GAAG,CACbC,QAAQ,CAAE,SAAS,CACnBP,KAAK,CAAEA,KAAK,CAACQ,MAAM,CAAG,MAAM,CAAG,OAAO,CACtCC,KAAK,CAAE,GAAG,CACVC,MAAM,CAAET,UAAU,CAClBU,UAAU,CAAE,SAAS,CACrBC,iBAAiB,CAAE,KAAK,CACxBC,mBAAmB,CAAE,IAAI,CACzBC,YAAY,CAAE,mBAChB,CAAC,CAAC,CACJ,CAAC,CAED,KAAM,CAAAC,WAAW,CAAGA,CAAA,GAAM,CACxB,KAAM,CAAEC,eAAgB,CAAC,CAAG/B,cAAc,CAAC,CAAC,CAC5C,KAAM,CAAAe,KAAK,CAAGhB,QAAQ,CAAC,CAAC,CAExBF,SAAS,CAAC,IAAM,CACd;AACA,GAAIW,MAAM,CAACsB,WAAW,CAAE,CACtB;AACAjB,qBAAqB,CAACL,MAAM,CAACsB,WAAW,CAAEf,KAAK,CAAEgB,eAAe,CAACC,IAAI,CAAC,CACxE,CAAC,IAAM,CACL7B,mBAAmB,CAAC,CAAC,CAAC8B,IAAI,CAAErB,EAAE,EAAK,CACjCC,qBAAqB,CAACD,EAAE,CAAEG,KAAK,CAAEgB,eAAe,CAACC,IAAI,CAAC,CACxD,CAAC,CAAC,CACJ,CACF,CAAC,CAAE,CAACjB,KAAK,CAAEgB,eAAe,CAAC,CAAC,CAE5B,mBACE7B,IAAA,CAACJ,GAAG,EAACoC,QAAQ,CAAC,QAAQ,CAACC,SAAS,CAAC,uBAAuB,CAAAC,QAAA,cACtDlC,IAAA,QAAKmC,EAAE,CAAC,mBAAmB,CAAE,CAAC,CAC3B,CAAC,CAEV,CAAC,CAED,cAAe,CAAAP,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module"}