{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { ethers } from 'ethers';\nimport useLastUpdated from 'hooks/useLastUpdated';\nimport { getChainlinkOracleContract } from 'utils/contractHelpers';\n\nconst useGetLatestOraclePrice = () => {\n  _s();\n\n  const [price, setPrice] = useState(ethers.BigNumber.from(0));\n  const {\n    lastUpdated,\n    setLastUpdated: refresh\n  } = useLastUpdated();\n  useEffect(() => {\n    const fetchPrice = async () => {\n      const contract = getChainlinkOracleContract();\n      const response = await contract.latestAnswer();\n      setPrice(response);\n    };\n\n    fetchPrice();\n  }, [lastUpdated, setPrice]);\n  return {\n    price,\n    lastUpdated,\n    refresh\n  };\n};\n\n_s(useGetLatestOraclePrice, \"dOrMCCzRAFha0+LEHb36OShsQAk=\", false, function () {\n  return [useLastUpdated];\n});\n\nexport default useGetLatestOraclePrice;","map":{"version":3,"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/views/Predictions/hooks/useGetLatestOraclePrice.ts"],"names":["useEffect","useState","ethers","useLastUpdated","getChainlinkOracleContract","useGetLatestOraclePrice","price","setPrice","BigNumber","from","lastUpdated","setLastUpdated","refresh","fetchPrice","contract","response","latestAnswer"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAOC,cAAP,MAA2B,sBAA3B;AACA,SAASC,0BAAT,QAA2C,uBAA3C;;AAEA,MAAMC,uBAAuB,GAAG,MAAM;AAAA;;AACpC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAACC,MAAM,CAACM,SAAP,CAAiBC,IAAjB,CAAsB,CAAtB,CAAD,CAAlC;AACA,QAAM;AAAEC,IAAAA,WAAF;AAAeC,IAAAA,cAAc,EAAEC;AAA/B,MAA2CT,cAAc,EAA/D;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMa,UAAU,GAAG,YAAY;AAC7B,YAAMC,QAAQ,GAAGV,0BAA0B,EAA3C;AACA,YAAMW,QAAQ,GAAG,MAAMD,QAAQ,CAACE,YAAT,EAAvB;AACAT,MAAAA,QAAQ,CAACQ,QAAD,CAAR;AACD,KAJD;;AAMAF,IAAAA,UAAU;AACX,GARQ,EAQN,CAACH,WAAD,EAAcH,QAAd,CARM,CAAT;AAUA,SAAO;AAAED,IAAAA,KAAF;AAASI,IAAAA,WAAT;AAAsBE,IAAAA;AAAtB,GAAP;AACD,CAfD;;GAAMP,uB;UAE6CF,c;;;AAenD,eAAeE,uBAAf","sourcesContent":["import { useEffect, useState } from 'react'\r\nimport { ethers } from 'ethers'\r\nimport useLastUpdated from 'hooks/useLastUpdated'\r\nimport { getChainlinkOracleContract } from 'utils/contractHelpers'\r\n\r\nconst useGetLatestOraclePrice = () => {\r\n  const [price, setPrice] = useState(ethers.BigNumber.from(0))\r\n  const { lastUpdated, setLastUpdated: refresh } = useLastUpdated()\r\n\r\n  useEffect(() => {\r\n    const fetchPrice = async () => {\r\n      const contract = getChainlinkOracleContract()\r\n      const response = await contract.latestAnswer()\r\n      setPrice(response)\r\n    }\r\n\r\n    fetchPrice()\r\n  }, [lastUpdated, setPrice])\r\n\r\n  return { price, lastUpdated, refresh }\r\n}\r\n\r\nexport default useGetLatestOraclePrice\r\n"]},"metadata":{},"sourceType":"module"}