{"ast":null,"code":"import{createSlice}from'@reduxjs/toolkit';import teamsList from'config/constants/teams';import{getTeam,getTeams}from'./helpers';const teamsById=teamsList.reduce((accum,team)=>{return{...accum,[team.id]:team};},{});const initialState={isInitialized:false,isLoading:true,data:teamsById};export const teamsSlice=createSlice({name:'teams',initialState,reducers:{fetchStart:state=>{state.isLoading=true;},fetchFailed:state=>{state.isLoading=false;state.isInitialized=true;},teamFetchSucceeded:(state,action)=>{state.isInitialized=true;state.isLoading=false;state.data[action.payload.id]=action.payload;},teamsFetchSucceeded:(state,action)=>{state.isInitialized=true;state.isLoading=false;state.data=action.payload;}}});// Actions\nexport const{fetchStart,teamFetchSucceeded,fetchFailed,teamsFetchSucceeded}=teamsSlice.actions;// Thunks\nexport const fetchTeam=teamId=>async dispatch=>{try{dispatch(fetchStart());const team=await getTeam(teamId);dispatch(teamFetchSucceeded(team));}catch(error){dispatch(fetchFailed());}};export const fetchTeams=()=>async dispatch=>{try{dispatch(fetchStart());const teams=await getTeams();dispatch(teamsFetchSucceeded(teams));}catch(error){dispatch(fetchFailed());}};export default teamsSlice.reducer;","map":{"version":3,"names":["createSlice","teamsList","getTeam","getTeams","teamsById","reduce","accum","team","id","initialState","isInitialized","isLoading","data","teamsSlice","name","reducers","fetchStart","state","fetchFailed","teamFetchSucceeded","action","payload","teamsFetchSucceeded","actions","fetchTeam","teamId","dispatch","error","fetchTeams","teams","reducer"],"sources":["C:/Users/frkul/Documents/swapUI_pancake-frontend/src/state/teams/index.tsx"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit'\r\nimport teamsList from 'config/constants/teams'\r\nimport { Team } from 'config/constants/types'\r\nimport { TeamsById, TeamsState } from '../types'\r\nimport { getTeam, getTeams } from './helpers'\r\n\r\nconst teamsById: TeamsById = teamsList.reduce((accum, team) => {\r\n  return {\r\n    ...accum,\r\n    [team.id]: team,\r\n  }\r\n}, {})\r\n\r\nconst initialState: TeamsState = {\r\n  isInitialized: false,\r\n  isLoading: true,\r\n  data: teamsById,\r\n}\r\n\r\nexport const teamsSlice = createSlice({\r\n  name: 'teams',\r\n  initialState,\r\n  reducers: {\r\n    fetchStart: (state) => {\r\n      state.isLoading = true\r\n    },\r\n    fetchFailed: (state) => {\r\n      state.isLoading = false\r\n      state.isInitialized = true\r\n    },\r\n    teamFetchSucceeded: (state, action: PayloadAction<Team>) => {\r\n      state.isInitialized = true\r\n      state.isLoading = false\r\n      state.data[action.payload.id] = action.payload\r\n    },\r\n    teamsFetchSucceeded: (state, action: PayloadAction<TeamsById>) => {\r\n      state.isInitialized = true\r\n      state.isLoading = false\r\n      state.data = action.payload\r\n    },\r\n  },\r\n})\r\n\r\n// Actions\r\nexport const { fetchStart, teamFetchSucceeded, fetchFailed, teamsFetchSucceeded } = teamsSlice.actions\r\n\r\n// Thunks\r\nexport const fetchTeam = (teamId: number) => async (dispatch) => {\r\n  try {\r\n    dispatch(fetchStart())\r\n    const team = await getTeam(teamId)\r\n    dispatch(teamFetchSucceeded(team))\r\n  } catch (error) {\r\n    dispatch(fetchFailed())\r\n  }\r\n}\r\n\r\nexport const fetchTeams = () => async (dispatch) => {\r\n  try {\r\n    dispatch(fetchStart())\r\n    const teams = await getTeams()\r\n    dispatch(teamsFetchSucceeded(teams))\r\n  } catch (error) {\r\n    dispatch(fetchFailed())\r\n  }\r\n}\r\n\r\nexport default teamsSlice.reducer\r\n"],"mappings":"AAAA,OAASA,WAAW,KAAuB,kBAAkB,CAC7D,MAAO,CAAAC,SAAS,KAAM,wBAAwB,CAG9C,OAASC,OAAO,CAAEC,QAAQ,KAAQ,WAAW,CAE7C,KAAM,CAAAC,SAAoB,CAAGH,SAAS,CAACI,MAAM,CAAC,CAACC,KAAK,CAAEC,IAAI,GAAK,CAC7D,MAAO,CACL,GAAGD,KAAK,CACR,CAACC,IAAI,CAACC,EAAE,EAAGD,IACb,CAAC,CACH,CAAC,CAAE,CAAC,CAAC,CAAC,CAEN,KAAM,CAAAE,YAAwB,CAAG,CAC/BC,aAAa,CAAE,KAAK,CACpBC,SAAS,CAAE,IAAI,CACfC,IAAI,CAAER,SACR,CAAC,CAED,MAAO,MAAM,CAAAS,UAAU,CAAGb,WAAW,CAAC,CACpCc,IAAI,CAAE,OAAO,CACbL,YAAY,CACZM,QAAQ,CAAE,CACRC,UAAU,CAAGC,KAAK,EAAK,CACrBA,KAAK,CAACN,SAAS,CAAG,IAAI,CACxB,CAAC,CACDO,WAAW,CAAGD,KAAK,EAAK,CACtBA,KAAK,CAACN,SAAS,CAAG,KAAK,CACvBM,KAAK,CAACP,aAAa,CAAG,IAAI,CAC5B,CAAC,CACDS,kBAAkB,CAAEA,CAACF,KAAK,CAAEG,MAA2B,GAAK,CAC1DH,KAAK,CAACP,aAAa,CAAG,IAAI,CAC1BO,KAAK,CAACN,SAAS,CAAG,KAAK,CACvBM,KAAK,CAACL,IAAI,CAACQ,MAAM,CAACC,OAAO,CAACb,EAAE,CAAC,CAAGY,MAAM,CAACC,OAAO,CAChD,CAAC,CACDC,mBAAmB,CAAEA,CAACL,KAAK,CAAEG,MAAgC,GAAK,CAChEH,KAAK,CAACP,aAAa,CAAG,IAAI,CAC1BO,KAAK,CAACN,SAAS,CAAG,KAAK,CACvBM,KAAK,CAACL,IAAI,CAAGQ,MAAM,CAACC,OAAO,CAC7B,CACF,CACF,CAAC,CAAC,CAEF;AACA,MAAO,MAAM,CAAEL,UAAU,CAAEG,kBAAkB,CAAED,WAAW,CAAEI,mBAAoB,CAAC,CAAGT,UAAU,CAACU,OAAO,CAEtG;AACA,MAAO,MAAM,CAAAC,SAAS,CAAIC,MAAc,EAAK,KAAO,CAAAC,QAAQ,EAAK,CAC/D,GAAI,CACFA,QAAQ,CAACV,UAAU,CAAC,CAAC,CAAC,CACtB,KAAM,CAAAT,IAAI,CAAG,KAAM,CAAAL,OAAO,CAACuB,MAAM,CAAC,CAClCC,QAAQ,CAACP,kBAAkB,CAACZ,IAAI,CAAC,CAAC,CACpC,CAAE,MAAOoB,KAAK,CAAE,CACdD,QAAQ,CAACR,WAAW,CAAC,CAAC,CAAC,CACzB,CACF,CAAC,CAED,MAAO,MAAM,CAAAU,UAAU,CAAGA,CAAA,GAAM,KAAO,CAAAF,QAAQ,EAAK,CAClD,GAAI,CACFA,QAAQ,CAACV,UAAU,CAAC,CAAC,CAAC,CACtB,KAAM,CAAAa,KAAK,CAAG,KAAM,CAAA1B,QAAQ,CAAC,CAAC,CAC9BuB,QAAQ,CAACJ,mBAAmB,CAACO,KAAK,CAAC,CAAC,CACtC,CAAE,MAAOF,KAAK,CAAE,CACdD,QAAQ,CAACR,WAAW,CAAC,CAAC,CAAC,CACzB,CACF,CAAC,CAED,cAAe,CAAAL,UAAU,CAACiB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module"}