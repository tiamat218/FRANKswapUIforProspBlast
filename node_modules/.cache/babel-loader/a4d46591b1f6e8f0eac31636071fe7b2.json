{"ast":null,"code":"import React from'react';import{Flex,Text,IconButton,AddIcon,MinusIcon,useModal,Skeleton}from'@pancakeswap/uikit';import{getBalanceNumber}from'utils/formatBalance';import{usePriceCakeBusd}from'state/farms/hooks';import{useCakeVault}from'state/pools/hooks';import Balance from'components/Balance';import NotEnoughTokensModal from'../../PoolCard/Modals/NotEnoughTokensModal';import{convertSharesToCake}from'../../../helpers';import VaultStakeModal from'../VaultStakeModal';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const HasSharesActions=_ref=>{let{pool,stakingTokenBalance}=_ref;const{userData:{userShares},pricePerFullShare}=useCakeVault();const{stakingToken}=pool;const{cakeAsBigNumber,cakeAsNumberBalance}=convertSharesToCake(userShares,pricePerFullShare);const cakePriceBusd=usePriceCakeBusd();const stakedDollarValue=cakePriceBusd.gt(0)?getBalanceNumber(cakeAsBigNumber.multipliedBy(cakePriceBusd),stakingToken.decimals):0;const[onPresentTokenRequired]=useModal(/*#__PURE__*/_jsx(NotEnoughTokensModal,{tokenSymbol:stakingToken.symbol}));const[onPresentStake]=useModal(/*#__PURE__*/_jsx(VaultStakeModal,{stakingMax:stakingTokenBalance,pool:pool}));const[onPresentUnstake]=useModal(/*#__PURE__*/_jsx(VaultStakeModal,{stakingMax:cakeAsBigNumber,pool:pool,isRemovingStake:true}));return/*#__PURE__*/_jsxs(Flex,{justifyContent:\"space-between\",alignItems:\"center\",children:[/*#__PURE__*/_jsxs(Flex,{flexDirection:\"column\",children:[/*#__PURE__*/_jsx(Balance,{fontSize:\"20px\",bold:true,value:cakeAsNumberBalance,decimals:5}),/*#__PURE__*/_jsx(Text,{fontSize:\"12px\",color:\"textSubtle\",children:cakePriceBusd.gt(0)?/*#__PURE__*/_jsx(Balance,{value:stakedDollarValue,fontSize:\"12px\",color:\"textSubtle\",decimals:2,prefix:\"~\",unit:\" USD\"}):/*#__PURE__*/_jsx(Skeleton,{mt:\"1px\",height:16,width:64})})]}),/*#__PURE__*/_jsxs(Flex,{children:[/*#__PURE__*/_jsx(IconButton,{variant:\"secondary\",onClick:onPresentUnstake,mr:\"6px\",children:/*#__PURE__*/_jsx(MinusIcon,{color:\"primary\",width:\"24px\"})}),/*#__PURE__*/_jsx(IconButton,{variant:\"secondary\",onClick:stakingTokenBalance.gt(0)?onPresentStake:onPresentTokenRequired,children:/*#__PURE__*/_jsx(AddIcon,{color:\"primary\",width:\"24px\",height:\"24px\"})})]})]});};export default HasSharesActions;","map":{"version":3,"names":["React","Flex","Text","IconButton","AddIcon","MinusIcon","useModal","Skeleton","getBalanceNumber","usePriceCakeBusd","useCakeVault","Balance","NotEnoughTokensModal","convertSharesToCake","VaultStakeModal","jsx","_jsx","jsxs","_jsxs","HasSharesActions","_ref","pool","stakingTokenBalance","userData","userShares","pricePerFullShare","stakingToken","cakeAsBigNumber","cakeAsNumberBalance","cakePriceBusd","stakedDollarValue","gt","multipliedBy","decimals","onPresentTokenRequired","tokenSymbol","symbol","onPresentStake","stakingMax","onPresentUnstake","isRemovingStake","justifyContent","alignItems","children","flexDirection","fontSize","bold","value","color","prefix","unit","mt","height","width","variant","onClick","mr"],"sources":["C:/Users/frkul/Documents/swapUI_pancake-frontend/src/views/Pools/components/CakeVaultCard/VaultCardActions/HasSharesActions.tsx"],"sourcesContent":["import React from 'react'\r\nimport { Flex, Text, IconButton, AddIcon, MinusIcon, useModal, Skeleton } from '@pancakeswap/uikit'\r\nimport BigNumber from 'bignumber.js'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { Pool } from 'state/types'\r\nimport { usePriceCakeBusd } from 'state/farms/hooks'\r\nimport { useCakeVault } from 'state/pools/hooks'\r\nimport Balance from 'components/Balance'\r\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\r\nimport { convertSharesToCake } from '../../../helpers'\r\nimport VaultStakeModal from '../VaultStakeModal'\r\n\r\ninterface HasStakeActionProps {\r\n  pool: Pool\r\n  stakingTokenBalance: BigNumber\r\n}\r\n\r\nconst HasSharesActions: React.FC<HasStakeActionProps> = ({ pool, stakingTokenBalance }) => {\r\n  const {\r\n    userData: { userShares },\r\n    pricePerFullShare,\r\n  } = useCakeVault()\r\n  const { stakingToken } = pool\r\n  const { cakeAsBigNumber, cakeAsNumberBalance } = convertSharesToCake(userShares, pricePerFullShare)\r\n  const cakePriceBusd = usePriceCakeBusd()\r\n  const stakedDollarValue = cakePriceBusd.gt(0)\r\n    ? getBalanceNumber(cakeAsBigNumber.multipliedBy(cakePriceBusd), stakingToken.decimals)\r\n    : 0\r\n\r\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\r\n  const [onPresentStake] = useModal(<VaultStakeModal stakingMax={stakingTokenBalance} pool={pool} />)\r\n  const [onPresentUnstake] = useModal(<VaultStakeModal stakingMax={cakeAsBigNumber} pool={pool} isRemovingStake />)\r\n\r\n  return (\r\n    <Flex justifyContent=\"space-between\" alignItems=\"center\">\r\n      <Flex flexDirection=\"column\">\r\n        <Balance fontSize=\"20px\" bold value={cakeAsNumberBalance} decimals={5} />\r\n        <Text fontSize=\"12px\" color=\"textSubtle\">\r\n          {cakePriceBusd.gt(0) ? (\r\n            <Balance value={stakedDollarValue} fontSize=\"12px\" color=\"textSubtle\" decimals={2} prefix=\"~\" unit=\" USD\" />\r\n          ) : (\r\n            <Skeleton mt=\"1px\" height={16} width={64} />\r\n          )}\r\n        </Text>\r\n      </Flex>\r\n      <Flex>\r\n        <IconButton variant=\"secondary\" onClick={onPresentUnstake} mr=\"6px\">\r\n          <MinusIcon color=\"primary\" width=\"24px\" />\r\n        </IconButton>\r\n        <IconButton variant=\"secondary\" onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>\r\n          <AddIcon color=\"primary\" width=\"24px\" height=\"24px\" />\r\n        </IconButton>\r\n      </Flex>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default HasSharesActions\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}