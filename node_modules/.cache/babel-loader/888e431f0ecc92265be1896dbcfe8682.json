{"ast":null,"code":"import React from'react';import{Flex,Text,Button,IconButton,AddIcon,MinusIcon,useModal,Skeleton,useTooltip}from'@pancakeswap/uikit';import{useTranslation}from'contexts/Localization';import{getBalanceNumber}from'utils/formatBalance';import Balance from'components/Balance';import NotEnoughTokensModal from'../Modals/NotEnoughTokensModal';import StakeModal from'../Modals/StakeModal';import{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";const StakeAction=_ref=>{let{pool,stakingTokenBalance,stakedBalance,isBnbPool,isStaked,isLoading=false}=_ref;const{stakingToken,stakingTokenPrice,stakingLimit,isFinished,userData}=pool;const{t}=useTranslation();const stakedTokenBalance=getBalanceNumber(stakedBalance,stakingToken.decimals);const stakedTokenDollarBalance=getBalanceNumber(stakedBalance.multipliedBy(stakingTokenPrice),stakingToken.decimals);const[onPresentTokenRequired]=useModal(/*#__PURE__*/_jsx(NotEnoughTokensModal,{tokenSymbol:stakingToken.symbol}));const[onPresentStake]=useModal(/*#__PURE__*/_jsx(StakeModal,{isBnbPool:isBnbPool,pool:pool,stakingTokenBalance:stakingTokenBalance,stakingTokenPrice:stakingTokenPrice}));const[onPresentUnstake]=useModal(/*#__PURE__*/_jsx(StakeModal,{stakingTokenBalance:stakingTokenBalance,isBnbPool:isBnbPool,pool:pool,stakingTokenPrice:stakingTokenPrice,isRemovingStake:true}));const{targetRef,tooltip,tooltipVisible}=useTooltip(t('You’ve already staked the maximum amount you can stake in this pool!'),{placement:'bottom'});const reachStakingLimit=stakingLimit.gt(0)&&userData.stakedBalance.gte(stakingLimit);const renderStakeAction=()=>{return isStaked?/*#__PURE__*/_jsxs(Flex,{justifyContent:\"space-between\",alignItems:\"center\",children:[/*#__PURE__*/_jsx(Flex,{flexDirection:\"column\",children:/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Balance,{bold:true,fontSize:\"20px\",decimals:3,value:stakedTokenBalance}),stakingTokenPrice!==0&&/*#__PURE__*/_jsx(Text,{fontSize:\"12px\",color:\"textSubtle\",children:/*#__PURE__*/_jsx(Balance,{fontSize:\"12px\",color:\"textSubtle\",decimals:2,value:stakedTokenDollarBalance,prefix:\"~\",unit:\" USD\"})})]})}),/*#__PURE__*/_jsxs(Flex,{children:[/*#__PURE__*/_jsx(IconButton,{variant:\"secondary\",onClick:onPresentUnstake,mr:\"6px\",children:/*#__PURE__*/_jsx(MinusIcon,{color:\"primary\",width:\"24px\"})}),reachStakingLimit?/*#__PURE__*/_jsx(\"span\",{ref:targetRef,children:/*#__PURE__*/_jsx(IconButton,{variant:\"secondary\",disabled:true,children:/*#__PURE__*/_jsx(AddIcon,{color:\"textDisabled\",width:\"24px\",height:\"24px\"})})}):/*#__PURE__*/_jsx(IconButton,{variant:\"secondary\",onClick:stakingTokenBalance.gt(0)?onPresentStake:onPresentTokenRequired,disabled:isFinished,children:/*#__PURE__*/_jsx(AddIcon,{color:\"primary\",width:\"24px\",height:\"24px\"})})]}),tooltipVisible&&tooltip]}):/*#__PURE__*/_jsx(Button,{disabled:isFinished,onClick:stakingTokenBalance.gt(0)?onPresentStake:onPresentTokenRequired,children:t('Stake')});};return/*#__PURE__*/_jsx(Flex,{flexDirection:\"column\",children:isLoading?/*#__PURE__*/_jsx(Skeleton,{width:\"100%\",height:\"52px\"}):renderStakeAction()});};export default StakeAction;","map":{"version":3,"names":["React","Flex","Text","Button","IconButton","AddIcon","MinusIcon","useModal","Skeleton","useTooltip","useTranslation","getBalanceNumber","Balance","NotEnoughTokensModal","StakeModal","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","StakeAction","_ref","pool","stakingTokenBalance","stakedBalance","isBnbPool","isStaked","isLoading","stakingToken","stakingTokenPrice","stakingLimit","isFinished","userData","t","stakedTokenBalance","decimals","stakedTokenDollarBalance","multipliedBy","onPresentTokenRequired","tokenSymbol","symbol","onPresentStake","onPresentUnstake","isRemovingStake","targetRef","tooltip","tooltipVisible","placement","reachStakingLimit","gt","gte","renderStakeAction","justifyContent","alignItems","children","flexDirection","bold","fontSize","value","color","prefix","unit","variant","onClick","mr","width","ref","disabled","height"],"sources":["C:/Users/frkul/Documents/swapUI_pancake-frontend/src/views/Pools/components/PoolCard/CardActions/StakeActions.tsx"],"sourcesContent":["import React from 'react'\r\nimport { Flex, Text, Button, IconButton, AddIcon, MinusIcon, useModal, Skeleton, useTooltip } from '@pancakeswap/uikit'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { Pool } from 'state/types'\r\nimport Balance from 'components/Balance'\r\nimport NotEnoughTokensModal from '../Modals/NotEnoughTokensModal'\r\nimport StakeModal from '../Modals/StakeModal'\r\n\r\ninterface StakeActionsProps {\r\n  pool: Pool\r\n  stakingTokenBalance: BigNumber\r\n  stakedBalance: BigNumber\r\n  isBnbPool: boolean\r\n  isStaked: ConstrainBoolean\r\n  isLoading?: boolean\r\n}\r\n\r\nconst StakeAction: React.FC<StakeActionsProps> = ({\r\n  pool,\r\n  stakingTokenBalance,\r\n  stakedBalance,\r\n  isBnbPool,\r\n  isStaked,\r\n  isLoading = false,\r\n}) => {\r\n  const { stakingToken, stakingTokenPrice, stakingLimit, isFinished, userData } = pool\r\n  const { t } = useTranslation()\r\n  const stakedTokenBalance = getBalanceNumber(stakedBalance, stakingToken.decimals)\r\n  const stakedTokenDollarBalance = getBalanceNumber(\r\n    stakedBalance.multipliedBy(stakingTokenPrice),\r\n    stakingToken.decimals,\r\n  )\r\n\r\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\r\n\r\n  const [onPresentStake] = useModal(\r\n    <StakeModal\r\n      isBnbPool={isBnbPool}\r\n      pool={pool}\r\n      stakingTokenBalance={stakingTokenBalance}\r\n      stakingTokenPrice={stakingTokenPrice}\r\n    />,\r\n  )\r\n\r\n  const [onPresentUnstake] = useModal(\r\n    <StakeModal\r\n      stakingTokenBalance={stakingTokenBalance}\r\n      isBnbPool={isBnbPool}\r\n      pool={pool}\r\n      stakingTokenPrice={stakingTokenPrice}\r\n      isRemovingStake\r\n    />,\r\n  )\r\n\r\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\r\n    t('You’ve already staked the maximum amount you can stake in this pool!'),\r\n    { placement: 'bottom' },\r\n  )\r\n\r\n  const reachStakingLimit = stakingLimit.gt(0) && userData.stakedBalance.gte(stakingLimit)\r\n\r\n  const renderStakeAction = () => {\r\n    return isStaked ? (\r\n      <Flex justifyContent=\"space-between\" alignItems=\"center\">\r\n        <Flex flexDirection=\"column\">\r\n          <>\r\n            <Balance bold fontSize=\"20px\" decimals={3} value={stakedTokenBalance} />\r\n            {stakingTokenPrice !== 0 && (\r\n              <Text fontSize=\"12px\" color=\"textSubtle\">\r\n                <Balance\r\n                  fontSize=\"12px\"\r\n                  color=\"textSubtle\"\r\n                  decimals={2}\r\n                  value={stakedTokenDollarBalance}\r\n                  prefix=\"~\"\r\n                  unit=\" USD\"\r\n                />\r\n              </Text>\r\n            )}\r\n          </>\r\n        </Flex>\r\n        <Flex>\r\n          <IconButton variant=\"secondary\" onClick={onPresentUnstake} mr=\"6px\">\r\n            <MinusIcon color=\"primary\" width=\"24px\" />\r\n          </IconButton>\r\n          {reachStakingLimit ? (\r\n            <span ref={targetRef}>\r\n              <IconButton variant=\"secondary\" disabled>\r\n                <AddIcon color=\"textDisabled\" width=\"24px\" height=\"24px\" />\r\n              </IconButton>\r\n            </span>\r\n          ) : (\r\n            <IconButton\r\n              variant=\"secondary\"\r\n              onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}\r\n              disabled={isFinished}\r\n            >\r\n              <AddIcon color=\"primary\" width=\"24px\" height=\"24px\" />\r\n            </IconButton>\r\n          )}\r\n        </Flex>\r\n        {tooltipVisible && tooltip}\r\n      </Flex>\r\n    ) : (\r\n      <Button disabled={isFinished} onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>\r\n        {t('Stake')}\r\n      </Button>\r\n    )\r\n  }\r\n\r\n  return <Flex flexDirection=\"column\">{isLoading ? <Skeleton width=\"100%\" height=\"52px\" /> : renderStakeAction()}</Flex>\r\n}\r\n\r\nexport default StakeAction\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}