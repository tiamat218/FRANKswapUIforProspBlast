{"ast":null,"code":"import{useEffect,useRef}from'react';import{useWeb3React}from'@web3-react/core';import{useAppDispatch}from'state';import{useGetCurrentEpoch,useGetEarliestEpoch,useGetPredictionsStatus}from'state/hooks';import{fetchClaimableStatuses,fetchLedgerData,fetchMarketData,fetchRounds}from'state/predictions';import{PredictionStatus}from'state/types';import{range}from'lodash';const POLL_TIME_IN_SECONDS=10;const usePollPredictions=()=>{const timer=useRef(null);const dispatch=useAppDispatch();const{account}=useWeb3React();const currentEpoch=useGetCurrentEpoch();const earliestEpoch=useGetEarliestEpoch();const status=useGetPredictionsStatus();useEffect(()=>{// Clear old timer\nif(timer.current){clearInterval(timer.current);}if(status===PredictionStatus.LIVE){timer.current=setInterval(async()=>{const liveAndCurrent=[currentEpoch,currentEpoch-1];dispatch(fetchRounds(liveAndCurrent));dispatch(fetchMarketData());if(account){const epochRange=range(earliestEpoch,currentEpoch+1);dispatch(fetchLedgerData({account,epochs:epochRange}));dispatch(fetchClaimableStatuses({account,epochs:epochRange}));}},POLL_TIME_IN_SECONDS*1000);}return()=>{if(timer.current){clearInterval(timer.current);}};},[timer,account,status,currentEpoch,earliestEpoch,dispatch]);};export default usePollPredictions;","map":{"version":3,"names":["useEffect","useRef","useWeb3React","useAppDispatch","useGetCurrentEpoch","useGetEarliestEpoch","useGetPredictionsStatus","fetchClaimableStatuses","fetchLedgerData","fetchMarketData","fetchRounds","PredictionStatus","range","POLL_TIME_IN_SECONDS","usePollPredictions","timer","dispatch","account","currentEpoch","earliestEpoch","status","current","clearInterval","LIVE","setInterval","liveAndCurrent","epochRange","epochs"],"sources":["C:/Users/frkul/Documents/swapUI_pancake-frontend/src/views/Predictions/hooks/usePollPredictions.ts"],"sourcesContent":["import { useEffect, useRef } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useAppDispatch } from 'state'\r\nimport { useGetCurrentEpoch, useGetEarliestEpoch, useGetPredictionsStatus } from 'state/hooks'\r\nimport { fetchClaimableStatuses, fetchLedgerData, fetchMarketData, fetchRounds } from 'state/predictions'\r\nimport { PredictionStatus } from 'state/types'\r\nimport { range } from 'lodash'\r\n\r\nconst POLL_TIME_IN_SECONDS = 10\r\n\r\nconst usePollPredictions = () => {\r\n  const timer = useRef<NodeJS.Timeout>(null)\r\n  const dispatch = useAppDispatch()\r\n  const { account } = useWeb3React()\r\n  const currentEpoch = useGetCurrentEpoch()\r\n  const earliestEpoch = useGetEarliestEpoch()\r\n  const status = useGetPredictionsStatus()\r\n\r\n  useEffect(() => {\r\n    // Clear old timer\r\n    if (timer.current) {\r\n      clearInterval(timer.current)\r\n    }\r\n\r\n    if (status === PredictionStatus.LIVE) {\r\n      timer.current = setInterval(async () => {\r\n        const liveAndCurrent = [currentEpoch, currentEpoch - 1]\r\n\r\n        dispatch(fetchRounds(liveAndCurrent))\r\n        dispatch(fetchMarketData())\r\n\r\n        if (account) {\r\n          const epochRange = range(earliestEpoch, currentEpoch + 1)\r\n          dispatch(fetchLedgerData({ account, epochs: epochRange }))\r\n          dispatch(fetchClaimableStatuses({ account, epochs: epochRange }))\r\n        }\r\n      }, POLL_TIME_IN_SECONDS * 1000)\r\n    }\r\n\r\n    return () => {\r\n      if (timer.current) {\r\n        clearInterval(timer.current)\r\n      }\r\n    }\r\n  }, [timer, account, status, currentEpoch, earliestEpoch, dispatch])\r\n}\r\n\r\nexport default usePollPredictions\r\n"],"mappings":"AAAA,OAASA,SAAS,CAAEC,MAAM,KAAQ,OAAO,CACzC,OAASC,YAAY,KAAQ,kBAAkB,CAC/C,OAASC,cAAc,KAAQ,OAAO,CACtC,OAASC,kBAAkB,CAAEC,mBAAmB,CAAEC,uBAAuB,KAAQ,aAAa,CAC9F,OAASC,sBAAsB,CAAEC,eAAe,CAAEC,eAAe,CAAEC,WAAW,KAAQ,mBAAmB,CACzG,OAASC,gBAAgB,KAAQ,aAAa,CAC9C,OAASC,KAAK,KAAQ,QAAQ,CAE9B,KAAM,CAAAC,oBAAoB,CAAG,EAAE,CAE/B,KAAM,CAAAC,kBAAkB,CAAGA,CAAA,GAAM,CAC/B,KAAM,CAAAC,KAAK,CAAGd,MAAM,CAAiB,IAAI,CAAC,CAC1C,KAAM,CAAAe,QAAQ,CAAGb,cAAc,CAAC,CAAC,CACjC,KAAM,CAAEc,OAAQ,CAAC,CAAGf,YAAY,CAAC,CAAC,CAClC,KAAM,CAAAgB,YAAY,CAAGd,kBAAkB,CAAC,CAAC,CACzC,KAAM,CAAAe,aAAa,CAAGd,mBAAmB,CAAC,CAAC,CAC3C,KAAM,CAAAe,MAAM,CAAGd,uBAAuB,CAAC,CAAC,CAExCN,SAAS,CAAC,IAAM,CACd;AACA,GAAIe,KAAK,CAACM,OAAO,CAAE,CACjBC,aAAa,CAACP,KAAK,CAACM,OAAO,CAAC,CAC9B,CAEA,GAAID,MAAM,GAAKT,gBAAgB,CAACY,IAAI,CAAE,CACpCR,KAAK,CAACM,OAAO,CAAGG,WAAW,CAAC,SAAY,CACtC,KAAM,CAAAC,cAAc,CAAG,CAACP,YAAY,CAAEA,YAAY,CAAG,CAAC,CAAC,CAEvDF,QAAQ,CAACN,WAAW,CAACe,cAAc,CAAC,CAAC,CACrCT,QAAQ,CAACP,eAAe,CAAC,CAAC,CAAC,CAE3B,GAAIQ,OAAO,CAAE,CACX,KAAM,CAAAS,UAAU,CAAGd,KAAK,CAACO,aAAa,CAAED,YAAY,CAAG,CAAC,CAAC,CACzDF,QAAQ,CAACR,eAAe,CAAC,CAAES,OAAO,CAAEU,MAAM,CAAED,UAAW,CAAC,CAAC,CAAC,CAC1DV,QAAQ,CAACT,sBAAsB,CAAC,CAAEU,OAAO,CAAEU,MAAM,CAAED,UAAW,CAAC,CAAC,CAAC,CACnE,CACF,CAAC,CAAEb,oBAAoB,CAAG,IAAI,CAAC,CACjC,CAEA,MAAO,IAAM,CACX,GAAIE,KAAK,CAACM,OAAO,CAAE,CACjBC,aAAa,CAACP,KAAK,CAACM,OAAO,CAAC,CAC9B,CACF,CAAC,CACH,CAAC,CAAE,CAACN,KAAK,CAAEE,OAAO,CAAEG,MAAM,CAAEF,YAAY,CAAEC,aAAa,CAAEH,QAAQ,CAAC,CAAC,CACrE,CAAC,CAED,cAAe,CAAAF,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"module"}