{"ast":null,"code":"/**\n * marked - a markdown parser\n * Copyright (c) 2011-2021, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/markedjs/marked\n */\n\n/**\n * DO NOT EDIT THIS FILE\n * The code in this file is generated from files in ./src/\n */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.marked = factory());\n})(this, function () {\n  'use strict';\n\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n  }\n  function _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(o);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n  }\n  function _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n    return arr2;\n  }\n  function _createForOfIteratorHelperLoose(o, allowArrayLike) {\n    var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n    if (it) return (it = it.call(o)).next.bind(it);\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      return function () {\n        if (i >= o.length) return {\n          done: true\n        };\n        return {\n          done: false,\n          value: o[i++]\n        };\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var defaults$5 = {\n    exports: {}\n  };\n  function getDefaults$1() {\n    return {\n      baseUrl: null,\n      breaks: false,\n      extensions: null,\n      gfm: true,\n      headerIds: true,\n      headerPrefix: '',\n      highlight: null,\n      langPrefix: 'language-',\n      mangle: true,\n      pedantic: false,\n      renderer: null,\n      sanitize: false,\n      sanitizer: null,\n      silent: false,\n      smartLists: false,\n      smartypants: false,\n      tokenizer: null,\n      walkTokens: null,\n      xhtml: false\n    };\n  }\n  function changeDefaults$1(newDefaults) {\n    defaults$5.exports.defaults = newDefaults;\n  }\n  defaults$5.exports = {\n    defaults: getDefaults$1(),\n    getDefaults: getDefaults$1,\n    changeDefaults: changeDefaults$1\n  };\n\n  /**\n   * Helpers\n   */\n  var escapeTest = /[&<>\"']/;\n  var escapeReplace = /[&<>\"']/g;\n  var escapeTestNoEncode = /[<>\"']|&(?!#?\\w+;)/;\n  var escapeReplaceNoEncode = /[<>\"']|&(?!#?\\w+;)/g;\n  var escapeReplacements = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n  };\n  var getEscapeReplacement = function getEscapeReplacement(ch) {\n    return escapeReplacements[ch];\n  };\n  function escape$2(html, encode) {\n    if (encode) {\n      if (escapeTest.test(html)) {\n        return html.replace(escapeReplace, getEscapeReplacement);\n      }\n    } else {\n      if (escapeTestNoEncode.test(html)) {\n        return html.replace(escapeReplaceNoEncode, getEscapeReplacement);\n      }\n    }\n    return html;\n  }\n  var unescapeTest = /&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig;\n  function unescape$1(html) {\n    // explicitly match decimal, hex, and named HTML entities\n    return html.replace(unescapeTest, function (_, n) {\n      n = n.toLowerCase();\n      if (n === 'colon') return ':';\n      if (n.charAt(0) === '#') {\n        return n.charAt(1) === 'x' ? String.fromCharCode(parseInt(n.substring(2), 16)) : String.fromCharCode(+n.substring(1));\n      }\n      return '';\n    });\n  }\n  var caret = /(^|[^\\[])\\^/g;\n  function edit$1(regex, opt) {\n    regex = regex.source || regex;\n    opt = opt || '';\n    var obj = {\n      replace: function replace(name, val) {\n        val = val.source || val;\n        val = val.replace(caret, '$1');\n        regex = regex.replace(name, val);\n        return obj;\n      },\n      getRegex: function getRegex() {\n        return new RegExp(regex, opt);\n      }\n    };\n    return obj;\n  }\n  var nonWordAndColonTest = /[^\\w:]/g;\n  var originIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;\n  function cleanUrl$1(sanitize, base, href) {\n    if (sanitize) {\n      var prot;\n      try {\n        prot = decodeURIComponent(unescape$1(href)).replace(nonWordAndColonTest, '').toLowerCase();\n      } catch (e) {\n        return null;\n      }\n      if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0 || prot.indexOf('data:') === 0) {\n        return null;\n      }\n    }\n    if (base && !originIndependentUrl.test(href)) {\n      href = resolveUrl(base, href);\n    }\n    try {\n      href = encodeURI(href).replace(/%25/g, '%');\n    } catch (e) {\n      return null;\n    }\n    return href;\n  }\n  var baseUrls = {};\n  var justDomain = /^[^:]+:\\/*[^/]*$/;\n  var protocol = /^([^:]+:)[\\s\\S]*$/;\n  var domain = /^([^:]+:\\/*[^/]*)[\\s\\S]*$/;\n  function resolveUrl(base, href) {\n    if (!baseUrls[' ' + base]) {\n      // we can ignore everything in base after the last slash of its path component,\n      // but we might need to add _that_\n      // https://tools.ietf.org/html/rfc3986#section-3\n      if (justDomain.test(base)) {\n        baseUrls[' ' + base] = base + '/';\n      } else {\n        baseUrls[' ' + base] = rtrim$1(base, '/', true);\n      }\n    }\n    base = baseUrls[' ' + base];\n    var relativeBase = base.indexOf(':') === -1;\n    if (href.substring(0, 2) === '//') {\n      if (relativeBase) {\n        return href;\n      }\n      return base.replace(protocol, '$1') + href;\n    } else if (href.charAt(0) === '/') {\n      if (relativeBase) {\n        return href;\n      }\n      return base.replace(domain, '$1') + href;\n    } else {\n      return base + href;\n    }\n  }\n  var noopTest$1 = {\n    exec: function noopTest() {}\n  };\n  function merge$2(obj) {\n    var i = 1,\n      target,\n      key;\n    for (; i < arguments.length; i++) {\n      target = arguments[i];\n      for (key in target) {\n        if (Object.prototype.hasOwnProperty.call(target, key)) {\n          obj[key] = target[key];\n        }\n      }\n    }\n    return obj;\n  }\n  function splitCells$1(tableRow, count) {\n    // ensure that every cell-delimiting pipe has a space\n    // before it to distinguish it from an escaped pipe\n    var row = tableRow.replace(/\\|/g, function (match, offset, str) {\n        var escaped = false,\n          curr = offset;\n        while (--curr >= 0 && str[curr] === '\\\\') {\n          escaped = !escaped;\n        }\n        if (escaped) {\n          // odd number of slashes means | is escaped\n          // so we leave it alone\n          return '|';\n        } else {\n          // add space before unescaped |\n          return ' |';\n        }\n      }),\n      cells = row.split(/ \\|/);\n    var i = 0;\n    if (cells.length > count) {\n      cells.splice(count);\n    } else {\n      while (cells.length < count) {\n        cells.push('');\n      }\n    }\n    for (; i < cells.length; i++) {\n      // leading or trailing whitespace is ignored per the gfm spec\n      cells[i] = cells[i].trim().replace(/\\\\\\|/g, '|');\n    }\n    return cells;\n  } // Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\n  // /c*$/ is vulnerable to REDOS.\n  // invert: Remove suffix of non-c chars instead. Default falsey.\n\n  function rtrim$1(str, c, invert) {\n    var l = str.length;\n    if (l === 0) {\n      return '';\n    } // Length of suffix matching the invert condition.\n\n    var suffLen = 0; // Step left until we fail to match the invert condition.\n\n    while (suffLen < l) {\n      var currChar = str.charAt(l - suffLen - 1);\n      if (currChar === c && !invert) {\n        suffLen++;\n      } else if (currChar !== c && invert) {\n        suffLen++;\n      } else {\n        break;\n      }\n    }\n    return str.substr(0, l - suffLen);\n  }\n  function findClosingBracket$1(str, b) {\n    if (str.indexOf(b[1]) === -1) {\n      return -1;\n    }\n    var l = str.length;\n    var level = 0,\n      i = 0;\n    for (; i < l; i++) {\n      if (str[i] === '\\\\') {\n        i++;\n      } else if (str[i] === b[0]) {\n        level++;\n      } else if (str[i] === b[1]) {\n        level--;\n        if (level < 0) {\n          return i;\n        }\n      }\n    }\n    return -1;\n  }\n  function checkSanitizeDeprecation$1(opt) {\n    if (opt && opt.sanitize && !opt.silent) {\n      console.warn('marked(): sanitize and sanitizer parameters are deprecated since version 0.7.0, should not be used and will be removed in the future. Read more here: https://marked.js.org/#/USING_ADVANCED.md#options');\n    }\n  } // copied from https://stackoverflow.com/a/5450113/806777\n\n  function repeatString$1(pattern, count) {\n    if (count < 1) {\n      return '';\n    }\n    var result = '';\n    while (count > 1) {\n      if (count & 1) {\n        result += pattern;\n      }\n      count >>= 1;\n      pattern += pattern;\n    }\n    return result + pattern;\n  }\n  var helpers = {\n    escape: escape$2,\n    unescape: unescape$1,\n    edit: edit$1,\n    cleanUrl: cleanUrl$1,\n    resolveUrl: resolveUrl,\n    noopTest: noopTest$1,\n    merge: merge$2,\n    splitCells: splitCells$1,\n    rtrim: rtrim$1,\n    findClosingBracket: findClosingBracket$1,\n    checkSanitizeDeprecation: checkSanitizeDeprecation$1,\n    repeatString: repeatString$1\n  };\n  var defaults$4 = defaults$5.exports.defaults;\n  var rtrim = helpers.rtrim,\n    splitCells = helpers.splitCells,\n    _escape = helpers.escape,\n    findClosingBracket = helpers.findClosingBracket;\n  function outputLink(cap, link, raw) {\n    var href = link.href;\n    var title = link.title ? _escape(link.title) : null;\n    var text = cap[1].replace(/\\\\([\\[\\]])/g, '$1');\n    if (cap[0].charAt(0) !== '!') {\n      return {\n        type: 'link',\n        raw: raw,\n        href: href,\n        title: title,\n        text: text\n      };\n    } else {\n      return {\n        type: 'image',\n        raw: raw,\n        href: href,\n        title: title,\n        text: _escape(text)\n      };\n    }\n  }\n  function indentCodeCompensation(raw, text) {\n    var matchIndentToCode = raw.match(/^(\\s+)(?:```)/);\n    if (matchIndentToCode === null) {\n      return text;\n    }\n    var indentToCode = matchIndentToCode[1];\n    return text.split('\\n').map(function (node) {\n      var matchIndentInNode = node.match(/^\\s+/);\n      if (matchIndentInNode === null) {\n        return node;\n      }\n      var indentInNode = matchIndentInNode[0];\n      if (indentInNode.length >= indentToCode.length) {\n        return node.slice(indentToCode.length);\n      }\n      return node;\n    }).join('\\n');\n  }\n  /**\n   * Tokenizer\n   */\n\n  var Tokenizer_1 = /*#__PURE__*/function () {\n    function Tokenizer(options) {\n      this.options = options || defaults$4;\n    }\n    var _proto = Tokenizer.prototype;\n    _proto.space = function space(src) {\n      var cap = this.rules.block.newline.exec(src);\n      if (cap) {\n        if (cap[0].length > 1) {\n          return {\n            type: 'space',\n            raw: cap[0]\n          };\n        }\n        return {\n          raw: '\\n'\n        };\n      }\n    };\n    _proto.code = function code(src) {\n      var cap = this.rules.block.code.exec(src);\n      if (cap) {\n        var text = cap[0].replace(/^ {1,4}/gm, '');\n        return {\n          type: 'code',\n          raw: cap[0],\n          codeBlockStyle: 'indented',\n          text: !this.options.pedantic ? rtrim(text, '\\n') : text\n        };\n      }\n    };\n    _proto.fences = function fences(src) {\n      var cap = this.rules.block.fences.exec(src);\n      if (cap) {\n        var raw = cap[0];\n        var text = indentCodeCompensation(raw, cap[3] || '');\n        return {\n          type: 'code',\n          raw: raw,\n          lang: cap[2] ? cap[2].trim() : cap[2],\n          text: text\n        };\n      }\n    };\n    _proto.heading = function heading(src) {\n      var cap = this.rules.block.heading.exec(src);\n      if (cap) {\n        var text = cap[2].trim(); // remove trailing #s\n\n        if (/#$/.test(text)) {\n          var trimmed = rtrim(text, '#');\n          if (this.options.pedantic) {\n            text = trimmed.trim();\n          } else if (!trimmed || / $/.test(trimmed)) {\n            // CommonMark requires space before trailing #s\n            text = trimmed.trim();\n          }\n        }\n        return {\n          type: 'heading',\n          raw: cap[0],\n          depth: cap[1].length,\n          text: text\n        };\n      }\n    };\n    _proto.nptable = function nptable(src) {\n      var cap = this.rules.block.nptable.exec(src);\n      if (cap) {\n        var item = {\n          type: 'table',\n          header: splitCells(cap[1].replace(/^ *| *\\| *$/g, '')),\n          align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n          cells: cap[3] ? cap[3].replace(/\\n$/, '').split('\\n') : [],\n          raw: cap[0]\n        };\n        if (item.header.length === item.align.length) {\n          var l = item.align.length;\n          var i;\n          for (i = 0; i < l; i++) {\n            if (/^ *-+: *$/.test(item.align[i])) {\n              item.align[i] = 'right';\n            } else if (/^ *:-+: *$/.test(item.align[i])) {\n              item.align[i] = 'center';\n            } else if (/^ *:-+ *$/.test(item.align[i])) {\n              item.align[i] = 'left';\n            } else {\n              item.align[i] = null;\n            }\n          }\n          l = item.cells.length;\n          for (i = 0; i < l; i++) {\n            item.cells[i] = splitCells(item.cells[i], item.header.length);\n          }\n          return item;\n        }\n      }\n    };\n    _proto.hr = function hr(src) {\n      var cap = this.rules.block.hr.exec(src);\n      if (cap) {\n        return {\n          type: 'hr',\n          raw: cap[0]\n        };\n      }\n    };\n    _proto.blockquote = function blockquote(src) {\n      var cap = this.rules.block.blockquote.exec(src);\n      if (cap) {\n        var text = cap[0].replace(/^ *> ?/gm, '');\n        return {\n          type: 'blockquote',\n          raw: cap[0],\n          text: text\n        };\n      }\n    };\n    _proto.list = function list(src) {\n      var cap = this.rules.block.list.exec(src);\n      if (cap) {\n        var raw = cap[0];\n        var bull = cap[2];\n        var isordered = bull.length > 1;\n        var list = {\n          type: 'list',\n          raw: raw,\n          ordered: isordered,\n          start: isordered ? +bull.slice(0, -1) : '',\n          loose: false,\n          items: []\n        }; // Get each top-level item.\n\n        var itemMatch = cap[0].match(this.rules.block.item);\n        var next = false,\n          item,\n          space,\n          bcurr,\n          bnext,\n          addBack,\n          loose,\n          istask,\n          ischecked,\n          endMatch;\n        var l = itemMatch.length;\n        bcurr = this.rules.block.listItemStart.exec(itemMatch[0]);\n        for (var i = 0; i < l; i++) {\n          item = itemMatch[i];\n          raw = item;\n          if (!this.options.pedantic) {\n            // Determine if current item contains the end of the list\n            endMatch = item.match(new RegExp('\\\\n\\\\s*\\\\n {0,' + (bcurr[0].length - 1) + '}\\\\S'));\n            if (endMatch) {\n              addBack = item.length - endMatch.index + itemMatch.slice(i + 1).join('\\n').length;\n              list.raw = list.raw.substring(0, list.raw.length - addBack);\n              item = item.substring(0, endMatch.index);\n              raw = item;\n              l = i + 1;\n            }\n          } // Determine whether the next list item belongs here.\n          // Backpedal if it does not belong in this list.\n\n          if (i !== l - 1) {\n            bnext = this.rules.block.listItemStart.exec(itemMatch[i + 1]);\n            if (!this.options.pedantic ? bnext[1].length >= bcurr[0].length || bnext[1].length > 3 : bnext[1].length > bcurr[1].length) {\n              // nested list or continuation\n              itemMatch.splice(i, 2, itemMatch[i] + (!this.options.pedantic && bnext[1].length < bcurr[0].length && !itemMatch[i].match(/\\n$/) ? '' : '\\n') + itemMatch[i + 1]);\n              i--;\n              l--;\n              continue;\n            } else if (\n            // different bullet style\n            !this.options.pedantic || this.options.smartLists ? bnext[2][bnext[2].length - 1] !== bull[bull.length - 1] : isordered === (bnext[2].length === 1)) {\n              addBack = itemMatch.slice(i + 1).join('\\n').length;\n              list.raw = list.raw.substring(0, list.raw.length - addBack);\n              i = l - 1;\n            }\n            bcurr = bnext;\n          } // Remove the list item's bullet\n          // so it is seen as the next token.\n\n          space = item.length;\n          item = item.replace(/^ *([*+-]|\\d+[.)]) ?/, ''); // Outdent whatever the\n          // list item contains. Hacky.\n\n          if (~item.indexOf('\\n ')) {\n            space -= item.length;\n            item = !this.options.pedantic ? item.replace(new RegExp('^ {1,' + space + '}', 'gm'), '') : item.replace(/^ {1,4}/gm, '');\n          } // trim item newlines at end\n\n          item = rtrim(item, '\\n');\n          if (i !== l - 1) {\n            raw = raw + '\\n';\n          } // Determine whether item is loose or not.\n          // Use: /(^|\\n)(?! )[^\\n]+\\n\\n(?!\\s*$)/\n          // for discount behavior.\n\n          loose = next || /\\n\\n(?!\\s*$)/.test(raw);\n          if (i !== l - 1) {\n            next = raw.slice(-2) === '\\n\\n';\n            if (!loose) loose = next;\n          }\n          if (loose) {\n            list.loose = true;\n          } // Check for task list items\n\n          if (this.options.gfm) {\n            istask = /^\\[[ xX]\\] /.test(item);\n            ischecked = undefined;\n            if (istask) {\n              ischecked = item[1] !== ' ';\n              item = item.replace(/^\\[[ xX]\\] +/, '');\n            }\n          }\n          list.items.push({\n            type: 'list_item',\n            raw: raw,\n            task: istask,\n            checked: ischecked,\n            loose: loose,\n            text: item\n          });\n        }\n        return list;\n      }\n    };\n    _proto.html = function html(src) {\n      var cap = this.rules.block.html.exec(src);\n      if (cap) {\n        return {\n          type: this.options.sanitize ? 'paragraph' : 'html',\n          raw: cap[0],\n          pre: !this.options.sanitizer && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n          text: this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(cap[0]) : _escape(cap[0]) : cap[0]\n        };\n      }\n    };\n    _proto.def = function def(src) {\n      var cap = this.rules.block.def.exec(src);\n      if (cap) {\n        if (cap[3]) cap[3] = cap[3].substring(1, cap[3].length - 1);\n        var tag = cap[1].toLowerCase().replace(/\\s+/g, ' ');\n        return {\n          type: 'def',\n          tag: tag,\n          raw: cap[0],\n          href: cap[2],\n          title: cap[3]\n        };\n      }\n    };\n    _proto.table = function table(src) {\n      var cap = this.rules.block.table.exec(src);\n      if (cap) {\n        var item = {\n          type: 'table',\n          header: splitCells(cap[1].replace(/^ *| *\\| *$/g, '')),\n          align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n          cells: cap[3] ? cap[3].replace(/\\n$/, '').split('\\n') : []\n        };\n        if (item.header.length === item.align.length) {\n          item.raw = cap[0];\n          var l = item.align.length;\n          var i;\n          for (i = 0; i < l; i++) {\n            if (/^ *-+: *$/.test(item.align[i])) {\n              item.align[i] = 'right';\n            } else if (/^ *:-+: *$/.test(item.align[i])) {\n              item.align[i] = 'center';\n            } else if (/^ *:-+ *$/.test(item.align[i])) {\n              item.align[i] = 'left';\n            } else {\n              item.align[i] = null;\n            }\n          }\n          l = item.cells.length;\n          for (i = 0; i < l; i++) {\n            item.cells[i] = splitCells(item.cells[i].replace(/^ *\\| *| *\\| *$/g, ''), item.header.length);\n          }\n          return item;\n        }\n      }\n    };\n    _proto.lheading = function lheading(src) {\n      var cap = this.rules.block.lheading.exec(src);\n      if (cap) {\n        return {\n          type: 'heading',\n          raw: cap[0],\n          depth: cap[2].charAt(0) === '=' ? 1 : 2,\n          text: cap[1]\n        };\n      }\n    };\n    _proto.paragraph = function paragraph(src) {\n      var cap = this.rules.block.paragraph.exec(src);\n      if (cap) {\n        return {\n          type: 'paragraph',\n          raw: cap[0],\n          text: cap[1].charAt(cap[1].length - 1) === '\\n' ? cap[1].slice(0, -1) : cap[1]\n        };\n      }\n    };\n    _proto.text = function text(src) {\n      var cap = this.rules.block.text.exec(src);\n      if (cap) {\n        return {\n          type: 'text',\n          raw: cap[0],\n          text: cap[0]\n        };\n      }\n    };\n    _proto.escape = function escape(src) {\n      var cap = this.rules.inline.escape.exec(src);\n      if (cap) {\n        return {\n          type: 'escape',\n          raw: cap[0],\n          text: _escape(cap[1])\n        };\n      }\n    };\n    _proto.tag = function tag(src, inLink, inRawBlock) {\n      var cap = this.rules.inline.tag.exec(src);\n      if (cap) {\n        if (!inLink && /^<a /i.test(cap[0])) {\n          inLink = true;\n        } else if (inLink && /^<\\/a>/i.test(cap[0])) {\n          inLink = false;\n        }\n        if (!inRawBlock && /^<(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n          inRawBlock = true;\n        } else if (inRawBlock && /^<\\/(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n          inRawBlock = false;\n        }\n        return {\n          type: this.options.sanitize ? 'text' : 'html',\n          raw: cap[0],\n          inLink: inLink,\n          inRawBlock: inRawBlock,\n          text: this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(cap[0]) : _escape(cap[0]) : cap[0]\n        };\n      }\n    };\n    _proto.link = function link(src) {\n      var cap = this.rules.inline.link.exec(src);\n      if (cap) {\n        var trimmedUrl = cap[2].trim();\n        if (!this.options.pedantic && /^</.test(trimmedUrl)) {\n          // commonmark requires matching angle brackets\n          if (!/>$/.test(trimmedUrl)) {\n            return;\n          } // ending angle bracket cannot be escaped\n\n          var rtrimSlash = rtrim(trimmedUrl.slice(0, -1), '\\\\');\n          if ((trimmedUrl.length - rtrimSlash.length) % 2 === 0) {\n            return;\n          }\n        } else {\n          // find closing parenthesis\n          var lastParenIndex = findClosingBracket(cap[2], '()');\n          if (lastParenIndex > -1) {\n            var start = cap[0].indexOf('!') === 0 ? 5 : 4;\n            var linkLen = start + cap[1].length + lastParenIndex;\n            cap[2] = cap[2].substring(0, lastParenIndex);\n            cap[0] = cap[0].substring(0, linkLen).trim();\n            cap[3] = '';\n          }\n        }\n        var href = cap[2];\n        var title = '';\n        if (this.options.pedantic) {\n          // split pedantic href and title\n          var link = /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/.exec(href);\n          if (link) {\n            href = link[1];\n            title = link[3];\n          }\n        } else {\n          title = cap[3] ? cap[3].slice(1, -1) : '';\n        }\n        href = href.trim();\n        if (/^</.test(href)) {\n          if (this.options.pedantic && !/>$/.test(trimmedUrl)) {\n            // pedantic allows starting angle bracket without ending angle bracket\n            href = href.slice(1);\n          } else {\n            href = href.slice(1, -1);\n          }\n        }\n        return outputLink(cap, {\n          href: href ? href.replace(this.rules.inline._escapes, '$1') : href,\n          title: title ? title.replace(this.rules.inline._escapes, '$1') : title\n        }, cap[0]);\n      }\n    };\n    _proto.reflink = function reflink(src, links) {\n      var cap;\n      if ((cap = this.rules.inline.reflink.exec(src)) || (cap = this.rules.inline.nolink.exec(src))) {\n        var link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n        link = links[link.toLowerCase()];\n        if (!link || !link.href) {\n          var text = cap[0].charAt(0);\n          return {\n            type: 'text',\n            raw: text,\n            text: text\n          };\n        }\n        return outputLink(cap, link, cap[0]);\n      }\n    };\n    _proto.emStrong = function emStrong(src, maskedSrc, prevChar) {\n      if (prevChar === void 0) {\n        prevChar = '';\n      }\n      var match = this.rules.inline.emStrong.lDelim.exec(src);\n      if (!match) return; // _ can't be between two alphanumerics. \\p{L}\\p{N} includes non-english alphabet/numbers as well\n\n      if (match[3] && prevChar.match(/(?:[0-9A-Za-z\\xAA\\xB2\\xB3\\xB5\\xB9\\xBA\\xBC-\\xBE\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05D0-\\u05EA\\u05EF-\\u05F2\\u0620-\\u064A\\u0660-\\u0669\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07C0-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086A\\u08A0-\\u08B4\\u08B6-\\u08C7\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0966-\\u096F\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09E6-\\u09F1\\u09F4-\\u09F9\\u09FC\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A6F\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AE6-\\u0AEF\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B66-\\u0B6F\\u0B71-\\u0B77\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0BE6-\\u0BF2\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C66-\\u0C6F\\u0C78-\\u0C7E\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D04-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D58-\\u0D61\\u0D66-\\u0D78\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DE6-\\u0DEF\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E86-\\u0E8A\\u0E8C-\\u0EA3\\u0EA5\\u0EA7-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F20-\\u0F33\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F-\\u1049\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u1090-\\u1099\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1369-\\u137C\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u17E0-\\u17E9\\u17F0-\\u17F9\\u1810-\\u1819\\u1820-\\u1878\\u1880-\\u1884\\u1887-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19DA\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1A80-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B50-\\u1B59\\u1B83-\\u1BA0\\u1BAE-\\u1BE5\\u1C00-\\u1C23\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1C80-\\u1C88\\u1C90-\\u1CBA\\u1CBD-\\u1CBF\\u1CE9-\\u1CEC\\u1CEE-\\u1CF3\\u1CF5\\u1CF6\\u1CFA\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2070\\u2071\\u2074-\\u2079\\u207F-\\u2089\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2150-\\u2189\\u2460-\\u249B\\u24EA-\\u24FF\\u2776-\\u2793\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2CFD\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312F\\u3131-\\u318E\\u3192-\\u3195\\u31A0-\\u31BF\\u31F0-\\u31FF\\u3220-\\u3229\\u3248-\\u324F\\u3251-\\u325F\\u3280-\\u3289\\u32B1-\\u32BF\\u3400-\\u4DBF\\u4E00-\\u9FFC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7BF\\uA7C2-\\uA7CA\\uA7F5-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA830-\\uA835\\uA840-\\uA873\\uA882-\\uA8B3\\uA8D0-\\uA8D9\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA8FE\\uA900-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF-\\uA9D9\\uA9E0-\\uA9E4\\uA9E6-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB69\\uAB70-\\uABE2\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD07-\\uDD33\\uDD40-\\uDD78\\uDD8A\\uDD8B\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDEE1-\\uDEFB\\uDF00-\\uDF23\\uDF2D-\\uDF4A\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCA0-\\uDCA9\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC58-\\uDC76\\uDC79-\\uDC9E\\uDCA7-\\uDCAF\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDCFB-\\uDD1B\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBC-\\uDDCF\\uDDD2-\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE35\\uDE40-\\uDE48\\uDE60-\\uDE7E\\uDE80-\\uDE9F\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDEEB-\\uDEEF\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF58-\\uDF72\\uDF78-\\uDF91\\uDFA9-\\uDFAF]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2\\uDCFA-\\uDD23\\uDD30-\\uDD39\\uDE60-\\uDE7E\\uDE80-\\uDEA9\\uDEB0\\uDEB1\\uDF00-\\uDF27\\uDF30-\\uDF45\\uDF51-\\uDF54\\uDFB0-\\uDFCB\\uDFE0-\\uDFF6]|\\uD804[\\uDC03-\\uDC37\\uDC52-\\uDC6F\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDCF0-\\uDCF9\\uDD03-\\uDD26\\uDD36-\\uDD3F\\uDD44\\uDD47\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDD0-\\uDDDA\\uDDDC\\uDDE1-\\uDDF4\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDEF0-\\uDEF9\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD805[\\uDC00-\\uDC34\\uDC47-\\uDC4A\\uDC50-\\uDC59\\uDC5F-\\uDC61\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDCD0-\\uDCD9\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE50-\\uDE59\\uDE80-\\uDEAA\\uDEB8\\uDEC0-\\uDEC9\\uDF00-\\uDF1A\\uDF30-\\uDF3B]|\\uD806[\\uDC00-\\uDC2B\\uDCA0-\\uDCF2\\uDCFF-\\uDD06\\uDD09\\uDD0C-\\uDD13\\uDD15\\uDD16\\uDD18-\\uDD2F\\uDD3F\\uDD41\\uDD50-\\uDD59\\uDDA0-\\uDDA7\\uDDAA-\\uDDD0\\uDDE1\\uDDE3\\uDE00\\uDE0B-\\uDE32\\uDE3A\\uDE50\\uDE5C-\\uDE89\\uDE9D\\uDEC0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC2E\\uDC40\\uDC50-\\uDC6C\\uDC72-\\uDC8F\\uDD00-\\uDD06\\uDD08\\uDD09\\uDD0B-\\uDD30\\uDD46\\uDD50-\\uDD59\\uDD60-\\uDD65\\uDD67\\uDD68\\uDD6A-\\uDD89\\uDD98\\uDDA0-\\uDDA9\\uDEE0-\\uDEF2\\uDFB0\\uDFC0-\\uDFD4]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|[\\uD80C\\uD81C-\\uD820\\uD822\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879\\uD880-\\uD883][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDE60-\\uDE69\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF40-\\uDF43\\uDF50-\\uDF59\\uDF5B-\\uDF61\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDE40-\\uDE96\\uDF00-\\uDF4A\\uDF50\\uDF93-\\uDF9F\\uDFE0\\uDFE1\\uDFE3]|\\uD821[\\uDC00-\\uDFF7]|\\uD823[\\uDC00-\\uDCD5\\uDD00-\\uDD08]|\\uD82C[\\uDC00-\\uDD1E\\uDD50-\\uDD52\\uDD64-\\uDD67\\uDD70-\\uDEFB]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD834[\\uDEE0-\\uDEF3\\uDF60-\\uDF78]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB\\uDFCE-\\uDFFF]|\\uD838[\\uDD00-\\uDD2C\\uDD37-\\uDD3D\\uDD40-\\uDD49\\uDD4E\\uDEC0-\\uDEEB\\uDEF0-\\uDEF9]|\\uD83A[\\uDC00-\\uDCC4\\uDCC7-\\uDCCF\\uDD00-\\uDD43\\uDD4B\\uDD50-\\uDD59]|\\uD83B[\\uDC71-\\uDCAB\\uDCAD-\\uDCAF\\uDCB1-\\uDCB4\\uDD01-\\uDD2D\\uDD2F-\\uDD3D\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD83C[\\uDD00-\\uDD0C]|\\uD83E[\\uDFF0-\\uDFF9]|\\uD869[\\uDC00-\\uDEDD\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0]|\\uD87E[\\uDC00-\\uDE1D]|\\uD884[\\uDC00-\\uDF4A])/)) return;\n      var nextChar = match[1] || match[2] || '';\n      if (!nextChar || nextChar && (prevChar === '' || this.rules.inline.punctuation.exec(prevChar))) {\n        var lLength = match[0].length - 1;\n        var rDelim,\n          rLength,\n          delimTotal = lLength,\n          midDelimTotal = 0;\n        var endReg = match[0][0] === '*' ? this.rules.inline.emStrong.rDelimAst : this.rules.inline.emStrong.rDelimUnd;\n        endReg.lastIndex = 0; // Clip maskedSrc to same section of string as src (move to lexer?)\n\n        maskedSrc = maskedSrc.slice(-1 * src.length + lLength);\n        while ((match = endReg.exec(maskedSrc)) != null) {\n          rDelim = match[1] || match[2] || match[3] || match[4] || match[5] || match[6];\n          if (!rDelim) continue; // skip single * in __abc*abc__\n\n          rLength = rDelim.length;\n          if (match[3] || match[4]) {\n            // found another Left Delim\n            delimTotal += rLength;\n            continue;\n          } else if (match[5] || match[6]) {\n            // either Left or Right Delim\n            if (lLength % 3 && !((lLength + rLength) % 3)) {\n              midDelimTotal += rLength;\n              continue; // CommonMark Emphasis Rules 9-10\n            }\n          }\n          delimTotal -= rLength;\n          if (delimTotal > 0) continue; // Haven't found enough closing delimiters\n          // Remove extra characters. *a*** -> *a*\n\n          rLength = Math.min(rLength, rLength + delimTotal + midDelimTotal); // Create `em` if smallest delimiter has odd char count. *a***\n\n          if (Math.min(lLength, rLength) % 2) {\n            return {\n              type: 'em',\n              raw: src.slice(0, lLength + match.index + rLength + 1),\n              text: src.slice(1, lLength + match.index + rLength)\n            };\n          } // Create 'strong' if smallest delimiter has even char count. **a***\n\n          return {\n            type: 'strong',\n            raw: src.slice(0, lLength + match.index + rLength + 1),\n            text: src.slice(2, lLength + match.index + rLength - 1)\n          };\n        }\n      }\n    };\n    _proto.codespan = function codespan(src) {\n      var cap = this.rules.inline.code.exec(src);\n      if (cap) {\n        var text = cap[2].replace(/\\n/g, ' ');\n        var hasNonSpaceChars = /[^ ]/.test(text);\n        var hasSpaceCharsOnBothEnds = /^ /.test(text) && / $/.test(text);\n        if (hasNonSpaceChars && hasSpaceCharsOnBothEnds) {\n          text = text.substring(1, text.length - 1);\n        }\n        text = _escape(text, true);\n        return {\n          type: 'codespan',\n          raw: cap[0],\n          text: text\n        };\n      }\n    };\n    _proto.br = function br(src) {\n      var cap = this.rules.inline.br.exec(src);\n      if (cap) {\n        return {\n          type: 'br',\n          raw: cap[0]\n        };\n      }\n    };\n    _proto.del = function del(src) {\n      var cap = this.rules.inline.del.exec(src);\n      if (cap) {\n        return {\n          type: 'del',\n          raw: cap[0],\n          text: cap[2]\n        };\n      }\n    };\n    _proto.autolink = function autolink(src, mangle) {\n      var cap = this.rules.inline.autolink.exec(src);\n      if (cap) {\n        var text, href;\n        if (cap[2] === '@') {\n          text = _escape(this.options.mangle ? mangle(cap[1]) : cap[1]);\n          href = 'mailto:' + text;\n        } else {\n          text = _escape(cap[1]);\n          href = text;\n        }\n        return {\n          type: 'link',\n          raw: cap[0],\n          text: text,\n          href: href,\n          tokens: [{\n            type: 'text',\n            raw: text,\n            text: text\n          }]\n        };\n      }\n    };\n    _proto.url = function url(src, mangle) {\n      var cap;\n      if (cap = this.rules.inline.url.exec(src)) {\n        var text, href;\n        if (cap[2] === '@') {\n          text = _escape(this.options.mangle ? mangle(cap[0]) : cap[0]);\n          href = 'mailto:' + text;\n        } else {\n          // do extended autolink path validation\n          var prevCapZero;\n          do {\n            prevCapZero = cap[0];\n            cap[0] = this.rules.inline._backpedal.exec(cap[0])[0];\n          } while (prevCapZero !== cap[0]);\n          text = _escape(cap[0]);\n          if (cap[1] === 'www.') {\n            href = 'http://' + text;\n          } else {\n            href = text;\n          }\n        }\n        return {\n          type: 'link',\n          raw: cap[0],\n          text: text,\n          href: href,\n          tokens: [{\n            type: 'text',\n            raw: text,\n            text: text\n          }]\n        };\n      }\n    };\n    _proto.inlineText = function inlineText(src, inRawBlock, smartypants) {\n      var cap = this.rules.inline.text.exec(src);\n      if (cap) {\n        var text;\n        if (inRawBlock) {\n          text = this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(cap[0]) : _escape(cap[0]) : cap[0];\n        } else {\n          text = _escape(this.options.smartypants ? smartypants(cap[0]) : cap[0]);\n        }\n        return {\n          type: 'text',\n          raw: cap[0],\n          text: text\n        };\n      }\n    };\n    return Tokenizer;\n  }();\n  var noopTest = helpers.noopTest,\n    edit = helpers.edit,\n    merge$1 = helpers.merge;\n  /**\n   * Block-Level Grammar\n   */\n\n  var block$1 = {\n    newline: /^(?: *(?:\\n|$))+/,\n    code: /^( {4}[^\\n]+(?:\\n(?: *(?:\\n|$))*)?)+/,\n    fences: /^ {0,3}(`{3,}(?=[^`\\n]*\\n)|~{3,})([^\\n]*)\\n(?:|([\\s\\S]*?)\\n)(?: {0,3}\\1[~`]* *(?:\\n+|$)|$)/,\n    hr: /^ {0,3}((?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$)/,\n    heading: /^ {0,3}(#{1,6})(?=\\s|$)(.*)(?:\\n+|$)/,\n    blockquote: /^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/,\n    list: /^( {0,3})(bull) [\\s\\S]+?(?:hr|def|\\n{2,}(?! )(?! {0,3}bull )\\n*|\\s*$)/,\n    html: '^ {0,3}(?:' // optional indentation\n    + '<(script|pre|style|textarea)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)' // (1)\n    + '|comment[^\\\\n]*(\\\\n+|$)' // (2)\n    + '|<\\\\?[\\\\s\\\\S]*?(?:\\\\?>\\\\n*|$)' // (3)\n    + '|<![A-Z][\\\\s\\\\S]*?(?:>\\\\n*|$)' // (4)\n    + '|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?(?:\\\\]\\\\]>\\\\n*|$)' // (5)\n    + '|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (6)\n    + '|<(?!script|pre|style|textarea)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) open tag\n    + '|</(?!script|pre|style|textarea)[a-z][\\\\w-]*\\\\s*>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) closing tag\n    + ')',\n    def: /^ {0,3}\\[(label)\\]: *\\n? *<?([^\\s>]+)>?(?:(?: +\\n? *| *\\n *)(title))? *(?:\\n+|$)/,\n    nptable: noopTest,\n    table: noopTest,\n    lheading: /^([^\\n]+)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n    // regex template, placeholders will be replaced according to different paragraph\n    // interruption rules of commonmark and the original markdown spec:\n    _paragraph: /^([^\\n]+(?:\\n(?!hr|heading|lheading|blockquote|fences|list|html| +\\n)[^\\n]+)*)/,\n    text: /^[^\\n]+/\n  };\n  block$1._label = /(?!\\s*\\])(?:\\\\[\\[\\]]|[^\\[\\]])+/;\n  block$1._title = /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/;\n  block$1.def = edit(block$1.def).replace('label', block$1._label).replace('title', block$1._title).getRegex();\n  block$1.bullet = /(?:[*+-]|\\d{1,9}[.)])/;\n  block$1.item = /^( *)(bull) ?[^\\n]*(?:\\n(?! *bull ?)[^\\n]*)*/;\n  block$1.item = edit(block$1.item, 'gm').replace(/bull/g, block$1.bullet).getRegex();\n  block$1.listItemStart = edit(/^( *)(bull) */).replace('bull', block$1.bullet).getRegex();\n  block$1.list = edit(block$1.list).replace(/bull/g, block$1.bullet).replace('hr', '\\\\n+(?=\\\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$))').replace('def', '\\\\n+(?=' + block$1.def.source + ')').getRegex();\n  block$1._tag = 'address|article|aside|base|basefont|blockquote|body|caption' + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption' + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe' + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option' + '|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr' + '|track|ul';\n  block$1._comment = /<!--(?!-?>)[\\s\\S]*?(?:-->|$)/;\n  block$1.html = edit(block$1.html, 'i').replace('comment', block$1._comment).replace('tag', block$1._tag).replace('attribute', / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/).getRegex();\n  block$1.paragraph = edit(block$1._paragraph).replace('hr', block$1.hr).replace('heading', ' {0,3}#{1,6} ').replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n  .replace('blockquote', ' {0,3}>').replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n').replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)').replace('tag', block$1._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n  block$1.blockquote = edit(block$1.blockquote).replace('paragraph', block$1.paragraph).getRegex();\n  /**\n   * Normal Block Grammar\n   */\n\n  block$1.normal = merge$1({}, block$1);\n  /**\n   * GFM Block Grammar\n   */\n\n  block$1.gfm = merge$1({}, block$1.normal, {\n    nptable: '^ *([^|\\\\n ].*\\\\|.*)\\\\n' // Header\n    + ' {0,3}([-:]+ *\\\\|[-| :]*)' // Align\n    + '(?:\\\\n((?:(?!\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)',\n    // Cells\n    table: '^ *\\\\|(.+)\\\\n' // Header\n    + ' {0,3}\\\\|?( *[-:]+[-| :]*)' // Align\n    + '(?:\\\\n *((?:(?!\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)' // Cells\n  });\n  block$1.gfm.nptable = edit(block$1.gfm.nptable).replace('hr', block$1.hr).replace('heading', ' {0,3}#{1,6} ').replace('blockquote', ' {0,3}>').replace('code', ' {4}[^\\\\n]').replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n').replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)').replace('tag', block$1._tag) // tables can be interrupted by type (6) html blocks\n  .getRegex();\n  block$1.gfm.table = edit(block$1.gfm.table).replace('hr', block$1.hr).replace('heading', ' {0,3}#{1,6} ').replace('blockquote', ' {0,3}>').replace('code', ' {4}[^\\\\n]').replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n').replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)').replace('tag', block$1._tag) // tables can be interrupted by type (6) html blocks\n  .getRegex();\n  /**\n   * Pedantic grammar (original John Gruber's loose markdown specification)\n   */\n\n  block$1.pedantic = merge$1({}, block$1.normal, {\n    html: edit('^ *(?:comment *(?:\\\\n|\\\\s*$)' + '|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)' // closed tag\n    + '|<tag(?:\"[^\"]*\"|\\'[^\\']*\\'|\\\\s[^\\'\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))').replace('comment', block$1._comment).replace(/tag/g, '(?!(?:' + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub' + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)' + '\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b').getRegex(),\n    def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/,\n    heading: /^(#{1,6})(.*)(?:\\n+|$)/,\n    fences: noopTest,\n    // fences not supported\n    paragraph: edit(block$1.normal._paragraph).replace('hr', block$1.hr).replace('heading', ' *#{1,6} *[^\\n]').replace('lheading', block$1.lheading).replace('blockquote', ' {0,3}>').replace('|fences', '').replace('|list', '').replace('|html', '').getRegex()\n  });\n  /**\n   * Inline-Level Grammar\n   */\n\n  var inline$1 = {\n    escape: /^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/,\n    autolink: /^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/,\n    url: noopTest,\n    tag: '^comment' + '|^</[a-zA-Z][\\\\w:-]*\\\\s*>' // self-closing tag\n    + '|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>' // open tag\n    + '|^<\\\\?[\\\\s\\\\S]*?\\\\?>' // processing instruction, e.g. <?php ?>\n    + '|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>' // declaration, e.g. <!DOCTYPE html>\n    + '|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>',\n    // CDATA section\n    link: /^!?\\[(label)\\]\\(\\s*(href)(?:\\s+(title))?\\s*\\)/,\n    reflink: /^!?\\[(label)\\]\\[(?!\\s*\\])((?:\\\\[\\[\\]]?|[^\\[\\]\\\\])+)\\]/,\n    nolink: /^!?\\[(?!\\s*\\])((?:\\[[^\\[\\]]*\\]|\\\\[\\[\\]]|[^\\[\\]])*)\\](?:\\[\\])?/,\n    reflinkSearch: 'reflink|nolink(?!\\\\()',\n    emStrong: {\n      lDelim: /^(?:\\*+(?:([punct_])|[^\\s*]))|^_+(?:([punct*])|([^\\s_]))/,\n      //        (1) and (2) can only be a Right Delimiter. (3) and (4) can only be Left.  (5) and (6) can be either Left or Right.\n      //        () Skip other delimiter (1) #***                   (2) a***#, a***                   (3) #***a, ***a                 (4) ***#              (5) #***#                 (6) a***a\n      rDelimAst: /\\_\\_[^_*]*?\\*[^_*]*?\\_\\_|[punct_](\\*+)(?=[\\s]|$)|[^punct*_\\s](\\*+)(?=[punct_\\s]|$)|[punct_\\s](\\*+)(?=[^punct*_\\s])|[\\s](\\*+)(?=[punct_])|[punct_](\\*+)(?=[punct_])|[^punct*_\\s](\\*+)(?=[^punct*_\\s])/,\n      rDelimUnd: /\\*\\*[^_*]*?\\_[^_*]*?\\*\\*|[punct*](\\_+)(?=[\\s]|$)|[^punct*_\\s](\\_+)(?=[punct*\\s]|$)|[punct*\\s](\\_+)(?=[^punct*_\\s])|[\\s](\\_+)(?=[punct*])|[punct*](\\_+)(?=[punct*])/ // ^- Not allowed for _\n    },\n    code: /^(`+)([^`]|[^`][\\s\\S]*?[^`])\\1(?!`)/,\n    br: /^( {2,}|\\\\)\\n(?!\\s*$)/,\n    del: noopTest,\n    text: /^(`+|[^`])(?:(?= {2,}\\n)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*_]|\\b_|$)|[^ ](?= {2,}\\n)))/,\n    punctuation: /^([\\spunctuation])/\n  }; // list of punctuation marks from CommonMark spec\n  // without * and _ to handle the different emphasis markers * and _\n\n  inline$1._punctuation = '!\"#$%&\\'()+\\\\-.,/:;<=>?@\\\\[\\\\]`^{|}~';\n  inline$1.punctuation = edit(inline$1.punctuation).replace(/punctuation/g, inline$1._punctuation).getRegex(); // sequences em should skip over [title](link), `code`, <html>\n\n  inline$1.blockSkip = /\\[[^\\]]*?\\]\\([^\\)]*?\\)|`[^`]*?`|<[^>]*?>/g;\n  inline$1.escapedEmSt = /\\\\\\*|\\\\_/g;\n  inline$1._comment = edit(block$1._comment).replace('(?:-->|$)', '-->').getRegex();\n  inline$1.emStrong.lDelim = edit(inline$1.emStrong.lDelim).replace(/punct/g, inline$1._punctuation).getRegex();\n  inline$1.emStrong.rDelimAst = edit(inline$1.emStrong.rDelimAst, 'g').replace(/punct/g, inline$1._punctuation).getRegex();\n  inline$1.emStrong.rDelimUnd = edit(inline$1.emStrong.rDelimUnd, 'g').replace(/punct/g, inline$1._punctuation).getRegex();\n  inline$1._escapes = /\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/g;\n  inline$1._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;\n  inline$1._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;\n  inline$1.autolink = edit(inline$1.autolink).replace('scheme', inline$1._scheme).replace('email', inline$1._email).getRegex();\n  inline$1._attribute = /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/;\n  inline$1.tag = edit(inline$1.tag).replace('comment', inline$1._comment).replace('attribute', inline$1._attribute).getRegex();\n  inline$1._label = /(?:\\[(?:\\\\.|[^\\[\\]\\\\])*\\]|\\\\.|`[^`]*`|[^\\[\\]\\\\`])*?/;\n  inline$1._href = /<(?:\\\\.|[^\\n<>\\\\])+>|[^\\s\\x00-\\x1f]*/;\n  inline$1._title = /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/;\n  inline$1.link = edit(inline$1.link).replace('label', inline$1._label).replace('href', inline$1._href).replace('title', inline$1._title).getRegex();\n  inline$1.reflink = edit(inline$1.reflink).replace('label', inline$1._label).getRegex();\n  inline$1.reflinkSearch = edit(inline$1.reflinkSearch, 'g').replace('reflink', inline$1.reflink).replace('nolink', inline$1.nolink).getRegex();\n  /**\n   * Normal Inline Grammar\n   */\n\n  inline$1.normal = merge$1({}, inline$1);\n  /**\n   * Pedantic Inline Grammar\n   */\n\n  inline$1.pedantic = merge$1({}, inline$1.normal, {\n    strong: {\n      start: /^__|\\*\\*/,\n      middle: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n      endAst: /\\*\\*(?!\\*)/g,\n      endUnd: /__(?!_)/g\n    },\n    em: {\n      start: /^_|\\*/,\n      middle: /^()\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)|^_(?=\\S)([\\s\\S]*?\\S)_(?!_)/,\n      endAst: /\\*(?!\\*)/g,\n      endUnd: /_(?!_)/g\n    },\n    link: edit(/^!?\\[(label)\\]\\((.*?)\\)/).replace('label', inline$1._label).getRegex(),\n    reflink: edit(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/).replace('label', inline$1._label).getRegex()\n  });\n  /**\n   * GFM Inline Grammar\n   */\n\n  inline$1.gfm = merge$1({}, inline$1.normal, {\n    escape: edit(inline$1.escape).replace('])', '~|])').getRegex(),\n    _extended_email: /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,\n    url: /^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/,\n    _backpedal: /(?:[^?!.,:;*_~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_~)]+(?!$))+/,\n    del: /^(~~?)(?=[^\\s~])([\\s\\S]*?[^\\s~])\\1(?=[^~]|$)/,\n    text: /^([`~]+|[^`~])(?:(?= {2,}\\n)|(?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*~_]|\\b_|https?:\\/\\/|ftp:\\/\\/|www\\.|$)|[^ ](?= {2,}\\n)|[^a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-](?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)))/\n  });\n  inline$1.gfm.url = edit(inline$1.gfm.url, 'i').replace('email', inline$1.gfm._extended_email).getRegex();\n  /**\n   * GFM + Line Breaks Inline Grammar\n   */\n\n  inline$1.breaks = merge$1({}, inline$1.gfm, {\n    br: edit(inline$1.br).replace('{2,}', '*').getRegex(),\n    text: edit(inline$1.gfm.text).replace('\\\\b_', '\\\\b_| {2,}\\\\n').replace(/\\{2,\\}/g, '*').getRegex()\n  });\n  var rules = {\n    block: block$1,\n    inline: inline$1\n  };\n  var Tokenizer$1 = Tokenizer_1;\n  var defaults$3 = defaults$5.exports.defaults;\n  var block = rules.block,\n    inline = rules.inline;\n  var repeatString = helpers.repeatString;\n  /**\n   * smartypants text replacement\n   */\n\n  function smartypants(text) {\n    return text // em-dashes\n    .replace(/---/g, \"\\u2014\") // en-dashes\n    .replace(/--/g, \"\\u2013\") // opening singles\n    .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, \"$1\\u2018\") // closing singles & apostrophes\n    .replace(/'/g, \"\\u2019\") // opening doubles\n    .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, \"$1\\u201C\") // closing doubles\n    .replace(/\"/g, \"\\u201D\") // ellipses\n    .replace(/\\.{3}/g, \"\\u2026\");\n  }\n  /**\n   * mangle email addresses\n   */\n\n  function mangle(text) {\n    var out = '',\n      i,\n      ch;\n    var l = text.length;\n    for (i = 0; i < l; i++) {\n      ch = text.charCodeAt(i);\n      if (Math.random() > 0.5) {\n        ch = 'x' + ch.toString(16);\n      }\n      out += '&#' + ch + ';';\n    }\n    return out;\n  }\n  /**\n   * Block Lexer\n   */\n\n  var Lexer_1 = /*#__PURE__*/function () {\n    function Lexer(options) {\n      this.tokens = [];\n      this.tokens.links = Object.create(null);\n      this.options = options || defaults$3;\n      this.options.tokenizer = this.options.tokenizer || new Tokenizer$1();\n      this.tokenizer = this.options.tokenizer;\n      this.tokenizer.options = this.options;\n      var rules = {\n        block: block.normal,\n        inline: inline.normal\n      };\n      if (this.options.pedantic) {\n        rules.block = block.pedantic;\n        rules.inline = inline.pedantic;\n      } else if (this.options.gfm) {\n        rules.block = block.gfm;\n        if (this.options.breaks) {\n          rules.inline = inline.breaks;\n        } else {\n          rules.inline = inline.gfm;\n        }\n      }\n      this.tokenizer.rules = rules;\n    }\n    /**\n     * Expose Rules\n     */\n\n    /**\n     * Static Lex Method\n     */\n    Lexer.lex = function lex(src, options) {\n      var lexer = new Lexer(options);\n      return lexer.lex(src);\n    }\n    /**\n     * Static Lex Inline Method\n     */;\n    Lexer.lexInline = function lexInline(src, options) {\n      var lexer = new Lexer(options);\n      return lexer.inlineTokens(src);\n    }\n    /**\n     * Preprocessing\n     */;\n    var _proto = Lexer.prototype;\n    _proto.lex = function lex(src) {\n      src = src.replace(/\\r\\n|\\r/g, '\\n').replace(/\\t/g, '    ');\n      this.blockTokens(src, this.tokens, true);\n      this.inline(this.tokens);\n      return this.tokens;\n    }\n    /**\n     * Lexing\n     */;\n    _proto.blockTokens = function blockTokens(src, tokens, top) {\n      var _this = this;\n      if (tokens === void 0) {\n        tokens = [];\n      }\n      if (top === void 0) {\n        top = true;\n      }\n      if (this.options.pedantic) {\n        src = src.replace(/^ +$/gm, '');\n      }\n      var token, i, l, lastToken, cutSrc, lastParagraphClipped;\n      while (src) {\n        if (this.options.extensions && this.options.extensions.block && this.options.extensions.block.some(function (extTokenizer) {\n          if (token = extTokenizer.call(_this, src, tokens)) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            return true;\n          }\n          return false;\n        })) {\n          continue;\n        } // newline\n\n        if (token = this.tokenizer.space(src)) {\n          src = src.substring(token.raw.length);\n          if (token.type) {\n            tokens.push(token);\n          }\n          continue;\n        } // code\n\n        if (token = this.tokenizer.code(src)) {\n          src = src.substring(token.raw.length);\n          lastToken = tokens[tokens.length - 1]; // An indented code block cannot interrupt a paragraph.\n\n          if (lastToken && lastToken.type === 'paragraph') {\n            lastToken.raw += '\\n' + token.raw;\n            lastToken.text += '\\n' + token.text;\n          } else {\n            tokens.push(token);\n          }\n          continue;\n        } // fences\n\n        if (token = this.tokenizer.fences(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // heading\n\n        if (token = this.tokenizer.heading(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // table no leading pipe (gfm)\n\n        if (token = this.tokenizer.nptable(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // hr\n\n        if (token = this.tokenizer.hr(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // blockquote\n\n        if (token = this.tokenizer.blockquote(src)) {\n          src = src.substring(token.raw.length);\n          token.tokens = this.blockTokens(token.text, [], top);\n          tokens.push(token);\n          continue;\n        } // list\n\n        if (token = this.tokenizer.list(src)) {\n          src = src.substring(token.raw.length);\n          l = token.items.length;\n          for (i = 0; i < l; i++) {\n            token.items[i].tokens = this.blockTokens(token.items[i].text, [], false);\n          }\n          tokens.push(token);\n          continue;\n        } // html\n\n        if (token = this.tokenizer.html(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // def\n\n        if (top && (token = this.tokenizer.def(src))) {\n          src = src.substring(token.raw.length);\n          if (!this.tokens.links[token.tag]) {\n            this.tokens.links[token.tag] = {\n              href: token.href,\n              title: token.title\n            };\n          }\n          continue;\n        } // table (gfm)\n\n        if (token = this.tokenizer.table(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // lheading\n\n        if (token = this.tokenizer.lheading(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // top-level paragraph\n        // prevent paragraph consuming extensions by clipping 'src' to extension start\n\n        cutSrc = src;\n        if (this.options.extensions && this.options.extensions.startBlock) {\n          (function () {\n            var startIndex = Infinity;\n            var tempSrc = src.slice(1);\n            var tempStart = void 0;\n            _this.options.extensions.startBlock.forEach(function (getStartIndex) {\n              tempStart = getStartIndex.call(this, tempSrc);\n              if (typeof tempStart === 'number' && tempStart >= 0) {\n                startIndex = Math.min(startIndex, tempStart);\n              }\n            });\n            if (startIndex < Infinity && startIndex >= 0) {\n              cutSrc = src.substring(0, startIndex + 1);\n            }\n          })();\n        }\n        if (top && (token = this.tokenizer.paragraph(cutSrc))) {\n          lastToken = tokens[tokens.length - 1];\n          if (lastParagraphClipped && lastToken.type === 'paragraph') {\n            lastToken.raw += '\\n' + token.raw;\n            lastToken.text += '\\n' + token.text;\n          } else {\n            tokens.push(token);\n          }\n          lastParagraphClipped = cutSrc.length !== src.length;\n          src = src.substring(token.raw.length);\n          continue;\n        } // text\n\n        if (token = this.tokenizer.text(src)) {\n          src = src.substring(token.raw.length);\n          lastToken = tokens[tokens.length - 1];\n          if (lastToken && lastToken.type === 'text') {\n            lastToken.raw += '\\n' + token.raw;\n            lastToken.text += '\\n' + token.text;\n          } else {\n            tokens.push(token);\n          }\n          continue;\n        }\n        if (src) {\n          var errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n          if (this.options.silent) {\n            console.error(errMsg);\n            break;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n      return tokens;\n    };\n    _proto.inline = function inline(tokens) {\n      var i, j, k, l2, row, token;\n      var l = tokens.length;\n      for (i = 0; i < l; i++) {\n        token = tokens[i];\n        switch (token.type) {\n          case 'paragraph':\n          case 'text':\n          case 'heading':\n            {\n              token.tokens = [];\n              this.inlineTokens(token.text, token.tokens);\n              break;\n            }\n          case 'table':\n            {\n              token.tokens = {\n                header: [],\n                cells: []\n              }; // header\n\n              l2 = token.header.length;\n              for (j = 0; j < l2; j++) {\n                token.tokens.header[j] = [];\n                this.inlineTokens(token.header[j], token.tokens.header[j]);\n              } // cells\n\n              l2 = token.cells.length;\n              for (j = 0; j < l2; j++) {\n                row = token.cells[j];\n                token.tokens.cells[j] = [];\n                for (k = 0; k < row.length; k++) {\n                  token.tokens.cells[j][k] = [];\n                  this.inlineTokens(row[k], token.tokens.cells[j][k]);\n                }\n              }\n              break;\n            }\n          case 'blockquote':\n            {\n              this.inline(token.tokens);\n              break;\n            }\n          case 'list':\n            {\n              l2 = token.items.length;\n              for (j = 0; j < l2; j++) {\n                this.inline(token.items[j].tokens);\n              }\n              break;\n            }\n        }\n      }\n      return tokens;\n    }\n    /**\n     * Lexing/Compiling\n     */;\n    _proto.inlineTokens = function inlineTokens(src, tokens, inLink, inRawBlock) {\n      var _this2 = this;\n      if (tokens === void 0) {\n        tokens = [];\n      }\n      if (inLink === void 0) {\n        inLink = false;\n      }\n      if (inRawBlock === void 0) {\n        inRawBlock = false;\n      }\n      var token, lastToken, cutSrc; // String with links masked to avoid interference with em and strong\n\n      var maskedSrc = src;\n      var match;\n      var keepPrevChar, prevChar; // Mask out reflinks\n\n      if (this.tokens.links) {\n        var links = Object.keys(this.tokens.links);\n        if (links.length > 0) {\n          while ((match = this.tokenizer.rules.inline.reflinkSearch.exec(maskedSrc)) != null) {\n            if (links.includes(match[0].slice(match[0].lastIndexOf('[') + 1, -1))) {\n              maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.reflinkSearch.lastIndex);\n            }\n          }\n        }\n      } // Mask out other blocks\n\n      while ((match = this.tokenizer.rules.inline.blockSkip.exec(maskedSrc)) != null) {\n        maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.blockSkip.lastIndex);\n      } // Mask out escaped em & strong delimiters\n\n      while ((match = this.tokenizer.rules.inline.escapedEmSt.exec(maskedSrc)) != null) {\n        maskedSrc = maskedSrc.slice(0, match.index) + '++' + maskedSrc.slice(this.tokenizer.rules.inline.escapedEmSt.lastIndex);\n      }\n      while (src) {\n        if (!keepPrevChar) {\n          prevChar = '';\n        }\n        keepPrevChar = false; // extensions\n\n        if (this.options.extensions && this.options.extensions.inline && this.options.extensions.inline.some(function (extTokenizer) {\n          if (token = extTokenizer.call(_this2, src, tokens)) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            return true;\n          }\n          return false;\n        })) {\n          continue;\n        } // escape\n\n        if (token = this.tokenizer.escape(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // tag\n\n        if (token = this.tokenizer.tag(src, inLink, inRawBlock)) {\n          src = src.substring(token.raw.length);\n          inLink = token.inLink;\n          inRawBlock = token.inRawBlock;\n          lastToken = tokens[tokens.length - 1];\n          if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n            lastToken.raw += token.raw;\n            lastToken.text += token.text;\n          } else {\n            tokens.push(token);\n          }\n          continue;\n        } // link\n\n        if (token = this.tokenizer.link(src)) {\n          src = src.substring(token.raw.length);\n          if (token.type === 'link') {\n            token.tokens = this.inlineTokens(token.text, [], true, inRawBlock);\n          }\n          tokens.push(token);\n          continue;\n        } // reflink, nolink\n\n        if (token = this.tokenizer.reflink(src, this.tokens.links)) {\n          src = src.substring(token.raw.length);\n          lastToken = tokens[tokens.length - 1];\n          if (token.type === 'link') {\n            token.tokens = this.inlineTokens(token.text, [], true, inRawBlock);\n            tokens.push(token);\n          } else if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n            lastToken.raw += token.raw;\n            lastToken.text += token.text;\n          } else {\n            tokens.push(token);\n          }\n          continue;\n        } // em & strong\n\n        if (token = this.tokenizer.emStrong(src, maskedSrc, prevChar)) {\n          src = src.substring(token.raw.length);\n          token.tokens = this.inlineTokens(token.text, [], inLink, inRawBlock);\n          tokens.push(token);\n          continue;\n        } // code\n\n        if (token = this.tokenizer.codespan(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // br\n\n        if (token = this.tokenizer.br(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // del (gfm)\n\n        if (token = this.tokenizer.del(src)) {\n          src = src.substring(token.raw.length);\n          token.tokens = this.inlineTokens(token.text, [], inLink, inRawBlock);\n          tokens.push(token);\n          continue;\n        } // autolink\n\n        if (token = this.tokenizer.autolink(src, mangle)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // url (gfm)\n\n        if (!inLink && (token = this.tokenizer.url(src, mangle))) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // text\n        // prevent inlineText consuming extensions by clipping 'src' to extension start\n\n        cutSrc = src;\n        if (this.options.extensions && this.options.extensions.startInline) {\n          (function () {\n            var startIndex = Infinity;\n            var tempSrc = src.slice(1);\n            var tempStart = void 0;\n            _this2.options.extensions.startInline.forEach(function (getStartIndex) {\n              tempStart = getStartIndex.call(this, tempSrc);\n              if (typeof tempStart === 'number' && tempStart >= 0) {\n                startIndex = Math.min(startIndex, tempStart);\n              }\n            });\n            if (startIndex < Infinity && startIndex >= 0) {\n              cutSrc = src.substring(0, startIndex + 1);\n            }\n          })();\n        }\n        if (token = this.tokenizer.inlineText(cutSrc, inRawBlock, smartypants)) {\n          src = src.substring(token.raw.length);\n          if (token.raw.slice(-1) !== '_') {\n            // Track prevChar before string of ____ started\n            prevChar = token.raw.slice(-1);\n          }\n          keepPrevChar = true;\n          lastToken = tokens[tokens.length - 1];\n          if (lastToken && lastToken.type === 'text') {\n            lastToken.raw += token.raw;\n            lastToken.text += token.text;\n          } else {\n            tokens.push(token);\n          }\n          continue;\n        }\n        if (src) {\n          var errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n          if (this.options.silent) {\n            console.error(errMsg);\n            break;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n      return tokens;\n    };\n    _createClass(Lexer, null, [{\n      key: \"rules\",\n      get: function get() {\n        return {\n          block: block,\n          inline: inline\n        };\n      }\n    }]);\n    return Lexer;\n  }();\n  var defaults$2 = defaults$5.exports.defaults;\n  var cleanUrl = helpers.cleanUrl,\n    escape$1 = helpers.escape;\n  /**\n   * Renderer\n   */\n\n  var Renderer_1 = /*#__PURE__*/function () {\n    function Renderer(options) {\n      this.options = options || defaults$2;\n    }\n    var _proto = Renderer.prototype;\n    _proto.code = function code(_code, infostring, escaped) {\n      var lang = (infostring || '').match(/\\S*/)[0];\n      if (this.options.highlight) {\n        var out = this.options.highlight(_code, lang);\n        if (out != null && out !== _code) {\n          escaped = true;\n          _code = out;\n        }\n      }\n      _code = _code.replace(/\\n$/, '') + '\\n';\n      if (!lang) {\n        return '<pre><code>' + (escaped ? _code : escape$1(_code, true)) + '</code></pre>\\n';\n      }\n      return '<pre><code class=\"' + this.options.langPrefix + escape$1(lang, true) + '\">' + (escaped ? _code : escape$1(_code, true)) + '</code></pre>\\n';\n    };\n    _proto.blockquote = function blockquote(quote) {\n      return '<blockquote>\\n' + quote + '</blockquote>\\n';\n    };\n    _proto.html = function html(_html) {\n      return _html;\n    };\n    _proto.heading = function heading(text, level, raw, slugger) {\n      if (this.options.headerIds) {\n        return '<h' + level + ' id=\"' + this.options.headerPrefix + slugger.slug(raw) + '\">' + text + '</h' + level + '>\\n';\n      } // ignore IDs\n\n      return '<h' + level + '>' + text + '</h' + level + '>\\n';\n    };\n    _proto.hr = function hr() {\n      return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n    };\n    _proto.list = function list(body, ordered, start) {\n      var type = ordered ? 'ol' : 'ul',\n        startatt = ordered && start !== 1 ? ' start=\"' + start + '\"' : '';\n      return '<' + type + startatt + '>\\n' + body + '</' + type + '>\\n';\n    };\n    _proto.listitem = function listitem(text) {\n      return '<li>' + text + '</li>\\n';\n    };\n    _proto.checkbox = function checkbox(checked) {\n      return '<input ' + (checked ? 'checked=\"\" ' : '') + 'disabled=\"\" type=\"checkbox\"' + (this.options.xhtml ? ' /' : '') + '> ';\n    };\n    _proto.paragraph = function paragraph(text) {\n      return '<p>' + text + '</p>\\n';\n    };\n    _proto.table = function table(header, body) {\n      if (body) body = '<tbody>' + body + '</tbody>';\n      return '<table>\\n' + '<thead>\\n' + header + '</thead>\\n' + body + '</table>\\n';\n    };\n    _proto.tablerow = function tablerow(content) {\n      return '<tr>\\n' + content + '</tr>\\n';\n    };\n    _proto.tablecell = function tablecell(content, flags) {\n      var type = flags.header ? 'th' : 'td';\n      var tag = flags.align ? '<' + type + ' align=\"' + flags.align + '\">' : '<' + type + '>';\n      return tag + content + '</' + type + '>\\n';\n    } // span level renderer\n    ;\n    _proto.strong = function strong(text) {\n      return '<strong>' + text + '</strong>';\n    };\n    _proto.em = function em(text) {\n      return '<em>' + text + '</em>';\n    };\n    _proto.codespan = function codespan(text) {\n      return '<code>' + text + '</code>';\n    };\n    _proto.br = function br() {\n      return this.options.xhtml ? '<br/>' : '<br>';\n    };\n    _proto.del = function del(text) {\n      return '<del>' + text + '</del>';\n    };\n    _proto.link = function link(href, title, text) {\n      href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n      if (href === null) {\n        return text;\n      }\n      var out = '<a href=\"' + escape$1(href) + '\"';\n      if (title) {\n        out += ' title=\"' + title + '\"';\n      }\n      out += '>' + text + '</a>';\n      return out;\n    };\n    _proto.image = function image(href, title, text) {\n      href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n      if (href === null) {\n        return text;\n      }\n      var out = '<img src=\"' + href + '\" alt=\"' + text + '\"';\n      if (title) {\n        out += ' title=\"' + title + '\"';\n      }\n      out += this.options.xhtml ? '/>' : '>';\n      return out;\n    };\n    _proto.text = function text(_text) {\n      return _text;\n    };\n    return Renderer;\n  }();\n\n  /**\n   * TextRenderer\n   * returns only the textual part of the token\n   */\n\n  var TextRenderer_1 = /*#__PURE__*/function () {\n    function TextRenderer() {}\n    var _proto = TextRenderer.prototype;\n\n    // no need for block level renderers\n    _proto.strong = function strong(text) {\n      return text;\n    };\n    _proto.em = function em(text) {\n      return text;\n    };\n    _proto.codespan = function codespan(text) {\n      return text;\n    };\n    _proto.del = function del(text) {\n      return text;\n    };\n    _proto.html = function html(text) {\n      return text;\n    };\n    _proto.text = function text(_text) {\n      return _text;\n    };\n    _proto.link = function link(href, title, text) {\n      return '' + text;\n    };\n    _proto.image = function image(href, title, text) {\n      return '' + text;\n    };\n    _proto.br = function br() {\n      return '';\n    };\n    return TextRenderer;\n  }();\n\n  /**\n   * Slugger generates header id\n   */\n\n  var Slugger_1 = /*#__PURE__*/function () {\n    function Slugger() {\n      this.seen = {};\n    }\n    var _proto = Slugger.prototype;\n    _proto.serialize = function serialize(value) {\n      return value.toLowerCase().trim() // remove html tags\n      .replace(/<[!\\/a-z].*?>/ig, '') // remove unwanted chars\n      .replace(/[\\u2000-\\u206F\\u2E00-\\u2E7F\\\\'!\"#$%&()*+,./:;<=>?@[\\]^`{|}~]/g, '').replace(/\\s/g, '-');\n    }\n    /**\n     * Finds the next safe (unique) slug to use\n     */;\n    _proto.getNextSafeSlug = function getNextSafeSlug(originalSlug, isDryRun) {\n      var slug = originalSlug;\n      var occurenceAccumulator = 0;\n      if (this.seen.hasOwnProperty(slug)) {\n        occurenceAccumulator = this.seen[originalSlug];\n        do {\n          occurenceAccumulator++;\n          slug = originalSlug + '-' + occurenceAccumulator;\n        } while (this.seen.hasOwnProperty(slug));\n      }\n      if (!isDryRun) {\n        this.seen[originalSlug] = occurenceAccumulator;\n        this.seen[slug] = 0;\n      }\n      return slug;\n    }\n    /**\n     * Convert string to unique id\n     * @param {object} options\n     * @param {boolean} options.dryrun Generates the next unique slug without updating the internal accumulator.\n     */;\n    _proto.slug = function slug(value, options) {\n      if (options === void 0) {\n        options = {};\n      }\n      var slug = this.serialize(value);\n      return this.getNextSafeSlug(slug, options.dryrun);\n    };\n    return Slugger;\n  }();\n  var Renderer$1 = Renderer_1;\n  var TextRenderer$1 = TextRenderer_1;\n  var Slugger$1 = Slugger_1;\n  var defaults$1 = defaults$5.exports.defaults;\n  var unescape = helpers.unescape;\n  /**\n   * Parsing & Compiling\n   */\n\n  var Parser_1 = /*#__PURE__*/function () {\n    function Parser(options) {\n      this.options = options || defaults$1;\n      this.options.renderer = this.options.renderer || new Renderer$1();\n      this.renderer = this.options.renderer;\n      this.renderer.options = this.options;\n      this.textRenderer = new TextRenderer$1();\n      this.slugger = new Slugger$1();\n    }\n    /**\n     * Static Parse Method\n     */\n\n    Parser.parse = function parse(tokens, options) {\n      var parser = new Parser(options);\n      return parser.parse(tokens);\n    }\n    /**\n     * Static Parse Inline Method\n     */;\n    Parser.parseInline = function parseInline(tokens, options) {\n      var parser = new Parser(options);\n      return parser.parseInline(tokens);\n    }\n    /**\n     * Parse Loop\n     */;\n    var _proto = Parser.prototype;\n    _proto.parse = function parse(tokens, top) {\n      if (top === void 0) {\n        top = true;\n      }\n      var out = '',\n        i,\n        j,\n        k,\n        l2,\n        l3,\n        row,\n        cell,\n        header,\n        body,\n        token,\n        ordered,\n        start,\n        loose,\n        itemBody,\n        item,\n        checked,\n        task,\n        checkbox,\n        ret;\n      var l = tokens.length;\n      for (i = 0; i < l; i++) {\n        token = tokens[i]; // Run any renderer extensions\n\n        if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {\n          ret = this.options.extensions.renderers[token.type].call(this, token);\n          if (ret !== false || !['space', 'hr', 'heading', 'code', 'table', 'blockquote', 'list', 'html', 'paragraph', 'text'].includes(token.type)) {\n            out += ret || '';\n            continue;\n          }\n        }\n        switch (token.type) {\n          case 'space':\n            {\n              continue;\n            }\n          case 'hr':\n            {\n              out += this.renderer.hr();\n              continue;\n            }\n          case 'heading':\n            {\n              out += this.renderer.heading(this.parseInline(token.tokens), token.depth, unescape(this.parseInline(token.tokens, this.textRenderer)), this.slugger);\n              continue;\n            }\n          case 'code':\n            {\n              out += this.renderer.code(token.text, token.lang, token.escaped);\n              continue;\n            }\n          case 'table':\n            {\n              header = ''; // header\n\n              cell = '';\n              l2 = token.header.length;\n              for (j = 0; j < l2; j++) {\n                cell += this.renderer.tablecell(this.parseInline(token.tokens.header[j]), {\n                  header: true,\n                  align: token.align[j]\n                });\n              }\n              header += this.renderer.tablerow(cell);\n              body = '';\n              l2 = token.cells.length;\n              for (j = 0; j < l2; j++) {\n                row = token.tokens.cells[j];\n                cell = '';\n                l3 = row.length;\n                for (k = 0; k < l3; k++) {\n                  cell += this.renderer.tablecell(this.parseInline(row[k]), {\n                    header: false,\n                    align: token.align[k]\n                  });\n                }\n                body += this.renderer.tablerow(cell);\n              }\n              out += this.renderer.table(header, body);\n              continue;\n            }\n          case 'blockquote':\n            {\n              body = this.parse(token.tokens);\n              out += this.renderer.blockquote(body);\n              continue;\n            }\n          case 'list':\n            {\n              ordered = token.ordered;\n              start = token.start;\n              loose = token.loose;\n              l2 = token.items.length;\n              body = '';\n              for (j = 0; j < l2; j++) {\n                item = token.items[j];\n                checked = item.checked;\n                task = item.task;\n                itemBody = '';\n                if (item.task) {\n                  checkbox = this.renderer.checkbox(checked);\n                  if (loose) {\n                    if (item.tokens.length > 0 && item.tokens[0].type === 'text') {\n                      item.tokens[0].text = checkbox + ' ' + item.tokens[0].text;\n                      if (item.tokens[0].tokens && item.tokens[0].tokens.length > 0 && item.tokens[0].tokens[0].type === 'text') {\n                        item.tokens[0].tokens[0].text = checkbox + ' ' + item.tokens[0].tokens[0].text;\n                      }\n                    } else {\n                      item.tokens.unshift({\n                        type: 'text',\n                        text: checkbox\n                      });\n                    }\n                  } else {\n                    itemBody += checkbox;\n                  }\n                }\n                itemBody += this.parse(item.tokens, loose);\n                body += this.renderer.listitem(itemBody, task, checked);\n              }\n              out += this.renderer.list(body, ordered, start);\n              continue;\n            }\n          case 'html':\n            {\n              // TODO parse inline content if parameter markdown=1\n              out += this.renderer.html(token.text);\n              continue;\n            }\n          case 'paragraph':\n            {\n              out += this.renderer.paragraph(this.parseInline(token.tokens));\n              continue;\n            }\n          case 'text':\n            {\n              body = token.tokens ? this.parseInline(token.tokens) : token.text;\n              while (i + 1 < l && tokens[i + 1].type === 'text') {\n                token = tokens[++i];\n                body += '\\n' + (token.tokens ? this.parseInline(token.tokens) : token.text);\n              }\n              out += top ? this.renderer.paragraph(body) : body;\n              continue;\n            }\n          default:\n            {\n              var errMsg = 'Token with \"' + token.type + '\" type was not found.';\n              if (this.options.silent) {\n                console.error(errMsg);\n                return;\n              } else {\n                throw new Error(errMsg);\n              }\n            }\n        }\n      }\n      return out;\n    }\n    /**\n     * Parse Inline Tokens\n     */;\n    _proto.parseInline = function parseInline(tokens, renderer) {\n      renderer = renderer || this.renderer;\n      var out = '',\n        i,\n        token,\n        ret;\n      var l = tokens.length;\n      for (i = 0; i < l; i++) {\n        token = tokens[i]; // Run any renderer extensions\n\n        if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {\n          ret = this.options.extensions.renderers[token.type].call(this, token);\n          if (ret !== false || !['escape', 'html', 'link', 'image', 'strong', 'em', 'codespan', 'br', 'del', 'text'].includes(token.type)) {\n            out += ret || '';\n            continue;\n          }\n        }\n        switch (token.type) {\n          case 'escape':\n            {\n              out += renderer.text(token.text);\n              break;\n            }\n          case 'html':\n            {\n              out += renderer.html(token.text);\n              break;\n            }\n          case 'link':\n            {\n              out += renderer.link(token.href, token.title, this.parseInline(token.tokens, renderer));\n              break;\n            }\n          case 'image':\n            {\n              out += renderer.image(token.href, token.title, token.text);\n              break;\n            }\n          case 'strong':\n            {\n              out += renderer.strong(this.parseInline(token.tokens, renderer));\n              break;\n            }\n          case 'em':\n            {\n              out += renderer.em(this.parseInline(token.tokens, renderer));\n              break;\n            }\n          case 'codespan':\n            {\n              out += renderer.codespan(token.text);\n              break;\n            }\n          case 'br':\n            {\n              out += renderer.br();\n              break;\n            }\n          case 'del':\n            {\n              out += renderer.del(this.parseInline(token.tokens, renderer));\n              break;\n            }\n          case 'text':\n            {\n              out += renderer.text(token.text);\n              break;\n            }\n          default:\n            {\n              var errMsg = 'Token with \"' + token.type + '\" type was not found.';\n              if (this.options.silent) {\n                console.error(errMsg);\n                return;\n              } else {\n                throw new Error(errMsg);\n              }\n            }\n        }\n      }\n      return out;\n    };\n    return Parser;\n  }();\n  var Lexer = Lexer_1;\n  var Parser = Parser_1;\n  var Tokenizer = Tokenizer_1;\n  var Renderer = Renderer_1;\n  var TextRenderer = TextRenderer_1;\n  var Slugger = Slugger_1;\n  var merge = helpers.merge,\n    checkSanitizeDeprecation = helpers.checkSanitizeDeprecation,\n    escape = helpers.escape;\n  var getDefaults = defaults$5.exports.getDefaults,\n    changeDefaults = defaults$5.exports.changeDefaults,\n    defaults = defaults$5.exports.defaults;\n  /**\n   * Marked\n   */\n\n  function marked(src, opt, callback) {\n    // throw error in case of non string input\n    if (typeof src === 'undefined' || src === null) {\n      throw new Error('marked(): input parameter is undefined or null');\n    }\n    if (typeof src !== 'string') {\n      throw new Error('marked(): input parameter is of type ' + Object.prototype.toString.call(src) + ', string expected');\n    }\n    if (typeof opt === 'function') {\n      callback = opt;\n      opt = null;\n    }\n    opt = merge({}, marked.defaults, opt || {});\n    checkSanitizeDeprecation(opt);\n    if (callback) {\n      var highlight = opt.highlight;\n      var tokens;\n      try {\n        tokens = Lexer.lex(src, opt);\n      } catch (e) {\n        return callback(e);\n      }\n      var done = function done(err) {\n        var out;\n        if (!err) {\n          try {\n            if (opt.walkTokens) {\n              marked.walkTokens(tokens, opt.walkTokens);\n            }\n            out = Parser.parse(tokens, opt);\n          } catch (e) {\n            err = e;\n          }\n        }\n        opt.highlight = highlight;\n        return err ? callback(err) : callback(null, out);\n      };\n      if (!highlight || highlight.length < 3) {\n        return done();\n      }\n      delete opt.highlight;\n      if (!tokens.length) return done();\n      var pending = 0;\n      marked.walkTokens(tokens, function (token) {\n        if (token.type === 'code') {\n          pending++;\n          setTimeout(function () {\n            highlight(token.text, token.lang, function (err, code) {\n              if (err) {\n                return done(err);\n              }\n              if (code != null && code !== token.text) {\n                token.text = code;\n                token.escaped = true;\n              }\n              pending--;\n              if (pending === 0) {\n                done();\n              }\n            });\n          }, 0);\n        }\n      });\n      if (pending === 0) {\n        done();\n      }\n      return;\n    }\n    try {\n      var _tokens = Lexer.lex(src, opt);\n      if (opt.walkTokens) {\n        marked.walkTokens(_tokens, opt.walkTokens);\n      }\n      return Parser.parse(_tokens, opt);\n    } catch (e) {\n      e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n      if (opt.silent) {\n        return '<p>An error occurred:</p><pre>' + escape(e.message + '', true) + '</pre>';\n      }\n      throw e;\n    }\n  }\n  /**\n   * Options\n   */\n\n  marked.options = marked.setOptions = function (opt) {\n    merge(marked.defaults, opt);\n    changeDefaults(marked.defaults);\n    return marked;\n  };\n  marked.getDefaults = getDefaults;\n  marked.defaults = defaults;\n  /**\n   * Use Extension\n   */\n\n  marked.use = function () {\n    var _this = this;\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    var opts = merge.apply(void 0, [{}].concat(args));\n    var extensions = marked.defaults.extensions || {\n      renderers: {},\n      childTokens: {}\n    };\n    var hasExtensions;\n    args.forEach(function (pack) {\n      // ==-- Parse \"addon\" extensions --== //\n      if (pack.extensions) {\n        hasExtensions = true;\n        pack.extensions.forEach(function (ext) {\n          if (!ext.name) {\n            throw new Error('extension name required');\n          }\n          if (ext.renderer) {\n            // Renderer extensions\n            var prevRenderer = extensions.renderers ? extensions.renderers[ext.name] : null;\n            if (prevRenderer) {\n              // Replace extension with func to run new extension but fall back if false\n              extensions.renderers[ext.name] = function () {\n                for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n                  args[_key2] = arguments[_key2];\n                }\n                var ret = ext.renderer.apply(this, args);\n                if (ret === false) {\n                  ret = prevRenderer.apply(this, args);\n                }\n                return ret;\n              };\n            } else {\n              extensions.renderers[ext.name] = ext.renderer;\n            }\n          }\n          if (ext.tokenizer) {\n            // Tokenizer Extensions\n            if (!ext.level || ext.level !== 'block' && ext.level !== 'inline') {\n              throw new Error(\"extension level must be 'block' or 'inline'\");\n            }\n            if (extensions[ext.level]) {\n              extensions[ext.level].unshift(ext.tokenizer);\n            } else {\n              extensions[ext.level] = [ext.tokenizer];\n            }\n            if (ext.start) {\n              // Function to check for start of token\n              if (ext.level === 'block') {\n                if (extensions.startBlock) {\n                  extensions.startBlock.push(ext.start);\n                } else {\n                  extensions.startBlock = [ext.start];\n                }\n              } else if (ext.level === 'inline') {\n                if (extensions.startInline) {\n                  extensions.startInline.push(ext.start);\n                } else {\n                  extensions.startInline = [ext.start];\n                }\n              }\n            }\n          }\n          if (ext.childTokens) {\n            // Child tokens to be visited by walkTokens\n            extensions.childTokens[ext.name] = ext.childTokens;\n          }\n        });\n      } // ==-- Parse \"overwrite\" extensions --== //\n\n      if (pack.renderer) {\n        (function () {\n          var renderer = marked.defaults.renderer || new Renderer();\n          var _loop = function _loop(prop) {\n            var prevRenderer = renderer[prop]; // Replace renderer with func to run extension, but fall back if false\n\n            renderer[prop] = function () {\n              for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n                args[_key3] = arguments[_key3];\n              }\n              var ret = pack.renderer[prop].apply(renderer, args);\n              if (ret === false) {\n                ret = prevRenderer.apply(renderer, args);\n              }\n              return ret;\n            };\n          };\n          for (var prop in pack.renderer) {\n            _loop(prop);\n          }\n          opts.renderer = renderer;\n        })();\n      }\n      if (pack.tokenizer) {\n        (function () {\n          var tokenizer = marked.defaults.tokenizer || new Tokenizer();\n          var _loop2 = function _loop2(prop) {\n            var prevTokenizer = tokenizer[prop]; // Replace tokenizer with func to run extension, but fall back if false\n\n            tokenizer[prop] = function () {\n              for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n                args[_key4] = arguments[_key4];\n              }\n              var ret = pack.tokenizer[prop].apply(tokenizer, args);\n              if (ret === false) {\n                ret = prevTokenizer.apply(tokenizer, args);\n              }\n              return ret;\n            };\n          };\n          for (var prop in pack.tokenizer) {\n            _loop2(prop);\n          }\n          opts.tokenizer = tokenizer;\n        })();\n      } // ==-- Parse WalkTokens extensions --== //\n\n      if (pack.walkTokens) {\n        var walkTokens = marked.defaults.walkTokens;\n        opts.walkTokens = function (token) {\n          pack.walkTokens.call(_this, token);\n          if (walkTokens) {\n            walkTokens(token);\n          }\n        };\n      }\n      if (hasExtensions) {\n        opts.extensions = extensions;\n      }\n      marked.setOptions(opts);\n    });\n  };\n  /**\n   * Run callback for every token\n   */\n\n  marked.walkTokens = function (tokens, callback) {\n    var _loop3 = function _loop3() {\n      var token = _step.value;\n      callback(token);\n      switch (token.type) {\n        case 'table':\n          {\n            for (var _iterator2 = _createForOfIteratorHelperLoose(token.tokens.header), _step2; !(_step2 = _iterator2()).done;) {\n              var cell = _step2.value;\n              marked.walkTokens(cell, callback);\n            }\n            for (var _iterator3 = _createForOfIteratorHelperLoose(token.tokens.cells), _step3; !(_step3 = _iterator3()).done;) {\n              var row = _step3.value;\n              for (var _iterator4 = _createForOfIteratorHelperLoose(row), _step4; !(_step4 = _iterator4()).done;) {\n                var _cell = _step4.value;\n                marked.walkTokens(_cell, callback);\n              }\n            }\n            break;\n          }\n        case 'list':\n          {\n            marked.walkTokens(token.items, callback);\n            break;\n          }\n        default:\n          {\n            if (marked.defaults.extensions && marked.defaults.extensions.childTokens && marked.defaults.extensions.childTokens[token.type]) {\n              // Walk any extensions\n              marked.defaults.extensions.childTokens[token.type].forEach(function (childTokens) {\n                marked.walkTokens(token[childTokens], callback);\n              });\n            } else if (token.tokens) {\n              marked.walkTokens(token.tokens, callback);\n            }\n          }\n      }\n    };\n    for (var _iterator = _createForOfIteratorHelperLoose(tokens), _step; !(_step = _iterator()).done;) {\n      _loop3();\n    }\n  };\n  /**\n   * Parse Inline\n   */\n\n  marked.parseInline = function (src, opt) {\n    // throw error in case of non string input\n    if (typeof src === 'undefined' || src === null) {\n      throw new Error('marked.parseInline(): input parameter is undefined or null');\n    }\n    if (typeof src !== 'string') {\n      throw new Error('marked.parseInline(): input parameter is of type ' + Object.prototype.toString.call(src) + ', string expected');\n    }\n    opt = merge({}, marked.defaults, opt || {});\n    checkSanitizeDeprecation(opt);\n    try {\n      var tokens = Lexer.lexInline(src, opt);\n      if (opt.walkTokens) {\n        marked.walkTokens(tokens, opt.walkTokens);\n      }\n      return Parser.parseInline(tokens, opt);\n    } catch (e) {\n      e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n      if (opt.silent) {\n        return '<p>An error occurred:</p><pre>' + escape(e.message + '', true) + '</pre>';\n      }\n      throw e;\n    }\n  };\n  /**\n   * Expose\n   */\n\n  marked.Parser = Parser;\n  marked.parser = Parser.parse;\n  marked.Renderer = Renderer;\n  marked.TextRenderer = TextRenderer;\n  marked.Lexer = Lexer;\n  marked.lexer = Lexer.lex;\n  marked.Tokenizer = Tokenizer;\n  marked.Slugger = Slugger;\n  marked.parse = marked;\n  var marked_1 = marked;\n  return marked_1;\n});","map":{"version":3,"names":["global","factory","exports","module","define","amd","globalThis","self","marked","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","Constructor","protoProps","staticProps","prototype","_unsupportedIterableToArray","o","minLen","_arrayLikeToArray","n","toString","call","slice","constructor","name","Array","from","test","arr","len","arr2","_createForOfIteratorHelperLoose","allowArrayLike","it","Symbol","iterator","next","bind","isArray","done","value","TypeError","defaults$5","getDefaults$1","baseUrl","breaks","extensions","gfm","headerIds","headerPrefix","highlight","langPrefix","mangle","pedantic","renderer","sanitize","sanitizer","silent","smartLists","smartypants","tokenizer","walkTokens","xhtml","changeDefaults$1","newDefaults","defaults","getDefaults","changeDefaults","escapeTest","escapeReplace","escapeTestNoEncode","escapeReplaceNoEncode","escapeReplacements","getEscapeReplacement","ch","escape$2","html","encode","replace","unescapeTest","unescape$1","_","toLowerCase","charAt","String","fromCharCode","parseInt","substring","caret","edit$1","regex","opt","source","obj","val","getRegex","RegExp","nonWordAndColonTest","originIndependentUrl","cleanUrl$1","base","href","prot","decodeURIComponent","e","indexOf","resolveUrl","encodeURI","baseUrls","justDomain","protocol","domain","rtrim$1","relativeBase","noopTest$1","exec","noopTest","merge$2","arguments","hasOwnProperty","splitCells$1","tableRow","count","row","match","offset","str","escaped","curr","cells","split","splice","push","trim","c","invert","l","suffLen","currChar","substr","findClosingBracket$1","b","level","checkSanitizeDeprecation$1","console","warn","repeatString$1","pattern","result","helpers","escape","unescape","edit","cleanUrl","merge","splitCells","rtrim","findClosingBracket","checkSanitizeDeprecation","repeatString","defaults$4","_escape","outputLink","cap","link","raw","title","text","type","indentCodeCompensation","matchIndentToCode","indentToCode","map","node","matchIndentInNode","indentInNode","join","Tokenizer_1","Tokenizer","options","_proto","space","src","rules","block","newline","code","codeBlockStyle","fences","lang","heading","trimmed","depth","nptable","item","header","align","hr","blockquote","list","bull","isordered","ordered","start","loose","items","itemMatch","bcurr","bnext","addBack","istask","ischecked","endMatch","listItemStart","index","undefined","task","checked","pre","def","tag","table","lheading","paragraph","inline","inLink","inRawBlock","trimmedUrl","rtrimSlash","lastParenIndex","linkLen","_escapes","reflink","links","nolink","emStrong","maskedSrc","prevChar","lDelim","nextChar","punctuation","lLength","rDelim","rLength","delimTotal","midDelimTotal","endReg","rDelimAst","rDelimUnd","lastIndex","Math","min","codespan","hasNonSpaceChars","hasSpaceCharsOnBothEnds","br","del","autolink","tokens","url","prevCapZero","_backpedal","inlineText","merge$1","block$1","_paragraph","_label","_title","bullet","_tag","_comment","normal","inline$1","reflinkSearch","_punctuation","blockSkip","escapedEmSt","_scheme","_email","_attribute","_href","strong","middle","endAst","endUnd","em","_extended_email","Tokenizer$1","defaults$3","out","charCodeAt","random","Lexer_1","Lexer","create","lex","lexer","lexInline","inlineTokens","blockTokens","top","_this","token","lastToken","cutSrc","lastParagraphClipped","some","extTokenizer","startBlock","startIndex","Infinity","tempSrc","tempStart","forEach","getStartIndex","errMsg","error","Error","j","k","l2","_this2","keepPrevChar","keys","includes","lastIndexOf","startInline","get","defaults$2","escape$1","Renderer_1","Renderer","_code","infostring","quote","_html","slugger","slug","body","startatt","listitem","checkbox","tablerow","content","tablecell","flags","image","_text","TextRenderer_1","TextRenderer","Slugger_1","Slugger","seen","serialize","getNextSafeSlug","originalSlug","isDryRun","occurenceAccumulator","dryrun","Renderer$1","TextRenderer$1","Slugger$1","defaults$1","Parser_1","Parser","textRenderer","parse","parser","parseInline","l3","cell","itemBody","ret","renderers","unshift","callback","err","pending","setTimeout","_tokens","message","setOptions","use","_len","args","_key","opts","apply","concat","childTokens","hasExtensions","pack","ext","prevRenderer","_len2","_key2","_loop","prop","_len3","_key3","_loop2","prevTokenizer","_len4","_key4","_loop3","_step","_iterator2","_step2","_iterator3","_step3","_iterator4","_step4","_cell","_iterator","marked_1"],"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/node_modules/marked/lib/marked.js"],"sourcesContent":["/**\n * marked - a markdown parser\n * Copyright (c) 2011-2021, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/markedjs/marked\n */\n\n/**\n * DO NOT EDIT THIS FILE\n * The code in this file is generated from files in ./src/\n */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.marked = factory());\n}(this, (function () { 'use strict';\n\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n  }\n\n  function _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(o);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n  }\n\n  function _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n  }\n\n  function _createForOfIteratorHelperLoose(o, allowArrayLike) {\n    var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n    if (it) return (it = it.call(o)).next.bind(it);\n\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      return function () {\n        if (i >= o.length) return {\n          done: true\n        };\n        return {\n          done: false,\n          value: o[i++]\n        };\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var defaults$5 = {exports: {}};\n\n  function getDefaults$1() {\n    return {\n      baseUrl: null,\n      breaks: false,\n      extensions: null,\n      gfm: true,\n      headerIds: true,\n      headerPrefix: '',\n      highlight: null,\n      langPrefix: 'language-',\n      mangle: true,\n      pedantic: false,\n      renderer: null,\n      sanitize: false,\n      sanitizer: null,\n      silent: false,\n      smartLists: false,\n      smartypants: false,\n      tokenizer: null,\n      walkTokens: null,\n      xhtml: false\n    };\n  }\n\n  function changeDefaults$1(newDefaults) {\n    defaults$5.exports.defaults = newDefaults;\n  }\n\n  defaults$5.exports = {\n    defaults: getDefaults$1(),\n    getDefaults: getDefaults$1,\n    changeDefaults: changeDefaults$1\n  };\n\n  /**\n   * Helpers\n   */\n  var escapeTest = /[&<>\"']/;\n  var escapeReplace = /[&<>\"']/g;\n  var escapeTestNoEncode = /[<>\"']|&(?!#?\\w+;)/;\n  var escapeReplaceNoEncode = /[<>\"']|&(?!#?\\w+;)/g;\n  var escapeReplacements = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n  };\n\n  var getEscapeReplacement = function getEscapeReplacement(ch) {\n    return escapeReplacements[ch];\n  };\n\n  function escape$2(html, encode) {\n    if (encode) {\n      if (escapeTest.test(html)) {\n        return html.replace(escapeReplace, getEscapeReplacement);\n      }\n    } else {\n      if (escapeTestNoEncode.test(html)) {\n        return html.replace(escapeReplaceNoEncode, getEscapeReplacement);\n      }\n    }\n\n    return html;\n  }\n\n  var unescapeTest = /&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig;\n\n  function unescape$1(html) {\n    // explicitly match decimal, hex, and named HTML entities\n    return html.replace(unescapeTest, function (_, n) {\n      n = n.toLowerCase();\n      if (n === 'colon') return ':';\n\n      if (n.charAt(0) === '#') {\n        return n.charAt(1) === 'x' ? String.fromCharCode(parseInt(n.substring(2), 16)) : String.fromCharCode(+n.substring(1));\n      }\n\n      return '';\n    });\n  }\n\n  var caret = /(^|[^\\[])\\^/g;\n\n  function edit$1(regex, opt) {\n    regex = regex.source || regex;\n    opt = opt || '';\n    var obj = {\n      replace: function replace(name, val) {\n        val = val.source || val;\n        val = val.replace(caret, '$1');\n        regex = regex.replace(name, val);\n        return obj;\n      },\n      getRegex: function getRegex() {\n        return new RegExp(regex, opt);\n      }\n    };\n    return obj;\n  }\n\n  var nonWordAndColonTest = /[^\\w:]/g;\n  var originIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;\n\n  function cleanUrl$1(sanitize, base, href) {\n    if (sanitize) {\n      var prot;\n\n      try {\n        prot = decodeURIComponent(unescape$1(href)).replace(nonWordAndColonTest, '').toLowerCase();\n      } catch (e) {\n        return null;\n      }\n\n      if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0 || prot.indexOf('data:') === 0) {\n        return null;\n      }\n    }\n\n    if (base && !originIndependentUrl.test(href)) {\n      href = resolveUrl(base, href);\n    }\n\n    try {\n      href = encodeURI(href).replace(/%25/g, '%');\n    } catch (e) {\n      return null;\n    }\n\n    return href;\n  }\n\n  var baseUrls = {};\n  var justDomain = /^[^:]+:\\/*[^/]*$/;\n  var protocol = /^([^:]+:)[\\s\\S]*$/;\n  var domain = /^([^:]+:\\/*[^/]*)[\\s\\S]*$/;\n\n  function resolveUrl(base, href) {\n    if (!baseUrls[' ' + base]) {\n      // we can ignore everything in base after the last slash of its path component,\n      // but we might need to add _that_\n      // https://tools.ietf.org/html/rfc3986#section-3\n      if (justDomain.test(base)) {\n        baseUrls[' ' + base] = base + '/';\n      } else {\n        baseUrls[' ' + base] = rtrim$1(base, '/', true);\n      }\n    }\n\n    base = baseUrls[' ' + base];\n    var relativeBase = base.indexOf(':') === -1;\n\n    if (href.substring(0, 2) === '//') {\n      if (relativeBase) {\n        return href;\n      }\n\n      return base.replace(protocol, '$1') + href;\n    } else if (href.charAt(0) === '/') {\n      if (relativeBase) {\n        return href;\n      }\n\n      return base.replace(domain, '$1') + href;\n    } else {\n      return base + href;\n    }\n  }\n\n  var noopTest$1 = {\n    exec: function noopTest() {}\n  };\n\n  function merge$2(obj) {\n    var i = 1,\n        target,\n        key;\n\n    for (; i < arguments.length; i++) {\n      target = arguments[i];\n\n      for (key in target) {\n        if (Object.prototype.hasOwnProperty.call(target, key)) {\n          obj[key] = target[key];\n        }\n      }\n    }\n\n    return obj;\n  }\n\n  function splitCells$1(tableRow, count) {\n    // ensure that every cell-delimiting pipe has a space\n    // before it to distinguish it from an escaped pipe\n    var row = tableRow.replace(/\\|/g, function (match, offset, str) {\n      var escaped = false,\n          curr = offset;\n\n      while (--curr >= 0 && str[curr] === '\\\\') {\n        escaped = !escaped;\n      }\n\n      if (escaped) {\n        // odd number of slashes means | is escaped\n        // so we leave it alone\n        return '|';\n      } else {\n        // add space before unescaped |\n        return ' |';\n      }\n    }),\n        cells = row.split(/ \\|/);\n    var i = 0;\n\n    if (cells.length > count) {\n      cells.splice(count);\n    } else {\n      while (cells.length < count) {\n        cells.push('');\n      }\n    }\n\n    for (; i < cells.length; i++) {\n      // leading or trailing whitespace is ignored per the gfm spec\n      cells[i] = cells[i].trim().replace(/\\\\\\|/g, '|');\n    }\n\n    return cells;\n  } // Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\n  // /c*$/ is vulnerable to REDOS.\n  // invert: Remove suffix of non-c chars instead. Default falsey.\n\n\n  function rtrim$1(str, c, invert) {\n    var l = str.length;\n\n    if (l === 0) {\n      return '';\n    } // Length of suffix matching the invert condition.\n\n\n    var suffLen = 0; // Step left until we fail to match the invert condition.\n\n    while (suffLen < l) {\n      var currChar = str.charAt(l - suffLen - 1);\n\n      if (currChar === c && !invert) {\n        suffLen++;\n      } else if (currChar !== c && invert) {\n        suffLen++;\n      } else {\n        break;\n      }\n    }\n\n    return str.substr(0, l - suffLen);\n  }\n\n  function findClosingBracket$1(str, b) {\n    if (str.indexOf(b[1]) === -1) {\n      return -1;\n    }\n\n    var l = str.length;\n    var level = 0,\n        i = 0;\n\n    for (; i < l; i++) {\n      if (str[i] === '\\\\') {\n        i++;\n      } else if (str[i] === b[0]) {\n        level++;\n      } else if (str[i] === b[1]) {\n        level--;\n\n        if (level < 0) {\n          return i;\n        }\n      }\n    }\n\n    return -1;\n  }\n\n  function checkSanitizeDeprecation$1(opt) {\n    if (opt && opt.sanitize && !opt.silent) {\n      console.warn('marked(): sanitize and sanitizer parameters are deprecated since version 0.7.0, should not be used and will be removed in the future. Read more here: https://marked.js.org/#/USING_ADVANCED.md#options');\n    }\n  } // copied from https://stackoverflow.com/a/5450113/806777\n\n\n  function repeatString$1(pattern, count) {\n    if (count < 1) {\n      return '';\n    }\n\n    var result = '';\n\n    while (count > 1) {\n      if (count & 1) {\n        result += pattern;\n      }\n\n      count >>= 1;\n      pattern += pattern;\n    }\n\n    return result + pattern;\n  }\n\n  var helpers = {\n    escape: escape$2,\n    unescape: unescape$1,\n    edit: edit$1,\n    cleanUrl: cleanUrl$1,\n    resolveUrl: resolveUrl,\n    noopTest: noopTest$1,\n    merge: merge$2,\n    splitCells: splitCells$1,\n    rtrim: rtrim$1,\n    findClosingBracket: findClosingBracket$1,\n    checkSanitizeDeprecation: checkSanitizeDeprecation$1,\n    repeatString: repeatString$1\n  };\n\n  var defaults$4 = defaults$5.exports.defaults;\n  var rtrim = helpers.rtrim,\n      splitCells = helpers.splitCells,\n      _escape = helpers.escape,\n      findClosingBracket = helpers.findClosingBracket;\n\n  function outputLink(cap, link, raw) {\n    var href = link.href;\n    var title = link.title ? _escape(link.title) : null;\n    var text = cap[1].replace(/\\\\([\\[\\]])/g, '$1');\n\n    if (cap[0].charAt(0) !== '!') {\n      return {\n        type: 'link',\n        raw: raw,\n        href: href,\n        title: title,\n        text: text\n      };\n    } else {\n      return {\n        type: 'image',\n        raw: raw,\n        href: href,\n        title: title,\n        text: _escape(text)\n      };\n    }\n  }\n\n  function indentCodeCompensation(raw, text) {\n    var matchIndentToCode = raw.match(/^(\\s+)(?:```)/);\n\n    if (matchIndentToCode === null) {\n      return text;\n    }\n\n    var indentToCode = matchIndentToCode[1];\n    return text.split('\\n').map(function (node) {\n      var matchIndentInNode = node.match(/^\\s+/);\n\n      if (matchIndentInNode === null) {\n        return node;\n      }\n\n      var indentInNode = matchIndentInNode[0];\n\n      if (indentInNode.length >= indentToCode.length) {\n        return node.slice(indentToCode.length);\n      }\n\n      return node;\n    }).join('\\n');\n  }\n  /**\n   * Tokenizer\n   */\n\n\n  var Tokenizer_1 = /*#__PURE__*/function () {\n    function Tokenizer(options) {\n      this.options = options || defaults$4;\n    }\n\n    var _proto = Tokenizer.prototype;\n\n    _proto.space = function space(src) {\n      var cap = this.rules.block.newline.exec(src);\n\n      if (cap) {\n        if (cap[0].length > 1) {\n          return {\n            type: 'space',\n            raw: cap[0]\n          };\n        }\n\n        return {\n          raw: '\\n'\n        };\n      }\n    };\n\n    _proto.code = function code(src) {\n      var cap = this.rules.block.code.exec(src);\n\n      if (cap) {\n        var text = cap[0].replace(/^ {1,4}/gm, '');\n        return {\n          type: 'code',\n          raw: cap[0],\n          codeBlockStyle: 'indented',\n          text: !this.options.pedantic ? rtrim(text, '\\n') : text\n        };\n      }\n    };\n\n    _proto.fences = function fences(src) {\n      var cap = this.rules.block.fences.exec(src);\n\n      if (cap) {\n        var raw = cap[0];\n        var text = indentCodeCompensation(raw, cap[3] || '');\n        return {\n          type: 'code',\n          raw: raw,\n          lang: cap[2] ? cap[2].trim() : cap[2],\n          text: text\n        };\n      }\n    };\n\n    _proto.heading = function heading(src) {\n      var cap = this.rules.block.heading.exec(src);\n\n      if (cap) {\n        var text = cap[2].trim(); // remove trailing #s\n\n        if (/#$/.test(text)) {\n          var trimmed = rtrim(text, '#');\n\n          if (this.options.pedantic) {\n            text = trimmed.trim();\n          } else if (!trimmed || / $/.test(trimmed)) {\n            // CommonMark requires space before trailing #s\n            text = trimmed.trim();\n          }\n        }\n\n        return {\n          type: 'heading',\n          raw: cap[0],\n          depth: cap[1].length,\n          text: text\n        };\n      }\n    };\n\n    _proto.nptable = function nptable(src) {\n      var cap = this.rules.block.nptable.exec(src);\n\n      if (cap) {\n        var item = {\n          type: 'table',\n          header: splitCells(cap[1].replace(/^ *| *\\| *$/g, '')),\n          align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n          cells: cap[3] ? cap[3].replace(/\\n$/, '').split('\\n') : [],\n          raw: cap[0]\n        };\n\n        if (item.header.length === item.align.length) {\n          var l = item.align.length;\n          var i;\n\n          for (i = 0; i < l; i++) {\n            if (/^ *-+: *$/.test(item.align[i])) {\n              item.align[i] = 'right';\n            } else if (/^ *:-+: *$/.test(item.align[i])) {\n              item.align[i] = 'center';\n            } else if (/^ *:-+ *$/.test(item.align[i])) {\n              item.align[i] = 'left';\n            } else {\n              item.align[i] = null;\n            }\n          }\n\n          l = item.cells.length;\n\n          for (i = 0; i < l; i++) {\n            item.cells[i] = splitCells(item.cells[i], item.header.length);\n          }\n\n          return item;\n        }\n      }\n    };\n\n    _proto.hr = function hr(src) {\n      var cap = this.rules.block.hr.exec(src);\n\n      if (cap) {\n        return {\n          type: 'hr',\n          raw: cap[0]\n        };\n      }\n    };\n\n    _proto.blockquote = function blockquote(src) {\n      var cap = this.rules.block.blockquote.exec(src);\n\n      if (cap) {\n        var text = cap[0].replace(/^ *> ?/gm, '');\n        return {\n          type: 'blockquote',\n          raw: cap[0],\n          text: text\n        };\n      }\n    };\n\n    _proto.list = function list(src) {\n      var cap = this.rules.block.list.exec(src);\n\n      if (cap) {\n        var raw = cap[0];\n        var bull = cap[2];\n        var isordered = bull.length > 1;\n        var list = {\n          type: 'list',\n          raw: raw,\n          ordered: isordered,\n          start: isordered ? +bull.slice(0, -1) : '',\n          loose: false,\n          items: []\n        }; // Get each top-level item.\n\n        var itemMatch = cap[0].match(this.rules.block.item);\n        var next = false,\n            item,\n            space,\n            bcurr,\n            bnext,\n            addBack,\n            loose,\n            istask,\n            ischecked,\n            endMatch;\n        var l = itemMatch.length;\n        bcurr = this.rules.block.listItemStart.exec(itemMatch[0]);\n\n        for (var i = 0; i < l; i++) {\n          item = itemMatch[i];\n          raw = item;\n\n          if (!this.options.pedantic) {\n            // Determine if current item contains the end of the list\n            endMatch = item.match(new RegExp('\\\\n\\\\s*\\\\n {0,' + (bcurr[0].length - 1) + '}\\\\S'));\n\n            if (endMatch) {\n              addBack = item.length - endMatch.index + itemMatch.slice(i + 1).join('\\n').length;\n              list.raw = list.raw.substring(0, list.raw.length - addBack);\n              item = item.substring(0, endMatch.index);\n              raw = item;\n              l = i + 1;\n            }\n          } // Determine whether the next list item belongs here.\n          // Backpedal if it does not belong in this list.\n\n\n          if (i !== l - 1) {\n            bnext = this.rules.block.listItemStart.exec(itemMatch[i + 1]);\n\n            if (!this.options.pedantic ? bnext[1].length >= bcurr[0].length || bnext[1].length > 3 : bnext[1].length > bcurr[1].length) {\n              // nested list or continuation\n              itemMatch.splice(i, 2, itemMatch[i] + (!this.options.pedantic && bnext[1].length < bcurr[0].length && !itemMatch[i].match(/\\n$/) ? '' : '\\n') + itemMatch[i + 1]);\n              i--;\n              l--;\n              continue;\n            } else if ( // different bullet style\n            !this.options.pedantic || this.options.smartLists ? bnext[2][bnext[2].length - 1] !== bull[bull.length - 1] : isordered === (bnext[2].length === 1)) {\n              addBack = itemMatch.slice(i + 1).join('\\n').length;\n              list.raw = list.raw.substring(0, list.raw.length - addBack);\n              i = l - 1;\n            }\n\n            bcurr = bnext;\n          } // Remove the list item's bullet\n          // so it is seen as the next token.\n\n\n          space = item.length;\n          item = item.replace(/^ *([*+-]|\\d+[.)]) ?/, ''); // Outdent whatever the\n          // list item contains. Hacky.\n\n          if (~item.indexOf('\\n ')) {\n            space -= item.length;\n            item = !this.options.pedantic ? item.replace(new RegExp('^ {1,' + space + '}', 'gm'), '') : item.replace(/^ {1,4}/gm, '');\n          } // trim item newlines at end\n\n\n          item = rtrim(item, '\\n');\n\n          if (i !== l - 1) {\n            raw = raw + '\\n';\n          } // Determine whether item is loose or not.\n          // Use: /(^|\\n)(?! )[^\\n]+\\n\\n(?!\\s*$)/\n          // for discount behavior.\n\n\n          loose = next || /\\n\\n(?!\\s*$)/.test(raw);\n\n          if (i !== l - 1) {\n            next = raw.slice(-2) === '\\n\\n';\n            if (!loose) loose = next;\n          }\n\n          if (loose) {\n            list.loose = true;\n          } // Check for task list items\n\n\n          if (this.options.gfm) {\n            istask = /^\\[[ xX]\\] /.test(item);\n            ischecked = undefined;\n\n            if (istask) {\n              ischecked = item[1] !== ' ';\n              item = item.replace(/^\\[[ xX]\\] +/, '');\n            }\n          }\n\n          list.items.push({\n            type: 'list_item',\n            raw: raw,\n            task: istask,\n            checked: ischecked,\n            loose: loose,\n            text: item\n          });\n        }\n\n        return list;\n      }\n    };\n\n    _proto.html = function html(src) {\n      var cap = this.rules.block.html.exec(src);\n\n      if (cap) {\n        return {\n          type: this.options.sanitize ? 'paragraph' : 'html',\n          raw: cap[0],\n          pre: !this.options.sanitizer && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n          text: this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(cap[0]) : _escape(cap[0]) : cap[0]\n        };\n      }\n    };\n\n    _proto.def = function def(src) {\n      var cap = this.rules.block.def.exec(src);\n\n      if (cap) {\n        if (cap[3]) cap[3] = cap[3].substring(1, cap[3].length - 1);\n        var tag = cap[1].toLowerCase().replace(/\\s+/g, ' ');\n        return {\n          type: 'def',\n          tag: tag,\n          raw: cap[0],\n          href: cap[2],\n          title: cap[3]\n        };\n      }\n    };\n\n    _proto.table = function table(src) {\n      var cap = this.rules.block.table.exec(src);\n\n      if (cap) {\n        var item = {\n          type: 'table',\n          header: splitCells(cap[1].replace(/^ *| *\\| *$/g, '')),\n          align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n          cells: cap[3] ? cap[3].replace(/\\n$/, '').split('\\n') : []\n        };\n\n        if (item.header.length === item.align.length) {\n          item.raw = cap[0];\n          var l = item.align.length;\n          var i;\n\n          for (i = 0; i < l; i++) {\n            if (/^ *-+: *$/.test(item.align[i])) {\n              item.align[i] = 'right';\n            } else if (/^ *:-+: *$/.test(item.align[i])) {\n              item.align[i] = 'center';\n            } else if (/^ *:-+ *$/.test(item.align[i])) {\n              item.align[i] = 'left';\n            } else {\n              item.align[i] = null;\n            }\n          }\n\n          l = item.cells.length;\n\n          for (i = 0; i < l; i++) {\n            item.cells[i] = splitCells(item.cells[i].replace(/^ *\\| *| *\\| *$/g, ''), item.header.length);\n          }\n\n          return item;\n        }\n      }\n    };\n\n    _proto.lheading = function lheading(src) {\n      var cap = this.rules.block.lheading.exec(src);\n\n      if (cap) {\n        return {\n          type: 'heading',\n          raw: cap[0],\n          depth: cap[2].charAt(0) === '=' ? 1 : 2,\n          text: cap[1]\n        };\n      }\n    };\n\n    _proto.paragraph = function paragraph(src) {\n      var cap = this.rules.block.paragraph.exec(src);\n\n      if (cap) {\n        return {\n          type: 'paragraph',\n          raw: cap[0],\n          text: cap[1].charAt(cap[1].length - 1) === '\\n' ? cap[1].slice(0, -1) : cap[1]\n        };\n      }\n    };\n\n    _proto.text = function text(src) {\n      var cap = this.rules.block.text.exec(src);\n\n      if (cap) {\n        return {\n          type: 'text',\n          raw: cap[0],\n          text: cap[0]\n        };\n      }\n    };\n\n    _proto.escape = function escape(src) {\n      var cap = this.rules.inline.escape.exec(src);\n\n      if (cap) {\n        return {\n          type: 'escape',\n          raw: cap[0],\n          text: _escape(cap[1])\n        };\n      }\n    };\n\n    _proto.tag = function tag(src, inLink, inRawBlock) {\n      var cap = this.rules.inline.tag.exec(src);\n\n      if (cap) {\n        if (!inLink && /^<a /i.test(cap[0])) {\n          inLink = true;\n        } else if (inLink && /^<\\/a>/i.test(cap[0])) {\n          inLink = false;\n        }\n\n        if (!inRawBlock && /^<(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n          inRawBlock = true;\n        } else if (inRawBlock && /^<\\/(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n          inRawBlock = false;\n        }\n\n        return {\n          type: this.options.sanitize ? 'text' : 'html',\n          raw: cap[0],\n          inLink: inLink,\n          inRawBlock: inRawBlock,\n          text: this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(cap[0]) : _escape(cap[0]) : cap[0]\n        };\n      }\n    };\n\n    _proto.link = function link(src) {\n      var cap = this.rules.inline.link.exec(src);\n\n      if (cap) {\n        var trimmedUrl = cap[2].trim();\n\n        if (!this.options.pedantic && /^</.test(trimmedUrl)) {\n          // commonmark requires matching angle brackets\n          if (!/>$/.test(trimmedUrl)) {\n            return;\n          } // ending angle bracket cannot be escaped\n\n\n          var rtrimSlash = rtrim(trimmedUrl.slice(0, -1), '\\\\');\n\n          if ((trimmedUrl.length - rtrimSlash.length) % 2 === 0) {\n            return;\n          }\n        } else {\n          // find closing parenthesis\n          var lastParenIndex = findClosingBracket(cap[2], '()');\n\n          if (lastParenIndex > -1) {\n            var start = cap[0].indexOf('!') === 0 ? 5 : 4;\n            var linkLen = start + cap[1].length + lastParenIndex;\n            cap[2] = cap[2].substring(0, lastParenIndex);\n            cap[0] = cap[0].substring(0, linkLen).trim();\n            cap[3] = '';\n          }\n        }\n\n        var href = cap[2];\n        var title = '';\n\n        if (this.options.pedantic) {\n          // split pedantic href and title\n          var link = /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/.exec(href);\n\n          if (link) {\n            href = link[1];\n            title = link[3];\n          }\n        } else {\n          title = cap[3] ? cap[3].slice(1, -1) : '';\n        }\n\n        href = href.trim();\n\n        if (/^</.test(href)) {\n          if (this.options.pedantic && !/>$/.test(trimmedUrl)) {\n            // pedantic allows starting angle bracket without ending angle bracket\n            href = href.slice(1);\n          } else {\n            href = href.slice(1, -1);\n          }\n        }\n\n        return outputLink(cap, {\n          href: href ? href.replace(this.rules.inline._escapes, '$1') : href,\n          title: title ? title.replace(this.rules.inline._escapes, '$1') : title\n        }, cap[0]);\n      }\n    };\n\n    _proto.reflink = function reflink(src, links) {\n      var cap;\n\n      if ((cap = this.rules.inline.reflink.exec(src)) || (cap = this.rules.inline.nolink.exec(src))) {\n        var link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n        link = links[link.toLowerCase()];\n\n        if (!link || !link.href) {\n          var text = cap[0].charAt(0);\n          return {\n            type: 'text',\n            raw: text,\n            text: text\n          };\n        }\n\n        return outputLink(cap, link, cap[0]);\n      }\n    };\n\n    _proto.emStrong = function emStrong(src, maskedSrc, prevChar) {\n      if (prevChar === void 0) {\n        prevChar = '';\n      }\n\n      var match = this.rules.inline.emStrong.lDelim.exec(src);\n      if (!match) return; // _ can't be between two alphanumerics. \\p{L}\\p{N} includes non-english alphabet/numbers as well\n\n      if (match[3] && prevChar.match(/(?:[0-9A-Za-z\\xAA\\xB2\\xB3\\xB5\\xB9\\xBA\\xBC-\\xBE\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05D0-\\u05EA\\u05EF-\\u05F2\\u0620-\\u064A\\u0660-\\u0669\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07C0-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086A\\u08A0-\\u08B4\\u08B6-\\u08C7\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0966-\\u096F\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09E6-\\u09F1\\u09F4-\\u09F9\\u09FC\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A6F\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AE6-\\u0AEF\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B66-\\u0B6F\\u0B71-\\u0B77\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0BE6-\\u0BF2\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C66-\\u0C6F\\u0C78-\\u0C7E\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D04-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D58-\\u0D61\\u0D66-\\u0D78\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DE6-\\u0DEF\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E86-\\u0E8A\\u0E8C-\\u0EA3\\u0EA5\\u0EA7-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F20-\\u0F33\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F-\\u1049\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u1090-\\u1099\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1369-\\u137C\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u17E0-\\u17E9\\u17F0-\\u17F9\\u1810-\\u1819\\u1820-\\u1878\\u1880-\\u1884\\u1887-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19DA\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1A80-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B50-\\u1B59\\u1B83-\\u1BA0\\u1BAE-\\u1BE5\\u1C00-\\u1C23\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1C80-\\u1C88\\u1C90-\\u1CBA\\u1CBD-\\u1CBF\\u1CE9-\\u1CEC\\u1CEE-\\u1CF3\\u1CF5\\u1CF6\\u1CFA\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2070\\u2071\\u2074-\\u2079\\u207F-\\u2089\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2150-\\u2189\\u2460-\\u249B\\u24EA-\\u24FF\\u2776-\\u2793\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2CFD\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312F\\u3131-\\u318E\\u3192-\\u3195\\u31A0-\\u31BF\\u31F0-\\u31FF\\u3220-\\u3229\\u3248-\\u324F\\u3251-\\u325F\\u3280-\\u3289\\u32B1-\\u32BF\\u3400-\\u4DBF\\u4E00-\\u9FFC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7BF\\uA7C2-\\uA7CA\\uA7F5-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA830-\\uA835\\uA840-\\uA873\\uA882-\\uA8B3\\uA8D0-\\uA8D9\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA8FE\\uA900-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF-\\uA9D9\\uA9E0-\\uA9E4\\uA9E6-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB69\\uAB70-\\uABE2\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD07-\\uDD33\\uDD40-\\uDD78\\uDD8A\\uDD8B\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDEE1-\\uDEFB\\uDF00-\\uDF23\\uDF2D-\\uDF4A\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCA0-\\uDCA9\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC58-\\uDC76\\uDC79-\\uDC9E\\uDCA7-\\uDCAF\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDCFB-\\uDD1B\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBC-\\uDDCF\\uDDD2-\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE35\\uDE40-\\uDE48\\uDE60-\\uDE7E\\uDE80-\\uDE9F\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDEEB-\\uDEEF\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF58-\\uDF72\\uDF78-\\uDF91\\uDFA9-\\uDFAF]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2\\uDCFA-\\uDD23\\uDD30-\\uDD39\\uDE60-\\uDE7E\\uDE80-\\uDEA9\\uDEB0\\uDEB1\\uDF00-\\uDF27\\uDF30-\\uDF45\\uDF51-\\uDF54\\uDFB0-\\uDFCB\\uDFE0-\\uDFF6]|\\uD804[\\uDC03-\\uDC37\\uDC52-\\uDC6F\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDCF0-\\uDCF9\\uDD03-\\uDD26\\uDD36-\\uDD3F\\uDD44\\uDD47\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDD0-\\uDDDA\\uDDDC\\uDDE1-\\uDDF4\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDEF0-\\uDEF9\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD805[\\uDC00-\\uDC34\\uDC47-\\uDC4A\\uDC50-\\uDC59\\uDC5F-\\uDC61\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDCD0-\\uDCD9\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE50-\\uDE59\\uDE80-\\uDEAA\\uDEB8\\uDEC0-\\uDEC9\\uDF00-\\uDF1A\\uDF30-\\uDF3B]|\\uD806[\\uDC00-\\uDC2B\\uDCA0-\\uDCF2\\uDCFF-\\uDD06\\uDD09\\uDD0C-\\uDD13\\uDD15\\uDD16\\uDD18-\\uDD2F\\uDD3F\\uDD41\\uDD50-\\uDD59\\uDDA0-\\uDDA7\\uDDAA-\\uDDD0\\uDDE1\\uDDE3\\uDE00\\uDE0B-\\uDE32\\uDE3A\\uDE50\\uDE5C-\\uDE89\\uDE9D\\uDEC0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC2E\\uDC40\\uDC50-\\uDC6C\\uDC72-\\uDC8F\\uDD00-\\uDD06\\uDD08\\uDD09\\uDD0B-\\uDD30\\uDD46\\uDD50-\\uDD59\\uDD60-\\uDD65\\uDD67\\uDD68\\uDD6A-\\uDD89\\uDD98\\uDDA0-\\uDDA9\\uDEE0-\\uDEF2\\uDFB0\\uDFC0-\\uDFD4]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|[\\uD80C\\uD81C-\\uD820\\uD822\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879\\uD880-\\uD883][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDE60-\\uDE69\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF40-\\uDF43\\uDF50-\\uDF59\\uDF5B-\\uDF61\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDE40-\\uDE96\\uDF00-\\uDF4A\\uDF50\\uDF93-\\uDF9F\\uDFE0\\uDFE1\\uDFE3]|\\uD821[\\uDC00-\\uDFF7]|\\uD823[\\uDC00-\\uDCD5\\uDD00-\\uDD08]|\\uD82C[\\uDC00-\\uDD1E\\uDD50-\\uDD52\\uDD64-\\uDD67\\uDD70-\\uDEFB]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD834[\\uDEE0-\\uDEF3\\uDF60-\\uDF78]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB\\uDFCE-\\uDFFF]|\\uD838[\\uDD00-\\uDD2C\\uDD37-\\uDD3D\\uDD40-\\uDD49\\uDD4E\\uDEC0-\\uDEEB\\uDEF0-\\uDEF9]|\\uD83A[\\uDC00-\\uDCC4\\uDCC7-\\uDCCF\\uDD00-\\uDD43\\uDD4B\\uDD50-\\uDD59]|\\uD83B[\\uDC71-\\uDCAB\\uDCAD-\\uDCAF\\uDCB1-\\uDCB4\\uDD01-\\uDD2D\\uDD2F-\\uDD3D\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD83C[\\uDD00-\\uDD0C]|\\uD83E[\\uDFF0-\\uDFF9]|\\uD869[\\uDC00-\\uDEDD\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0]|\\uD87E[\\uDC00-\\uDE1D]|\\uD884[\\uDC00-\\uDF4A])/)) return;\n      var nextChar = match[1] || match[2] || '';\n\n      if (!nextChar || nextChar && (prevChar === '' || this.rules.inline.punctuation.exec(prevChar))) {\n        var lLength = match[0].length - 1;\n        var rDelim,\n            rLength,\n            delimTotal = lLength,\n            midDelimTotal = 0;\n        var endReg = match[0][0] === '*' ? this.rules.inline.emStrong.rDelimAst : this.rules.inline.emStrong.rDelimUnd;\n        endReg.lastIndex = 0; // Clip maskedSrc to same section of string as src (move to lexer?)\n\n        maskedSrc = maskedSrc.slice(-1 * src.length + lLength);\n\n        while ((match = endReg.exec(maskedSrc)) != null) {\n          rDelim = match[1] || match[2] || match[3] || match[4] || match[5] || match[6];\n          if (!rDelim) continue; // skip single * in __abc*abc__\n\n          rLength = rDelim.length;\n\n          if (match[3] || match[4]) {\n            // found another Left Delim\n            delimTotal += rLength;\n            continue;\n          } else if (match[5] || match[6]) {\n            // either Left or Right Delim\n            if (lLength % 3 && !((lLength + rLength) % 3)) {\n              midDelimTotal += rLength;\n              continue; // CommonMark Emphasis Rules 9-10\n            }\n          }\n\n          delimTotal -= rLength;\n          if (delimTotal > 0) continue; // Haven't found enough closing delimiters\n          // Remove extra characters. *a*** -> *a*\n\n          rLength = Math.min(rLength, rLength + delimTotal + midDelimTotal); // Create `em` if smallest delimiter has odd char count. *a***\n\n          if (Math.min(lLength, rLength) % 2) {\n            return {\n              type: 'em',\n              raw: src.slice(0, lLength + match.index + rLength + 1),\n              text: src.slice(1, lLength + match.index + rLength)\n            };\n          } // Create 'strong' if smallest delimiter has even char count. **a***\n\n\n          return {\n            type: 'strong',\n            raw: src.slice(0, lLength + match.index + rLength + 1),\n            text: src.slice(2, lLength + match.index + rLength - 1)\n          };\n        }\n      }\n    };\n\n    _proto.codespan = function codespan(src) {\n      var cap = this.rules.inline.code.exec(src);\n\n      if (cap) {\n        var text = cap[2].replace(/\\n/g, ' ');\n        var hasNonSpaceChars = /[^ ]/.test(text);\n        var hasSpaceCharsOnBothEnds = /^ /.test(text) && / $/.test(text);\n\n        if (hasNonSpaceChars && hasSpaceCharsOnBothEnds) {\n          text = text.substring(1, text.length - 1);\n        }\n\n        text = _escape(text, true);\n        return {\n          type: 'codespan',\n          raw: cap[0],\n          text: text\n        };\n      }\n    };\n\n    _proto.br = function br(src) {\n      var cap = this.rules.inline.br.exec(src);\n\n      if (cap) {\n        return {\n          type: 'br',\n          raw: cap[0]\n        };\n      }\n    };\n\n    _proto.del = function del(src) {\n      var cap = this.rules.inline.del.exec(src);\n\n      if (cap) {\n        return {\n          type: 'del',\n          raw: cap[0],\n          text: cap[2]\n        };\n      }\n    };\n\n    _proto.autolink = function autolink(src, mangle) {\n      var cap = this.rules.inline.autolink.exec(src);\n\n      if (cap) {\n        var text, href;\n\n        if (cap[2] === '@') {\n          text = _escape(this.options.mangle ? mangle(cap[1]) : cap[1]);\n          href = 'mailto:' + text;\n        } else {\n          text = _escape(cap[1]);\n          href = text;\n        }\n\n        return {\n          type: 'link',\n          raw: cap[0],\n          text: text,\n          href: href,\n          tokens: [{\n            type: 'text',\n            raw: text,\n            text: text\n          }]\n        };\n      }\n    };\n\n    _proto.url = function url(src, mangle) {\n      var cap;\n\n      if (cap = this.rules.inline.url.exec(src)) {\n        var text, href;\n\n        if (cap[2] === '@') {\n          text = _escape(this.options.mangle ? mangle(cap[0]) : cap[0]);\n          href = 'mailto:' + text;\n        } else {\n          // do extended autolink path validation\n          var prevCapZero;\n\n          do {\n            prevCapZero = cap[0];\n            cap[0] = this.rules.inline._backpedal.exec(cap[0])[0];\n          } while (prevCapZero !== cap[0]);\n\n          text = _escape(cap[0]);\n\n          if (cap[1] === 'www.') {\n            href = 'http://' + text;\n          } else {\n            href = text;\n          }\n        }\n\n        return {\n          type: 'link',\n          raw: cap[0],\n          text: text,\n          href: href,\n          tokens: [{\n            type: 'text',\n            raw: text,\n            text: text\n          }]\n        };\n      }\n    };\n\n    _proto.inlineText = function inlineText(src, inRawBlock, smartypants) {\n      var cap = this.rules.inline.text.exec(src);\n\n      if (cap) {\n        var text;\n\n        if (inRawBlock) {\n          text = this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(cap[0]) : _escape(cap[0]) : cap[0];\n        } else {\n          text = _escape(this.options.smartypants ? smartypants(cap[0]) : cap[0]);\n        }\n\n        return {\n          type: 'text',\n          raw: cap[0],\n          text: text\n        };\n      }\n    };\n\n    return Tokenizer;\n  }();\n\n  var noopTest = helpers.noopTest,\n      edit = helpers.edit,\n      merge$1 = helpers.merge;\n  /**\n   * Block-Level Grammar\n   */\n\n  var block$1 = {\n    newline: /^(?: *(?:\\n|$))+/,\n    code: /^( {4}[^\\n]+(?:\\n(?: *(?:\\n|$))*)?)+/,\n    fences: /^ {0,3}(`{3,}(?=[^`\\n]*\\n)|~{3,})([^\\n]*)\\n(?:|([\\s\\S]*?)\\n)(?: {0,3}\\1[~`]* *(?:\\n+|$)|$)/,\n    hr: /^ {0,3}((?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$)/,\n    heading: /^ {0,3}(#{1,6})(?=\\s|$)(.*)(?:\\n+|$)/,\n    blockquote: /^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/,\n    list: /^( {0,3})(bull) [\\s\\S]+?(?:hr|def|\\n{2,}(?! )(?! {0,3}bull )\\n*|\\s*$)/,\n    html: '^ {0,3}(?:' // optional indentation\n    + '<(script|pre|style|textarea)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)' // (1)\n    + '|comment[^\\\\n]*(\\\\n+|$)' // (2)\n    + '|<\\\\?[\\\\s\\\\S]*?(?:\\\\?>\\\\n*|$)' // (3)\n    + '|<![A-Z][\\\\s\\\\S]*?(?:>\\\\n*|$)' // (4)\n    + '|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?(?:\\\\]\\\\]>\\\\n*|$)' // (5)\n    + '|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (6)\n    + '|<(?!script|pre|style|textarea)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) open tag\n    + '|</(?!script|pre|style|textarea)[a-z][\\\\w-]*\\\\s*>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) closing tag\n    + ')',\n    def: /^ {0,3}\\[(label)\\]: *\\n? *<?([^\\s>]+)>?(?:(?: +\\n? *| *\\n *)(title))? *(?:\\n+|$)/,\n    nptable: noopTest,\n    table: noopTest,\n    lheading: /^([^\\n]+)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n    // regex template, placeholders will be replaced according to different paragraph\n    // interruption rules of commonmark and the original markdown spec:\n    _paragraph: /^([^\\n]+(?:\\n(?!hr|heading|lheading|blockquote|fences|list|html| +\\n)[^\\n]+)*)/,\n    text: /^[^\\n]+/\n  };\n  block$1._label = /(?!\\s*\\])(?:\\\\[\\[\\]]|[^\\[\\]])+/;\n  block$1._title = /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/;\n  block$1.def = edit(block$1.def).replace('label', block$1._label).replace('title', block$1._title).getRegex();\n  block$1.bullet = /(?:[*+-]|\\d{1,9}[.)])/;\n  block$1.item = /^( *)(bull) ?[^\\n]*(?:\\n(?! *bull ?)[^\\n]*)*/;\n  block$1.item = edit(block$1.item, 'gm').replace(/bull/g, block$1.bullet).getRegex();\n  block$1.listItemStart = edit(/^( *)(bull) */).replace('bull', block$1.bullet).getRegex();\n  block$1.list = edit(block$1.list).replace(/bull/g, block$1.bullet).replace('hr', '\\\\n+(?=\\\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$))').replace('def', '\\\\n+(?=' + block$1.def.source + ')').getRegex();\n  block$1._tag = 'address|article|aside|base|basefont|blockquote|body|caption' + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption' + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe' + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option' + '|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr' + '|track|ul';\n  block$1._comment = /<!--(?!-?>)[\\s\\S]*?(?:-->|$)/;\n  block$1.html = edit(block$1.html, 'i').replace('comment', block$1._comment).replace('tag', block$1._tag).replace('attribute', / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/).getRegex();\n  block$1.paragraph = edit(block$1._paragraph).replace('hr', block$1.hr).replace('heading', ' {0,3}#{1,6} ').replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n  .replace('blockquote', ' {0,3}>').replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n').replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)').replace('tag', block$1._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n  block$1.blockquote = edit(block$1.blockquote).replace('paragraph', block$1.paragraph).getRegex();\n  /**\n   * Normal Block Grammar\n   */\n\n  block$1.normal = merge$1({}, block$1);\n  /**\n   * GFM Block Grammar\n   */\n\n  block$1.gfm = merge$1({}, block$1.normal, {\n    nptable: '^ *([^|\\\\n ].*\\\\|.*)\\\\n' // Header\n    + ' {0,3}([-:]+ *\\\\|[-| :]*)' // Align\n    + '(?:\\\\n((?:(?!\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)',\n    // Cells\n    table: '^ *\\\\|(.+)\\\\n' // Header\n    + ' {0,3}\\\\|?( *[-:]+[-| :]*)' // Align\n    + '(?:\\\\n *((?:(?!\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)' // Cells\n\n  });\n  block$1.gfm.nptable = edit(block$1.gfm.nptable).replace('hr', block$1.hr).replace('heading', ' {0,3}#{1,6} ').replace('blockquote', ' {0,3}>').replace('code', ' {4}[^\\\\n]').replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n').replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)').replace('tag', block$1._tag) // tables can be interrupted by type (6) html blocks\n  .getRegex();\n  block$1.gfm.table = edit(block$1.gfm.table).replace('hr', block$1.hr).replace('heading', ' {0,3}#{1,6} ').replace('blockquote', ' {0,3}>').replace('code', ' {4}[^\\\\n]').replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n').replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)').replace('tag', block$1._tag) // tables can be interrupted by type (6) html blocks\n  .getRegex();\n  /**\n   * Pedantic grammar (original John Gruber's loose markdown specification)\n   */\n\n  block$1.pedantic = merge$1({}, block$1.normal, {\n    html: edit('^ *(?:comment *(?:\\\\n|\\\\s*$)' + '|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)' // closed tag\n    + '|<tag(?:\"[^\"]*\"|\\'[^\\']*\\'|\\\\s[^\\'\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))').replace('comment', block$1._comment).replace(/tag/g, '(?!(?:' + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub' + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)' + '\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b').getRegex(),\n    def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/,\n    heading: /^(#{1,6})(.*)(?:\\n+|$)/,\n    fences: noopTest,\n    // fences not supported\n    paragraph: edit(block$1.normal._paragraph).replace('hr', block$1.hr).replace('heading', ' *#{1,6} *[^\\n]').replace('lheading', block$1.lheading).replace('blockquote', ' {0,3}>').replace('|fences', '').replace('|list', '').replace('|html', '').getRegex()\n  });\n  /**\n   * Inline-Level Grammar\n   */\n\n  var inline$1 = {\n    escape: /^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/,\n    autolink: /^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/,\n    url: noopTest,\n    tag: '^comment' + '|^</[a-zA-Z][\\\\w:-]*\\\\s*>' // self-closing tag\n    + '|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>' // open tag\n    + '|^<\\\\?[\\\\s\\\\S]*?\\\\?>' // processing instruction, e.g. <?php ?>\n    + '|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>' // declaration, e.g. <!DOCTYPE html>\n    + '|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>',\n    // CDATA section\n    link: /^!?\\[(label)\\]\\(\\s*(href)(?:\\s+(title))?\\s*\\)/,\n    reflink: /^!?\\[(label)\\]\\[(?!\\s*\\])((?:\\\\[\\[\\]]?|[^\\[\\]\\\\])+)\\]/,\n    nolink: /^!?\\[(?!\\s*\\])((?:\\[[^\\[\\]]*\\]|\\\\[\\[\\]]|[^\\[\\]])*)\\](?:\\[\\])?/,\n    reflinkSearch: 'reflink|nolink(?!\\\\()',\n    emStrong: {\n      lDelim: /^(?:\\*+(?:([punct_])|[^\\s*]))|^_+(?:([punct*])|([^\\s_]))/,\n      //        (1) and (2) can only be a Right Delimiter. (3) and (4) can only be Left.  (5) and (6) can be either Left or Right.\n      //        () Skip other delimiter (1) #***                   (2) a***#, a***                   (3) #***a, ***a                 (4) ***#              (5) #***#                 (6) a***a\n      rDelimAst: /\\_\\_[^_*]*?\\*[^_*]*?\\_\\_|[punct_](\\*+)(?=[\\s]|$)|[^punct*_\\s](\\*+)(?=[punct_\\s]|$)|[punct_\\s](\\*+)(?=[^punct*_\\s])|[\\s](\\*+)(?=[punct_])|[punct_](\\*+)(?=[punct_])|[^punct*_\\s](\\*+)(?=[^punct*_\\s])/,\n      rDelimUnd: /\\*\\*[^_*]*?\\_[^_*]*?\\*\\*|[punct*](\\_+)(?=[\\s]|$)|[^punct*_\\s](\\_+)(?=[punct*\\s]|$)|[punct*\\s](\\_+)(?=[^punct*_\\s])|[\\s](\\_+)(?=[punct*])|[punct*](\\_+)(?=[punct*])/ // ^- Not allowed for _\n\n    },\n    code: /^(`+)([^`]|[^`][\\s\\S]*?[^`])\\1(?!`)/,\n    br: /^( {2,}|\\\\)\\n(?!\\s*$)/,\n    del: noopTest,\n    text: /^(`+|[^`])(?:(?= {2,}\\n)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*_]|\\b_|$)|[^ ](?= {2,}\\n)))/,\n    punctuation: /^([\\spunctuation])/\n  }; // list of punctuation marks from CommonMark spec\n  // without * and _ to handle the different emphasis markers * and _\n\n  inline$1._punctuation = '!\"#$%&\\'()+\\\\-.,/:;<=>?@\\\\[\\\\]`^{|}~';\n  inline$1.punctuation = edit(inline$1.punctuation).replace(/punctuation/g, inline$1._punctuation).getRegex(); // sequences em should skip over [title](link), `code`, <html>\n\n  inline$1.blockSkip = /\\[[^\\]]*?\\]\\([^\\)]*?\\)|`[^`]*?`|<[^>]*?>/g;\n  inline$1.escapedEmSt = /\\\\\\*|\\\\_/g;\n  inline$1._comment = edit(block$1._comment).replace('(?:-->|$)', '-->').getRegex();\n  inline$1.emStrong.lDelim = edit(inline$1.emStrong.lDelim).replace(/punct/g, inline$1._punctuation).getRegex();\n  inline$1.emStrong.rDelimAst = edit(inline$1.emStrong.rDelimAst, 'g').replace(/punct/g, inline$1._punctuation).getRegex();\n  inline$1.emStrong.rDelimUnd = edit(inline$1.emStrong.rDelimUnd, 'g').replace(/punct/g, inline$1._punctuation).getRegex();\n  inline$1._escapes = /\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/g;\n  inline$1._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;\n  inline$1._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;\n  inline$1.autolink = edit(inline$1.autolink).replace('scheme', inline$1._scheme).replace('email', inline$1._email).getRegex();\n  inline$1._attribute = /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/;\n  inline$1.tag = edit(inline$1.tag).replace('comment', inline$1._comment).replace('attribute', inline$1._attribute).getRegex();\n  inline$1._label = /(?:\\[(?:\\\\.|[^\\[\\]\\\\])*\\]|\\\\.|`[^`]*`|[^\\[\\]\\\\`])*?/;\n  inline$1._href = /<(?:\\\\.|[^\\n<>\\\\])+>|[^\\s\\x00-\\x1f]*/;\n  inline$1._title = /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/;\n  inline$1.link = edit(inline$1.link).replace('label', inline$1._label).replace('href', inline$1._href).replace('title', inline$1._title).getRegex();\n  inline$1.reflink = edit(inline$1.reflink).replace('label', inline$1._label).getRegex();\n  inline$1.reflinkSearch = edit(inline$1.reflinkSearch, 'g').replace('reflink', inline$1.reflink).replace('nolink', inline$1.nolink).getRegex();\n  /**\n   * Normal Inline Grammar\n   */\n\n  inline$1.normal = merge$1({}, inline$1);\n  /**\n   * Pedantic Inline Grammar\n   */\n\n  inline$1.pedantic = merge$1({}, inline$1.normal, {\n    strong: {\n      start: /^__|\\*\\*/,\n      middle: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n      endAst: /\\*\\*(?!\\*)/g,\n      endUnd: /__(?!_)/g\n    },\n    em: {\n      start: /^_|\\*/,\n      middle: /^()\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)|^_(?=\\S)([\\s\\S]*?\\S)_(?!_)/,\n      endAst: /\\*(?!\\*)/g,\n      endUnd: /_(?!_)/g\n    },\n    link: edit(/^!?\\[(label)\\]\\((.*?)\\)/).replace('label', inline$1._label).getRegex(),\n    reflink: edit(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/).replace('label', inline$1._label).getRegex()\n  });\n  /**\n   * GFM Inline Grammar\n   */\n\n  inline$1.gfm = merge$1({}, inline$1.normal, {\n    escape: edit(inline$1.escape).replace('])', '~|])').getRegex(),\n    _extended_email: /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,\n    url: /^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/,\n    _backpedal: /(?:[^?!.,:;*_~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_~)]+(?!$))+/,\n    del: /^(~~?)(?=[^\\s~])([\\s\\S]*?[^\\s~])\\1(?=[^~]|$)/,\n    text: /^([`~]+|[^`~])(?:(?= {2,}\\n)|(?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*~_]|\\b_|https?:\\/\\/|ftp:\\/\\/|www\\.|$)|[^ ](?= {2,}\\n)|[^a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-](?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)))/\n  });\n  inline$1.gfm.url = edit(inline$1.gfm.url, 'i').replace('email', inline$1.gfm._extended_email).getRegex();\n  /**\n   * GFM + Line Breaks Inline Grammar\n   */\n\n  inline$1.breaks = merge$1({}, inline$1.gfm, {\n    br: edit(inline$1.br).replace('{2,}', '*').getRegex(),\n    text: edit(inline$1.gfm.text).replace('\\\\b_', '\\\\b_| {2,}\\\\n').replace(/\\{2,\\}/g, '*').getRegex()\n  });\n  var rules = {\n    block: block$1,\n    inline: inline$1\n  };\n\n  var Tokenizer$1 = Tokenizer_1;\n  var defaults$3 = defaults$5.exports.defaults;\n  var block = rules.block,\n      inline = rules.inline;\n  var repeatString = helpers.repeatString;\n  /**\n   * smartypants text replacement\n   */\n\n  function smartypants(text) {\n    return text // em-dashes\n    .replace(/---/g, \"\\u2014\") // en-dashes\n    .replace(/--/g, \"\\u2013\") // opening singles\n    .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, \"$1\\u2018\") // closing singles & apostrophes\n    .replace(/'/g, \"\\u2019\") // opening doubles\n    .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, \"$1\\u201C\") // closing doubles\n    .replace(/\"/g, \"\\u201D\") // ellipses\n    .replace(/\\.{3}/g, \"\\u2026\");\n  }\n  /**\n   * mangle email addresses\n   */\n\n\n  function mangle(text) {\n    var out = '',\n        i,\n        ch;\n    var l = text.length;\n\n    for (i = 0; i < l; i++) {\n      ch = text.charCodeAt(i);\n\n      if (Math.random() > 0.5) {\n        ch = 'x' + ch.toString(16);\n      }\n\n      out += '&#' + ch + ';';\n    }\n\n    return out;\n  }\n  /**\n   * Block Lexer\n   */\n\n\n  var Lexer_1 = /*#__PURE__*/function () {\n    function Lexer(options) {\n      this.tokens = [];\n      this.tokens.links = Object.create(null);\n      this.options = options || defaults$3;\n      this.options.tokenizer = this.options.tokenizer || new Tokenizer$1();\n      this.tokenizer = this.options.tokenizer;\n      this.tokenizer.options = this.options;\n      var rules = {\n        block: block.normal,\n        inline: inline.normal\n      };\n\n      if (this.options.pedantic) {\n        rules.block = block.pedantic;\n        rules.inline = inline.pedantic;\n      } else if (this.options.gfm) {\n        rules.block = block.gfm;\n\n        if (this.options.breaks) {\n          rules.inline = inline.breaks;\n        } else {\n          rules.inline = inline.gfm;\n        }\n      }\n\n      this.tokenizer.rules = rules;\n    }\n    /**\n     * Expose Rules\n     */\n\n\n    /**\n     * Static Lex Method\n     */\n    Lexer.lex = function lex(src, options) {\n      var lexer = new Lexer(options);\n      return lexer.lex(src);\n    }\n    /**\n     * Static Lex Inline Method\n     */\n    ;\n\n    Lexer.lexInline = function lexInline(src, options) {\n      var lexer = new Lexer(options);\n      return lexer.inlineTokens(src);\n    }\n    /**\n     * Preprocessing\n     */\n    ;\n\n    var _proto = Lexer.prototype;\n\n    _proto.lex = function lex(src) {\n      src = src.replace(/\\r\\n|\\r/g, '\\n').replace(/\\t/g, '    ');\n      this.blockTokens(src, this.tokens, true);\n      this.inline(this.tokens);\n      return this.tokens;\n    }\n    /**\n     * Lexing\n     */\n    ;\n\n    _proto.blockTokens = function blockTokens(src, tokens, top) {\n      var _this = this;\n\n      if (tokens === void 0) {\n        tokens = [];\n      }\n\n      if (top === void 0) {\n        top = true;\n      }\n\n      if (this.options.pedantic) {\n        src = src.replace(/^ +$/gm, '');\n      }\n\n      var token, i, l, lastToken, cutSrc, lastParagraphClipped;\n\n      while (src) {\n        if (this.options.extensions && this.options.extensions.block && this.options.extensions.block.some(function (extTokenizer) {\n          if (token = extTokenizer.call(_this, src, tokens)) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            return true;\n          }\n\n          return false;\n        })) {\n          continue;\n        } // newline\n\n\n        if (token = this.tokenizer.space(src)) {\n          src = src.substring(token.raw.length);\n\n          if (token.type) {\n            tokens.push(token);\n          }\n\n          continue;\n        } // code\n\n\n        if (token = this.tokenizer.code(src)) {\n          src = src.substring(token.raw.length);\n          lastToken = tokens[tokens.length - 1]; // An indented code block cannot interrupt a paragraph.\n\n          if (lastToken && lastToken.type === 'paragraph') {\n            lastToken.raw += '\\n' + token.raw;\n            lastToken.text += '\\n' + token.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        } // fences\n\n\n        if (token = this.tokenizer.fences(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // heading\n\n\n        if (token = this.tokenizer.heading(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // table no leading pipe (gfm)\n\n\n        if (token = this.tokenizer.nptable(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // hr\n\n\n        if (token = this.tokenizer.hr(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // blockquote\n\n\n        if (token = this.tokenizer.blockquote(src)) {\n          src = src.substring(token.raw.length);\n          token.tokens = this.blockTokens(token.text, [], top);\n          tokens.push(token);\n          continue;\n        } // list\n\n\n        if (token = this.tokenizer.list(src)) {\n          src = src.substring(token.raw.length);\n          l = token.items.length;\n\n          for (i = 0; i < l; i++) {\n            token.items[i].tokens = this.blockTokens(token.items[i].text, [], false);\n          }\n\n          tokens.push(token);\n          continue;\n        } // html\n\n\n        if (token = this.tokenizer.html(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // def\n\n\n        if (top && (token = this.tokenizer.def(src))) {\n          src = src.substring(token.raw.length);\n\n          if (!this.tokens.links[token.tag]) {\n            this.tokens.links[token.tag] = {\n              href: token.href,\n              title: token.title\n            };\n          }\n\n          continue;\n        } // table (gfm)\n\n\n        if (token = this.tokenizer.table(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // lheading\n\n\n        if (token = this.tokenizer.lheading(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // top-level paragraph\n        // prevent paragraph consuming extensions by clipping 'src' to extension start\n\n\n        cutSrc = src;\n\n        if (this.options.extensions && this.options.extensions.startBlock) {\n          (function () {\n            var startIndex = Infinity;\n            var tempSrc = src.slice(1);\n            var tempStart = void 0;\n\n            _this.options.extensions.startBlock.forEach(function (getStartIndex) {\n              tempStart = getStartIndex.call(this, tempSrc);\n\n              if (typeof tempStart === 'number' && tempStart >= 0) {\n                startIndex = Math.min(startIndex, tempStart);\n              }\n            });\n\n            if (startIndex < Infinity && startIndex >= 0) {\n              cutSrc = src.substring(0, startIndex + 1);\n            }\n          })();\n        }\n\n        if (top && (token = this.tokenizer.paragraph(cutSrc))) {\n          lastToken = tokens[tokens.length - 1];\n\n          if (lastParagraphClipped && lastToken.type === 'paragraph') {\n            lastToken.raw += '\\n' + token.raw;\n            lastToken.text += '\\n' + token.text;\n          } else {\n            tokens.push(token);\n          }\n\n          lastParagraphClipped = cutSrc.length !== src.length;\n          src = src.substring(token.raw.length);\n          continue;\n        } // text\n\n\n        if (token = this.tokenizer.text(src)) {\n          src = src.substring(token.raw.length);\n          lastToken = tokens[tokens.length - 1];\n\n          if (lastToken && lastToken.type === 'text') {\n            lastToken.raw += '\\n' + token.raw;\n            lastToken.text += '\\n' + token.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        }\n\n        if (src) {\n          var errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n\n          if (this.options.silent) {\n            console.error(errMsg);\n            break;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n\n      return tokens;\n    };\n\n    _proto.inline = function inline(tokens) {\n      var i, j, k, l2, row, token;\n      var l = tokens.length;\n\n      for (i = 0; i < l; i++) {\n        token = tokens[i];\n\n        switch (token.type) {\n          case 'paragraph':\n          case 'text':\n          case 'heading':\n            {\n              token.tokens = [];\n              this.inlineTokens(token.text, token.tokens);\n              break;\n            }\n\n          case 'table':\n            {\n              token.tokens = {\n                header: [],\n                cells: []\n              }; // header\n\n              l2 = token.header.length;\n\n              for (j = 0; j < l2; j++) {\n                token.tokens.header[j] = [];\n                this.inlineTokens(token.header[j], token.tokens.header[j]);\n              } // cells\n\n\n              l2 = token.cells.length;\n\n              for (j = 0; j < l2; j++) {\n                row = token.cells[j];\n                token.tokens.cells[j] = [];\n\n                for (k = 0; k < row.length; k++) {\n                  token.tokens.cells[j][k] = [];\n                  this.inlineTokens(row[k], token.tokens.cells[j][k]);\n                }\n              }\n\n              break;\n            }\n\n          case 'blockquote':\n            {\n              this.inline(token.tokens);\n              break;\n            }\n\n          case 'list':\n            {\n              l2 = token.items.length;\n\n              for (j = 0; j < l2; j++) {\n                this.inline(token.items[j].tokens);\n              }\n\n              break;\n            }\n        }\n      }\n\n      return tokens;\n    }\n    /**\n     * Lexing/Compiling\n     */\n    ;\n\n    _proto.inlineTokens = function inlineTokens(src, tokens, inLink, inRawBlock) {\n      var _this2 = this;\n\n      if (tokens === void 0) {\n        tokens = [];\n      }\n\n      if (inLink === void 0) {\n        inLink = false;\n      }\n\n      if (inRawBlock === void 0) {\n        inRawBlock = false;\n      }\n\n      var token, lastToken, cutSrc; // String with links masked to avoid interference with em and strong\n\n      var maskedSrc = src;\n      var match;\n      var keepPrevChar, prevChar; // Mask out reflinks\n\n      if (this.tokens.links) {\n        var links = Object.keys(this.tokens.links);\n\n        if (links.length > 0) {\n          while ((match = this.tokenizer.rules.inline.reflinkSearch.exec(maskedSrc)) != null) {\n            if (links.includes(match[0].slice(match[0].lastIndexOf('[') + 1, -1))) {\n              maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.reflinkSearch.lastIndex);\n            }\n          }\n        }\n      } // Mask out other blocks\n\n\n      while ((match = this.tokenizer.rules.inline.blockSkip.exec(maskedSrc)) != null) {\n        maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.blockSkip.lastIndex);\n      } // Mask out escaped em & strong delimiters\n\n\n      while ((match = this.tokenizer.rules.inline.escapedEmSt.exec(maskedSrc)) != null) {\n        maskedSrc = maskedSrc.slice(0, match.index) + '++' + maskedSrc.slice(this.tokenizer.rules.inline.escapedEmSt.lastIndex);\n      }\n\n      while (src) {\n        if (!keepPrevChar) {\n          prevChar = '';\n        }\n\n        keepPrevChar = false; // extensions\n\n        if (this.options.extensions && this.options.extensions.inline && this.options.extensions.inline.some(function (extTokenizer) {\n          if (token = extTokenizer.call(_this2, src, tokens)) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            return true;\n          }\n\n          return false;\n        })) {\n          continue;\n        } // escape\n\n\n        if (token = this.tokenizer.escape(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // tag\n\n\n        if (token = this.tokenizer.tag(src, inLink, inRawBlock)) {\n          src = src.substring(token.raw.length);\n          inLink = token.inLink;\n          inRawBlock = token.inRawBlock;\n          lastToken = tokens[tokens.length - 1];\n\n          if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n            lastToken.raw += token.raw;\n            lastToken.text += token.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        } // link\n\n\n        if (token = this.tokenizer.link(src)) {\n          src = src.substring(token.raw.length);\n\n          if (token.type === 'link') {\n            token.tokens = this.inlineTokens(token.text, [], true, inRawBlock);\n          }\n\n          tokens.push(token);\n          continue;\n        } // reflink, nolink\n\n\n        if (token = this.tokenizer.reflink(src, this.tokens.links)) {\n          src = src.substring(token.raw.length);\n          lastToken = tokens[tokens.length - 1];\n\n          if (token.type === 'link') {\n            token.tokens = this.inlineTokens(token.text, [], true, inRawBlock);\n            tokens.push(token);\n          } else if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n            lastToken.raw += token.raw;\n            lastToken.text += token.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        } // em & strong\n\n\n        if (token = this.tokenizer.emStrong(src, maskedSrc, prevChar)) {\n          src = src.substring(token.raw.length);\n          token.tokens = this.inlineTokens(token.text, [], inLink, inRawBlock);\n          tokens.push(token);\n          continue;\n        } // code\n\n\n        if (token = this.tokenizer.codespan(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // br\n\n\n        if (token = this.tokenizer.br(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // del (gfm)\n\n\n        if (token = this.tokenizer.del(src)) {\n          src = src.substring(token.raw.length);\n          token.tokens = this.inlineTokens(token.text, [], inLink, inRawBlock);\n          tokens.push(token);\n          continue;\n        } // autolink\n\n\n        if (token = this.tokenizer.autolink(src, mangle)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // url (gfm)\n\n\n        if (!inLink && (token = this.tokenizer.url(src, mangle))) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // text\n        // prevent inlineText consuming extensions by clipping 'src' to extension start\n\n\n        cutSrc = src;\n\n        if (this.options.extensions && this.options.extensions.startInline) {\n          (function () {\n            var startIndex = Infinity;\n            var tempSrc = src.slice(1);\n            var tempStart = void 0;\n\n            _this2.options.extensions.startInline.forEach(function (getStartIndex) {\n              tempStart = getStartIndex.call(this, tempSrc);\n\n              if (typeof tempStart === 'number' && tempStart >= 0) {\n                startIndex = Math.min(startIndex, tempStart);\n              }\n            });\n\n            if (startIndex < Infinity && startIndex >= 0) {\n              cutSrc = src.substring(0, startIndex + 1);\n            }\n          })();\n        }\n\n        if (token = this.tokenizer.inlineText(cutSrc, inRawBlock, smartypants)) {\n          src = src.substring(token.raw.length);\n\n          if (token.raw.slice(-1) !== '_') {\n            // Track prevChar before string of ____ started\n            prevChar = token.raw.slice(-1);\n          }\n\n          keepPrevChar = true;\n          lastToken = tokens[tokens.length - 1];\n\n          if (lastToken && lastToken.type === 'text') {\n            lastToken.raw += token.raw;\n            lastToken.text += token.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        }\n\n        if (src) {\n          var errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n\n          if (this.options.silent) {\n            console.error(errMsg);\n            break;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n\n      return tokens;\n    };\n\n    _createClass(Lexer, null, [{\n      key: \"rules\",\n      get: function get() {\n        return {\n          block: block,\n          inline: inline\n        };\n      }\n    }]);\n\n    return Lexer;\n  }();\n\n  var defaults$2 = defaults$5.exports.defaults;\n  var cleanUrl = helpers.cleanUrl,\n      escape$1 = helpers.escape;\n  /**\n   * Renderer\n   */\n\n  var Renderer_1 = /*#__PURE__*/function () {\n    function Renderer(options) {\n      this.options = options || defaults$2;\n    }\n\n    var _proto = Renderer.prototype;\n\n    _proto.code = function code(_code, infostring, escaped) {\n      var lang = (infostring || '').match(/\\S*/)[0];\n\n      if (this.options.highlight) {\n        var out = this.options.highlight(_code, lang);\n\n        if (out != null && out !== _code) {\n          escaped = true;\n          _code = out;\n        }\n      }\n\n      _code = _code.replace(/\\n$/, '') + '\\n';\n\n      if (!lang) {\n        return '<pre><code>' + (escaped ? _code : escape$1(_code, true)) + '</code></pre>\\n';\n      }\n\n      return '<pre><code class=\"' + this.options.langPrefix + escape$1(lang, true) + '\">' + (escaped ? _code : escape$1(_code, true)) + '</code></pre>\\n';\n    };\n\n    _proto.blockquote = function blockquote(quote) {\n      return '<blockquote>\\n' + quote + '</blockquote>\\n';\n    };\n\n    _proto.html = function html(_html) {\n      return _html;\n    };\n\n    _proto.heading = function heading(text, level, raw, slugger) {\n      if (this.options.headerIds) {\n        return '<h' + level + ' id=\"' + this.options.headerPrefix + slugger.slug(raw) + '\">' + text + '</h' + level + '>\\n';\n      } // ignore IDs\n\n\n      return '<h' + level + '>' + text + '</h' + level + '>\\n';\n    };\n\n    _proto.hr = function hr() {\n      return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n    };\n\n    _proto.list = function list(body, ordered, start) {\n      var type = ordered ? 'ol' : 'ul',\n          startatt = ordered && start !== 1 ? ' start=\"' + start + '\"' : '';\n      return '<' + type + startatt + '>\\n' + body + '</' + type + '>\\n';\n    };\n\n    _proto.listitem = function listitem(text) {\n      return '<li>' + text + '</li>\\n';\n    };\n\n    _proto.checkbox = function checkbox(checked) {\n      return '<input ' + (checked ? 'checked=\"\" ' : '') + 'disabled=\"\" type=\"checkbox\"' + (this.options.xhtml ? ' /' : '') + '> ';\n    };\n\n    _proto.paragraph = function paragraph(text) {\n      return '<p>' + text + '</p>\\n';\n    };\n\n    _proto.table = function table(header, body) {\n      if (body) body = '<tbody>' + body + '</tbody>';\n      return '<table>\\n' + '<thead>\\n' + header + '</thead>\\n' + body + '</table>\\n';\n    };\n\n    _proto.tablerow = function tablerow(content) {\n      return '<tr>\\n' + content + '</tr>\\n';\n    };\n\n    _proto.tablecell = function tablecell(content, flags) {\n      var type = flags.header ? 'th' : 'td';\n      var tag = flags.align ? '<' + type + ' align=\"' + flags.align + '\">' : '<' + type + '>';\n      return tag + content + '</' + type + '>\\n';\n    } // span level renderer\n    ;\n\n    _proto.strong = function strong(text) {\n      return '<strong>' + text + '</strong>';\n    };\n\n    _proto.em = function em(text) {\n      return '<em>' + text + '</em>';\n    };\n\n    _proto.codespan = function codespan(text) {\n      return '<code>' + text + '</code>';\n    };\n\n    _proto.br = function br() {\n      return this.options.xhtml ? '<br/>' : '<br>';\n    };\n\n    _proto.del = function del(text) {\n      return '<del>' + text + '</del>';\n    };\n\n    _proto.link = function link(href, title, text) {\n      href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n\n      if (href === null) {\n        return text;\n      }\n\n      var out = '<a href=\"' + escape$1(href) + '\"';\n\n      if (title) {\n        out += ' title=\"' + title + '\"';\n      }\n\n      out += '>' + text + '</a>';\n      return out;\n    };\n\n    _proto.image = function image(href, title, text) {\n      href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n\n      if (href === null) {\n        return text;\n      }\n\n      var out = '<img src=\"' + href + '\" alt=\"' + text + '\"';\n\n      if (title) {\n        out += ' title=\"' + title + '\"';\n      }\n\n      out += this.options.xhtml ? '/>' : '>';\n      return out;\n    };\n\n    _proto.text = function text(_text) {\n      return _text;\n    };\n\n    return Renderer;\n  }();\n\n  /**\n   * TextRenderer\n   * returns only the textual part of the token\n   */\n\n  var TextRenderer_1 = /*#__PURE__*/function () {\n    function TextRenderer() {}\n\n    var _proto = TextRenderer.prototype;\n\n    // no need for block level renderers\n    _proto.strong = function strong(text) {\n      return text;\n    };\n\n    _proto.em = function em(text) {\n      return text;\n    };\n\n    _proto.codespan = function codespan(text) {\n      return text;\n    };\n\n    _proto.del = function del(text) {\n      return text;\n    };\n\n    _proto.html = function html(text) {\n      return text;\n    };\n\n    _proto.text = function text(_text) {\n      return _text;\n    };\n\n    _proto.link = function link(href, title, text) {\n      return '' + text;\n    };\n\n    _proto.image = function image(href, title, text) {\n      return '' + text;\n    };\n\n    _proto.br = function br() {\n      return '';\n    };\n\n    return TextRenderer;\n  }();\n\n  /**\n   * Slugger generates header id\n   */\n\n  var Slugger_1 = /*#__PURE__*/function () {\n    function Slugger() {\n      this.seen = {};\n    }\n\n    var _proto = Slugger.prototype;\n\n    _proto.serialize = function serialize(value) {\n      return value.toLowerCase().trim() // remove html tags\n      .replace(/<[!\\/a-z].*?>/ig, '') // remove unwanted chars\n      .replace(/[\\u2000-\\u206F\\u2E00-\\u2E7F\\\\'!\"#$%&()*+,./:;<=>?@[\\]^`{|}~]/g, '').replace(/\\s/g, '-');\n    }\n    /**\n     * Finds the next safe (unique) slug to use\n     */\n    ;\n\n    _proto.getNextSafeSlug = function getNextSafeSlug(originalSlug, isDryRun) {\n      var slug = originalSlug;\n      var occurenceAccumulator = 0;\n\n      if (this.seen.hasOwnProperty(slug)) {\n        occurenceAccumulator = this.seen[originalSlug];\n\n        do {\n          occurenceAccumulator++;\n          slug = originalSlug + '-' + occurenceAccumulator;\n        } while (this.seen.hasOwnProperty(slug));\n      }\n\n      if (!isDryRun) {\n        this.seen[originalSlug] = occurenceAccumulator;\n        this.seen[slug] = 0;\n      }\n\n      return slug;\n    }\n    /**\n     * Convert string to unique id\n     * @param {object} options\n     * @param {boolean} options.dryrun Generates the next unique slug without updating the internal accumulator.\n     */\n    ;\n\n    _proto.slug = function slug(value, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      var slug = this.serialize(value);\n      return this.getNextSafeSlug(slug, options.dryrun);\n    };\n\n    return Slugger;\n  }();\n\n  var Renderer$1 = Renderer_1;\n  var TextRenderer$1 = TextRenderer_1;\n  var Slugger$1 = Slugger_1;\n  var defaults$1 = defaults$5.exports.defaults;\n  var unescape = helpers.unescape;\n  /**\n   * Parsing & Compiling\n   */\n\n  var Parser_1 = /*#__PURE__*/function () {\n    function Parser(options) {\n      this.options = options || defaults$1;\n      this.options.renderer = this.options.renderer || new Renderer$1();\n      this.renderer = this.options.renderer;\n      this.renderer.options = this.options;\n      this.textRenderer = new TextRenderer$1();\n      this.slugger = new Slugger$1();\n    }\n    /**\n     * Static Parse Method\n     */\n\n\n    Parser.parse = function parse(tokens, options) {\n      var parser = new Parser(options);\n      return parser.parse(tokens);\n    }\n    /**\n     * Static Parse Inline Method\n     */\n    ;\n\n    Parser.parseInline = function parseInline(tokens, options) {\n      var parser = new Parser(options);\n      return parser.parseInline(tokens);\n    }\n    /**\n     * Parse Loop\n     */\n    ;\n\n    var _proto = Parser.prototype;\n\n    _proto.parse = function parse(tokens, top) {\n      if (top === void 0) {\n        top = true;\n      }\n\n      var out = '',\n          i,\n          j,\n          k,\n          l2,\n          l3,\n          row,\n          cell,\n          header,\n          body,\n          token,\n          ordered,\n          start,\n          loose,\n          itemBody,\n          item,\n          checked,\n          task,\n          checkbox,\n          ret;\n      var l = tokens.length;\n\n      for (i = 0; i < l; i++) {\n        token = tokens[i]; // Run any renderer extensions\n\n        if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {\n          ret = this.options.extensions.renderers[token.type].call(this, token);\n\n          if (ret !== false || !['space', 'hr', 'heading', 'code', 'table', 'blockquote', 'list', 'html', 'paragraph', 'text'].includes(token.type)) {\n            out += ret || '';\n            continue;\n          }\n        }\n\n        switch (token.type) {\n          case 'space':\n            {\n              continue;\n            }\n\n          case 'hr':\n            {\n              out += this.renderer.hr();\n              continue;\n            }\n\n          case 'heading':\n            {\n              out += this.renderer.heading(this.parseInline(token.tokens), token.depth, unescape(this.parseInline(token.tokens, this.textRenderer)), this.slugger);\n              continue;\n            }\n\n          case 'code':\n            {\n              out += this.renderer.code(token.text, token.lang, token.escaped);\n              continue;\n            }\n\n          case 'table':\n            {\n              header = ''; // header\n\n              cell = '';\n              l2 = token.header.length;\n\n              for (j = 0; j < l2; j++) {\n                cell += this.renderer.tablecell(this.parseInline(token.tokens.header[j]), {\n                  header: true,\n                  align: token.align[j]\n                });\n              }\n\n              header += this.renderer.tablerow(cell);\n              body = '';\n              l2 = token.cells.length;\n\n              for (j = 0; j < l2; j++) {\n                row = token.tokens.cells[j];\n                cell = '';\n                l3 = row.length;\n\n                for (k = 0; k < l3; k++) {\n                  cell += this.renderer.tablecell(this.parseInline(row[k]), {\n                    header: false,\n                    align: token.align[k]\n                  });\n                }\n\n                body += this.renderer.tablerow(cell);\n              }\n\n              out += this.renderer.table(header, body);\n              continue;\n            }\n\n          case 'blockquote':\n            {\n              body = this.parse(token.tokens);\n              out += this.renderer.blockquote(body);\n              continue;\n            }\n\n          case 'list':\n            {\n              ordered = token.ordered;\n              start = token.start;\n              loose = token.loose;\n              l2 = token.items.length;\n              body = '';\n\n              for (j = 0; j < l2; j++) {\n                item = token.items[j];\n                checked = item.checked;\n                task = item.task;\n                itemBody = '';\n\n                if (item.task) {\n                  checkbox = this.renderer.checkbox(checked);\n\n                  if (loose) {\n                    if (item.tokens.length > 0 && item.tokens[0].type === 'text') {\n                      item.tokens[0].text = checkbox + ' ' + item.tokens[0].text;\n\n                      if (item.tokens[0].tokens && item.tokens[0].tokens.length > 0 && item.tokens[0].tokens[0].type === 'text') {\n                        item.tokens[0].tokens[0].text = checkbox + ' ' + item.tokens[0].tokens[0].text;\n                      }\n                    } else {\n                      item.tokens.unshift({\n                        type: 'text',\n                        text: checkbox\n                      });\n                    }\n                  } else {\n                    itemBody += checkbox;\n                  }\n                }\n\n                itemBody += this.parse(item.tokens, loose);\n                body += this.renderer.listitem(itemBody, task, checked);\n              }\n\n              out += this.renderer.list(body, ordered, start);\n              continue;\n            }\n\n          case 'html':\n            {\n              // TODO parse inline content if parameter markdown=1\n              out += this.renderer.html(token.text);\n              continue;\n            }\n\n          case 'paragraph':\n            {\n              out += this.renderer.paragraph(this.parseInline(token.tokens));\n              continue;\n            }\n\n          case 'text':\n            {\n              body = token.tokens ? this.parseInline(token.tokens) : token.text;\n\n              while (i + 1 < l && tokens[i + 1].type === 'text') {\n                token = tokens[++i];\n                body += '\\n' + (token.tokens ? this.parseInline(token.tokens) : token.text);\n              }\n\n              out += top ? this.renderer.paragraph(body) : body;\n              continue;\n            }\n\n          default:\n            {\n              var errMsg = 'Token with \"' + token.type + '\" type was not found.';\n\n              if (this.options.silent) {\n                console.error(errMsg);\n                return;\n              } else {\n                throw new Error(errMsg);\n              }\n            }\n        }\n      }\n\n      return out;\n    }\n    /**\n     * Parse Inline Tokens\n     */\n    ;\n\n    _proto.parseInline = function parseInline(tokens, renderer) {\n      renderer = renderer || this.renderer;\n      var out = '',\n          i,\n          token,\n          ret;\n      var l = tokens.length;\n\n      for (i = 0; i < l; i++) {\n        token = tokens[i]; // Run any renderer extensions\n\n        if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {\n          ret = this.options.extensions.renderers[token.type].call(this, token);\n\n          if (ret !== false || !['escape', 'html', 'link', 'image', 'strong', 'em', 'codespan', 'br', 'del', 'text'].includes(token.type)) {\n            out += ret || '';\n            continue;\n          }\n        }\n\n        switch (token.type) {\n          case 'escape':\n            {\n              out += renderer.text(token.text);\n              break;\n            }\n\n          case 'html':\n            {\n              out += renderer.html(token.text);\n              break;\n            }\n\n          case 'link':\n            {\n              out += renderer.link(token.href, token.title, this.parseInline(token.tokens, renderer));\n              break;\n            }\n\n          case 'image':\n            {\n              out += renderer.image(token.href, token.title, token.text);\n              break;\n            }\n\n          case 'strong':\n            {\n              out += renderer.strong(this.parseInline(token.tokens, renderer));\n              break;\n            }\n\n          case 'em':\n            {\n              out += renderer.em(this.parseInline(token.tokens, renderer));\n              break;\n            }\n\n          case 'codespan':\n            {\n              out += renderer.codespan(token.text);\n              break;\n            }\n\n          case 'br':\n            {\n              out += renderer.br();\n              break;\n            }\n\n          case 'del':\n            {\n              out += renderer.del(this.parseInline(token.tokens, renderer));\n              break;\n            }\n\n          case 'text':\n            {\n              out += renderer.text(token.text);\n              break;\n            }\n\n          default:\n            {\n              var errMsg = 'Token with \"' + token.type + '\" type was not found.';\n\n              if (this.options.silent) {\n                console.error(errMsg);\n                return;\n              } else {\n                throw new Error(errMsg);\n              }\n            }\n        }\n      }\n\n      return out;\n    };\n\n    return Parser;\n  }();\n\n  var Lexer = Lexer_1;\n  var Parser = Parser_1;\n  var Tokenizer = Tokenizer_1;\n  var Renderer = Renderer_1;\n  var TextRenderer = TextRenderer_1;\n  var Slugger = Slugger_1;\n  var merge = helpers.merge,\n      checkSanitizeDeprecation = helpers.checkSanitizeDeprecation,\n      escape = helpers.escape;\n  var getDefaults = defaults$5.exports.getDefaults,\n      changeDefaults = defaults$5.exports.changeDefaults,\n      defaults = defaults$5.exports.defaults;\n  /**\n   * Marked\n   */\n\n  function marked(src, opt, callback) {\n    // throw error in case of non string input\n    if (typeof src === 'undefined' || src === null) {\n      throw new Error('marked(): input parameter is undefined or null');\n    }\n\n    if (typeof src !== 'string') {\n      throw new Error('marked(): input parameter is of type ' + Object.prototype.toString.call(src) + ', string expected');\n    }\n\n    if (typeof opt === 'function') {\n      callback = opt;\n      opt = null;\n    }\n\n    opt = merge({}, marked.defaults, opt || {});\n    checkSanitizeDeprecation(opt);\n\n    if (callback) {\n      var highlight = opt.highlight;\n      var tokens;\n\n      try {\n        tokens = Lexer.lex(src, opt);\n      } catch (e) {\n        return callback(e);\n      }\n\n      var done = function done(err) {\n        var out;\n\n        if (!err) {\n          try {\n            if (opt.walkTokens) {\n              marked.walkTokens(tokens, opt.walkTokens);\n            }\n\n            out = Parser.parse(tokens, opt);\n          } catch (e) {\n            err = e;\n          }\n        }\n\n        opt.highlight = highlight;\n        return err ? callback(err) : callback(null, out);\n      };\n\n      if (!highlight || highlight.length < 3) {\n        return done();\n      }\n\n      delete opt.highlight;\n      if (!tokens.length) return done();\n      var pending = 0;\n      marked.walkTokens(tokens, function (token) {\n        if (token.type === 'code') {\n          pending++;\n          setTimeout(function () {\n            highlight(token.text, token.lang, function (err, code) {\n              if (err) {\n                return done(err);\n              }\n\n              if (code != null && code !== token.text) {\n                token.text = code;\n                token.escaped = true;\n              }\n\n              pending--;\n\n              if (pending === 0) {\n                done();\n              }\n            });\n          }, 0);\n        }\n      });\n\n      if (pending === 0) {\n        done();\n      }\n\n      return;\n    }\n\n    try {\n      var _tokens = Lexer.lex(src, opt);\n\n      if (opt.walkTokens) {\n        marked.walkTokens(_tokens, opt.walkTokens);\n      }\n\n      return Parser.parse(_tokens, opt);\n    } catch (e) {\n      e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n\n      if (opt.silent) {\n        return '<p>An error occurred:</p><pre>' + escape(e.message + '', true) + '</pre>';\n      }\n\n      throw e;\n    }\n  }\n  /**\n   * Options\n   */\n\n\n  marked.options = marked.setOptions = function (opt) {\n    merge(marked.defaults, opt);\n    changeDefaults(marked.defaults);\n    return marked;\n  };\n\n  marked.getDefaults = getDefaults;\n  marked.defaults = defaults;\n  /**\n   * Use Extension\n   */\n\n  marked.use = function () {\n    var _this = this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var opts = merge.apply(void 0, [{}].concat(args));\n    var extensions = marked.defaults.extensions || {\n      renderers: {},\n      childTokens: {}\n    };\n    var hasExtensions;\n    args.forEach(function (pack) {\n      // ==-- Parse \"addon\" extensions --== //\n      if (pack.extensions) {\n        hasExtensions = true;\n        pack.extensions.forEach(function (ext) {\n          if (!ext.name) {\n            throw new Error('extension name required');\n          }\n\n          if (ext.renderer) {\n            // Renderer extensions\n            var prevRenderer = extensions.renderers ? extensions.renderers[ext.name] : null;\n\n            if (prevRenderer) {\n              // Replace extension with func to run new extension but fall back if false\n              extensions.renderers[ext.name] = function () {\n                for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n                  args[_key2] = arguments[_key2];\n                }\n\n                var ret = ext.renderer.apply(this, args);\n\n                if (ret === false) {\n                  ret = prevRenderer.apply(this, args);\n                }\n\n                return ret;\n              };\n            } else {\n              extensions.renderers[ext.name] = ext.renderer;\n            }\n          }\n\n          if (ext.tokenizer) {\n            // Tokenizer Extensions\n            if (!ext.level || ext.level !== 'block' && ext.level !== 'inline') {\n              throw new Error(\"extension level must be 'block' or 'inline'\");\n            }\n\n            if (extensions[ext.level]) {\n              extensions[ext.level].unshift(ext.tokenizer);\n            } else {\n              extensions[ext.level] = [ext.tokenizer];\n            }\n\n            if (ext.start) {\n              // Function to check for start of token\n              if (ext.level === 'block') {\n                if (extensions.startBlock) {\n                  extensions.startBlock.push(ext.start);\n                } else {\n                  extensions.startBlock = [ext.start];\n                }\n              } else if (ext.level === 'inline') {\n                if (extensions.startInline) {\n                  extensions.startInline.push(ext.start);\n                } else {\n                  extensions.startInline = [ext.start];\n                }\n              }\n            }\n          }\n\n          if (ext.childTokens) {\n            // Child tokens to be visited by walkTokens\n            extensions.childTokens[ext.name] = ext.childTokens;\n          }\n        });\n      } // ==-- Parse \"overwrite\" extensions --== //\n\n\n      if (pack.renderer) {\n        (function () {\n          var renderer = marked.defaults.renderer || new Renderer();\n\n          var _loop = function _loop(prop) {\n            var prevRenderer = renderer[prop]; // Replace renderer with func to run extension, but fall back if false\n\n            renderer[prop] = function () {\n              for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n                args[_key3] = arguments[_key3];\n              }\n\n              var ret = pack.renderer[prop].apply(renderer, args);\n\n              if (ret === false) {\n                ret = prevRenderer.apply(renderer, args);\n              }\n\n              return ret;\n            };\n          };\n\n          for (var prop in pack.renderer) {\n            _loop(prop);\n          }\n\n          opts.renderer = renderer;\n        })();\n      }\n\n      if (pack.tokenizer) {\n        (function () {\n          var tokenizer = marked.defaults.tokenizer || new Tokenizer();\n\n          var _loop2 = function _loop2(prop) {\n            var prevTokenizer = tokenizer[prop]; // Replace tokenizer with func to run extension, but fall back if false\n\n            tokenizer[prop] = function () {\n              for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n                args[_key4] = arguments[_key4];\n              }\n\n              var ret = pack.tokenizer[prop].apply(tokenizer, args);\n\n              if (ret === false) {\n                ret = prevTokenizer.apply(tokenizer, args);\n              }\n\n              return ret;\n            };\n          };\n\n          for (var prop in pack.tokenizer) {\n            _loop2(prop);\n          }\n\n          opts.tokenizer = tokenizer;\n        })();\n      } // ==-- Parse WalkTokens extensions --== //\n\n\n      if (pack.walkTokens) {\n        var walkTokens = marked.defaults.walkTokens;\n\n        opts.walkTokens = function (token) {\n          pack.walkTokens.call(_this, token);\n\n          if (walkTokens) {\n            walkTokens(token);\n          }\n        };\n      }\n\n      if (hasExtensions) {\n        opts.extensions = extensions;\n      }\n\n      marked.setOptions(opts);\n    });\n  };\n  /**\n   * Run callback for every token\n   */\n\n\n  marked.walkTokens = function (tokens, callback) {\n    var _loop3 = function _loop3() {\n      var token = _step.value;\n      callback(token);\n\n      switch (token.type) {\n        case 'table':\n          {\n            for (var _iterator2 = _createForOfIteratorHelperLoose(token.tokens.header), _step2; !(_step2 = _iterator2()).done;) {\n              var cell = _step2.value;\n              marked.walkTokens(cell, callback);\n            }\n\n            for (var _iterator3 = _createForOfIteratorHelperLoose(token.tokens.cells), _step3; !(_step3 = _iterator3()).done;) {\n              var row = _step3.value;\n\n              for (var _iterator4 = _createForOfIteratorHelperLoose(row), _step4; !(_step4 = _iterator4()).done;) {\n                var _cell = _step4.value;\n                marked.walkTokens(_cell, callback);\n              }\n            }\n\n            break;\n          }\n\n        case 'list':\n          {\n            marked.walkTokens(token.items, callback);\n            break;\n          }\n\n        default:\n          {\n            if (marked.defaults.extensions && marked.defaults.extensions.childTokens && marked.defaults.extensions.childTokens[token.type]) {\n              // Walk any extensions\n              marked.defaults.extensions.childTokens[token.type].forEach(function (childTokens) {\n                marked.walkTokens(token[childTokens], callback);\n              });\n            } else if (token.tokens) {\n              marked.walkTokens(token.tokens, callback);\n            }\n          }\n      }\n    };\n\n    for (var _iterator = _createForOfIteratorHelperLoose(tokens), _step; !(_step = _iterator()).done;) {\n      _loop3();\n    }\n  };\n  /**\n   * Parse Inline\n   */\n\n\n  marked.parseInline = function (src, opt) {\n    // throw error in case of non string input\n    if (typeof src === 'undefined' || src === null) {\n      throw new Error('marked.parseInline(): input parameter is undefined or null');\n    }\n\n    if (typeof src !== 'string') {\n      throw new Error('marked.parseInline(): input parameter is of type ' + Object.prototype.toString.call(src) + ', string expected');\n    }\n\n    opt = merge({}, marked.defaults, opt || {});\n    checkSanitizeDeprecation(opt);\n\n    try {\n      var tokens = Lexer.lexInline(src, opt);\n\n      if (opt.walkTokens) {\n        marked.walkTokens(tokens, opt.walkTokens);\n      }\n\n      return Parser.parseInline(tokens, opt);\n    } catch (e) {\n      e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n\n      if (opt.silent) {\n        return '<p>An error occurred:</p><pre>' + escape(e.message + '', true) + '</pre>';\n      }\n\n      throw e;\n    }\n  };\n  /**\n   * Expose\n   */\n\n\n  marked.Parser = Parser;\n  marked.parser = Parser.parse;\n  marked.Renderer = Renderer;\n  marked.TextRenderer = TextRenderer;\n  marked.Lexer = Lexer;\n  marked.lexer = Lexer.lex;\n  marked.Tokenizer = Tokenizer;\n  marked.Slugger = Slugger;\n  marked.parse = marked;\n  var marked_1 = marked;\n\n  return marked_1;\n\n})));\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}