{"ast":null,"code":"import BigNumber from 'bignumber.js';\nimport { getCakeAddress } from 'utils/addressHelpers';\nimport { SNAPSHOT_HUB_API, SNAPSHOT_VOTING_API } from 'config/constants/endpoints';\nimport { BIG_ZERO } from 'utils/bigNumber';\nimport { ProposalType } from 'state/types';\nimport { simpleRpcProvider } from 'utils/providers';\nimport { ADMIN_ADDRESS, PANCAKE_SPACE, SNAPSHOT_VERSION } from './config';\nexport const isCoreProposal = proposal => {\n  return proposal.author.toLowerCase() === ADMIN_ADDRESS.toLowerCase();\n};\nexport const filterProposalsByType = (proposals, proposalType) => {\n  switch (proposalType) {\n    case ProposalType.COMMUNITY:\n      return proposals.filter(proposal => !isCoreProposal(proposal));\n    case ProposalType.CORE:\n      return proposals.filter(proposal => isCoreProposal(proposal));\n    case ProposalType.ALL:\n    default:\n      return proposals;\n  }\n};\nexport const filterProposalsByState = (proposals, state) => {\n  return proposals.filter(proposal => proposal.state === state);\n};\n/**\r\n * Generates metadata required by snapshot to validate payload\r\n */\nexport const generateMetaData = () => {\n  return {\n    plugins: {},\n    network: 56,\n    strategies: [{\n      name: 'cake',\n      params: {\n        symbol: 'CAKE',\n        address: getCakeAddress(),\n        decimals: 18\n      }\n    }]\n  };\n};\n\n/**\r\n * Returns data that is required on all snapshot payloads\r\n */\nexport const generatePayloadData = () => {\n  return {\n    version: SNAPSHOT_VERSION,\n    timestamp: (Date.now() / 1e3).toFixed(),\n    space: PANCAKE_SPACE\n  };\n};\n\n/**\r\n * General function to send commands to the snapshot api\r\n */\nexport const sendSnaphotData = async message => {\n  const response = await fetch(SNAPSHOT_HUB_API, {\n    method: 'post',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(message)\n  });\n  if (!response.ok) {\n    const error = await response.json();\n    throw new Error(error === null || error === void 0 ? void 0 : error.error_description);\n  }\n  const data = await response.json();\n  return data;\n};\nexport const getVotingPower = async (account, poolAddresses, block) => {\n  const blockNumber = block || (await simpleRpcProvider.getBlockNumber());\n  const response = await fetch(`${SNAPSHOT_VOTING_API}/power`, {\n    method: 'post',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      address: account,\n      block: blockNumber,\n      poolAddresses\n    })\n  });\n  const data = await response.json();\n  return data.data;\n};\nexport const calculateVoteResults = votes => {\n  return votes.reduce((accum, vote) => {\n    const choiceText = vote.proposal.choices[vote.choice - 1];\n    return {\n      ...accum,\n      [choiceText]: accum[choiceText] ? [...accum[choiceText], vote] : [vote]\n    };\n  }, {});\n};\nexport const getTotalFromVotes = votes => {\n  return votes.reduce((accum, vote) => {\n    var _vote$metadata;\n    const power = new BigNumber((_vote$metadata = vote.metadata) === null || _vote$metadata === void 0 ? void 0 : _vote$metadata.votingPower);\n    return accum.plus(power);\n  }, BIG_ZERO);\n};","map":{"version":3,"names":["BigNumber","getCakeAddress","SNAPSHOT_HUB_API","SNAPSHOT_VOTING_API","BIG_ZERO","ProposalType","simpleRpcProvider","ADMIN_ADDRESS","PANCAKE_SPACE","SNAPSHOT_VERSION","isCoreProposal","proposal","author","toLowerCase","filterProposalsByType","proposals","proposalType","COMMUNITY","filter","CORE","ALL","filterProposalsByState","state","generateMetaData","plugins","network","strategies","name","params","symbol","address","decimals","generatePayloadData","version","timestamp","Date","now","toFixed","space","sendSnaphotData","message","response","fetch","method","headers","Accept","body","JSON","stringify","ok","error","json","Error","error_description","data","getVotingPower","account","poolAddresses","block","blockNumber","getBlockNumber","calculateVoteResults","votes","reduce","accum","vote","choiceText","choices","choice","getTotalFromVotes","_vote$metadata","power","metadata","votingPower","plus"],"sources":["C:/Users/frkul/Documents/swapUI_pancake-frontend/src/views/Voting/helpers.ts"],"sourcesContent":["import BigNumber from 'bignumber.js'\r\nimport { getCakeAddress } from 'utils/addressHelpers'\r\nimport { SNAPSHOT_HUB_API, SNAPSHOT_VOTING_API } from 'config/constants/endpoints'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\nimport { Proposal, ProposalState, ProposalType, Vote } from 'state/types'\r\nimport { simpleRpcProvider } from 'utils/providers'\r\nimport { ADMIN_ADDRESS, PANCAKE_SPACE, SNAPSHOT_VERSION } from './config'\r\n\r\nexport const isCoreProposal = (proposal: Proposal) => {\r\n  return proposal.author.toLowerCase() === ADMIN_ADDRESS.toLowerCase()\r\n}\r\n\r\nexport const filterProposalsByType = (proposals: Proposal[], proposalType: ProposalType) => {\r\n  switch (proposalType) {\r\n    case ProposalType.COMMUNITY:\r\n      return proposals.filter((proposal) => !isCoreProposal(proposal))\r\n    case ProposalType.CORE:\r\n      return proposals.filter((proposal) => isCoreProposal(proposal))\r\n    case ProposalType.ALL:\r\n    default:\r\n      return proposals\r\n  }\r\n}\r\n\r\nexport const filterProposalsByState = (proposals: Proposal[], state: ProposalState) => {\r\n  return proposals.filter((proposal) => proposal.state === state)\r\n}\r\n\r\nexport interface Message {\r\n  address: string\r\n  msg: string\r\n  sig: string\r\n}\r\n\r\n/**\r\n * Generates metadata required by snapshot to validate payload\r\n */\r\nexport const generateMetaData = () => {\r\n  return {\r\n    plugins: {},\r\n    network: 56,\r\n    strategies: [{ name: 'cake', params: { symbol: 'CAKE', address: getCakeAddress(), decimals: 18 } }],\r\n  }\r\n}\r\n\r\n/**\r\n * Returns data that is required on all snapshot payloads\r\n */\r\nexport const generatePayloadData = () => {\r\n  return {\r\n    version: SNAPSHOT_VERSION,\r\n    timestamp: (Date.now() / 1e3).toFixed(),\r\n    space: PANCAKE_SPACE,\r\n  }\r\n}\r\n\r\n/**\r\n * General function to send commands to the snapshot api\r\n */\r\nexport const sendSnaphotData = async (message: Message) => {\r\n  const response = await fetch(SNAPSHOT_HUB_API, {\r\n    method: 'post',\r\n    headers: {\r\n      Accept: 'application/json',\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(message),\r\n  })\r\n\r\n  if (!response.ok) {\r\n    const error = await response.json()\r\n    throw new Error(error?.error_description)\r\n  }\r\n\r\n  const data = await response.json()\r\n  return data\r\n}\r\n\r\nexport const getVotingPower = async (account: string, poolAddresses: string[], block?: number) => {\r\n  const blockNumber = block || (await simpleRpcProvider.getBlockNumber())\r\n  const response = await fetch(`${SNAPSHOT_VOTING_API}/power`, {\r\n    method: 'post',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({\r\n      address: account,\r\n      block: blockNumber,\r\n      poolAddresses,\r\n    }),\r\n  })\r\n  const data = await response.json()\r\n  return data.data\r\n}\r\n\r\nexport const calculateVoteResults = (votes: Vote[]): { [key: string]: Vote[] } => {\r\n  return votes.reduce((accum, vote) => {\r\n    const choiceText = vote.proposal.choices[vote.choice - 1]\r\n\r\n    return {\r\n      ...accum,\r\n      [choiceText]: accum[choiceText] ? [...accum[choiceText], vote] : [vote],\r\n    }\r\n  }, {})\r\n}\r\n\r\nexport const getTotalFromVotes = (votes: Vote[]) => {\r\n  return votes.reduce((accum, vote) => {\r\n    const power = new BigNumber(vote.metadata?.votingPower)\r\n    return accum.plus(power)\r\n  }, BIG_ZERO)\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}