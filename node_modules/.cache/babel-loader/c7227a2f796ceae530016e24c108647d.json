{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Devrim\\\\Documents\\\\FRANKswapUIforProspBlast\\\\src\\\\views\\\\Ifos\\\\components\\\\IfoFoldableCard\\\\IfoPoolCard\\\\IfoCardTokens.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Text, Flex, Box, CheckmarkCircleIcon, HelpIcon, useTooltip, Button, AutoRenewIcon, BunnyPlaceholderIcon } from '@pancakeswap/uikit';\nimport { useWeb3React } from '@web3-react/core';\nimport tokens from 'config/constants/tokens';\nimport { useTranslation } from 'contexts/Localization';\nimport { getBalanceNumber } from 'utils/formatBalance';\nimport { TokenImage, TokenPairImage } from 'components/TokenImage';\nimport { EnableStatus } from '../types';\nimport PercentageOfTotal from './PercentageOfTotal';\nimport { SkeletonCardTokens } from './Skeletons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst TokenSection = ({\n  primaryToken,\n  secondaryToken,\n  children,\n  ...props\n}) => {\n  const renderTokenComponent = () => {\n    if (!primaryToken) {\n      return /*#__PURE__*/_jsxDEV(BunnyPlaceholderIcon, {\n        width: 32,\n        mr: \"16px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 14\n      }, this);\n    }\n\n    if (primaryToken && secondaryToken) {\n      return /*#__PURE__*/_jsxDEV(TokenPairImage, {\n        variant: \"inverted\",\n        primaryToken: primaryToken,\n        height: 32,\n        width: 32,\n        secondaryToken: secondaryToken,\n        mr: \"16px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(TokenImage, {\n      token: primaryToken,\n      height: 32,\n      width: 32,\n      mr: \"16px\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 12\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Flex, { ...props,\n    children: [renderTokenComponent(), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_c = TokenSection;\n\nconst CakeBnbTokenSection = props => {\n  return /*#__PURE__*/_jsxDEV(TokenSection, {\n    primaryToken: tokens.cake,\n    secondaryToken: tokens.wbnb,\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 10\n  }, this);\n};\n\n_c2 = CakeBnbTokenSection;\n\nconst Label = props => /*#__PURE__*/_jsxDEV(Text, {\n  bold: true,\n  fontSize: \"12px\",\n  color: \"secondary\",\n  textTransform: \"uppercase\",\n  ...props\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 64,\n  columnNumber: 26\n}, this);\n\n_c3 = Label;\n\nconst Value = props => /*#__PURE__*/_jsxDEV(Text, {\n  bold: true,\n  fontSize: \"20px\",\n  style: {\n    wordBreak: 'break-all'\n  },\n  ...props\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 66,\n  columnNumber: 26\n}, this);\n\n_c4 = Value;\n\nconst IfoCardTokens = ({\n  poolId,\n  ifo,\n  publicIfoData,\n  walletIfoData,\n  hasProfile,\n  isLoading,\n  onApprove,\n  enableStatus\n}) => {\n  _s();\n\n  const {\n    account\n  } = useWeb3React();\n  const {\n    t\n  } = useTranslation();\n  const {\n    targetRef,\n    tooltip,\n    tooltipVisible\n  } = useTooltip(t('Sorry, you didn’t contribute enough LP tokens to meet the minimum threshold. You didn’t buy anything in this sale, but you can still reclaim your LP tokens.'), {\n    placement: 'bottom'\n  });\n  const publicPoolCharacteristics = publicIfoData[poolId];\n  const userPoolCharacteristics = walletIfoData[poolId];\n  const {\n    currency,\n    token\n  } = ifo;\n  const {\n    hasClaimed\n  } = userPoolCharacteristics;\n  const distributionRatio = ifo[poolId].distributionRatio * 100;\n\n  const renderTokenSection = () => {\n    if (isLoading) {\n      return /*#__PURE__*/_jsxDEV(SkeletonCardTokens, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 14\n      }, this);\n    }\n\n    if (account && !hasProfile) {\n      if (publicIfoData.status === 'finished') {\n        return /*#__PURE__*/_jsxDEV(Text, {\n          textAlign: \"center\",\n          children: t('Activate PancakeSwap Profile to take part in next IFO‘s!')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 16\n        }, this);\n      }\n\n      return /*#__PURE__*/_jsxDEV(Text, {\n        textAlign: \"center\",\n        children: t('You need an active PancakeSwap Profile to take part in an IFO!')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 14\n      }, this);\n    }\n\n    if (publicIfoData.status === 'coming_soon') {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(TokenSection, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: t('On sale')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Value, {\n            children: ifo[poolId].saleAmount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"14px\",\n          color: \"textSubtle\",\n          pl: \"48px\",\n          children: t('%ratio%% of total sale', {\n            ratio: distributionRatio\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), enableStatus !== EnableStatus.ENABLED && account && /*#__PURE__*/_jsxDEV(Button, {\n          width: \"100%\",\n          mt: \"16px\",\n          onClick: onApprove,\n          isLoading: enableStatus === EnableStatus.IS_ENABLING,\n          endIcon: enableStatus === EnableStatus.IS_ENABLING ? /*#__PURE__*/_jsxDEV(AutoRenewIcon, {\n            spin: true,\n            color: \"currentColor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 68\n          }, this) : null,\n          children: t('Enable')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true);\n    }\n\n    if (publicIfoData.status === 'live') {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(CakeBnbTokenSection, {\n          mb: \"24px\",\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: t('Your %symbol% committed', {\n              symbol: currency.symbol\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Value, {\n            children: getBalanceNumber(userPoolCharacteristics.amountTokenCommittedInLP, currency.decimals)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(PercentageOfTotal, {\n            userAmount: userPoolCharacteristics.amountTokenCommittedInLP,\n            totalAmount: publicPoolCharacteristics.totalAmountPool\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TokenSection, {\n          primaryToken: ifo.token,\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: t('%symbol% to receive', {\n              symbol: token.symbol\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Value, {\n            children: getBalanceNumber(userPoolCharacteristics.offeringAmountInToken, token.decimals)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true);\n    }\n\n    if (publicIfoData.status === 'finished') {\n      return userPoolCharacteristics.amountTokenCommittedInLP.isEqualTo(0) ? /*#__PURE__*/_jsxDEV(Flex, {\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(BunnyPlaceholderIcon, {\n          width: 80,\n          mb: \"16px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          children: t('You didn’t participate in this sale!')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(CakeBnbTokenSection, {\n          mb: \"24px\",\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: t(hasClaimed ? 'Your %symbol% RECLAIMED' : 'Your %symbol% TO RECLAIM', {\n              symbol: currency.symbol\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Flex, {\n            alignItems: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(Value, {\n              children: getBalanceNumber(userPoolCharacteristics.refundingAmountInLP, currency.decimals)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 15\n            }, this), hasClaimed && /*#__PURE__*/_jsxDEV(CheckmarkCircleIcon, {\n              color: \"success\",\n              ml: \"8px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 30\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(PercentageOfTotal, {\n            userAmount: userPoolCharacteristics.amountTokenCommittedInLP,\n            totalAmount: publicPoolCharacteristics.totalAmountPool\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TokenSection, {\n          primaryToken: ifo.token,\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: [\" \", t(hasClaimed ? '%symbol% received' : '%symbol% to receive', {\n              symbol: token.symbol\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Flex, {\n            alignItems: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(Value, {\n              children: getBalanceNumber(userPoolCharacteristics.offeringAmountInToken, token.decimals)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 15\n            }, this), !hasClaimed && userPoolCharacteristics.offeringAmountInToken.isEqualTo(0) && /*#__PURE__*/_jsxDEV(\"div\", {\n              ref: targetRef,\n              style: {\n                display: 'flex',\n                marginLeft: '8px'\n              },\n              children: /*#__PURE__*/_jsxDEV(HelpIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 17\n            }, this), hasClaimed && /*#__PURE__*/_jsxDEV(CheckmarkCircleIcon, {\n              color: \"success\",\n              ml: \"8px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 30\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true);\n    }\n\n    return null;\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    pb: \"24px\",\n    children: [tooltipVisible && tooltip, renderTokenSection()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 196,\n    columnNumber: 5\n  }, this);\n};\n\n_s(IfoCardTokens, \"FN0eu8QX6iHbx6Qr9muq+WVK/18=\", false, function () {\n  return [useWeb3React, useTranslation, useTooltip];\n});\n\n_c5 = IfoCardTokens;\nexport default IfoCardTokens;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"TokenSection\");\n$RefreshReg$(_c2, \"CakeBnbTokenSection\");\n$RefreshReg$(_c3, \"Label\");\n$RefreshReg$(_c4, \"Value\");\n$RefreshReg$(_c5, \"IfoCardTokens\");","map":{"version":3,"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/views/Ifos/components/IfoFoldableCard/IfoPoolCard/IfoCardTokens.tsx"],"names":["React","Text","Flex","Box","CheckmarkCircleIcon","HelpIcon","useTooltip","Button","AutoRenewIcon","BunnyPlaceholderIcon","useWeb3React","tokens","useTranslation","getBalanceNumber","TokenImage","TokenPairImage","EnableStatus","PercentageOfTotal","SkeletonCardTokens","TokenSection","primaryToken","secondaryToken","children","props","renderTokenComponent","CakeBnbTokenSection","cake","wbnb","Label","Value","wordBreak","IfoCardTokens","poolId","ifo","publicIfoData","walletIfoData","hasProfile","isLoading","onApprove","enableStatus","account","t","targetRef","tooltip","tooltipVisible","placement","publicPoolCharacteristics","userPoolCharacteristics","currency","token","hasClaimed","distributionRatio","renderTokenSection","status","saleAmount","ratio","ENABLED","IS_ENABLING","symbol","amountTokenCommittedInLP","decimals","totalAmountPool","offeringAmountInToken","isEqualTo","refundingAmountInLP","display","marginLeft"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport {\r\n  Text,\r\n  Flex,\r\n  Box,\r\n  CheckmarkCircleIcon,\r\n  FlexProps,\r\n  HelpIcon,\r\n  useTooltip,\r\n  Button,\r\n  AutoRenewIcon,\r\n  BunnyPlaceholderIcon,\r\n} from '@pancakeswap/uikit'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { Ifo, PoolIds, Token } from 'config/constants/types'\r\nimport tokens from 'config/constants/tokens'\r\nimport { PublicIfoData, WalletIfoData } from 'views/Ifos/types'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { TokenImage, TokenPairImage } from 'components/TokenImage'\r\nimport { EnableStatus } from '../types'\r\nimport PercentageOfTotal from './PercentageOfTotal'\r\nimport { SkeletonCardTokens } from './Skeletons'\r\n\r\ninterface TokenSectionProps extends FlexProps {\r\n  primaryToken?: Token\r\n  secondaryToken?: Token\r\n}\r\n\r\nconst TokenSection: React.FC<TokenSectionProps> = ({ primaryToken, secondaryToken, children, ...props }) => {\r\n  const renderTokenComponent = () => {\r\n    if (!primaryToken) {\r\n      return <BunnyPlaceholderIcon width={32} mr=\"16px\" />\r\n    }\r\n\r\n    if (primaryToken && secondaryToken) {\r\n      return (\r\n        <TokenPairImage\r\n          variant=\"inverted\"\r\n          primaryToken={primaryToken}\r\n          height={32}\r\n          width={32}\r\n          secondaryToken={secondaryToken}\r\n          mr=\"16px\"\r\n        />\r\n      )\r\n    }\r\n\r\n    return <TokenImage token={primaryToken} height={32} width={32} mr=\"16px\" />\r\n  }\r\n\r\n  return (\r\n    <Flex {...props}>\r\n      {renderTokenComponent()}\r\n      <div>{children}</div>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nconst CakeBnbTokenSection: React.FC<TokenSectionProps> = (props) => {\r\n  return <TokenSection primaryToken={tokens.cake} secondaryToken={tokens.wbnb} {...props} />\r\n}\r\n\r\nconst Label = (props) => <Text bold fontSize=\"12px\" color=\"secondary\" textTransform=\"uppercase\" {...props} />\r\n\r\nconst Value = (props) => <Text bold fontSize=\"20px\" style={{ wordBreak: 'break-all' }} {...props} />\r\n\r\ninterface IfoCardTokensProps {\r\n  poolId: PoolIds\r\n  ifo: Ifo\r\n  publicIfoData: PublicIfoData\r\n  walletIfoData: WalletIfoData\r\n  hasProfile: boolean\r\n  isLoading: boolean\r\n  onApprove: () => Promise<any>\r\n  enableStatus: EnableStatus\r\n}\r\n\r\nconst IfoCardTokens: React.FC<IfoCardTokensProps> = ({\r\n  poolId,\r\n  ifo,\r\n  publicIfoData,\r\n  walletIfoData,\r\n  hasProfile,\r\n  isLoading,\r\n  onApprove,\r\n  enableStatus,\r\n}) => {\r\n  const { account } = useWeb3React()\r\n  const { t } = useTranslation()\r\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\r\n    t(\r\n      'Sorry, you didn’t contribute enough LP tokens to meet the minimum threshold. You didn’t buy anything in this sale, but you can still reclaim your LP tokens.',\r\n    ),\r\n    { placement: 'bottom' },\r\n  )\r\n\r\n  const publicPoolCharacteristics = publicIfoData[poolId]\r\n  const userPoolCharacteristics = walletIfoData[poolId]\r\n\r\n  const { currency, token } = ifo\r\n  const { hasClaimed } = userPoolCharacteristics\r\n  const distributionRatio = ifo[poolId].distributionRatio * 100\r\n\r\n  const renderTokenSection = () => {\r\n    if (isLoading) {\r\n      return <SkeletonCardTokens />\r\n    }\r\n    if (account && !hasProfile) {\r\n      if (publicIfoData.status === 'finished') {\r\n        return <Text textAlign=\"center\">{t('Activate PancakeSwap Profile to take part in next IFO‘s!')}</Text>\r\n      }\r\n      return <Text textAlign=\"center\">{t('You need an active PancakeSwap Profile to take part in an IFO!')}</Text>\r\n    }\r\n    if (publicIfoData.status === 'coming_soon') {\r\n      return (\r\n        <>\r\n          <TokenSection>\r\n            <Label>{t('On sale')}</Label>\r\n            <Value>{ifo[poolId].saleAmount}</Value>\r\n          </TokenSection>\r\n          <Text fontSize=\"14px\" color=\"textSubtle\" pl=\"48px\">\r\n            {t('%ratio%% of total sale', { ratio: distributionRatio })}\r\n          </Text>\r\n          {enableStatus !== EnableStatus.ENABLED && account && (\r\n            <Button\r\n              width=\"100%\"\r\n              mt=\"16px\"\r\n              onClick={onApprove}\r\n              isLoading={enableStatus === EnableStatus.IS_ENABLING}\r\n              endIcon={enableStatus === EnableStatus.IS_ENABLING ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\r\n            >\r\n              {t('Enable')}\r\n            </Button>\r\n          )}\r\n        </>\r\n      )\r\n    }\r\n    if (publicIfoData.status === 'live') {\r\n      return (\r\n        <>\r\n          <CakeBnbTokenSection mb=\"24px\">\r\n            <Label>{t('Your %symbol% committed', { symbol: currency.symbol })}</Label>\r\n            <Value>{getBalanceNumber(userPoolCharacteristics.amountTokenCommittedInLP, currency.decimals)}</Value>\r\n            <PercentageOfTotal\r\n              userAmount={userPoolCharacteristics.amountTokenCommittedInLP}\r\n              totalAmount={publicPoolCharacteristics.totalAmountPool}\r\n            />\r\n          </CakeBnbTokenSection>\r\n          <TokenSection primaryToken={ifo.token}>\r\n            <Label>{t('%symbol% to receive', { symbol: token.symbol })}</Label>\r\n            <Value>{getBalanceNumber(userPoolCharacteristics.offeringAmountInToken, token.decimals)}</Value>\r\n          </TokenSection>\r\n        </>\r\n      )\r\n    }\r\n    if (publicIfoData.status === 'finished') {\r\n      return userPoolCharacteristics.amountTokenCommittedInLP.isEqualTo(0) ? (\r\n        <Flex flexDirection=\"column\" alignItems=\"center\">\r\n          <BunnyPlaceholderIcon width={80} mb=\"16px\" />\r\n          <Text>{t('You didn’t participate in this sale!')}</Text>\r\n        </Flex>\r\n      ) : (\r\n        <>\r\n          <CakeBnbTokenSection mb=\"24px\">\r\n            <Label>\r\n              {t(hasClaimed ? 'Your %symbol% RECLAIMED' : 'Your %symbol% TO RECLAIM', { symbol: currency.symbol })}\r\n            </Label>\r\n            <Flex alignItems=\"center\">\r\n              <Value>{getBalanceNumber(userPoolCharacteristics.refundingAmountInLP, currency.decimals)}</Value>\r\n              {hasClaimed && <CheckmarkCircleIcon color=\"success\" ml=\"8px\" />}\r\n            </Flex>\r\n            <PercentageOfTotal\r\n              userAmount={userPoolCharacteristics.amountTokenCommittedInLP}\r\n              totalAmount={publicPoolCharacteristics.totalAmountPool}\r\n            />\r\n          </CakeBnbTokenSection>\r\n          <TokenSection primaryToken={ifo.token}>\r\n            <Label> {t(hasClaimed ? '%symbol% received' : '%symbol% to receive', { symbol: token.symbol })}</Label>\r\n            <Flex alignItems=\"center\">\r\n              <Value>{getBalanceNumber(userPoolCharacteristics.offeringAmountInToken, token.decimals)}</Value>\r\n              {!hasClaimed && userPoolCharacteristics.offeringAmountInToken.isEqualTo(0) && (\r\n                <div ref={targetRef} style={{ display: 'flex', marginLeft: '8px' }}>\r\n                  <HelpIcon />\r\n                </div>\r\n              )}\r\n              {hasClaimed && <CheckmarkCircleIcon color=\"success\" ml=\"8px\" />}\r\n            </Flex>\r\n          </TokenSection>\r\n        </>\r\n      )\r\n    }\r\n    return null\r\n  }\r\n  return (\r\n    <Box pb=\"24px\">\r\n      {tooltipVisible && tooltip}\r\n      {renderTokenSection()}\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default IfoCardTokens\r\n"]},"metadata":{},"sourceType":"module"}