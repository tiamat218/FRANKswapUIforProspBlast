{"ast":null,"code":"import{createReducer}from'@reduxjs/toolkit';import{Field,replaceSwapState,selectCurrency,setRecipient,switchCurrencies,typeInput}from'./actions';const initialState={independentField:Field.INPUT,typedValue:'',[Field.INPUT]:{currencyId:''},[Field.OUTPUT]:{currencyId:''},recipient:null};export default createReducer(initialState,builder=>builder.addCase(replaceSwapState,(state,_ref)=>{let{payload:{typedValue,recipient,field,inputCurrencyId,outputCurrencyId}}=_ref;return{[Field.INPUT]:{currencyId:inputCurrencyId},[Field.OUTPUT]:{currencyId:outputCurrencyId},independentField:field,typedValue,recipient};}).addCase(selectCurrency,(state,_ref2)=>{let{payload:{currencyId,field}}=_ref2;const otherField=field===Field.INPUT?Field.OUTPUT:Field.INPUT;if(currencyId===state[otherField].currencyId){// the case where we have to swap the order\nreturn{...state,independentField:state.independentField===Field.INPUT?Field.OUTPUT:Field.INPUT,[field]:{currencyId},[otherField]:{currencyId:state[field].currencyId}};}// the normal case\nreturn{...state,[field]:{currencyId}};}).addCase(switchCurrencies,state=>{return{...state,independentField:state.independentField===Field.INPUT?Field.OUTPUT:Field.INPUT,[Field.INPUT]:{currencyId:state[Field.OUTPUT].currencyId},[Field.OUTPUT]:{currencyId:state[Field.INPUT].currencyId}};}).addCase(typeInput,(state,_ref3)=>{let{payload:{field,typedValue}}=_ref3;return{...state,independentField:field,typedValue};}).addCase(setRecipient,(state,_ref4)=>{let{payload:{recipient}}=_ref4;state.recipient=recipient;}));","map":{"version":3,"names":["createReducer","Field","replaceSwapState","selectCurrency","setRecipient","switchCurrencies","typeInput","initialState","independentField","INPUT","typedValue","currencyId","OUTPUT","recipient","builder","addCase","state","_ref","payload","field","inputCurrencyId","outputCurrencyId","_ref2","otherField","_ref3","_ref4"],"sources":["C:/Users/frkul/Documents/swapUI_pancake-frontend/src/state/swap/reducer.ts"],"sourcesContent":["import { createReducer } from '@reduxjs/toolkit'\r\nimport { Field, replaceSwapState, selectCurrency, setRecipient, switchCurrencies, typeInput } from './actions'\r\n\r\nexport interface SwapState {\r\n  readonly independentField: Field\r\n  readonly typedValue: string\r\n  readonly [Field.INPUT]: {\r\n    readonly currencyId: string | undefined\r\n  }\r\n  readonly [Field.OUTPUT]: {\r\n    readonly currencyId: string | undefined\r\n  }\r\n  // the typed recipient address or ENS name, or null if swap should go to sender\r\n  readonly recipient: string | null\r\n}\r\n\r\nconst initialState: SwapState = {\r\n  independentField: Field.INPUT,\r\n  typedValue: '',\r\n  [Field.INPUT]: {\r\n    currencyId: '',\r\n  },\r\n  [Field.OUTPUT]: {\r\n    currencyId: '',\r\n  },\r\n  recipient: null,\r\n}\r\n\r\nexport default createReducer<SwapState>(initialState, (builder) =>\r\n  builder\r\n    .addCase(\r\n      replaceSwapState,\r\n      (state, { payload: { typedValue, recipient, field, inputCurrencyId, outputCurrencyId } }) => {\r\n        return {\r\n          [Field.INPUT]: {\r\n            currencyId: inputCurrencyId,\r\n          },\r\n          [Field.OUTPUT]: {\r\n            currencyId: outputCurrencyId,\r\n          },\r\n          independentField: field,\r\n          typedValue,\r\n          recipient,\r\n        }\r\n      },\r\n    )\r\n    .addCase(selectCurrency, (state, { payload: { currencyId, field } }) => {\r\n      const otherField = field === Field.INPUT ? Field.OUTPUT : Field.INPUT\r\n      if (currencyId === state[otherField].currencyId) {\r\n        // the case where we have to swap the order\r\n        return {\r\n          ...state,\r\n          independentField: state.independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT,\r\n          [field]: { currencyId },\r\n          [otherField]: { currencyId: state[field].currencyId },\r\n        }\r\n      }\r\n      // the normal case\r\n      return {\r\n        ...state,\r\n        [field]: { currencyId },\r\n      }\r\n    })\r\n    .addCase(switchCurrencies, (state) => {\r\n      return {\r\n        ...state,\r\n        independentField: state.independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT,\r\n        [Field.INPUT]: { currencyId: state[Field.OUTPUT].currencyId },\r\n        [Field.OUTPUT]: { currencyId: state[Field.INPUT].currencyId },\r\n      }\r\n    })\r\n    .addCase(typeInput, (state, { payload: { field, typedValue } }) => {\r\n      return {\r\n        ...state,\r\n        independentField: field,\r\n        typedValue,\r\n      }\r\n    })\r\n    .addCase(setRecipient, (state, { payload: { recipient } }) => {\r\n      state.recipient = recipient\r\n    }),\r\n)\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}