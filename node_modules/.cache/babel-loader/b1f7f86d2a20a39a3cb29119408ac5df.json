{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Devrim\\\\Documents\\\\FRANKswapUIforProspBlast\\\\src\\\\views\\\\AddLiquidity\\\\PoolPriceBar.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Text } from '@pancakeswap/uikit';\nimport { useTranslation } from 'contexts/Localization';\nimport { AutoColumn } from '../../components/Layout/Column';\nimport { AutoRow } from '../../components/Layout/Row';\nimport { ONE_BIPS } from '../../config/constants';\nimport { Field } from '../../state/mint/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PoolPriceBar({\n  currencies,\n  noLiquidity,\n  poolTokenPercentage,\n  price\n}) {\n  _s();\n\n  var _price$toSignificant, _currencies$Field$CUR, _currencies$Field$CUR2, _currencies$Field$CUR3, _currencies$Field$CUR4, _price$invert$toSigni, _price$invert, _currencies$Field$CUR5, _currencies$Field$CUR6, _currencies$Field$CUR7, _currencies$Field$CUR8, _ref;\n\n  const {\n    t\n  } = useTranslation();\n  return /*#__PURE__*/_jsxDEV(AutoColumn, {\n    gap: \"md\",\n    children: /*#__PURE__*/_jsxDEV(AutoRow, {\n      justify: \"space-around\",\n      gap: \"4px\",\n      children: [/*#__PURE__*/_jsxDEV(AutoColumn, {\n        justify: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          children: (_price$toSignificant = price === null || price === void 0 ? void 0 : price.toSignificant(6)) !== null && _price$toSignificant !== void 0 ? _price$toSignificant : '-'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"14px\",\n          pt: 1,\n          children: t('%assetA% per %assetB%', {\n            assetA: (_currencies$Field$CUR = (_currencies$Field$CUR2 = currencies[Field.CURRENCY_B]) === null || _currencies$Field$CUR2 === void 0 ? void 0 : _currencies$Field$CUR2.symbol) !== null && _currencies$Field$CUR !== void 0 ? _currencies$Field$CUR : '',\n            assetB: (_currencies$Field$CUR3 = (_currencies$Field$CUR4 = currencies[Field.CURRENCY_A]) === null || _currencies$Field$CUR4 === void 0 ? void 0 : _currencies$Field$CUR4.symbol) !== null && _currencies$Field$CUR3 !== void 0 ? _currencies$Field$CUR3 : ''\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AutoColumn, {\n        justify: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          children: (_price$invert$toSigni = price === null || price === void 0 ? void 0 : (_price$invert = price.invert()) === null || _price$invert === void 0 ? void 0 : _price$invert.toSignificant(6)) !== null && _price$invert$toSigni !== void 0 ? _price$invert$toSigni : '-'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"14px\",\n          pt: 1,\n          children: t('%assetA% per %assetB%', {\n            assetA: (_currencies$Field$CUR5 = (_currencies$Field$CUR6 = currencies[Field.CURRENCY_A]) === null || _currencies$Field$CUR6 === void 0 ? void 0 : _currencies$Field$CUR6.symbol) !== null && _currencies$Field$CUR5 !== void 0 ? _currencies$Field$CUR5 : '',\n            assetB: (_currencies$Field$CUR7 = (_currencies$Field$CUR8 = currencies[Field.CURRENCY_B]) === null || _currencies$Field$CUR8 === void 0 ? void 0 : _currencies$Field$CUR8.symbol) !== null && _currencies$Field$CUR7 !== void 0 ? _currencies$Field$CUR7 : ''\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AutoColumn, {\n        justify: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          children: [noLiquidity && price ? '100' : (_ref = (poolTokenPercentage === null || poolTokenPercentage === void 0 ? void 0 : poolTokenPercentage.lessThan(ONE_BIPS)) ? '<0.01' : poolTokenPercentage === null || poolTokenPercentage === void 0 ? void 0 : poolTokenPercentage.toFixed(2)) !== null && _ref !== void 0 ? _ref : '0', \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"14px\",\n          pt: 1,\n          children: t('Share of Pool')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PoolPriceBar, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n\n_c = PoolPriceBar;\nexport default PoolPriceBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"PoolPriceBar\");","map":{"version":3,"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/views/AddLiquidity/PoolPriceBar.tsx"],"names":["React","Text","useTranslation","AutoColumn","AutoRow","ONE_BIPS","Field","PoolPriceBar","currencies","noLiquidity","poolTokenPercentage","price","t","toSignificant","assetA","CURRENCY_B","symbol","assetB","CURRENCY_A","invert","lessThan","toFixed"],"mappings":"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","sourcesContent":["import { Currency, Percent, Price } from '@pancakeswap/sdk'\r\nimport React from 'react'\r\nimport { Text } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { AutoColumn } from '../../components/Layout/Column'\r\nimport { AutoRow } from '../../components/Layout/Row'\r\nimport { ONE_BIPS } from '../../config/constants'\r\nimport { Field } from '../../state/mint/actions'\r\n\r\nfunction PoolPriceBar({\r\n  currencies,\r\n  noLiquidity,\r\n  poolTokenPercentage,\r\n  price,\r\n}: {\r\n  currencies: { [field in Field]?: Currency }\r\n  noLiquidity?: boolean\r\n  poolTokenPercentage?: Percent\r\n  price?: Price\r\n}) {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <AutoColumn gap=\"md\">\r\n      <AutoRow justify=\"space-around\" gap=\"4px\">\r\n        <AutoColumn justify=\"center\">\r\n          <Text>{price?.toSignificant(6) ?? '-'}</Text>\r\n          <Text fontSize=\"14px\" pt={1}>\r\n            {t('%assetA% per %assetB%', {\r\n              assetA: currencies[Field.CURRENCY_B]?.symbol ?? '',\r\n              assetB: currencies[Field.CURRENCY_A]?.symbol ?? '',\r\n            })}\r\n          </Text>\r\n        </AutoColumn>\r\n        <AutoColumn justify=\"center\">\r\n          <Text>{price?.invert()?.toSignificant(6) ?? '-'}</Text>\r\n          <Text fontSize=\"14px\" pt={1}>\r\n            {t('%assetA% per %assetB%', {\r\n              assetA: currencies[Field.CURRENCY_A]?.symbol ?? '',\r\n              assetB: currencies[Field.CURRENCY_B]?.symbol ?? '',\r\n            })}\r\n          </Text>\r\n        </AutoColumn>\r\n        <AutoColumn justify=\"center\">\r\n          <Text>\r\n            {noLiquidity && price\r\n              ? '100'\r\n              : (poolTokenPercentage?.lessThan(ONE_BIPS) ? '<0.01' : poolTokenPercentage?.toFixed(2)) ?? '0'}\r\n            %\r\n          </Text>\r\n          <Text fontSize=\"14px\" pt={1}>\r\n            {t('Share of Pool')}\r\n          </Text>\r\n        </AutoColumn>\r\n      </AutoRow>\r\n    </AutoColumn>\r\n  )\r\n}\r\n\r\nexport default PoolPriceBar\r\n"]},"metadata":{},"sourceType":"module"}