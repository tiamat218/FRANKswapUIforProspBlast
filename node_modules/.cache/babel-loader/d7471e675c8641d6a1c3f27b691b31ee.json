{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Devrim\\\\Documents\\\\FRANKswapUIforProspBlast\\\\src\\\\views\\\\Voting\\\\components\\\\Proposals\\\\Proposals.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Box, Breadcrumbs, Card, Flex, Heading, Text } from '@pancakeswap/uikit';\nimport { useTranslation } from 'contexts/Localization';\nimport Container from 'components/Layout/Container';\nimport { useAppDispatch } from 'state';\nimport { fetchProposals } from 'state/voting';\nimport { useGetProposalLoadingStatus, useGetProposals } from 'state/voting/hooks';\nimport { ProposalState, ProposalType, VotingStateLoadingStatus } from 'state/types';\nimport { filterProposalsByState, filterProposalsByType } from '../../helpers';\nimport BreadcrumbLink from '../BreadcrumbLink';\nimport ProposalsLoading from './ProposalsLoading';\nimport TabMenu from './TabMenu';\nimport ProposalRow from './ProposalRow';\nimport Filters from './Filters';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Proposals = () => {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  const [state, setState] = useState({\n    proposalType: ProposalType.CORE,\n    filterState: ProposalState.ACTIVE\n  });\n  const proposalStatus = useGetProposalLoadingStatus();\n  const proposals = useGetProposals();\n  const dispatch = useAppDispatch();\n  const {\n    proposalType,\n    filterState\n  } = state;\n  const isLoading = proposalStatus === VotingStateLoadingStatus.LOADING;\n  const isIdle = proposalStatus === VotingStateLoadingStatus.IDLE;\n  useEffect(() => {\n    dispatch(fetchProposals({\n      first: 1000,\n      state: filterState\n    }));\n  }, [filterState, dispatch]);\n\n  const handleProposalTypeChange = newProposalType => {\n    setState(prevState => ({ ...prevState,\n      proposalType: newProposalType\n    }));\n  };\n\n  const handleFilterChange = newFilterState => {\n    setState(prevState => ({ ...prevState,\n      filterState: newFilterState\n    }));\n  };\n\n  const filteredProposals = filterProposalsByState(filterProposalsByType(proposals, proposalType), filterState);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    py: \"40px\",\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      mb: \"48px\",\n      children: /*#__PURE__*/_jsxDEV(Breadcrumbs, {\n        children: [/*#__PURE__*/_jsxDEV(BreadcrumbLink, {\n          to: \"/\",\n          children: t('Home')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          children: t('Voting')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Heading, {\n      as: \"h2\",\n      scale: \"xl\",\n      mb: \"32px\",\n      children: t('Proposals')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(TabMenu, {\n        proposalType: proposalType,\n        onTypeChange: handleProposalTypeChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Filters, {\n        filterState: filterState,\n        onFilterChange: handleFilterChange,\n        isLoading: isLoading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), isLoading && /*#__PURE__*/_jsxDEV(ProposalsLoading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 23\n      }, this), isIdle && filteredProposals.length > 0 && filteredProposals.map(proposal => {\n        return /*#__PURE__*/_jsxDEV(ProposalRow, {\n          proposal: proposal\n        }, proposal.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 20\n        }, this);\n      }), isIdle && filteredProposals.length === 0 && /*#__PURE__*/_jsxDEV(Flex, {\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        p: \"32px\",\n        children: /*#__PURE__*/_jsxDEV(Heading, {\n          as: \"h5\",\n          children: t('No proposals found')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Proposals, \"fqdP6/AqWWfOF8U3pkmRTyjlmVM=\", false, function () {\n  return [useTranslation, useGetProposalLoadingStatus, useGetProposals, useAppDispatch];\n});\n\n_c = Proposals;\nexport default Proposals;\n\nvar _c;\n\n$RefreshReg$(_c, \"Proposals\");","map":{"version":3,"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/views/Voting/components/Proposals/Proposals.tsx"],"names":["React","useEffect","useState","Box","Breadcrumbs","Card","Flex","Heading","Text","useTranslation","Container","useAppDispatch","fetchProposals","useGetProposalLoadingStatus","useGetProposals","ProposalState","ProposalType","VotingStateLoadingStatus","filterProposalsByState","filterProposalsByType","BreadcrumbLink","ProposalsLoading","TabMenu","ProposalRow","Filters","Proposals","t","state","setState","proposalType","CORE","filterState","ACTIVE","proposalStatus","proposals","dispatch","isLoading","LOADING","isIdle","IDLE","first","handleProposalTypeChange","newProposalType","prevState","handleFilterChange","newFilterState","filteredProposals","length","map","proposal","id"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { Box, Breadcrumbs, Card, Flex, Heading, Text } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport Container from 'components/Layout/Container'\r\nimport { useAppDispatch } from 'state'\r\nimport { fetchProposals } from 'state/voting'\r\nimport { useGetProposalLoadingStatus, useGetProposals } from 'state/voting/hooks'\r\nimport { ProposalState, ProposalType, VotingStateLoadingStatus } from 'state/types'\r\nimport { filterProposalsByState, filterProposalsByType } from '../../helpers'\r\nimport BreadcrumbLink from '../BreadcrumbLink'\r\nimport ProposalsLoading from './ProposalsLoading'\r\nimport TabMenu from './TabMenu'\r\nimport ProposalRow from './ProposalRow'\r\nimport Filters from './Filters'\r\n\r\ninterface State {\r\n  proposalType: ProposalType\r\n  filterState: ProposalState\r\n}\r\n\r\nconst Proposals = () => {\r\n  const { t } = useTranslation()\r\n  const [state, setState] = useState<State>({\r\n    proposalType: ProposalType.CORE,\r\n    filterState: ProposalState.ACTIVE,\r\n  })\r\n  const proposalStatus = useGetProposalLoadingStatus()\r\n  const proposals = useGetProposals()\r\n  const dispatch = useAppDispatch()\r\n\r\n  const { proposalType, filterState } = state\r\n  const isLoading = proposalStatus === VotingStateLoadingStatus.LOADING\r\n  const isIdle = proposalStatus === VotingStateLoadingStatus.IDLE\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchProposals({ first: 1000, state: filterState }))\r\n  }, [filterState, dispatch])\r\n\r\n  const handleProposalTypeChange = (newProposalType: ProposalType) => {\r\n    setState((prevState) => ({\r\n      ...prevState,\r\n      proposalType: newProposalType,\r\n    }))\r\n  }\r\n\r\n  const handleFilterChange = (newFilterState: ProposalState) => {\r\n    setState((prevState) => ({\r\n      ...prevState,\r\n      filterState: newFilterState,\r\n    }))\r\n  }\r\n\r\n  const filteredProposals = filterProposalsByState(filterProposalsByType(proposals, proposalType), filterState)\r\n\r\n  return (\r\n    <Container py=\"40px\">\r\n      <Box mb=\"48px\">\r\n        <Breadcrumbs>\r\n          <BreadcrumbLink to=\"/\">{t('Home')}</BreadcrumbLink>\r\n          <Text>{t('Voting')}</Text>\r\n        </Breadcrumbs>\r\n      </Box>\r\n      <Heading as=\"h2\" scale=\"xl\" mb=\"32px\">\r\n        {t('Proposals')}\r\n      </Heading>\r\n      <Card>\r\n        <TabMenu proposalType={proposalType} onTypeChange={handleProposalTypeChange} />\r\n        <Filters filterState={filterState} onFilterChange={handleFilterChange} isLoading={isLoading} />\r\n        {isLoading && <ProposalsLoading />}\r\n        {isIdle &&\r\n          filteredProposals.length > 0 &&\r\n          filteredProposals.map((proposal) => {\r\n            return <ProposalRow key={proposal.id} proposal={proposal} />\r\n          })}\r\n        {isIdle && filteredProposals.length === 0 && (\r\n          <Flex alignItems=\"center\" justifyContent=\"center\" p=\"32px\">\r\n            <Heading as=\"h5\">{t('No proposals found')}</Heading>\r\n          </Flex>\r\n        )}\r\n      </Card>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Proposals\r\n"]},"metadata":{},"sourceType":"module"}