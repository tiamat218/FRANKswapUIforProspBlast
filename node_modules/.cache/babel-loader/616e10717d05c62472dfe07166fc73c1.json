{"ast":null,"code":"import React from'react';import{Flex,TooltipText,IconButton,useModal,CalculateIcon,Skeleton,useTooltip}from'@pancakeswap/uikit';import{useTranslation}from'contexts/Localization';import Balance from'components/Balance';import ApyCalculatorModal from'components/ApyCalculatorModal';import{getAprData}from'views/Pools/helpers';import{getAddress}from'utils/addressHelpers';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const AprRow=_ref=>{let{pool,performanceFee=0}=_ref;const{t}=useTranslation();const{stakingToken,earningToken,isFinished,apr,earningTokenPrice,isAutoVault}=pool;const tooltipContent=isAutoVault?t('APY includes compounding, APR doesn’t. This pool’s CAKE is compounded automatically, so we show APY.'):t('This pool’s rewards aren’t compounded automatically, so we show APR');const{targetRef,tooltip,tooltipVisible}=useTooltip(tooltipContent,{placement:'bottom-start'});const{apr:earningsPercentageToDisplay,roundingDecimals,compoundFrequency}=getAprData(pool,performanceFee);const apyModalLink=stakingToken.address?\"/swap?outputCurrency=\".concat(getAddress(stakingToken.address)):'/swap';const[onPresentApyModal]=useModal(/*#__PURE__*/_jsx(ApyCalculatorModal,{tokenPrice:earningTokenPrice,apr:apr,linkLabel:t('Get %symbol%',{symbol:stakingToken.symbol}),linkHref:apyModalLink,earningTokenSymbol:earningToken.symbol,roundingDecimals:roundingDecimals,compoundFrequency:compoundFrequency,performanceFee:performanceFee}));return/*#__PURE__*/_jsxs(Flex,{alignItems:\"center\",justifyContent:\"space-between\",children:[tooltipVisible&&tooltip,/*#__PURE__*/_jsx(TooltipText,{ref:targetRef,children:isAutoVault?\"\".concat(t('APY'),\":\"):\"\".concat(t('APR'),\":\")}),isFinished||!apr?/*#__PURE__*/_jsx(Skeleton,{width:\"82px\",height:\"32px\"}):/*#__PURE__*/_jsxs(Flex,{alignItems:\"center\",children:[/*#__PURE__*/_jsx(Balance,{fontSize:\"16px\",isDisabled:isFinished,value:earningsPercentageToDisplay,decimals:2,unit:\"%\",bold:true}),/*#__PURE__*/_jsx(IconButton,{onClick:onPresentApyModal,variant:\"text\",scale:\"sm\",children:/*#__PURE__*/_jsx(CalculateIcon,{color:\"textSubtle\",width:\"18px\"})})]})]});};export default AprRow;","map":{"version":3,"names":["React","Flex","TooltipText","IconButton","useModal","CalculateIcon","Skeleton","useTooltip","useTranslation","Balance","ApyCalculatorModal","getAprData","getAddress","jsx","_jsx","jsxs","_jsxs","AprRow","_ref","pool","performanceFee","t","stakingToken","earningToken","isFinished","apr","earningTokenPrice","isAutoVault","tooltipContent","targetRef","tooltip","tooltipVisible","placement","earningsPercentageToDisplay","roundingDecimals","compoundFrequency","apyModalLink","address","concat","onPresentApyModal","tokenPrice","linkLabel","symbol","linkHref","earningTokenSymbol","alignItems","justifyContent","children","ref","width","height","fontSize","isDisabled","value","decimals","unit","bold","onClick","variant","scale","color"],"sources":["C:/Users/frkul/Documents/swapUI_pancake-frontend/src/views/Pools/components/PoolCard/AprRow.tsx"],"sourcesContent":["import React from 'react'\r\nimport { Flex, TooltipText, IconButton, useModal, CalculateIcon, Skeleton, useTooltip } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport Balance from 'components/Balance'\r\nimport ApyCalculatorModal from 'components/ApyCalculatorModal'\r\nimport { Pool } from 'state/types'\r\nimport { getAprData } from 'views/Pools/helpers'\r\nimport { getAddress } from 'utils/addressHelpers'\r\n\r\ninterface AprRowProps {\r\n  pool: Pool\r\n  performanceFee?: number\r\n}\r\n\r\nconst AprRow: React.FC<AprRowProps> = ({ pool, performanceFee = 0 }) => {\r\n  const { t } = useTranslation()\r\n  const { stakingToken, earningToken, isFinished, apr, earningTokenPrice, isAutoVault } = pool\r\n\r\n  const tooltipContent = isAutoVault\r\n    ? t('APY includes compounding, APR doesn’t. This pool’s CAKE is compounded automatically, so we show APY.')\r\n    : t('This pool’s rewards aren’t compounded automatically, so we show APR')\r\n\r\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(tooltipContent, { placement: 'bottom-start' })\r\n\r\n  const { apr: earningsPercentageToDisplay, roundingDecimals, compoundFrequency } = getAprData(pool, performanceFee)\r\n\r\n  const apyModalLink = stakingToken.address ? `/swap?outputCurrency=${getAddress(stakingToken.address)}` : '/swap'\r\n\r\n  const [onPresentApyModal] = useModal(\r\n    <ApyCalculatorModal\r\n      tokenPrice={earningTokenPrice}\r\n      apr={apr}\r\n      linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\r\n      linkHref={apyModalLink}\r\n      earningTokenSymbol={earningToken.symbol}\r\n      roundingDecimals={roundingDecimals}\r\n      compoundFrequency={compoundFrequency}\r\n      performanceFee={performanceFee}\r\n    />,\r\n  )\r\n\r\n  return (\r\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\r\n      {tooltipVisible && tooltip}\r\n      <TooltipText ref={targetRef}>{isAutoVault ? `${t('APY')}:` : `${t('APR')}:`}</TooltipText>\r\n      {isFinished || !apr ? (\r\n        <Skeleton width=\"82px\" height=\"32px\" />\r\n      ) : (\r\n        <Flex alignItems=\"center\">\r\n          <Balance\r\n            fontSize=\"16px\"\r\n            isDisabled={isFinished}\r\n            value={earningsPercentageToDisplay}\r\n            decimals={2}\r\n            unit=\"%\"\r\n            bold\r\n          />\r\n          <IconButton onClick={onPresentApyModal} variant=\"text\" scale=\"sm\">\r\n            <CalculateIcon color=\"textSubtle\" width=\"18px\" />\r\n          </IconButton>\r\n        </Flex>\r\n      )}\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default AprRow\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}