{"ast":null,"code":"import BigNumber from'bignumber.js';import{getCakeAddress}from'utils/addressHelpers';import{SNAPSHOT_HUB_API,SNAPSHOT_VOTING_API}from'config/constants/endpoints';import{BIG_ZERO}from'utils/bigNumber';import{ProposalType}from'state/types';import{simpleRpcProvider}from'utils/providers';import{ADMIN_ADDRESS,PANCAKE_SPACE,SNAPSHOT_VERSION}from'./config';export const isCoreProposal=proposal=>{return proposal.author.toLowerCase()===ADMIN_ADDRESS.toLowerCase();};export const filterProposalsByType=(proposals,proposalType)=>{switch(proposalType){case ProposalType.COMMUNITY:return proposals.filter(proposal=>!isCoreProposal(proposal));case ProposalType.CORE:return proposals.filter(proposal=>isCoreProposal(proposal));case ProposalType.ALL:default:return proposals;}};export const filterProposalsByState=(proposals,state)=>{return proposals.filter(proposal=>proposal.state===state);};/**\r\n * Generates metadata required by snapshot to validate payload\r\n */export const generateMetaData=()=>{return{plugins:{},network:56,strategies:[{name:'cake',params:{symbol:'CAKE',address:getCakeAddress(),decimals:18}}]};};/**\r\n * Returns data that is required on all snapshot payloads\r\n */export const generatePayloadData=()=>{return{version:SNAPSHOT_VERSION,timestamp:(Date.now()/1e3).toFixed(),space:PANCAKE_SPACE};};/**\r\n * General function to send commands to the snapshot api\r\n */export const sendSnaphotData=async message=>{const response=await fetch(SNAPSHOT_HUB_API,{method:'post',headers:{Accept:'application/json','Content-Type':'application/json'},body:JSON.stringify(message)});if(!response.ok){const error=await response.json();throw new Error(error===null||error===void 0?void 0:error.error_description);}const data=await response.json();return data;};export const getVotingPower=async(account,poolAddresses,block)=>{const blockNumber=block||(await simpleRpcProvider.getBlockNumber());const response=await fetch(\"\".concat(SNAPSHOT_VOTING_API,\"/power\"),{method:'post',headers:{'Content-Type':'application/json'},body:JSON.stringify({address:account,block:blockNumber,poolAddresses})});const data=await response.json();return data.data;};export const calculateVoteResults=votes=>{return votes.reduce((accum,vote)=>{const choiceText=vote.proposal.choices[vote.choice-1];return{...accum,[choiceText]:accum[choiceText]?[...accum[choiceText],vote]:[vote]};},{});};export const getTotalFromVotes=votes=>{return votes.reduce((accum,vote)=>{var _vote$metadata;const power=new BigNumber((_vote$metadata=vote.metadata)===null||_vote$metadata===void 0?void 0:_vote$metadata.votingPower);return accum.plus(power);},BIG_ZERO);};","map":{"version":3,"names":["BigNumber","getCakeAddress","SNAPSHOT_HUB_API","SNAPSHOT_VOTING_API","BIG_ZERO","ProposalType","simpleRpcProvider","ADMIN_ADDRESS","PANCAKE_SPACE","SNAPSHOT_VERSION","isCoreProposal","proposal","author","toLowerCase","filterProposalsByType","proposals","proposalType","COMMUNITY","filter","CORE","ALL","filterProposalsByState","state","generateMetaData","plugins","network","strategies","name","params","symbol","address","decimals","generatePayloadData","version","timestamp","Date","now","toFixed","space","sendSnaphotData","message","response","fetch","method","headers","Accept","body","JSON","stringify","ok","error","json","Error","error_description","data","getVotingPower","account","poolAddresses","block","blockNumber","getBlockNumber","concat","calculateVoteResults","votes","reduce","accum","vote","choiceText","choices","choice","getTotalFromVotes","_vote$metadata","power","metadata","votingPower","plus"],"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/views/Voting/helpers.ts"],"sourcesContent":["import BigNumber from 'bignumber.js'\r\nimport { getCakeAddress } from 'utils/addressHelpers'\r\nimport { SNAPSHOT_HUB_API, SNAPSHOT_VOTING_API } from 'config/constants/endpoints'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\nimport { Proposal, ProposalState, ProposalType, Vote } from 'state/types'\r\nimport { simpleRpcProvider } from 'utils/providers'\r\nimport { ADMIN_ADDRESS, PANCAKE_SPACE, SNAPSHOT_VERSION } from './config'\r\n\r\nexport const isCoreProposal = (proposal: Proposal) => {\r\n  return proposal.author.toLowerCase() === ADMIN_ADDRESS.toLowerCase()\r\n}\r\n\r\nexport const filterProposalsByType = (proposals: Proposal[], proposalType: ProposalType) => {\r\n  switch (proposalType) {\r\n    case ProposalType.COMMUNITY:\r\n      return proposals.filter((proposal) => !isCoreProposal(proposal))\r\n    case ProposalType.CORE:\r\n      return proposals.filter((proposal) => isCoreProposal(proposal))\r\n    case ProposalType.ALL:\r\n    default:\r\n      return proposals\r\n  }\r\n}\r\n\r\nexport const filterProposalsByState = (proposals: Proposal[], state: ProposalState) => {\r\n  return proposals.filter((proposal) => proposal.state === state)\r\n}\r\n\r\nexport interface Message {\r\n  address: string\r\n  msg: string\r\n  sig: string\r\n}\r\n\r\n/**\r\n * Generates metadata required by snapshot to validate payload\r\n */\r\nexport const generateMetaData = () => {\r\n  return {\r\n    plugins: {},\r\n    network: 56,\r\n    strategies: [{ name: 'cake', params: { symbol: 'CAKE', address: getCakeAddress(), decimals: 18 } }],\r\n  }\r\n}\r\n\r\n/**\r\n * Returns data that is required on all snapshot payloads\r\n */\r\nexport const generatePayloadData = () => {\r\n  return {\r\n    version: SNAPSHOT_VERSION,\r\n    timestamp: (Date.now() / 1e3).toFixed(),\r\n    space: PANCAKE_SPACE,\r\n  }\r\n}\r\n\r\n/**\r\n * General function to send commands to the snapshot api\r\n */\r\nexport const sendSnaphotData = async (message: Message) => {\r\n  const response = await fetch(SNAPSHOT_HUB_API, {\r\n    method: 'post',\r\n    headers: {\r\n      Accept: 'application/json',\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(message),\r\n  })\r\n\r\n  if (!response.ok) {\r\n    const error = await response.json()\r\n    throw new Error(error?.error_description)\r\n  }\r\n\r\n  const data = await response.json()\r\n  return data\r\n}\r\n\r\nexport const getVotingPower = async (account: string, poolAddresses: string[], block?: number) => {\r\n  const blockNumber = block || (await simpleRpcProvider.getBlockNumber())\r\n  const response = await fetch(`${SNAPSHOT_VOTING_API}/power`, {\r\n    method: 'post',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({\r\n      address: account,\r\n      block: blockNumber,\r\n      poolAddresses,\r\n    }),\r\n  })\r\n  const data = await response.json()\r\n  return data.data\r\n}\r\n\r\nexport const calculateVoteResults = (votes: Vote[]): { [key: string]: Vote[] } => {\r\n  return votes.reduce((accum, vote) => {\r\n    const choiceText = vote.proposal.choices[vote.choice - 1]\r\n\r\n    return {\r\n      ...accum,\r\n      [choiceText]: accum[choiceText] ? [...accum[choiceText], vote] : [vote],\r\n    }\r\n  }, {})\r\n}\r\n\r\nexport const getTotalFromVotes = (votes: Vote[]) => {\r\n  return votes.reduce((accum, vote) => {\r\n    const power = new BigNumber(vote.metadata?.votingPower)\r\n    return accum.plus(power)\r\n  }, BIG_ZERO)\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}