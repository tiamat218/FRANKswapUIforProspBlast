{"ast":null,"code":"import{MaxUint256}from'@ethersproject/constants';import{TokenAmount,ETHER}from'@pancakeswap/sdk';import{useCallback,useMemo}from'react';import useActiveWeb3React from'hooks/useActiveWeb3React';import{ROUTER_ADDRESS}from'../config/constants';import useTokenAllowance from'./useTokenAllowance';import{Field}from'../state/swap/actions';import{useTransactionAdder,useHasPendingApproval}from'../state/transactions/hooks';import{computeSlippageAdjustedAmounts}from'../utils/prices';import{calculateGasMargin}from'../utils';import{useTokenContract}from'./useContract';export let ApprovalState;// returns a variable indicating the state of the approval and a function which approves if necessary or early returns\n(function(ApprovalState){ApprovalState[ApprovalState[\"UNKNOWN\"]=0]=\"UNKNOWN\";ApprovalState[ApprovalState[\"NOT_APPROVED\"]=1]=\"NOT_APPROVED\";ApprovalState[ApprovalState[\"PENDING\"]=2]=\"PENDING\";ApprovalState[ApprovalState[\"APPROVED\"]=3]=\"APPROVED\";})(ApprovalState||(ApprovalState={}));export function useApproveCallback(amountToApprove,spender){const{account}=useActiveWeb3React();const token=amountToApprove instanceof TokenAmount?amountToApprove.token:undefined;const currentAllowance=useTokenAllowance(token,account!==null&&account!==void 0?account:undefined,spender);const pendingApproval=useHasPendingApproval(token===null||token===void 0?void 0:token.address,spender);// check the current approval status\nconst approvalState=useMemo(()=>{if(!amountToApprove||!spender)return ApprovalState.UNKNOWN;if(amountToApprove.currency===ETHER)return ApprovalState.APPROVED;// we might not have enough data to know whether or not we need to approve\nif(!currentAllowance)return ApprovalState.UNKNOWN;// amountToApprove will be defined if currentAllowance is\nreturn currentAllowance.lessThan(amountToApprove)?pendingApproval?ApprovalState.PENDING:ApprovalState.NOT_APPROVED:ApprovalState.APPROVED;},[amountToApprove,currentAllowance,pendingApproval,spender]);const tokenContract=useTokenContract(token===null||token===void 0?void 0:token.address);const addTransaction=useTransactionAdder();const approve=useCallback(async()=>{if(approvalState!==ApprovalState.NOT_APPROVED){console.error('approve was called unnecessarily');return;}if(!token){console.error('no token');return;}if(!tokenContract){console.error('tokenContract is null');return;}if(!amountToApprove){console.error('missing amount to approve');return;}if(!spender){console.error('no spender');return;}let useExact=false;const estimatedGas=await tokenContract.estimateGas.approve(spender,MaxUint256).catch(()=>{// general fallback for tokens who restrict approval amounts\nuseExact=true;return tokenContract.estimateGas.approve(spender,amountToApprove.raw.toString());});// eslint-disable-next-line consistent-return\nreturn tokenContract.approve(spender,useExact?amountToApprove.raw.toString():MaxUint256,{gasLimit:calculateGasMargin(estimatedGas)}).then(response=>{addTransaction(response,{summary:\"Approve \".concat(amountToApprove.currency.symbol),approval:{tokenAddress:token.address,spender}});}).catch(error=>{console.error('Failed to approve token',error);throw error;});},[approvalState,token,tokenContract,amountToApprove,spender,addTransaction]);return[approvalState,approve];}// wraps useApproveCallback in the context of a swap\nexport function useApproveCallbackFromTrade(trade){let allowedSlippage=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0;const amountToApprove=useMemo(()=>trade?computeSlippageAdjustedAmounts(trade,allowedSlippage)[Field.INPUT]:undefined,[trade,allowedSlippage]);return useApproveCallback(amountToApprove,ROUTER_ADDRESS);}","map":{"version":3,"names":["MaxUint256","TokenAmount","ETHER","useCallback","useMemo","useActiveWeb3React","ROUTER_ADDRESS","useTokenAllowance","Field","useTransactionAdder","useHasPendingApproval","computeSlippageAdjustedAmounts","calculateGasMargin","useTokenContract","ApprovalState","useApproveCallback","amountToApprove","spender","account","token","undefined","currentAllowance","pendingApproval","address","approvalState","UNKNOWN","currency","APPROVED","lessThan","PENDING","NOT_APPROVED","tokenContract","addTransaction","approve","console","error","useExact","estimatedGas","estimateGas","catch","raw","toString","gasLimit","then","response","summary","concat","symbol","approval","tokenAddress","useApproveCallbackFromTrade","trade","allowedSlippage","arguments","length","INPUT"],"sources":["C:/Users/frkul/Documents/swapUI_pancake-frontend/src/hooks/useApproveCallback.ts"],"sourcesContent":["import { MaxUint256 } from '@ethersproject/constants'\r\nimport { TransactionResponse } from '@ethersproject/providers'\r\nimport { Trade, TokenAmount, CurrencyAmount, ETHER } from '@pancakeswap/sdk'\r\nimport { useCallback, useMemo } from 'react'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport { ROUTER_ADDRESS } from '../config/constants'\r\nimport useTokenAllowance from './useTokenAllowance'\r\nimport { Field } from '../state/swap/actions'\r\nimport { useTransactionAdder, useHasPendingApproval } from '../state/transactions/hooks'\r\nimport { computeSlippageAdjustedAmounts } from '../utils/prices'\r\nimport { calculateGasMargin } from '../utils'\r\nimport { useTokenContract } from './useContract'\r\n\r\nexport enum ApprovalState {\r\n  UNKNOWN,\r\n  NOT_APPROVED,\r\n  PENDING,\r\n  APPROVED,\r\n}\r\n\r\n// returns a variable indicating the state of the approval and a function which approves if necessary or early returns\r\nexport function useApproveCallback(\r\n  amountToApprove?: CurrencyAmount,\r\n  spender?: string,\r\n): [ApprovalState, () => Promise<void>] {\r\n  const { account } = useActiveWeb3React()\r\n  const token = amountToApprove instanceof TokenAmount ? amountToApprove.token : undefined\r\n  const currentAllowance = useTokenAllowance(token, account ?? undefined, spender)\r\n  const pendingApproval = useHasPendingApproval(token?.address, spender)\r\n\r\n  // check the current approval status\r\n  const approvalState: ApprovalState = useMemo(() => {\r\n    if (!amountToApprove || !spender) return ApprovalState.UNKNOWN\r\n    if (amountToApprove.currency === ETHER) return ApprovalState.APPROVED\r\n    // we might not have enough data to know whether or not we need to approve\r\n    if (!currentAllowance) return ApprovalState.UNKNOWN\r\n\r\n    // amountToApprove will be defined if currentAllowance is\r\n    return currentAllowance.lessThan(amountToApprove)\r\n      ? pendingApproval\r\n        ? ApprovalState.PENDING\r\n        : ApprovalState.NOT_APPROVED\r\n      : ApprovalState.APPROVED\r\n  }, [amountToApprove, currentAllowance, pendingApproval, spender])\r\n\r\n  const tokenContract = useTokenContract(token?.address)\r\n  const addTransaction = useTransactionAdder()\r\n\r\n  const approve = useCallback(async (): Promise<void> => {\r\n    if (approvalState !== ApprovalState.NOT_APPROVED) {\r\n      console.error('approve was called unnecessarily')\r\n      return\r\n    }\r\n    if (!token) {\r\n      console.error('no token')\r\n      return\r\n    }\r\n\r\n    if (!tokenContract) {\r\n      console.error('tokenContract is null')\r\n      return\r\n    }\r\n\r\n    if (!amountToApprove) {\r\n      console.error('missing amount to approve')\r\n      return\r\n    }\r\n\r\n    if (!spender) {\r\n      console.error('no spender')\r\n      return\r\n    }\r\n\r\n    let useExact = false\r\n    const estimatedGas = await tokenContract.estimateGas.approve(spender, MaxUint256).catch(() => {\r\n      // general fallback for tokens who restrict approval amounts\r\n      useExact = true\r\n      return tokenContract.estimateGas.approve(spender, amountToApprove.raw.toString())\r\n    })\r\n\r\n    // eslint-disable-next-line consistent-return\r\n    return tokenContract\r\n      .approve(spender, useExact ? amountToApprove.raw.toString() : MaxUint256, {\r\n        gasLimit: calculateGasMargin(estimatedGas),\r\n      })\r\n      .then((response: TransactionResponse) => {\r\n        addTransaction(response, {\r\n          summary: `Approve ${amountToApprove.currency.symbol}`,\r\n          approval: { tokenAddress: token.address, spender },\r\n        })\r\n      })\r\n      .catch((error: Error) => {\r\n        console.error('Failed to approve token', error)\r\n        throw error\r\n      })\r\n  }, [approvalState, token, tokenContract, amountToApprove, spender, addTransaction])\r\n\r\n  return [approvalState, approve]\r\n}\r\n\r\n// wraps useApproveCallback in the context of a swap\r\nexport function useApproveCallbackFromTrade(trade?: Trade, allowedSlippage = 0) {\r\n  const amountToApprove = useMemo(\r\n    () => (trade ? computeSlippageAdjustedAmounts(trade, allowedSlippage)[Field.INPUT] : undefined),\r\n    [trade, allowedSlippage],\r\n  )\r\n\r\n  return useApproveCallback(amountToApprove, ROUTER_ADDRESS)\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}