{"ast":null,"code":"import{useContext}from'react';import{ThemeContext as StyledThemeContext}from'styled-components';import{useThemeManager}from'state/user/hooks';const useTheme=()=>{const[,toggleTheme]=useThemeManager();const theme=useContext(StyledThemeContext);const isDark=true;const alwaysDarkTheme=()=>{if(!isDark){toggleTheme();}};return{isDark,theme,toggleTheme:alwaysDarkTheme};};export default useTheme;","map":{"version":3,"names":["useContext","ThemeContext","StyledThemeContext","useThemeManager","useTheme","toggleTheme","theme","isDark","alwaysDarkTheme"],"sources":["C:/Users/frkul/Documents/swapUI_pancake-frontend/src/hooks/useTheme.ts"],"sourcesContent":["import { useContext } from 'react'\r\nimport { ThemeContext as StyledThemeContext } from 'styled-components'\r\nimport { useThemeManager } from 'state/user/hooks'\r\n\r\nconst useTheme = () => {\r\n  const [, toggleTheme] = useThemeManager()\r\n  const theme = useContext(StyledThemeContext)\r\n  const isDark = true\r\n\r\n  const alwaysDarkTheme = () => {\r\n    if (!isDark) {\r\n      toggleTheme() \r\n    }\r\n  }\r\n\r\n  return { isDark, theme, toggleTheme: alwaysDarkTheme }\r\n}\r\n\r\nexport default useTheme\r\n"],"mappings":"AAAA,OAASA,UAAU,KAAQ,OAAO,CAClC,OAASC,YAAY,GAAI,CAAAC,kBAAkB,KAAQ,mBAAmB,CACtE,OAASC,eAAe,KAAQ,kBAAkB,CAElD,KAAM,CAAAC,QAAQ,CAAGA,CAAA,GAAM,CACrB,KAAM,EAAGC,WAAW,CAAC,CAAGF,eAAe,CAAC,CAAC,CACzC,KAAM,CAAAG,KAAK,CAAGN,UAAU,CAACE,kBAAkB,CAAC,CAC5C,KAAM,CAAAK,MAAM,CAAG,IAAI,CAEnB,KAAM,CAAAC,eAAe,CAAGA,CAAA,GAAM,CAC5B,GAAI,CAACD,MAAM,CAAE,CACXF,WAAW,CAAC,CAAC,CACf,CACF,CAAC,CAED,MAAO,CAAEE,MAAM,CAAED,KAAK,CAAED,WAAW,CAAEG,eAAgB,CAAC,CACxD,CAAC,CAED,cAAe,CAAAJ,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module"}