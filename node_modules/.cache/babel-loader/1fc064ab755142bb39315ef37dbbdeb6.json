{"ast":null,"code":"import React from'react';import{Modal,Flex,Text}from'@pancakeswap/uikit';import{useAppDispatch}from'state';import BigNumber from'bignumber.js';import{useTranslation}from'contexts/Localization';import{useCake,useProfile}from'hooks/useContract';import useApproveConfirmTransaction from'hooks/useApproveConfirmTransaction';import{fetchProfile}from'state/profile';import useToast from'hooks/useToast';import{REGISTER_COST}from'../ProfileCreation/config';import ApproveConfirmButtons from'./ApproveConfirmButtons';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ConfirmProfileCreationModal=_ref=>{let{account,teamId,selectedNft,minimumCakeRequired,allowance,onDismiss}=_ref;const{t}=useTranslation();const profileContract=useProfile();const dispatch=useAppDispatch();const{toastSuccess}=useToast();const cakeContract=useCake();const{isApproving,isApproved,isConfirmed,isConfirming,handleApprove,handleConfirm}=useApproveConfirmTransaction({onRequiresApproval:async()=>{try{const response=await cakeContract.allowance(account,profileContract.address);const currentAllowance=new BigNumber(response.toString());return currentAllowance.gte(minimumCakeRequired);}catch(error){return false;}},onApprove:()=>{return cakeContract.approve(profileContract.address,allowance.toJSON());},onConfirm:()=>{return profileContract.createProfile(teamId,selectedNft.nftAddress,selectedNft.tokenId);},onSuccess:async()=>{await dispatch(fetchProfile(account));onDismiss();toastSuccess(t('Profile created!'));}});return/*#__PURE__*/_jsxs(Modal,{title:t('Complete Profile'),onDismiss:onDismiss,children:[/*#__PURE__*/_jsx(Text,{color:\"textSubtle\",mb:\"8px\",children:t('Submitting NFT to contract and confirming User Name and Team.')}),/*#__PURE__*/_jsxs(Flex,{justifyContent:\"space-between\",mb:\"16px\",children:[/*#__PURE__*/_jsx(Text,{children:t('Cost')}),/*#__PURE__*/_jsx(Text,{children:t('%num% CAKE',{num:REGISTER_COST})})]}),/*#__PURE__*/_jsx(ApproveConfirmButtons,{isApproveDisabled:isConfirmed||isConfirming||isApproved,isApproving:isApproving,isConfirmDisabled:!isApproved||isConfirmed,isConfirming:isConfirming,onApprove:handleApprove,onConfirm:handleConfirm})]});};export default ConfirmProfileCreationModal;","map":{"version":3,"names":["React","Modal","Flex","Text","useAppDispatch","BigNumber","useTranslation","useCake","useProfile","useApproveConfirmTransaction","fetchProfile","useToast","REGISTER_COST","ApproveConfirmButtons","jsx","_jsx","jsxs","_jsxs","ConfirmProfileCreationModal","_ref","account","teamId","selectedNft","minimumCakeRequired","allowance","onDismiss","t","profileContract","dispatch","toastSuccess","cakeContract","isApproving","isApproved","isConfirmed","isConfirming","handleApprove","handleConfirm","onRequiresApproval","response","address","currentAllowance","toString","gte","error","onApprove","approve","toJSON","onConfirm","createProfile","nftAddress","tokenId","onSuccess","title","children","color","mb","justifyContent","num","isApproveDisabled","isConfirmDisabled"],"sources":["C:/Users/frkul/Documents/swapUI_pancake-frontend/src/views/Profile/components/ConfirmProfileCreationModal.tsx"],"sourcesContent":["import React from 'react'\r\nimport { Modal, Flex, Text } from '@pancakeswap/uikit'\r\nimport { useAppDispatch } from 'state'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useCake, useProfile } from 'hooks/useContract'\r\nimport useApproveConfirmTransaction from 'hooks/useApproveConfirmTransaction'\r\nimport { fetchProfile } from 'state/profile'\r\nimport useToast from 'hooks/useToast'\r\nimport { REGISTER_COST } from '../ProfileCreation/config'\r\nimport ApproveConfirmButtons from './ApproveConfirmButtons'\r\nimport { State } from '../ProfileCreation/contexts/types'\r\n\r\ninterface Props {\r\n  userName: string\r\n  selectedNft: State['selectedNft']\r\n  account: string\r\n  teamId: number\r\n  minimumCakeRequired: BigNumber\r\n  allowance: BigNumber\r\n  onDismiss?: () => void\r\n}\r\n\r\nconst ConfirmProfileCreationModal: React.FC<Props> = ({\r\n  account,\r\n  teamId,\r\n  selectedNft,\r\n  minimumCakeRequired,\r\n  allowance,\r\n  onDismiss,\r\n}) => {\r\n  const { t } = useTranslation()\r\n  const profileContract = useProfile()\r\n  const dispatch = useAppDispatch()\r\n  const { toastSuccess } = useToast()\r\n  const cakeContract = useCake()\r\n\r\n  const { isApproving, isApproved, isConfirmed, isConfirming, handleApprove, handleConfirm } =\r\n    useApproveConfirmTransaction({\r\n      onRequiresApproval: async () => {\r\n        try {\r\n          const response = await cakeContract.allowance(account, profileContract.address)\r\n          const currentAllowance = new BigNumber(response.toString())\r\n          return currentAllowance.gte(minimumCakeRequired)\r\n        } catch (error) {\r\n          return false\r\n        }\r\n      },\r\n      onApprove: () => {\r\n        return cakeContract.approve(profileContract.address, allowance.toJSON())\r\n      },\r\n      onConfirm: () => {\r\n        return profileContract.createProfile(teamId, selectedNft.nftAddress, selectedNft.tokenId)\r\n      },\r\n      onSuccess: async () => {\r\n        await dispatch(fetchProfile(account))\r\n        onDismiss()\r\n        toastSuccess(t('Profile created!'))\r\n      },\r\n    })\r\n\r\n  return (\r\n    <Modal title={t('Complete Profile')} onDismiss={onDismiss}>\r\n      <Text color=\"textSubtle\" mb=\"8px\">\r\n        {t('Submitting NFT to contract and confirming User Name and Team.')}\r\n      </Text>\r\n      <Flex justifyContent=\"space-between\" mb=\"16px\">\r\n        <Text>{t('Cost')}</Text>\r\n        <Text>{t('%num% CAKE', { num: REGISTER_COST })}</Text>\r\n      </Flex>\r\n      <ApproveConfirmButtons\r\n        isApproveDisabled={isConfirmed || isConfirming || isApproved}\r\n        isApproving={isApproving}\r\n        isConfirmDisabled={!isApproved || isConfirmed}\r\n        isConfirming={isConfirming}\r\n        onApprove={handleApprove}\r\n        onConfirm={handleConfirm}\r\n      />\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default ConfirmProfileCreationModal\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}