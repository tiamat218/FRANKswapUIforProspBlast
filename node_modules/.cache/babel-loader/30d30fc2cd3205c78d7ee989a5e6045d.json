{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Devrim\\\\Documents\\\\FRANKswapUIforProspBlast\\\\src\\\\components\\\\SearchInput\\\\SearchInput.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useMemo } from 'react';\nimport { Input } from '@pancakeswap/uikit';\nimport styled from 'styled-components';\nimport debounce from 'lodash/debounce';\nimport { useTranslation } from 'contexts/Localization';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledInput = styled(Input)`\n  border-radius: 16px;\n  margin-left: auto;\n`;\n_c = StyledInput;\nconst InputWrapper = styled.div`\n  position: relative;\n  ${({\n  theme\n}) => theme.mediaQueries.sm} {\n    display: block;\n  }\n`;\n_c2 = InputWrapper;\nconst Container = styled.div``;\n_c3 = Container;\n\nconst SearchInput = ({\n  onChange: onChangeCallback,\n  placeholder = 'Search'\n}) => {\n  _s();\n\n  const [toggled, setToggled] = useState(false);\n  const [searchText, setSearchText] = useState('');\n  const {\n    t\n  } = useTranslation();\n  const debouncedOnChange = useMemo(() => debounce(e => onChangeCallback(e), 500), [onChangeCallback]);\n\n  const onChange = e => {\n    setSearchText(e.target.value);\n    debouncedOnChange(e);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    toggled: toggled,\n    children: /*#__PURE__*/_jsxDEV(InputWrapper, {\n      children: /*#__PURE__*/_jsxDEV(StyledInput, {\n        value: searchText,\n        onChange: onChange,\n        placeholder: t(placeholder),\n        onBlur: () => setToggled(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SearchInput, \"ieV7w7pZLYox94DtC+qRTh17PVA=\", false, function () {\n  return [useTranslation];\n});\n\n_c4 = SearchInput;\nexport default SearchInput;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"StyledInput\");\n$RefreshReg$(_c2, \"InputWrapper\");\n$RefreshReg$(_c3, \"Container\");\n$RefreshReg$(_c4, \"SearchInput\");","map":{"version":3,"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/components/SearchInput/SearchInput.tsx"],"names":["React","useState","useMemo","Input","styled","debounce","useTranslation","StyledInput","InputWrapper","div","theme","mediaQueries","sm","Container","SearchInput","onChange","onChangeCallback","placeholder","toggled","setToggled","searchText","setSearchText","t","debouncedOnChange","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,OAA1B,QAAyC,OAAzC;AACA,SAASC,KAAT,QAAsB,oBAAtB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,SAASC,cAAT,QAA+B,uBAA/B;;AAEA,MAAMC,WAAW,GAAGH,MAAM,CAACD,KAAD,CAAQ;AAClC;AACA;AACA,CAHA;KAAMI,W;AAKN,MAAMC,YAAY,GAAGJ,MAAM,CAACK,GAAI;AAChC;AACA,IAAI,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,YAAN,CAAmBC,EAAG;AACzC;AACA;AACA,CALA;MAAMJ,Y;AAON,MAAMK,SAAS,GAAGT,MAAM,CAACK,GAA0B,EAAnD;MAAMI,S;;AAON,MAAMC,WAA4B,GAAG,CAAC;AAAEC,EAAAA,QAAQ,EAAEC,gBAAZ;AAA8BC,EAAAA,WAAW,GAAG;AAA5C,CAAD,KAA4D;AAAA;;AAC/F,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBlB,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACmB,UAAD,EAAaC,aAAb,IAA8BpB,QAAQ,CAAC,EAAD,CAA5C;AAEA,QAAM;AAAEqB,IAAAA;AAAF,MAAQhB,cAAc,EAA5B;AAEA,QAAMiB,iBAAiB,GAAGrB,OAAO,CAC/B,MAAMG,QAAQ,CAAEmB,CAAD,IAA4CR,gBAAgB,CAACQ,CAAD,CAA7D,EAAkE,GAAlE,CADiB,EAE/B,CAACR,gBAAD,CAF+B,CAAjC;;AAKA,QAAMD,QAAQ,GAAIS,CAAD,IAA4C;AAC3DH,IAAAA,aAAa,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV,CAAb;AACAH,IAAAA,iBAAiB,CAACC,CAAD,CAAjB;AACD,GAHD;;AAKA,sBACE,QAAC,SAAD;AAAW,IAAA,OAAO,EAAEN,OAApB;AAAA,2BACE,QAAC,YAAD;AAAA,6BACE,QAAC,WAAD;AACE,QAAA,KAAK,EAAEE,UADT;AAEE,QAAA,QAAQ,EAAEL,QAFZ;AAGE,QAAA,WAAW,EAAEO,CAAC,CAACL,WAAD,CAHhB;AAIE,QAAA,MAAM,EAAE,MAAME,UAAU,CAAC,KAAD;AAJ1B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CA5BD;;GAAML,W;UAIUR,c;;;MAJVQ,W;AA8BN,eAAeA,WAAf","sourcesContent":["import React, { useState, useMemo } from 'react'\r\nimport { Input } from '@pancakeswap/uikit'\r\nimport styled from 'styled-components'\r\nimport debounce from 'lodash/debounce'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\nconst StyledInput = styled(Input)`\r\n  border-radius: 16px;\r\n  margin-left: auto;\r\n`\r\n\r\nconst InputWrapper = styled.div`\r\n  position: relative;\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    display: block;\r\n  }\r\n`\r\n\r\nconst Container = styled.div<{ toggled: boolean }>``\r\n\r\ninterface Props {\r\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void\r\n  placeholder?: string\r\n}\r\n\r\nconst SearchInput: React.FC<Props> = ({ onChange: onChangeCallback, placeholder = 'Search' }) => {\r\n  const [toggled, setToggled] = useState(false)\r\n  const [searchText, setSearchText] = useState('')\r\n\r\n  const { t } = useTranslation()\r\n\r\n  const debouncedOnChange = useMemo(\r\n    () => debounce((e: React.ChangeEvent<HTMLInputElement>) => onChangeCallback(e), 500),\r\n    [onChangeCallback],\r\n  )\r\n\r\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setSearchText(e.target.value)\r\n    debouncedOnChange(e)\r\n  }\r\n\r\n  return (\r\n    <Container toggled={toggled}>\r\n      <InputWrapper>\r\n        <StyledInput\r\n          value={searchText}\r\n          onChange={onChange}\r\n          placeholder={t(placeholder)}\r\n          onBlur={() => setToggled(false)}\r\n        />\r\n      </InputWrapper>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default SearchInput\r\n"]},"metadata":{},"sourceType":"module"}