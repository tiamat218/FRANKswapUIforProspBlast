{"ast":null,"code":"var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\n/**\r\n * Returns the last value of type T that passes a filter function\r\n * @param value changing value\r\n * @param filterFn function that determines whether a given value should be considered for the last value\r\n */\n\nfunction useLast(value, filterFn) {\n  _s();\n\n  const [last, setLast] = useState(filterFn && filterFn(value) ? value : undefined);\n  useEffect(() => {\n    setLast(prev => {\n      const shouldUse = filterFn ? filterFn(value) : true;\n      if (shouldUse) return value;\n      return prev;\n    });\n  }, [filterFn, value]);\n  return last;\n}\n\n_s(useLast, \"GUHkdke6U9b9jp/6Dk6umCgqDQM=\");\n\nfunction isDefined(x) {\n  return x !== null && x !== undefined;\n}\n/**\r\n * Returns the last truthy value of type T\r\n * @param value changing value\r\n */\n\n\nfunction useLastTruthy(value) {\n  _s2();\n\n  return useLast(value, isDefined);\n}\n\n_s2(useLastTruthy, \"j/+j09slM/hUQaVgp6QlMaNEhzc=\", false, function () {\n  return [useLast];\n});\n\nexport default useLastTruthy;","map":{"version":3,"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/hooks/useLast.ts"],"names":["useEffect","useState","useLast","value","filterFn","last","setLast","undefined","prev","shouldUse","isDefined","x","useLastTruthy"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA;AACA;AACA;AACA;AACA;;AACA,SAASC,OAAT,CACEC,KADF,EAEEC,QAFF,EAGwB;AAAA;;AACtB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAuBG,QAAQ,IAAIA,QAAQ,CAACD,KAAD,CAApB,GAA8BA,KAA9B,GAAsCI,SAA7D,CAAhC;AACAP,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,OAAO,CAAEE,IAAD,IAAU;AAChB,YAAMC,SAAkB,GAAGL,QAAQ,GAAGA,QAAQ,CAACD,KAAD,CAAX,GAAqB,IAAxD;AACA,UAAIM,SAAJ,EAAe,OAAON,KAAP;AACf,aAAOK,IAAP;AACD,KAJM,CAAP;AAKD,GANQ,EAMN,CAACJ,QAAD,EAAWD,KAAX,CANM,CAAT;AAOA,SAAOE,IAAP;AACD;;GAbQH,O;;AAeT,SAASQ,SAAT,CAAsBC,CAAtB,EAAuD;AACrD,SAAOA,CAAC,KAAK,IAAN,IAAcA,CAAC,KAAKJ,SAA3B;AACD;AAED;AACA;AACA;AACA;;;AACA,SAASK,aAAT,CAA0BT,KAA1B,EAA6E;AAAA;;AAC3E,SAAOD,OAAO,CAACC,KAAD,EAAQO,SAAR,CAAd;AACD;;IAFQE,a;UACAV,O;;;AAGT,eAAeU,aAAf","sourcesContent":["import { useEffect, useState } from 'react'\r\n\r\n/**\r\n * Returns the last value of type T that passes a filter function\r\n * @param value changing value\r\n * @param filterFn function that determines whether a given value should be considered for the last value\r\n */\r\nfunction useLast<T>(\r\n  value: T | undefined | null,\r\n  filterFn?: (value: T | null | undefined) => boolean,\r\n): T | null | undefined {\r\n  const [last, setLast] = useState<T | null | undefined>(filterFn && filterFn(value) ? value : undefined)\r\n  useEffect(() => {\r\n    setLast((prev) => {\r\n      const shouldUse: boolean = filterFn ? filterFn(value) : true\r\n      if (shouldUse) return value\r\n      return prev\r\n    })\r\n  }, [filterFn, value])\r\n  return last\r\n}\r\n\r\nfunction isDefined<T>(x: T | null | undefined): x is T {\r\n  return x !== null && x !== undefined\r\n}\r\n\r\n/**\r\n * Returns the last truthy value of type T\r\n * @param value changing value\r\n */\r\nfunction useLastTruthy<T>(value: T | undefined | null): T | null | undefined {\r\n  return useLast(value, isDefined)\r\n}\r\n\r\nexport default useLastTruthy\r\n"]},"metadata":{},"sourceType":"module"}