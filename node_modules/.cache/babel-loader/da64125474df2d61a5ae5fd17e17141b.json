{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Devrim\\\\Documents\\\\swapUIforProspBlast\\\\src\\\\views\\\\Pools\\\\components\\\\PoolCard\\\\CardActions\\\\index.tsx\",\n  _s = $RefreshSig$();\nimport BigNumber from 'bignumber.js';\nimport React from 'react';\nimport styled from 'styled-components';\nimport { BIG_ZERO } from 'utils/bigNumber';\nimport { Flex, Text, Box } from '@pancakeswap/uikit';\nimport { useTranslation } from 'contexts/Localization';\nimport { PoolCategory } from 'config/constants/types';\nimport ApprovalAction from './ApprovalAction';\nimport StakeActions from './StakeActions';\nimport HarvestActions from './HarvestActions';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst InlineText = styled(Text)`\n  display: inline;\n`;\n_c = InlineText;\nconst CardActions = ({\n  pool,\n  stakedBalance\n}) => {\n  _s();\n  const {\n    sousId,\n    stakingToken,\n    earningToken,\n    harvest,\n    poolCategory,\n    userData,\n    earningTokenPrice\n  } = pool;\n  // Pools using native BNB behave differently than pools using a token\n  const isBnbPool = poolCategory === PoolCategory.BINANCE;\n  const {\n    t\n  } = useTranslation();\n  const allowance = (userData === null || userData === void 0 ? void 0 : userData.allowance) ? new BigNumber(userData.allowance) : BIG_ZERO;\n  const stakingTokenBalance = (userData === null || userData === void 0 ? void 0 : userData.stakingTokenBalance) ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO;\n  const earnings = (userData === null || userData === void 0 ? void 0 : userData.pendingReward) ? new BigNumber(userData.pendingReward) : BIG_ZERO;\n  const needsApproval = !allowance.gt(0) && !isBnbPool;\n  const isStaked = stakedBalance.gt(0);\n  const isLoading = !userData;\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    flexDirection: \"column\",\n    children: /*#__PURE__*/_jsxDEV(Flex, {\n      flexDirection: \"column\",\n      children: [harvest && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          display: \"inline\",\n          children: [/*#__PURE__*/_jsxDEV(InlineText, {\n            color: \"secondary\",\n            textTransform: \"uppercase\",\n            bold: true,\n            fontSize: \"12px\",\n            children: `${earningToken.symbol} `\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(InlineText, {\n            color: \"textSubtle\",\n            textTransform: \"uppercase\",\n            bold: true,\n            fontSize: \"12px\",\n            children: t('Earned')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(HarvestActions, {\n          earnings: earnings,\n          earningToken: earningToken,\n          sousId: sousId,\n          earningTokenPrice: earningTokenPrice,\n          isBnbPool: isBnbPool,\n          isLoading: isLoading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(Box, {\n        display: \"inline\",\n        children: [/*#__PURE__*/_jsxDEV(InlineText, {\n          color: isStaked ? 'secondary' : 'textSubtle',\n          textTransform: \"uppercase\",\n          bold: true,\n          fontSize: \"12px\",\n          children: [isStaked ? stakingToken.symbol : t('Stake'), ' ']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InlineText, {\n          color: isStaked ? 'textSubtle' : 'secondary',\n          textTransform: \"uppercase\",\n          bold: true,\n          fontSize: \"12px\",\n          children: isStaked ? t('Staked') : `${stakingToken.symbol}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), needsApproval ? /*#__PURE__*/_jsxDEV(ApprovalAction, {\n        pool: pool,\n        isLoading: isLoading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(StakeActions, {\n        isLoading: isLoading,\n        pool: pool,\n        stakingTokenBalance: stakingTokenBalance,\n        stakedBalance: stakedBalance,\n        isBnbPool: isBnbPool,\n        isStaked: isStaked\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(CardActions, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n_c2 = CardActions;\nexport default CardActions;\nvar _c, _c2;\n$RefreshReg$(_c, \"InlineText\");\n$RefreshReg$(_c2, \"CardActions\");","map":{"version":3,"names":["BigNumber","React","styled","BIG_ZERO","Flex","Text","Box","useTranslation","PoolCategory","ApprovalAction","StakeActions","HarvestActions","jsxDEV","_jsxDEV","Fragment","_Fragment","InlineText","_c","CardActions","pool","stakedBalance","_s","sousId","stakingToken","earningToken","harvest","poolCategory","userData","earningTokenPrice","isBnbPool","BINANCE","t","allowance","stakingTokenBalance","earnings","pendingReward","needsApproval","gt","isStaked","isLoading","flexDirection","children","display","color","textTransform","bold","fontSize","symbol","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["C:/Users/Devrim/Documents/swapUIforProspBlast/src/views/Pools/components/PoolCard/CardActions/index.tsx"],"sourcesContent":["import BigNumber from 'bignumber.js'\r\nimport React from 'react'\r\nimport styled from 'styled-components'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\nimport { Flex, Text, Box } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { PoolCategory } from 'config/constants/types'\r\nimport { Pool } from 'state/types'\r\nimport ApprovalAction from './ApprovalAction'\r\nimport StakeActions from './StakeActions'\r\nimport HarvestActions from './HarvestActions'\r\n\r\nconst InlineText = styled(Text)`\r\n  display: inline;\r\n`\r\n\r\ninterface CardActionsProps {\r\n  pool: Pool\r\n  stakedBalance: BigNumber\r\n}\r\n\r\nconst CardActions: React.FC<CardActionsProps> = ({ pool, stakedBalance }) => {\r\n  const { sousId, stakingToken, earningToken, harvest, poolCategory, userData, earningTokenPrice } = pool\r\n  // Pools using native BNB behave differently than pools using a token\r\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\r\n  const { t } = useTranslation()\r\n  const allowance = userData?.allowance ? new BigNumber(userData.allowance) : BIG_ZERO\r\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\r\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\r\n  const needsApproval = !allowance.gt(0) && !isBnbPool\r\n  const isStaked = stakedBalance.gt(0)\r\n  const isLoading = !userData\r\n\r\n  return (\r\n    <Flex flexDirection=\"column\">\r\n      <Flex flexDirection=\"column\">\r\n        {harvest && (\r\n          <>\r\n            <Box display=\"inline\">\r\n              <InlineText color=\"secondary\" textTransform=\"uppercase\" bold fontSize=\"12px\">\r\n                {`${earningToken.symbol} `}\r\n              </InlineText>\r\n              <InlineText color=\"textSubtle\" textTransform=\"uppercase\" bold fontSize=\"12px\">\r\n                {t('Earned')}\r\n              </InlineText>\r\n            </Box>\r\n            <HarvestActions\r\n              earnings={earnings}\r\n              earningToken={earningToken}\r\n              sousId={sousId}\r\n              earningTokenPrice={earningTokenPrice}\r\n              isBnbPool={isBnbPool}\r\n              isLoading={isLoading}\r\n            />\r\n          </>\r\n        )}\r\n        <Box display=\"inline\">\r\n          <InlineText color={isStaked ? 'secondary' : 'textSubtle'} textTransform=\"uppercase\" bold fontSize=\"12px\">\r\n            {isStaked ? stakingToken.symbol : t('Stake')}{' '}\r\n          </InlineText>\r\n          <InlineText color={isStaked ? 'textSubtle' : 'secondary'} textTransform=\"uppercase\" bold fontSize=\"12px\">\r\n            {isStaked ? t('Staked') : `${stakingToken.symbol}`}\r\n          </InlineText>\r\n        </Box>\r\n        {needsApproval ? (\r\n          <ApprovalAction pool={pool} isLoading={isLoading} />\r\n        ) : (\r\n          <StakeActions\r\n            isLoading={isLoading}\r\n            pool={pool}\r\n            stakingTokenBalance={stakingTokenBalance}\r\n            stakedBalance={stakedBalance}\r\n            isBnbPool={isBnbPool}\r\n            isStaked={isStaked}\r\n          />\r\n        )}\r\n      </Flex>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default CardActions\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}