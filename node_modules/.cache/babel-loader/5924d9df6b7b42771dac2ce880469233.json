{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useCallback } from 'react';\nimport { useWeb3React } from '@web3-react/core';\nimport BigNumber from 'bignumber.js';\nimport { useAppDispatch } from 'state';\nimport { updateUserStakedBalance, updateUserBalance, updateUserPendingReward } from 'state/actions';\nimport { unstakeFarm } from 'utils/calls';\nimport { useMasterchef, useSousChef } from 'hooks/useContract';\nimport { BIG_TEN } from 'utils/bigNumber';\nconst sousUnstake = async (sousChefContract, amount, decimals) => {\n  const tx = await sousChefContract.withdraw(new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString());\n  const receipt = await tx.wait();\n  return receipt.status;\n};\nconst sousEmergencyUnstake = async sousChefContract => {\n  const tx = await sousChefContract.emergencyWithdraw();\n  const receipt = await tx.wait();\n  return receipt.status;\n};\nconst useUnstakePool = (sousId, enableEmergencyWithdraw = false) => {\n  _s();\n  const dispatch = useAppDispatch();\n  const {\n    account\n  } = useWeb3React();\n  const masterChefContract = useMasterchef();\n  const sousChefContract = useSousChef(sousId);\n  const handleUnstake = useCallback(async (amount, decimals) => {\n    if (sousId === 0) {\n      await unstakeFarm(masterChefContract, 0, amount);\n    } else if (enableEmergencyWithdraw) {\n      await sousEmergencyUnstake(sousChefContract);\n    } else {\n      await sousUnstake(sousChefContract, amount, decimals);\n    }\n    dispatch(updateUserStakedBalance(sousId, account));\n    dispatch(updateUserBalance(sousId, account));\n    dispatch(updateUserPendingReward(sousId, account));\n  }, [account, dispatch, enableEmergencyWithdraw, masterChefContract, sousChefContract, sousId]);\n  return {\n    onUnstake: handleUnstake\n  };\n};\n_s(useUnstakePool, \"ZdLCx5w3kCXGv4NZYm/42J9apvQ=\", false, function () {\n  return [useAppDispatch, useWeb3React, useMasterchef, useSousChef];\n});\nexport default useUnstakePool;","map":{"version":3,"names":["useCallback","useWeb3React","BigNumber","useAppDispatch","updateUserStakedBalance","updateUserBalance","updateUserPendingReward","unstakeFarm","useMasterchef","useSousChef","BIG_TEN","sousUnstake","sousChefContract","amount","decimals","tx","withdraw","times","pow","toString","receipt","wait","status","sousEmergencyUnstake","emergencyWithdraw","useUnstakePool","sousId","enableEmergencyWithdraw","_s","dispatch","account","masterChefContract","handleUnstake","onUnstake"],"sources":["C:/Users/Devrim/Documents/swapUIforProspBlast/src/views/Pools/hooks/useUnstakePool.ts"],"sourcesContent":["import { useCallback } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useAppDispatch } from 'state'\r\nimport { updateUserStakedBalance, updateUserBalance, updateUserPendingReward } from 'state/actions'\r\nimport { unstakeFarm } from 'utils/calls'\r\nimport { useMasterchef, useSousChef } from 'hooks/useContract'\r\nimport { BIG_TEN } from 'utils/bigNumber'\r\n\r\nconst sousUnstake = async (sousChefContract, amount, decimals) => {\r\n  const tx = await sousChefContract.withdraw(new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString())\r\n  const receipt = await tx.wait()\r\n  return receipt.status\r\n}\r\n\r\nconst sousEmergencyUnstake = async (sousChefContract) => {\r\n  const tx = await sousChefContract.emergencyWithdraw()\r\n  const receipt = await tx.wait()\r\n  return receipt.status\r\n}\r\n\r\nconst useUnstakePool = (sousId, enableEmergencyWithdraw = false) => {\r\n  const dispatch = useAppDispatch()\r\n  const { account } = useWeb3React()\r\n  const masterChefContract = useMasterchef()\r\n  const sousChefContract = useSousChef(sousId)\r\n\r\n  const handleUnstake = useCallback(\r\n    async (amount: string, decimals: number) => {\r\n      if (sousId === 0) {\r\n        await unstakeFarm(masterChefContract, 0, amount)\r\n      } else if (enableEmergencyWithdraw) {\r\n        await sousEmergencyUnstake(sousChefContract)\r\n      } else {\r\n        await sousUnstake(sousChefContract, amount, decimals)\r\n      }\r\n      dispatch(updateUserStakedBalance(sousId, account))\r\n      dispatch(updateUserBalance(sousId, account))\r\n      dispatch(updateUserPendingReward(sousId, account))\r\n    },\r\n    [account, dispatch, enableEmergencyWithdraw, masterChefContract, sousChefContract, sousId],\r\n  )\r\n\r\n  return { onUnstake: handleUnstake }\r\n}\r\n\r\nexport default useUnstakePool\r\n"],"mappings":";AAAA,SAASA,WAAW,QAAQ,OAAO;AACnC,SAASC,YAAY,QAAQ,kBAAkB;AAC/C,OAAOC,SAAS,MAAM,cAAc;AACpC,SAASC,cAAc,QAAQ,OAAO;AACtC,SAASC,uBAAuB,EAAEC,iBAAiB,EAAEC,uBAAuB,QAAQ,eAAe;AACnG,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,aAAa,EAAEC,WAAW,QAAQ,mBAAmB;AAC9D,SAASC,OAAO,QAAQ,iBAAiB;AAEzC,MAAMC,WAAW,GAAG,MAAAA,CAAOC,gBAAgB,EAAEC,MAAM,EAAEC,QAAQ,KAAK;EAChE,MAAMC,EAAE,GAAG,MAAMH,gBAAgB,CAACI,QAAQ,CAAC,IAAId,SAAS,CAACW,MAAM,CAAC,CAACI,KAAK,CAACP,OAAO,CAACQ,GAAG,CAACJ,QAAQ,CAAC,CAAC,CAACK,QAAQ,CAAC,CAAC,CAAC;EACzG,MAAMC,OAAO,GAAG,MAAML,EAAE,CAACM,IAAI,CAAC,CAAC;EAC/B,OAAOD,OAAO,CAACE,MAAM;AACvB,CAAC;AAED,MAAMC,oBAAoB,GAAG,MAAOX,gBAAgB,IAAK;EACvD,MAAMG,EAAE,GAAG,MAAMH,gBAAgB,CAACY,iBAAiB,CAAC,CAAC;EACrD,MAAMJ,OAAO,GAAG,MAAML,EAAE,CAACM,IAAI,CAAC,CAAC;EAC/B,OAAOD,OAAO,CAACE,MAAM;AACvB,CAAC;AAED,MAAMG,cAAc,GAAGA,CAACC,MAAM,EAAEC,uBAAuB,GAAG,KAAK,KAAK;EAAAC,EAAA;EAClE,MAAMC,QAAQ,GAAG1B,cAAc,CAAC,CAAC;EACjC,MAAM;IAAE2B;EAAQ,CAAC,GAAG7B,YAAY,CAAC,CAAC;EAClC,MAAM8B,kBAAkB,GAAGvB,aAAa,CAAC,CAAC;EAC1C,MAAMI,gBAAgB,GAAGH,WAAW,CAACiB,MAAM,CAAC;EAE5C,MAAMM,aAAa,GAAGhC,WAAW,CAC/B,OAAOa,MAAc,EAAEC,QAAgB,KAAK;IAC1C,IAAIY,MAAM,KAAK,CAAC,EAAE;MAChB,MAAMnB,WAAW,CAACwB,kBAAkB,EAAE,CAAC,EAAElB,MAAM,CAAC;IAClD,CAAC,MAAM,IAAIc,uBAAuB,EAAE;MAClC,MAAMJ,oBAAoB,CAACX,gBAAgB,CAAC;IAC9C,CAAC,MAAM;MACL,MAAMD,WAAW,CAACC,gBAAgB,EAAEC,MAAM,EAAEC,QAAQ,CAAC;IACvD;IACAe,QAAQ,CAACzB,uBAAuB,CAACsB,MAAM,EAAEI,OAAO,CAAC,CAAC;IAClDD,QAAQ,CAACxB,iBAAiB,CAACqB,MAAM,EAAEI,OAAO,CAAC,CAAC;IAC5CD,QAAQ,CAACvB,uBAAuB,CAACoB,MAAM,EAAEI,OAAO,CAAC,CAAC;EACpD,CAAC,EACD,CAACA,OAAO,EAAED,QAAQ,EAAEF,uBAAuB,EAAEI,kBAAkB,EAAEnB,gBAAgB,EAAEc,MAAM,CAC3F,CAAC;EAED,OAAO;IAAEO,SAAS,EAAED;EAAc,CAAC;AACrC,CAAC;AAAAJ,EAAA,CAvBKH,cAAc;EAAA,QACDtB,cAAc,EACXF,YAAY,EACLO,aAAa,EACfC,WAAW;AAAA;AAqBtC,eAAegB,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module"}