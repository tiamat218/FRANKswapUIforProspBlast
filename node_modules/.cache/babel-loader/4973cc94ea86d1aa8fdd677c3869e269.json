{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\frkul\\\\Documents\\\\swapUI_pancake-frontend\\\\src\\\\views\\\\Predictions\\\\components\\\\RoundCard\\\\CalculatingCard.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { CardBody, Flex, Spinner, WaitIcon, TooltipText, useTooltip, InfoIcon } from '@pancakeswap/uikit';\nimport { useTranslation } from 'contexts/Localization';\nimport { BetPosition } from 'state/types';\nimport { useGetTotalIntervalBlocks } from 'state/hooks';\nimport { RoundResultBox } from '../RoundResult';\nimport MultiplierArrow from './MultiplierArrow';\nimport Card from './Card';\nimport CardHeader from './CardHeader';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CalculatingCard = ({\n  round\n}) => {\n  _s();\n  const {\n    t\n  } = useTranslation();\n  const interval = useGetTotalIntervalBlocks();\n  const estimatedEndBlock = round.startBlock + interval;\n  const {\n    targetRef,\n    tooltip,\n    tooltipVisible\n  } = useTooltip(t('This round’s closing transaction has been submitted to the blockchain, and is awaiting confirmation.'), {\n    placement: 'bottom'\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        status: \"calculating\",\n        icon: /*#__PURE__*/_jsxDEV(WaitIcon, {\n          mr: \"4px\",\n          width: \"21px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 17\n        }, this),\n        title: t('Calculating'),\n        epoch: round.epoch,\n        blockNumber: estimatedEndBlock\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n        p: \"16px\",\n        children: [/*#__PURE__*/_jsxDEV(MultiplierArrow, {\n          isDisabled: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RoundResultBox, {\n          children: /*#__PURE__*/_jsxDEV(Flex, {\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            flexDirection: \"column\",\n            children: [/*#__PURE__*/_jsxDEV(Spinner, {\n              size: 96\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Flex, {\n              mt: \"8px\",\n              ref: targetRef,\n              children: [/*#__PURE__*/_jsxDEV(TooltipText, {\n                children: t('Calculating')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(InfoIcon, {\n                ml: \"4px\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MultiplierArrow, {\n          betPosition: BetPosition.BEAR,\n          isDisabled: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), tooltipVisible && tooltip]\n  }, void 0, true);\n};\n_s(CalculatingCard, \"WDCddJXBtVQMuug6AU1nKWwA4Ow=\", false, function () {\n  return [useTranslation, useGetTotalIntervalBlocks, useTooltip];\n});\n_c = CalculatingCard;\nexport default CalculatingCard;\nvar _c;\n$RefreshReg$(_c, \"CalculatingCard\");","map":{"version":3,"names":["React","CardBody","Flex","Spinner","WaitIcon","TooltipText","useTooltip","InfoIcon","useTranslation","BetPosition","useGetTotalIntervalBlocks","RoundResultBox","MultiplierArrow","Card","CardHeader","jsxDEV","_jsxDEV","Fragment","_Fragment","CalculatingCard","round","_s","t","interval","estimatedEndBlock","startBlock","targetRef","tooltip","tooltipVisible","placement","children","status","icon","mr","width","fileName","_jsxFileName","lineNumber","columnNumber","title","epoch","blockNumber","p","isDisabled","alignItems","justifyContent","flexDirection","size","mt","ref","ml","betPosition","BEAR","_c","$RefreshReg$"],"sources":["C:/Users/frkul/Documents/swapUI_pancake-frontend/src/views/Predictions/components/RoundCard/CalculatingCard.tsx"],"sourcesContent":["import React from 'react'\r\nimport { CardBody, Flex, Spinner, WaitIcon, TooltipText, useTooltip, InfoIcon } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { NodeRound, BetPosition } from 'state/types'\r\nimport { useGetTotalIntervalBlocks } from 'state/hooks'\r\nimport { RoundResultBox } from '../RoundResult'\r\nimport MultiplierArrow from './MultiplierArrow'\r\nimport Card from './Card'\r\nimport CardHeader from './CardHeader'\r\n\r\ninterface CalculatingCardProps {\r\n  round: NodeRound\r\n}\r\n\r\nconst CalculatingCard: React.FC<CalculatingCardProps> = ({ round }) => {\r\n  const { t } = useTranslation()\r\n  const interval = useGetTotalIntervalBlocks()\r\n  const estimatedEndBlock = round.startBlock + interval\r\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\r\n    t('This round’s closing transaction has been submitted to the blockchain, and is awaiting confirmation.'),\r\n    { placement: 'bottom' },\r\n  )\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <CardHeader\r\n          status=\"calculating\"\r\n          icon={<WaitIcon mr=\"4px\" width=\"21px\" />}\r\n          title={t('Calculating')}\r\n          epoch={round.epoch}\r\n          blockNumber={estimatedEndBlock}\r\n        />\r\n        <CardBody p=\"16px\">\r\n          <MultiplierArrow isDisabled />\r\n          <RoundResultBox>\r\n            <Flex alignItems=\"center\" justifyContent=\"center\" flexDirection=\"column\">\r\n              <Spinner size={96} />\r\n              <Flex mt=\"8px\" ref={targetRef}>\r\n                <TooltipText>{t('Calculating')}</TooltipText>\r\n                <InfoIcon ml=\"4px\" />\r\n              </Flex>\r\n            </Flex>\r\n          </RoundResultBox>\r\n          <MultiplierArrow betPosition={BetPosition.BEAR} isDisabled />\r\n        </CardBody>\r\n      </Card>\r\n      {tooltipVisible && tooltip}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CalculatingCard\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,IAAI,EAAEC,OAAO,EAAEC,QAAQ,EAAEC,WAAW,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,oBAAoB;AACzG,SAASC,cAAc,QAAQ,uBAAuB;AACtD,SAAoBC,WAAW,QAAQ,aAAa;AACpD,SAASC,yBAAyB,QAAQ,aAAa;AACvD,SAASC,cAAc,QAAQ,gBAAgB;AAC/C,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,UAAU,MAAM,cAAc;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAMrC,MAAMC,eAA+C,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EAAAC,EAAA;EACrE,MAAM;IAAEC;EAAE,CAAC,GAAGd,cAAc,CAAC,CAAC;EAC9B,MAAMe,QAAQ,GAAGb,yBAAyB,CAAC,CAAC;EAC5C,MAAMc,iBAAiB,GAAGJ,KAAK,CAACK,UAAU,GAAGF,QAAQ;EACrD,MAAM;IAAEG,SAAS;IAAEC,OAAO;IAAEC;EAAe,CAAC,GAAGtB,UAAU,CACvDgB,CAAC,CAAC,sGAAsG,CAAC,EACzG;IAAEO,SAAS,EAAE;EAAS,CACxB,CAAC;EAED,oBACEb,OAAA,CAAAE,SAAA;IAAAY,QAAA,gBACEd,OAAA,CAACH,IAAI;MAAAiB,QAAA,gBACHd,OAAA,CAACF,UAAU;QACTiB,MAAM,EAAC,aAAa;QACpBC,IAAI,eAAEhB,OAAA,CAACZ,QAAQ;UAAC6B,EAAE,EAAC,KAAK;UAACC,KAAK,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAE;QACzCC,KAAK,EAAEjB,CAAC,CAAC,aAAa,CAAE;QACxBkB,KAAK,EAAEpB,KAAK,CAACoB,KAAM;QACnBC,WAAW,EAAEjB;MAAkB;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChC,CAAC,eACFtB,OAAA,CAACf,QAAQ;QAACyC,CAAC,EAAC,MAAM;QAAAZ,QAAA,gBAChBd,OAAA,CAACJ,eAAe;UAAC+B,UAAU;QAAA;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC9BtB,OAAA,CAACL,cAAc;UAAAmB,QAAA,eACbd,OAAA,CAACd,IAAI;YAAC0C,UAAU,EAAC,QAAQ;YAACC,cAAc,EAAC,QAAQ;YAACC,aAAa,EAAC,QAAQ;YAAAhB,QAAA,gBACtEd,OAAA,CAACb,OAAO;cAAC4C,IAAI,EAAE;YAAG;cAAAZ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eACrBtB,OAAA,CAACd,IAAI;cAAC8C,EAAE,EAAC,KAAK;cAACC,GAAG,EAAEvB,SAAU;cAAAI,QAAA,gBAC5Bd,OAAA,CAACX,WAAW;gBAAAyB,QAAA,EAAER,CAAC,CAAC,aAAa;cAAC;gBAAAa,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAc,CAAC,eAC7CtB,OAAA,CAACT,QAAQ;gBAAC2C,EAAE,EAAC;cAAK;gBAAAf,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACjB,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACO,CAAC,eACjBtB,OAAA,CAACJ,eAAe;UAACuC,WAAW,EAAE1C,WAAW,CAAC2C,IAAK;UAACT,UAAU;QAAA;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CAAC,EACNV,cAAc,IAAID,OAAO;EAAA,eAC1B,CAAC;AAEP,CAAC;AAAAN,EAAA,CApCKF,eAA+C;EAAA,QACrCX,cAAc,EACXE,yBAAyB,EAEKJ,UAAU;AAAA;AAAA+C,EAAA,GAJrDlC,eAA+C;AAsCrD,eAAeA,eAAe;AAAA,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}