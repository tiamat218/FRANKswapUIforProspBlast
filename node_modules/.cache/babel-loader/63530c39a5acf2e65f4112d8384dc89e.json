{"ast":null,"code":"import React,{useState}from'react';import{AutoRenewIcon,Button,Flex,Text}from'@pancakeswap/uikit';import{useTranslation}from'contexts/Localization';import{useCake}from'hooks/useContract';import useToast from'hooks/useToast';import{useProfile}from'state/profile/hooks';import{getPancakeProfileAddress}from'utils/addressHelpers';import{getFullDisplayBalance}from'utils/formatBalance';import useGetProfileCosts from'views/Profile/hooks/useGetProfileCosts';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ApproveCakePage=_ref=>{let{goToChange,onDismiss}=_ref;const[isApproving,setIsApproving]=useState(false);const{profile}=useProfile();const{t}=useTranslation();const{numberCakeToUpdate,numberCakeToReactivate}=useGetProfileCosts();const cakeContract=useCake();const{toastError}=useToast();const cost=profile.isActive?numberCakeToUpdate:numberCakeToReactivate;const handleApprove=async()=>{const tx=await cakeContract.approve(getPancakeProfileAddress(),cost.times(2).toJSON());setIsApproving(true);const receipt=await tx.wait();if(receipt.status){goToChange();}else{toastError(t('Error'),t('Please try again. Confirm the transaction and make sure you are paying enough gas!'));setIsApproving(false);}};if(!profile){return null;}return/*#__PURE__*/_jsxs(Flex,{flexDirection:\"column\",children:[/*#__PURE__*/_jsxs(Flex,{alignItems:\"center\",justifyContent:\"space-between\",mb:\"24px\",children:[/*#__PURE__*/_jsx(Text,{children:profile.isActive?t('Cost to update:'):t('Cost to reactivate:')}),/*#__PURE__*/_jsxs(Text,{children:[getFullDisplayBalance(cost),\" CAKE\"]})]}),/*#__PURE__*/_jsx(Button,{disabled:isApproving,isLoading:isApproving,endIcon:isApproving?/*#__PURE__*/_jsx(AutoRenewIcon,{spin:true,color:\"currentColor\"}):null,width:\"100%\",mb:\"8px\",onClick:handleApprove,children:t('Enable')}),/*#__PURE__*/_jsx(Button,{variant:\"text\",width:\"100%\",onClick:onDismiss,disabled:isApproving,children:t('Close Window')})]});};export default ApproveCakePage;","map":{"version":3,"names":["React","useState","AutoRenewIcon","Button","Flex","Text","useTranslation","useCake","useToast","useProfile","getPancakeProfileAddress","getFullDisplayBalance","useGetProfileCosts","jsx","_jsx","jsxs","_jsxs","ApproveCakePage","_ref","goToChange","onDismiss","isApproving","setIsApproving","profile","t","numberCakeToUpdate","numberCakeToReactivate","cakeContract","toastError","cost","isActive","handleApprove","tx","approve","times","toJSON","receipt","wait","status","flexDirection","children","alignItems","justifyContent","mb","disabled","isLoading","endIcon","spin","color","width","onClick","variant"],"sources":["C:/Users/frkul/Documents/swapUI_pancake-frontend/src/views/Profile/components/EditProfileModal/ApproveCakeView.tsx"],"sourcesContent":["import React, { useState } from 'react'\r\nimport { AutoRenewIcon, Button, Flex, InjectedModalProps, Text } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useCake } from 'hooks/useContract'\r\nimport useToast from 'hooks/useToast'\r\nimport { useProfile } from 'state/profile/hooks'\r\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\r\nimport { getFullDisplayBalance } from 'utils/formatBalance'\r\nimport useGetProfileCosts from 'views/Profile/hooks/useGetProfileCosts'\r\nimport { UseEditProfileResponse } from './reducer'\r\n\r\ninterface ApproveCakePageProps extends InjectedModalProps {\r\n  goToChange: UseEditProfileResponse['goToChange']\r\n}\r\n\r\nconst ApproveCakePage: React.FC<ApproveCakePageProps> = ({ goToChange, onDismiss }) => {\r\n  const [isApproving, setIsApproving] = useState(false)\r\n  const { profile } = useProfile()\r\n  const { t } = useTranslation()\r\n  const { numberCakeToUpdate, numberCakeToReactivate } = useGetProfileCosts()\r\n  const cakeContract = useCake()\r\n  const { toastError } = useToast()\r\n  const cost = profile.isActive ? numberCakeToUpdate : numberCakeToReactivate\r\n\r\n  const handleApprove = async () => {\r\n    const tx = await cakeContract.approve(getPancakeProfileAddress(), cost.times(2).toJSON())\r\n    setIsApproving(true)\r\n    const receipt = await tx.wait()\r\n    if (receipt.status) {\r\n      goToChange()\r\n    } else {\r\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\r\n      setIsApproving(false)\r\n    }\r\n  }\r\n\r\n  if (!profile) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <Flex flexDirection=\"column\">\r\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"24px\">\r\n        <Text>{profile.isActive ? t('Cost to update:') : t('Cost to reactivate:')}</Text>\r\n        <Text>{getFullDisplayBalance(cost)} CAKE</Text>\r\n      </Flex>\r\n      <Button\r\n        disabled={isApproving}\r\n        isLoading={isApproving}\r\n        endIcon={isApproving ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\r\n        width=\"100%\"\r\n        mb=\"8px\"\r\n        onClick={handleApprove}\r\n      >\r\n        {t('Enable')}\r\n      </Button>\r\n      <Button variant=\"text\" width=\"100%\" onClick={onDismiss} disabled={isApproving}>\r\n        {t('Close Window')}\r\n      </Button>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default ApproveCakePage\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}