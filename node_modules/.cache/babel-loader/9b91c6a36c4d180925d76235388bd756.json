{"ast":null,"code":"import{useEffect}from'react';import{useWeb3React}from'@web3-react/core';import usePreviousValue from'hooks/usePreviousValue';import{useAppDispatch}from'state';import{useGetCurrentEpoch,useGetSortedRounds}from'state/hooks';import useSwiper from'./useSwiper';/**\r\n * Hooks for actions to be performed when the round changes\r\n */const useOnNextRound=()=>{const currentEpoch=useGetCurrentEpoch();const rounds=useGetSortedRounds();const{account}=useWeb3React();const previousEpoch=usePreviousValue(currentEpoch);const{swiper}=useSwiper();const dispatch=useAppDispatch();useEffect(()=>{if(swiper&&currentEpoch!==undefined&&previousEpoch!==undefined&&currentEpoch!==previousEpoch){const currentEpochIndex=rounds.findIndex(round=>round.epoch===currentEpoch);// Slide to the current LIVE round which is always the one before the current round\nswiper.slideTo(currentEpochIndex-1);swiper.update();}},[previousEpoch,currentEpoch,rounds,swiper,account,dispatch]);};export default useOnNextRound;","map":{"version":3,"names":["useEffect","useWeb3React","usePreviousValue","useAppDispatch","useGetCurrentEpoch","useGetSortedRounds","useSwiper","useOnNextRound","currentEpoch","rounds","account","previousEpoch","swiper","dispatch","undefined","currentEpochIndex","findIndex","round","epoch","slideTo","update"],"sources":["C:/Users/frkul/Documents/swapUI_pancake-frontend/src/views/Predictions/hooks/useOnNextRound.ts"],"sourcesContent":["import { useEffect } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport usePreviousValue from 'hooks/usePreviousValue'\r\nimport { useAppDispatch } from 'state'\r\nimport { useGetCurrentEpoch, useGetSortedRounds } from 'state/hooks'\r\nimport useSwiper from './useSwiper'\r\n\r\n/**\r\n * Hooks for actions to be performed when the round changes\r\n */\r\nconst useOnNextRound = () => {\r\n  const currentEpoch = useGetCurrentEpoch()\r\n  const rounds = useGetSortedRounds()\r\n  const { account } = useWeb3React()\r\n  const previousEpoch = usePreviousValue(currentEpoch)\r\n  const { swiper } = useSwiper()\r\n  const dispatch = useAppDispatch()\r\n\r\n  useEffect(() => {\r\n    if (swiper && currentEpoch !== undefined && previousEpoch !== undefined && currentEpoch !== previousEpoch) {\r\n      const currentEpochIndex = rounds.findIndex((round) => round.epoch === currentEpoch)\r\n\r\n      // Slide to the current LIVE round which is always the one before the current round\r\n      swiper.slideTo(currentEpochIndex - 1)\r\n      swiper.update()\r\n    }\r\n  }, [previousEpoch, currentEpoch, rounds, swiper, account, dispatch])\r\n}\r\n\r\nexport default useOnNextRound\r\n"],"mappings":"AAAA,OAASA,SAAS,KAAQ,OAAO,CACjC,OAASC,YAAY,KAAQ,kBAAkB,CAC/C,MAAO,CAAAC,gBAAgB,KAAM,wBAAwB,CACrD,OAASC,cAAc,KAAQ,OAAO,CACtC,OAASC,kBAAkB,CAAEC,kBAAkB,KAAQ,aAAa,CACpE,MAAO,CAAAC,SAAS,KAAM,aAAa,CAEnC;AACA;AACA,GACA,KAAM,CAAAC,cAAc,CAAGA,CAAA,GAAM,CAC3B,KAAM,CAAAC,YAAY,CAAGJ,kBAAkB,CAAC,CAAC,CACzC,KAAM,CAAAK,MAAM,CAAGJ,kBAAkB,CAAC,CAAC,CACnC,KAAM,CAAEK,OAAQ,CAAC,CAAGT,YAAY,CAAC,CAAC,CAClC,KAAM,CAAAU,aAAa,CAAGT,gBAAgB,CAACM,YAAY,CAAC,CACpD,KAAM,CAAEI,MAAO,CAAC,CAAGN,SAAS,CAAC,CAAC,CAC9B,KAAM,CAAAO,QAAQ,CAAGV,cAAc,CAAC,CAAC,CAEjCH,SAAS,CAAC,IAAM,CACd,GAAIY,MAAM,EAAIJ,YAAY,GAAKM,SAAS,EAAIH,aAAa,GAAKG,SAAS,EAAIN,YAAY,GAAKG,aAAa,CAAE,CACzG,KAAM,CAAAI,iBAAiB,CAAGN,MAAM,CAACO,SAAS,CAAEC,KAAK,EAAKA,KAAK,CAACC,KAAK,GAAKV,YAAY,CAAC,CAEnF;AACAI,MAAM,CAACO,OAAO,CAACJ,iBAAiB,CAAG,CAAC,CAAC,CACrCH,MAAM,CAACQ,MAAM,CAAC,CAAC,CACjB,CACF,CAAC,CAAE,CAACT,aAAa,CAAEH,YAAY,CAAEC,MAAM,CAAEG,MAAM,CAAEF,OAAO,CAAEG,QAAQ,CAAC,CAAC,CACtE,CAAC,CAED,cAAe,CAAAN,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module"}