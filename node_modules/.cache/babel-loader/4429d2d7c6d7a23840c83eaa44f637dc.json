{"ast":null,"code":"'use strict';\n\n/**\n * Returns a new Uint8Array created by concatenating the passed ArrayLikes\n *\n * @param {Array<ArrayLike<number>>} arrays\n * @param {number} [length]\n */\nfunction concat(arrays, length) {\n  if (!length) {\n    length = arrays.reduce((acc, curr) => acc + curr.length, 0);\n  }\n  const output = new Uint8Array(length);\n  let offset = 0;\n  for (const arr of arrays) {\n    output.set(arr, offset);\n    offset += arr.length;\n  }\n  return output;\n}\nmodule.exports = concat;","map":{"version":3,"names":["concat","arrays","length","reduce","acc","curr","output","Uint8Array","offset","arr","set","module","exports"],"sources":["C:/Users/frkul/Documents/swapUI_pancake-frontend/node_modules/uint8arrays/concat.js"],"sourcesContent":["'use strict'\n\n/**\n * Returns a new Uint8Array created by concatenating the passed ArrayLikes\n *\n * @param {Array<ArrayLike<number>>} arrays\n * @param {number} [length]\n */\nfunction concat (arrays, length) {\n  if (!length) {\n    length = arrays.reduce((acc, curr) => acc + curr.length, 0)\n  }\n\n  const output = new Uint8Array(length)\n  let offset = 0\n\n  for (const arr of arrays) {\n    output.set(arr, offset)\n    offset += arr.length\n  }\n\n  return output\n}\n\nmodule.exports = concat\n"],"mappings":"AAAA,YAAY;;AAEZ;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,MAAMA,CAAEC,MAAM,EAAEC,MAAM,EAAE;EAC/B,IAAI,CAACA,MAAM,EAAE;IACXA,MAAM,GAAGD,MAAM,CAACE,MAAM,CAAC,CAACC,GAAG,EAAEC,IAAI,KAAKD,GAAG,GAAGC,IAAI,CAACH,MAAM,EAAE,CAAC,CAAC;EAC7D;EAEA,MAAMI,MAAM,GAAG,IAAIC,UAAU,CAACL,MAAM,CAAC;EACrC,IAAIM,MAAM,GAAG,CAAC;EAEd,KAAK,MAAMC,GAAG,IAAIR,MAAM,EAAE;IACxBK,MAAM,CAACI,GAAG,CAACD,GAAG,EAAED,MAAM,CAAC;IACvBA,MAAM,IAAIC,GAAG,CAACP,MAAM;EACtB;EAEA,OAAOI,MAAM;AACf;AAEAK,MAAM,CAACC,OAAO,GAAGZ,MAAM","ignoreList":[]},"metadata":{},"sourceType":"script"}