{"ast":null,"code":"import React,{useState}from'react';import BigNumber from'bignumber.js';import{Card,CardBody,Heading,Text}from'@pancakeswap/uikit';import{useWeb3React}from'@web3-react/core';import{useTranslation}from'contexts/Localization';import useApproveConfirmTransaction from'hooks/useApproveConfirmTransaction';import{DEFAULT_TOKEN_DECIMAL}from'config';import{useCake,useBunnyFactory}from'hooks/useContract';import useHasCakeBalance from'hooks/useHasCakeBalance';import nftList from'config/constants/nfts';import SelectionCard from'../components/SelectionCard';import NextStepButton from'../components/NextStepButton';import ApproveConfirmButtons from'../components/ApproveConfirmButtons';import useProfileCreation from'./contexts/hook';import{MINT_COST,STARTER_BUNNY_IDENTIFIERS}from'./config';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const nfts=nftList.filter(nft=>STARTER_BUNNY_IDENTIFIERS.includes(nft.identifier));const minimumCakeBalanceToMint=new BigNumber(MINT_COST).multipliedBy(DEFAULT_TOKEN_DECIMAL);const Mint=()=>{const[variationId,setVariationId]=useState(null);const{actions,minimumCakeRequired,allowance}=useProfileCreation();const{account}=useWeb3React();const cakeContract=useCake();const bunnyFactoryContract=useBunnyFactory();const{t}=useTranslation();const hasMinimumCakeRequired=useHasCakeBalance(minimumCakeBalanceToMint);const{isApproving,isApproved,isConfirmed,isConfirming,handleApprove,handleConfirm}=useApproveConfirmTransaction({onRequiresApproval:async()=>{// TODO: Move this to a helper, this check will be probably be used many times\ntry{const response=await cakeContract.allowance(account,bunnyFactoryContract.address);const currentAllowance=new BigNumber(response.toString());return currentAllowance.gte(minimumCakeRequired);}catch(error){return false;}},onApprove:()=>{return cakeContract.approve(bunnyFactoryContract.address,allowance.toJSON());},onConfirm:()=>{return bunnyFactoryContract.mintNFT(variationId);},onSuccess:()=>actions.nextStep()});return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Text,{fontSize:\"20px\",color:\"textSubtle\",bold:true,children:t('Step %num%',{num:1})}),/*#__PURE__*/_jsx(Heading,{as:\"h3\",scale:\"xl\",mb:\"24px\",children:t('Get Starter Collectible')}),/*#__PURE__*/_jsx(Text,{as:\"p\",children:t('Every profile starts by making a “starter” collectible (NFT).')}),/*#__PURE__*/_jsx(Text,{as:\"p\",children:t('This starter will also become your first profile picture.')}),/*#__PURE__*/_jsx(Text,{as:\"p\",mb:\"24px\",children:t('You can change your profile pic later if you get another approved Pancake Collectible.')}),/*#__PURE__*/_jsx(Card,{mb:\"24px\",children:/*#__PURE__*/_jsxs(CardBody,{children:[/*#__PURE__*/_jsx(Heading,{as:\"h4\",scale:\"lg\",mb:\"8px\",children:t('Choose your Starter!')}),/*#__PURE__*/_jsx(Text,{as:\"p\",color:\"textSubtle\",children:t('Choose wisely: you can only ever make one starter collectible!')}),/*#__PURE__*/_jsx(Text,{as:\"p\",mb:\"24px\",color:\"textSubtle\",children:t('Cost: %num% CAKE',{num:MINT_COST})}),nfts.map(nft=>{const handleChange=value=>setVariationId(Number(value));return/*#__PURE__*/_jsx(SelectionCard,{name:\"mintStarter\",value:nft.variationId,image:\"/images/nfts/\".concat(nft.images.md),isChecked:variationId===nft.variationId,onChange:handleChange,disabled:isApproving||isConfirming||isConfirmed||!hasMinimumCakeRequired,children:/*#__PURE__*/_jsx(Text,{bold:true,children:nft.name})},nft.identifier);}),!hasMinimumCakeRequired&&/*#__PURE__*/_jsx(Text,{color:\"failure\",mb:\"16px\",children:t('A minimum of %num% CAKE is required',{num:MINT_COST})}),/*#__PURE__*/_jsx(ApproveConfirmButtons,{isApproveDisabled:variationId===null||isConfirmed||isConfirming||isApproved,isApproving:isApproving,isConfirmDisabled:!isApproved||isConfirmed||!hasMinimumCakeRequired,isConfirming:isConfirming,onApprove:handleApprove,onConfirm:handleConfirm})]})}),/*#__PURE__*/_jsx(NextStepButton,{onClick:actions.nextStep,disabled:!isConfirmed,children:t('Next Step')})]});};export default Mint;","map":{"version":3,"names":["React","useState","BigNumber","Card","CardBody","Heading","Text","useWeb3React","useTranslation","useApproveConfirmTransaction","DEFAULT_TOKEN_DECIMAL","useCake","useBunnyFactory","useHasCakeBalance","nftList","SelectionCard","NextStepButton","ApproveConfirmButtons","useProfileCreation","MINT_COST","STARTER_BUNNY_IDENTIFIERS","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","nfts","filter","nft","includes","identifier","minimumCakeBalanceToMint","multipliedBy","Mint","variationId","setVariationId","actions","minimumCakeRequired","allowance","account","cakeContract","bunnyFactoryContract","t","hasMinimumCakeRequired","isApproving","isApproved","isConfirmed","isConfirming","handleApprove","handleConfirm","onRequiresApproval","response","address","currentAllowance","toString","gte","error","onApprove","approve","toJSON","onConfirm","mintNFT","onSuccess","nextStep","children","fontSize","color","bold","num","as","scale","mb","map","handleChange","value","Number","name","image","concat","images","md","isChecked","onChange","disabled","isApproveDisabled","isConfirmDisabled","onClick"],"sources":["C:/Users/frkul/Documents/swapUI_pancake-frontend/src/views/Profile/ProfileCreation/Mint.tsx"],"sourcesContent":["import React, { useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Card, CardBody, Heading, Text } from '@pancakeswap/uikit'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useApproveConfirmTransaction from 'hooks/useApproveConfirmTransaction'\r\nimport { DEFAULT_TOKEN_DECIMAL } from 'config'\r\nimport { useCake, useBunnyFactory } from 'hooks/useContract'\r\nimport { Nft } from 'config/constants/types'\r\nimport useHasCakeBalance from 'hooks/useHasCakeBalance'\r\nimport nftList from 'config/constants/nfts'\r\nimport SelectionCard from '../components/SelectionCard'\r\nimport NextStepButton from '../components/NextStepButton'\r\nimport ApproveConfirmButtons from '../components/ApproveConfirmButtons'\r\nimport useProfileCreation from './contexts/hook'\r\nimport { MINT_COST, STARTER_BUNNY_IDENTIFIERS } from './config'\r\n\r\nconst nfts = nftList.filter((nft) => STARTER_BUNNY_IDENTIFIERS.includes(nft.identifier))\r\nconst minimumCakeBalanceToMint = new BigNumber(MINT_COST).multipliedBy(DEFAULT_TOKEN_DECIMAL)\r\n\r\nconst Mint: React.FC = () => {\r\n  const [variationId, setVariationId] = useState<Nft['variationId']>(null)\r\n  const { actions, minimumCakeRequired, allowance } = useProfileCreation()\r\n\r\n  const { account } = useWeb3React()\r\n  const cakeContract = useCake()\r\n  const bunnyFactoryContract = useBunnyFactory()\r\n  const { t } = useTranslation()\r\n  const hasMinimumCakeRequired = useHasCakeBalance(minimumCakeBalanceToMint)\r\n  const { isApproving, isApproved, isConfirmed, isConfirming, handleApprove, handleConfirm } =\r\n    useApproveConfirmTransaction({\r\n      onRequiresApproval: async () => {\r\n        // TODO: Move this to a helper, this check will be probably be used many times\r\n        try {\r\n          const response = await cakeContract.allowance(account, bunnyFactoryContract.address)\r\n          const currentAllowance = new BigNumber(response.toString())\r\n          return currentAllowance.gte(minimumCakeRequired)\r\n        } catch (error) {\r\n          return false\r\n        }\r\n      },\r\n      onApprove: () => {\r\n        return cakeContract.approve(bunnyFactoryContract.address, allowance.toJSON())\r\n      },\r\n      onConfirm: () => {\r\n        return bunnyFactoryContract.mintNFT(variationId)\r\n      },\r\n      onSuccess: () => actions.nextStep(),\r\n    })\r\n\r\n  return (\r\n    <>\r\n      <Text fontSize=\"20px\" color=\"textSubtle\" bold>\r\n        {t('Step %num%', { num: 1 })}\r\n      </Text>\r\n      <Heading as=\"h3\" scale=\"xl\" mb=\"24px\">\r\n        {t('Get Starter Collectible')}\r\n      </Heading>\r\n      <Text as=\"p\">{t('Every profile starts by making a “starter” collectible (NFT).')}</Text>\r\n      <Text as=\"p\">{t('This starter will also become your first profile picture.')}</Text>\r\n      <Text as=\"p\" mb=\"24px\">\r\n        {t('You can change your profile pic later if you get another approved Pancake Collectible.')}\r\n      </Text>\r\n      <Card mb=\"24px\">\r\n        <CardBody>\r\n          <Heading as=\"h4\" scale=\"lg\" mb=\"8px\">\r\n            {t('Choose your Starter!')}\r\n          </Heading>\r\n          <Text as=\"p\" color=\"textSubtle\">\r\n            {t('Choose wisely: you can only ever make one starter collectible!')}\r\n          </Text>\r\n          <Text as=\"p\" mb=\"24px\" color=\"textSubtle\">\r\n            {t('Cost: %num% CAKE', { num: MINT_COST })}\r\n          </Text>\r\n          {nfts.map((nft) => {\r\n            const handleChange = (value: string) => setVariationId(Number(value))\r\n\r\n            return (\r\n              <SelectionCard\r\n                key={nft.identifier}\r\n                name=\"mintStarter\"\r\n                value={nft.variationId}\r\n                image={`/images/nfts/${nft.images.md}`}\r\n                isChecked={variationId === nft.variationId}\r\n                onChange={handleChange}\r\n                disabled={isApproving || isConfirming || isConfirmed || !hasMinimumCakeRequired}\r\n              >\r\n                <Text bold>{nft.name}</Text>\r\n              </SelectionCard>\r\n            )\r\n          })}\r\n          {!hasMinimumCakeRequired && (\r\n            <Text color=\"failure\" mb=\"16px\">\r\n              {t('A minimum of %num% CAKE is required', { num: MINT_COST })}\r\n            </Text>\r\n          )}\r\n          <ApproveConfirmButtons\r\n            isApproveDisabled={variationId === null || isConfirmed || isConfirming || isApproved}\r\n            isApproving={isApproving}\r\n            isConfirmDisabled={!isApproved || isConfirmed || !hasMinimumCakeRequired}\r\n            isConfirming={isConfirming}\r\n            onApprove={handleApprove}\r\n            onConfirm={handleConfirm}\r\n          />\r\n        </CardBody>\r\n      </Card>\r\n      <NextStepButton onClick={actions.nextStep} disabled={!isConfirmed}>\r\n        {t('Next Step')}\r\n      </NextStepButton>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Mint\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}