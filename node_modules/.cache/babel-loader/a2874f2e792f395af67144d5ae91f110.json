{"ast":null,"code":"import _taggedTemplateLiteral from\"C:/Users/frkul/Documents/swapUI_pancake-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2,_templateObject3,_templateObject4,_templateObject5;import React,{useEffect,useMemo,useRef,useState}from'react';import{useLocation}from'react-router-dom';import styled from'styled-components';import BigNumber from'bignumber.js';import{useWeb3React}from'@web3-react/core';import{Heading,Flex,Image,Text}from'@pancakeswap/uikit';import orderBy from'lodash/orderBy';import partition from'lodash/partition';import{useTranslation}from'contexts/Localization';import usePersistState from'hooks/usePersistState';import{useFetchPublicPoolsData,usePools,useFetchCakeVault,useCakeVault}from'state/pools/hooks';import{usePollFarmsData}from'state/farms/hooks';import{latinise}from'utils/latinise';import FlexLayout from'components/Layout/Flex';import Page from'components/Layout/Page';import PageHeader from'components/PageHeader';import SearchInput from'components/SearchInput';import Select from'components/Select/Select';import Loading from'components/Loading';import PoolCard from'./components/PoolCard';import CakeVaultCard from'./components/CakeVaultCard';import PoolTabButtons from'./components/PoolTabButtons';import BountyCard from'./components/BountyCard';import HelpButton from'./components/HelpButton';import PoolsTable from'./components/PoolsTable/PoolsTable';import{ViewMode}from'./components/ToggleView/ToggleView';import{getAprData,getCakeVaultEarnings}from'./helpers';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const CardLayout=styled(FlexLayout)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  justify-content: center;\\n\"])));const PoolControls=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  display: flex;\\n  width: 100%;\\n  align-items: center;\\n  position: relative;\\n\\n  justify-content: space-between;\\n  flex-direction: column;\\n  margin-bottom: 32px;\\n\\n  \",\" {\\n    flex-direction: row;\\n    flex-wrap: wrap;\\n    padding: 16px 32px;\\n    margin-bottom: 0;\\n  }\\n\"])),_ref=>{let{theme}=_ref;return theme.mediaQueries.sm;});const FilterContainer=styled.div(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  display: flex;\\n  align-items: center;\\n  width: 100%;\\n  padding: 8px 0px;\\n\\n  \",\" {\\n    width: auto;\\n    padding: 0;\\n  }\\n\"])),_ref2=>{let{theme}=_ref2;return theme.mediaQueries.sm;});const LabelWrapper=styled.div(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n  > \",\" {\\n    font-size: 12px;\\n  }\\n\"])),Text);const ControlStretch=styled(Flex)(_templateObject5||(_templateObject5=_taggedTemplateLiteral([\"\\n  > div {\\n    flex: 1;\\n  }\\n\"])));const NUMBER_OF_POOLS_VISIBLE=12;const Pools=()=>{const location=useLocation();const{t}=useTranslation();const{account}=useWeb3React();const{pools:poolsWithoutAutoVault,userDataLoaded}=usePools(account);const[stakedOnly,setStakedOnly]=usePersistState(false,{localStorageKey:'pancake_pool_staked'});const[numberOfPoolsVisible,setNumberOfPoolsVisible]=useState(NUMBER_OF_POOLS_VISIBLE);const[observerIsSet,setObserverIsSet]=useState(false);const loadMoreRef=useRef(null);const[viewMode,setViewMode]=usePersistState(ViewMode.TABLE,{localStorageKey:'pancake_pool_view'});const[searchQuery,setSearchQuery]=useState('');const[sortOption,setSortOption]=useState('hot');const chosenPoolsLength=useRef(0);const{userData:{cakeAtLastUserAction,userShares},fees:{performanceFee},pricePerFullShare,totalCakeInVault}=useCakeVault();const accountHasVaultShares=userShares&&userShares.gt(0);const performanceFeeAsDecimal=performanceFee&&performanceFee/100;const pools=useMemo(()=>{const cakePool=poolsWithoutAutoVault.find(pool=>pool.sousId===0);const cakeAutoVault={...cakePool,isAutoVault:true};return[cakeAutoVault,...poolsWithoutAutoVault];},[poolsWithoutAutoVault]);// TODO aren't arrays in dep array checked just by reference, i.e. it will rerender every time reference changes?\nconst[finishedPools,openPools]=useMemo(()=>partition(pools,pool=>pool.isFinished),[pools]);const stakedOnlyFinishedPools=useMemo(()=>finishedPools.filter(pool=>{if(pool.isAutoVault){return accountHasVaultShares;}return pool.userData&&new BigNumber(pool.userData.stakedBalance).isGreaterThan(0);}),[finishedPools,accountHasVaultShares]);const stakedOnlyOpenPools=useMemo(()=>openPools.filter(pool=>{if(pool.isAutoVault){return accountHasVaultShares;}return pool.userData&&new BigNumber(pool.userData.stakedBalance).isGreaterThan(0);}),[openPools,accountHasVaultShares]);const hasStakeInFinishedPools=stakedOnlyFinishedPools.length>0;usePollFarmsData();useFetchCakeVault();useFetchPublicPoolsData();useEffect(()=>{const showMorePools=entries=>{const[entry]=entries;if(entry.isIntersecting){setNumberOfPoolsVisible(poolsCurrentlyVisible=>{if(poolsCurrentlyVisible<=chosenPoolsLength.current){return poolsCurrentlyVisible+NUMBER_OF_POOLS_VISIBLE;}return poolsCurrentlyVisible;});}};if(!observerIsSet){const loadMoreObserver=new IntersectionObserver(showMorePools,{rootMargin:'0px',threshold:1});loadMoreObserver.observe(loadMoreRef.current);setObserverIsSet(true);}},[observerIsSet]);const showFinishedPools=location.pathname.includes('history');const handleChangeSearchQuery=event=>{setSearchQuery(event.target.value);};const handleSortOptionChange=option=>{setSortOption(option.value);};const sortPools=poolsToSort=>{switch(sortOption){case'apr':// Ternary is needed to prevent pools without APR (like MIX) getting top spot\nreturn orderBy(poolsToSort,pool=>pool.apr?getAprData(pool,performanceFeeAsDecimal).apr:0,'desc');case'earned':return orderBy(poolsToSort,pool=>{if(!pool.userData||!pool.earningTokenPrice){return 0;}return pool.isAutoVault?getCakeVaultEarnings(account,cakeAtLastUserAction,userShares,pricePerFullShare,pool.earningTokenPrice).autoUsdToDisplay:pool.userData.pendingReward.times(pool.earningTokenPrice).toNumber();},'desc');case'totalStaked':return orderBy(poolsToSort,pool=>pool.isAutoVault?totalCakeInVault.toNumber():pool.totalStaked.toNumber(),'desc');default:return poolsToSort;}};let chosenPools;if(showFinishedPools){chosenPools=stakedOnly?stakedOnlyFinishedPools:finishedPools;}else{chosenPools=stakedOnly?stakedOnlyOpenPools:openPools;}if(searchQuery){const lowercaseQuery=latinise(searchQuery.toLowerCase());chosenPools=chosenPools.filter(pool=>latinise(pool.earningToken.symbol.toLowerCase()).includes(lowercaseQuery));}chosenPools=sortPools(chosenPools).slice(0,numberOfPoolsVisible);chosenPoolsLength.current=chosenPools.length;const cardLayout=/*#__PURE__*/_jsx(CardLayout,{children:chosenPools.map(pool=>pool.isAutoVault?/*#__PURE__*/_jsx(CakeVaultCard,{pool:pool,showStakedOnly:stakedOnly},\"auto-cake\"):/*#__PURE__*/_jsx(PoolCard,{pool:pool,account:account},pool.sousId))});const tableLayout=/*#__PURE__*/_jsx(PoolsTable,{pools:chosenPools,account:account,userDataLoaded:userDataLoaded});return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(PageHeader,{children:/*#__PURE__*/_jsxs(Flex,{justifyContent:\"space-between\",flexDirection:['column',null,null,'row'],children:[/*#__PURE__*/_jsxs(Flex,{flex:\"1\",flexDirection:\"column\",mr:['8px',0],children:[/*#__PURE__*/_jsx(Heading,{as:\"h1\",scale:\"xxl\",color:\"secondary\",mb:\"24px\",children:t('Syrup Pools')}),/*#__PURE__*/_jsx(Heading,{scale:\"md\",color:\"text\",children:t('Just stake some tokens to earn.')}),/*#__PURE__*/_jsx(Heading,{scale:\"md\",color:\"text\",children:t('High APR, low risk.')})]}),/*#__PURE__*/_jsxs(Flex,{flex:\"1\",height:\"fit-content\",justifyContent:\"center\",alignItems:\"center\",mt:['24px',null,'0'],children:[/*#__PURE__*/_jsx(HelpButton,{}),/*#__PURE__*/_jsx(BountyCard,{})]})]})}),/*#__PURE__*/_jsxs(Page,{children:[/*#__PURE__*/_jsxs(PoolControls,{children:[/*#__PURE__*/_jsx(PoolTabButtons,{stakedOnly:stakedOnly,setStakedOnly:setStakedOnly,hasStakeInFinishedPools:hasStakeInFinishedPools,viewMode:viewMode,setViewMode:setViewMode}),/*#__PURE__*/_jsxs(FilterContainer,{children:[/*#__PURE__*/_jsxs(LabelWrapper,{children:[/*#__PURE__*/_jsx(Text,{fontSize:\"12px\",bold:true,color:\"textSubtle\",textTransform:\"uppercase\",children:t('Sort by')}),/*#__PURE__*/_jsx(ControlStretch,{children:/*#__PURE__*/_jsx(Select,{options:[{label:t('Hot'),value:'hot'},{label:t('APR'),value:'apr'},{label:t('Earned'),value:'earned'},{label:t('Total staked'),value:'totalStaked'}],onChange:handleSortOptionChange})})]}),/*#__PURE__*/_jsxs(LabelWrapper,{style:{marginLeft:16},children:[/*#__PURE__*/_jsx(Text,{fontSize:\"12px\",bold:true,color:\"textSubtle\",textTransform:\"uppercase\",children:t('Search')}),/*#__PURE__*/_jsx(SearchInput,{onChange:handleChangeSearchQuery,placeholder:\"Search Pools\"})]})]})]}),showFinishedPools&&/*#__PURE__*/_jsx(Text,{fontSize:\"20px\",color:\"failure\",pb:\"32px\",children:t('These pools are no longer distributing rewards. Please unstake your tokens.')}),account&&!userDataLoaded&&stakedOnly&&/*#__PURE__*/_jsx(Flex,{justifyContent:\"center\",mb:\"4px\",children:/*#__PURE__*/_jsx(Loading,{})}),viewMode===ViewMode.CARD?cardLayout:tableLayout,/*#__PURE__*/_jsx(\"div\",{ref:loadMoreRef}),/*#__PURE__*/_jsx(Image,{mx:\"auto\",mt:\"12px\",src:\"/images/decorations/3d-syrup-bunnies.png\",alt:\"Pancake illustration\",width:192,height:184.5})]})]});};export default Pools;","map":{"version":3,"names":["React","useEffect","useMemo","useRef","useState","useLocation","styled","BigNumber","useWeb3React","Heading","Flex","Image","Text","orderBy","partition","useTranslation","usePersistState","useFetchPublicPoolsData","usePools","useFetchCakeVault","useCakeVault","usePollFarmsData","latinise","FlexLayout","Page","PageHeader","SearchInput","Select","Loading","PoolCard","CakeVaultCard","PoolTabButtons","BountyCard","HelpButton","PoolsTable","ViewMode","getAprData","getCakeVaultEarnings","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","CardLayout","_templateObject","_taggedTemplateLiteral","PoolControls","div","_templateObject2","_ref","theme","mediaQueries","sm","FilterContainer","_templateObject3","_ref2","LabelWrapper","_templateObject4","ControlStretch","_templateObject5","NUMBER_OF_POOLS_VISIBLE","Pools","location","t","account","pools","poolsWithoutAutoVault","userDataLoaded","stakedOnly","setStakedOnly","localStorageKey","numberOfPoolsVisible","setNumberOfPoolsVisible","observerIsSet","setObserverIsSet","loadMoreRef","viewMode","setViewMode","TABLE","searchQuery","setSearchQuery","sortOption","setSortOption","chosenPoolsLength","userData","cakeAtLastUserAction","userShares","fees","performanceFee","pricePerFullShare","totalCakeInVault","accountHasVaultShares","gt","performanceFeeAsDecimal","cakePool","find","pool","sousId","cakeAutoVault","isAutoVault","finishedPools","openPools","isFinished","stakedOnlyFinishedPools","filter","stakedBalance","isGreaterThan","stakedOnlyOpenPools","hasStakeInFinishedPools","length","showMorePools","entries","entry","isIntersecting","poolsCurrentlyVisible","current","loadMoreObserver","IntersectionObserver","rootMargin","threshold","observe","showFinishedPools","pathname","includes","handleChangeSearchQuery","event","target","value","handleSortOptionChange","option","sortPools","poolsToSort","apr","earningTokenPrice","autoUsdToDisplay","pendingReward","times","toNumber","totalStaked","chosenPools","lowercaseQuery","toLowerCase","earningToken","symbol","slice","cardLayout","children","map","showStakedOnly","tableLayout","justifyContent","flexDirection","flex","mr","as","scale","color","mb","height","alignItems","mt","fontSize","bold","textTransform","options","label","onChange","style","marginLeft","placeholder","pb","CARD","ref","mx","src","alt","width"],"sources":["C:/Users/frkul/Documents/swapUI_pancake-frontend/src/views/Pools/index.tsx"],"sourcesContent":["import React, { useEffect, useMemo, useRef, useState } from 'react'\r\nimport { useLocation } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { Heading, Flex, Image, Text } from '@pancakeswap/uikit'\r\nimport orderBy from 'lodash/orderBy'\r\nimport partition from 'lodash/partition'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport usePersistState from 'hooks/usePersistState'\r\nimport { useFetchPublicPoolsData, usePools, useFetchCakeVault, useCakeVault } from 'state/pools/hooks'\r\nimport { usePollFarmsData } from 'state/farms/hooks'\r\nimport { latinise } from 'utils/latinise'\r\nimport FlexLayout from 'components/Layout/Flex'\r\nimport Page from 'components/Layout/Page'\r\nimport PageHeader from 'components/PageHeader'\r\nimport SearchInput from 'components/SearchInput'\r\nimport Select, { OptionProps } from 'components/Select/Select'\r\nimport { Pool } from 'state/types'\r\nimport Loading from 'components/Loading'\r\nimport PoolCard from './components/PoolCard'\r\nimport CakeVaultCard from './components/CakeVaultCard'\r\nimport PoolTabButtons from './components/PoolTabButtons'\r\nimport BountyCard from './components/BountyCard'\r\nimport HelpButton from './components/HelpButton'\r\nimport PoolsTable from './components/PoolsTable/PoolsTable'\r\nimport { ViewMode } from './components/ToggleView/ToggleView'\r\nimport { getAprData, getCakeVaultEarnings } from './helpers'\r\n\r\nconst CardLayout = styled(FlexLayout)`\r\n  justify-content: center;\r\n`\r\n\r\nconst PoolControls = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  align-items: center;\r\n  position: relative;\r\n\r\n  justify-content: space-between;\r\n  flex-direction: column;\r\n  margin-bottom: 32px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    flex-direction: row;\r\n    flex-wrap: wrap;\r\n    padding: 16px 32px;\r\n    margin-bottom: 0;\r\n  }\r\n`\r\n\r\nconst FilterContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n  padding: 8px 0px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    width: auto;\r\n    padding: 0;\r\n  }\r\n`\r\n\r\nconst LabelWrapper = styled.div`\r\n  > ${Text} {\r\n    font-size: 12px;\r\n  }\r\n`\r\n\r\nconst ControlStretch = styled(Flex)`\r\n  > div {\r\n    flex: 1;\r\n  }\r\n`\r\n\r\nconst NUMBER_OF_POOLS_VISIBLE = 12\r\n\r\nconst Pools: React.FC = () => {\r\n  const location = useLocation()\r\n  const { t } = useTranslation()\r\n  const { account } = useWeb3React()\r\n  const { pools: poolsWithoutAutoVault, userDataLoaded } = usePools(account)\r\n  const [stakedOnly, setStakedOnly] = usePersistState(false, { localStorageKey: 'pancake_pool_staked' })\r\n  const [numberOfPoolsVisible, setNumberOfPoolsVisible] = useState(NUMBER_OF_POOLS_VISIBLE)\r\n  const [observerIsSet, setObserverIsSet] = useState(false)\r\n  const loadMoreRef = useRef<HTMLDivElement>(null)\r\n  const [viewMode, setViewMode] = usePersistState(ViewMode.TABLE, { localStorageKey: 'pancake_pool_view' })\r\n  const [searchQuery, setSearchQuery] = useState('')\r\n  const [sortOption, setSortOption] = useState('hot')\r\n  const chosenPoolsLength = useRef(0)\r\n  const {\r\n    userData: { cakeAtLastUserAction, userShares },\r\n    fees: { performanceFee },\r\n    pricePerFullShare,\r\n    totalCakeInVault,\r\n  } = useCakeVault()\r\n  const accountHasVaultShares = userShares && userShares.gt(0)\r\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\r\n\r\n  const pools = useMemo(() => {\r\n    const cakePool = poolsWithoutAutoVault.find((pool) => pool.sousId === 0)\r\n    const cakeAutoVault = { ...cakePool, isAutoVault: true }\r\n    return [cakeAutoVault, ...poolsWithoutAutoVault]\r\n  }, [poolsWithoutAutoVault])\r\n\r\n  // TODO aren't arrays in dep array checked just by reference, i.e. it will rerender every time reference changes?\r\n  const [finishedPools, openPools] = useMemo(() => partition(pools, (pool) => pool.isFinished), [pools])\r\n  const stakedOnlyFinishedPools = useMemo(\r\n    () =>\r\n      finishedPools.filter((pool) => {\r\n        if (pool.isAutoVault) {\r\n          return accountHasVaultShares\r\n        }\r\n        return pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0)\r\n      }),\r\n    [finishedPools, accountHasVaultShares],\r\n  )\r\n  const stakedOnlyOpenPools = useMemo(\r\n    () =>\r\n      openPools.filter((pool) => {\r\n        if (pool.isAutoVault) {\r\n          return accountHasVaultShares\r\n        }\r\n        return pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0)\r\n      }),\r\n    [openPools, accountHasVaultShares],\r\n  )\r\n  const hasStakeInFinishedPools = stakedOnlyFinishedPools.length > 0\r\n\r\n  usePollFarmsData()\r\n  useFetchCakeVault()\r\n  useFetchPublicPoolsData()\r\n\r\n  useEffect(() => {\r\n    const showMorePools = (entries) => {\r\n      const [entry] = entries\r\n      if (entry.isIntersecting) {\r\n        setNumberOfPoolsVisible((poolsCurrentlyVisible) => {\r\n          if (poolsCurrentlyVisible <= chosenPoolsLength.current) {\r\n            return poolsCurrentlyVisible + NUMBER_OF_POOLS_VISIBLE\r\n          }\r\n          return poolsCurrentlyVisible\r\n        })\r\n      }\r\n    }\r\n\r\n    if (!observerIsSet) {\r\n      const loadMoreObserver = new IntersectionObserver(showMorePools, {\r\n        rootMargin: '0px',\r\n        threshold: 1,\r\n      })\r\n      loadMoreObserver.observe(loadMoreRef.current)\r\n      setObserverIsSet(true)\r\n    }\r\n  }, [observerIsSet])\r\n\r\n  const showFinishedPools = location.pathname.includes('history')\r\n\r\n  const handleChangeSearchQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setSearchQuery(event.target.value)\r\n  }\r\n\r\n  const handleSortOptionChange = (option: OptionProps): void => {\r\n    setSortOption(option.value)\r\n  }\r\n\r\n  const sortPools = (poolsToSort: Pool[]) => {\r\n    switch (sortOption) {\r\n      case 'apr':\r\n        // Ternary is needed to prevent pools without APR (like MIX) getting top spot\r\n        return orderBy(\r\n          poolsToSort,\r\n          (pool: Pool) => (pool.apr ? getAprData(pool, performanceFeeAsDecimal).apr : 0),\r\n          'desc',\r\n        )\r\n      case 'earned':\r\n        return orderBy(\r\n          poolsToSort,\r\n          (pool: Pool) => {\r\n            if (!pool.userData || !pool.earningTokenPrice) {\r\n              return 0\r\n            }\r\n            return pool.isAutoVault\r\n              ? getCakeVaultEarnings(\r\n                  account,\r\n                  cakeAtLastUserAction,\r\n                  userShares,\r\n                  pricePerFullShare,\r\n                  pool.earningTokenPrice,\r\n                ).autoUsdToDisplay\r\n              : pool.userData.pendingReward.times(pool.earningTokenPrice).toNumber()\r\n          },\r\n          'desc',\r\n        )\r\n      case 'totalStaked':\r\n        return orderBy(\r\n          poolsToSort,\r\n          (pool: Pool) => (pool.isAutoVault ? totalCakeInVault.toNumber() : pool.totalStaked.toNumber()),\r\n          'desc',\r\n        )\r\n      default:\r\n        return poolsToSort\r\n    }\r\n  }\r\n\r\n  let chosenPools\r\n  if (showFinishedPools) {\r\n    chosenPools = stakedOnly ? stakedOnlyFinishedPools : finishedPools\r\n  } else {\r\n    chosenPools = stakedOnly ? stakedOnlyOpenPools : openPools\r\n  }\r\n\r\n  if (searchQuery) {\r\n    const lowercaseQuery = latinise(searchQuery.toLowerCase())\r\n    chosenPools = chosenPools.filter((pool) =>\r\n      latinise(pool.earningToken.symbol.toLowerCase()).includes(lowercaseQuery),\r\n    )\r\n  }\r\n\r\n  chosenPools = sortPools(chosenPools).slice(0, numberOfPoolsVisible)\r\n  chosenPoolsLength.current = chosenPools.length\r\n\r\n  const cardLayout = (\r\n    <CardLayout>\r\n      {chosenPools.map((pool) =>\r\n        pool.isAutoVault ? (\r\n          <CakeVaultCard key=\"auto-cake\" pool={pool} showStakedOnly={stakedOnly} />\r\n        ) : (\r\n          <PoolCard key={pool.sousId} pool={pool} account={account} />\r\n        ),\r\n      )}\r\n    </CardLayout>\r\n  )\r\n\r\n  const tableLayout = <PoolsTable pools={chosenPools} account={account} userDataLoaded={userDataLoaded} />\r\n\r\n  return (\r\n    <>\r\n      <PageHeader>\r\n        <Flex justifyContent=\"space-between\" flexDirection={['column', null, null, 'row']}>\r\n          <Flex flex=\"1\" flexDirection=\"column\" mr={['8px', 0]}>\r\n            <Heading as=\"h1\" scale=\"xxl\" color=\"secondary\" mb=\"24px\">\r\n              {t('Syrup Pools')}\r\n            </Heading>\r\n            <Heading scale=\"md\" color=\"text\">\r\n              {t('Just stake some tokens to earn.')}\r\n            </Heading>\r\n            <Heading scale=\"md\" color=\"text\">\r\n              {t('High APR, low risk.')}\r\n            </Heading>\r\n          </Flex>\r\n          <Flex flex=\"1\" height=\"fit-content\" justifyContent=\"center\" alignItems=\"center\" mt={['24px', null, '0']}>\r\n            <HelpButton />\r\n            <BountyCard />\r\n          </Flex>\r\n        </Flex>\r\n      </PageHeader>\r\n      <Page>\r\n        <PoolControls>\r\n          <PoolTabButtons\r\n            stakedOnly={stakedOnly}\r\n            setStakedOnly={setStakedOnly}\r\n            hasStakeInFinishedPools={hasStakeInFinishedPools}\r\n            viewMode={viewMode}\r\n            setViewMode={setViewMode}\r\n          />\r\n          <FilterContainer>\r\n            <LabelWrapper>\r\n              <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\">\r\n                {t('Sort by')}\r\n              </Text>\r\n              <ControlStretch>\r\n                <Select\r\n                  options={[\r\n                    {\r\n                      label: t('Hot'),\r\n                      value: 'hot',\r\n                    },\r\n                    {\r\n                      label: t('APR'),\r\n                      value: 'apr',\r\n                    },\r\n                    {\r\n                      label: t('Earned'),\r\n                      value: 'earned',\r\n                    },\r\n                    {\r\n                      label: t('Total staked'),\r\n                      value: 'totalStaked',\r\n                    },\r\n                  ]}\r\n                  onChange={handleSortOptionChange}\r\n                />\r\n              </ControlStretch>\r\n            </LabelWrapper>\r\n            <LabelWrapper style={{ marginLeft: 16 }}>\r\n              <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\">\r\n                {t('Search')}\r\n              </Text>\r\n              <SearchInput onChange={handleChangeSearchQuery} placeholder=\"Search Pools\" />\r\n            </LabelWrapper>\r\n          </FilterContainer>\r\n        </PoolControls>\r\n        {showFinishedPools && (\r\n          <Text fontSize=\"20px\" color=\"failure\" pb=\"32px\">\r\n            {t('These pools are no longer distributing rewards. Please unstake your tokens.')}\r\n          </Text>\r\n        )}\r\n        {account && !userDataLoaded && stakedOnly && (\r\n          <Flex justifyContent=\"center\" mb=\"4px\">\r\n            <Loading />\r\n          </Flex>\r\n        )}\r\n        {viewMode === ViewMode.CARD ? cardLayout : tableLayout}\r\n        <div ref={loadMoreRef} />\r\n        <Image\r\n          mx=\"auto\"\r\n          mt=\"12px\"\r\n          src=\"/images/decorations/3d-syrup-bunnies.png\"\r\n          alt=\"Pancake illustration\"\r\n          width={192}\r\n          height={184.5}\r\n        />\r\n      </Page>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Pools\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}