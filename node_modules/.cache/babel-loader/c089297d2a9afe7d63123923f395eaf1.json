{"ast":null,"code":"var _s = $RefreshSig$();\nimport { namehash } from 'ethers/lib/utils';\nimport { useMemo } from 'react';\nimport { useSingleCallResult } from '../../state/multicall/hooks';\nimport isZero from '../../utils/isZero';\nimport { useENSRegistrarContract, useENSResolverContract } from '../useContract';\nimport useDebounce from '../useDebounce';\n\n/**\r\n * Does a lookup for an ENS name to find its address.\r\n */\nexport default function useENSAddress(ensName) {\n  _s();\n  var _resolverAddress$resu, _addr$result$, _addr$result;\n  const debouncedName = useDebounce(ensName, 200);\n  const ensNodeArgument = useMemo(() => {\n    if (!debouncedName) return [undefined];\n    try {\n      return debouncedName ? [namehash(debouncedName)] : [undefined];\n    } catch (error) {\n      return [undefined];\n    }\n  }, [debouncedName]);\n  const registrarContract = useENSRegistrarContract(false);\n  const resolverAddress = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument);\n  const resolverAddressResult = (_resolverAddress$resu = resolverAddress.result) === null || _resolverAddress$resu === void 0 ? void 0 : _resolverAddress$resu[0];\n  const resolverContract = useENSResolverContract(resolverAddressResult && !isZero(resolverAddressResult) ? resolverAddressResult : undefined, false);\n  const addr = useSingleCallResult(resolverContract, 'addr', ensNodeArgument);\n  const changed = debouncedName !== ensName;\n  return {\n    address: changed ? null : (_addr$result$ = (_addr$result = addr.result) === null || _addr$result === void 0 ? void 0 : _addr$result[0]) !== null && _addr$result$ !== void 0 ? _addr$result$ : null,\n    loading: changed || resolverAddress.loading || addr.loading\n  };\n}\n_s(useENSAddress, \"YwC+kqewI9fPAziK0MJ7H92F1SM=\", false, function () {\n  return [useDebounce, useENSRegistrarContract, useSingleCallResult, useENSResolverContract, useSingleCallResult];\n});","map":{"version":3,"names":["namehash","useMemo","useSingleCallResult","isZero","useENSRegistrarContract","useENSResolverContract","useDebounce","useENSAddress","ensName","_s","_resolverAddress$resu","_addr$result$","_addr$result","debouncedName","ensNodeArgument","undefined","error","registrarContract","resolverAddress","resolverAddressResult","result","resolverContract","addr","changed","address","loading"],"sources":["C:/Users/Devrim/Documents/swapUIforProspBlast/src/hooks/ENS/useENSAddress.ts"],"sourcesContent":["import { namehash } from 'ethers/lib/utils'\r\nimport { useMemo } from 'react'\r\nimport { useSingleCallResult } from '../../state/multicall/hooks'\r\nimport isZero from '../../utils/isZero'\r\nimport { useENSRegistrarContract, useENSResolverContract } from '../useContract'\r\nimport useDebounce from '../useDebounce'\r\n\r\n/**\r\n * Does a lookup for an ENS name to find its address.\r\n */\r\nexport default function useENSAddress(ensName?: string | null): { loading: boolean; address: string | null } {\r\n  const debouncedName = useDebounce(ensName, 200)\r\n  const ensNodeArgument = useMemo(() => {\r\n    if (!debouncedName) return [undefined]\r\n    try {\r\n      return debouncedName ? [namehash(debouncedName)] : [undefined]\r\n    } catch (error) {\r\n      return [undefined]\r\n    }\r\n  }, [debouncedName])\r\n  const registrarContract = useENSRegistrarContract(false)\r\n  const resolverAddress = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument)\r\n  const resolverAddressResult = resolverAddress.result?.[0]\r\n  const resolverContract = useENSResolverContract(\r\n    resolverAddressResult && !isZero(resolverAddressResult) ? resolverAddressResult : undefined,\r\n    false,\r\n  )\r\n  const addr = useSingleCallResult(resolverContract, 'addr', ensNodeArgument)\r\n\r\n  const changed = debouncedName !== ensName\r\n  return {\r\n    address: changed ? null : addr.result?.[0] ?? null,\r\n    loading: changed || resolverAddress.loading || addr.loading,\r\n  }\r\n}\r\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,OAAO,QAAQ,OAAO;AAC/B,SAASC,mBAAmB,QAAQ,6BAA6B;AACjE,OAAOC,MAAM,MAAM,oBAAoB;AACvC,SAASC,uBAAuB,EAAEC,sBAAsB,QAAQ,gBAAgB;AAChF,OAAOC,WAAW,MAAM,gBAAgB;;AAExC;AACA;AACA;AACA,eAAe,SAASC,aAAaA,CAACC,OAAuB,EAAgD;EAAAC,EAAA;EAAA,IAAAC,qBAAA,EAAAC,aAAA,EAAAC,YAAA;EAC3G,MAAMC,aAAa,GAAGP,WAAW,CAACE,OAAO,EAAE,GAAG,CAAC;EAC/C,MAAMM,eAAe,GAAGb,OAAO,CAAC,MAAM;IACpC,IAAI,CAACY,aAAa,EAAE,OAAO,CAACE,SAAS,CAAC;IACtC,IAAI;MACF,OAAOF,aAAa,GAAG,CAACb,QAAQ,CAACa,aAAa,CAAC,CAAC,GAAG,CAACE,SAAS,CAAC;IAChE,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd,OAAO,CAACD,SAAS,CAAC;IACpB;EACF,CAAC,EAAE,CAACF,aAAa,CAAC,CAAC;EACnB,MAAMI,iBAAiB,GAAGb,uBAAuB,CAAC,KAAK,CAAC;EACxD,MAAMc,eAAe,GAAGhB,mBAAmB,CAACe,iBAAiB,EAAE,UAAU,EAAEH,eAAe,CAAC;EAC3F,MAAMK,qBAAqB,IAAAT,qBAAA,GAAGQ,eAAe,CAACE,MAAM,cAAAV,qBAAA,uBAAtBA,qBAAA,CAAyB,CAAC,CAAC;EACzD,MAAMW,gBAAgB,GAAGhB,sBAAsB,CAC7Cc,qBAAqB,IAAI,CAAChB,MAAM,CAACgB,qBAAqB,CAAC,GAAGA,qBAAqB,GAAGJ,SAAS,EAC3F,KACF,CAAC;EACD,MAAMO,IAAI,GAAGpB,mBAAmB,CAACmB,gBAAgB,EAAE,MAAM,EAAEP,eAAe,CAAC;EAE3E,MAAMS,OAAO,GAAGV,aAAa,KAAKL,OAAO;EACzC,OAAO;IACLgB,OAAO,EAAED,OAAO,GAAG,IAAI,IAAAZ,aAAA,IAAAC,YAAA,GAAGU,IAAI,CAACF,MAAM,cAAAR,YAAA,uBAAXA,YAAA,CAAc,CAAC,CAAC,cAAAD,aAAA,cAAAA,aAAA,GAAI,IAAI;IAClDc,OAAO,EAAEF,OAAO,IAAIL,eAAe,CAACO,OAAO,IAAIH,IAAI,CAACG;EACtD,CAAC;AACH;AAAChB,EAAA,CAxBuBF,aAAa;EAAA,QACbD,WAAW,EASPF,uBAAuB,EACzBF,mBAAmB,EAElBG,sBAAsB,EAIlCH,mBAAmB;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}