{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Devrim\\\\Documents\\\\FRANKswapUIforProspBlast\\\\src\\\\views\\\\Pools\\\\components\\\\PoolCard\\\\CardFooter\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { useTranslation } from 'contexts/Localization';\nimport { Flex, CardFooter, ExpandableLabel, HelpIcon, useTooltip } from '@pancakeswap/uikit';\nimport { CompoundingPoolTag, ManualPoolTag } from 'components/Tags';\nimport ExpandedFooter from './ExpandedFooter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExpandableButtonWrapper = styled(Flex)`\n  align-items: center;\n  justify-content: space-between;\n  button {\n    padding: 0;\n  }\n`;\n_c = ExpandableButtonWrapper;\n\nconst Footer = ({\n  pool,\n  account\n}) => {\n  _s();\n\n  const {\n    isAutoVault\n  } = pool;\n  const {\n    t\n  } = useTranslation();\n  const [isExpanded, setIsExpanded] = useState(false);\n  const manualTooltipText = t('You must harvest and compound your earnings from this pool manually.');\n  const autoTooltipText = t('Any funds you stake in this pool will be automagically harvested and restaked (compounded) for you.');\n  const {\n    targetRef,\n    tooltip,\n    tooltipVisible\n  } = useTooltip(isAutoVault ? autoTooltipText : manualTooltipText, {\n    placement: 'bottom'\n  });\n  return /*#__PURE__*/_jsxDEV(CardFooter, {\n    children: [/*#__PURE__*/_jsxDEV(ExpandableButtonWrapper, {\n      children: [/*#__PURE__*/_jsxDEV(Flex, {\n        alignItems: \"center\",\n        children: [isAutoVault ? /*#__PURE__*/_jsxDEV(CompoundingPoolTag, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 26\n        }, this) : /*#__PURE__*/_jsxDEV(ManualPoolTag, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 51\n        }, this), tooltipVisible && tooltip, /*#__PURE__*/_jsxDEV(Flex, {\n          ref: targetRef,\n          children: /*#__PURE__*/_jsxDEV(HelpIcon, {\n            ml: \"4px\",\n            width: \"20px\",\n            height: \"20px\",\n            color: \"textSubtle\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ExpandableLabel, {\n        expanded: isExpanded,\n        onClick: () => setIsExpanded(!isExpanded),\n        children: isExpanded ? t('Hide') : t('Details')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), isExpanded && /*#__PURE__*/_jsxDEV(ExpandedFooter, {\n      pool: pool,\n      account: account\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 22\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Footer, \"h4bvO/nByLs1hy6Gg4XHhxAGT+c=\", false, function () {\n  return [useTranslation, useTooltip];\n});\n\n_c2 = Footer;\nexport default Footer;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ExpandableButtonWrapper\");\n$RefreshReg$(_c2, \"Footer\");","map":{"version":3,"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/views/Pools/components/PoolCard/CardFooter/index.tsx"],"names":["React","useState","styled","useTranslation","Flex","CardFooter","ExpandableLabel","HelpIcon","useTooltip","CompoundingPoolTag","ManualPoolTag","ExpandedFooter","ExpandableButtonWrapper","Footer","pool","account","isAutoVault","t","isExpanded","setIsExpanded","manualTooltipText","autoTooltipText","targetRef","tooltip","tooltipVisible","placement"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,cAAT,QAA+B,uBAA/B;AACA,SAASC,IAAT,EAAeC,UAAf,EAA2BC,eAA3B,EAA4CC,QAA5C,EAAsDC,UAAtD,QAAwE,oBAAxE;AAEA,SAASC,kBAAT,EAA6BC,aAA7B,QAAkD,iBAAlD;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;AAQA,MAAMC,uBAAuB,GAAGV,MAAM,CAACE,IAAD,CAAO;AAC7C;AACA;AACA;AACA;AACA;AACA,CANA;KAAMQ,uB;;AAQN,MAAMC,MAA6B,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAAuB;AAAA;;AAC3D,QAAM;AAAEC,IAAAA;AAAF,MAAkBF,IAAxB;AACA,QAAM;AAAEG,IAAAA;AAAF,MAAQd,cAAc,EAA5B;AACA,QAAM,CAACe,UAAD,EAAaC,aAAb,IAA8BlB,QAAQ,CAAC,KAAD,CAA5C;AAEA,QAAMmB,iBAAiB,GAAGH,CAAC,CAAC,sEAAD,CAA3B;AACA,QAAMI,eAAe,GAAGJ,CAAC,CACvB,qGADuB,CAAzB;AAIA,QAAM;AAAEK,IAAAA,SAAF;AAAaC,IAAAA,OAAb;AAAsBC,IAAAA;AAAtB,MAAyChB,UAAU,CAACQ,WAAW,GAAGK,eAAH,GAAqBD,iBAAjC,EAAoD;AAC3GK,IAAAA,SAAS,EAAE;AADgG,GAApD,CAAzD;AAIA,sBACE,QAAC,UAAD;AAAA,4BACE,QAAC,uBAAD;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,UAAU,EAAC,QAAjB;AAAA,mBACGT,WAAW,gBAAG,QAAC,kBAAD;AAAA;AAAA;AAAA;AAAA,gBAAH,gBAA4B,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,gBAD1C,EAEGQ,cAAc,IAAID,OAFrB,eAGE,QAAC,IAAD;AAAM,UAAA,GAAG,EAAED,SAAX;AAAA,iCACE,QAAC,QAAD;AAAU,YAAA,EAAE,EAAC,KAAb;AAAmB,YAAA,KAAK,EAAC,MAAzB;AAAgC,YAAA,MAAM,EAAC,MAAvC;AAA8C,YAAA,KAAK,EAAC;AAApD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAQE,QAAC,eAAD;AAAiB,QAAA,QAAQ,EAAEJ,UAA3B;AAAuC,QAAA,OAAO,EAAE,MAAMC,aAAa,CAAC,CAACD,UAAF,CAAnE;AAAA,kBACGA,UAAU,GAAGD,CAAC,CAAC,MAAD,CAAJ,GAAeA,CAAC,CAAC,SAAD;AAD7B;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAaGC,UAAU,iBAAI,QAAC,cAAD;AAAgB,MAAA,IAAI,EAAEJ,IAAtB;AAA4B,MAAA,OAAO,EAAEC;AAArC;AAAA;AAAA;AAAA;AAAA,YAbjB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CA/BD;;GAAMF,M;UAEUV,c,EAQiCK,U;;;MAV3CK,M;AAiCN,eAAeA,MAAf","sourcesContent":["import React, { useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport styled from 'styled-components'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { Flex, CardFooter, ExpandableLabel, HelpIcon, useTooltip } from '@pancakeswap/uikit'\r\nimport { Pool } from 'state/types'\r\nimport { CompoundingPoolTag, ManualPoolTag } from 'components/Tags'\r\nimport ExpandedFooter from './ExpandedFooter'\r\n\r\ninterface FooterProps {\r\n  pool: Pool\r\n  account: string\r\n  totalCakeInVault?: BigNumber\r\n}\r\n\r\nconst ExpandableButtonWrapper = styled(Flex)`\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  button {\r\n    padding: 0;\r\n  }\r\n`\r\n\r\nconst Footer: React.FC<FooterProps> = ({ pool, account }) => {\r\n  const { isAutoVault } = pool\r\n  const { t } = useTranslation()\r\n  const [isExpanded, setIsExpanded] = useState(false)\r\n\r\n  const manualTooltipText = t('You must harvest and compound your earnings from this pool manually.')\r\n  const autoTooltipText = t(\r\n    'Any funds you stake in this pool will be automagically harvested and restaked (compounded) for you.',\r\n  )\r\n\r\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(isAutoVault ? autoTooltipText : manualTooltipText, {\r\n    placement: 'bottom',\r\n  })\r\n\r\n  return (\r\n    <CardFooter>\r\n      <ExpandableButtonWrapper>\r\n        <Flex alignItems=\"center\">\r\n          {isAutoVault ? <CompoundingPoolTag /> : <ManualPoolTag />}\r\n          {tooltipVisible && tooltip}\r\n          <Flex ref={targetRef}>\r\n            <HelpIcon ml=\"4px\" width=\"20px\" height=\"20px\" color=\"textSubtle\" />\r\n          </Flex>\r\n        </Flex>\r\n        <ExpandableLabel expanded={isExpanded} onClick={() => setIsExpanded(!isExpanded)}>\r\n          {isExpanded ? t('Hide') : t('Details')}\r\n        </ExpandableLabel>\r\n      </ExpandableButtonWrapper>\r\n      {isExpanded && <ExpandedFooter pool={pool} account={account} />}\r\n    </CardFooter>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n"]},"metadata":{},"sourceType":"module"}