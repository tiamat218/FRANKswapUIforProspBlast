{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Devrim\\\\Documents\\\\FRANKswapUIforProspBlast\\\\src\\\\views\\\\Profile\\\\components\\\\ConfirmProfileCreationModal.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Modal, Flex, Text } from '@pancakeswap/uikit';\nimport { useAppDispatch } from 'state';\nimport BigNumber from 'bignumber.js';\nimport { useTranslation } from 'contexts/Localization';\nimport { useCake, useProfile } from 'hooks/useContract';\nimport useApproveConfirmTransaction from 'hooks/useApproveConfirmTransaction';\nimport { fetchProfile } from 'state/profile';\nimport useToast from 'hooks/useToast';\nimport { REGISTER_COST } from '../ProfileCreation/config';\nimport ApproveConfirmButtons from './ApproveConfirmButtons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ConfirmProfileCreationModal = ({\n  account,\n  teamId,\n  selectedNft,\n  minimumCakeRequired,\n  allowance,\n  onDismiss\n}) => {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  const profileContract = useProfile();\n  const dispatch = useAppDispatch();\n  const {\n    toastSuccess\n  } = useToast();\n  const cakeContract = useCake();\n  const {\n    isApproving,\n    isApproved,\n    isConfirmed,\n    isConfirming,\n    handleApprove,\n    handleConfirm\n  } = useApproveConfirmTransaction({\n    onRequiresApproval: async () => {\n      try {\n        const response = await cakeContract.allowance(account, profileContract.address);\n        const currentAllowance = new BigNumber(response.toString());\n        return currentAllowance.gte(minimumCakeRequired);\n      } catch (error) {\n        return false;\n      }\n    },\n    onApprove: () => {\n      return cakeContract.approve(profileContract.address, allowance.toJSON());\n    },\n    onConfirm: () => {\n      return profileContract.createProfile(teamId, selectedNft.nftAddress, selectedNft.tokenId);\n    },\n    onSuccess: async () => {\n      await dispatch(fetchProfile(account));\n      onDismiss();\n      toastSuccess(t('Profile created!'));\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    title: t('Complete Profile'),\n    onDismiss: onDismiss,\n    children: [/*#__PURE__*/_jsxDEV(Text, {\n      color: \"textSubtle\",\n      mb: \"8px\",\n      children: t('Submitting NFT to contract and confirming User Name and Team.')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Flex, {\n      justifyContent: \"space-between\",\n      mb: \"16px\",\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        children: t('Cost')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        children: t('%num% CAKE', {\n          num: REGISTER_COST\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ApproveConfirmButtons, {\n      isApproveDisabled: isConfirmed || isConfirming || isApproved,\n      isApproving: isApproving,\n      isConfirmDisabled: !isApproved || isConfirmed,\n      isConfirming: isConfirming,\n      onApprove: handleApprove,\n      onConfirm: handleConfirm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ConfirmProfileCreationModal, \"QhYDtlgUAHIMjzGMhiZ94yzlT9Q=\", false, function () {\n  return [useTranslation, useProfile, useAppDispatch, useToast, useCake, useApproveConfirmTransaction];\n});\n\n_c = ConfirmProfileCreationModal;\nexport default ConfirmProfileCreationModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"ConfirmProfileCreationModal\");","map":{"version":3,"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/views/Profile/components/ConfirmProfileCreationModal.tsx"],"names":["React","Modal","Flex","Text","useAppDispatch","BigNumber","useTranslation","useCake","useProfile","useApproveConfirmTransaction","fetchProfile","useToast","REGISTER_COST","ApproveConfirmButtons","ConfirmProfileCreationModal","account","teamId","selectedNft","minimumCakeRequired","allowance","onDismiss","t","profileContract","dispatch","toastSuccess","cakeContract","isApproving","isApproved","isConfirmed","isConfirming","handleApprove","handleConfirm","onRequiresApproval","response","address","currentAllowance","toString","gte","error","onApprove","approve","toJSON","onConfirm","createProfile","nftAddress","tokenId","onSuccess","num"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Modal, Flex, Text } from '@pancakeswap/uikit'\r\nimport { useAppDispatch } from 'state'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useCake, useProfile } from 'hooks/useContract'\r\nimport useApproveConfirmTransaction from 'hooks/useApproveConfirmTransaction'\r\nimport { fetchProfile } from 'state/profile'\r\nimport useToast from 'hooks/useToast'\r\nimport { REGISTER_COST } from '../ProfileCreation/config'\r\nimport ApproveConfirmButtons from './ApproveConfirmButtons'\r\nimport { State } from '../ProfileCreation/contexts/types'\r\n\r\ninterface Props {\r\n  userName: string\r\n  selectedNft: State['selectedNft']\r\n  account: string\r\n  teamId: number\r\n  minimumCakeRequired: BigNumber\r\n  allowance: BigNumber\r\n  onDismiss?: () => void\r\n}\r\n\r\nconst ConfirmProfileCreationModal: React.FC<Props> = ({\r\n  account,\r\n  teamId,\r\n  selectedNft,\r\n  minimumCakeRequired,\r\n  allowance,\r\n  onDismiss,\r\n}) => {\r\n  const { t } = useTranslation()\r\n  const profileContract = useProfile()\r\n  const dispatch = useAppDispatch()\r\n  const { toastSuccess } = useToast()\r\n  const cakeContract = useCake()\r\n\r\n  const { isApproving, isApproved, isConfirmed, isConfirming, handleApprove, handleConfirm } =\r\n    useApproveConfirmTransaction({\r\n      onRequiresApproval: async () => {\r\n        try {\r\n          const response = await cakeContract.allowance(account, profileContract.address)\r\n          const currentAllowance = new BigNumber(response.toString())\r\n          return currentAllowance.gte(minimumCakeRequired)\r\n        } catch (error) {\r\n          return false\r\n        }\r\n      },\r\n      onApprove: () => {\r\n        return cakeContract.approve(profileContract.address, allowance.toJSON())\r\n      },\r\n      onConfirm: () => {\r\n        return profileContract.createProfile(teamId, selectedNft.nftAddress, selectedNft.tokenId)\r\n      },\r\n      onSuccess: async () => {\r\n        await dispatch(fetchProfile(account))\r\n        onDismiss()\r\n        toastSuccess(t('Profile created!'))\r\n      },\r\n    })\r\n\r\n  return (\r\n    <Modal title={t('Complete Profile')} onDismiss={onDismiss}>\r\n      <Text color=\"textSubtle\" mb=\"8px\">\r\n        {t('Submitting NFT to contract and confirming User Name and Team.')}\r\n      </Text>\r\n      <Flex justifyContent=\"space-between\" mb=\"16px\">\r\n        <Text>{t('Cost')}</Text>\r\n        <Text>{t('%num% CAKE', { num: REGISTER_COST })}</Text>\r\n      </Flex>\r\n      <ApproveConfirmButtons\r\n        isApproveDisabled={isConfirmed || isConfirming || isApproved}\r\n        isApproving={isApproving}\r\n        isConfirmDisabled={!isApproved || isConfirmed}\r\n        isConfirming={isConfirming}\r\n        onApprove={handleApprove}\r\n        onConfirm={handleConfirm}\r\n      />\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default ConfirmProfileCreationModal\r\n"]},"metadata":{},"sourceType":"module"}