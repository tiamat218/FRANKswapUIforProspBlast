{"ast":null,"code":"const ENS_NAME_REGEX=/^(([a-zA-Z0-9]+(-[a-zA-Z0-9]+)*\\.)+)eth(\\/.*)?$/;export function parseENSAddress(ensAddress){const match=ensAddress.match(ENS_NAME_REGEX);if(!match)return undefined;return{ensName:\"\".concat(match[1].toLowerCase(),\"eth\"),ensPath:match[4]};}export default parseENSAddress;","map":{"version":3,"names":["ENS_NAME_REGEX","parseENSAddress","ensAddress","match","undefined","ensName","concat","toLowerCase","ensPath"],"sources":["C:/Users/frkul/Documents/swapUI_pancake-frontend/src/utils/ENS/parseENSAddress.ts"],"sourcesContent":["const ENS_NAME_REGEX = /^(([a-zA-Z0-9]+(-[a-zA-Z0-9]+)*\\.)+)eth(\\/.*)?$/\r\n\r\nexport function parseENSAddress(ensAddress: string): { ensName: string; ensPath: string | undefined } | undefined {\r\n  const match = ensAddress.match(ENS_NAME_REGEX)\r\n  if (!match) return undefined\r\n  return { ensName: `${match[1].toLowerCase()}eth`, ensPath: match[4] }\r\n}\r\n\r\nexport default parseENSAddress\r\n"],"mappings":"AAAA,KAAM,CAAAA,cAAc,CAAG,iDAAiD,CAExE,MAAO,SAAS,CAAAC,eAAeA,CAACC,UAAkB,CAAgE,CAChH,KAAM,CAAAC,KAAK,CAAGD,UAAU,CAACC,KAAK,CAACH,cAAc,CAAC,CAC9C,GAAI,CAACG,KAAK,CAAE,MAAO,CAAAC,SAAS,CAC5B,MAAO,CAAEC,OAAO,IAAAC,MAAA,CAAKH,KAAK,CAAC,CAAC,CAAC,CAACI,WAAW,CAAC,CAAC,OAAK,CAAEC,OAAO,CAAEL,KAAK,CAAC,CAAC,CAAE,CAAC,CACvE,CAEA,cAAe,CAAAF,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module"}