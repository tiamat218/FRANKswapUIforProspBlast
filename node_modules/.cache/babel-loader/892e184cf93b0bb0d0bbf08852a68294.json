{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { useWeb3React } from '@web3-react/core';\nimport { useGetLotteriesGraphData, useGetUserLotteriesGraphData, useLottery } from 'state/lottery/hooks';\nimport fetchUnclaimedUserRewards from 'state/lottery/fetchUnclaimedUserRewards';\nexport let FetchStatus;\n(function (FetchStatus) {\n  FetchStatus[\"NOT_FETCHED\"] = \"not-fetched\";\n  FetchStatus[\"IN_PROGRESS\"] = \"in-progress\";\n  FetchStatus[\"SUCCESS\"] = \"success\";\n})(FetchStatus || (FetchStatus = {}));\nconst useGetUnclaimedRewards = () => {\n  _s();\n  const {\n    account\n  } = useWeb3React();\n  const {\n    isTransitioning\n  } = useLottery();\n  const userLotteryData = useGetUserLotteriesGraphData();\n  const lotteriesData = useGetLotteriesGraphData();\n  const [unclaimedRewards, setUnclaimedRewards] = useState([]);\n  const [fetchStatus, setFetchStatus] = useState(FetchStatus.NOT_FETCHED);\n  useEffect(() => {\n    // Reset on account change and round transition\n    setFetchStatus(FetchStatus.NOT_FETCHED);\n  }, [account, isTransitioning]);\n  const fetchAllRewards = async () => {\n    setFetchStatus(FetchStatus.IN_PROGRESS);\n    const unclaimedRewardsResponse = await fetchUnclaimedUserRewards(account, userLotteryData, lotteriesData);\n    setUnclaimedRewards(unclaimedRewardsResponse);\n    setFetchStatus(FetchStatus.SUCCESS);\n  };\n  return {\n    fetchAllRewards,\n    unclaimedRewards,\n    fetchStatus\n  };\n};\n_s(useGetUnclaimedRewards, \"hBY+uicqD/0Xf1Hv3DsqxZf+qq8=\", false, function () {\n  return [useWeb3React, useLottery, useGetUserLotteriesGraphData, useGetLotteriesGraphData];\n});\nexport default useGetUnclaimedRewards;","map":{"version":3,"names":["useState","useEffect","useWeb3React","useGetLotteriesGraphData","useGetUserLotteriesGraphData","useLottery","fetchUnclaimedUserRewards","FetchStatus","useGetUnclaimedRewards","_s","account","isTransitioning","userLotteryData","lotteriesData","unclaimedRewards","setUnclaimedRewards","fetchStatus","setFetchStatus","NOT_FETCHED","fetchAllRewards","IN_PROGRESS","unclaimedRewardsResponse","SUCCESS"],"sources":["C:/Users/Devrim/Documents/swapUIforProspBlast/src/views/Lottery/hooks/useGetUnclaimedRewards.ts"],"sourcesContent":["import { useState, useEffect } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useGetLotteriesGraphData, useGetUserLotteriesGraphData, useLottery } from 'state/lottery/hooks'\r\nimport fetchUnclaimedUserRewards from 'state/lottery/fetchUnclaimedUserRewards'\r\n\r\nexport enum FetchStatus {\r\n  NOT_FETCHED = 'not-fetched',\r\n  IN_PROGRESS = 'in-progress',\r\n  SUCCESS = 'success',\r\n}\r\n\r\nconst useGetUnclaimedRewards = () => {\r\n  const { account } = useWeb3React()\r\n  const { isTransitioning } = useLottery()\r\n  const userLotteryData = useGetUserLotteriesGraphData()\r\n  const lotteriesData = useGetLotteriesGraphData()\r\n  const [unclaimedRewards, setUnclaimedRewards] = useState([])\r\n  const [fetchStatus, setFetchStatus] = useState(FetchStatus.NOT_FETCHED)\r\n\r\n  useEffect(() => {\r\n    // Reset on account change and round transition\r\n    setFetchStatus(FetchStatus.NOT_FETCHED)\r\n  }, [account, isTransitioning])\r\n\r\n  const fetchAllRewards = async () => {\r\n    setFetchStatus(FetchStatus.IN_PROGRESS)\r\n    const unclaimedRewardsResponse = await fetchUnclaimedUserRewards(account, userLotteryData, lotteriesData)\r\n    setUnclaimedRewards(unclaimedRewardsResponse)\r\n    setFetchStatus(FetchStatus.SUCCESS)\r\n  }\r\n\r\n  return { fetchAllRewards, unclaimedRewards, fetchStatus }\r\n}\r\n\r\nexport default useGetUnclaimedRewards\r\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,YAAY,QAAQ,kBAAkB;AAC/C,SAASC,wBAAwB,EAAEC,4BAA4B,EAAEC,UAAU,QAAQ,qBAAqB;AACxG,OAAOC,yBAAyB,MAAM,yCAAyC;AAE/E,WAAYC,WAAW;AAItB,WAJWA,WAAW;EAAXA,WAAW;EAAXA,WAAW;EAAXA,WAAW;AAAA,GAAXA,WAAW,KAAXA,WAAW;AAMvB,MAAMC,sBAAsB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnC,MAAM;IAAEC;EAAQ,CAAC,GAAGR,YAAY,CAAC,CAAC;EAClC,MAAM;IAAES;EAAgB,CAAC,GAAGN,UAAU,CAAC,CAAC;EACxC,MAAMO,eAAe,GAAGR,4BAA4B,CAAC,CAAC;EACtD,MAAMS,aAAa,GAAGV,wBAAwB,CAAC,CAAC;EAChD,MAAM,CAACW,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAACgB,WAAW,EAAEC,cAAc,CAAC,GAAGjB,QAAQ,CAACO,WAAW,CAACW,WAAW,CAAC;EAEvEjB,SAAS,CAAC,MAAM;IACd;IACAgB,cAAc,CAACV,WAAW,CAACW,WAAW,CAAC;EACzC,CAAC,EAAE,CAACR,OAAO,EAAEC,eAAe,CAAC,CAAC;EAE9B,MAAMQ,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClCF,cAAc,CAACV,WAAW,CAACa,WAAW,CAAC;IACvC,MAAMC,wBAAwB,GAAG,MAAMf,yBAAyB,CAACI,OAAO,EAAEE,eAAe,EAAEC,aAAa,CAAC;IACzGE,mBAAmB,CAACM,wBAAwB,CAAC;IAC7CJ,cAAc,CAACV,WAAW,CAACe,OAAO,CAAC;EACrC,CAAC;EAED,OAAO;IAAEH,eAAe;IAAEL,gBAAgB;IAAEE;EAAY,CAAC;AAC3D,CAAC;AAAAP,EAAA,CArBKD,sBAAsB;EAAA,QACNN,YAAY,EACJG,UAAU,EACdD,4BAA4B,EAC9BD,wBAAwB;AAAA;AAmBhD,eAAeK,sBAAsB","ignoreList":[]},"metadata":{},"sourceType":"module"}