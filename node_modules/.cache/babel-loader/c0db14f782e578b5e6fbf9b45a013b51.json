{"ast":null,"code":"import React,{useCallback,useMemo}from'react';import{currencyEquals}from'@pancakeswap/sdk';import{useTranslation}from'contexts/Localization';import TransactionConfirmationModal,{ConfirmationModalContent,TransactionErrorContent}from'components/TransactionConfirmationModal';import SwapModalFooter from'./SwapModalFooter';import SwapModalHeader from'./SwapModalHeader';/**\r\n * Returns true if the trade requires a confirmation of details before we can submit it\r\n * @param tradeA trade A\r\n * @param tradeB trade B\r\n */import{jsx as _jsx}from\"react/jsx-runtime\";function tradeMeaningfullyDiffers(tradeA,tradeB){return tradeA.tradeType!==tradeB.tradeType||!currencyEquals(tradeA.inputAmount.currency,tradeB.inputAmount.currency)||!tradeA.inputAmount.equalTo(tradeB.inputAmount)||!currencyEquals(tradeA.outputAmount.currency,tradeB.outputAmount.currency)||!tradeA.outputAmount.equalTo(tradeB.outputAmount);}const ConfirmSwapModal=_ref=>{var _trade$inputAmount$to,_trade$inputAmount,_trade$inputAmount$cu,_trade$inputAmount2,_trade$inputAmount2$c,_trade$outputAmount$t,_trade$outputAmount,_trade$outputAmount$c,_trade$outputAmount2,_trade$outputAmount2$;let{trade,originalTrade,onAcceptChanges,allowedSlippage,onConfirm,onDismiss,customOnDismiss,recipient,swapErrorMessage,attemptingTxn,txHash}=_ref;const showAcceptChanges=useMemo(()=>Boolean(trade&&originalTrade&&tradeMeaningfullyDiffers(trade,originalTrade)),[originalTrade,trade]);const{t}=useTranslation();const modalHeader=useCallback(()=>{return trade?/*#__PURE__*/_jsx(SwapModalHeader,{trade:trade,allowedSlippage:allowedSlippage,recipient:recipient,showAcceptChanges:showAcceptChanges,onAcceptChanges:onAcceptChanges}):null;},[allowedSlippage,onAcceptChanges,recipient,showAcceptChanges,trade]);const modalBottom=useCallback(()=>{return trade?/*#__PURE__*/_jsx(SwapModalFooter,{onConfirm:onConfirm,trade:trade,disabledConfirm:showAcceptChanges,swapErrorMessage:swapErrorMessage,allowedSlippage:allowedSlippage}):null;},[allowedSlippage,onConfirm,showAcceptChanges,swapErrorMessage,trade]);// text to show while loading\nconst pendingText=t('Swapping %amountA% %symbolA% for %amountB% %symbolB%',{amountA:(_trade$inputAmount$to=trade===null||trade===void 0?void 0:(_trade$inputAmount=trade.inputAmount)===null||_trade$inputAmount===void 0?void 0:_trade$inputAmount.toSignificant(6))!==null&&_trade$inputAmount$to!==void 0?_trade$inputAmount$to:'',symbolA:(_trade$inputAmount$cu=trade===null||trade===void 0?void 0:(_trade$inputAmount2=trade.inputAmount)===null||_trade$inputAmount2===void 0?void 0:(_trade$inputAmount2$c=_trade$inputAmount2.currency)===null||_trade$inputAmount2$c===void 0?void 0:_trade$inputAmount2$c.symbol)!==null&&_trade$inputAmount$cu!==void 0?_trade$inputAmount$cu:'',amountB:(_trade$outputAmount$t=trade===null||trade===void 0?void 0:(_trade$outputAmount=trade.outputAmount)===null||_trade$outputAmount===void 0?void 0:_trade$outputAmount.toSignificant(6))!==null&&_trade$outputAmount$t!==void 0?_trade$outputAmount$t:'',symbolB:(_trade$outputAmount$c=trade===null||trade===void 0?void 0:(_trade$outputAmount2=trade.outputAmount)===null||_trade$outputAmount2===void 0?void 0:(_trade$outputAmount2$=_trade$outputAmount2.currency)===null||_trade$outputAmount2$===void 0?void 0:_trade$outputAmount2$.symbol)!==null&&_trade$outputAmount$c!==void 0?_trade$outputAmount$c:''});const confirmationContent=useCallback(()=>swapErrorMessage?/*#__PURE__*/_jsx(TransactionErrorContent,{onDismiss:onDismiss,message:swapErrorMessage}):/*#__PURE__*/_jsx(ConfirmationModalContent,{topContent:modalHeader,bottomContent:modalBottom}),[onDismiss,modalBottom,modalHeader,swapErrorMessage]);return/*#__PURE__*/_jsx(TransactionConfirmationModal,{title:t('Confirm Swap'),onDismiss:onDismiss,customOnDismiss:customOnDismiss,attemptingTxn:attemptingTxn,hash:txHash,content:confirmationContent,pendingText:pendingText,currencyToAdd:trade===null||trade===void 0?void 0:trade.outputAmount.currency});};export default ConfirmSwapModal;","map":{"version":3,"names":["React","useCallback","useMemo","currencyEquals","useTranslation","TransactionConfirmationModal","ConfirmationModalContent","TransactionErrorContent","SwapModalFooter","SwapModalHeader","jsx","_jsx","tradeMeaningfullyDiffers","tradeA","tradeB","tradeType","inputAmount","currency","equalTo","outputAmount","ConfirmSwapModal","_ref","_trade$inputAmount$to","_trade$inputAmount","_trade$inputAmount$cu","_trade$inputAmount2","_trade$inputAmount2$c","_trade$outputAmount$t","_trade$outputAmount","_trade$outputAmount$c","_trade$outputAmount2","_trade$outputAmount2$","trade","originalTrade","onAcceptChanges","allowedSlippage","onConfirm","onDismiss","customOnDismiss","recipient","swapErrorMessage","attemptingTxn","txHash","showAcceptChanges","Boolean","t","modalHeader","modalBottom","disabledConfirm","pendingText","amountA","toSignificant","symbolA","symbol","amountB","symbolB","confirmationContent","message","topContent","bottomContent","title","hash","content","currencyToAdd"],"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/views/Swap/components/ConfirmSwapModal.tsx"],"sourcesContent":["import React, { useCallback, useMemo } from 'react'\r\nimport { currencyEquals, Trade } from '@pancakeswap/sdk'\r\nimport { InjectedModalProps } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport TransactionConfirmationModal, {\r\n  ConfirmationModalContent,\r\n  TransactionErrorContent,\r\n} from 'components/TransactionConfirmationModal'\r\nimport SwapModalFooter from './SwapModalFooter'\r\nimport SwapModalHeader from './SwapModalHeader'\r\n\r\n/**\r\n * Returns true if the trade requires a confirmation of details before we can submit it\r\n * @param tradeA trade A\r\n * @param tradeB trade B\r\n */\r\nfunction tradeMeaningfullyDiffers(tradeA: Trade, tradeB: Trade): boolean {\r\n  return (\r\n    tradeA.tradeType !== tradeB.tradeType ||\r\n    !currencyEquals(tradeA.inputAmount.currency, tradeB.inputAmount.currency) ||\r\n    !tradeA.inputAmount.equalTo(tradeB.inputAmount) ||\r\n    !currencyEquals(tradeA.outputAmount.currency, tradeB.outputAmount.currency) ||\r\n    !tradeA.outputAmount.equalTo(tradeB.outputAmount)\r\n  )\r\n}\r\ninterface ConfirmSwapModalProps {\r\n  trade?: Trade\r\n  originalTrade?: Trade\r\n  attemptingTxn: boolean\r\n  txHash?: string\r\n  recipient: string | null\r\n  allowedSlippage: number\r\n  onAcceptChanges: () => void\r\n  onConfirm: () => void\r\n  swapErrorMessage?: string\r\n  customOnDismiss?: () => void\r\n}\r\n\r\nconst ConfirmSwapModal: React.FC<InjectedModalProps & ConfirmSwapModalProps> = ({\r\n  trade,\r\n  originalTrade,\r\n  onAcceptChanges,\r\n  allowedSlippage,\r\n  onConfirm,\r\n  onDismiss,\r\n  customOnDismiss,\r\n  recipient,\r\n  swapErrorMessage,\r\n  attemptingTxn,\r\n  txHash,\r\n}) => {\r\n  const showAcceptChanges = useMemo(\r\n    () => Boolean(trade && originalTrade && tradeMeaningfullyDiffers(trade, originalTrade)),\r\n    [originalTrade, trade],\r\n  )\r\n\r\n  const { t } = useTranslation()\r\n\r\n  const modalHeader = useCallback(() => {\r\n    return trade ? (\r\n      <SwapModalHeader\r\n        trade={trade}\r\n        allowedSlippage={allowedSlippage}\r\n        recipient={recipient}\r\n        showAcceptChanges={showAcceptChanges}\r\n        onAcceptChanges={onAcceptChanges}\r\n      />\r\n    ) : null\r\n  }, [allowedSlippage, onAcceptChanges, recipient, showAcceptChanges, trade])\r\n\r\n  const modalBottom = useCallback(() => {\r\n    return trade ? (\r\n      <SwapModalFooter\r\n        onConfirm={onConfirm}\r\n        trade={trade}\r\n        disabledConfirm={showAcceptChanges}\r\n        swapErrorMessage={swapErrorMessage}\r\n        allowedSlippage={allowedSlippage}\r\n      />\r\n    ) : null\r\n  }, [allowedSlippage, onConfirm, showAcceptChanges, swapErrorMessage, trade])\r\n\r\n  // text to show while loading\r\n  const pendingText = t('Swapping %amountA% %symbolA% for %amountB% %symbolB%', {\r\n    amountA: trade?.inputAmount?.toSignificant(6) ?? '',\r\n    symbolA: trade?.inputAmount?.currency?.symbol ?? '',\r\n    amountB: trade?.outputAmount?.toSignificant(6) ?? '',\r\n    symbolB: trade?.outputAmount?.currency?.symbol ?? '',\r\n  })\r\n\r\n  const confirmationContent = useCallback(\r\n    () =>\r\n      swapErrorMessage ? (\r\n        <TransactionErrorContent onDismiss={onDismiss} message={swapErrorMessage} />\r\n      ) : (\r\n        <ConfirmationModalContent topContent={modalHeader} bottomContent={modalBottom} />\r\n      ),\r\n    [onDismiss, modalBottom, modalHeader, swapErrorMessage],\r\n  )\r\n\r\n  return (\r\n    <TransactionConfirmationModal\r\n      title={t('Confirm Swap')}\r\n      onDismiss={onDismiss}\r\n      customOnDismiss={customOnDismiss}\r\n      attemptingTxn={attemptingTxn}\r\n      hash={txHash}\r\n      content={confirmationContent}\r\n      pendingText={pendingText}\r\n      currencyToAdd={trade?.outputAmount.currency}\r\n    />\r\n  )\r\n}\r\n\r\nexport default ConfirmSwapModal\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}