{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Devrim\\\\Documents\\\\FRANKswapUIforProspBlast\\\\src\\\\views\\\\Predictions\\\\History.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Flex, Spinner, Text } from '@pancakeswap/uikit';\nimport { useWeb3React } from '@web3-react/core';\nimport styled from 'styled-components';\nimport ConnectWalletButton from 'components/ConnectWalletButton';\nimport { useTranslation } from 'contexts/Localization';\nimport { fetchHistory } from 'state/predictions';\nimport { getUnclaimedWinningBets } from 'state/predictions/helpers';\nimport { HistoryFilter } from 'state/types';\nimport { useAppDispatch } from 'state';\nimport { useGetCurrentEpoch, useGetHistoryByAccount, useGetHistoryFilter, useGetIsFetchingHistory, useIsHistoryPaneOpen } from 'state/hooks';\nimport { Header, HistoryTabs } from './components/History';\nimport RoundsTab from './components/History/RoundsTab';\nimport PnlTab from './components/History/PnlTab/PnlTab';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledHistory = styled.div`\n  background-color: ${({\n  theme\n}) => theme.card.background};\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n`;\n_c = StyledHistory;\nconst BetWrapper = styled.div`\n  flex: 1;\n  height: 100%;\n  overflow-y: auto;\n  position: relative;\n`;\n_c2 = BetWrapper;\nconst SpinnerWrapper = styled.div`\n  align-items: center;\n  background-color: ${({\n  theme\n}) => theme.card.background};\n  display: flex;\n  left: 0;\n  height: 100%;\n  justify-content: center;\n  position: absolute;\n  top: 0;\n  width: 100%;\n`;\n_c3 = SpinnerWrapper;\n\nconst History = () => {\n  _s();\n\n  const {\n    account\n  } = useWeb3React();\n  const dispatch = useAppDispatch();\n  const isHistoryPaneOpen = useIsHistoryPaneOpen();\n  const isFetchingHistory = useGetIsFetchingHistory();\n  const historyFilter = useGetHistoryFilter();\n  const currentEpoch = useGetCurrentEpoch();\n  const {\n    t\n  } = useTranslation();\n  const bets = useGetHistoryByAccount(account);\n  const [activeTab, setActiveTab] = useState(HistoryTabs.ROUNDS);\n  useEffect(() => {\n    if (account && isHistoryPaneOpen) {\n      dispatch(fetchHistory({\n        account\n      }));\n    }\n  }, [account, currentEpoch, isHistoryPaneOpen, dispatch]); // Currently the api cannot filter by unclaimed AND won so we do it here\n  // when the user has selected Uncollected only include positions they won\n\n  const results = historyFilter === HistoryFilter.UNCOLLECTED ? getUnclaimedWinningBets(bets) : bets;\n  const hasBetHistory = results && results.length > 0;\n  let activeTabComponent = null;\n\n  switch (activeTab) {\n    case HistoryTabs.PNL:\n      activeTabComponent = /*#__PURE__*/_jsxDEV(PnlTab, {\n        hasBetHistory: hasBetHistory,\n        bets: results\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 28\n      }, this);\n      break;\n\n    case HistoryTabs.ROUNDS:\n    default:\n      activeTabComponent = /*#__PURE__*/_jsxDEV(RoundsTab, {\n        hasBetHistory: hasBetHistory,\n        bets: results\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 28\n      }, this);\n      break;\n  }\n\n  if (!account) {\n    activeTabComponent = /*#__PURE__*/_jsxDEV(Flex, {\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      flexDirection: \"column\",\n      mt: \"32px\",\n      children: [/*#__PURE__*/_jsxDEV(ConnectWalletButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        mt: \"8px\",\n        children: t('Connect your wallet to view your prediction history')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(StyledHistory, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      activeTab: activeTab,\n      setActiveTab: setActiveTab\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BetWrapper, {\n      children: isFetchingHistory ? /*#__PURE__*/_jsxDEV(SpinnerWrapper, {\n        children: /*#__PURE__*/_jsxDEV(Spinner, {\n          size: 72\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this) : activeTabComponent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n\n_s(History, \"dP1/17/b/GVlch+QjueWdutWqs0=\", false, function () {\n  return [useWeb3React, useAppDispatch, useIsHistoryPaneOpen, useGetIsFetchingHistory, useGetHistoryFilter, useGetCurrentEpoch, useTranslation, useGetHistoryByAccount];\n});\n\n_c4 = History;\nexport default History;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"StyledHistory\");\n$RefreshReg$(_c2, \"BetWrapper\");\n$RefreshReg$(_c3, \"SpinnerWrapper\");\n$RefreshReg$(_c4, \"History\");","map":{"version":3,"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/views/Predictions/History.tsx"],"names":["React","useEffect","useState","Flex","Spinner","Text","useWeb3React","styled","ConnectWalletButton","useTranslation","fetchHistory","getUnclaimedWinningBets","HistoryFilter","useAppDispatch","useGetCurrentEpoch","useGetHistoryByAccount","useGetHistoryFilter","useGetIsFetchingHistory","useIsHistoryPaneOpen","Header","HistoryTabs","RoundsTab","PnlTab","StyledHistory","div","theme","card","background","BetWrapper","SpinnerWrapper","History","account","dispatch","isHistoryPaneOpen","isFetchingHistory","historyFilter","currentEpoch","t","bets","activeTab","setActiveTab","ROUNDS","results","UNCOLLECTED","hasBetHistory","length","activeTabComponent","PNL"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { Flex, Spinner, Text } from '@pancakeswap/uikit'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport styled from 'styled-components'\r\nimport ConnectWalletButton from 'components/ConnectWalletButton'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { fetchHistory } from 'state/predictions'\r\nimport { getUnclaimedWinningBets } from 'state/predictions/helpers'\r\nimport { HistoryFilter } from 'state/types'\r\nimport { useAppDispatch } from 'state'\r\nimport {\r\n  useGetCurrentEpoch,\r\n  useGetHistoryByAccount,\r\n  useGetHistoryFilter,\r\n  useGetIsFetchingHistory,\r\n  useIsHistoryPaneOpen,\r\n} from 'state/hooks'\r\nimport { Header, HistoryTabs } from './components/History'\r\nimport RoundsTab from './components/History/RoundsTab'\r\nimport PnlTab from './components/History/PnlTab/PnlTab'\r\n\r\nconst StyledHistory = styled.div`\r\n  background-color: ${({ theme }) => theme.card.background};\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n`\r\n\r\nconst BetWrapper = styled.div`\r\n  flex: 1;\r\n  height: 100%;\r\n  overflow-y: auto;\r\n  position: relative;\r\n`\r\n\r\nconst SpinnerWrapper = styled.div`\r\n  align-items: center;\r\n  background-color: ${({ theme }) => theme.card.background};\r\n  display: flex;\r\n  left: 0;\r\n  height: 100%;\r\n  justify-content: center;\r\n  position: absolute;\r\n  top: 0;\r\n  width: 100%;\r\n`\r\n\r\nconst History = () => {\r\n  const { account } = useWeb3React()\r\n  const dispatch = useAppDispatch()\r\n  const isHistoryPaneOpen = useIsHistoryPaneOpen()\r\n  const isFetchingHistory = useGetIsFetchingHistory()\r\n  const historyFilter = useGetHistoryFilter()\r\n  const currentEpoch = useGetCurrentEpoch()\r\n  const { t } = useTranslation()\r\n  const bets = useGetHistoryByAccount(account)\r\n  const [activeTab, setActiveTab] = useState(HistoryTabs.ROUNDS)\r\n\r\n  useEffect(() => {\r\n    if (account && isHistoryPaneOpen) {\r\n      dispatch(fetchHistory({ account }))\r\n    }\r\n  }, [account, currentEpoch, isHistoryPaneOpen, dispatch])\r\n\r\n  // Currently the api cannot filter by unclaimed AND won so we do it here\r\n  // when the user has selected Uncollected only include positions they won\r\n  const results = historyFilter === HistoryFilter.UNCOLLECTED ? getUnclaimedWinningBets(bets) : bets\r\n\r\n  const hasBetHistory = results && results.length > 0\r\n\r\n  let activeTabComponent = null\r\n\r\n  switch (activeTab) {\r\n    case HistoryTabs.PNL:\r\n      activeTabComponent = <PnlTab hasBetHistory={hasBetHistory} bets={results} />\r\n      break\r\n    case HistoryTabs.ROUNDS:\r\n    default:\r\n      activeTabComponent = <RoundsTab hasBetHistory={hasBetHistory} bets={results} />\r\n      break\r\n  }\r\n\r\n  if (!account) {\r\n    activeTabComponent = (\r\n      <Flex justifyContent=\"center\" alignItems=\"center\" flexDirection=\"column\" mt=\"32px\">\r\n        <ConnectWalletButton />\r\n        <Text mt=\"8px\">{t('Connect your wallet to view your prediction history')}</Text>\r\n      </Flex>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <StyledHistory>\r\n      <Header activeTab={activeTab} setActiveTab={setActiveTab} />\r\n      <BetWrapper>\r\n        {isFetchingHistory ? (\r\n          <SpinnerWrapper>\r\n            <Spinner size={72} />\r\n          </SpinnerWrapper>\r\n        ) : (\r\n          activeTabComponent\r\n        )}\r\n      </BetWrapper>\r\n    </StyledHistory>\r\n  )\r\n}\r\n\r\nexport default History\r\n"]},"metadata":{},"sourceType":"module"}