{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Devrim\\\\Documents\\\\FRANKswapUIforProspBlast\\\\src\\\\views\\\\Pools\\\\components\\\\PoolsTable\\\\ActionPanel\\\\Harvest.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Button, Text, useModal, Flex, TooltipText, useTooltip, Skeleton, Heading } from '@pancakeswap/uikit';\nimport BigNumber from 'bignumber.js';\nimport { useWeb3React } from '@web3-react/core';\nimport { getCakeVaultEarnings } from 'views/Pools/helpers';\nimport { PoolCategory } from 'config/constants/types';\nimport { formatNumber, getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance';\nimport { useTranslation } from 'contexts/Localization';\nimport Balance from 'components/Balance';\nimport { useCakeVault } from 'state/pools/hooks';\nimport { BIG_ZERO } from 'utils/bigNumber';\nimport { ActionContainer, ActionTitles, ActionContent } from './styles';\nimport CollectModal from '../../PoolCard/Modals/CollectModal';\nimport UnstakingFeeCountdownRow from '../../CakeVaultCard/UnstakingFeeCountdownRow';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst HarvestAction = ({\n  sousId,\n  poolCategory,\n  earningToken,\n  userData,\n  userDataLoaded,\n  isAutoVault,\n  earningTokenPrice\n}) => {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  const {\n    account\n  } = useWeb3React();\n  const earnings = (userData === null || userData === void 0 ? void 0 : userData.pendingReward) ? new BigNumber(userData.pendingReward) : BIG_ZERO; // These will be reassigned later if its Auto CAKE vault\n\n  let earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals);\n  let earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals);\n  let hasEarnings = earnings.gt(0);\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals);\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3);\n  const isCompoundPool = sousId === 0;\n  const isBnbPool = poolCategory === PoolCategory.BINANCE; // Auto CAKE vault calculations\n\n  const {\n    userData: {\n      cakeAtLastUserAction,\n      userShares\n    },\n    pricePerFullShare,\n    fees: {\n      performanceFee\n    }\n  } = useCakeVault();\n  const {\n    hasAutoEarnings,\n    autoCakeToDisplay,\n    autoUsdToDisplay\n  } = getCakeVaultEarnings(account, cakeAtLastUserAction, userShares, pricePerFullShare, earningTokenPrice);\n  earningTokenBalance = isAutoVault ? autoCakeToDisplay : earningTokenBalance;\n  hasEarnings = isAutoVault ? hasAutoEarnings : hasEarnings;\n  earningTokenDollarBalance = isAutoVault ? autoUsdToDisplay : earningTokenDollarBalance;\n  const [onPresentCollect] = useModal( /*#__PURE__*/_jsxDEV(CollectModal, {\n    formattedBalance: formattedBalance,\n    fullBalance: fullBalance,\n    earningToken: earningToken,\n    earningsDollarValue: earningTokenDollarBalance,\n    sousId: sousId,\n    isBnbPool: isBnbPool,\n    isCompoundPool: isCompoundPool\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this));\n  const {\n    targetRef,\n    tooltip,\n    tooltipVisible\n  } = useTooltip(t('Subtracted automatically from each yield harvest and burned.'), {\n    placement: 'bottom-start'\n  });\n  const actionTitle = isAutoVault ? /*#__PURE__*/_jsxDEV(Text, {\n    fontSize: \"12px\",\n    bold: true,\n    color: \"secondary\",\n    as: \"span\",\n    textTransform: \"uppercase\",\n    children: t('Recent CAKE profit')\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Text, {\n      fontSize: \"12px\",\n      bold: true,\n      color: \"secondary\",\n      as: \"span\",\n      textTransform: \"uppercase\",\n      children: [earningToken.symbol, ' ']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Text, {\n      fontSize: \"12px\",\n      bold: true,\n      color: \"textSubtle\",\n      as: \"span\",\n      textTransform: \"uppercase\",\n      children: t('Earned')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n\n  if (!account) {\n    return /*#__PURE__*/_jsxDEV(ActionContainer, {\n      children: [/*#__PURE__*/_jsxDEV(ActionTitles, {\n        children: actionTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ActionContent, {\n        children: [/*#__PURE__*/_jsxDEV(Balance, {\n          pt: \"8px\",\n          lineHeight: \"1\",\n          bold: true,\n          fontSize: \"20px\",\n          decimals: 5,\n          value: 0\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          disabled: true,\n          children: isCompoundPool ? t('Collect') : t('Harvest')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (!userDataLoaded) {\n    return /*#__PURE__*/_jsxDEV(ActionContainer, {\n      children: [/*#__PURE__*/_jsxDEV(ActionTitles, {\n        children: actionTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ActionContent, {\n        children: /*#__PURE__*/_jsxDEV(Skeleton, {\n          width: 180,\n          height: \"32px\",\n          marginTop: 14\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(ActionContainer, {\n    children: [/*#__PURE__*/_jsxDEV(ActionTitles, {\n      children: actionTitle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ActionContent, {\n      children: [/*#__PURE__*/_jsxDEV(Flex, {\n        flex: \"1\",\n        pt: \"16px\",\n        flexDirection: \"column\",\n        alignSelf: \"flex-start\",\n        children: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: hasEarnings ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Balance, {\n              lineHeight: \"1\",\n              bold: true,\n              fontSize: \"20px\",\n              decimals: 5,\n              value: earningTokenBalance\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 17\n            }, this), earningTokenPrice > 0 && /*#__PURE__*/_jsxDEV(Balance, {\n              display: \"inline\",\n              fontSize: \"12px\",\n              color: \"textSubtle\",\n              decimals: 2,\n              prefix: \"~\",\n              value: earningTokenDollarBalance,\n              unit: \" USD\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Heading, {\n              color: \"textDisabled\",\n              children: \"0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Text, {\n              fontSize: \"12px\",\n              color: \"textDisabled\",\n              children: \"0 USD\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true)\n        }, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), isAutoVault ? /*#__PURE__*/_jsxDEV(Flex, {\n        flex: \"1.3\",\n        flexDirection: \"column\",\n        alignSelf: \"flex-start\",\n        alignItems: \"flex-start\",\n        children: [/*#__PURE__*/_jsxDEV(UnstakingFeeCountdownRow, {\n          isTableVariant: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Flex, {\n          mb: \"2px\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n          children: [tooltipVisible && tooltip, /*#__PURE__*/_jsxDEV(TooltipText, {\n            ref: targetRef,\n            small: true,\n            children: t('Performance Fee')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Flex, {\n            alignItems: \"center\",\n            children: /*#__PURE__*/_jsxDEV(Text, {\n              ml: \"4px\",\n              small: true,\n              children: [performanceFee / 100, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Button, {\n        disabled: !hasEarnings,\n        onClick: onPresentCollect,\n        children: isCompoundPool ? t('Collect') : t('Harvest')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n};\n\n_s(HarvestAction, \"h6sFCXobXFZn8T5AMznSUeSOel0=\", false, function () {\n  return [useTranslation, useWeb3React, useCakeVault, useModal, useTooltip];\n});\n\n_c = HarvestAction;\nexport default HarvestAction;\n\nvar _c;\n\n$RefreshReg$(_c, \"HarvestAction\");","map":{"version":3,"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/views/Pools/components/PoolsTable/ActionPanel/Harvest.tsx"],"names":["React","Button","Text","useModal","Flex","TooltipText","useTooltip","Skeleton","Heading","BigNumber","useWeb3React","getCakeVaultEarnings","PoolCategory","formatNumber","getBalanceNumber","getFullDisplayBalance","useTranslation","Balance","useCakeVault","BIG_ZERO","ActionContainer","ActionTitles","ActionContent","CollectModal","UnstakingFeeCountdownRow","HarvestAction","sousId","poolCategory","earningToken","userData","userDataLoaded","isAutoVault","earningTokenPrice","t","account","earnings","pendingReward","earningTokenBalance","decimals","earningTokenDollarBalance","multipliedBy","hasEarnings","gt","fullBalance","formattedBalance","isCompoundPool","isBnbPool","BINANCE","cakeAtLastUserAction","userShares","pricePerFullShare","fees","performanceFee","hasAutoEarnings","autoCakeToDisplay","autoUsdToDisplay","onPresentCollect","targetRef","tooltip","tooltipVisible","placement","actionTitle","symbol"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Button, Text, useModal, Flex, TooltipText, useTooltip, Skeleton, Heading } from '@pancakeswap/uikit'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\r\nimport { PoolCategory } from 'config/constants/types'\r\nimport { formatNumber, getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport Balance from 'components/Balance'\r\nimport { useCakeVault } from 'state/pools/hooks'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\nimport { Pool } from 'state/types'\r\n\r\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\r\nimport CollectModal from '../../PoolCard/Modals/CollectModal'\r\nimport UnstakingFeeCountdownRow from '../../CakeVaultCard/UnstakingFeeCountdownRow'\r\n\r\ninterface HarvestActionProps extends Pool {\r\n  userDataLoaded: boolean\r\n}\r\n\r\nconst HarvestAction: React.FunctionComponent<HarvestActionProps> = ({\r\n  sousId,\r\n  poolCategory,\r\n  earningToken,\r\n  userData,\r\n  userDataLoaded,\r\n  isAutoVault,\r\n  earningTokenPrice,\r\n}) => {\r\n  const { t } = useTranslation()\r\n  const { account } = useWeb3React()\r\n\r\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\r\n  // These will be reassigned later if its Auto CAKE vault\r\n  let earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\r\n  let earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\r\n  let hasEarnings = earnings.gt(0)\r\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\r\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\r\n  const isCompoundPool = sousId === 0\r\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\r\n\r\n  // Auto CAKE vault calculations\r\n  const {\r\n    userData: { cakeAtLastUserAction, userShares },\r\n    pricePerFullShare,\r\n    fees: { performanceFee },\r\n  } = useCakeVault()\r\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\r\n    account,\r\n    cakeAtLastUserAction,\r\n    userShares,\r\n    pricePerFullShare,\r\n    earningTokenPrice,\r\n  )\r\n\r\n  earningTokenBalance = isAutoVault ? autoCakeToDisplay : earningTokenBalance\r\n  hasEarnings = isAutoVault ? hasAutoEarnings : hasEarnings\r\n  earningTokenDollarBalance = isAutoVault ? autoUsdToDisplay : earningTokenDollarBalance\r\n\r\n  const [onPresentCollect] = useModal(\r\n    <CollectModal\r\n      formattedBalance={formattedBalance}\r\n      fullBalance={fullBalance}\r\n      earningToken={earningToken}\r\n      earningsDollarValue={earningTokenDollarBalance}\r\n      sousId={sousId}\r\n      isBnbPool={isBnbPool}\r\n      isCompoundPool={isCompoundPool}\r\n    />,\r\n  )\r\n\r\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\r\n    t('Subtracted automatically from each yield harvest and burned.'),\r\n    { placement: 'bottom-start' },\r\n  )\r\n\r\n  const actionTitle = isAutoVault ? (\r\n    <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\r\n      {t('Recent CAKE profit')}\r\n    </Text>\r\n  ) : (\r\n    <>\r\n      <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\r\n        {earningToken.symbol}{' '}\r\n      </Text>\r\n      <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\r\n        {t('Earned')}\r\n      </Text>\r\n    </>\r\n  )\r\n\r\n  if (!account) {\r\n    return (\r\n      <ActionContainer>\r\n        <ActionTitles>{actionTitle}</ActionTitles>\r\n        <ActionContent>\r\n          <Balance pt=\"8px\" lineHeight=\"1\" bold fontSize=\"20px\" decimals={5} value={0} />\r\n          <Button disabled>{isCompoundPool ? t('Collect') : t('Harvest')}</Button>\r\n        </ActionContent>\r\n      </ActionContainer>\r\n    )\r\n  }\r\n\r\n  if (!userDataLoaded) {\r\n    return (\r\n      <ActionContainer>\r\n        <ActionTitles>{actionTitle}</ActionTitles>\r\n        <ActionContent>\r\n          <Skeleton width={180} height=\"32px\" marginTop={14} />\r\n        </ActionContent>\r\n      </ActionContainer>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <ActionContainer>\r\n      <ActionTitles>{actionTitle}</ActionTitles>\r\n      <ActionContent>\r\n        <Flex flex=\"1\" pt=\"16px\" flexDirection=\"column\" alignSelf=\"flex-start\">\r\n          <>\r\n            {hasEarnings ? (\r\n              <>\r\n                <Balance lineHeight=\"1\" bold fontSize=\"20px\" decimals={5} value={earningTokenBalance} />\r\n                {earningTokenPrice > 0 && (\r\n                  <Balance\r\n                    display=\"inline\"\r\n                    fontSize=\"12px\"\r\n                    color=\"textSubtle\"\r\n                    decimals={2}\r\n                    prefix=\"~\"\r\n                    value={earningTokenDollarBalance}\r\n                    unit=\" USD\"\r\n                  />\r\n                )}\r\n              </>\r\n            ) : (\r\n              <>\r\n                <Heading color=\"textDisabled\">0</Heading>\r\n                <Text fontSize=\"12px\" color=\"textDisabled\">\r\n                  0 USD\r\n                </Text>\r\n              </>\r\n            )}\r\n          </>\r\n        </Flex>\r\n        {isAutoVault ? (\r\n          <Flex flex=\"1.3\" flexDirection=\"column\" alignSelf=\"flex-start\" alignItems=\"flex-start\">\r\n            <UnstakingFeeCountdownRow isTableVariant />\r\n            <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\r\n              {tooltipVisible && tooltip}\r\n              <TooltipText ref={targetRef} small>\r\n                {t('Performance Fee')}\r\n              </TooltipText>\r\n              <Flex alignItems=\"center\">\r\n                <Text ml=\"4px\" small>\r\n                  {performanceFee / 100}%\r\n                </Text>\r\n              </Flex>\r\n            </Flex>\r\n          </Flex>\r\n        ) : (\r\n          <Button disabled={!hasEarnings} onClick={onPresentCollect}>\r\n            {isCompoundPool ? t('Collect') : t('Harvest')}\r\n          </Button>\r\n        )}\r\n      </ActionContent>\r\n    </ActionContainer>\r\n  )\r\n}\r\n\r\nexport default HarvestAction\r\n"]},"metadata":{},"sourceType":"module"}