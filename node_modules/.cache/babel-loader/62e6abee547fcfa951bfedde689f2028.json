{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Devrim\\\\Documents\\\\FRANKswapUIforProspBlast\\\\src\\\\views\\\\AddLiquidity\\\\ConfirmAddModalBottom.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Button, Text } from '@pancakeswap/uikit';\nimport { useTranslation } from 'contexts/Localization';\nimport { RowBetween, RowFixed } from '../../components/Layout/Row';\nimport { CurrencyLogo } from '../../components/Logo';\nimport { Field } from '../../state/mint/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ConfirmAddModalBottom({\n  noLiquidity,\n  price,\n  currencies,\n  parsedAmounts,\n  poolTokenPercentage,\n  onAdd\n}) {\n  _s();\n\n  var _currencies$Field$CUR, _parsedAmounts$Field$, _currencies$Field$CUR2, _parsedAmounts$Field$2, _currencies$Field$CUR3, _currencies$Field$CUR4, _currencies$Field$CUR5, _currencies$Field$CUR6;\n\n  const {\n    t\n  } = useTranslation();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(RowBetween, {\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        children: t('%asset% Deposited', {\n          asset: (_currencies$Field$CUR = currencies[Field.CURRENCY_A]) === null || _currencies$Field$CUR === void 0 ? void 0 : _currencies$Field$CUR.symbol\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RowFixed, {\n        children: [/*#__PURE__*/_jsxDEV(CurrencyLogo, {\n          currency: currencies[Field.CURRENCY_A],\n          style: {\n            marginRight: '8px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          children: (_parsedAmounts$Field$ = parsedAmounts[Field.CURRENCY_A]) === null || _parsedAmounts$Field$ === void 0 ? void 0 : _parsedAmounts$Field$.toSignificant(6)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RowBetween, {\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        children: t('%asset% Deposited', {\n          asset: (_currencies$Field$CUR2 = currencies[Field.CURRENCY_B]) === null || _currencies$Field$CUR2 === void 0 ? void 0 : _currencies$Field$CUR2.symbol\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RowFixed, {\n        children: [/*#__PURE__*/_jsxDEV(CurrencyLogo, {\n          currency: currencies[Field.CURRENCY_B],\n          style: {\n            marginRight: '8px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          children: (_parsedAmounts$Field$2 = parsedAmounts[Field.CURRENCY_B]) === null || _parsedAmounts$Field$2 === void 0 ? void 0 : _parsedAmounts$Field$2.toSignificant(6)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RowBetween, {\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        children: t('Rates')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        children: `1 ${(_currencies$Field$CUR3 = currencies[Field.CURRENCY_A]) === null || _currencies$Field$CUR3 === void 0 ? void 0 : _currencies$Field$CUR3.symbol} = ${price === null || price === void 0 ? void 0 : price.toSignificant(4)} ${(_currencies$Field$CUR4 = currencies[Field.CURRENCY_B]) === null || _currencies$Field$CUR4 === void 0 ? void 0 : _currencies$Field$CUR4.symbol}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RowBetween, {\n      style: {\n        justifyContent: 'flex-end'\n      },\n      children: /*#__PURE__*/_jsxDEV(Text, {\n        children: `1 ${(_currencies$Field$CUR5 = currencies[Field.CURRENCY_B]) === null || _currencies$Field$CUR5 === void 0 ? void 0 : _currencies$Field$CUR5.symbol} = ${price === null || price === void 0 ? void 0 : price.invert().toSignificant(4)} ${(_currencies$Field$CUR6 = currencies[Field.CURRENCY_A]) === null || _currencies$Field$CUR6 === void 0 ? void 0 : _currencies$Field$CUR6.symbol}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RowBetween, {\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        children: [t('Share of Pool'), \":\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        children: [noLiquidity ? '100' : poolTokenPercentage === null || poolTokenPercentage === void 0 ? void 0 : poolTokenPercentage.toSignificant(4), \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: onAdd,\n      mt: \"20px\",\n      children: noLiquidity ? t('Create Pool & Supply') : t('Confirm Supply')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ConfirmAddModalBottom, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n\n_c = ConfirmAddModalBottom;\nexport default ConfirmAddModalBottom;\n\nvar _c;\n\n$RefreshReg$(_c, \"ConfirmAddModalBottom\");","map":{"version":3,"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/views/AddLiquidity/ConfirmAddModalBottom.tsx"],"names":["React","Button","Text","useTranslation","RowBetween","RowFixed","CurrencyLogo","Field","ConfirmAddModalBottom","noLiquidity","price","currencies","parsedAmounts","poolTokenPercentage","onAdd","t","asset","CURRENCY_A","symbol","marginRight","toSignificant","CURRENCY_B","justifyContent","invert"],"mappings":"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","sourcesContent":["import { Currency, CurrencyAmount, Fraction, Percent } from '@pancakeswap/sdk'\r\nimport React from 'react'\r\nimport { Button, Text } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { RowBetween, RowFixed } from '../../components/Layout/Row'\r\nimport { CurrencyLogo } from '../../components/Logo'\r\nimport { Field } from '../../state/mint/actions'\r\n\r\nfunction ConfirmAddModalBottom({\r\n  noLiquidity,\r\n  price,\r\n  currencies,\r\n  parsedAmounts,\r\n  poolTokenPercentage,\r\n  onAdd,\r\n}: {\r\n  noLiquidity?: boolean\r\n  price?: Fraction\r\n  currencies: { [field in Field]?: Currency }\r\n  parsedAmounts: { [field in Field]?: CurrencyAmount }\r\n  poolTokenPercentage?: Percent\r\n  onAdd: () => void\r\n}) {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <>\r\n      <RowBetween>\r\n        <Text>{t('%asset% Deposited', { asset: currencies[Field.CURRENCY_A]?.symbol })}</Text>\r\n        <RowFixed>\r\n          <CurrencyLogo currency={currencies[Field.CURRENCY_A]} style={{ marginRight: '8px' }} />\r\n          <Text>{parsedAmounts[Field.CURRENCY_A]?.toSignificant(6)}</Text>\r\n        </RowFixed>\r\n      </RowBetween>\r\n      <RowBetween>\r\n        <Text>{t('%asset% Deposited', { asset: currencies[Field.CURRENCY_B]?.symbol })}</Text>\r\n        <RowFixed>\r\n          <CurrencyLogo currency={currencies[Field.CURRENCY_B]} style={{ marginRight: '8px' }} />\r\n          <Text>{parsedAmounts[Field.CURRENCY_B]?.toSignificant(6)}</Text>\r\n        </RowFixed>\r\n      </RowBetween>\r\n      <RowBetween>\r\n        <Text>{t('Rates')}</Text>\r\n        <Text>\r\n          {`1 ${currencies[Field.CURRENCY_A]?.symbol} = ${price?.toSignificant(4)} ${\r\n            currencies[Field.CURRENCY_B]?.symbol\r\n          }`}\r\n        </Text>\r\n      </RowBetween>\r\n      <RowBetween style={{ justifyContent: 'flex-end' }}>\r\n        <Text>\r\n          {`1 ${currencies[Field.CURRENCY_B]?.symbol} = ${price?.invert().toSignificant(4)} ${\r\n            currencies[Field.CURRENCY_A]?.symbol\r\n          }`}\r\n        </Text>\r\n      </RowBetween>\r\n      <RowBetween>\r\n        <Text>{t('Share of Pool')}:</Text>\r\n        <Text>{noLiquidity ? '100' : poolTokenPercentage?.toSignificant(4)}%</Text>\r\n      </RowBetween>\r\n      <Button onClick={onAdd} mt=\"20px\">\r\n        {noLiquidity ? t('Create Pool & Supply') : t('Confirm Supply')}\r\n      </Button>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ConfirmAddModalBottom\r\n"]},"metadata":{},"sourceType":"module"}