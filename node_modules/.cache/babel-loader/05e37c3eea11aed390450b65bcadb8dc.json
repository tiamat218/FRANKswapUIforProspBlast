{"ast":null,"code":"// Constructing the two forward-slash-separated parts of the 'Add Liquidity' URL\n// Each part of the url represents a different side of the LP pair.\nimport{getWbnbAddress}from'./addressHelpers';const getLiquidityUrlPathParts=_ref=>{let{quoteTokenAddress,tokenAddress}=_ref;const chainId=process.env.REACT_APP_CHAIN_ID;const wBNBAddressString=getWbnbAddress();const quoteTokenAddressString=quoteTokenAddress?quoteTokenAddress[chainId]:null;const tokenAddressString=tokenAddress?tokenAddress[chainId]:null;const firstPart=!quoteTokenAddressString||quoteTokenAddressString===wBNBAddressString?'BNB':quoteTokenAddressString;const secondPart=!tokenAddressString||tokenAddressString===wBNBAddressString?'BNB':tokenAddressString;return\"\".concat(firstPart,\"/\").concat(secondPart);};export default getLiquidityUrlPathParts;","map":{"version":3,"names":["getWbnbAddress","getLiquidityUrlPathParts","_ref","quoteTokenAddress","tokenAddress","chainId","process","env","REACT_APP_CHAIN_ID","wBNBAddressString","quoteTokenAddressString","tokenAddressString","firstPart","secondPart","concat"],"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/utils/getLiquidityUrlPathParts.ts"],"sourcesContent":["// Constructing the two forward-slash-separated parts of the 'Add Liquidity' URL\r\n// Each part of the url represents a different side of the LP pair.\r\nimport { getWbnbAddress } from './addressHelpers'\r\n\r\nconst getLiquidityUrlPathParts = ({ quoteTokenAddress, tokenAddress }) => {\r\n  const chainId = process.env.REACT_APP_CHAIN_ID\r\n  const wBNBAddressString = getWbnbAddress()\r\n  const quoteTokenAddressString: string = quoteTokenAddress ? quoteTokenAddress[chainId] : null\r\n  const tokenAddressString: string = tokenAddress ? tokenAddress[chainId] : null\r\n  const firstPart =\r\n    !quoteTokenAddressString || quoteTokenAddressString === wBNBAddressString ? 'BNB' : quoteTokenAddressString\r\n  const secondPart = !tokenAddressString || tokenAddressString === wBNBAddressString ? 'BNB' : tokenAddressString\r\n  return `${firstPart}/${secondPart}`\r\n}\r\n\r\nexport default getLiquidityUrlPathParts\r\n"],"mappings":"AAAA;AACA;AACA,OAASA,cAAc,KAAQ,kBAAkB,CAEjD,KAAM,CAAAC,wBAAwB,CAAGC,IAAA,EAAyC,IAAxC,CAAEC,iBAAiB,CAAEC,YAAa,CAAC,CAAAF,IAAA,CACnE,KAAM,CAAAG,OAAO,CAAGC,OAAO,CAACC,GAAG,CAACC,kBAAkB,CAC9C,KAAM,CAAAC,iBAAiB,CAAGT,cAAc,CAAC,CAAC,CAC1C,KAAM,CAAAU,uBAA+B,CAAGP,iBAAiB,CAAGA,iBAAiB,CAACE,OAAO,CAAC,CAAG,IAAI,CAC7F,KAAM,CAAAM,kBAA0B,CAAGP,YAAY,CAAGA,YAAY,CAACC,OAAO,CAAC,CAAG,IAAI,CAC9E,KAAM,CAAAO,SAAS,CACb,CAACF,uBAAuB,EAAIA,uBAAuB,GAAKD,iBAAiB,CAAG,KAAK,CAAGC,uBAAuB,CAC7G,KAAM,CAAAG,UAAU,CAAG,CAACF,kBAAkB,EAAIA,kBAAkB,GAAKF,iBAAiB,CAAG,KAAK,CAAGE,kBAAkB,CAC/G,SAAAG,MAAA,CAAUF,SAAS,MAAAE,MAAA,CAAID,UAAU,EACnC,CAAC,CAED,cAAe,CAAAZ,wBAAwB","ignoreList":[]},"metadata":{},"sourceType":"module"}