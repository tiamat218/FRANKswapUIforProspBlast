{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Devrim\\\\Documents\\\\swapUIforProspBlast\\\\src\\\\views\\\\Profile\\\\components\\\\ClaimPointsCallout .tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { sumBy } from 'lodash';\nimport { useAppDispatch } from 'state';\nimport { useWeb3React } from '@web3-react/core';\nimport { Card, CardBody, CardHeader, Flex, Heading, PrizeIcon } from '@pancakeswap/uikit';\nimport { useProfile } from 'state/profile/hooks';\nimport { addPoints } from 'state/profile';\nimport { addAchievement } from 'state/achievements';\nimport { useTranslation } from 'contexts/Localization';\nimport { getClaimableIfoData } from 'utils/achievements';\nimport AchievementRow from './AchievementRow';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ClaimPointsCallout = () => {\n  _s();\n  const [claimableAchievements, setClaimableAchievement] = useState([]);\n  const {\n    t\n  } = useTranslation();\n  const dispatch = useAppDispatch();\n  const {\n    profile\n  } = useProfile();\n  const {\n    account\n  } = useWeb3React();\n  useEffect(() => {\n    const fetchIfoClaims = async () => {\n      const ifoData = await getClaimableIfoData(account);\n      setClaimableAchievement(ifoData);\n    };\n    if (account) {\n      fetchIfoClaims();\n    }\n  }, [account, dispatch, setClaimableAchievement]);\n  const handleCollectSuccess = achievement => {\n    dispatch(addAchievement(achievement));\n    dispatch(addPoints(achievement.points));\n    setClaimableAchievement(prevClaimableAchievements => prevClaimableAchievements.filter(prevClaimableAchievement => prevClaimableAchievement.id !== achievement.id));\n  };\n  if (!(profile === null || profile === void 0 ? void 0 : profile.isActive)) {\n    return null;\n  }\n  if (claimableAchievements.length === 0) {\n    return null;\n  }\n  const totalPointsToCollect = sumBy(claimableAchievements, 'points');\n  return /*#__PURE__*/_jsxDEV(Card, {\n    isActive: true,\n    mb: \"32px\",\n    children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n      children: /*#__PURE__*/_jsxDEV(Flex, {\n        flexDirection: ['column', null, 'row'],\n        justifyContent: ['start', null, 'space-between'],\n        children: /*#__PURE__*/_jsxDEV(Flex, {\n          alignItems: \"center\",\n          mb: ['16px', null, 0],\n          children: [/*#__PURE__*/_jsxDEV(PrizeIcon, {\n            width: \"32px\",\n            mr: \"8px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Heading, {\n            scale: \"lg\",\n            children: t('%num% Points to Collect', {\n              num: totalPointsToCollect\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n      children: claimableAchievements.map(achievement => /*#__PURE__*/_jsxDEV(AchievementRow, {\n        achievement: achievement,\n        onCollectSuccess: handleCollectSuccess\n      }, achievement.address, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(ClaimPointsCallout, \"10pOiOE7eL3hmFYUD2efaa3922U=\", false, function () {\n  return [useTranslation, useAppDispatch, useProfile, useWeb3React];\n});\n_c = ClaimPointsCallout;\nexport default ClaimPointsCallout;\nvar _c;\n$RefreshReg$(_c, \"ClaimPointsCallout\");","map":{"version":3,"names":["React","useEffect","useState","sumBy","useAppDispatch","useWeb3React","Card","CardBody","CardHeader","Flex","Heading","PrizeIcon","useProfile","addPoints","addAchievement","useTranslation","getClaimableIfoData","AchievementRow","jsxDEV","_jsxDEV","ClaimPointsCallout","_s","claimableAchievements","setClaimableAchievement","t","dispatch","profile","account","fetchIfoClaims","ifoData","handleCollectSuccess","achievement","points","prevClaimableAchievements","filter","prevClaimableAchievement","id","isActive","length","totalPointsToCollect","mb","children","flexDirection","justifyContent","alignItems","width","mr","fileName","_jsxFileName","lineNumber","columnNumber","scale","num","map","onCollectSuccess","address","_c","$RefreshReg$"],"sources":["C:/Users/Devrim/Documents/swapUIforProspBlast/src/views/Profile/components/ClaimPointsCallout .tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { sumBy } from 'lodash'\r\nimport { useAppDispatch } from 'state'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { Card, CardBody, CardHeader, Flex, Heading, PrizeIcon } from '@pancakeswap/uikit'\r\nimport { useProfile } from 'state/profile/hooks'\r\nimport { Achievement } from 'state/types'\r\nimport { addPoints } from 'state/profile'\r\nimport { addAchievement } from 'state/achievements'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { getClaimableIfoData } from 'utils/achievements'\r\nimport AchievementRow from './AchievementRow'\r\n\r\nconst ClaimPointsCallout = () => {\r\n  const [claimableAchievements, setClaimableAchievement] = useState<Achievement[]>([])\r\n  const { t } = useTranslation()\r\n  const dispatch = useAppDispatch()\r\n  const { profile } = useProfile()\r\n  const { account } = useWeb3React()\r\n\r\n  useEffect(() => {\r\n    const fetchIfoClaims = async () => {\r\n      const ifoData = await getClaimableIfoData(account)\r\n      setClaimableAchievement(ifoData)\r\n    }\r\n\r\n    if (account) {\r\n      fetchIfoClaims()\r\n    }\r\n  }, [account, dispatch, setClaimableAchievement])\r\n\r\n  const handleCollectSuccess = (achievement: Achievement) => {\r\n    dispatch(addAchievement(achievement))\r\n    dispatch(addPoints(achievement.points))\r\n\r\n    setClaimableAchievement((prevClaimableAchievements) =>\r\n      prevClaimableAchievements.filter((prevClaimableAchievement) => prevClaimableAchievement.id !== achievement.id),\r\n    )\r\n  }\r\n\r\n  if (!profile?.isActive) {\r\n    return null\r\n  }\r\n\r\n  if (claimableAchievements.length === 0) {\r\n    return null\r\n  }\r\n\r\n  const totalPointsToCollect = sumBy(claimableAchievements, 'points')\r\n\r\n  return (\r\n    <Card isActive mb=\"32px\">\r\n      <CardHeader>\r\n        <Flex flexDirection={['column', null, 'row']} justifyContent={['start', null, 'space-between']}>\r\n          <Flex alignItems=\"center\" mb={['16px', null, 0]}>\r\n            <PrizeIcon width=\"32px\" mr=\"8px\" />\r\n            <Heading scale=\"lg\">{t('%num% Points to Collect', { num: totalPointsToCollect })}</Heading>\r\n          </Flex>\r\n        </Flex>\r\n      </CardHeader>\r\n      <CardBody>\r\n        {claimableAchievements.map((achievement) => (\r\n          <AchievementRow key={achievement.address} achievement={achievement} onCollectSuccess={handleCollectSuccess} />\r\n        ))}\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default ClaimPointsCallout\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}