{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Devrim\\\\Documents\\\\FRANKswapUIforProspBlast\\\\src\\\\views\\\\Predictions\\\\components\\\\RoundCard\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useWeb3React } from '@web3-react/core';\nimport { useGetBetByEpoch, useGetCurrentEpoch } from 'state/hooks';\nimport { BetPosition } from 'state/types';\nimport { getMultiplierv2 } from '../../helpers';\nimport ExpiredRoundCard from './ExpiredRoundCard';\nimport LiveRoundCard from './LiveRoundCard';\nimport OpenRoundCard from './OpenRoundCard';\nimport SoonRoundCard from './SoonRoundCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RoundCard = ({\n  round\n}) => {\n  _s();\n\n  const {\n    epoch,\n    lockPrice,\n    closePrice,\n    totalAmount,\n    bullAmount,\n    bearAmount\n  } = round;\n  const currentEpoch = useGetCurrentEpoch();\n  const {\n    account\n  } = useWeb3React();\n  const ledger = useGetBetByEpoch(account, epoch);\n  const hasEntered = ledger ? ledger.amount.gt(0) : false;\n  const hasEnteredUp = hasEntered && ledger.position === BetPosition.BULL;\n  const hasEnteredDown = hasEntered && ledger.position === BetPosition.BEAR;\n  const hasClaimedUp = hasEntered && ledger.claimed && ledger.position === BetPosition.BULL;\n  const hasClaimedDown = hasEntered && ledger.claimed && ledger.position === BetPosition.BEAR;\n  const bullMultiplier = getMultiplierv2(totalAmount, bullAmount);\n  const bearMultiplier = getMultiplierv2(totalAmount, bearAmount);\n  const formattedBullMultiplier = bullMultiplier.toUnsafeFloat().toFixed(bullMultiplier.isZero() ? 0 : 2);\n  const formattedbearMultiplier = bearMultiplier.toUnsafeFloat().toFixed(bearMultiplier.isZero() ? 0 : 2); // Next (open) round\n\n  if (epoch === currentEpoch && lockPrice === null) {\n    return /*#__PURE__*/_jsxDEV(OpenRoundCard, {\n      round: round,\n      hasEnteredDown: hasEnteredDown,\n      hasEnteredUp: hasEnteredUp,\n      betAmount: ledger === null || ledger === void 0 ? void 0 : ledger.amount,\n      bullMultiplier: formattedBullMultiplier,\n      bearMultiplier: formattedbearMultiplier\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this);\n  } // Live round\n\n\n  if (closePrice === null && epoch === currentEpoch - 1) {\n    return /*#__PURE__*/_jsxDEV(LiveRoundCard, {\n      betAmount: ledger === null || ledger === void 0 ? void 0 : ledger.amount,\n      hasEnteredDown: hasEnteredDown,\n      hasEnteredUp: hasEnteredUp,\n      round: round,\n      bullMultiplier: formattedBullMultiplier,\n      bearMultiplier: formattedbearMultiplier\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this);\n  } // Fake future rounds\n\n\n  if (epoch > currentEpoch) {\n    return /*#__PURE__*/_jsxDEV(SoonRoundCard, {\n      round: round\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 12\n    }, this);\n  } // Past rounds\n\n\n  return /*#__PURE__*/_jsxDEV(ExpiredRoundCard, {\n    round: round,\n    hasEnteredDown: hasEnteredDown,\n    hasEnteredUp: hasEnteredUp,\n    hasClaimedDown: hasClaimedDown,\n    hasClaimedUp: hasClaimedUp,\n    betAmount: ledger === null || ledger === void 0 ? void 0 : ledger.amount,\n    bullMultiplier: formattedBullMultiplier,\n    bearMultiplier: formattedbearMultiplier\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RoundCard, \"Dvg8vnDGONu0Ab8Ok90V6GJobg8=\", false, function () {\n  return [useGetCurrentEpoch, useWeb3React, useGetBetByEpoch];\n});\n\n_c = RoundCard;\nexport default RoundCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"RoundCard\");","map":{"version":3,"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/views/Predictions/components/RoundCard/index.tsx"],"names":["React","useWeb3React","useGetBetByEpoch","useGetCurrentEpoch","BetPosition","getMultiplierv2","ExpiredRoundCard","LiveRoundCard","OpenRoundCard","SoonRoundCard","RoundCard","round","epoch","lockPrice","closePrice","totalAmount","bullAmount","bearAmount","currentEpoch","account","ledger","hasEntered","amount","gt","hasEnteredUp","position","BULL","hasEnteredDown","BEAR","hasClaimedUp","claimed","hasClaimedDown","bullMultiplier","bearMultiplier","formattedBullMultiplier","toUnsafeFloat","toFixed","isZero","formattedbearMultiplier"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useGetBetByEpoch, useGetCurrentEpoch } from 'state/hooks'\r\nimport { BetPosition, NodeRound } from 'state/types'\r\nimport { getMultiplierv2 } from '../../helpers'\r\nimport ExpiredRoundCard from './ExpiredRoundCard'\r\nimport LiveRoundCard from './LiveRoundCard'\r\nimport OpenRoundCard from './OpenRoundCard'\r\nimport SoonRoundCard from './SoonRoundCard'\r\n\r\ninterface RoundCardProps {\r\n  round: NodeRound\r\n}\r\n\r\nconst RoundCard: React.FC<RoundCardProps> = ({ round }) => {\r\n  const { epoch, lockPrice, closePrice, totalAmount, bullAmount, bearAmount } = round\r\n  const currentEpoch = useGetCurrentEpoch()\r\n  const { account } = useWeb3React()\r\n  const ledger = useGetBetByEpoch(account, epoch)\r\n  const hasEntered = ledger ? ledger.amount.gt(0) : false\r\n  const hasEnteredUp = hasEntered && ledger.position === BetPosition.BULL\r\n  const hasEnteredDown = hasEntered && ledger.position === BetPosition.BEAR\r\n  const hasClaimedUp = hasEntered && ledger.claimed && ledger.position === BetPosition.BULL\r\n  const hasClaimedDown = hasEntered && ledger.claimed && ledger.position === BetPosition.BEAR\r\n\r\n  const bullMultiplier = getMultiplierv2(totalAmount, bullAmount)\r\n  const bearMultiplier = getMultiplierv2(totalAmount, bearAmount)\r\n\r\n  const formattedBullMultiplier = bullMultiplier.toUnsafeFloat().toFixed(bullMultiplier.isZero() ? 0 : 2)\r\n  const formattedbearMultiplier = bearMultiplier.toUnsafeFloat().toFixed(bearMultiplier.isZero() ? 0 : 2)\r\n\r\n  // Next (open) round\r\n  if (epoch === currentEpoch && lockPrice === null) {\r\n    return (\r\n      <OpenRoundCard\r\n        round={round}\r\n        hasEnteredDown={hasEnteredDown}\r\n        hasEnteredUp={hasEnteredUp}\r\n        betAmount={ledger?.amount}\r\n        bullMultiplier={formattedBullMultiplier}\r\n        bearMultiplier={formattedbearMultiplier}\r\n      />\r\n    )\r\n  }\r\n\r\n  // Live round\r\n  if (closePrice === null && epoch === currentEpoch - 1) {\r\n    return (\r\n      <LiveRoundCard\r\n        betAmount={ledger?.amount}\r\n        hasEnteredDown={hasEnteredDown}\r\n        hasEnteredUp={hasEnteredUp}\r\n        round={round}\r\n        bullMultiplier={formattedBullMultiplier}\r\n        bearMultiplier={formattedbearMultiplier}\r\n      />\r\n    )\r\n  }\r\n\r\n  // Fake future rounds\r\n  if (epoch > currentEpoch) {\r\n    return <SoonRoundCard round={round} />\r\n  }\r\n\r\n  // Past rounds\r\n  return (\r\n    <ExpiredRoundCard\r\n      round={round}\r\n      hasEnteredDown={hasEnteredDown}\r\n      hasEnteredUp={hasEnteredUp}\r\n      hasClaimedDown={hasClaimedDown}\r\n      hasClaimedUp={hasClaimedUp}\r\n      betAmount={ledger?.amount}\r\n      bullMultiplier={formattedBullMultiplier}\r\n      bearMultiplier={formattedbearMultiplier}\r\n    />\r\n  )\r\n}\r\n\r\nexport default RoundCard\r\n"]},"metadata":{},"sourceType":"module"}