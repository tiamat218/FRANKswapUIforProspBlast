{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Devrim\\\\Documents\\\\FRANKswapUIforProspBlast\\\\src\\\\components\\\\SearchModal\\\\CurrencySearch.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useMemo, useRef, useState, useEffect } from 'react';\nimport { ETHER } from '@pancakeswap/sdk';\nimport { Text, Input, Box } from '@pancakeswap/uikit';\nimport { useTranslation } from 'contexts/Localization';\nimport { useAudioModeManager } from 'state/user/hooks';\nimport useDebounce from 'hooks/useDebounce';\nimport useActiveWeb3React from 'hooks/useActiveWeb3React';\nimport { useAllTokens, useToken, useIsUserAddedToken, useFoundOnInactiveList } from '../../hooks/Tokens';\nimport { isAddress } from '../../utils';\nimport Column, { AutoColumn } from '../Layout/Column';\nimport Row from '../Layout/Row';\nimport CommonBases from './CommonBases';\nimport CurrencyList from './CurrencyList';\nimport { filterTokens, useSortedTokensByQuery } from './filtering';\nimport useTokenComparator from './sorting';\nimport ImportRow from './ImportRow';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst swapSound = new Audio('swap.mp3');\n\nfunction CurrencySearch({\n  selectedCurrency,\n  onCurrencySelect,\n  otherSelectedCurrency,\n  showCommonBases,\n  showImportView,\n  setImportToken\n}) {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  const {\n    chainId\n  } = useActiveWeb3React(); // refs for fixed size lists\n\n  const fixedList = useRef();\n  const [searchQuery, setSearchQuery] = useState('');\n  const debouncedQuery = useDebounce(searchQuery, 200);\n  const [invertSearchOrder] = useState(false);\n  const allTokens = useAllTokens(); // if they input an address, use it\n\n  const searchToken = useToken(debouncedQuery);\n  const searchTokenIsAdded = useIsUserAddedToken(searchToken);\n  const [audioPlay] = useAudioModeManager();\n  const showETH = useMemo(() => {\n    const s = debouncedQuery.toLowerCase().trim();\n    return s === '' || s === 'b' || s === 'bn' || s === 'bnb';\n  }, [debouncedQuery]);\n  const tokenComparator = useTokenComparator(invertSearchOrder);\n  const filteredTokens = useMemo(() => {\n    return filterTokens(Object.values(allTokens), debouncedQuery);\n  }, [allTokens, debouncedQuery]);\n  const sortedTokens = useMemo(() => {\n    return filteredTokens.sort(tokenComparator);\n  }, [filteredTokens, tokenComparator]);\n  const filteredSortedTokens = useSortedTokensByQuery(sortedTokens, debouncedQuery);\n  const handleCurrencySelect = useCallback(currency => {\n    onCurrencySelect(currency);\n\n    if (audioPlay) {\n      swapSound.play();\n    }\n  }, [audioPlay, onCurrencySelect]); // manage focus on modal show\n\n  const inputRef = useRef();\n  useEffect(() => {\n    inputRef.current.focus();\n  }, []);\n  const handleInput = useCallback(event => {\n    var _fixedList$current;\n\n    const input = event.target.value;\n    const checksummedInput = isAddress(input);\n    setSearchQuery(checksummedInput || input);\n    (_fixedList$current = fixedList.current) === null || _fixedList$current === void 0 ? void 0 : _fixedList$current.scrollTo(0);\n  }, []);\n  const handleEnter = useCallback(e => {\n    if (e.key === 'Enter') {\n      const s = debouncedQuery.toLowerCase().trim();\n\n      if (s === 'bnb') {\n        handleCurrencySelect(ETHER);\n      } else if (filteredSortedTokens.length > 0) {\n        var _filteredSortedTokens;\n\n        if (((_filteredSortedTokens = filteredSortedTokens[0].symbol) === null || _filteredSortedTokens === void 0 ? void 0 : _filteredSortedTokens.toLowerCase()) === debouncedQuery.trim().toLowerCase() || filteredSortedTokens.length === 1) {\n          handleCurrencySelect(filteredSortedTokens[0]);\n        }\n      }\n    }\n  }, [filteredSortedTokens, handleCurrencySelect, debouncedQuery]); // if no results on main list, show option to expand into inactive\n\n  const inactiveTokens = useFoundOnInactiveList(debouncedQuery);\n  const filteredInactiveTokens = useSortedTokensByQuery(inactiveTokens, debouncedQuery);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(AutoColumn, {\n        gap: \"16px\",\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            id: \"token-search-input\",\n            placeholder: t('Search name or paste address'),\n            scale: \"lg\",\n            autoComplete: \"off\",\n            value: searchQuery,\n            ref: inputRef,\n            onChange: handleInput,\n            onKeyDown: handleEnter\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), showCommonBases && /*#__PURE__*/_jsxDEV(CommonBases, {\n          chainId: chainId,\n          onSelect: handleCurrencySelect,\n          selectedCurrency: selectedCurrency\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), searchToken && !searchTokenIsAdded ? /*#__PURE__*/_jsxDEV(Column, {\n        style: {\n          padding: '20px 0',\n          height: '100%'\n        },\n        children: /*#__PURE__*/_jsxDEV(ImportRow, {\n          token: searchToken,\n          showImportView: showImportView,\n          setImportToken: setImportToken\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }, this) : (filteredSortedTokens === null || filteredSortedTokens === void 0 ? void 0 : filteredSortedTokens.length) > 0 || (filteredInactiveTokens === null || filteredInactiveTokens === void 0 ? void 0 : filteredInactiveTokens.length) > 0 ? /*#__PURE__*/_jsxDEV(Box, {\n        margin: \"24px -24px\",\n        children: /*#__PURE__*/_jsxDEV(CurrencyList, {\n          height: 390,\n          showETH: showETH,\n          currencies: filteredInactiveTokens ? filteredSortedTokens.concat(filteredInactiveTokens) : filteredSortedTokens,\n          breakIndex: inactiveTokens && filteredSortedTokens ? filteredSortedTokens.length : undefined,\n          onCurrencySelect: handleCurrencySelect,\n          otherCurrency: otherSelectedCurrency,\n          selectedCurrency: selectedCurrency,\n          fixedListRef: fixedList,\n          showImportView: showImportView,\n          setImportToken: setImportToken\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Column, {\n        style: {\n          padding: '20px',\n          height: '100%'\n        },\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          color: \"textSubtle\",\n          textAlign: \"center\",\n          mb: \"20px\",\n          children: t('No results found.')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(CurrencySearch, \"DVASNfAvKj0ERrgDMVUYq4Y0BQo=\", false, function () {\n  return [useTranslation, useActiveWeb3React, useDebounce, useAllTokens, useToken, useIsUserAddedToken, useAudioModeManager, useTokenComparator, useSortedTokensByQuery, useFoundOnInactiveList, useSortedTokensByQuery];\n});\n\n_c = CurrencySearch;\nexport default CurrencySearch;\n\nvar _c;\n\n$RefreshReg$(_c, \"CurrencySearch\");","map":{"version":3,"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/components/SearchModal/CurrencySearch.tsx"],"names":["React","useCallback","useMemo","useRef","useState","useEffect","ETHER","Text","Input","Box","useTranslation","useAudioModeManager","useDebounce","useActiveWeb3React","useAllTokens","useToken","useIsUserAddedToken","useFoundOnInactiveList","isAddress","Column","AutoColumn","Row","CommonBases","CurrencyList","filterTokens","useSortedTokensByQuery","useTokenComparator","ImportRow","swapSound","Audio","CurrencySearch","selectedCurrency","onCurrencySelect","otherSelectedCurrency","showCommonBases","showImportView","setImportToken","t","chainId","fixedList","searchQuery","setSearchQuery","debouncedQuery","invertSearchOrder","allTokens","searchToken","searchTokenIsAdded","audioPlay","showETH","s","toLowerCase","trim","tokenComparator","filteredTokens","Object","values","sortedTokens","sort","filteredSortedTokens","handleCurrencySelect","currency","play","inputRef","current","focus","handleInput","event","input","target","value","checksummedInput","scrollTo","handleEnter","e","key","length","symbol","inactiveTokens","filteredInactiveTokens","padding","height","concat","undefined"],"mappings":"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","sourcesContent":["import React, { KeyboardEvent, RefObject, useCallback, useMemo, useRef, useState, useEffect } from 'react'\r\nimport { Currency, ETHER, Token } from '@pancakeswap/sdk'\r\nimport { Text, Input, Box } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { FixedSizeList } from 'react-window'\r\nimport { useAudioModeManager } from 'state/user/hooks'\r\nimport useDebounce from 'hooks/useDebounce'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport { useAllTokens, useToken, useIsUserAddedToken, useFoundOnInactiveList } from '../../hooks/Tokens'\r\nimport { isAddress } from '../../utils'\r\nimport Column, { AutoColumn } from '../Layout/Column'\r\nimport Row from '../Layout/Row'\r\nimport CommonBases from './CommonBases'\r\nimport CurrencyList from './CurrencyList'\r\nimport { filterTokens, useSortedTokensByQuery } from './filtering'\r\nimport useTokenComparator from './sorting'\r\n\r\nimport ImportRow from './ImportRow'\r\n\r\ninterface CurrencySearchProps {\r\n  selectedCurrency?: Currency | null\r\n  onCurrencySelect: (currency: Currency) => void\r\n  otherSelectedCurrency?: Currency | null\r\n  showCommonBases?: boolean\r\n  showImportView: () => void\r\n  setImportToken: (token: Token) => void\r\n}\r\n\r\nconst swapSound = new Audio('swap.mp3')\r\n\r\nfunction CurrencySearch({\r\n  selectedCurrency,\r\n  onCurrencySelect,\r\n  otherSelectedCurrency,\r\n  showCommonBases,\r\n  showImportView,\r\n  setImportToken,\r\n}: CurrencySearchProps) {\r\n  const { t } = useTranslation()\r\n  const { chainId } = useActiveWeb3React()\r\n\r\n  // refs for fixed size lists\r\n  const fixedList = useRef<FixedSizeList>()\r\n\r\n  const [searchQuery, setSearchQuery] = useState<string>('')\r\n  const debouncedQuery = useDebounce(searchQuery, 200)\r\n\r\n  const [invertSearchOrder] = useState<boolean>(false)\r\n\r\n  const allTokens = useAllTokens()\r\n\r\n  // if they input an address, use it\r\n  const searchToken = useToken(debouncedQuery)\r\n  const searchTokenIsAdded = useIsUserAddedToken(searchToken)\r\n\r\n  const [audioPlay] = useAudioModeManager()\r\n\r\n  const showETH: boolean = useMemo(() => {\r\n    const s = debouncedQuery.toLowerCase().trim()\r\n    return s === '' || s === 'b' || s === 'bn' || s === 'bnb'\r\n  }, [debouncedQuery])\r\n\r\n  const tokenComparator = useTokenComparator(invertSearchOrder)\r\n\r\n  const filteredTokens: Token[] = useMemo(() => {\r\n    return filterTokens(Object.values(allTokens), debouncedQuery)\r\n  }, [allTokens, debouncedQuery])\r\n\r\n  const sortedTokens: Token[] = useMemo(() => {\r\n    return filteredTokens.sort(tokenComparator)\r\n  }, [filteredTokens, tokenComparator])\r\n\r\n  const filteredSortedTokens = useSortedTokensByQuery(sortedTokens, debouncedQuery)\r\n\r\n  const handleCurrencySelect = useCallback(\r\n    (currency: Currency) => {\r\n      onCurrencySelect(currency)\r\n      if (audioPlay) {\r\n        swapSound.play()\r\n      }\r\n    },\r\n    [audioPlay, onCurrencySelect],\r\n  )\r\n\r\n  // manage focus on modal show\r\n  const inputRef = useRef<HTMLInputElement>()\r\n\r\n  useEffect(() => {\r\n    inputRef.current.focus()\r\n  }, [])\r\n\r\n  const handleInput = useCallback((event) => {\r\n    const input = event.target.value\r\n    const checksummedInput = isAddress(input)\r\n    setSearchQuery(checksummedInput || input)\r\n    fixedList.current?.scrollTo(0)\r\n  }, [])\r\n\r\n  const handleEnter = useCallback(\r\n    (e: KeyboardEvent<HTMLInputElement>) => {\r\n      if (e.key === 'Enter') {\r\n        const s = debouncedQuery.toLowerCase().trim()\r\n        if (s === 'bnb') {\r\n          handleCurrencySelect(ETHER)\r\n        } else if (filteredSortedTokens.length > 0) {\r\n          if (\r\n            filteredSortedTokens[0].symbol?.toLowerCase() === debouncedQuery.trim().toLowerCase() ||\r\n            filteredSortedTokens.length === 1\r\n          ) {\r\n            handleCurrencySelect(filteredSortedTokens[0])\r\n          }\r\n        }\r\n      }\r\n    },\r\n    [filteredSortedTokens, handleCurrencySelect, debouncedQuery],\r\n  )\r\n\r\n  // if no results on main list, show option to expand into inactive\r\n  const inactiveTokens = useFoundOnInactiveList(debouncedQuery)\r\n  const filteredInactiveTokens: Token[] = useSortedTokensByQuery(inactiveTokens, debouncedQuery)\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <AutoColumn gap=\"16px\">\r\n          <Row>\r\n            <Input\r\n              id=\"token-search-input\"\r\n              placeholder={t('Search name or paste address')}\r\n              scale=\"lg\"\r\n              autoComplete=\"off\"\r\n              value={searchQuery}\r\n              ref={inputRef as RefObject<HTMLInputElement>}\r\n              onChange={handleInput}\r\n              onKeyDown={handleEnter}\r\n            />\r\n          </Row>\r\n          {showCommonBases && (\r\n            <CommonBases chainId={chainId} onSelect={handleCurrencySelect} selectedCurrency={selectedCurrency} />\r\n          )}\r\n        </AutoColumn>\r\n        {searchToken && !searchTokenIsAdded ? (\r\n          <Column style={{ padding: '20px 0', height: '100%' }}>\r\n            <ImportRow token={searchToken} showImportView={showImportView} setImportToken={setImportToken} />\r\n          </Column>\r\n        ) : filteredSortedTokens?.length > 0 || filteredInactiveTokens?.length > 0 ? (\r\n          <Box margin=\"24px -24px\">\r\n            <CurrencyList\r\n              height={390}\r\n              showETH={showETH}\r\n              currencies={\r\n                filteredInactiveTokens ? filteredSortedTokens.concat(filteredInactiveTokens) : filteredSortedTokens\r\n              }\r\n              breakIndex={inactiveTokens && filteredSortedTokens ? filteredSortedTokens.length : undefined}\r\n              onCurrencySelect={handleCurrencySelect}\r\n              otherCurrency={otherSelectedCurrency}\r\n              selectedCurrency={selectedCurrency}\r\n              fixedListRef={fixedList}\r\n              showImportView={showImportView}\r\n              setImportToken={setImportToken}\r\n            />\r\n          </Box>\r\n        ) : (\r\n          <Column style={{ padding: '20px', height: '100%' }}>\r\n            <Text color=\"textSubtle\" textAlign=\"center\" mb=\"20px\">\r\n              {t('No results found.')}\r\n            </Text>\r\n          </Column>\r\n        )}\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CurrencySearch\r\n"]},"metadata":{},"sourceType":"module"}