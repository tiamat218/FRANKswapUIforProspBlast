{"ast":null,"code":"import { createReducer } from '@reduxjs/toolkit';\nimport { INITIAL_ALLOWED_SLIPPAGE, DEFAULT_DEADLINE_FROM_NOW } from '../../config/constants';\nimport { updateVersion } from '../global/actions';\nimport { addSerializedPair, addSerializedToken, removeSerializedPair, removeSerializedToken, updateUserExpertMode, updateUserSlippageTolerance, updateUserDeadline, updateUserSingleHopOnly, muteAudio, unmuteAudio, toggleTheme } from './actions';\nconst currentTimestamp = () => new Date().getTime();\nfunction pairKey(token0Address, token1Address) {\n  return `${token0Address};${token1Address}`;\n}\nexport const initialState = {\n  userExpertMode: false,\n  userSingleHopOnly: false,\n  userSlippageTolerance: INITIAL_ALLOWED_SLIPPAGE,\n  userDeadline: DEFAULT_DEADLINE_FROM_NOW,\n  tokens: {},\n  pairs: {},\n  timestamp: currentTimestamp(),\n  audioPlay: true,\n  isDark: false\n};\nexport default createReducer(initialState, builder => builder.addCase(updateVersion, state => {\n  // slippage isnt being tracked in local storage, reset to default\n  // noinspection SuspiciousTypeOfGuard\n  if (typeof state.userSlippageTolerance !== 'number') {\n    state.userSlippageTolerance = INITIAL_ALLOWED_SLIPPAGE;\n  }\n\n  // deadline isnt being tracked in local storage, reset to default\n  // noinspection SuspiciousTypeOfGuard\n  if (typeof state.userDeadline !== 'number') {\n    state.userDeadline = DEFAULT_DEADLINE_FROM_NOW;\n  }\n  state.lastUpdateVersionTimestamp = currentTimestamp();\n}).addCase(updateUserExpertMode, (state, action) => {\n  state.userExpertMode = action.payload.userExpertMode;\n  state.timestamp = currentTimestamp();\n}).addCase(updateUserSlippageTolerance, (state, action) => {\n  state.userSlippageTolerance = action.payload.userSlippageTolerance;\n  state.timestamp = currentTimestamp();\n}).addCase(updateUserDeadline, (state, action) => {\n  state.userDeadline = action.payload.userDeadline;\n  state.timestamp = currentTimestamp();\n}).addCase(updateUserSingleHopOnly, (state, action) => {\n  state.userSingleHopOnly = action.payload.userSingleHopOnly;\n}).addCase(addSerializedToken, (state, {\n  payload: {\n    serializedToken\n  }\n}) => {\n  if (!state.tokens) {\n    state.tokens = {};\n  }\n  state.tokens[serializedToken.chainId] = state.tokens[serializedToken.chainId] || {};\n  state.tokens[serializedToken.chainId][serializedToken.address] = serializedToken;\n  state.timestamp = currentTimestamp();\n}).addCase(removeSerializedToken, (state, {\n  payload: {\n    address,\n    chainId\n  }\n}) => {\n  if (!state.tokens) {\n    state.tokens = {};\n  }\n  state.tokens[chainId] = state.tokens[chainId] || {};\n  delete state.tokens[chainId][address];\n  state.timestamp = currentTimestamp();\n}).addCase(addSerializedPair, (state, {\n  payload: {\n    serializedPair\n  }\n}) => {\n  if (serializedPair.token0.chainId === serializedPair.token1.chainId && serializedPair.token0.address !== serializedPair.token1.address) {\n    const {\n      chainId\n    } = serializedPair.token0;\n    state.pairs[chainId] = state.pairs[chainId] || {};\n    state.pairs[chainId][pairKey(serializedPair.token0.address, serializedPair.token1.address)] = serializedPair;\n  }\n  state.timestamp = currentTimestamp();\n}).addCase(removeSerializedPair, (state, {\n  payload: {\n    chainId,\n    tokenAAddress,\n    tokenBAddress\n  }\n}) => {\n  if (state.pairs[chainId]) {\n    // just delete both keys if either exists\n    delete state.pairs[chainId][pairKey(tokenAAddress, tokenBAddress)];\n    delete state.pairs[chainId][pairKey(tokenBAddress, tokenAAddress)];\n  }\n  state.timestamp = currentTimestamp();\n}).addCase(muteAudio, state => {\n  state.audioPlay = false;\n}).addCase(unmuteAudio, state => {\n  state.audioPlay = true;\n}).addCase(toggleTheme, state => {\n  state.isDark = !state.isDark;\n}));","map":{"version":3,"names":["createReducer","INITIAL_ALLOWED_SLIPPAGE","DEFAULT_DEADLINE_FROM_NOW","updateVersion","addSerializedPair","addSerializedToken","removeSerializedPair","removeSerializedToken","updateUserExpertMode","updateUserSlippageTolerance","updateUserDeadline","updateUserSingleHopOnly","muteAudio","unmuteAudio","toggleTheme","currentTimestamp","Date","getTime","pairKey","token0Address","token1Address","initialState","userExpertMode","userSingleHopOnly","userSlippageTolerance","userDeadline","tokens","pairs","timestamp","audioPlay","isDark","builder","addCase","state","lastUpdateVersionTimestamp","action","payload","serializedToken","chainId","address","serializedPair","token0","token1","tokenAAddress","tokenBAddress"],"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/state/user/reducer.ts"],"sourcesContent":["import { createReducer } from '@reduxjs/toolkit'\r\nimport { INITIAL_ALLOWED_SLIPPAGE, DEFAULT_DEADLINE_FROM_NOW } from '../../config/constants'\r\nimport { updateVersion } from '../global/actions'\r\nimport {\r\n  addSerializedPair,\r\n  addSerializedToken,\r\n  removeSerializedPair,\r\n  removeSerializedToken,\r\n  SerializedPair,\r\n  SerializedToken,\r\n  updateUserExpertMode,\r\n  updateUserSlippageTolerance,\r\n  updateUserDeadline,\r\n  updateUserSingleHopOnly,\r\n  muteAudio,\r\n  unmuteAudio,\r\n  toggleTheme,\r\n} from './actions'\r\n\r\nconst currentTimestamp = () => new Date().getTime()\r\n\r\nexport interface UserState {\r\n  // the timestamp of the last updateVersion action\r\n  lastUpdateVersionTimestamp?: number\r\n\r\n  userExpertMode: boolean\r\n\r\n  // only allow swaps on direct pairs\r\n  userSingleHopOnly: boolean\r\n\r\n  // user defined slippage tolerance in bips, used in all txns\r\n  userSlippageTolerance: number\r\n\r\n  // deadline set by user in minutes, used in all txns\r\n  userDeadline: number\r\n\r\n  tokens: {\r\n    [chainId: number]: {\r\n      [address: string]: SerializedToken\r\n    }\r\n  }\r\n\r\n  pairs: {\r\n    [chainId: number]: {\r\n      // keyed by token0Address:token1Address\r\n      [key: string]: SerializedPair\r\n    }\r\n  }\r\n\r\n  timestamp: number\r\n  audioPlay: boolean\r\n  isDark: boolean\r\n}\r\n\r\nfunction pairKey(token0Address: string, token1Address: string) {\r\n  return `${token0Address};${token1Address}`\r\n}\r\n\r\nexport const initialState: UserState = {\r\n  userExpertMode: false,\r\n  userSingleHopOnly: false,\r\n  userSlippageTolerance: INITIAL_ALLOWED_SLIPPAGE,\r\n  userDeadline: DEFAULT_DEADLINE_FROM_NOW,\r\n  tokens: {},\r\n  pairs: {},\r\n  timestamp: currentTimestamp(),\r\n  audioPlay: true,\r\n  isDark: false,\r\n}\r\n\r\nexport default createReducer(initialState, (builder) =>\r\n  builder\r\n    .addCase(updateVersion, (state) => {\r\n      // slippage isnt being tracked in local storage, reset to default\r\n      // noinspection SuspiciousTypeOfGuard\r\n      if (typeof state.userSlippageTolerance !== 'number') {\r\n        state.userSlippageTolerance = INITIAL_ALLOWED_SLIPPAGE\r\n      }\r\n\r\n      // deadline isnt being tracked in local storage, reset to default\r\n      // noinspection SuspiciousTypeOfGuard\r\n      if (typeof state.userDeadline !== 'number') {\r\n        state.userDeadline = DEFAULT_DEADLINE_FROM_NOW\r\n      }\r\n\r\n      state.lastUpdateVersionTimestamp = currentTimestamp()\r\n    })\r\n    .addCase(updateUserExpertMode, (state, action) => {\r\n      state.userExpertMode = action.payload.userExpertMode\r\n      state.timestamp = currentTimestamp()\r\n    })\r\n    .addCase(updateUserSlippageTolerance, (state, action) => {\r\n      state.userSlippageTolerance = action.payload.userSlippageTolerance\r\n      state.timestamp = currentTimestamp()\r\n    })\r\n    .addCase(updateUserDeadline, (state, action) => {\r\n      state.userDeadline = action.payload.userDeadline\r\n      state.timestamp = currentTimestamp()\r\n    })\r\n    .addCase(updateUserSingleHopOnly, (state, action) => {\r\n      state.userSingleHopOnly = action.payload.userSingleHopOnly\r\n    })\r\n    .addCase(addSerializedToken, (state, { payload: { serializedToken } }) => {\r\n      if (!state.tokens) {\r\n        state.tokens = {}\r\n      }\r\n      state.tokens[serializedToken.chainId] = state.tokens[serializedToken.chainId] || {}\r\n      state.tokens[serializedToken.chainId][serializedToken.address] = serializedToken\r\n      state.timestamp = currentTimestamp()\r\n    })\r\n    .addCase(removeSerializedToken, (state, { payload: { address, chainId } }) => {\r\n      if (!state.tokens) {\r\n        state.tokens = {}\r\n      }\r\n      state.tokens[chainId] = state.tokens[chainId] || {}\r\n      delete state.tokens[chainId][address]\r\n      state.timestamp = currentTimestamp()\r\n    })\r\n    .addCase(addSerializedPair, (state, { payload: { serializedPair } }) => {\r\n      if (\r\n        serializedPair.token0.chainId === serializedPair.token1.chainId &&\r\n        serializedPair.token0.address !== serializedPair.token1.address\r\n      ) {\r\n        const { chainId } = serializedPair.token0\r\n        state.pairs[chainId] = state.pairs[chainId] || {}\r\n        state.pairs[chainId][pairKey(serializedPair.token0.address, serializedPair.token1.address)] = serializedPair\r\n      }\r\n      state.timestamp = currentTimestamp()\r\n    })\r\n    .addCase(removeSerializedPair, (state, { payload: { chainId, tokenAAddress, tokenBAddress } }) => {\r\n      if (state.pairs[chainId]) {\r\n        // just delete both keys if either exists\r\n        delete state.pairs[chainId][pairKey(tokenAAddress, tokenBAddress)]\r\n        delete state.pairs[chainId][pairKey(tokenBAddress, tokenAAddress)]\r\n      }\r\n      state.timestamp = currentTimestamp()\r\n    })\r\n    .addCase(muteAudio, (state) => {\r\n      state.audioPlay = false\r\n    })\r\n    .addCase(unmuteAudio, (state) => {\r\n      state.audioPlay = true\r\n    })\r\n    .addCase(toggleTheme, (state) => {\r\n      state.isDark = !state.isDark\r\n    }),\r\n)\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}