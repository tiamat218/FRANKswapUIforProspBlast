{"ast":null,"code":"/**\r\n * Returns the first farm with a quote token that matches from an array of preferred quote tokens\r\n * @param farms Array of farms\r\n * @param preferredQuoteTokens Array of preferred quote tokens\r\n * @returns A preferred farm, if found - or the first element of the farms array\r\n */\nexport const filterFarmsByQuoteToken = (farms, preferredQuoteTokens = ['BUSD', 'wBNB']) => {\n  const preferredFarm = farms.find(farm => {\n    return preferredQuoteTokens.some(quoteToken => {\n      return farm.quoteToken.symbol === quoteToken;\n    });\n  });\n  return preferredFarm || farms[0];\n};\nexport default filterFarmsByQuoteToken;","map":{"version":3,"names":["filterFarmsByQuoteToken","farms","preferredQuoteTokens","preferredFarm","find","farm","some","quoteToken","symbol"],"sources":["C:/Users/frkul/Documents/swapUI_pancake-frontend/src/utils/farmsPriceHelpers.ts"],"sourcesContent":["import { Farm } from 'state/types'\r\n\r\n/**\r\n * Returns the first farm with a quote token that matches from an array of preferred quote tokens\r\n * @param farms Array of farms\r\n * @param preferredQuoteTokens Array of preferred quote tokens\r\n * @returns A preferred farm, if found - or the first element of the farms array\r\n */\r\nexport const filterFarmsByQuoteToken = (farms: Farm[], preferredQuoteTokens: string[] = ['BUSD', 'wBNB']): Farm => {\r\n  const preferredFarm = farms.find((farm) => {\r\n    return preferredQuoteTokens.some((quoteToken) => {\r\n      return farm.quoteToken.symbol === quoteToken\r\n    })\r\n  })\r\n  return preferredFarm || farms[0]\r\n}\r\n\r\nexport default filterFarmsByQuoteToken\r\n"],"mappings":"AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMA,uBAAuB,GAAGA,CAACC,KAAa,EAAEC,oBAA8B,GAAG,CAAC,MAAM,EAAE,MAAM,CAAC,KAAW;EACjH,MAAMC,aAAa,GAAGF,KAAK,CAACG,IAAI,CAAEC,IAAI,IAAK;IACzC,OAAOH,oBAAoB,CAACI,IAAI,CAAEC,UAAU,IAAK;MAC/C,OAAOF,IAAI,CAACE,UAAU,CAACC,MAAM,KAAKD,UAAU;IAC9C,CAAC,CAAC;EACJ,CAAC,CAAC;EACF,OAAOJ,aAAa,IAAIF,KAAK,CAAC,CAAC,CAAC;AAClC,CAAC;AAED,eAAeD,uBAAuB","ignoreList":[]},"metadata":{},"sourceType":"module"}