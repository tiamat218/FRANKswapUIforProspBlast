{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\frkul\\\\Documents\\\\swapUI_pancake-frontend\\\\src\\\\views\\\\Swap\\\\index.tsx\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport styled from 'styled-components';\nimport { JSBI, Token } from '@pancakeswap/sdk';\nimport { Button, Text, ArrowDownIcon, Box, useModal } from '@pancakeswap/uikit';\nimport { useIsTransactionUnsupported } from 'hooks/Trades';\nimport UnsupportedCurrencyFooter from 'components/UnsupportedCurrencyFooter';\nimport { useTranslation } from 'contexts/Localization';\nimport SwapWarningTokens from 'config/constants/swapWarningTokens';\nimport { getAddress } from 'utils/addressHelpers';\nimport AddressInputPanel from './components/AddressInputPanel';\nimport { GreyCard } from '../../components/Card';\nimport Column, { AutoColumn } from '../../components/Layout/Column';\nimport ConfirmSwapModal from './components/ConfirmSwapModal';\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel';\nimport { AutoRow, RowBetween } from '../../components/Layout/Row';\nimport AdvancedSwapDetailsDropdown from './components/AdvancedSwapDetailsDropdown';\nimport confirmPriceImpactWithoutFee from './components/confirmPriceImpactWithoutFee';\nimport { ArrowWrapper, SwapCallbackError, Wrapper } from './components/styleds';\nimport TradePrice from './components/TradePrice';\nimport ImportTokenWarningModal from './components/ImportTokenWarningModal';\nimport ProgressSteps from './components/ProgressSteps';\nimport { AppHeader, AppBody } from '../../components/App';\nimport ConnectWalletButton from '../../components/ConnectWalletButton';\nimport { INITIAL_ALLOWED_SLIPPAGE } from '../../config/constants';\nimport useActiveWeb3React from '../../hooks/useActiveWeb3React';\nimport { useCurrency, useAllTokens } from '../../hooks/Tokens';\nimport { ApprovalState, useApproveCallbackFromTrade } from '../../hooks/useApproveCallback';\nimport { useSwapCallback } from '../../hooks/useSwapCallback';\nimport useWrapCallback, { WrapType } from '../../hooks/useWrapCallback';\nimport { Field } from '../../state/swap/actions';\nimport { useDefaultsFromURLSearch, useDerivedSwapInfo, useSwapActionHandlers, useSwapState } from '../../state/swap/hooks';\nimport { useExpertModeManager, useUserSlippageTolerance, useUserSingleHopOnly } from '../../state/user/hooks';\nimport { maxAmountSpend } from '../../utils/maxAmountSpend';\nimport { computeTradePriceBreakdown, warningSeverity } from '../../utils/prices';\nimport CircleLoader from '../../components/Loader/CircleLoader';\nimport Page from '../Page';\nimport SwapWarningModal from './components/SwapWarningModal';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Label = styled(Text)`\n  font-size: 12px;\n  font-weight: bold;\n  color: ${({\n  theme\n}) => theme.colors.secondary};\n`;\n_c = Label;\nexport default function Swap({\n  history\n}) {\n  _s();\n  var _parsedAmounts$indepe, _parsedAmounts$indepe2, _parsedAmounts$depend, _parsedAmounts$depend2, _parsedAmounts$indepe3, _parsedAmounts$Field$, _currencies$Field$INP, _currencies$Field$INP2;\n  const loadedUrlParams = useDefaultsFromURLSearch();\n  const {\n    t\n  } = useTranslation();\n\n  // token warning stuff\n  const [loadedInputCurrency, loadedOutputCurrency] = [useCurrency(loadedUrlParams === null || loadedUrlParams === void 0 ? void 0 : loadedUrlParams.inputCurrencyId), useCurrency(loadedUrlParams === null || loadedUrlParams === void 0 ? void 0 : loadedUrlParams.outputCurrencyId)];\n  const urlLoadedTokens = useMemo(() => {\n    var _filter, _ref;\n    return (_filter = (_ref = [loadedInputCurrency, loadedOutputCurrency]) === null || _ref === void 0 ? void 0 : _ref.filter(c => c instanceof Token)) !== null && _filter !== void 0 ? _filter : [];\n  }, [loadedInputCurrency, loadedOutputCurrency]);\n\n  // dismiss warning if all imported tokens are in active lists\n  const defaultTokens = useAllTokens();\n  const importTokensNotInDefault = urlLoadedTokens && urlLoadedTokens.filter(token => {\n    return !(token.address in defaultTokens);\n  });\n  const {\n    account\n  } = useActiveWeb3React();\n\n  // for expert mode\n  const [isExpertMode] = useExpertModeManager();\n\n  // get custom setting values for user\n  const [allowedSlippage] = useUserSlippageTolerance();\n\n  // swap state\n  const {\n    independentField,\n    typedValue,\n    recipient\n  } = useSwapState();\n  const {\n    v2Trade,\n    currencyBalances,\n    parsedAmount,\n    currencies,\n    inputError: swapInputError\n  } = useDerivedSwapInfo();\n  const {\n    wrapType,\n    execute: onWrap,\n    inputError: wrapInputError\n  } = useWrapCallback(currencies[Field.INPUT], currencies[Field.OUTPUT], typedValue);\n  const showWrap = wrapType !== WrapType.NOT_APPLICABLE;\n  const trade = showWrap ? undefined : v2Trade;\n  const parsedAmounts = showWrap ? {\n    [Field.INPUT]: parsedAmount,\n    [Field.OUTPUT]: parsedAmount\n  } : {\n    [Field.INPUT]: independentField === Field.INPUT ? parsedAmount : trade === null || trade === void 0 ? void 0 : trade.inputAmount,\n    [Field.OUTPUT]: independentField === Field.OUTPUT ? parsedAmount : trade === null || trade === void 0 ? void 0 : trade.outputAmount\n  };\n  const {\n    onSwitchTokens,\n    onCurrencySelection,\n    onUserInput,\n    onChangeRecipient\n  } = useSwapActionHandlers();\n  const isValid = !swapInputError;\n  const dependentField = independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT;\n  const handleTypeInput = useCallback(value => {\n    onUserInput(Field.INPUT, value);\n  }, [onUserInput]);\n  const handleTypeOutput = useCallback(value => {\n    onUserInput(Field.OUTPUT, value);\n  }, [onUserInput]);\n\n  // modal and loading\n  const [{\n    tradeToConfirm,\n    swapErrorMessage,\n    attemptingTxn,\n    txHash\n  }, setSwapState] = useState({\n    tradeToConfirm: undefined,\n    attemptingTxn: false,\n    swapErrorMessage: undefined,\n    txHash: undefined\n  });\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: showWrap ? (_parsedAmounts$indepe = (_parsedAmounts$indepe2 = parsedAmounts[independentField]) === null || _parsedAmounts$indepe2 === void 0 ? void 0 : _parsedAmounts$indepe2.toExact()) !== null && _parsedAmounts$indepe !== void 0 ? _parsedAmounts$indepe : '' : (_parsedAmounts$depend = (_parsedAmounts$depend2 = parsedAmounts[dependentField]) === null || _parsedAmounts$depend2 === void 0 ? void 0 : _parsedAmounts$depend2.toSignificant(6)) !== null && _parsedAmounts$depend !== void 0 ? _parsedAmounts$depend : ''\n  };\n  const route = trade === null || trade === void 0 ? void 0 : trade.route;\n  const userHasSpecifiedInputOutput = Boolean(currencies[Field.INPUT] && currencies[Field.OUTPUT] && ((_parsedAmounts$indepe3 = parsedAmounts[independentField]) === null || _parsedAmounts$indepe3 === void 0 ? void 0 : _parsedAmounts$indepe3.greaterThan(JSBI.BigInt(0))));\n  const noRoute = !route;\n\n  // check whether the user has approved the router on the input token\n  const [approval, approveCallback] = useApproveCallbackFromTrade(trade, allowedSlippage);\n\n  // check if user has gone through approval process, used to show two step buttons, reset on token change\n  const [approvalSubmitted, setApprovalSubmitted] = useState(false);\n\n  // mark when a user has submitted an approval, reset onTokenSelection for input field\n  useEffect(() => {\n    if (approval === ApprovalState.PENDING) {\n      setApprovalSubmitted(true);\n    }\n  }, [approval, approvalSubmitted]);\n  const maxAmountInput = maxAmountSpend(currencyBalances[Field.INPUT]);\n  const atMaxAmountInput = Boolean(maxAmountInput && ((_parsedAmounts$Field$ = parsedAmounts[Field.INPUT]) === null || _parsedAmounts$Field$ === void 0 ? void 0 : _parsedAmounts$Field$.equalTo(maxAmountInput)));\n\n  // the callback to execute the swap\n  const {\n    callback: swapCallback,\n    error: swapCallbackError\n  } = useSwapCallback(trade, allowedSlippage, recipient);\n  const {\n    priceImpactWithoutFee\n  } = computeTradePriceBreakdown(trade);\n  const [singleHopOnly] = useUserSingleHopOnly();\n  const handleSwap = useCallback(() => {\n    if (priceImpactWithoutFee && !confirmPriceImpactWithoutFee(priceImpactWithoutFee)) {\n      return;\n    }\n    if (!swapCallback) {\n      return;\n    }\n    setSwapState({\n      attemptingTxn: true,\n      tradeToConfirm,\n      swapErrorMessage: undefined,\n      txHash: undefined\n    });\n    swapCallback().then(hash => {\n      setSwapState({\n        attemptingTxn: false,\n        tradeToConfirm,\n        swapErrorMessage: undefined,\n        txHash: hash\n      });\n    }).catch(error => {\n      setSwapState({\n        attemptingTxn: false,\n        tradeToConfirm,\n        swapErrorMessage: error.message,\n        txHash: undefined\n      });\n    });\n  }, [priceImpactWithoutFee, swapCallback, tradeToConfirm]);\n\n  // errors\n  const [showInverted, setShowInverted] = useState(false);\n\n  // warnings on slippage\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee);\n\n  // show approve flow when: no error on inputs, not approved or pending, or approved in current session\n  // never show if price impact is above threshold in non expert mode\n  const showApproveFlow = !swapInputError && (approval === ApprovalState.NOT_APPROVED || approval === ApprovalState.PENDING || approvalSubmitted && approval === ApprovalState.APPROVED) && !(priceImpactSeverity > 3 && !isExpertMode);\n  const handleConfirmDismiss = useCallback(() => {\n    setSwapState({\n      tradeToConfirm,\n      attemptingTxn,\n      swapErrorMessage,\n      txHash\n    });\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onUserInput(Field.INPUT, '');\n    }\n  }, [attemptingTxn, onUserInput, swapErrorMessage, tradeToConfirm, txHash]);\n  const handleAcceptChanges = useCallback(() => {\n    setSwapState({\n      tradeToConfirm: trade,\n      swapErrorMessage,\n      txHash,\n      attemptingTxn\n    });\n  }, [attemptingTxn, swapErrorMessage, trade, txHash]);\n\n  // swap warning state\n  const [swapWarningCurrency, setSwapWarningCurrency] = useState(null);\n  const [onPresentSwapWarningModal] = useModal( /*#__PURE__*/_jsxDEV(SwapWarningModal, {\n    swapCurrency: swapWarningCurrency\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 222,\n    columnNumber: 48\n  }, this));\n  const shouldShowSwapWarning = swapCurrency => {\n    const isWarningToken = Object.entries(SwapWarningTokens).find(warningTokenConfig => {\n      const warningTokenData = warningTokenConfig[1];\n      const warningTokenAddress = getAddress(warningTokenData.address);\n      return swapCurrency.address === warningTokenAddress;\n    });\n    return Boolean(isWarningToken);\n  };\n  useEffect(() => {\n    if (swapWarningCurrency) {\n      onPresentSwapWarningModal();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [swapWarningCurrency]);\n  const handleInputSelect = useCallback(inputCurrency => {\n    setApprovalSubmitted(false); // reset 2 step UI for approvals\n    onCurrencySelection(Field.INPUT, inputCurrency);\n    const showSwapWarning = shouldShowSwapWarning(inputCurrency);\n    if (showSwapWarning) {\n      setSwapWarningCurrency(inputCurrency);\n    } else {\n      setSwapWarningCurrency(null);\n    }\n  }, [onCurrencySelection]);\n  const handleMaxInput = useCallback(() => {\n    if (maxAmountInput) {\n      onUserInput(Field.INPUT, maxAmountInput.toExact());\n    }\n  }, [maxAmountInput, onUserInput]);\n  const handleOutputSelect = useCallback(outputCurrency => {\n    onCurrencySelection(Field.OUTPUT, outputCurrency);\n    const showSwapWarning = shouldShowSwapWarning(outputCurrency);\n    if (showSwapWarning) {\n      setSwapWarningCurrency(outputCurrency);\n    } else {\n      setSwapWarningCurrency(null);\n    }\n  }, [onCurrencySelection]);\n  const swapIsUnsupported = useIsTransactionUnsupported(currencies === null || currencies === void 0 ? void 0 : currencies.INPUT, currencies === null || currencies === void 0 ? void 0 : currencies.OUTPUT);\n  const [onPresentImportTokenWarningModal] = useModal( /*#__PURE__*/_jsxDEV(ImportTokenWarningModal, {\n    tokens: importTokensNotInDefault,\n    onCancel: () => history.push('/swap/')\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 277,\n    columnNumber: 5\n  }, this));\n  useEffect(() => {\n    if (importTokensNotInDefault.length > 0) {\n      onPresentImportTokenWarningModal();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [importTokensNotInDefault.length]);\n  const [onPresentConfirmModal] = useModal( /*#__PURE__*/_jsxDEV(ConfirmSwapModal, {\n    trade: trade,\n    originalTrade: tradeToConfirm,\n    onAcceptChanges: handleAcceptChanges,\n    attemptingTxn: attemptingTxn,\n    txHash: txHash,\n    recipient: recipient,\n    allowedSlippage: allowedSlippage,\n    onConfirm: handleSwap,\n    swapErrorMessage: swapErrorMessage,\n    customOnDismiss: handleConfirmDismiss\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 288,\n    columnNumber: 5\n  }, this), true, true, 'confirmSwapModal');\n  return /*#__PURE__*/_jsxDEV(Page, {\n    children: [/*#__PURE__*/_jsxDEV(AppBody, {\n      children: [/*#__PURE__*/_jsxDEV(AppHeader, {\n        title: t('Exchange'),\n        subtitle: t('Trade tokens in an instant')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Wrapper, {\n        id: \"swap-page\",\n        children: [/*#__PURE__*/_jsxDEV(AutoColumn, {\n          gap: \"md\",\n          children: [/*#__PURE__*/_jsxDEV(CurrencyInputPanel, {\n            label: independentField === Field.OUTPUT && !showWrap && trade ? t('From (estimated)') : t('From'),\n            value: formattedAmounts[Field.INPUT],\n            showMaxButton: !atMaxAmountInput,\n            currency: currencies[Field.INPUT],\n            onUserInput: handleTypeInput,\n            onMax: handleMaxInput,\n            onCurrencySelect: handleInputSelect,\n            otherCurrency: currencies[Field.OUTPUT],\n            id: \"swap-currency-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AutoColumn, {\n            justify: \"space-between\",\n            children: /*#__PURE__*/_jsxDEV(AutoRow, {\n              justify: isExpertMode ? 'space-between' : 'center',\n              style: {\n                padding: '0 1rem'\n              },\n              children: [/*#__PURE__*/_jsxDEV(ArrowWrapper, {\n                clickable: true,\n                children: /*#__PURE__*/_jsxDEV(ArrowDownIcon, {\n                  width: \"16px\",\n                  onClick: () => {\n                    setApprovalSubmitted(false); // reset 2 step UI for approvals\n                    onSwitchTokens();\n                  },\n                  color: currencies[Field.INPUT] && currencies[Field.OUTPUT] ? 'primary' : 'text'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 325,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 324,\n                columnNumber: 17\n              }, this), recipient === null && !showWrap && isExpertMode ? /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"text\",\n                id: \"add-recipient-button\",\n                onClick: () => onChangeRecipient(''),\n                children: t('+ Add a send (optional)')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 335,\n                columnNumber: 19\n              }, this) : null]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CurrencyInputPanel, {\n            value: formattedAmounts[Field.OUTPUT],\n            onUserInput: handleTypeOutput,\n            label: independentField === Field.INPUT && !showWrap && trade ? t('To (estimated)') : t('To'),\n            showMaxButton: false,\n            currency: currencies[Field.OUTPUT],\n            onCurrencySelect: handleOutputSelect,\n            otherCurrency: currencies[Field.INPUT],\n            id: \"swap-currency-output\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 13\n          }, this), isExpertMode && recipient !== null && !showWrap ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(AutoRow, {\n              justify: \"space-between\",\n              style: {\n                padding: '0 1rem'\n              },\n              children: [/*#__PURE__*/_jsxDEV(ArrowWrapper, {\n                clickable: false,\n                children: /*#__PURE__*/_jsxDEV(ArrowDownIcon, {\n                  width: \"16px\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 356,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 355,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"text\",\n                id: \"remove-recipient-button\",\n                onClick: () => onChangeRecipient(null),\n                children: t('- Remove send')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 358,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(AddressInputPanel, {\n              id: \"recipient\",\n              value: recipient,\n              onChange: onChangeRecipient\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 362,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true) : null, showWrap ? null : /*#__PURE__*/_jsxDEV(AutoColumn, {\n            gap: \"8px\",\n            style: {\n              padding: '0 16px'\n            },\n            children: [Boolean(trade) && /*#__PURE__*/_jsxDEV(RowBetween, {\n              align: \"center\",\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                children: t('Price')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 370,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(TradePrice, {\n                price: trade === null || trade === void 0 ? void 0 : trade.executionPrice,\n                showInverted: showInverted,\n                setShowInverted: setShowInverted\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 371,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 369,\n              columnNumber: 19\n            }, this), allowedSlippage !== INITIAL_ALLOWED_SLIPPAGE && /*#__PURE__*/_jsxDEV(RowBetween, {\n              align: \"center\",\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                children: t('Slippage Tolerance')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 380,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Text, {\n                bold: true,\n                color: \"primary\",\n                children: [allowedSlippage / 100, \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 381,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 379,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          mt: \"1rem\",\n          children: [swapIsUnsupported ? /*#__PURE__*/_jsxDEV(Button, {\n            width: \"100%\",\n            disabled: true,\n            mb: \"4px\",\n            children: t('Unsupported Asset')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 15\n          }, this) : !account ? /*#__PURE__*/_jsxDEV(ConnectWalletButton, {\n            width: \"100%\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 15\n          }, this) : showWrap ? /*#__PURE__*/_jsxDEV(Button, {\n            width: \"100%\",\n            disabled: Boolean(wrapInputError),\n            onClick: onWrap,\n            children: wrapInputError !== null && wrapInputError !== void 0 ? wrapInputError : wrapType === WrapType.WRAP ? 'Wrap' : wrapType === WrapType.UNWRAP ? 'Unwrap' : null\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 15\n          }, this) : noRoute && userHasSpecifiedInputOutput ? /*#__PURE__*/_jsxDEV(GreyCard, {\n            style: {\n              textAlign: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Text, {\n              color: \"textSubtle\",\n              mb: \"4px\",\n              children: t('Insufficient liquidity for this trade.')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 403,\n              columnNumber: 17\n            }, this), singleHopOnly && /*#__PURE__*/_jsxDEV(Text, {\n              color: \"textSubtle\",\n              mb: \"4px\",\n              children: t('Try enabling multi-hop trades.')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 407,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 402,\n            columnNumber: 15\n          }, this) : showApproveFlow ? /*#__PURE__*/_jsxDEV(RowBetween, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: approval === ApprovalState.APPROVED ? 'success' : 'primary',\n              onClick: approveCallback,\n              disabled: approval !== ApprovalState.NOT_APPROVED || approvalSubmitted,\n              width: \"48%\",\n              children: approval === ApprovalState.PENDING ? /*#__PURE__*/_jsxDEV(AutoRow, {\n                gap: \"6px\",\n                justify: \"center\",\n                children: [t('Enabling'), \" \", /*#__PURE__*/_jsxDEV(CircleLoader, {\n                  stroke: \"white\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 422,\n                  columnNumber: 39\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 421,\n                columnNumber: 21\n              }, this) : approvalSubmitted && approval === ApprovalState.APPROVED ? t('Enabled') : t('Enable %asset%', {\n                asset: (_currencies$Field$INP = (_currencies$Field$INP2 = currencies[Field.INPUT]) === null || _currencies$Field$INP2 === void 0 ? void 0 : _currencies$Field$INP2.symbol) !== null && _currencies$Field$INP !== void 0 ? _currencies$Field$INP : ''\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 414,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: isValid && priceImpactSeverity > 2 ? 'danger' : 'primary',\n              onClick: () => {\n                if (isExpertMode) {\n                  handleSwap();\n                } else {\n                  setSwapState({\n                    tradeToConfirm: trade,\n                    attemptingTxn: false,\n                    swapErrorMessage: undefined,\n                    txHash: undefined\n                  });\n                  onPresentConfirmModal();\n                }\n              },\n              width: \"48%\",\n              id: \"swap-button\",\n              disabled: !isValid || approval !== ApprovalState.APPROVED || priceImpactSeverity > 3 && !isExpertMode,\n              children: priceImpactSeverity > 3 && !isExpertMode ? t('Price Impact High') : priceImpactSeverity > 2 ? t('Swap Anyway') : t('Swap')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 430,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 413,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(Button, {\n            variant: isValid && priceImpactSeverity > 2 && !swapCallbackError ? 'danger' : 'primary',\n            onClick: () => {\n              if (isExpertMode) {\n                handleSwap();\n              } else {\n                setSwapState({\n                  tradeToConfirm: trade,\n                  attemptingTxn: false,\n                  swapErrorMessage: undefined,\n                  txHash: undefined\n                });\n                onPresentConfirmModal();\n              }\n            },\n            id: \"swap-button\",\n            width: \"100%\",\n            disabled: !isValid || priceImpactSeverity > 3 && !isExpertMode || !!swapCallbackError,\n            children: swapInputError || (priceImpactSeverity > 3 && !isExpertMode ? `Price Impact Too High` : priceImpactSeverity > 2 ? t('Swap Anyway') : t('Swap'))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 459,\n            columnNumber: 15\n          }, this), showApproveFlow && /*#__PURE__*/_jsxDEV(Column, {\n            style: {\n              marginTop: '1rem'\n            },\n            children: /*#__PURE__*/_jsxDEV(ProgressSteps, {\n              steps: [approval === ApprovalState.APPROVED]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 488,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 487,\n            columnNumber: 15\n          }, this), isExpertMode && swapErrorMessage ? /*#__PURE__*/_jsxDEV(SwapCallbackError, {\n            error: swapErrorMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 491,\n            columnNumber: 49\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 7\n    }, this), !swapIsUnsupported ? /*#__PURE__*/_jsxDEV(AdvancedSwapDetailsDropdown, {\n      trade: trade\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 496,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(UnsupportedCurrencyFooter, {\n      currencies: [currencies.INPUT, currencies.OUTPUT]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 498,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 306,\n    columnNumber: 5\n  }, this);\n}\n_s(Swap, \"BouAo2dxLy2LopeFC//dMVBn34E=\", false, function () {\n  return [useDefaultsFromURLSearch, useTranslation, useCurrency, useCurrency, useAllTokens, useActiveWeb3React, useExpertModeManager, useUserSlippageTolerance, useSwapState, useDerivedSwapInfo, useWrapCallback, useSwapActionHandlers, useApproveCallbackFromTrade, useSwapCallback, useUserSingleHopOnly, useModal, useIsTransactionUnsupported, useModal, useModal];\n});\n_c2 = Swap;\nvar _c, _c2;\n$RefreshReg$(_c, \"Label\");\n$RefreshReg$(_c2, \"Swap\");","map":{"version":3,"names":["React","useCallback","useEffect","useMemo","useState","styled","JSBI","Token","Button","Text","ArrowDownIcon","Box","useModal","useIsTransactionUnsupported","UnsupportedCurrencyFooter","useTranslation","SwapWarningTokens","getAddress","AddressInputPanel","GreyCard","Column","AutoColumn","ConfirmSwapModal","CurrencyInputPanel","AutoRow","RowBetween","AdvancedSwapDetailsDropdown","confirmPriceImpactWithoutFee","ArrowWrapper","SwapCallbackError","Wrapper","TradePrice","ImportTokenWarningModal","ProgressSteps","AppHeader","AppBody","ConnectWalletButton","INITIAL_ALLOWED_SLIPPAGE","useActiveWeb3React","useCurrency","useAllTokens","ApprovalState","useApproveCallbackFromTrade","useSwapCallback","useWrapCallback","WrapType","Field","useDefaultsFromURLSearch","useDerivedSwapInfo","useSwapActionHandlers","useSwapState","useExpertModeManager","useUserSlippageTolerance","useUserSingleHopOnly","maxAmountSpend","computeTradePriceBreakdown","warningSeverity","CircleLoader","Page","SwapWarningModal","jsxDEV","_jsxDEV","Fragment","_Fragment","Label","theme","colors","secondary","_c","Swap","history","_s","_parsedAmounts$indepe","_parsedAmounts$indepe2","_parsedAmounts$depend","_parsedAmounts$depend2","_parsedAmounts$indepe3","_parsedAmounts$Field$","_currencies$Field$INP","_currencies$Field$INP2","loadedUrlParams","t","loadedInputCurrency","loadedOutputCurrency","inputCurrencyId","outputCurrencyId","urlLoadedTokens","_filter","_ref","filter","c","defaultTokens","importTokensNotInDefault","token","address","account","isExpertMode","allowedSlippage","independentField","typedValue","recipient","v2Trade","currencyBalances","parsedAmount","currencies","inputError","swapInputError","wrapType","execute","onWrap","wrapInputError","INPUT","OUTPUT","showWrap","NOT_APPLICABLE","trade","undefined","parsedAmounts","inputAmount","outputAmount","onSwitchTokens","onCurrencySelection","onUserInput","onChangeRecipient","isValid","dependentField","handleTypeInput","value","handleTypeOutput","tradeToConfirm","swapErrorMessage","attemptingTxn","txHash","setSwapState","formattedAmounts","toExact","toSignificant","route","userHasSpecifiedInputOutput","Boolean","greaterThan","BigInt","noRoute","approval","approveCallback","approvalSubmitted","setApprovalSubmitted","PENDING","maxAmountInput","atMaxAmountInput","equalTo","callback","swapCallback","error","swapCallbackError","priceImpactWithoutFee","singleHopOnly","handleSwap","then","hash","catch","message","showInverted","setShowInverted","priceImpactSeverity","showApproveFlow","NOT_APPROVED","APPROVED","handleConfirmDismiss","handleAcceptChanges","swapWarningCurrency","setSwapWarningCurrency","onPresentSwapWarningModal","swapCurrency","fileName","_jsxFileName","lineNumber","columnNumber","shouldShowSwapWarning","isWarningToken","Object","entries","find","warningTokenConfig","warningTokenData","warningTokenAddress","handleInputSelect","inputCurrency","showSwapWarning","handleMaxInput","handleOutputSelect","outputCurrency","swapIsUnsupported","onPresentImportTokenWarningModal","tokens","onCancel","push","length","onPresentConfirmModal","originalTrade","onAcceptChanges","onConfirm","customOnDismiss","children","title","subtitle","id","gap","label","showMaxButton","currency","onMax","onCurrencySelect","otherCurrency","justify","style","padding","clickable","width","onClick","color","variant","onChange","align","price","executionPrice","bold","mt","disabled","mb","WRAP","UNWRAP","textAlign","stroke","asset","symbol","marginTop","steps","_c2","$RefreshReg$"],"sources":["C:/Users/frkul/Documents/swapUI_pancake-frontend/src/views/Swap/index.tsx"],"sourcesContent":["import React, { useCallback, useEffect, useMemo, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { CurrencyAmount, JSBI, Token, Trade } from '@pancakeswap/sdk'\r\nimport { Button, Text, ArrowDownIcon, Box, useModal } from '@pancakeswap/uikit'\r\nimport { useIsTransactionUnsupported } from 'hooks/Trades'\r\nimport UnsupportedCurrencyFooter from 'components/UnsupportedCurrencyFooter'\r\nimport { RouteComponentProps } from 'react-router-dom'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport SwapWarningTokens from 'config/constants/swapWarningTokens'\r\nimport { getAddress } from 'utils/addressHelpers'\r\nimport AddressInputPanel from './components/AddressInputPanel'\r\nimport { GreyCard } from '../../components/Card'\r\nimport Column, { AutoColumn } from '../../components/Layout/Column'\r\nimport ConfirmSwapModal from './components/ConfirmSwapModal'\r\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel'\r\nimport { AutoRow, RowBetween } from '../../components/Layout/Row'\r\nimport AdvancedSwapDetailsDropdown from './components/AdvancedSwapDetailsDropdown'\r\nimport confirmPriceImpactWithoutFee from './components/confirmPriceImpactWithoutFee'\r\nimport { ArrowWrapper, SwapCallbackError, Wrapper } from './components/styleds'\r\nimport TradePrice from './components/TradePrice'\r\nimport ImportTokenWarningModal from './components/ImportTokenWarningModal'\r\nimport ProgressSteps from './components/ProgressSteps'\r\nimport { AppHeader, AppBody } from '../../components/App'\r\nimport ConnectWalletButton from '../../components/ConnectWalletButton'\r\n\r\nimport { INITIAL_ALLOWED_SLIPPAGE } from '../../config/constants'\r\nimport useActiveWeb3React from '../../hooks/useActiveWeb3React'\r\nimport { useCurrency, useAllTokens } from '../../hooks/Tokens'\r\nimport { ApprovalState, useApproveCallbackFromTrade } from '../../hooks/useApproveCallback'\r\nimport { useSwapCallback } from '../../hooks/useSwapCallback'\r\nimport useWrapCallback, { WrapType } from '../../hooks/useWrapCallback'\r\nimport { Field } from '../../state/swap/actions'\r\nimport {\r\n  useDefaultsFromURLSearch,\r\n  useDerivedSwapInfo,\r\n  useSwapActionHandlers,\r\n  useSwapState,\r\n} from '../../state/swap/hooks'\r\nimport { useExpertModeManager, useUserSlippageTolerance, useUserSingleHopOnly } from '../../state/user/hooks'\r\nimport { maxAmountSpend } from '../../utils/maxAmountSpend'\r\nimport { computeTradePriceBreakdown, warningSeverity } from '../../utils/prices'\r\nimport CircleLoader from '../../components/Loader/CircleLoader'\r\nimport Page from '../Page'\r\nimport SwapWarningModal from './components/SwapWarningModal'\r\n\r\nconst Label = styled(Text)`\r\n  font-size: 12px;\r\n  font-weight: bold;\r\n  color: ${({ theme }) => theme.colors.secondary};\r\n`\r\n\r\nexport default function Swap({ history }: RouteComponentProps) {\r\n  const loadedUrlParams = useDefaultsFromURLSearch()\r\n\r\n  const { t } = useTranslation()\r\n\r\n  // token warning stuff\r\n  const [loadedInputCurrency, loadedOutputCurrency] = [\r\n    useCurrency(loadedUrlParams?.inputCurrencyId),\r\n    useCurrency(loadedUrlParams?.outputCurrencyId),\r\n  ]\r\n  const urlLoadedTokens: Token[] = useMemo(\r\n    () => [loadedInputCurrency, loadedOutputCurrency]?.filter((c): c is Token => c instanceof Token) ?? [],\r\n    [loadedInputCurrency, loadedOutputCurrency],\r\n  )\r\n\r\n  // dismiss warning if all imported tokens are in active lists\r\n  const defaultTokens = useAllTokens()\r\n  const importTokensNotInDefault =\r\n    urlLoadedTokens &&\r\n    urlLoadedTokens.filter((token: Token) => {\r\n      return !(token.address in defaultTokens)\r\n    })\r\n\r\n  const { account } = useActiveWeb3React()\r\n\r\n  // for expert mode\r\n  const [isExpertMode] = useExpertModeManager()\r\n\r\n  // get custom setting values for user\r\n  const [allowedSlippage] = useUserSlippageTolerance()\r\n\r\n  // swap state\r\n  const { independentField, typedValue, recipient } = useSwapState()\r\n  const { v2Trade, currencyBalances, parsedAmount, currencies, inputError: swapInputError } = useDerivedSwapInfo()\r\n\r\n  const {\r\n    wrapType,\r\n    execute: onWrap,\r\n    inputError: wrapInputError,\r\n  } = useWrapCallback(currencies[Field.INPUT], currencies[Field.OUTPUT], typedValue)\r\n  const showWrap: boolean = wrapType !== WrapType.NOT_APPLICABLE\r\n  const trade = showWrap ? undefined : v2Trade\r\n\r\n  const parsedAmounts = showWrap\r\n    ? {\r\n        [Field.INPUT]: parsedAmount,\r\n        [Field.OUTPUT]: parsedAmount,\r\n      }\r\n    : {\r\n        [Field.INPUT]: independentField === Field.INPUT ? parsedAmount : trade?.inputAmount,\r\n        [Field.OUTPUT]: independentField === Field.OUTPUT ? parsedAmount : trade?.outputAmount,\r\n      }\r\n\r\n  const { onSwitchTokens, onCurrencySelection, onUserInput, onChangeRecipient } = useSwapActionHandlers()\r\n  const isValid = !swapInputError\r\n  const dependentField: Field = independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT\r\n\r\n  const handleTypeInput = useCallback(\r\n    (value: string) => {\r\n      onUserInput(Field.INPUT, value)\r\n    },\r\n    [onUserInput],\r\n  )\r\n  const handleTypeOutput = useCallback(\r\n    (value: string) => {\r\n      onUserInput(Field.OUTPUT, value)\r\n    },\r\n    [onUserInput],\r\n  )\r\n\r\n  // modal and loading\r\n  const [{ tradeToConfirm, swapErrorMessage, attemptingTxn, txHash }, setSwapState] = useState<{\r\n    tradeToConfirm: Trade | undefined\r\n    attemptingTxn: boolean\r\n    swapErrorMessage: string | undefined\r\n    txHash: string | undefined\r\n  }>({\r\n    tradeToConfirm: undefined,\r\n    attemptingTxn: false,\r\n    swapErrorMessage: undefined,\r\n    txHash: undefined,\r\n  })\r\n\r\n  const formattedAmounts = {\r\n    [independentField]: typedValue,\r\n    [dependentField]: showWrap\r\n      ? parsedAmounts[independentField]?.toExact() ?? ''\r\n      : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\r\n  }\r\n\r\n  const route = trade?.route\r\n  const userHasSpecifiedInputOutput = Boolean(\r\n    currencies[Field.INPUT] && currencies[Field.OUTPUT] && parsedAmounts[independentField]?.greaterThan(JSBI.BigInt(0)),\r\n  )\r\n  const noRoute = !route\r\n\r\n  // check whether the user has approved the router on the input token\r\n  const [approval, approveCallback] = useApproveCallbackFromTrade(trade, allowedSlippage)\r\n\r\n  // check if user has gone through approval process, used to show two step buttons, reset on token change\r\n  const [approvalSubmitted, setApprovalSubmitted] = useState<boolean>(false)\r\n\r\n  // mark when a user has submitted an approval, reset onTokenSelection for input field\r\n  useEffect(() => {\r\n    if (approval === ApprovalState.PENDING) {\r\n      setApprovalSubmitted(true)\r\n    }\r\n  }, [approval, approvalSubmitted])\r\n\r\n  const maxAmountInput: CurrencyAmount | undefined = maxAmountSpend(currencyBalances[Field.INPUT])\r\n  const atMaxAmountInput = Boolean(maxAmountInput && parsedAmounts[Field.INPUT]?.equalTo(maxAmountInput))\r\n\r\n  // the callback to execute the swap\r\n  const { callback: swapCallback, error: swapCallbackError } = useSwapCallback(trade, allowedSlippage, recipient)\r\n\r\n  const { priceImpactWithoutFee } = computeTradePriceBreakdown(trade)\r\n\r\n  const [singleHopOnly] = useUserSingleHopOnly()\r\n\r\n  const handleSwap = useCallback(() => {\r\n    if (priceImpactWithoutFee && !confirmPriceImpactWithoutFee(priceImpactWithoutFee)) {\r\n      return\r\n    }\r\n    if (!swapCallback) {\r\n      return\r\n    }\r\n    setSwapState({ attemptingTxn: true, tradeToConfirm, swapErrorMessage: undefined, txHash: undefined })\r\n    swapCallback()\r\n      .then((hash) => {\r\n        setSwapState({ attemptingTxn: false, tradeToConfirm, swapErrorMessage: undefined, txHash: hash })\r\n      })\r\n      .catch((error) => {\r\n        setSwapState({\r\n          attemptingTxn: false,\r\n          tradeToConfirm,\r\n          swapErrorMessage: error.message,\r\n          txHash: undefined,\r\n        })\r\n      })\r\n  }, [priceImpactWithoutFee, swapCallback, tradeToConfirm])\r\n\r\n  // errors\r\n  const [showInverted, setShowInverted] = useState<boolean>(false)\r\n\r\n  // warnings on slippage\r\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee)\r\n\r\n  // show approve flow when: no error on inputs, not approved or pending, or approved in current session\r\n  // never show if price impact is above threshold in non expert mode\r\n  const showApproveFlow =\r\n    !swapInputError &&\r\n    (approval === ApprovalState.NOT_APPROVED ||\r\n      approval === ApprovalState.PENDING ||\r\n      (approvalSubmitted && approval === ApprovalState.APPROVED)) &&\r\n    !(priceImpactSeverity > 3 && !isExpertMode)\r\n\r\n  const handleConfirmDismiss = useCallback(() => {\r\n    setSwapState({ tradeToConfirm, attemptingTxn, swapErrorMessage, txHash })\r\n    // if there was a tx hash, we want to clear the input\r\n    if (txHash) {\r\n      onUserInput(Field.INPUT, '')\r\n    }\r\n  }, [attemptingTxn, onUserInput, swapErrorMessage, tradeToConfirm, txHash])\r\n\r\n  const handleAcceptChanges = useCallback(() => {\r\n    setSwapState({ tradeToConfirm: trade, swapErrorMessage, txHash, attemptingTxn })\r\n  }, [attemptingTxn, swapErrorMessage, trade, txHash])\r\n\r\n  // swap warning state\r\n  const [swapWarningCurrency, setSwapWarningCurrency] = useState(null)\r\n  const [onPresentSwapWarningModal] = useModal(<SwapWarningModal swapCurrency={swapWarningCurrency} />)\r\n\r\n  const shouldShowSwapWarning = (swapCurrency) => {\r\n    const isWarningToken = Object.entries(SwapWarningTokens).find((warningTokenConfig) => {\r\n      const warningTokenData = warningTokenConfig[1]\r\n      const warningTokenAddress = getAddress(warningTokenData.address)\r\n      return swapCurrency.address === warningTokenAddress\r\n    })\r\n    return Boolean(isWarningToken)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (swapWarningCurrency) {\r\n      onPresentSwapWarningModal()\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [swapWarningCurrency])\r\n\r\n  const handleInputSelect = useCallback(\r\n    (inputCurrency) => {\r\n      setApprovalSubmitted(false) // reset 2 step UI for approvals\r\n      onCurrencySelection(Field.INPUT, inputCurrency)\r\n      const showSwapWarning = shouldShowSwapWarning(inputCurrency)\r\n      if (showSwapWarning) {\r\n        setSwapWarningCurrency(inputCurrency)\r\n      } else {\r\n        setSwapWarningCurrency(null)\r\n      }\r\n    },\r\n    [onCurrencySelection],\r\n  )\r\n\r\n  const handleMaxInput = useCallback(() => {\r\n    if (maxAmountInput) {\r\n      onUserInput(Field.INPUT, maxAmountInput.toExact())\r\n    }\r\n  }, [maxAmountInput, onUserInput])\r\n\r\n  const handleOutputSelect = useCallback(\r\n    (outputCurrency) => {\r\n      onCurrencySelection(Field.OUTPUT, outputCurrency)\r\n      const showSwapWarning = shouldShowSwapWarning(outputCurrency)\r\n      if (showSwapWarning) {\r\n        setSwapWarningCurrency(outputCurrency)\r\n      } else {\r\n        setSwapWarningCurrency(null)\r\n      }\r\n    },\r\n\r\n    [onCurrencySelection],\r\n  )\r\n\r\n  const swapIsUnsupported = useIsTransactionUnsupported(currencies?.INPUT, currencies?.OUTPUT)\r\n\r\n  const [onPresentImportTokenWarningModal] = useModal(\r\n    <ImportTokenWarningModal tokens={importTokensNotInDefault} onCancel={() => history.push('/swap/')} />,\r\n  )\r\n\r\n  useEffect(() => {\r\n    if (importTokensNotInDefault.length > 0) {\r\n      onPresentImportTokenWarningModal()\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [importTokensNotInDefault.length])\r\n\r\n  const [onPresentConfirmModal] = useModal(\r\n    <ConfirmSwapModal\r\n      trade={trade}\r\n      originalTrade={tradeToConfirm}\r\n      onAcceptChanges={handleAcceptChanges}\r\n      attemptingTxn={attemptingTxn}\r\n      txHash={txHash}\r\n      recipient={recipient}\r\n      allowedSlippage={allowedSlippage}\r\n      onConfirm={handleSwap}\r\n      swapErrorMessage={swapErrorMessage}\r\n      customOnDismiss={handleConfirmDismiss}\r\n    />,\r\n    true,\r\n    true,\r\n    'confirmSwapModal',\r\n  )\r\n\r\n  return (\r\n    <Page>\r\n      <AppBody>\r\n        <AppHeader title={t('Exchange')} subtitle={t('Trade tokens in an instant')} />\r\n        <Wrapper id=\"swap-page\">\r\n          <AutoColumn gap=\"md\">\r\n            <CurrencyInputPanel\r\n              label={independentField === Field.OUTPUT && !showWrap && trade ? t('From (estimated)') : t('From')}\r\n              value={formattedAmounts[Field.INPUT]}\r\n              showMaxButton={!atMaxAmountInput}\r\n              currency={currencies[Field.INPUT]}\r\n              onUserInput={handleTypeInput}\r\n              onMax={handleMaxInput}\r\n              onCurrencySelect={handleInputSelect}\r\n              otherCurrency={currencies[Field.OUTPUT]}\r\n              id=\"swap-currency-input\"\r\n            />\r\n            <AutoColumn justify=\"space-between\">\r\n              <AutoRow justify={isExpertMode ? 'space-between' : 'center'} style={{ padding: '0 1rem' }}>\r\n                <ArrowWrapper clickable>\r\n                  <ArrowDownIcon\r\n                    width=\"16px\"\r\n                    onClick={() => {\r\n                      setApprovalSubmitted(false) // reset 2 step UI for approvals\r\n                      onSwitchTokens()\r\n                    }}\r\n                    color={currencies[Field.INPUT] && currencies[Field.OUTPUT] ? 'primary' : 'text'}\r\n                  />\r\n                </ArrowWrapper>\r\n                {recipient === null && !showWrap && isExpertMode ? (\r\n                  <Button variant=\"text\" id=\"add-recipient-button\" onClick={() => onChangeRecipient('')}>\r\n                    {t('+ Add a send (optional)')}\r\n                  </Button>\r\n                ) : null}\r\n              </AutoRow>\r\n            </AutoColumn>\r\n            <CurrencyInputPanel\r\n              value={formattedAmounts[Field.OUTPUT]}\r\n              onUserInput={handleTypeOutput}\r\n              label={independentField === Field.INPUT && !showWrap && trade ? t('To (estimated)') : t('To')}\r\n              showMaxButton={false}\r\n              currency={currencies[Field.OUTPUT]}\r\n              onCurrencySelect={handleOutputSelect}\r\n              otherCurrency={currencies[Field.INPUT]}\r\n              id=\"swap-currency-output\"\r\n            />\r\n\r\n            {isExpertMode && recipient !== null && !showWrap ? (\r\n              <>\r\n                <AutoRow justify=\"space-between\" style={{ padding: '0 1rem' }}>\r\n                  <ArrowWrapper clickable={false}>\r\n                    <ArrowDownIcon width=\"16px\" />\r\n                  </ArrowWrapper>\r\n                  <Button variant=\"text\" id=\"remove-recipient-button\" onClick={() => onChangeRecipient(null)}>\r\n                    {t('- Remove send')}\r\n                  </Button>\r\n                </AutoRow>\r\n                <AddressInputPanel id=\"recipient\" value={recipient} onChange={onChangeRecipient} />\r\n              </>\r\n            ) : null}\r\n\r\n            {showWrap ? null : (\r\n              <AutoColumn gap=\"8px\" style={{ padding: '0 16px' }}>\r\n                {Boolean(trade) && (\r\n                  <RowBetween align=\"center\">\r\n                    <Label>{t('Price')}</Label>\r\n                    <TradePrice\r\n                      price={trade?.executionPrice}\r\n                      showInverted={showInverted}\r\n                      setShowInverted={setShowInverted}\r\n                    />\r\n                  </RowBetween>\r\n                )}\r\n                {allowedSlippage !== INITIAL_ALLOWED_SLIPPAGE && (\r\n                  <RowBetween align=\"center\">\r\n                    <Label>{t('Slippage Tolerance')}</Label>\r\n                    <Text bold color=\"primary\">\r\n                      {allowedSlippage / 100}%\r\n                    </Text>\r\n                  </RowBetween>\r\n                )}\r\n              </AutoColumn>\r\n            )}\r\n          </AutoColumn>\r\n          <Box mt=\"1rem\">\r\n            {swapIsUnsupported ? (\r\n              <Button width=\"100%\" disabled mb=\"4px\">\r\n                {t('Unsupported Asset')}\r\n              </Button>\r\n            ) : !account ? (\r\n              <ConnectWalletButton width=\"100%\" />\r\n            ) : showWrap ? (\r\n              <Button width=\"100%\" disabled={Boolean(wrapInputError)} onClick={onWrap}>\r\n                {wrapInputError ??\r\n                  (wrapType === WrapType.WRAP ? 'Wrap' : wrapType === WrapType.UNWRAP ? 'Unwrap' : null)}\r\n              </Button>\r\n            ) : noRoute && userHasSpecifiedInputOutput ? (\r\n              <GreyCard style={{ textAlign: 'center' }}>\r\n                <Text color=\"textSubtle\" mb=\"4px\">\r\n                  {t('Insufficient liquidity for this trade.')}\r\n                </Text>\r\n                {singleHopOnly && (\r\n                  <Text color=\"textSubtle\" mb=\"4px\">\r\n                    {t('Try enabling multi-hop trades.')}\r\n                  </Text>\r\n                )}\r\n              </GreyCard>\r\n            ) : showApproveFlow ? (\r\n              <RowBetween>\r\n                <Button\r\n                  variant={approval === ApprovalState.APPROVED ? 'success' : 'primary'}\r\n                  onClick={approveCallback}\r\n                  disabled={approval !== ApprovalState.NOT_APPROVED || approvalSubmitted}\r\n                  width=\"48%\"\r\n                >\r\n                  {approval === ApprovalState.PENDING ? (\r\n                    <AutoRow gap=\"6px\" justify=\"center\">\r\n                      {t('Enabling')} <CircleLoader stroke=\"white\" />\r\n                    </AutoRow>\r\n                  ) : approvalSubmitted && approval === ApprovalState.APPROVED ? (\r\n                    t('Enabled')\r\n                  ) : (\r\n                    t('Enable %asset%', { asset: currencies[Field.INPUT]?.symbol ?? '' })\r\n                  )}\r\n                </Button>\r\n                <Button\r\n                  variant={isValid && priceImpactSeverity > 2 ? 'danger' : 'primary'}\r\n                  onClick={() => {\r\n                    if (isExpertMode) {\r\n                      handleSwap()\r\n                    } else {\r\n                      setSwapState({\r\n                        tradeToConfirm: trade,\r\n                        attemptingTxn: false,\r\n                        swapErrorMessage: undefined,\r\n                        txHash: undefined,\r\n                      })\r\n                      onPresentConfirmModal()\r\n                    }\r\n                  }}\r\n                  width=\"48%\"\r\n                  id=\"swap-button\"\r\n                  disabled={\r\n                    !isValid || approval !== ApprovalState.APPROVED || (priceImpactSeverity > 3 && !isExpertMode)\r\n                  }\r\n                >\r\n                  {priceImpactSeverity > 3 && !isExpertMode\r\n                    ? t('Price Impact High')\r\n                    : priceImpactSeverity > 2\r\n                    ? t('Swap Anyway')\r\n                    : t('Swap')}\r\n                </Button>\r\n              </RowBetween>\r\n            ) : (\r\n              <Button\r\n                variant={isValid && priceImpactSeverity > 2 && !swapCallbackError ? 'danger' : 'primary'}\r\n                onClick={() => {\r\n                  if (isExpertMode) {\r\n                    handleSwap()\r\n                  } else {\r\n                    setSwapState({\r\n                      tradeToConfirm: trade,\r\n                      attemptingTxn: false,\r\n                      swapErrorMessage: undefined,\r\n                      txHash: undefined,\r\n                    })\r\n                    onPresentConfirmModal()\r\n                  }\r\n                }}\r\n                id=\"swap-button\"\r\n                width=\"100%\"\r\n                disabled={!isValid || (priceImpactSeverity > 3 && !isExpertMode) || !!swapCallbackError}\r\n              >\r\n                {swapInputError ||\r\n                  (priceImpactSeverity > 3 && !isExpertMode\r\n                    ? `Price Impact Too High`\r\n                    : priceImpactSeverity > 2\r\n                    ? t('Swap Anyway')\r\n                    : t('Swap'))}\r\n              </Button>\r\n            )}\r\n            {showApproveFlow && (\r\n              <Column style={{ marginTop: '1rem' }}>\r\n                <ProgressSteps steps={[approval === ApprovalState.APPROVED]} />\r\n              </Column>\r\n            )}\r\n            {isExpertMode && swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\r\n          </Box>\r\n        </Wrapper>\r\n      </AppBody>\r\n      {!swapIsUnsupported ? (\r\n        <AdvancedSwapDetailsDropdown trade={trade} />\r\n      ) : (\r\n        <UnsupportedCurrencyFooter currencies={[currencies.INPUT, currencies.OUTPUT]} />\r\n      )}\r\n    </Page>\r\n  )\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}