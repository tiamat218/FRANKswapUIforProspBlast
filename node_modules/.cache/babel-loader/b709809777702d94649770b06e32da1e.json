{"ast":null,"code":"var _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { MaxUint256 } from '@ethersproject/constants';\nimport { TokenAmount, ETHER } from '@pancakeswap/sdk';\nimport { useCallback, useMemo } from 'react';\nimport useActiveWeb3React from 'hooks/useActiveWeb3React';\nimport { ROUTER_ADDRESS } from '../config/constants';\nimport useTokenAllowance from './useTokenAllowance';\nimport { Field } from '../state/swap/actions';\nimport { useTransactionAdder, useHasPendingApproval } from '../state/transactions/hooks';\nimport { computeSlippageAdjustedAmounts } from '../utils/prices';\nimport { calculateGasMargin } from '../utils';\nimport { useTokenContract } from './useContract';\nexport let ApprovalState;\n\n// returns a variable indicating the state of the approval and a function which approves if necessary or early returns\n(function (ApprovalState) {\n  ApprovalState[ApprovalState[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n  ApprovalState[ApprovalState[\"NOT_APPROVED\"] = 1] = \"NOT_APPROVED\";\n  ApprovalState[ApprovalState[\"PENDING\"] = 2] = \"PENDING\";\n  ApprovalState[ApprovalState[\"APPROVED\"] = 3] = \"APPROVED\";\n})(ApprovalState || (ApprovalState = {}));\nexport function useApproveCallback(amountToApprove, spender) {\n  _s();\n  const {\n    account\n  } = useActiveWeb3React();\n  const token = amountToApprove instanceof TokenAmount ? amountToApprove.token : undefined;\n  const currentAllowance = useTokenAllowance(token, account !== null && account !== void 0 ? account : undefined, spender);\n  const pendingApproval = useHasPendingApproval(token === null || token === void 0 ? void 0 : token.address, spender);\n\n  // check the current approval status\n  const approvalState = useMemo(() => {\n    if (!amountToApprove || !spender) return ApprovalState.UNKNOWN;\n    if (amountToApprove.currency === ETHER) return ApprovalState.APPROVED;\n    // we might not have enough data to know whether or not we need to approve\n    if (!currentAllowance) return ApprovalState.UNKNOWN;\n\n    // amountToApprove will be defined if currentAllowance is\n    return currentAllowance.lessThan(amountToApprove) ? pendingApproval ? ApprovalState.PENDING : ApprovalState.NOT_APPROVED : ApprovalState.APPROVED;\n  }, [amountToApprove, currentAllowance, pendingApproval, spender]);\n  const tokenContract = useTokenContract(token === null || token === void 0 ? void 0 : token.address);\n  const addTransaction = useTransactionAdder();\n  const approve = useCallback(async () => {\n    if (approvalState !== ApprovalState.NOT_APPROVED) {\n      console.error('approve was called unnecessarily');\n      return;\n    }\n    if (!token) {\n      console.error('no token');\n      return;\n    }\n    if (!tokenContract) {\n      console.error('tokenContract is null');\n      return;\n    }\n    if (!amountToApprove) {\n      console.error('missing amount to approve');\n      return;\n    }\n    if (!spender) {\n      console.error('no spender');\n      return;\n    }\n    let useExact = false;\n    const estimatedGas = await tokenContract.estimateGas.approve(spender, MaxUint256).catch(() => {\n      // general fallback for tokens who restrict approval amounts\n      useExact = true;\n      return tokenContract.estimateGas.approve(spender, amountToApprove.raw.toString());\n    });\n\n    // eslint-disable-next-line consistent-return\n    return tokenContract.approve(spender, useExact ? amountToApprove.raw.toString() : MaxUint256, {\n      gasLimit: calculateGasMargin(estimatedGas)\n    }).then(response => {\n      addTransaction(response, {\n        summary: `Approve ${amountToApprove.currency.symbol}`,\n        approval: {\n          tokenAddress: token.address,\n          spender\n        }\n      });\n    }).catch(error => {\n      console.error('Failed to approve token', error);\n      throw error;\n    });\n  }, [approvalState, token, tokenContract, amountToApprove, spender, addTransaction]);\n  return [approvalState, approve];\n}\n\n// wraps useApproveCallback in the context of a swap\n_s(useApproveCallback, \"plwsGYaNX4d3wLCzJ71NjiUoggk=\", false, function () {\n  return [useActiveWeb3React, useTokenAllowance, useHasPendingApproval, useTokenContract, useTransactionAdder];\n});\nexport function useApproveCallbackFromTrade(trade, allowedSlippage = 0) {\n  _s2();\n  const amountToApprove = useMemo(() => trade ? computeSlippageAdjustedAmounts(trade, allowedSlippage)[Field.INPUT] : undefined, [trade, allowedSlippage]);\n  return useApproveCallback(amountToApprove, ROUTER_ADDRESS);\n}\n_s2(useApproveCallbackFromTrade, \"GmUgVOF70hjek2iOjUgFAqTvTUk=\", false, function () {\n  return [useApproveCallback];\n});","map":{"version":3,"names":["MaxUint256","TokenAmount","ETHER","useCallback","useMemo","useActiveWeb3React","ROUTER_ADDRESS","useTokenAllowance","Field","useTransactionAdder","useHasPendingApproval","computeSlippageAdjustedAmounts","calculateGasMargin","useTokenContract","ApprovalState","useApproveCallback","amountToApprove","spender","_s","account","token","undefined","currentAllowance","pendingApproval","address","approvalState","UNKNOWN","currency","APPROVED","lessThan","PENDING","NOT_APPROVED","tokenContract","addTransaction","approve","console","error","useExact","estimatedGas","estimateGas","catch","raw","toString","gasLimit","then","response","summary","symbol","approval","tokenAddress","useApproveCallbackFromTrade","trade","allowedSlippage","_s2","INPUT"],"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/hooks/useApproveCallback.ts"],"sourcesContent":["import { MaxUint256 } from '@ethersproject/constants'\r\nimport { TransactionResponse } from '@ethersproject/providers'\r\nimport { Trade, TokenAmount, CurrencyAmount, ETHER } from '@pancakeswap/sdk'\r\nimport { useCallback, useMemo } from 'react'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport { ROUTER_ADDRESS } from '../config/constants'\r\nimport useTokenAllowance from './useTokenAllowance'\r\nimport { Field } from '../state/swap/actions'\r\nimport { useTransactionAdder, useHasPendingApproval } from '../state/transactions/hooks'\r\nimport { computeSlippageAdjustedAmounts } from '../utils/prices'\r\nimport { calculateGasMargin } from '../utils'\r\nimport { useTokenContract } from './useContract'\r\n\r\nexport enum ApprovalState {\r\n  UNKNOWN,\r\n  NOT_APPROVED,\r\n  PENDING,\r\n  APPROVED,\r\n}\r\n\r\n// returns a variable indicating the state of the approval and a function which approves if necessary or early returns\r\nexport function useApproveCallback(\r\n  amountToApprove?: CurrencyAmount,\r\n  spender?: string,\r\n): [ApprovalState, () => Promise<void>] {\r\n  const { account } = useActiveWeb3React()\r\n  const token = amountToApprove instanceof TokenAmount ? amountToApprove.token : undefined\r\n  const currentAllowance = useTokenAllowance(token, account ?? undefined, spender)\r\n  const pendingApproval = useHasPendingApproval(token?.address, spender)\r\n\r\n  // check the current approval status\r\n  const approvalState: ApprovalState = useMemo(() => {\r\n    if (!amountToApprove || !spender) return ApprovalState.UNKNOWN\r\n    if (amountToApprove.currency === ETHER) return ApprovalState.APPROVED\r\n    // we might not have enough data to know whether or not we need to approve\r\n    if (!currentAllowance) return ApprovalState.UNKNOWN\r\n\r\n    // amountToApprove will be defined if currentAllowance is\r\n    return currentAllowance.lessThan(amountToApprove)\r\n      ? pendingApproval\r\n        ? ApprovalState.PENDING\r\n        : ApprovalState.NOT_APPROVED\r\n      : ApprovalState.APPROVED\r\n  }, [amountToApprove, currentAllowance, pendingApproval, spender])\r\n\r\n  const tokenContract = useTokenContract(token?.address)\r\n  const addTransaction = useTransactionAdder()\r\n\r\n  const approve = useCallback(async (): Promise<void> => {\r\n    if (approvalState !== ApprovalState.NOT_APPROVED) {\r\n      console.error('approve was called unnecessarily')\r\n      return\r\n    }\r\n    if (!token) {\r\n      console.error('no token')\r\n      return\r\n    }\r\n\r\n    if (!tokenContract) {\r\n      console.error('tokenContract is null')\r\n      return\r\n    }\r\n\r\n    if (!amountToApprove) {\r\n      console.error('missing amount to approve')\r\n      return\r\n    }\r\n\r\n    if (!spender) {\r\n      console.error('no spender')\r\n      return\r\n    }\r\n\r\n    let useExact = false\r\n    const estimatedGas = await tokenContract.estimateGas.approve(spender, MaxUint256).catch(() => {\r\n      // general fallback for tokens who restrict approval amounts\r\n      useExact = true\r\n      return tokenContract.estimateGas.approve(spender, amountToApprove.raw.toString())\r\n    })\r\n\r\n    // eslint-disable-next-line consistent-return\r\n    return tokenContract\r\n      .approve(spender, useExact ? amountToApprove.raw.toString() : MaxUint256, {\r\n        gasLimit: calculateGasMargin(estimatedGas),\r\n      })\r\n      .then((response: TransactionResponse) => {\r\n        addTransaction(response, {\r\n          summary: `Approve ${amountToApprove.currency.symbol}`,\r\n          approval: { tokenAddress: token.address, spender },\r\n        })\r\n      })\r\n      .catch((error: Error) => {\r\n        console.error('Failed to approve token', error)\r\n        throw error\r\n      })\r\n  }, [approvalState, token, tokenContract, amountToApprove, spender, addTransaction])\r\n\r\n  return [approvalState, approve]\r\n}\r\n\r\n// wraps useApproveCallback in the context of a swap\r\nexport function useApproveCallbackFromTrade(trade?: Trade, allowedSlippage = 0) {\r\n  const amountToApprove = useMemo(\r\n    () => (trade ? computeSlippageAdjustedAmounts(trade, allowedSlippage)[Field.INPUT] : undefined),\r\n    [trade, allowedSlippage],\r\n  )\r\n\r\n  return useApproveCallback(amountToApprove, ROUTER_ADDRESS)\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}