{"ast":null,"code":"import{useCallback}from'react';import{useWeb3React,UnsupportedChainIdError}from'@web3-react/core';import{NoBscProviderError}from'@binance-chain/bsc-connector';import{NoEthereumProviderError,UserRejectedRequestError as UserRejectedRequestErrorInjected}from'@web3-react/injected-connector';import{UserRejectedRequestError as UserRejectedRequestErrorWalletConnect,WalletConnectConnector}from'@web3-react/walletconnect-connector';import{connectorLocalStorageKey}from'@pancakeswap/uikit';import{connectorsByName}from'utils/web3React';import{setupNetwork}from'utils/wallet';import useToast from'hooks/useToast';import{profileClear}from'state/profile';import{useAppDispatch}from'state';import{useTranslation}from'contexts/Localization';const useAuth=()=>{const{t}=useTranslation();const dispatch=useAppDispatch();const{activate,deactivate}=useWeb3React();const{toastError}=useToast();const login=useCallback(connectorID=>{const connector=connectorsByName[connectorID];if(connector){activate(connector,async error=>{if(error instanceof UnsupportedChainIdError){const hasSetup=await setupNetwork();if(hasSetup){activate(connector);}}else{window.localStorage.removeItem(connectorLocalStorageKey);if(error instanceof NoEthereumProviderError||error instanceof NoBscProviderError){toastError(t('Provider Error'),t('No provider was found'));}else if(error instanceof UserRejectedRequestErrorInjected||error instanceof UserRejectedRequestErrorWalletConnect){if(connector instanceof WalletConnectConnector){const walletConnector=connector;walletConnector.walletConnectProvider=null;}toastError(t('Authorization Error'),t('Please authorize to access your account'));}else{toastError(error.name,error.message);}}});}else{toastError(t('Unable to find connector'),t('The connector config is wrong'));}},[t,activate,toastError]);const logout=useCallback(()=>{dispatch(profileClear());deactivate();// This localStorage key is set by @web3-react/walletconnect-connector\nif(window.localStorage.getItem('walletconnect')){connectorsByName.walletconnect.close();connectorsByName.walletconnect.walletConnectProvider=null;}},[deactivate,dispatch]);return{login,logout};};export default useAuth;","map":{"version":3,"names":["useCallback","useWeb3React","UnsupportedChainIdError","NoBscProviderError","NoEthereumProviderError","UserRejectedRequestError","UserRejectedRequestErrorInjected","UserRejectedRequestErrorWalletConnect","WalletConnectConnector","connectorLocalStorageKey","connectorsByName","setupNetwork","useToast","profileClear","useAppDispatch","useTranslation","useAuth","t","dispatch","activate","deactivate","toastError","login","connectorID","connector","error","hasSetup","window","localStorage","removeItem","walletConnector","walletConnectProvider","name","message","logout","getItem","walletconnect","close"],"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/hooks/useAuth.ts"],"sourcesContent":["import { useCallback } from 'react'\r\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\r\nimport { NoBscProviderError } from '@binance-chain/bsc-connector'\r\nimport {\r\n  NoEthereumProviderError,\r\n  UserRejectedRequestError as UserRejectedRequestErrorInjected,\r\n} from '@web3-react/injected-connector'\r\nimport {\r\n  UserRejectedRequestError as UserRejectedRequestErrorWalletConnect,\r\n  WalletConnectConnector,\r\n} from '@web3-react/walletconnect-connector'\r\nimport { ConnectorNames, connectorLocalStorageKey } from '@pancakeswap/uikit'\r\nimport { connectorsByName } from 'utils/web3React'\r\nimport { setupNetwork } from 'utils/wallet'\r\nimport useToast from 'hooks/useToast'\r\nimport { profileClear } from 'state/profile'\r\nimport { useAppDispatch } from 'state'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\nconst useAuth = () => {\r\n  const { t } = useTranslation()\r\n  const dispatch = useAppDispatch()\r\n  const { activate, deactivate } = useWeb3React()\r\n  const { toastError } = useToast()\r\n\r\n  const login = useCallback(\r\n    (connectorID: ConnectorNames) => {\r\n      const connector = connectorsByName[connectorID]\r\n      if (connector) {\r\n        activate(connector, async (error: Error) => {\r\n          if (error instanceof UnsupportedChainIdError) {\r\n            const hasSetup = await setupNetwork()\r\n            if (hasSetup) {\r\n              activate(connector)\r\n            }\r\n          } else {\r\n            window.localStorage.removeItem(connectorLocalStorageKey)\r\n            if (error instanceof NoEthereumProviderError || error instanceof NoBscProviderError) {\r\n              toastError(t('Provider Error'), t('No provider was found'))\r\n            } else if (\r\n              error instanceof UserRejectedRequestErrorInjected ||\r\n              error instanceof UserRejectedRequestErrorWalletConnect\r\n            ) {\r\n              if (connector instanceof WalletConnectConnector) {\r\n                const walletConnector = connector as WalletConnectConnector\r\n                walletConnector.walletConnectProvider = null\r\n              }\r\n              toastError(t('Authorization Error'), t('Please authorize to access your account'))\r\n            } else {\r\n              toastError(error.name, error.message)\r\n            }\r\n          }\r\n        })\r\n      } else {\r\n        toastError(t('Unable to find connector'), t('The connector config is wrong'))\r\n      }\r\n    },\r\n    [t, activate, toastError],\r\n  )\r\n\r\n  const logout = useCallback(() => {\r\n    dispatch(profileClear())\r\n    deactivate()\r\n    // This localStorage key is set by @web3-react/walletconnect-connector\r\n    if (window.localStorage.getItem('walletconnect')) {\r\n      connectorsByName.walletconnect.close()\r\n      connectorsByName.walletconnect.walletConnectProvider = null\r\n    }\r\n  }, [deactivate, dispatch])\r\n\r\n  return { login, logout }\r\n}\r\n\r\nexport default useAuth\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}