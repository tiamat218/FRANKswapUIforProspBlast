{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useContext } from 'react';\nimport { ThemeContext as StyledThemeContext } from 'styled-components';\nimport { useThemeManager } from 'state/user/hooks';\nconst useTheme = () => {\n  _s();\n  const [, toggleTheme] = useThemeManager();\n  const theme = useContext(StyledThemeContext);\n  const isDark = true;\n  const alwaysDarkTheme = () => {\n    if (!isDark) {\n      toggleTheme();\n    }\n  };\n  return {\n    isDark,\n    theme,\n    toggleTheme: alwaysDarkTheme\n  };\n};\n_s(useTheme, \"Un6wiFUj2sBMyjPRUl1ZU6bAI4s=\", false, function () {\n  return [useThemeManager];\n});\nexport default useTheme;","map":{"version":3,"names":["useContext","ThemeContext","StyledThemeContext","useThemeManager","useTheme","_s","toggleTheme","theme","isDark","alwaysDarkTheme"],"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/hooks/useTheme.ts"],"sourcesContent":["import { useContext } from 'react'\r\nimport { ThemeContext as StyledThemeContext } from 'styled-components'\r\nimport { useThemeManager } from 'state/user/hooks'\r\n\r\nconst useTheme = () => {\r\n  const [, toggleTheme] = useThemeManager()\r\n  const theme = useContext(StyledThemeContext)\r\n  const isDark = true\r\n\r\n  const alwaysDarkTheme = () => {\r\n    if (!isDark) {\r\n      toggleTheme() \r\n    }\r\n  }\r\n\r\n  return { isDark, theme, toggleTheme: alwaysDarkTheme }\r\n}\r\n\r\nexport default useTheme\r\n"],"mappings":";AAAA,SAASA,UAAU,QAAQ,OAAO;AAClC,SAASC,YAAY,IAAIC,kBAAkB,QAAQ,mBAAmB;AACtE,SAASC,eAAe,QAAQ,kBAAkB;AAElD,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,GAAGC,WAAW,CAAC,GAAGH,eAAe,CAAC,CAAC;EACzC,MAAMI,KAAK,GAAGP,UAAU,CAACE,kBAAkB,CAAC;EAC5C,MAAMM,MAAM,GAAG,IAAI;EAEnB,MAAMC,eAAe,GAAGA,CAAA,KAAM;IAC5B,IAAI,CAACD,MAAM,EAAE;MACXF,WAAW,CAAC,CAAC;IACf;EACF,CAAC;EAED,OAAO;IAAEE,MAAM;IAAED,KAAK;IAAED,WAAW,EAAEG;EAAgB,CAAC;AACxD,CAAC;AAAAJ,EAAA,CAZKD,QAAQ;EAAA,QACYD,eAAe;AAAA;AAazC,eAAeC,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module"}