{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Devrim\\\\Documents\\\\FRANKswapUIforProspBlast\\\\src\\\\views\\\\Voting\\\\Proposal\\\\Vote.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { Button, Card, CardBody, CardHeader, Heading, Radio, Text, useModal } from '@pancakeswap/uikit';\nimport { useWeb3React } from '@web3-react/core';\nimport { useAppDispatch } from 'state';\nimport { fetchVotes } from 'state/voting';\nimport useToast from 'hooks/useToast';\nimport { useTranslation } from 'contexts/Localization';\nimport ConnectWalletButton from 'components/ConnectWalletButton';\nimport CastVoteModal from '../components/CastVoteModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Choice = styled.label`\n  align-items: center;\n  border: 1px solid ${({\n  theme,\n  isChecked\n}) => theme.colors[isChecked ? 'success' : 'cardBorder']};\n  border-radius: 16px;\n  cursor: ${({\n  isDisabled\n}) => isDisabled ? 'not-allowed' : 'pointer'};\n  display: flex;\n  margin-bottom: 16px;\n  padding: 16px;\n`;\n_c = Choice;\nconst ChoiceText = styled.div`\n  flex: 1;\n  padding-left: 16px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  width: 0;\n`;\n_c2 = ChoiceText;\n\nconst Vote = ({\n  proposal,\n  ...props\n}) => {\n  _s();\n\n  const [vote, setVote] = useState(null);\n  const {\n    t\n  } = useTranslation();\n  const {\n    toastSuccess\n  } = useToast();\n  const dispatch = useAppDispatch();\n  const {\n    account\n  } = useWeb3React();\n\n  const handleSuccess = async () => {\n    toastSuccess(t('Vote cast!'));\n    dispatch(fetchVotes({\n      proposalId: proposal.id,\n      block: Number(proposal.snapshot)\n    }));\n  };\n\n  const [presentCastVoteModal] = useModal( /*#__PURE__*/_jsxDEV(CastVoteModal, {\n    onSuccess: handleSuccess,\n    proposalId: proposal.id,\n    vote: vote,\n    block: Number(proposal.snapshot)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(Card, { ...props,\n    children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n      children: /*#__PURE__*/_jsxDEV(Heading, {\n        as: \"h3\",\n        scale: \"md\",\n        children: t('Cast your vote')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n      children: [proposal.choices.map((choice, index) => {\n        const isChecked = index + 1 === (vote === null || vote === void 0 ? void 0 : vote.value);\n\n        const handleChange = () => {\n          setVote({\n            label: choice,\n            value: index + 1\n          });\n        };\n\n        return /*#__PURE__*/_jsxDEV(Choice, {\n          isChecked: isChecked,\n          isDisabled: !account,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              flexShrink: 0\n            },\n            children: /*#__PURE__*/_jsxDEV(Radio, {\n              scale: \"sm\",\n              value: choice,\n              checked: isChecked,\n              onChange: handleChange,\n              disabled: !account\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ChoiceText, {\n            children: /*#__PURE__*/_jsxDEV(Text, {\n              as: \"span\",\n              title: choice,\n              children: choice\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this)]\n        }, choice, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this);\n      }), account ? /*#__PURE__*/_jsxDEV(Button, {\n        onClick: presentCastVoteModal,\n        disabled: vote === null,\n        children: t('Cast Vote')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(ConnectWalletButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Vote, \"KXDmuHTNBXlzs1aoKEOzo9XPR6M=\", false, function () {\n  return [useTranslation, useToast, useAppDispatch, useWeb3React, useModal];\n});\n\n_c3 = Vote;\nexport default Vote;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Choice\");\n$RefreshReg$(_c2, \"ChoiceText\");\n$RefreshReg$(_c3, \"Vote\");","map":{"version":3,"sources":["C:/Users/Devrim/Documents/FRANKswapUIforProspBlast/src/views/Voting/Proposal/Vote.tsx"],"names":["React","useState","styled","Button","Card","CardBody","CardHeader","Heading","Radio","Text","useModal","useWeb3React","useAppDispatch","fetchVotes","useToast","useTranslation","ConnectWalletButton","CastVoteModal","Choice","label","theme","isChecked","colors","isDisabled","ChoiceText","div","Vote","proposal","props","vote","setVote","t","toastSuccess","dispatch","account","handleSuccess","proposalId","id","block","Number","snapshot","presentCastVoteModal","choices","map","choice","index","value","handleChange","flexShrink"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button, Card, CardBody, CardHeader, CardProps, Heading, Radio, Text, useModal } from '@pancakeswap/uikit'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useAppDispatch } from 'state'\r\nimport { Proposal } from 'state/types'\r\nimport { fetchVotes } from 'state/voting'\r\nimport useToast from 'hooks/useToast'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport ConnectWalletButton from 'components/ConnectWalletButton'\r\nimport CastVoteModal from '../components/CastVoteModal'\r\n\r\ninterface VoteProps extends CardProps {\r\n  proposal: Proposal\r\n}\r\n\r\ninterface State {\r\n  label: string\r\n  value: number\r\n}\r\n\r\nconst Choice = styled.label<{ isChecked: boolean; isDisabled: boolean }>`\r\n  align-items: center;\r\n  border: 1px solid ${({ theme, isChecked }) => theme.colors[isChecked ? 'success' : 'cardBorder']};\r\n  border-radius: 16px;\r\n  cursor: ${({ isDisabled }) => (isDisabled ? 'not-allowed' : 'pointer')};\r\n  display: flex;\r\n  margin-bottom: 16px;\r\n  padding: 16px;\r\n`\r\n\r\nconst ChoiceText = styled.div`\r\n  flex: 1;\r\n  padding-left: 16px;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n  width: 0;\r\n`\r\n\r\nconst Vote: React.FC<VoteProps> = ({ proposal, ...props }) => {\r\n  const [vote, setVote] = useState<State>(null)\r\n  const { t } = useTranslation()\r\n  const { toastSuccess } = useToast()\r\n  const dispatch = useAppDispatch()\r\n  const { account } = useWeb3React()\r\n\r\n  const handleSuccess = async () => {\r\n    toastSuccess(t('Vote cast!'))\r\n    dispatch(fetchVotes({ proposalId: proposal.id, block: Number(proposal.snapshot) }))\r\n  }\r\n\r\n  const [presentCastVoteModal] = useModal(\r\n    <CastVoteModal onSuccess={handleSuccess} proposalId={proposal.id} vote={vote} block={Number(proposal.snapshot)} />,\r\n  )\r\n\r\n  return (\r\n    <Card {...props}>\r\n      <CardHeader>\r\n        <Heading as=\"h3\" scale=\"md\">\r\n          {t('Cast your vote')}\r\n        </Heading>\r\n      </CardHeader>\r\n      <CardBody>\r\n        {proposal.choices.map((choice, index) => {\r\n          const isChecked = index + 1 === vote?.value\r\n\r\n          const handleChange = () => {\r\n            setVote({\r\n              label: choice,\r\n              value: index + 1,\r\n            })\r\n          }\r\n\r\n          return (\r\n            <Choice key={choice} isChecked={isChecked} isDisabled={!account}>\r\n              <div style={{ flexShrink: 0 }}>\r\n                <Radio scale=\"sm\" value={choice} checked={isChecked} onChange={handleChange} disabled={!account} />\r\n              </div>\r\n              <ChoiceText>\r\n                <Text as=\"span\" title={choice}>\r\n                  {choice}\r\n                </Text>\r\n              </ChoiceText>\r\n            </Choice>\r\n          )\r\n        })}\r\n        {account ? (\r\n          <Button onClick={presentCastVoteModal} disabled={vote === null}>\r\n            {t('Cast Vote')}\r\n          </Button>\r\n        ) : (\r\n          <ConnectWalletButton />\r\n        )}\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default Vote\r\n"]},"metadata":{},"sourceType":"module"}