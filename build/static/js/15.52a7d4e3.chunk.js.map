{"version":3,"sources":["views/Profile/components/ComingSoon.tsx","views/Profile/components/SecondaryCard.tsx","views/Profile/components/StatBox.tsx","views/Teams/components/TeamCard.tsx","views/Teams/Team.tsx","state/teams/hooks.ts","views/Profile/components/HeaderWrapper.tsx","views/Teams/components/NoProfileCard.tsx","views/Teams/components/TeamHeader.tsx"],"names":["ComingSoon","_ref","children","t","useTranslation","_jsxs","Flex","flexDirection","alignItems","justifyContent","p","_jsx","BunnyPlaceholderIcon","width","height","Heading","as","scale","color","SecondaryCard","styled","Text","_templateObject","_taggedTemplateLiteral","theme","colors","tertiary","defaultProps","StatBox","icon","Icon","title","subtitle","isDisabled","props","mr","textTransform","fontSize","bold","Wrapper","div","mediaQueries","md","Avatar","img","_templateObject2","_ref2","AvatarWrap","_templateObject3","StyledCard","Card","_templateObject4","StyledCardHeader","CardHeader","_templateObject5","_ref3","bg","TeamName","attrs","_templateObject6","_ref4","StatRow","_templateObject7","_ref5","TeamCard","_ref6","team","concat","background","src","images","alt","textColor","name","description","CardBody","CommunityIcon","users","PrizeIcon","Team","id","idStr","useParams","Number","isValidTeamId","teams","findIndex","useTeam","Page","TeamHeader","mb","Link","to","ChevronLeftIcon","PageLoader","Redirect","useSelector","state","data","dispatch","useAppDispatch","useEffect","fetchTeam","useTeams","isInitialized","isLoading","fetchTeams","HeaderWrapper","textSubtle","NoProfileCard","isActive","profile","useProfile","showProfileCallout","_Fragment"],"mappings":"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","file":"static/js/15.52a7d4e3.chunk.js","sourcesContent":["import React from 'react'\r\nimport { BunnyPlaceholderIcon, Flex, Heading } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\ninterface ComingSoonProps {\r\n  children?: React.ReactNode\r\n}\r\n\r\nconst ComingSoon: React.FC<ComingSoonProps> = ({ children }) => {\r\n  const { t } = useTranslation()\r\n\r\n  return (\r\n    <Flex flexDirection=\"column\" alignItems=\"center\" justifyContent=\"center\" p=\"24px\">\r\n      <BunnyPlaceholderIcon width=\"72px\" height=\"72px\" />\r\n      <Heading as=\"h5\" scale=\"md\" color=\"textDisabled\">\r\n        {children || t('Coming Soon!')}\r\n      </Heading>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default ComingSoon\r\n","import styled from 'styled-components'\r\nimport { Text } from '@pancakeswap/uikit'\r\n\r\nconst SecondaryCard = styled(Text)`\r\n  border: 2px solid ${({ theme }) => theme.colors.tertiary};\r\n  border-radius: 16px;\r\n`\r\n\r\nSecondaryCard.defaultProps = {\r\n  p: '24px',\r\n}\r\n\r\nexport default SecondaryCard\r\n","import React, { ElementType, ReactNode } from 'react'\r\nimport { Flex, Heading, Text, TextProps } from '@pancakeswap/uikit'\r\nimport SecondaryCard from './SecondaryCard'\r\n\r\ninterface StatBoxProps extends TextProps {\r\n  icon: ElementType\r\n  title: ReactNode\r\n  subtitle: ReactNode\r\n  isDisabled?: boolean\r\n}\r\n\r\nconst StatBox: React.FC<StatBoxProps> = ({ icon: Icon, title, subtitle, isDisabled = false, ...props }) => {\r\n  return (\r\n    <SecondaryCard {...props}>\r\n      <Flex alignItems=\"start\">\r\n        <Icon width=\"44px\" mr=\"24px\" color={isDisabled ? 'textDisabled' : 'currentColor'} />\r\n        <div>\r\n          <Heading as=\"h3\" scale=\"xl\" color={isDisabled ? 'textDisabled' : 'text'}>\r\n            {title}\r\n          </Heading>\r\n          <Text textTransform=\"uppercase\" color={isDisabled ? 'textDisabled' : 'textSubtle'} fontSize=\"12px\" bold>\r\n            {subtitle}\r\n          </Text>\r\n        </div>\r\n      </Flex>\r\n    </SecondaryCard>\r\n  )\r\n}\r\n\r\nexport default StatBox\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Card, CardHeader, CardBody, CommunityIcon, Heading, PrizeIcon, Text } from '@pancakeswap/uikit'\r\nimport { Team } from 'config/constants/types'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport ComingSoon from 'views/Profile/components/ComingSoon'\r\nimport StatBox from 'views/Profile/components/StatBox'\r\n\r\ninterface TeamCardProps {\r\n  team: Team\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  padding-top: 16px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    padding-top: 24px;\r\n  }\r\n`\r\n\r\nconst Avatar = styled.img`\r\n  border-radius: 50%;\r\n  height: 64px;\r\n  margin-top: -12px;\r\n  width: 64px;\r\n  border: solid 2px white;\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    height: 128px;\r\n    margin-top: -24px;\r\n    width: 128px;\r\n  }\r\n`\r\n\r\nconst AvatarWrap = styled.div`\r\n  margin-bottom: 8px;\r\n  text-align: center;\r\n`\r\n\r\nconst StyledCard = styled(Card)`\r\n  overflow: visible;\r\n`\r\n\r\nconst StyledCardHeader = styled(CardHeader)<{ bg: string }>`\r\n  position: relative;\r\n  background: url(${({ bg }) => bg});\r\n  background-repeat: no-repeat;\r\n  background-position: center;\r\n  background-size: cover;\r\n  border-radius: 32px 32px 0 0;\r\n  padding-top: 0;\r\n  text-align: center;\r\n`\r\n\r\nconst TeamName = styled(Heading).attrs({ as: 'h2' })`\r\n  font-size: 24px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    font-size: 40px;\r\n  }\r\n`\r\n\r\nconst StatRow = styled.div`\r\n  display: grid;\r\n  grid-gap: 16px;\r\n  grid-template-columns: 1fr;\r\n  margin-bottom: 16px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    grid-gap: 32px;\r\n    grid-template-columns: repeat(2, 1fr);\r\n    margin-bottom: 32px;\r\n  }\r\n`\r\n\r\nconst TeamCard: React.FC<TeamCardProps> = ({ team }) => {\r\n  const { t } = useTranslation()\r\n\r\n  return (\r\n    <Wrapper>\r\n      <StyledCard>\r\n        <StyledCardHeader bg={`/images/teams/${team.background}`}>\r\n          <AvatarWrap>\r\n            <Avatar src={`/images/teams/${team.images.md}`} alt=\"team avatar\" />\r\n          </AvatarWrap>\r\n          <TeamName color={team.textColor}>{team.name}</TeamName>\r\n          <Text as=\"p\" color={team.textColor}>\r\n            {t(team.description)}\r\n          </Text>\r\n        </StyledCardHeader>\r\n        <CardBody>\r\n          <StatRow>\r\n            <StatBox icon={CommunityIcon} title={team.users} subtitle={t('Active Members')} />\r\n            <StatBox icon={PrizeIcon} title={t('Coming Soon')} subtitle={t('Team Points')} isDisabled />\r\n          </StatRow>\r\n          <Heading as=\"h3\">{t('Team Achievements')}</Heading>\r\n          <ComingSoon />\r\n        </CardBody>\r\n      </StyledCard>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default TeamCard\r\n","import React from 'react'\r\nimport Page from 'components/Layout/Page'\r\nimport { Link, Redirect, useParams } from 'react-router-dom'\r\nimport { ChevronLeftIcon, Flex, Text } from '@pancakeswap/uikit'\r\nimport PageLoader from 'components/Loader/PageLoader'\r\nimport teams from 'config/constants/teams'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useTeam } from 'state/teams/hooks'\r\nimport TeamCard from './components/TeamCard'\r\nimport TeamHeader from './components/TeamHeader'\r\n\r\nconst Team = () => {\r\n  const { id: idStr }: { id: string } = useParams()\r\n  const id = Number(idStr)\r\n  const { t } = useTranslation()\r\n  const isValidTeamId = teams.findIndex((team) => team.id === id) !== -1\r\n  const team = useTeam(id)\r\n\r\n  if (!isValidTeamId) {\r\n    return <Redirect to=\"/404\" />\r\n  }\r\n\r\n  if (!team) {\r\n    return <PageLoader />\r\n  }\r\n\r\n  return (\r\n    <Page>\r\n      <TeamHeader />\r\n      <Flex mb=\"24px\">\r\n        <Link to=\"/teams\">\r\n          <Flex alignItems=\"center\">\r\n            <ChevronLeftIcon color=\"primary\" />\r\n            <Text color=\"primary\">{t('Teams Overview')}</Text>\r\n          </Flex>\r\n        </Link>\r\n      </Flex>\r\n      <TeamCard team={team} />\r\n    </Page>\r\n  )\r\n}\r\n\r\nexport default Team\r\n","import { useEffect } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { useAppDispatch } from 'state'\r\nimport { Team } from 'config/constants/types'\r\nimport { State, TeamsState } from '../types'\r\nimport { fetchTeam, fetchTeams } from '.'\r\n\r\nexport const useTeam = (id: number) => {\r\n  const team: Team = useSelector((state: State) => state.teams.data[id])\r\n  const dispatch = useAppDispatch()\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchTeam(id))\r\n  }, [id, dispatch])\r\n\r\n  return team\r\n}\r\n\r\nexport const useTeams = () => {\r\n  const { isInitialized, isLoading, data }: TeamsState = useSelector((state: State) => state.teams)\r\n  const dispatch = useAppDispatch()\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchTeams())\r\n  }, [dispatch])\r\n\r\n  return { teams: data, isInitialized, isLoading }\r\n}\r\n","import styled from 'styled-components'\r\n\r\nconst HeaderWrapper = styled.div`\r\n  border-bottom: 2px solid ${({ theme }) => theme.colors.textSubtle};\r\n  margin-bottom: 24px;\r\n  padding-bottom: 24px;\r\n`\r\n\r\nexport default HeaderWrapper\r\n","import React from 'react'\r\nimport { Button, Card, CardBody, Flex, Heading, Text } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst NoProfileCard = () => {\r\n  const { t } = useTranslation()\r\n\r\n  return (\r\n    <Card mb=\"32px\" isActive>\r\n      <CardBody>\r\n        <Flex\r\n          alignItems={['start', null, 'center']}\r\n          justifyContent={['start', null, 'space-between']}\r\n          flexDirection={['column', null, 'row']}\r\n        >\r\n          <div>\r\n            <Heading scale=\"lg\" mb=\"8px\">\r\n              {t('You haven’t set up your profile yet!')}\r\n            </Heading>\r\n            <Text>{t('You can do this at any time by clicking on your profile picture in the menu')}</Text>\r\n          </div>\r\n{/*           <Button as={Link} to=\"/profile\" id=\"teamsPageSetUpProfile\" mt={['16px', null, 0]}>\r\n            {t('Set up now')}\r\n          </Button> */}\r\n        </Flex>\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default NoProfileCard\r\n","import React from 'react'\r\nimport { Heading, Text } from '@pancakeswap/uikit'\r\nimport { useProfile } from 'state/profile/hooks'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport HeaderWrapper from 'views/Profile/components/HeaderWrapper'\r\nimport NoProfileCard from './NoProfileCard'\r\n\r\nconst TeamHeader = () => {\r\n  const { t } = useTranslation()\r\n  const { isInitialized, profile } = useProfile()\r\n  const showProfileCallout = isInitialized && !profile\r\n\r\n  return (\r\n    <>\r\n      {showProfileCallout && <NoProfileCard />}\r\n      <HeaderWrapper>\r\n        <Heading as=\"h1\" scale=\"xxl\" color=\"secondary\">\r\n          {t('Teams & Profiles')}\r\n        </Heading>\r\n        <Text bold>\r\n          {t('Show off your stats and collectibles with your unique profile. Team features will be revealed soon!')}\r\n        </Text>\r\n      </HeaderWrapper>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default TeamHeader\r\n"],"sourceRoot":""}