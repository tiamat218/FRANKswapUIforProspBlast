{"version":3,"sources":["../node_modules/lodash/shuffle.js","../node_modules/lodash/_arrayShuffle.js","../node_modules/lodash/_baseShuffle.js","views/Profile/ProfileCreation/config.ts","views/Profile/ProfileCreation/contexts/ProfileCreationProvider.tsx","views/Profile/ProfileCreation/Header.tsx","views/Profile/components/WalletNotConnected.tsx","hooks/useHasCakeBalance.ts","views/Profile/components/SelectionCard.tsx","views/Profile/components/NextStepButton.tsx","views/Profile/ProfileCreation/contexts/hook.ts","views/Profile/ProfileCreation/Mint.tsx","views/Profile/ProfileCreation/ProfilePicture.tsx","views/Profile/ProfileCreation/TeamSelection.tsx","../node_modules/date-fns/esm/compareAsc/index.js","../node_modules/date-fns/esm/isLastDayOfMonth/index.js","../node_modules/date-fns/esm/differenceInMonths/index.js","../node_modules/date-fns/esm/differenceInMilliseconds/index.js","../node_modules/date-fns/esm/differenceInSeconds/index.js","../node_modules/date-fns/esm/_lib/cloneObject/index.js","../node_modules/date-fns/esm/formatDistance/index.js","views/Profile/components/ConfirmProfileCreationModal.tsx","views/Profile/ProfileCreation/UserName.tsx","views/Profile/ProfileCreation/Steps.tsx","views/Profile/ProfileCreation/index.tsx","views/Profile/components/ClaimGiftModal.tsx","views/Profile/components/EditProfileModal/reducer.ts","views/Profile/hooks/useGetProfileCosts.ts","views/Profile/components/EditProfileModal/StartView.tsx","views/Profile/components/EditProfileModal/PauseProfileView.tsx","views/Profile/components/EditProfileModal/ChangeProfilePicView.tsx","views/Profile/components/EditProfileModal/ApproveCakeView.tsx","views/Profile/components/EditProfileModal/index.tsx","views/Profile/components/Header.tsx","views/Profile/index.tsx","state/achievements/hooks.ts","state/hooks.ts","hooks/useTokenBalance.ts","hooks/useApproveConfirmTransaction.ts","views/Profile/components/ApproveConfirmButtons.tsx","state/teams/hooks.ts","views/Profile/components/HeaderWrapper.tsx","views/Profile/components/ProfileAvatar.tsx","../node_modules/lodash/_shuffleSelf.js"],"names":["arrayShuffle","require","baseShuffle","isArray","module","exports","collection","copyArray","shuffleSelf","array","values","REGISTER_COST","STARTER_BUNNY_IDENTIFIERS","initialState","isInitialized","currentStep","teamId","selectedNft","nftAddress","tokenId","userName","minimumCakeRequired","BigNumber","MINT_COST","multipliedBy","DEFAULT_TOKEN_DECIMAL","allowance","totalCost","reducer","state","action","type","step","ProfileCreationContext","createContext","ProfileCreationProvider","_ref","children","dispatch","useReducer","account","useWeb3React","useEffect","isSubscribed","async","bunnyFactoryContract","getBunnyFactoryContract","canMint","fetchData","actions","useMemo","nextStep","setTeamId","setSelectedNft","setUserName","_jsx","Provider","value","Wrapper","styled","div","_templateObject","_taggedTemplateLiteral","theme","colors","textSubtle","steps","Header","t","useTranslation","useContext","_jsxs","Heading","as","scale","color","mb","Text","Breadcrumbs","map","translationKey","index","WalletNotConnected","ConnectWalletButton","useHasCakeBalance","minimumBalance","balance","cakeBalance","useTokenBalance","getCakeAddress","gte","StyledCard","Card","isSuccess","Label","label","_templateObject2","_ref2","isDisabled","_ref3","Body","_templateObject3","_ref4","tertiary","Children","_templateObject4","StyledBackgroundImage","_templateObject5","_ref5","src","SelectionCard","_ref6","name","isChecked","image","onChange","disabled","props","Radio","checked","e","target","style","flex","NextStepButton","Button","endIcon","ArrowForwardIcon","useProfileCreation","nfts","nftList","filter","nft","includes","identifier","minimumCakeBalanceToMint","Mint","variationId","setVariationId","useState","cakeContract","useCake","useBunnyFactory","hasMinimumCakeRequired","isApproving","isApproved","isConfirmed","isConfirming","handleApprove","handleConfirm","useApproveConfirmTransaction","onRequiresApproval","response","address","toString","error","onApprove","approve","toJSON","onConfirm","mintNFT","onSuccess","_Fragment","fontSize","bold","num","CardBody","concat","images","md","Number","ApproveConfirmButtons","isApproveDisabled","isConfirmDisabled","onClick","Link","RouterLink","primary","NftWrapper","ProfilePicture","library","setIsApproved","setIsApproving","isLoading","nftsInWallet","tokenIds","useGetCollectibles","toastError","useToast","length","to","marginLeft","Skeleton","height","walletNft","firstTokenId","getAddressByType","parseInt","contract","getErc721Contract","getSigner","tx","getPancakeProfileAddress","wait","status","AutoRenewIcon","spin","undefined","id","Team","currentTeamId","teams","useTeams","handleTeamSelection","teamValues","shuffle","Object","team","isJoinable","Flex","CommunityIcon","mr","users","toLocaleString","compareAsc","dirtyDateLeft","dirtyDateRight","requiredArgs","arguments","dateLeft","toDate","dateRight","diff","getTime","isLastDayOfMonth","dirtyDate","date","endOfDay","endOfMonth","differenceInMonths","result","sign","difference","Math","abs","differenceInCalendarMonths","getMonth","getDate","setDate","setMonth","isLastMonthNotFull","differenceInMilliseconds","differenceInSeconds","floor","ceil","cloneObject","dirtyObject","assign","MINUTES_IN_DAY","MINUTES_IN_MONTH","ConfirmProfileCreationModal","ExistingUserState","onDismiss","profileContract","useProfile","useAppDispatch","toastSuccess","createProfile","fetchProfile","Modal","title","justifyContent","profileApiUrl","process","minimumCakeToRegister","InputWrap","Input","UIKitInput","Indicator","UserName","isAcknowledged","setIsAcknowledged","useWeb3Provider","existingUserState","setExistingUserState","IDLE","isValid","setIsValid","setIsLoading","message","setMessage","onPresentConfirmProfileCreation","useModal","isUserCreated","CREATED","checkUsernameValidity","debounce","res","fetch","ok","_data$error","data","json","dateCreated","dirtyBaseDate","options","locale","defaultLocale","formatDistance","RangeError","comparison","isNaN","localizeOptions","addSuffix","Boolean","months","seconds","offsetInSeconds","getTimezoneOffsetInMilliseconds","minutes","round","includeSeconds","hours","days","nearestMonth","monthsSinceStartOfYear","years","parseISO","created_at","Date","username","NEW","fetchUser","width","event","isWarning","minLength","maxLength","placeholder","CheckmarkIcon","WarningIcon","py","minHeight","htmlFor","display","cursor","marginBottom","alignItems","Checkbox","handleAcknowledge","ml","signature","signMessage","method","headers","body","JSON","stringify","_data$error2","mt","Steps","TeamSelection","NoWalletConnected","ProfileCreation","Page","useCanClaim","canClaim","setCanClaim","refresh","setRefresh","checkClaimStatus","useCallback","prevRefresh","claimRefundContract","getClaimRefundContract","walletCanClaim","fetchClaimStatus","ClaimGift","setIsConfirming","useClaimRefundContract","maxWidth","getCakeBack","Views","currentView","view","previousView","useEditProfile","START","goToStart","goToChange","CHANGE","goToRemove","REMOVE","goToApprove","APPROVE","goPrevious","useGetProfileCosts","costs","setCosts","numberCakeToReactivate","BIG_ZERO","numberCakeToRegister","numberCakeToUpdate","calls","multicallv2","profileABI","fetchCosts","DangerOutline","attrs","variant","failure","AvatarWrapper","mediaQueries","sm","StartPage","needsApproval","setNeedsApproval","profile","isActive","cost","currentAllowance","lt","checkApprovalStatus","flexDirection","ProfileAvatar","minimum","getFullDisplayBalance","PauseProfilePage","pancakeProfileContract","useProfileContract","getBalanceNumber","handleChange","pauseProfile","ChangeProfilePicPage","updateProfile","reactivateProfile","ApproveCakePage","times","viewTitle","EditProfileModal","isStartView","handleBack","onBack","hideCloseButton","StartView","PauseProfileView","ChangeProfilePicView","ApproveCakeView","ProfileHeader","onPresentClaimGiftModal","ClaimNftAndCakeModal","onEditProfileModal","hasProfile","HeaderWrapper","startIcon","PresentWonIcon","Profile","useFetchAchievements","fetchAchievements","PageLoader","useGetSortedRounds","roundData","useGetRounds","rounds","useSelector","predictions","keys","reduce","accum","epoch","parseBigNumberObj","orderBy","useGetBetByEpoch","bets","ledgers","useGetIsClaimable","claimableStatuses","useGetEarliestEpoch","earliestRound","minBy","useIsHistoryPaneOpen","isHistoryPaneOpen","useIsChartPaneOpen","isChartPaneOpen","useGetCurrentEpoch","currentEpoch","useGetIntervalBlocks","intervalBlocks","useGetTotalIntervalBlocks","bufferBlocks","useGetPredictionsStatus","useGetHistoryFilter","historyFilter","useGetCurrentRoundBlockNumber","currentRoundStartBlockNumber","useGetMinBetAmount","minBetAmount","ethers","from","useGetRewardRate","rewardRate","useGetIsFetchingHistory","isFetchingHistory","useGetHistoryByAccount","history","useGetLastOraclePrice","lastOraclePrice","collectibles","identifiers","fetchWalletNfts","Nfts","FetchStatus","useTotalSupply","slowRefresh","useRefresh","totalSupply","setTotalSupply","getCakeContract","supply","fetchTotalSupply","useBurnedBalance","tokenAddress","setBalance","getBep20Contract","balanceOf","fetchBalance","useGetBnbBalance","lastUpdated","setLastUpdated","useLastUpdated","walletBalance","simpleRpcProvider","getBalance","NOT_FETCHED","SUCCESS","FAILED","balanceState","setBalanceState","fetchStatus","fastRefresh","console","prev","approvalState","confirmState","noop","onApproveSuccess","handlePreApprove","useRef","current","then","ButtonArrangement","StyledApproveConfirmButtonRow","UIKitButton","iconAttrs","ChevronRight","ChevronRightIcon","ChevronBottom","ChevronDownIcon","spinnerIcon","buttonArrangement","ROW","confirmLabel","confirmButtonText","Box","useTeam","fetchTeam","fetchTeams","TeamAvatar","img","card","background","bg","AvatarInactive","NoProfileAvatarIcon","_profile$nft","_profile$nft$images","alt","baseRandom","size","lastIndex","rand"],"mappings":"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","file":"static/js/7.2467c96d.chunk.js","sourcesContent":["var arrayShuffle = require('./_arrayShuffle'),\n    baseShuffle = require('./_baseShuffle'),\n    isArray = require('./isArray');\n\n/**\n * Creates an array of shuffled values, using a version of the\n * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to shuffle.\n * @returns {Array} Returns the new shuffled array.\n * @example\n *\n * _.shuffle([1, 2, 3, 4]);\n * // => [4, 1, 3, 2]\n */\nfunction shuffle(collection) {\n  var func = isArray(collection) ? arrayShuffle : baseShuffle;\n  return func(collection);\n}\n\nmodule.exports = shuffle;\n","var copyArray = require('./_copyArray'),\n    shuffleSelf = require('./_shuffleSelf');\n\n/**\n * A specialized version of `_.shuffle` for arrays.\n *\n * @private\n * @param {Array} array The array to shuffle.\n * @returns {Array} Returns the new shuffled array.\n */\nfunction arrayShuffle(array) {\n  return shuffleSelf(copyArray(array));\n}\n\nmodule.exports = arrayShuffle;\n","var shuffleSelf = require('./_shuffleSelf'),\n    values = require('./values');\n\n/**\n * The base implementation of `_.shuffle`.\n *\n * @private\n * @param {Array|Object} collection The collection to shuffle.\n * @returns {Array} Returns the new shuffled array.\n */\nfunction baseShuffle(collection) {\n  return shuffleSelf(values(collection));\n}\n\nmodule.exports = baseShuffle;\n","export const MINT_COST = 1\r\nexport const REGISTER_COST = 0.5\r\nexport const ALLOWANCE_MULTIPLIER = 5\r\nexport const STARTER_BUNNY_IDENTIFIERS = ['sleepy', 'dollop', 'twinkle', 'churro', 'sunny']\r\nexport const USERNAME_MIN_LENGTH = 3\r\nexport const USERNAME_MAX_LENGTH = 15\r\n","import React, { createContext, useEffect, useMemo, useReducer } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { getBunnyFactoryContract } from 'utils/contractHelpers'\r\nimport { DEFAULT_TOKEN_DECIMAL } from 'config'\r\nimport { MINT_COST, REGISTER_COST, ALLOWANCE_MULTIPLIER } from '../config'\r\nimport { Actions, State, ContextType } from './types'\r\n\r\nconst totalCost = MINT_COST + REGISTER_COST\r\nconst allowance = totalCost * ALLOWANCE_MULTIPLIER\r\n\r\nconst initialState: State = {\r\n  isInitialized: false,\r\n  currentStep: 0,\r\n  teamId: null,\r\n  selectedNft: {\r\n    nftAddress: null,\r\n    tokenId: null,\r\n  },\r\n  userName: '',\r\n  minimumCakeRequired: new BigNumber(totalCost).multipliedBy(DEFAULT_TOKEN_DECIMAL),\r\n  allowance: new BigNumber(allowance).multipliedBy(DEFAULT_TOKEN_DECIMAL),\r\n}\r\n\r\nconst reducer = (state: State, action: Actions): State => {\r\n  switch (action.type) {\r\n    case 'initialize':\r\n      return {\r\n        ...state,\r\n        isInitialized: true,\r\n        currentStep: action.step,\r\n      }\r\n    case 'next_step':\r\n      return {\r\n        ...state,\r\n        currentStep: state.currentStep + 1,\r\n      }\r\n    case 'set_team':\r\n      return {\r\n        ...state,\r\n        teamId: action.teamId,\r\n      }\r\n    case 'set_selected_nft':\r\n      return {\r\n        ...state,\r\n        selectedNft: {\r\n          tokenId: action.tokenId,\r\n          nftAddress: action.nftAddress,\r\n        },\r\n      }\r\n    case 'set_username':\r\n      return {\r\n        ...state,\r\n        userName: action.userName,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const ProfileCreationContext = createContext<ContextType>(null)\r\n\r\nconst ProfileCreationProvider: React.FC = ({ children }) => {\r\n  const [state, dispatch] = useReducer(reducer, initialState)\r\n  const { account } = useWeb3React()\r\n\r\n  // Initial checks\r\n  useEffect(() => {\r\n    let isSubscribed = true\r\n\r\n    const fetchData = async () => {\r\n      const bunnyFactoryContract = getBunnyFactoryContract()\r\n      const canMint = await bunnyFactoryContract.canMint(account)\r\n      dispatch({ type: 'initialize', step: canMint ? 0 : 1 })\r\n\r\n      // When changing wallets quickly unmounting before the hasClaim finished causes a React error\r\n      if (isSubscribed) {\r\n        dispatch({ type: 'initialize', step: canMint ? 0 : 1 })\r\n      }\r\n    }\r\n\r\n    if (account) {\r\n      fetchData()\r\n    }\r\n\r\n    return () => {\r\n      isSubscribed = false\r\n    }\r\n  }, [account, dispatch])\r\n\r\n  const actions: ContextType['actions'] = useMemo(\r\n    () => ({\r\n      nextStep: () => dispatch({ type: 'next_step' }),\r\n      setTeamId: (teamId: number) => dispatch({ type: 'set_team', teamId }),\r\n      setSelectedNft: (tokenId: number, nftAddress: string) =>\r\n        dispatch({ type: 'set_selected_nft', tokenId, nftAddress }),\r\n      setUserName: (userName: string) => dispatch({ type: 'set_username', userName }),\r\n    }),\r\n    [dispatch],\r\n  )\r\n\r\n  return <ProfileCreationContext.Provider value={{ ...state, actions }}>{children}</ProfileCreationContext.Provider>\r\n}\r\n\r\nexport default ProfileCreationProvider\r\n","import React, { useContext } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Breadcrumbs, Heading, Text } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { ProfileCreationContext } from './contexts/ProfileCreationProvider'\r\n\r\nconst Wrapper = styled.div`\r\n  border-bottom: 2px solid ${({ theme }) => theme.colors.textSubtle};\r\n  margin-bottom: 24px;\r\n  padding-bottom: 24px;\r\n`\r\n\r\nconst steps = ['Get Starter Collectible', 'Set Profile Picture', 'Join Team', 'Set Name']\r\n\r\nconst Header: React.FC = () => {\r\n  const { t } = useTranslation()\r\n  const { currentStep } = useContext(ProfileCreationContext)\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Heading as=\"h1\" scale=\"xxl\" color=\"secondary\" mb=\"8px\">\r\n        {t('Profile Setup')}\r\n      </Heading>\r\n      <Heading as=\"h2\" scale=\"lg\" mb=\"8px\">\r\n        {t('Show off your stats and collectibles with your unique profile')}\r\n      </Heading>\r\n      <Text color=\"textSubtle\" mb=\"24px\">\r\n        {t('Total cost: 1.5 CAKE')}\r\n      </Text>\r\n      <Breadcrumbs>\r\n        {steps.map((translationKey, index) => {\r\n          return (\r\n            <Text key={translationKey} color={index <= currentStep ? 'text' : 'textDisabled'}>\r\n              {t(translationKey)}\r\n            </Text>\r\n          )\r\n        })}\r\n      </Breadcrumbs>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport { Heading, Text } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport ConnectWalletButton from 'components/ConnectWalletButton'\r\n\r\nconst WalletNotConnected = () => {\r\n  const { t } = useTranslation()\r\n\r\n  return (\r\n    <div>\r\n      <Heading scale=\"xl\" mb=\"8px\">\r\n        {t('Oops!')}\r\n      </Heading>\r\n      <Text as=\"p\" mb=\"16px\">\r\n        {t('Please connect your wallet to continue')}\r\n      </Text>\r\n      <ConnectWalletButton />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default WalletNotConnected\r\n","import BigNumber from 'bignumber.js'\r\nimport { getCakeAddress } from 'utils/addressHelpers'\r\nimport useTokenBalance from './useTokenBalance'\r\n\r\n/**\r\n * A hook to check if a wallet's CAKE balance is at least the amount passed in\r\n */\r\nconst useHasCakeBalance = (minimumBalance: BigNumber) => {\r\n  const { balance: cakeBalance } = useTokenBalance(getCakeAddress())\r\n  return cakeBalance.gte(minimumBalance)\r\n}\r\n\r\nexport default useHasCakeBalance\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Card, Radio } from '@pancakeswap/uikit'\r\n\r\ninterface SelectionCardProps {\r\n  name: string\r\n  value: string | number\r\n  isChecked?: boolean\r\n  onChange: (val: any) => void\r\n  image: string\r\n  disabled?: boolean\r\n}\r\n\r\nconst StyledCard = styled(Card)`\r\n  ${({ isSuccess }) => !isSuccess && 'box-shadow: none;'}\r\n  border-radius: 16px;\r\n  margin-bottom: 16px;\r\n`\r\n\r\nconst Label = styled.label<{ isDisabled: boolean }>`\r\n  cursor: ${({ isDisabled }) => (isDisabled ? 'not-allowed' : 'pointer')};\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  opacity: ${({ isDisabled }) => (isDisabled ? '0.6' : '1')};\r\n`\r\n\r\nconst Body = styled.div`\r\n  align-items: center;\r\n  border: 2px solid ${({ theme }) => theme.colors.tertiary};\r\n  border-radius: 16px 0 0 16px;\r\n  display: flex;\r\n  flex-grow: 1;\r\n  height: 80px;\r\n  padding: 8px 16px;\r\n`\r\n\r\nconst Children = styled.div`\r\n  margin-left: 16px;\r\n`\r\n\r\nconst StyledBackgroundImage = styled.div<{ src: string }>`\r\n  align-self: stretch;\r\n  background-image: url('${({ src }) => src}');\r\n  background-size: contain;\r\n  background-position: center;\r\n  background-repeat: no-repeat;\r\n  flex: none;\r\n  width: 80px;\r\n`\r\n\r\nconst SelectionCard: React.FC<SelectionCardProps> = ({\r\n  name,\r\n  value,\r\n  isChecked = false,\r\n  image,\r\n  onChange,\r\n  disabled,\r\n  children,\r\n  ...props\r\n}) => {\r\n  return (\r\n    <StyledCard isSuccess={isChecked} isDisabled={disabled} mb=\"16px\" {...props}>\r\n      <Label isDisabled={disabled}>\r\n        <Body>\r\n          <Radio\r\n            name={name}\r\n            checked={isChecked}\r\n            value={value}\r\n            onChange={(e) => onChange(e.target.value)}\r\n            disabled={disabled}\r\n            style={{ flex: 'none' }}\r\n          />\r\n          <Children>{children}</Children>\r\n        </Body>\r\n        <StyledBackgroundImage src={image} />\r\n      </Label>\r\n    </StyledCard>\r\n  )\r\n}\r\n\r\nexport default SelectionCard\r\n","import React from 'react'\r\nimport { ArrowForwardIcon, Button, ButtonProps } from '@pancakeswap/uikit'\r\n\r\nconst NextStepButton: React.FC<ButtonProps> = (props) => {\r\n  return <Button endIcon={<ArrowForwardIcon color=\"currentColor\" />} {...props} />\r\n}\r\n\r\nexport default NextStepButton\r\n","import { useContext } from 'react'\r\nimport { ProfileCreationContext } from './ProfileCreationProvider'\r\n\r\nconst useProfileCreation = () => {\r\n  return useContext(ProfileCreationContext)\r\n}\r\n\r\nexport default useProfileCreation\r\n","import React, { useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Card, CardBody, Heading, Text } from '@pancakeswap/uikit'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useApproveConfirmTransaction from 'hooks/useApproveConfirmTransaction'\r\nimport { DEFAULT_TOKEN_DECIMAL } from 'config'\r\nimport { useCake, useBunnyFactory } from 'hooks/useContract'\r\nimport { Nft } from 'config/constants/types'\r\nimport useHasCakeBalance from 'hooks/useHasCakeBalance'\r\nimport nftList from 'config/constants/nfts'\r\nimport SelectionCard from '../components/SelectionCard'\r\nimport NextStepButton from '../components/NextStepButton'\r\nimport ApproveConfirmButtons from '../components/ApproveConfirmButtons'\r\nimport useProfileCreation from './contexts/hook'\r\nimport { MINT_COST, STARTER_BUNNY_IDENTIFIERS } from './config'\r\n\r\nconst nfts = nftList.filter((nft) => STARTER_BUNNY_IDENTIFIERS.includes(nft.identifier))\r\nconst minimumCakeBalanceToMint = new BigNumber(MINT_COST).multipliedBy(DEFAULT_TOKEN_DECIMAL)\r\n\r\nconst Mint: React.FC = () => {\r\n  const [variationId, setVariationId] = useState<Nft['variationId']>(null)\r\n  const { actions, minimumCakeRequired, allowance } = useProfileCreation()\r\n\r\n  const { account } = useWeb3React()\r\n  const cakeContract = useCake()\r\n  const bunnyFactoryContract = useBunnyFactory()\r\n  const { t } = useTranslation()\r\n  const hasMinimumCakeRequired = useHasCakeBalance(minimumCakeBalanceToMint)\r\n  const { isApproving, isApproved, isConfirmed, isConfirming, handleApprove, handleConfirm } =\r\n    useApproveConfirmTransaction({\r\n      onRequiresApproval: async () => {\r\n        // TODO: Move this to a helper, this check will be probably be used many times\r\n        try {\r\n          const response = await cakeContract.allowance(account, bunnyFactoryContract.address)\r\n          const currentAllowance = new BigNumber(response.toString())\r\n          return currentAllowance.gte(minimumCakeRequired)\r\n        } catch (error) {\r\n          return false\r\n        }\r\n      },\r\n      onApprove: () => {\r\n        return cakeContract.approve(bunnyFactoryContract.address, allowance.toJSON())\r\n      },\r\n      onConfirm: () => {\r\n        return bunnyFactoryContract.mintNFT(variationId)\r\n      },\r\n      onSuccess: () => actions.nextStep(),\r\n    })\r\n\r\n  return (\r\n    <>\r\n      <Text fontSize=\"20px\" color=\"textSubtle\" bold>\r\n        {t('Step %num%', { num: 1 })}\r\n      </Text>\r\n      <Heading as=\"h3\" scale=\"xl\" mb=\"24px\">\r\n        {t('Get Starter Collectible')}\r\n      </Heading>\r\n      <Text as=\"p\">{t('Every profile starts by making a “starter” collectible (NFT).')}</Text>\r\n      <Text as=\"p\">{t('This starter will also become your first profile picture.')}</Text>\r\n      <Text as=\"p\" mb=\"24px\">\r\n        {t('You can change your profile pic later if you get another approved Pancake Collectible.')}\r\n      </Text>\r\n      <Card mb=\"24px\">\r\n        <CardBody>\r\n          <Heading as=\"h4\" scale=\"lg\" mb=\"8px\">\r\n            {t('Choose your Starter!')}\r\n          </Heading>\r\n          <Text as=\"p\" color=\"textSubtle\">\r\n            {t('Choose wisely: you can only ever make one starter collectible!')}\r\n          </Text>\r\n          <Text as=\"p\" mb=\"24px\" color=\"textSubtle\">\r\n            {t('Cost: %num% CAKE', { num: MINT_COST })}\r\n          </Text>\r\n          {nfts.map((nft) => {\r\n            const handleChange = (value: string) => setVariationId(Number(value))\r\n\r\n            return (\r\n              <SelectionCard\r\n                key={nft.identifier}\r\n                name=\"mintStarter\"\r\n                value={nft.variationId}\r\n                image={`/images/nfts/${nft.images.md}`}\r\n                isChecked={variationId === nft.variationId}\r\n                onChange={handleChange}\r\n                disabled={isApproving || isConfirming || isConfirmed || !hasMinimumCakeRequired}\r\n              >\r\n                <Text bold>{nft.name}</Text>\r\n              </SelectionCard>\r\n            )\r\n          })}\r\n          {!hasMinimumCakeRequired && (\r\n            <Text color=\"failure\" mb=\"16px\">\r\n              {t('A minimum of %num% CAKE is required', { num: MINT_COST })}\r\n            </Text>\r\n          )}\r\n          <ApproveConfirmButtons\r\n            isApproveDisabled={variationId === null || isConfirmed || isConfirming || isApproved}\r\n            isApproving={isApproving}\r\n            isConfirmDisabled={!isApproved || isConfirmed || !hasMinimumCakeRequired}\r\n            isConfirming={isConfirming}\r\n            onApprove={handleApprove}\r\n            onConfirm={handleConfirm}\r\n          />\r\n        </CardBody>\r\n      </Card>\r\n      <NextStepButton onClick={actions.nextStep} disabled={!isConfirmed}>\r\n        {t('Next Step')}\r\n      </NextStepButton>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Mint\r\n","import React, { useContext, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { AutoRenewIcon, Button, Card, CardBody, Heading, Skeleton, Text } from '@pancakeswap/uikit'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport { getAddressByType } from 'utils/collectibles'\r\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\r\nimport { getErc721Contract } from 'utils/contractHelpers'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useGetCollectibles } from 'state/hooks'\r\nimport useToast from 'hooks/useToast'\r\nimport SelectionCard from '../components/SelectionCard'\r\nimport NextStepButton from '../components/NextStepButton'\r\nimport { ProfileCreationContext } from './contexts/ProfileCreationProvider'\r\n\r\nconst Link = styled(RouterLink)`\r\n  color: ${({ theme }) => theme.colors.primary};\r\n`\r\n\r\nconst NftWrapper = styled.div`\r\n  margin-bottom: 24px;\r\n`\r\n\r\nconst ProfilePicture: React.FC = () => {\r\n  const { library } = useWeb3React()\r\n  const [isApproved, setIsApproved] = useState(false)\r\n  const [isApproving, setIsApproving] = useState(false)\r\n  const { selectedNft, actions } = useContext(ProfileCreationContext)\r\n\r\n  const { t } = useTranslation()\r\n  const { isLoading, nftsInWallet, tokenIds } = useGetCollectibles()\r\n  const { toastError } = useToast()\r\n\r\n  const handleApprove = async () => {\r\n    const contract = getErc721Contract(selectedNft.nftAddress, library.getSigner())\r\n    const tx = await contract.approve(getPancakeProfileAddress(), selectedNft.tokenId)\r\n    setIsApproving(true)\r\n    const receipt = await tx.wait()\r\n    if (receipt.status) {\r\n      setIsApproving(false)\r\n      setIsApproved(true)\r\n    } else {\r\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\r\n      setIsApproving(false)\r\n    }\r\n  }\r\n\r\n  if (!isLoading && nftsInWallet.length === 0) {\r\n    return (\r\n      <>\r\n        <Heading scale=\"xl\" mb=\"24px\">\r\n          {t('Oops!')}\r\n        </Heading>\r\n        <Text bold fontSize=\"20px\" mb=\"24px\">\r\n          {t('We couldn’t find any Pancake Collectibles in your wallet.')}\r\n        </Text>\r\n        <Text as=\"p\">\r\n          {t(\r\n            'You need a Pancake Collectible to finish setting up your profile. If you sold or transferred your starter collectible to another wallet, you’ll need to get it back or acquire a new one somehow. You can’t make a new starter with this wallet address.',\r\n          )}\r\n        </Text>\r\n      </>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Text fontSize=\"20px\" color=\"textSubtle\" bold>\r\n        {t('Step %num%', { num: 2 })}\r\n      </Text>\r\n      <Heading as=\"h3\" scale=\"xl\" mb=\"24px\">\r\n        {t('Set Profile Picture')}\r\n      </Heading>\r\n      <Card mb=\"24px\">\r\n        <CardBody>\r\n          <Heading as=\"h4\" scale=\"lg\" mb=\"8px\">\r\n            {t('Choose collectible')}\r\n          </Heading>\r\n          <Text as=\"p\" color=\"textSubtle\">\r\n            {t('Choose a profile picture from the eligible collectibles (NFT) in your wallet, shown below.')}\r\n          </Text>\r\n          <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\r\n            {t('Only approved Pancake Collectibles can be used.')}\r\n            <Link to=\"/collectibles\" style={{ marginLeft: '4px' }}>\r\n              {t('See the list >')}\r\n            </Link>\r\n          </Text>\r\n          <NftWrapper>\r\n            {isLoading ? (\r\n              <Skeleton height=\"80px\" mb=\"16px\" />\r\n            ) : (\r\n              nftsInWallet.map((walletNft) => {\r\n                const [firstTokenId] = tokenIds[walletNft.identifier]\r\n                const address = getAddressByType(walletNft.type)\r\n\r\n                return (\r\n                  <SelectionCard\r\n                    name=\"profilePicture\"\r\n                    key={walletNft.identifier}\r\n                    value={firstTokenId}\r\n                    image={`/images/nfts/${walletNft.images.md}`}\r\n                    isChecked={firstTokenId === selectedNft.tokenId}\r\n                    onChange={(value: string) => actions.setSelectedNft(parseInt(value, 10), address)}\r\n                  >\r\n                    <Text bold>{walletNft.name}</Text>\r\n                  </SelectionCard>\r\n                )\r\n              })\r\n            )}\r\n          </NftWrapper>\r\n          <Heading as=\"h4\" scale=\"lg\" mb=\"8px\">\r\n            {t('Allow collectible to be locked')}\r\n          </Heading>\r\n          <Text as=\"p\" color=\"textSubtle\" mb=\"16px\">\r\n            {t(\r\n              \"The collectible you've chosen will be locked in a smart contract while it’s being used as your profile picture. Don't worry - you'll be able to get it back at any time.\",\r\n            )}\r\n          </Text>\r\n          <Button\r\n            isLoading={isApproving}\r\n            disabled={isApproved || isApproving || selectedNft.tokenId === null}\r\n            onClick={handleApprove}\r\n            endIcon={isApproving ? <AutoRenewIcon spin color=\"currentColor\" /> : undefined}\r\n            id=\"approveStarterCollectible\"\r\n          >\r\n            {t('Enable')}\r\n          </Button>\r\n        </CardBody>\r\n      </Card>\r\n      <NextStepButton onClick={actions.nextStep} disabled={selectedNft.tokenId === null || !isApproved || isApproving}>\r\n        {t('Next Step')}\r\n      </NextStepButton>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProfilePicture\r\n","import React, { useMemo } from 'react'\r\nimport { Card, CardBody, CommunityIcon, Flex, Heading, Text } from '@pancakeswap/uikit'\r\nimport shuffle from 'lodash/shuffle'\r\nimport { useTeams } from 'state/teams/hooks'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport SelectionCard from '../components/SelectionCard'\r\nimport NextStepButton from '../components/NextStepButton'\r\nimport useProfileCreation from './contexts/hook'\r\n\r\nconst Team: React.FC = () => {\r\n  const { teamId: currentTeamId, actions } = useProfileCreation()\r\n  const { t } = useTranslation()\r\n  const { teams } = useTeams()\r\n  const handleTeamSelection = (value: string) => actions.setTeamId(parseInt(value, 10))\r\n  const teamValues = useMemo(() => shuffle(Object.values(teams)), [teams])\r\n\r\n  return (\r\n    <>\r\n      <Text fontSize=\"20px\" color=\"textSubtle\" bold>\r\n        {t('Step %num%', { num: 3 })}\r\n      </Text>\r\n      <Heading as=\"h3\" scale=\"xl\" mb=\"24px\">\r\n        {t('Join a Team')}\r\n      </Heading>\r\n      <Text as=\"p\" mb=\"24px\">\r\n        {t('It won’t be possible to undo the choice you make for the foreseeable future!')}\r\n      </Text>\r\n      <Card mb=\"24px\">\r\n        <CardBody>\r\n          <Heading as=\"h4\" scale=\"lg\" mb=\"8px\">\r\n            {t('Join a Team')}\r\n          </Heading>\r\n          <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\r\n            {t(\r\n              'There’s currently no big difference between teams, and no benefit of joining one team over another for now. So pick whichever one you like!',\r\n            )}\r\n          </Text>\r\n          {teamValues &&\r\n            teamValues.map((team) => {\r\n              return (\r\n                <SelectionCard\r\n                  key={team.name}\r\n                  name=\"teams-selection\"\r\n                  value={team.id}\r\n                  isChecked={currentTeamId === team.id}\r\n                  image={`/images/teams/${team.images.md}`}\r\n                  onChange={handleTeamSelection}\r\n                  disabled={!team.isJoinable}\r\n                >\r\n                  <Text bold>{team.name}</Text>\r\n                  <Flex>\r\n                    <CommunityIcon mr=\"8px\" />\r\n                    <Text>{team.users.toLocaleString()}</Text>\r\n                  </Flex>\r\n                </SelectionCard>\r\n              )\r\n            })}\r\n        </CardBody>\r\n      </Card>\r\n      <NextStepButton onClick={actions.nextStep} disabled={currentTeamId === null}>\r\n        {t('Next Step')}\r\n      </NextStepButton>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Team\r\n","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name compareAsc\n * @category Common Helpers\n * @summary Compare the two dates and return -1, 0 or 1.\n *\n * @description\n * Compare the two dates and return 1 if the first date is after the second,\n * -1 if the first date is before the second or 0 if dates are equal.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to compare\n * @param {Date|Number} dateRight - the second date to compare\n * @returns {Number} the result of the comparison\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Compare 11 February 1987 and 10 July 1989:\n * const result = compareAsc(new Date(1987, 1, 11), new Date(1989, 6, 10))\n * //=> -1\n *\n * @example\n * // Sort the array of dates:\n * const result = [\n *   new Date(1995, 6, 2),\n *   new Date(1987, 1, 11),\n *   new Date(1989, 6, 10)\n * ].sort(compareAsc)\n * //=> [\n * //   Wed Feb 11 1987 00:00:00,\n * //   Mon Jul 10 1989 00:00:00,\n * //   Sun Jul 02 1995 00:00:00\n * // ]\n */\n\nexport default function compareAsc(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var diff = dateLeft.getTime() - dateRight.getTime();\n\n  if (diff < 0) {\n    return -1;\n  } else if (diff > 0) {\n    return 1; // Return 0 if diff is 0; return NaN if diff is NaN\n  } else {\n    return diff;\n  }\n}","import toDate from \"../toDate/index.js\";\nimport endOfDay from \"../endOfDay/index.js\";\nimport endOfMonth from \"../endOfMonth/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isLastDayOfMonth\n * @category Month Helpers\n * @summary Is the given date the last day of a month?\n *\n * @description\n * Is the given date the last day of a month?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is the last day of a month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Is 28 February 2014 the last day of a month?\n * var result = isLastDayOfMonth(new Date(2014, 1, 28))\n * //=> true\n */\n\nexport default function isLastDayOfMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  return endOfDay(date).getTime() === endOfMonth(date).getTime();\n}","import toDate from \"../toDate/index.js\";\nimport differenceInCalendarMonths from \"../differenceInCalendarMonths/index.js\";\nimport compareAsc from \"../compareAsc/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport isLastDayOfMonth from \"../isLastDayOfMonth/index.js\";\n/**\n * @name differenceInMonths\n * @category Month Helpers\n * @summary Get the number of full months between the given dates.\n *\n * @description\n * Get the number of full months between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of full months\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many full months are between 31 January 2014 and 1 September 2014?\n * var result = differenceInMonths(new Date(2014, 8, 1), new Date(2014, 0, 31))\n * //=> 7\n */\n\nexport default function differenceInMonths(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var sign = compareAsc(dateLeft, dateRight);\n  var difference = Math.abs(differenceInCalendarMonths(dateLeft, dateRight));\n  var result; // Check for the difference of less than month\n\n  if (difference < 1) {\n    result = 0;\n  } else {\n    if (dateLeft.getMonth() === 1 && dateLeft.getDate() > 27) {\n      // This will check if the date is end of Feb and assign a higher end of month date\n      // to compare it with Jan\n      dateLeft.setDate(30);\n    }\n\n    dateLeft.setMonth(dateLeft.getMonth() - sign * difference); // Math.abs(diff in full months - diff in calendar months) === 1 if last calendar month is not full\n    // If so, result must be decreased by 1 in absolute value\n\n    var isLastMonthNotFull = compareAsc(dateLeft, dateRight) === -sign; // Check for cases of one full calendar month\n\n    if (isLastDayOfMonth(toDate(dirtyDateLeft)) && difference === 1 && compareAsc(dirtyDateLeft, dateRight) === 1) {\n      isLastMonthNotFull = false;\n    }\n\n    result = sign * (difference - Number(isLastMonthNotFull));\n  } // Prevent negative zero\n\n\n  return result === 0 ? 0 : result;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name differenceInMilliseconds\n * @category Millisecond Helpers\n * @summary Get the number of milliseconds between the given dates.\n *\n * @description\n * Get the number of milliseconds between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of milliseconds\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many milliseconds are between\n * // 2 July 2014 12:30:20.600 and 2 July 2014 12:30:21.700?\n * const result = differenceInMilliseconds(\n *   new Date(2014, 6, 2, 12, 30, 21, 700),\n *   new Date(2014, 6, 2, 12, 30, 20, 600)\n * )\n * //=> 1100\n */\n\nexport default function differenceInMilliseconds(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  return dateLeft.getTime() - dateRight.getTime();\n}","import differenceInMilliseconds from \"../differenceInMilliseconds/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name differenceInSeconds\n * @category Second Helpers\n * @summary Get the number of seconds between the given dates.\n *\n * @description\n * Get the number of seconds between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of seconds\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many seconds are between\n * // 2 July 2014 12:30:07.999 and 2 July 2014 12:30:20.000?\n * const result = differenceInSeconds(\n *   new Date(2014, 6, 2, 12, 30, 20, 0),\n *   new Date(2014, 6, 2, 12, 30, 7, 999)\n * )\n * //=> 12\n */\n\nexport default function differenceInSeconds(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var diff = differenceInMilliseconds(dirtyDateLeft, dirtyDateRight) / 1000;\n  return diff > 0 ? Math.floor(diff) : Math.ceil(diff);\n}","import assign from \"../assign/index.js\";\nexport default function cloneObject(dirtyObject) {\n  return assign({}, dirtyObject);\n}","import compareAsc from \"../compareAsc/index.js\";\nimport differenceInMonths from \"../differenceInMonths/index.js\";\nimport differenceInSeconds from \"../differenceInSeconds/index.js\";\nimport defaultLocale from \"../locale/en-US/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport cloneObject from \"../_lib/cloneObject/index.js\";\nimport getTimezoneOffsetInMilliseconds from \"../_lib/getTimezoneOffsetInMilliseconds/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nvar MINUTES_IN_DAY = 1440;\nvar MINUTES_IN_ALMOST_TWO_DAYS = 2520;\nvar MINUTES_IN_MONTH = 43200;\nvar MINUTES_IN_TWO_MONTHS = 86400;\n/**\n * @name formatDistance\n * @category Common Helpers\n * @summary Return the distance between the given dates in words.\n *\n * @description\n * Return the distance between the given dates in words.\n *\n * | Distance between dates                                            | Result              |\n * |-------------------------------------------------------------------|---------------------|\n * | 0 ... 30 secs                                                     | less than a minute  |\n * | 30 secs ... 1 min 30 secs                                         | 1 minute            |\n * | 1 min 30 secs ... 44 mins 30 secs                                 | [2..44] minutes     |\n * | 44 mins ... 30 secs ... 89 mins 30 secs                           | about 1 hour        |\n * | 89 mins 30 secs ... 23 hrs 59 mins 30 secs                        | about [2..24] hours |\n * | 23 hrs 59 mins 30 secs ... 41 hrs 59 mins 30 secs                 | 1 day               |\n * | 41 hrs 59 mins 30 secs ... 29 days 23 hrs 59 mins 30 secs         | [2..30] days        |\n * | 29 days 23 hrs 59 mins 30 secs ... 44 days 23 hrs 59 mins 30 secs | about 1 month       |\n * | 44 days 23 hrs 59 mins 30 secs ... 59 days 23 hrs 59 mins 30 secs | about 2 months      |\n * | 59 days 23 hrs 59 mins 30 secs ... 1 yr                           | [2..12] months      |\n * | 1 yr ... 1 yr 3 months                                            | about 1 year        |\n * | 1 yr 3 months ... 1 yr 9 month s                                  | over 1 year         |\n * | 1 yr 9 months ... 2 yrs                                           | almost 2 years      |\n * | N yrs ... N yrs 3 months                                          | about N years       |\n * | N yrs 3 months ... N yrs 9 months                                 | over N years        |\n * | N yrs 9 months ... N+1 yrs                                        | almost N+1 years    |\n *\n * With `options.includeSeconds == true`:\n * | Distance between dates | Result               |\n * |------------------------|----------------------|\n * | 0 secs ... 5 secs      | less than 5 seconds  |\n * | 5 secs ... 10 secs     | less than 10 seconds |\n * | 10 secs ... 20 secs    | less than 20 seconds |\n * | 20 secs ... 40 secs    | half a minute        |\n * | 40 secs ... 60 secs    | less than a minute   |\n * | 60 secs ... 90 secs    | 1 minute             |\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `distanceInWords ` to `formatDistance`\n *   to make its name consistent with `format` and `formatRelative`.\n *\n * - The order of arguments is swapped to make the function\n *   consistent with `differenceIn...` functions.\n *\n *   ```javascript\n *   // Before v2.0.0\n *\n *   distanceInWords(\n *     new Date(1986, 3, 4, 10, 32, 0),\n *     new Date(1986, 3, 4, 11, 32, 0),\n *     { addSuffix: true }\n *   ) //=> 'in about 1 hour'\n *\n *   // v2.0.0 onward\n *\n *   formatDistance(\n *     new Date(1986, 3, 4, 11, 32, 0),\n *     new Date(1986, 3, 4, 10, 32, 0),\n *     { addSuffix: true }\n *   ) //=> 'in about 1 hour'\n *   ```\n *\n * @param {Date|Number} date - the date\n * @param {Date|Number} baseDate - the date to compare with\n * @param {Object} [options] - an object with options.\n * @param {Boolean} [options.includeSeconds=false] - distances less than a minute are more detailed\n * @param {Boolean} [options.addSuffix=false] - result indicates if the second date is earlier or later than the first\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @returns {String} the distance in words\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `baseDate` must not be Invalid Date\n * @throws {RangeError} `options.locale` must contain `formatDistance` property\n *\n * @example\n * // What is the distance between 2 July 2014 and 1 January 2015?\n * const result = formatDistance(new Date(2014, 6, 2), new Date(2015, 0, 1))\n * //=> '6 months'\n *\n * @example\n * // What is the distance between 1 January 2015 00:00:15\n * // and 1 January 2015 00:00:00, including seconds?\n * const result = formatDistance(\n *   new Date(2015, 0, 1, 0, 0, 15),\n *   new Date(2015, 0, 1, 0, 0, 0),\n *   { includeSeconds: true }\n * )\n * //=> 'less than 20 seconds'\n *\n * @example\n * // What is the distance from 1 January 2016\n * // to 1 January 2015, with a suffix?\n * const result = formatDistance(new Date(2015, 0, 1), new Date(2016, 0, 1), {\n *   addSuffix: true\n * })\n * //=> 'about 1 year ago'\n *\n * @example\n * // What is the distance between 1 August 2016 and 1 January 2015 in Esperanto?\n * import { eoLocale } from 'date-fns/locale/eo'\n * const result = formatDistance(new Date(2016, 7, 1), new Date(2015, 0, 1), {\n *   locale: eoLocale\n * })\n * //=> 'pli ol 1 jaro'\n */\n\nexport default function formatDistance(dirtyDate, dirtyBaseDate) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  requiredArgs(2, arguments);\n  var locale = options.locale || defaultLocale;\n\n  if (!locale.formatDistance) {\n    throw new RangeError('locale must contain formatDistance property');\n  }\n\n  var comparison = compareAsc(dirtyDate, dirtyBaseDate);\n\n  if (isNaN(comparison)) {\n    throw new RangeError('Invalid time value');\n  }\n\n  var localizeOptions = cloneObject(options);\n  localizeOptions.addSuffix = Boolean(options.addSuffix);\n  localizeOptions.comparison = comparison;\n  var dateLeft;\n  var dateRight;\n\n  if (comparison > 0) {\n    dateLeft = toDate(dirtyBaseDate);\n    dateRight = toDate(dirtyDate);\n  } else {\n    dateLeft = toDate(dirtyDate);\n    dateRight = toDate(dirtyBaseDate);\n  }\n\n  var seconds = differenceInSeconds(dateRight, dateLeft);\n  var offsetInSeconds = (getTimezoneOffsetInMilliseconds(dateRight) - getTimezoneOffsetInMilliseconds(dateLeft)) / 1000;\n  var minutes = Math.round((seconds - offsetInSeconds) / 60);\n  var months; // 0 up to 2 mins\n\n  if (minutes < 2) {\n    if (options.includeSeconds) {\n      if (seconds < 5) {\n        return locale.formatDistance('lessThanXSeconds', 5, localizeOptions);\n      } else if (seconds < 10) {\n        return locale.formatDistance('lessThanXSeconds', 10, localizeOptions);\n      } else if (seconds < 20) {\n        return locale.formatDistance('lessThanXSeconds', 20, localizeOptions);\n      } else if (seconds < 40) {\n        return locale.formatDistance('halfAMinute', null, localizeOptions);\n      } else if (seconds < 60) {\n        return locale.formatDistance('lessThanXMinutes', 1, localizeOptions);\n      } else {\n        return locale.formatDistance('xMinutes', 1, localizeOptions);\n      }\n    } else {\n      if (minutes === 0) {\n        return locale.formatDistance('lessThanXMinutes', 1, localizeOptions);\n      } else {\n        return locale.formatDistance('xMinutes', minutes, localizeOptions);\n      }\n    } // 2 mins up to 0.75 hrs\n\n  } else if (minutes < 45) {\n    return locale.formatDistance('xMinutes', minutes, localizeOptions); // 0.75 hrs up to 1.5 hrs\n  } else if (minutes < 90) {\n    return locale.formatDistance('aboutXHours', 1, localizeOptions); // 1.5 hrs up to 24 hrs\n  } else if (minutes < MINUTES_IN_DAY) {\n    var hours = Math.round(minutes / 60);\n    return locale.formatDistance('aboutXHours', hours, localizeOptions); // 1 day up to 1.75 days\n  } else if (minutes < MINUTES_IN_ALMOST_TWO_DAYS) {\n    return locale.formatDistance('xDays', 1, localizeOptions); // 1.75 days up to 30 days\n  } else if (minutes < MINUTES_IN_MONTH) {\n    var days = Math.round(minutes / MINUTES_IN_DAY);\n    return locale.formatDistance('xDays', days, localizeOptions); // 1 month up to 2 months\n  } else if (minutes < MINUTES_IN_TWO_MONTHS) {\n    months = Math.round(minutes / MINUTES_IN_MONTH);\n    return locale.formatDistance('aboutXMonths', months, localizeOptions);\n  }\n\n  months = differenceInMonths(dateRight, dateLeft); // 2 months up to 12 months\n\n  if (months < 12) {\n    var nearestMonth = Math.round(minutes / MINUTES_IN_MONTH);\n    return locale.formatDistance('xMonths', nearestMonth, localizeOptions); // 1 year up to max Date\n  } else {\n    var monthsSinceStartOfYear = months % 12;\n    var years = Math.floor(months / 12); // N years up to 1 years 3 months\n\n    if (monthsSinceStartOfYear < 3) {\n      return locale.formatDistance('aboutXYears', years, localizeOptions); // N years 3 months up to N years 9 months\n    } else if (monthsSinceStartOfYear < 9) {\n      return locale.formatDistance('overXYears', years, localizeOptions); // N years 9 months up to N year 12 months\n    } else {\n      return locale.formatDistance('almostXYears', years + 1, localizeOptions);\n    }\n  }\n}","import React from 'react'\r\nimport { Modal, Flex, Text } from '@pancakeswap/uikit'\r\nimport { useAppDispatch } from 'state'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useCake, useProfile } from 'hooks/useContract'\r\nimport useApproveConfirmTransaction from 'hooks/useApproveConfirmTransaction'\r\nimport { fetchProfile } from 'state/profile'\r\nimport useToast from 'hooks/useToast'\r\nimport { REGISTER_COST } from '../ProfileCreation/config'\r\nimport ApproveConfirmButtons from './ApproveConfirmButtons'\r\nimport { State } from '../ProfileCreation/contexts/types'\r\n\r\ninterface Props {\r\n  userName: string\r\n  selectedNft: State['selectedNft']\r\n  account: string\r\n  teamId: number\r\n  minimumCakeRequired: BigNumber\r\n  allowance: BigNumber\r\n  onDismiss?: () => void\r\n}\r\n\r\nconst ConfirmProfileCreationModal: React.FC<Props> = ({\r\n  account,\r\n  teamId,\r\n  selectedNft,\r\n  minimumCakeRequired,\r\n  allowance,\r\n  onDismiss,\r\n}) => {\r\n  const { t } = useTranslation()\r\n  const profileContract = useProfile()\r\n  const dispatch = useAppDispatch()\r\n  const { toastSuccess } = useToast()\r\n  const cakeContract = useCake()\r\n\r\n  const { isApproving, isApproved, isConfirmed, isConfirming, handleApprove, handleConfirm } =\r\n    useApproveConfirmTransaction({\r\n      onRequiresApproval: async () => {\r\n        try {\r\n          const response = await cakeContract.allowance(account, profileContract.address)\r\n          const currentAllowance = new BigNumber(response.toString())\r\n          return currentAllowance.gte(minimumCakeRequired)\r\n        } catch (error) {\r\n          return false\r\n        }\r\n      },\r\n      onApprove: () => {\r\n        return cakeContract.approve(profileContract.address, allowance.toJSON())\r\n      },\r\n      onConfirm: () => {\r\n        return profileContract.createProfile(teamId, selectedNft.nftAddress, selectedNft.tokenId)\r\n      },\r\n      onSuccess: async () => {\r\n        await dispatch(fetchProfile(account))\r\n        onDismiss()\r\n        toastSuccess(t('Profile created!'))\r\n      },\r\n    })\r\n\r\n  return (\r\n    <Modal title={t('Complete Profile')} onDismiss={onDismiss}>\r\n      <Text color=\"textSubtle\" mb=\"8px\">\r\n        {t('Submitting NFT to contract and confirming User Name and Team.')}\r\n      </Text>\r\n      <Flex justifyContent=\"space-between\" mb=\"16px\">\r\n        <Text>{t('Cost')}</Text>\r\n        <Text>{t('%num% CAKE', { num: REGISTER_COST })}</Text>\r\n      </Flex>\r\n      <ApproveConfirmButtons\r\n        isApproveDisabled={isConfirmed || isConfirming || isApproved}\r\n        isApproving={isApproving}\r\n        isConfirmDisabled={!isApproved || isConfirmed}\r\n        isConfirming={isConfirming}\r\n        onApprove={handleApprove}\r\n        onConfirm={handleConfirm}\r\n      />\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default ConfirmProfileCreationModal\r\n","import React, { ChangeEvent, useEffect, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport BigNumber from 'bignumber.js'\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Heading,\r\n  Text,\r\n  Input as UIKitInput,\r\n  Button,\r\n  AutoRenewIcon,\r\n  CheckmarkIcon,\r\n  Flex,\r\n  WarningIcon,\r\n  useModal,\r\n  Skeleton,\r\n  Checkbox,\r\n} from '@pancakeswap/uikit'\r\nimport { parseISO, formatDistance } from 'date-fns'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport useToast from 'hooks/useToast'\r\nimport { signMessage } from 'utils/web3React'\r\nimport useWeb3Provider from 'hooks/useActiveWeb3React'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useHasCakeBalance from 'hooks/useHasCakeBalance'\r\nimport { DEFAULT_TOKEN_DECIMAL } from 'config'\r\nimport debounce from 'lodash/debounce'\r\nimport ConfirmProfileCreationModal from '../components/ConfirmProfileCreationModal'\r\nimport useProfileCreation from './contexts/hook'\r\nimport { USERNAME_MIN_LENGTH, USERNAME_MAX_LENGTH, REGISTER_COST } from './config'\r\n\r\nenum ExistingUserState {\r\n  IDLE = 'idle', // initial state\r\n  CREATED = 'created', // username has already been created\r\n  NEW = 'new', // username has not been created\r\n}\r\n\r\nconst profileApiUrl = process.env.REACT_APP_API_PROFILE\r\nconst minimumCakeToRegister = new BigNumber(REGISTER_COST).multipliedBy(DEFAULT_TOKEN_DECIMAL)\r\n\r\nconst InputWrap = styled.div`\r\n  position: relative;\r\n  max-width: 240px;\r\n`\r\n\r\nconst Input = styled(UIKitInput)`\r\n  padding-right: 40px;\r\n`\r\n\r\nconst Indicator = styled(Flex)`\r\n  align-items: center;\r\n  height: 24px;\r\n  justify-content: center;\r\n  margin-top: -12px;\r\n  position: absolute;\r\n  right: 16px;\r\n  top: 50%;\r\n  width: 24px;\r\n`\r\n\r\nconst UserName: React.FC = () => {\r\n  const [isAcknowledged, setIsAcknowledged] = useState(false)\r\n  const { teamId, selectedNft, userName, actions, minimumCakeRequired, allowance } = useProfileCreation()\r\n  const { t } = useTranslation()\r\n  const { account } = useWeb3React()\r\n  const { toastError } = useToast()\r\n  const { library } = useWeb3Provider()\r\n  const [existingUserState, setExistingUserState] = useState<ExistingUserState>(ExistingUserState.IDLE)\r\n  const [isValid, setIsValid] = useState(false)\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [message, setMessage] = useState('')\r\n  const hasMinimumCakeRequired = useHasCakeBalance(minimumCakeToRegister)\r\n  const [onPresentConfirmProfileCreation] = useModal(\r\n    <ConfirmProfileCreationModal\r\n      userName={userName}\r\n      selectedNft={selectedNft}\r\n      account={account}\r\n      teamId={teamId}\r\n      minimumCakeRequired={minimumCakeRequired}\r\n      allowance={allowance}\r\n    />,\r\n    false,\r\n  )\r\n  const isUserCreated = existingUserState === ExistingUserState.CREATED\r\n\r\n  const checkUsernameValidity = debounce(async (value: string) => {\r\n    try {\r\n      setIsLoading(true)\r\n      const res = await fetch(`${profileApiUrl}/api/users/valid/${value}`)\r\n\r\n      if (res.ok) {\r\n        setIsValid(true)\r\n        setMessage('')\r\n      } else {\r\n        const data = await res.json()\r\n        setIsValid(false)\r\n        setMessage(data?.error?.message)\r\n      }\r\n    } finally {\r\n      setIsLoading(false)\r\n    }\r\n  }, 200)\r\n\r\n  const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n    const { value } = event.target\r\n    actions.setUserName(value)\r\n    checkUsernameValidity(value)\r\n  }\r\n\r\n  const handleConfirm = async () => {\r\n    try {\r\n      setIsLoading(true)\r\n\r\n      const signature = await signMessage(library, account, userName)\r\n      const response = await fetch(`${profileApiUrl}/api/users/register`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          address: account,\r\n          username: userName,\r\n          signature,\r\n        }),\r\n      })\r\n\r\n      if (response.ok) {\r\n        setExistingUserState(ExistingUserState.CREATED)\r\n      } else {\r\n        const data = await response.json()\r\n        toastError(t('Error'), data?.error?.message)\r\n      }\r\n    } catch (error) {\r\n      toastError(error?.message ? error.message : JSON.stringify(error))\r\n    } finally {\r\n      setIsLoading(false)\r\n    }\r\n  }\r\n\r\n  const handleAcknowledge = () => setIsAcknowledged(!isAcknowledged)\r\n\r\n  // Perform an initial check to see if the wallet has already created a username\r\n  useEffect(() => {\r\n    const fetchUser = async () => {\r\n      try {\r\n        const response = await fetch(`${profileApiUrl}/api/users/${account}`)\r\n        const data = await response.json()\r\n\r\n        if (response.ok) {\r\n          const dateCreated = formatDistance(parseISO(data.created_at), new Date())\r\n          setMessage(t('Created %dateCreated% ago', { dateCreated }))\r\n\r\n          actions.setUserName(data.username)\r\n          setExistingUserState(ExistingUserState.CREATED)\r\n          setIsValid(true)\r\n        } else {\r\n          setExistingUserState(ExistingUserState.NEW)\r\n        }\r\n      } catch (error) {\r\n        toastError(t('Error'), t('Unable to verify username'))\r\n      }\r\n    }\r\n\r\n    if (account) {\r\n      fetchUser()\r\n    }\r\n  }, [account, setExistingUserState, setIsValid, setMessage, actions, toastError, t])\r\n\r\n  return (\r\n    <>\r\n      <Text fontSize=\"20px\" color=\"textSubtle\" bold>\r\n        {t('Step %num%', { num: 4 })}\r\n      </Text>\r\n      <Heading as=\"h3\" scale=\"xl\" mb=\"24px\">\r\n        {t('Set Your Name')}\r\n      </Heading>\r\n      <Text as=\"p\" mb=\"24px\">\r\n        {t('This name will be shown in team leaderboards and search results as long as your profile is active.')}\r\n      </Text>\r\n      <Card mb=\"24px\">\r\n        <CardBody>\r\n          <Heading as=\"h4\" scale=\"lg\" mb=\"8px\">\r\n            {t('Set Your Name')}\r\n          </Heading>\r\n          <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\r\n            {t(\r\n              'Your name must be at least 3 and at most 15 standard letters and numbers long. You can’t change this once you click Confirm.',\r\n            )}\r\n          </Text>\r\n          {existingUserState === ExistingUserState.IDLE ? (\r\n            <Skeleton height=\"40px\" width=\"240px\" />\r\n          ) : (\r\n            <InputWrap>\r\n              <Input\r\n                onChange={handleChange}\r\n                isWarning={userName && !isValid}\r\n                isSuccess={userName && isValid}\r\n                minLength={USERNAME_MIN_LENGTH}\r\n                maxLength={USERNAME_MAX_LENGTH}\r\n                disabled={isUserCreated}\r\n                placeholder={t('Enter your name...')}\r\n                value={userName}\r\n              />\r\n              <Indicator>\r\n                {isLoading && <AutoRenewIcon spin />}\r\n                {!isLoading && isValid && userName && <CheckmarkIcon color=\"success\" />}\r\n                {!isLoading && !isValid && userName && <WarningIcon color=\"failure\" />}\r\n              </Indicator>\r\n            </InputWrap>\r\n          )}\r\n          <Text color=\"textSubtle\" fontSize=\"14px\" py=\"4px\" mb=\"16px\" style={{ minHeight: '30px' }}>\r\n            {message}\r\n          </Text>\r\n          <Text as=\"p\" color=\"failure\" mb=\"8px\">\r\n            {t(\r\n              \"Only reuse a name from other social media if you're OK with people viewing your wallet. You can't change your name once you click Confirm.\",\r\n            )}\r\n          </Text>\r\n          <label htmlFor=\"checkbox\" style={{ display: 'block', cursor: 'pointer', marginBottom: '24px' }}>\r\n            <Flex alignItems=\"center\">\r\n              <div style={{ flex: 'none' }}>\r\n                <Checkbox id=\"checkbox\" scale=\"sm\" checked={isAcknowledged} onChange={handleAcknowledge} />\r\n              </div>\r\n              <Text ml=\"8px\">{t('I understand that people can view my wallet if they know my username')}</Text>\r\n            </Flex>\r\n          </label>\r\n          <Button onClick={handleConfirm} disabled={!isValid || isUserCreated || isLoading || !isAcknowledged}>\r\n            {t('Confirm')}\r\n          </Button>\r\n        </CardBody>\r\n      </Card>\r\n      <Button\r\n        onClick={onPresentConfirmProfileCreation}\r\n        disabled={!isValid || !isUserCreated}\r\n        id=\"completeProfileCreation\"\r\n      >\r\n        {t('Complete Profile')}\r\n      </Button>\r\n      {!hasMinimumCakeRequired && (\r\n        <Text color=\"failure\" mt=\"16px\">\r\n          {t('A minimum of %num% CAKE is required', { num: REGISTER_COST })}\r\n        </Text>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default UserName\r\n","import React, { useContext } from 'react'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport NoWalletConnected from '../components/WalletNotConnected'\r\nimport { ProfileCreationContext } from './contexts/ProfileCreationProvider'\r\nimport Mint from './Mint'\r\nimport ProfilePicture from './ProfilePicture'\r\nimport TeamSelection from './TeamSelection'\r\nimport UserName from './UserName'\r\n\r\nconst Steps = () => {\r\n  const { t } = useTranslation()\r\n  const { isInitialized, currentStep } = useContext(ProfileCreationContext)\r\n  const { account } = useWeb3React()\r\n\r\n  if (!account) {\r\n    return <NoWalletConnected />\r\n  }\r\n\r\n  if (!isInitialized) {\r\n    return <div>{t('Loading...')}</div>\r\n  }\r\n\r\n  if (currentStep === 0) {\r\n    return <Mint />\r\n  }\r\n\r\n  if (currentStep === 1) {\r\n    return <ProfilePicture />\r\n  }\r\n\r\n  if (currentStep === 2) {\r\n    return <TeamSelection />\r\n  }\r\n\r\n  if (currentStep === 3) {\r\n    return <UserName />\r\n  }\r\n\r\n  return null\r\n}\r\n\r\nexport default Steps\r\n","import React from 'react'\r\nimport Page from 'components/Layout/Page'\r\nimport Header from './Header'\r\nimport ProfileCreationProvider from './contexts/ProfileCreationProvider'\r\nimport Steps from './Steps'\r\n\r\nconst ProfileCreation = () => (\r\n  <ProfileCreationProvider>\r\n    <Page>\r\n      <Header />\r\n      <Steps />\r\n    </Page>\r\n  </ProfileCreationProvider>\r\n)\r\n\r\nexport default ProfileCreation\r\n","import React, { useCallback, useEffect, useState } from 'react'\r\nimport { Modal, Text, InjectedModalProps, Button, AutoRenewIcon } from '@pancakeswap/uikit'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport useToast from 'hooks/useToast'\r\nimport { useClaimRefundContract } from 'hooks/useContract'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { getClaimRefundContract } from 'utils/contractHelpers'\r\n\r\ninterface ClaimGiftProps extends InjectedModalProps {\r\n  onSuccess: () => void\r\n}\r\n\r\nexport const useCanClaim = () => {\r\n  const [canClaim, setCanClaim] = useState(false)\r\n  const [refresh, setRefresh] = useState(1)\r\n  const { account } = useWeb3React()\r\n\r\n  const checkClaimStatus = useCallback(() => {\r\n    setRefresh((prevRefresh) => prevRefresh + 1)\r\n  }, [setRefresh])\r\n\r\n  useEffect(() => {\r\n    const fetchClaimStatus = async () => {\r\n      const claimRefundContract = getClaimRefundContract()\r\n      const walletCanClaim = await claimRefundContract.canClaim(account)\r\n      setCanClaim(walletCanClaim)\r\n    }\r\n\r\n    if (account) {\r\n      fetchClaimStatus()\r\n    }\r\n  }, [account, refresh, setCanClaim])\r\n\r\n  return { canClaim, checkClaimStatus }\r\n}\r\n\r\nconst ClaimGift: React.FC<ClaimGiftProps> = ({ onSuccess, onDismiss }) => {\r\n  const [isConfirming, setIsConfirming] = useState(false)\r\n  const { t } = useTranslation()\r\n  const { canClaim } = useCanClaim()\r\n  const claimRefundContract = useClaimRefundContract()\r\n  const { toastSuccess, toastError } = useToast()\r\n\r\n  const handleClick = async () => {\r\n    const tx = await claimRefundContract.getCakeBack()\r\n    setIsConfirming(true)\r\n    const receipt = await tx.wait()\r\n    if (receipt.status) {\r\n      toastSuccess(t('Success!'))\r\n      onSuccess()\r\n      onDismiss()\r\n    } else {\r\n      setIsConfirming(false)\r\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Modal title={t('Claim your Gift!')} onDismiss={onDismiss}>\r\n      <div style={{ maxWidth: '640px' }}>\r\n        <Text as=\"p\">{t('Thank you for being a day-one user of Pancake Profiles!')}</Text>\r\n        <Text as=\"p\" mb=\"8px\">\r\n          {t(\r\n            \"If you haven't already noticed, we made a mistake and the starter bunny you chose got mixed up and changed into another bunny. Oops!\",\r\n          )}\r\n        </Text>\r\n        <Text as=\"p\">{t('To make it up to you, we’ll refund you the full 4 CAKE it cost to make your bunny.')}</Text>\r\n        <Text as=\"p\" mb=\"8px\">\r\n          {t('We’re also preparing an all-new collectible for you to claim (for free!) in the near future.')}\r\n        </Text>\r\n        <Text as=\"p\" mb=\"24px\">\r\n          {t(\r\n            'Once you claim the refund, you can make another account with another wallet, mint a new bunny, and send it to your main account via the NFT page.',\r\n          )}\r\n        </Text>\r\n        <Button\r\n          endIcon={isConfirming ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\r\n          isLoading={isConfirming}\r\n          onClick={handleClick}\r\n          disabled={!canClaim}\r\n        >\r\n          {t('Claim Your CAKE')}\r\n        </Button>\r\n      </div>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default ClaimGift\r\n","import { useReducer } from 'react'\r\n\r\nexport enum Views {\r\n  START = 'start',\r\n  CHANGE = 'change',\r\n  REMOVE = 'remove',\r\n  APPROVE = 'approve',\r\n}\r\n\r\nexport type Actions =\r\n  | {\r\n      type: 'set_view'\r\n      view: Views\r\n    }\r\n  | {\r\n      type: 'go_previous'\r\n    }\r\n\r\nexport interface State {\r\n  currentView: Views\r\n  previousView: Views | null\r\n}\r\n\r\nconst reducer = (state: State, action: Actions): State => {\r\n  switch (action.type) {\r\n    case 'set_view':\r\n      return {\r\n        ...state,\r\n        currentView: action.view,\r\n        previousView: state.currentView,\r\n      }\r\n    case 'go_previous':\r\n      return {\r\n        ...state,\r\n        currentView: state.previousView,\r\n        previousView: state.currentView,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport interface UseEditProfileResponse extends State {\r\n  goToStart: () => void\r\n  goToChange: () => void\r\n  goToApprove: () => void\r\n  goToRemove: () => void\r\n  goPrevious: () => void\r\n}\r\n\r\nconst useEditProfile = (): UseEditProfileResponse => {\r\n  const [state, dispatch] = useReducer(reducer, {\r\n    currentView: Views.START,\r\n    previousView: null,\r\n  })\r\n\r\n  const goToStart = () => dispatch({ type: 'set_view', view: Views.START })\r\n  const goToChange = () => dispatch({ type: 'set_view', view: Views.CHANGE })\r\n  const goToRemove = () => dispatch({ type: 'set_view', view: Views.REMOVE })\r\n  const goToApprove = () => dispatch({ type: 'set_view', view: Views.APPROVE })\r\n  const goPrevious = () => dispatch({ type: 'go_previous' })\r\n\r\n  return { ...state, goToStart, goToChange, goToRemove, goToApprove, goPrevious }\r\n}\r\n\r\nexport default useEditProfile\r\n","import { useEffect, useState } from 'react'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport BigNumber from 'bignumber.js'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\nimport { multicallv2 } from 'utils/multicall'\r\nimport profileABI from 'config/abi/pancakeProfile.json'\r\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\r\nimport useToast from 'hooks/useToast'\r\n\r\nconst useGetProfileCosts = () => {\r\n  const { t } = useTranslation()\r\n  const [costs, setCosts] = useState({\r\n    numberCakeToReactivate: BIG_ZERO,\r\n    numberCakeToRegister: BIG_ZERO,\r\n    numberCakeToUpdate: BIG_ZERO,\r\n  })\r\n  const { toastError } = useToast()\r\n\r\n  useEffect(() => {\r\n    const fetchCosts = async () => {\r\n      try {\r\n        const calls = ['numberCakeToReactivate', 'numberCakeToRegister', 'numberCakeToUpdate'].map((method) => ({\r\n          address: getPancakeProfileAddress(),\r\n          name: method,\r\n        }))\r\n        const [[numberCakeToReactivate], [numberCakeToRegister], [numberCakeToUpdate]] = await multicallv2(\r\n          profileABI,\r\n          calls,\r\n        )\r\n\r\n        setCosts({\r\n          numberCakeToReactivate: new BigNumber(numberCakeToReactivate.toString()),\r\n          numberCakeToRegister: new BigNumber(numberCakeToRegister.toString()),\r\n          numberCakeToUpdate: new BigNumber(numberCakeToUpdate.toString()),\r\n        })\r\n      } catch (error) {\r\n        toastError(t('Error'), t('Could not retrieve CAKE costs for profile'))\r\n      }\r\n    }\r\n\r\n    fetchCosts()\r\n  }, [setCosts, toastError, t])\r\n\r\n  return costs\r\n}\r\n\r\nexport default useGetProfileCosts\r\n","import React, { useEffect, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { Button, Flex, Text, InjectedModalProps } from '@pancakeswap/uikit'\r\nimport { getFullDisplayBalance } from 'utils/formatBalance'\r\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\r\nimport { useCake } from 'hooks/useContract'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useGetProfileCosts from 'views/Profile/hooks/useGetProfileCosts'\r\nimport useHasCakeBalance from 'hooks/useHasCakeBalance'\r\nimport { useProfile } from 'state/profile/hooks'\r\nimport { UseEditProfileResponse } from './reducer'\r\nimport ProfileAvatar from '../ProfileAvatar'\r\n\r\ninterface StartPageProps extends InjectedModalProps {\r\n  goToChange: UseEditProfileResponse['goToChange']\r\n  goToRemove: UseEditProfileResponse['goToRemove']\r\n  goToApprove: UseEditProfileResponse['goToApprove']\r\n}\r\n\r\nconst DangerOutline = styled(Button).attrs({ variant: 'secondary' })`\r\n  border-color: ${({ theme }) => theme.colors.failure};\r\n  color: ${({ theme }) => theme.colors.failure};\r\n  margin-bottom: 24px;\r\n\r\n  &:hover:not(:disabled):not(.button--disabled):not(:active) {\r\n    border-color: ${({ theme }) => theme.colors.failure};\r\n    opacity: 0.8;\r\n  }\r\n`\r\n\r\nconst AvatarWrapper = styled.div`\r\n  height: 64px;\r\n  width: 64px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    height: 128px;\r\n    width: 128px;\r\n  }\r\n`\r\n\r\nconst StartPage: React.FC<StartPageProps> = ({ goToApprove, goToChange, goToRemove, onDismiss }) => {\r\n  const [needsApproval, setNeedsApproval] = useState(null)\r\n  const { profile } = useProfile()\r\n  const { numberCakeToUpdate, numberCakeToReactivate } = useGetProfileCosts()\r\n  const minimumCakeRequired = profile.isActive ? numberCakeToUpdate : numberCakeToReactivate\r\n  const hasMinimumCakeRequired = useHasCakeBalance(minimumCakeRequired)\r\n  const { t } = useTranslation()\r\n  const { account } = useWeb3React()\r\n  const cakeContract = useCake()\r\n  const cost = profile.isActive ? numberCakeToUpdate : numberCakeToReactivate\r\n\r\n  /**\r\n   * Check if the wallet has the required CAKE allowance to change their profile pic or reactivate\r\n   * If they don't, we send them to the approval screen first\r\n   */\r\n  useEffect(() => {\r\n    const checkApprovalStatus = async () => {\r\n      const response = await cakeContract.allowance(account, getPancakeProfileAddress())\r\n      const currentAllowance = new BigNumber(response.toString())\r\n      setNeedsApproval(currentAllowance.lt(cost))\r\n    }\r\n\r\n    if (account) {\r\n      checkApprovalStatus()\r\n    }\r\n  }, [account, cost, setNeedsApproval, cakeContract])\r\n\r\n  if (!profile) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <Flex alignItems=\"center\" justifyContent=\"center\" flexDirection=\"column\">\r\n      <AvatarWrapper>\r\n        <ProfileAvatar profile={profile} />\r\n      </AvatarWrapper>\r\n      <Flex alignItems=\"center\" style={{ height: '48px' }} justifyContent=\"center\">\r\n        <Text as=\"p\" color=\"failure\">\r\n          {!hasMinimumCakeRequired &&\r\n            t('%minimum% CAKE required to change profile pic', { minimum: getFullDisplayBalance(minimumCakeRequired) })}\r\n        </Text>\r\n      </Flex>\r\n      {profile.isActive ? (\r\n        <>\r\n          <Button\r\n            width=\"100%\"\r\n            mb=\"8px\"\r\n            onClick={needsApproval === true ? goToApprove : goToChange}\r\n            disabled={!hasMinimumCakeRequired || needsApproval === null}\r\n          >\r\n            {t('Change Profile Pic')}\r\n          </Button>\r\n          <DangerOutline width=\"100%\" onClick={goToRemove}>\r\n            {t('Remove Profile Pic')}\r\n          </DangerOutline>\r\n        </>\r\n      ) : (\r\n        <Button\r\n          width=\"100%\"\r\n          mb=\"8px\"\r\n          onClick={needsApproval === true ? goToApprove : goToChange}\r\n          disabled={!hasMinimumCakeRequired || needsApproval === null}\r\n        >\r\n          {t('Reactivate Profile')}\r\n        </Button>\r\n      )}\r\n      <Button variant=\"text\" width=\"100%\" onClick={onDismiss}>\r\n        {t('Close Window')}\r\n      </Button>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default StartPage\r\n","import React, { useState } from 'react'\r\nimport { AutoRenewIcon, Button, Checkbox, Flex, InjectedModalProps, Text } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useGetProfileCosts from 'views/Profile/hooks/useGetProfileCosts'\r\nimport { useAppDispatch } from 'state'\r\nimport { useProfile } from 'state/profile/hooks'\r\nimport { fetchProfile } from 'state/profile'\r\nimport useToast from 'hooks/useToast'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { useProfile as useProfileContract } from 'hooks/useContract'\r\nimport { useWeb3React } from '@web3-react/core'\r\n\r\ntype PauseProfilePageProps = InjectedModalProps\r\n\r\nconst PauseProfilePage: React.FC<PauseProfilePageProps> = ({ onDismiss }) => {\r\n  const [isAcknowledged, setIsAcknowledged] = useState(false)\r\n  const [isConfirming, setIsConfirming] = useState(false)\r\n  const { profile } = useProfile()\r\n  const { numberCakeToReactivate } = useGetProfileCosts()\r\n  const { t } = useTranslation()\r\n  const pancakeProfileContract = useProfileContract()\r\n  const { account } = useWeb3React()\r\n  const { toastSuccess, toastError } = useToast()\r\n  const dispatch = useAppDispatch()\r\n\r\n  const handleChange = () => setIsAcknowledged(!isAcknowledged)\r\n\r\n  const handleDeactivateProfile = async () => {\r\n    const tx = await pancakeProfileContract.pauseProfile()\r\n    setIsConfirming(true)\r\n    const receipt = await tx.wait()\r\n    if (receipt.status) {\r\n      // Re-fetch profile\r\n      await dispatch(fetchProfile(account))\r\n      toastSuccess(t('Profile Paused!'))\r\n      onDismiss()\r\n    } else {\r\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\r\n      setIsConfirming(false)\r\n    }\r\n  }\r\n\r\n  if (!profile) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Text as=\"p\" color=\"failure\" mb=\"24px\">\r\n        {t('This will suspend your profile and send your Collectible back to your wallet')}\r\n      </Text>\r\n      <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\r\n        {t(\r\n          \"While your profile is suspended, you won't be able to earn points, but your achievements and points will stay associated with your profile\",\r\n        )}\r\n      </Text>\r\n      <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\r\n        {t('Cost to reactivate in the future: %cost% CAKE', { cost: getBalanceNumber(numberCakeToReactivate) })}\r\n      </Text>\r\n      <label htmlFor=\"acknowledgement\" style={{ cursor: 'pointer', display: 'block', marginBottom: '24px' }}>\r\n        <Flex alignItems=\"center\">\r\n          <Checkbox id=\"acknowledgement\" checked={isAcknowledged} onChange={handleChange} scale=\"sm\" />\r\n          <Text ml=\"8px\">{t('I understand')}</Text>\r\n        </Flex>\r\n      </label>\r\n      <Button\r\n        width=\"100%\"\r\n        isLoading={isConfirming}\r\n        endIcon={isConfirming ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\r\n        disabled={!isAcknowledged || isConfirming}\r\n        onClick={handleDeactivateProfile}\r\n        mb=\"8px\"\r\n      >\r\n        {t('Confirm')}\r\n      </Button>\r\n      <Button variant=\"text\" width=\"100%\" onClick={onDismiss}>\r\n        {t('Close Window')}\r\n      </Button>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PauseProfilePage\r\n","import React, { useState } from 'react'\r\nimport { Button, InjectedModalProps, Skeleton, Text } from '@pancakeswap/uikit'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useAppDispatch } from 'state'\r\nimport { useGetCollectibles } from 'state/hooks'\r\nimport { useProfile } from 'state/profile/hooks'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useToast from 'hooks/useToast'\r\nimport { fetchProfile } from 'state/profile'\r\nimport { getAddressByType } from 'utils/collectibles'\r\nimport useApproveConfirmTransaction from 'hooks/useApproveConfirmTransaction'\r\nimport { getErc721Contract } from 'utils/contractHelpers'\r\nimport { useProfile as useProfileContract } from 'hooks/useContract'\r\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\r\nimport SelectionCard from '../SelectionCard'\r\nimport ApproveConfirmButtons from '../ApproveConfirmButtons'\r\n\r\ntype ChangeProfilePicPageProps = InjectedModalProps\r\n\r\nconst ChangeProfilePicPage: React.FC<ChangeProfilePicPageProps> = ({ onDismiss }) => {\r\n  const [selectedNft, setSelectedNft] = useState({\r\n    tokenId: null,\r\n    nftAddress: null,\r\n  })\r\n  const { t } = useTranslation()\r\n  const { isLoading, tokenIds, nftsInWallet } = useGetCollectibles()\r\n  const dispatch = useAppDispatch()\r\n  const { profile } = useProfile()\r\n  const profileContract = useProfileContract()\r\n  const { account, library } = useWeb3React()\r\n  const { toastSuccess } = useToast()\r\n  const { isApproving, isApproved, isConfirmed, isConfirming, handleApprove, handleConfirm } =\r\n    useApproveConfirmTransaction({\r\n      onApprove: () => {\r\n        const contract = getErc721Contract(selectedNft.nftAddress, library.getSigner())\r\n        return contract.approve(getPancakeProfileAddress(), selectedNft.tokenId)\r\n      },\r\n      onConfirm: () => {\r\n        if (!profile.isActive) {\r\n          return profileContract.reactivateProfile(selectedNft.nftAddress, selectedNft.tokenId)\r\n        }\r\n\r\n        return profileContract.updateProfile(selectedNft.nftAddress, selectedNft.tokenId)\r\n      },\r\n      onSuccess: async () => {\r\n        // Re-fetch profile\r\n        await dispatch(fetchProfile(account))\r\n        toastSuccess(t('Profile Updated!'))\r\n\r\n        onDismiss()\r\n      },\r\n    })\r\n\r\n  return (\r\n    <>\r\n      <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\r\n        {t('Choose a new Collectible to use as your profile pic.')}\r\n      </Text>\r\n      {isLoading ? (\r\n        <Skeleton height=\"80px\" mb=\"16px\" />\r\n      ) : (\r\n        nftsInWallet.map((walletNft) => {\r\n          const [firstTokenId] = tokenIds[walletNft.identifier]\r\n          const handleChange = (value: string) => {\r\n            setSelectedNft({\r\n              tokenId: Number(value),\r\n              nftAddress: getAddressByType(walletNft.type),\r\n            })\r\n          }\r\n\r\n          return (\r\n            <SelectionCard\r\n              name=\"profilePicture\"\r\n              key={walletNft.identifier}\r\n              value={firstTokenId}\r\n              image={`/images/nfts/${walletNft.images.md}`}\r\n              isChecked={firstTokenId === selectedNft.tokenId}\r\n              onChange={handleChange}\r\n              disabled={isApproving || isConfirming || isConfirmed}\r\n            >\r\n              <Text bold>{walletNft.name}</Text>\r\n            </SelectionCard>\r\n          )\r\n        })\r\n      )}\r\n      {!isLoading && nftsInWallet.length === 0 && (\r\n        <>\r\n          <Text as=\"p\" color=\"textSubtle\" mb=\"16px\">\r\n            {t('Sorry! You don’t have any eligible Collectibles in your wallet to use!')}\r\n          </Text>\r\n          <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\r\n            {t('Make sure you have a Pancake Collectible in your wallet and try again!')}\r\n          </Text>\r\n        </>\r\n      )}\r\n      <ApproveConfirmButtons\r\n        isApproveDisabled={isConfirmed || isConfirming || isApproved || selectedNft.tokenId === null}\r\n        isApproving={isApproving}\r\n        isConfirmDisabled={!isApproved || isConfirmed || selectedNft.tokenId === null}\r\n        isConfirming={isConfirming}\r\n        onApprove={handleApprove}\r\n        onConfirm={handleConfirm}\r\n      />\r\n      <Button variant=\"text\" width=\"100%\" onClick={onDismiss} disabled={isApproving || isConfirming}>\r\n        {t('Close Window')}\r\n      </Button>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ChangeProfilePicPage\r\n","import React, { useState } from 'react'\r\nimport { AutoRenewIcon, Button, Flex, InjectedModalProps, Text } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useCake } from 'hooks/useContract'\r\nimport useToast from 'hooks/useToast'\r\nimport { useProfile } from 'state/profile/hooks'\r\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\r\nimport { getFullDisplayBalance } from 'utils/formatBalance'\r\nimport useGetProfileCosts from 'views/Profile/hooks/useGetProfileCosts'\r\nimport { UseEditProfileResponse } from './reducer'\r\n\r\ninterface ApproveCakePageProps extends InjectedModalProps {\r\n  goToChange: UseEditProfileResponse['goToChange']\r\n}\r\n\r\nconst ApproveCakePage: React.FC<ApproveCakePageProps> = ({ goToChange, onDismiss }) => {\r\n  const [isApproving, setIsApproving] = useState(false)\r\n  const { profile } = useProfile()\r\n  const { t } = useTranslation()\r\n  const { numberCakeToUpdate, numberCakeToReactivate } = useGetProfileCosts()\r\n  const cakeContract = useCake()\r\n  const { toastError } = useToast()\r\n  const cost = profile.isActive ? numberCakeToUpdate : numberCakeToReactivate\r\n\r\n  const handleApprove = async () => {\r\n    const tx = await cakeContract.approve(getPancakeProfileAddress(), cost.times(2).toJSON())\r\n    setIsApproving(true)\r\n    const receipt = await tx.wait()\r\n    if (receipt.status) {\r\n      goToChange()\r\n    } else {\r\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\r\n      setIsApproving(false)\r\n    }\r\n  }\r\n\r\n  if (!profile) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <Flex flexDirection=\"column\">\r\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"24px\">\r\n        <Text>{profile.isActive ? t('Cost to update:') : t('Cost to reactivate:')}</Text>\r\n        <Text>{getFullDisplayBalance(cost)} CAKE</Text>\r\n      </Flex>\r\n      <Button\r\n        disabled={isApproving}\r\n        isLoading={isApproving}\r\n        endIcon={isApproving ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\r\n        width=\"100%\"\r\n        mb=\"8px\"\r\n        onClick={handleApprove}\r\n      >\r\n        {t('Enable')}\r\n      </Button>\r\n      <Button variant=\"text\" width=\"100%\" onClick={onDismiss} disabled={isApproving}>\r\n        {t('Close Window')}\r\n      </Button>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default ApproveCakePage\r\n","import React from 'react'\r\nimport { InjectedModalProps, Modal } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useEditProfile, { Views } from './reducer'\r\nimport StartView from './StartView'\r\nimport PauseProfileView from './PauseProfileView'\r\nimport ChangeProfilePicView from './ChangeProfilePicView'\r\nimport ApproveCakeView from './ApproveCakeView'\r\n\r\ntype EditProfileModalProps = InjectedModalProps\r\n\r\nconst viewTitle = {\r\n  [Views.START]: 'Edit Profile',\r\n  [Views.CHANGE]: 'Change Profile Pic',\r\n  [Views.REMOVE]: 'Remove Profile Pic',\r\n  [Views.APPROVE]: 'Enable CAKE',\r\n}\r\n\r\nconst EditProfileModal: React.FC<EditProfileModalProps> = ({ onDismiss }) => {\r\n  const { currentView, goToChange, goToRemove, goToApprove, goPrevious } = useEditProfile()\r\n  const { t } = useTranslation()\r\n  const translationKey = viewTitle[currentView]\r\n\r\n  const isStartView = currentView === Views.START\r\n  const handleBack = isStartView ? null : () => goPrevious()\r\n\r\n  return (\r\n    <Modal title={t(translationKey)} onBack={handleBack} onDismiss={onDismiss} hideCloseButton={!isStartView}>\r\n      <div style={{ maxWidth: '400px' }}>\r\n        {currentView === Views.START && (\r\n          <StartView goToApprove={goToApprove} goToChange={goToChange} goToRemove={goToRemove} onDismiss={onDismiss} />\r\n        )}\r\n        {currentView === Views.REMOVE && <PauseProfileView onDismiss={onDismiss} />}\r\n        {currentView === Views.CHANGE && <ChangeProfilePicView onDismiss={onDismiss} />}\r\n        {currentView === Views.APPROVE && <ApproveCakeView goToChange={goToChange} onDismiss={onDismiss} />}\r\n      </div>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default EditProfileModal\r\n","import React from 'react'\r\nimport { Button, Flex, Heading, useModal, PresentWonIcon } from '@pancakeswap/uikit'\r\nimport { useProfile } from 'state/profile/hooks'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport ClaimNftAndCakeModal, { useCanClaim } from './ClaimGiftModal'\r\nimport HeaderWrapper from './HeaderWrapper'\r\nimport EditProfileModal from './EditProfileModal'\r\n\r\nconst ProfileHeader = () => {\r\n  const { t } = useTranslation()\r\n  const { canClaim, checkClaimStatus } = useCanClaim()\r\n  const [onPresentClaimGiftModal] = useModal(<ClaimNftAndCakeModal onSuccess={checkClaimStatus} />)\r\n  const [onEditProfileModal] = useModal(<EditProfileModal />, false)\r\n  const { hasProfile } = useProfile()\r\n\r\n  return (\r\n    <HeaderWrapper>\r\n      <Flex\r\n        flexDirection={['column', null, 'row']}\r\n        alignItems={['start', null, 'center']}\r\n        justifyContent=\"space-between\"\r\n      >\r\n        <div>\r\n          <Heading as=\"h1\" scale=\"xxl\" mb=\"8px\" color=\"secondary\">\r\n            {t('Your Profile')}\r\n          </Heading>\r\n          <Heading as=\"h2\" scale=\"lg\" mb=\"16px\">\r\n            {t('Check your stats and collect achievements')}\r\n          </Heading>\r\n          {hasProfile && <Button onClick={onEditProfileModal}>{t('Edit Profile')}</Button>}\r\n        </div>\r\n        {canClaim && (\r\n          <Button variant=\"tertiary\" onClick={onPresentClaimGiftModal} startIcon={<PresentWonIcon />}>\r\n            {t('You’ve got a gift to claim!')}\r\n          </Button>\r\n        )}\r\n      </Flex>\r\n    </HeaderWrapper>\r\n  )\r\n}\r\n\r\nexport default ProfileHeader\r\n","import React from 'react'\r\nimport { Route } from 'react-router-dom'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport Page from 'components/Layout/Page'\r\nimport PageLoader from 'components/Loader/PageLoader'\r\nimport { useProfile } from 'state/profile/hooks'\r\nimport { useFetchAchievements } from 'state/achievements/hooks'\r\nimport ProfileCreation from './ProfileCreation'\r\nimport Header from './components/Header'\r\nimport TaskCenter from './TaskCenter'\r\nimport PublicProfile from './PublicProfile'\r\n\r\nconst Profile = () => {\r\n  const { isInitialized, isLoading, hasProfile } = useProfile()\r\n  const { account } = useWeb3React()\r\n\r\n  useFetchAchievements()\r\n\r\n  if (!isInitialized || isLoading) {\r\n    return <PageLoader />\r\n  }\r\n\r\n  if (account && !hasProfile) {\r\n    return (\r\n      <Page>\r\n        <ProfileCreation />\r\n      </Page>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Page>\r\n      <Header />\r\n{/*       <Route exact path=\"/profile\">\r\n        <PublicProfile />\r\n      </Route>\r\n      <Route path=\"/profile/tasks\">\r\n        <TaskCenter />\r\n      </Route> */}\r\n    </Page>\r\n  )\r\n}\r\n\r\nexport default Profile\r\n","import { useEffect } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useSelector } from 'react-redux'\r\nimport { useAppDispatch } from 'state'\r\nimport { State, AchievementState } from '../types'\r\nimport { fetchAchievements } from '.'\r\n\r\nexport const useFetchAchievements = () => {\r\n  const { account } = useWeb3React()\r\n  const dispatch = useAppDispatch()\r\n\r\n  useEffect(() => {\r\n    if (account) {\r\n      dispatch(fetchAchievements(account))\r\n    }\r\n  }, [account, dispatch])\r\n}\r\n\r\nexport const useAchievements = () => {\r\n  const achievements: AchievementState['data'] = useSelector((state: State) => state.achievements.data)\r\n  return achievements\r\n}\r\n","import { useEffect, useMemo } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useSelector } from 'react-redux'\r\nimport { ethers } from 'ethers'\r\nimport { minBy, orderBy } from 'lodash'\r\nimport { useAppDispatch } from 'state'\r\nimport Nfts from 'config/constants/nfts'\r\nimport { State, NodeRound, ReduxNodeLedger, NodeLedger, ReduxNodeRound } from './types'\r\nimport { fetchWalletNfts } from './collectibles'\r\nimport { parseBigNumberObj } from './predictions/helpers'\r\n\r\n// /!\\\r\n// Don't add anything here. These hooks will be moved the the predictions folder\r\n\r\n// Predictions\r\nexport const useGetRounds = () => {\r\n  const rounds = useSelector((state: State) => state.predictions.rounds)\r\n  return Object.keys(rounds).reduce((accum, epoch) => {\r\n    return {\r\n      ...accum,\r\n      [epoch]: parseBigNumberObj<ReduxNodeRound, NodeRound>(rounds[epoch]),\r\n    }\r\n  }, {}) as { [key: string]: NodeRound }\r\n}\r\n\r\nexport const useGetRound = (epoch: number) => {\r\n  const round = useSelector((state: State) => state.predictions.rounds[epoch])\r\n  return parseBigNumberObj<ReduxNodeRound, NodeRound>(round)\r\n}\r\n\r\nexport const useGetSortedRounds = () => {\r\n  const roundData = useGetRounds()\r\n  return orderBy(Object.values(roundData), ['epoch'], ['asc'])\r\n}\r\n\r\nexport const useGetBetByEpoch = (account: string, epoch: number) => {\r\n  const bets = useSelector((state: State) => state.predictions.ledgers)\r\n\r\n  if (!bets[account]) {\r\n    return null\r\n  }\r\n\r\n  if (!bets[account][epoch]) {\r\n    return null\r\n  }\r\n\r\n  return parseBigNumberObj<ReduxNodeLedger, NodeLedger>(bets[account][epoch])\r\n}\r\n\r\nexport const useGetIsClaimable = (epoch) => {\r\n  const claimableStatuses = useSelector((state: State) => state.predictions.claimableStatuses)\r\n  return claimableStatuses[epoch] || false\r\n}\r\n\r\n/**\r\n * Used to get the range of rounds to poll for\r\n */\r\nexport const useGetEarliestEpoch = () => {\r\n  return useSelector((state: State) => {\r\n    const earliestRound = minBy(Object.values(state.predictions.rounds), 'epoch')\r\n    return earliestRound?.epoch\r\n  })\r\n}\r\n\r\nexport const useIsHistoryPaneOpen = () => {\r\n  return useSelector((state: State) => state.predictions.isHistoryPaneOpen)\r\n}\r\n\r\nexport const useIsChartPaneOpen = () => {\r\n  return useSelector((state: State) => state.predictions.isChartPaneOpen)\r\n}\r\n\r\nexport const useGetCurrentEpoch = () => {\r\n  return useSelector((state: State) => state.predictions.currentEpoch)\r\n}\r\n\r\nexport const useGetIntervalBlocks = () => {\r\n  return useSelector((state: State) => state.predictions.intervalBlocks)\r\n}\r\n\r\nexport const useGetBufferBlocks = () => {\r\n  return useSelector((state: State) => state.predictions.bufferBlocks)\r\n}\r\n\r\nexport const useGetTotalIntervalBlocks = () => {\r\n  const intervalBlocks = useGetIntervalBlocks()\r\n  const bufferBlocks = useGetBufferBlocks()\r\n  return intervalBlocks + bufferBlocks\r\n}\r\n\r\nexport const useGetCurrentRound = () => {\r\n  const currentEpoch = useGetCurrentEpoch()\r\n  const rounds = useGetSortedRounds()\r\n  return rounds.find((round) => round.epoch === currentEpoch)\r\n}\r\n\r\nexport const useGetPredictionsStatus = () => {\r\n  return useSelector((state: State) => state.predictions.status)\r\n}\r\n\r\nexport const useGetHistoryFilter = () => {\r\n  return useSelector((state: State) => state.predictions.historyFilter)\r\n}\r\n\r\nexport const useGetCurrentRoundBlockNumber = () => {\r\n  return useSelector((state: State) => state.predictions.currentRoundStartBlockNumber)\r\n}\r\n\r\nexport const useGetMinBetAmount = () => {\r\n  const minBetAmount = useSelector((state: State) => state.predictions.minBetAmount)\r\n  return useMemo(() => ethers.BigNumber.from(minBetAmount), [minBetAmount])\r\n}\r\n\r\nexport const useGetRewardRate = () => {\r\n  const rewardRate = useSelector((state: State) => state.predictions.rewardRate)\r\n  return rewardRate / 100\r\n}\r\n\r\nexport const useGetIsFetchingHistory = () => {\r\n  return useSelector((state: State) => state.predictions.isFetchingHistory)\r\n}\r\n\r\nexport const useGetHistory = () => {\r\n  return useSelector((state: State) => state.predictions.history)\r\n}\r\n\r\nexport const useGetHistoryByAccount = (account: string) => {\r\n  const bets = useGetHistory()\r\n  return bets ? bets[account] : []\r\n}\r\n\r\nexport const useGetLedgerByRoundId = (account: string, roundId: string) => {\r\n  const ledgers = useSelector((state: State) => state.predictions.ledgers)\r\n\r\n  if (!ledgers[account]) {\r\n    return null\r\n  }\r\n\r\n  if (!ledgers[account][roundId]) {\r\n    return null\r\n  }\r\n\r\n  return ledgers[account][roundId]\r\n}\r\n\r\nexport const useGetLastOraclePrice = () => {\r\n  const lastOraclePrice = useSelector((state: State) => state.predictions.lastOraclePrice)\r\n  return useMemo(() => {\r\n    return ethers.BigNumber.from(lastOraclePrice)\r\n  }, [lastOraclePrice])\r\n}\r\n\r\n// Collectibles\r\nexport const useGetCollectibles = () => {\r\n  const { account } = useWeb3React()\r\n  const dispatch = useAppDispatch()\r\n  const { isInitialized, isLoading, data } = useSelector((state: State) => state.collectibles)\r\n  const identifiers = Object.keys(data)\r\n\r\n  useEffect(() => {\r\n    // Fetch nfts only if we have not done so already\r\n    if (!isInitialized) {\r\n      dispatch(fetchWalletNfts(account))\r\n    }\r\n  }, [isInitialized, account, dispatch])\r\n\r\n  return {\r\n    isInitialized,\r\n    isLoading,\r\n    tokenIds: data,\r\n    nftsInWallet: Nfts.filter((nft) => identifiers.includes(nft.identifier)),\r\n  }\r\n}\r\n","import { useEffect, useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { getBep20Contract, getCakeContract } from 'utils/contractHelpers'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\nimport { simpleRpcProvider } from 'utils/providers'\r\nimport useRefresh from './useRefresh'\r\nimport useLastUpdated from './useLastUpdated'\r\n\r\ntype UseTokenBalanceState = {\r\n  balance: BigNumber\r\n  fetchStatus: FetchStatus\r\n}\r\n\r\nexport enum FetchStatus {\r\n  NOT_FETCHED = 'not-fetched',\r\n  SUCCESS = 'success',\r\n  FAILED = 'failed',\r\n}\r\n\r\nconst useTokenBalance = (tokenAddress: string) => {\r\n  const { NOT_FETCHED, SUCCESS, FAILED } = FetchStatus\r\n  const [balanceState, setBalanceState] = useState<UseTokenBalanceState>({\r\n    balance: BIG_ZERO,\r\n    fetchStatus: NOT_FETCHED,\r\n  })\r\n  const { account } = useWeb3React()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const contract = getBep20Contract(tokenAddress)\r\n      try {\r\n        const res = await contract.balanceOf(account)\r\n        setBalanceState({ balance: new BigNumber(res.toString()), fetchStatus: SUCCESS })\r\n      } catch (e) {\r\n        console.error(e)\r\n        setBalanceState((prev) => ({\r\n          ...prev,\r\n          fetchStatus: FAILED,\r\n        }))\r\n      }\r\n    }\r\n\r\n    if (account) {\r\n      fetchBalance()\r\n    }\r\n  }, [account, tokenAddress, fastRefresh, SUCCESS, FAILED])\r\n\r\n  return balanceState\r\n}\r\n\r\nexport const useTotalSupply = () => {\r\n  const { slowRefresh } = useRefresh()\r\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\r\n\r\n  useEffect(() => {\r\n    async function fetchTotalSupply() {\r\n      const cakeContract = getCakeContract()\r\n      const supply = await cakeContract.totalSupply()\r\n      setTotalSupply(new BigNumber(supply.toString()))\r\n    }\r\n\r\n    fetchTotalSupply()\r\n  }, [slowRefresh])\r\n\r\n  return totalSupply\r\n}\r\n\r\nexport const useBurnedBalance = (tokenAddress: string) => {\r\n  const [balance, setBalance] = useState(BIG_ZERO)\r\n  const { slowRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const contract = getBep20Contract(tokenAddress)\r\n      const res = await contract.balanceOf('0x000000000000000000000000000000000000dEaD')\r\n      setBalance(new BigNumber(res.toString()))\r\n    }\r\n\r\n    fetchBalance()\r\n  }, [tokenAddress, slowRefresh])\r\n\r\n  return balance\r\n}\r\n\r\nexport const useGetBnbBalance = () => {\r\n  const [balance, setBalance] = useState(BIG_ZERO)\r\n  const { account } = useWeb3React()\r\n  const { lastUpdated, setLastUpdated } = useLastUpdated()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const walletBalance = await simpleRpcProvider.getBalance(account)\r\n      setBalance(new BigNumber(walletBalance.toString()))\r\n    }\r\n\r\n    if (account) {\r\n      fetchBalance()\r\n    }\r\n  }, [account, lastUpdated, setBalance])\r\n\r\n  return { balance, refresh: setLastUpdated }\r\n}\r\n\r\nexport default useTokenBalance\r\n","import { useEffect, useReducer, useRef } from 'react'\r\nimport { noop } from 'lodash'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { ethers } from 'ethers'\r\nimport useToast from 'hooks/useToast'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\ntype LoadingState = 'idle' | 'loading' | 'success' | 'fail'\r\n\r\ntype Action =\r\n  | { type: 'requires_approval' }\r\n  | { type: 'approve_sending' }\r\n  | { type: 'approve_receipt' }\r\n  | { type: 'approve_error' }\r\n  | { type: 'confirm_sending' }\r\n  | { type: 'confirm_receipt' }\r\n  | { type: 'confirm_error' }\r\n\r\ninterface State {\r\n  approvalState: LoadingState\r\n  confirmState: LoadingState\r\n}\r\n\r\nconst initialState: State = {\r\n  approvalState: 'idle',\r\n  confirmState: 'idle',\r\n}\r\n\r\nconst reducer = (state: State, actions: Action): State => {\r\n  switch (actions.type) {\r\n    case 'requires_approval':\r\n      return {\r\n        ...state,\r\n        approvalState: 'success',\r\n      }\r\n    case 'approve_sending':\r\n      return {\r\n        ...state,\r\n        approvalState: 'loading',\r\n      }\r\n    case 'approve_receipt':\r\n      return {\r\n        ...state,\r\n        approvalState: 'success',\r\n      }\r\n    case 'approve_error':\r\n      return {\r\n        ...state,\r\n        approvalState: 'fail',\r\n      }\r\n    case 'confirm_sending':\r\n      return {\r\n        ...state,\r\n        confirmState: 'loading',\r\n      }\r\n    case 'confirm_receipt':\r\n      return {\r\n        ...state,\r\n        confirmState: 'success',\r\n      }\r\n    case 'confirm_error':\r\n      return {\r\n        ...state,\r\n        confirmState: 'fail',\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\ninterface ApproveConfirmTransaction {\r\n  onApprove: () => ethers.providers.TransactionResponse\r\n  onConfirm: () => ethers.providers.TransactionResponse\r\n  onRequiresApproval?: () => Promise<boolean>\r\n  onSuccess: (state: State) => void\r\n  onApproveSuccess?: (state: State) => void\r\n}\r\n\r\nconst useApproveConfirmTransaction = ({\r\n  onApprove,\r\n  onConfirm,\r\n  onRequiresApproval,\r\n  onSuccess = noop,\r\n  onApproveSuccess = noop,\r\n}: ApproveConfirmTransaction) => {\r\n  const { t } = useTranslation()\r\n  const { account } = useWeb3React()\r\n  const [state, dispatch] = useReducer(reducer, initialState)\r\n  const handlePreApprove = useRef(onRequiresApproval)\r\n  const { toastError } = useToast()\r\n\r\n  // Check if approval is necessary, re-check if account changes\r\n  useEffect(() => {\r\n    if (account && handlePreApprove.current) {\r\n      handlePreApprove.current().then((result) => {\r\n        if (result) {\r\n          dispatch({ type: 'requires_approval' })\r\n        }\r\n      })\r\n    }\r\n  }, [account, handlePreApprove, dispatch])\r\n\r\n  return {\r\n    isApproving: state.approvalState === 'loading',\r\n    isApproved: state.approvalState === 'success',\r\n    isConfirming: state.confirmState === 'loading',\r\n    isConfirmed: state.confirmState === 'success',\r\n    handleApprove: async () => {\r\n      try {\r\n        const tx = await onApprove()\r\n        dispatch({ type: 'approve_sending' })\r\n        const receipt = await tx.wait()\r\n        if (receipt.status) {\r\n          dispatch({ type: 'approve_receipt' })\r\n          onApproveSuccess(state)\r\n        }\r\n      } catch (error) {\r\n        dispatch({ type: 'approve_error' })\r\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\r\n      }\r\n    },\r\n    handleConfirm: async () => {\r\n      dispatch({ type: 'confirm_sending' })\r\n      try {\r\n        const tx = await onConfirm()\r\n        const receipt = await tx.wait()\r\n        if (receipt.status) {\r\n          dispatch({ type: 'confirm_receipt' })\r\n          onSuccess(state)\r\n        }\r\n      } catch (error) {\r\n        dispatch({ type: 'confirm_error' })\r\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\r\n      }\r\n    },\r\n  }\r\n}\r\n\r\nexport default useApproveConfirmTransaction\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { ChevronRightIcon, Button as UIKitButton, AutoRenewIcon, ChevronDownIcon, Box, Flex } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\nexport enum ButtonArrangement {\r\n  ROW = 'row',\r\n  SEQUENTIAL = 'sequential',\r\n}\r\n\r\ninterface ApproveConfirmButtonsProps {\r\n  isApproveDisabled: boolean\r\n  isApproving: boolean\r\n  isConfirming: boolean\r\n  isConfirmDisabled: boolean\r\n  onApprove: () => void\r\n  onConfirm: () => void\r\n  buttonArrangement?: ButtonArrangement\r\n  confirmLabel?: string\r\n}\r\n\r\nconst StyledApproveConfirmButtonRow = styled.div`\r\n  align-items: center;\r\n  display: grid;\r\n  grid-template-columns: 1fr;\r\n  justify-content: center;\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    grid-template-columns: 1fr 24px 1fr;\r\n  }\r\n`\r\n\r\nconst Button = styled(UIKitButton)`\r\n  width: 100%;\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    min-width: 160px;\r\n  }\r\n`\r\n\r\nconst iconAttrs = { width: '24px', color: 'textDisabled' }\r\n\r\nconst ChevronRight = styled(ChevronRightIcon).attrs(iconAttrs)`\r\n  display: none;\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    display: block;\r\n  }\r\n`\r\n\r\nconst ChevronBottom = styled(ChevronDownIcon).attrs(iconAttrs)`\r\n  display: block;\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    display: none;\r\n  }\r\n`\r\n\r\nconst spinnerIcon = <AutoRenewIcon spin color=\"currentColor\" />\r\n\r\nconst ApproveConfirmButtons: React.FC<ApproveConfirmButtonsProps> = ({\r\n  isApproveDisabled,\r\n  isApproving,\r\n  isConfirming,\r\n  isConfirmDisabled,\r\n  onApprove,\r\n  onConfirm,\r\n  buttonArrangement = ButtonArrangement.ROW,\r\n  confirmLabel,\r\n}) => {\r\n  const { t } = useTranslation()\r\n  const confirmButtonText = confirmLabel ?? t('Confirm')\r\n\r\n  const ApproveConfirmRow = () => {\r\n    return (\r\n      <StyledApproveConfirmButtonRow>\r\n        <Box>\r\n          <Button\r\n            disabled={isApproveDisabled}\r\n            onClick={onApprove}\r\n            endIcon={isApproving ? spinnerIcon : undefined}\r\n            isLoading={isApproving}\r\n          >\r\n            {isApproving ? t('Enabling') : t('Enable')}\r\n          </Button>\r\n        </Box>\r\n        <Flex justifyContent=\"center\">\r\n          <ChevronRight />\r\n          <ChevronBottom />\r\n        </Flex>\r\n        <Box>\r\n          <Button\r\n            onClick={onConfirm}\r\n            disabled={isConfirmDisabled}\r\n            isLoading={isConfirming}\r\n            endIcon={isConfirming ? spinnerIcon : undefined}\r\n          >\r\n            {isConfirming ? t('Confirming') : confirmButtonText}\r\n          </Button>\r\n        </Box>\r\n      </StyledApproveConfirmButtonRow>\r\n    )\r\n  }\r\n\r\n  const ApproveConfirmSequential = () => {\r\n    return (\r\n      <>\r\n        {isApproveDisabled ? (\r\n          <Box>\r\n            <Button\r\n              onClick={onConfirm}\r\n              disabled={isConfirmDisabled}\r\n              isLoading={isConfirming}\r\n              endIcon={isConfirming ? spinnerIcon : undefined}\r\n            >\r\n              {isConfirming ? t('Confirming') : confirmButtonText}\r\n            </Button>\r\n          </Box>\r\n        ) : (\r\n          <Box>\r\n            <Button onClick={onApprove} endIcon={isApproving ? spinnerIcon : undefined} isLoading={isApproving}>\r\n              {isApproving ? t('Enabling') : t('Enable')}\r\n            </Button>\r\n          </Box>\r\n        )}\r\n      </>\r\n    )\r\n  }\r\n\r\n  return buttonArrangement === ButtonArrangement.ROW ? ApproveConfirmRow() : ApproveConfirmSequential()\r\n}\r\n\r\nexport default ApproveConfirmButtons\r\n","import { useEffect } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { useAppDispatch } from 'state'\r\nimport { Team } from 'config/constants/types'\r\nimport { State, TeamsState } from '../types'\r\nimport { fetchTeam, fetchTeams } from '.'\r\n\r\nexport const useTeam = (id: number) => {\r\n  const team: Team = useSelector((state: State) => state.teams.data[id])\r\n  const dispatch = useAppDispatch()\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchTeam(id))\r\n  }, [id, dispatch])\r\n\r\n  return team\r\n}\r\n\r\nexport const useTeams = () => {\r\n  const { isInitialized, isLoading, data }: TeamsState = useSelector((state: State) => state.teams)\r\n  const dispatch = useAppDispatch()\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchTeams())\r\n  }, [dispatch])\r\n\r\n  return { teams: data, isInitialized, isLoading }\r\n}\r\n","import styled from 'styled-components'\r\n\r\nconst HeaderWrapper = styled.div`\r\n  border-bottom: 2px solid ${({ theme }) => theme.colors.textSubtle};\r\n  margin-bottom: 24px;\r\n  padding-bottom: 24px;\r\n`\r\n\r\nexport default HeaderWrapper\r\n","import React from 'react'\r\nimport { NoProfileAvatarIcon } from '@pancakeswap/uikit'\r\nimport { Profile } from 'state/types'\r\nimport styled from 'styled-components'\r\n\r\nexport interface ProfileAvatarProps {\r\n  profile: Profile\r\n}\r\n\r\nconst TeamAvatar = styled.img`\r\n  border: 1px solid ${({ theme }) => theme.card.background};\r\n  border-radius: 50%;\r\n  bottom: 0px;\r\n  position: absolute;\r\n  right: 0px;\r\n  min-width: 20px;\r\n  min-height: 20px;\r\n  width: 37.5%;\r\n  height: 37.5%;\r\n  z-index: 5;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    border-width: 2px;\r\n  }\r\n`\r\n\r\nconst AvatarWrapper = styled.div<{ bg: string }>`\r\n  background: url('${({ bg }) => bg}');\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n  border-radius: 50%;\r\n  position: relative;\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  & > img {\r\n    border-radius: 50%;\r\n  }\r\n`\r\n// TODO: replace with no profile avatar icon\r\nconst AvatarInactive = styled(NoProfileAvatarIcon)`\r\n  width: 100%;\r\n  height: 100%;\r\n`\r\n\r\nconst ProfileAvatar: React.FC<ProfileAvatarProps> = ({ profile }) => {\r\n  return (\r\n    <AvatarWrapper bg={`/images/nfts/${profile.nft?.images?.md}`}>\r\n      {!profile.isActive && <AvatarInactive />}\r\n      <TeamAvatar src={`/images/teams/${profile.team.images.alt}`} alt={profile.team.name} />\r\n    </AvatarWrapper>\r\n  )\r\n}\r\n\r\nexport default ProfileAvatar\r\n","var baseRandom = require('./_baseRandom');\n\n/**\n * A specialized version of `_.shuffle` which mutates and sets the size of `array`.\n *\n * @private\n * @param {Array} array The array to shuffle.\n * @param {number} [size=array.length] The size of `array`.\n * @returns {Array} Returns `array`.\n */\nfunction shuffleSelf(array, size) {\n  var index = -1,\n      length = array.length,\n      lastIndex = length - 1;\n\n  size = size === undefined ? length : size;\n  while (++index < size) {\n    var rand = baseRandom(index, lastIndex),\n        value = array[rand];\n\n    array[rand] = array[index];\n    array[index] = value;\n  }\n  array.length = size;\n  return array;\n}\n\nmodule.exports = shuffleSelf;\n"],"sourceRoot":""}