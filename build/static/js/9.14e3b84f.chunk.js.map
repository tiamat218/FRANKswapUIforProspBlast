{"version":3,"sources":["../node_modules/lodash/isEmpty.js","views/Voting/CreateProposal/styles.tsx","views/Voting/CreateProposal/Choice.tsx","views/Voting/CreateProposal/Choices.tsx","views/Voting/CreateProposal/helpers.ts","views/Voting/components/VoteDetailsModal.tsx","views/Voting/CreateProposal/index.tsx","views/Voting/helpers.ts","views/Voting/config.ts","utils/truncateWalletAddress.ts","views/Voting/components/CastVoteModal/styles.tsx","views/Voting/components/BreadcrumbLink.tsx","views/Voting/components/Layout.tsx","views/Voting/components/CastVoteModal/DetailsView.tsx","views/Voting/hooks/useGetVotingPower.tsx","components/ReactMarkdown/styles.tsx","components/ReactMarkdown/index.tsx"],"names":["baseKeys","require","getTag","isArguments","isArray","isArrayLike","isBuffer","isPrototype","isTypedArray","hasOwnProperty","Object","prototype","module","exports","value","splice","length","tag","size","key","call","BaseLabel","styled","label","_templateObject","_taggedTemplateLiteral","_ref","theme","colors","text","Label","_templateObject2","SecondaryLabel","_templateObject3","FormError","_ref2","children","_jsx","Text","color","mb","FormErrors","_ref3","errors","Box","mt","map","error","Choice","onRemove","onTextInput","props","isWarning","setIsWarning","useState","isDirty","setIsDirty","_jsxs","position","Input","onChange","evt","currentTarget","right","top","zIndex","IconButton","variant","onClick","CloseIcon","makeChoice","id","uniqueId","Choices","choices","t","useTranslation","hasMinimumChoices","filter","choice","Card","CardHeader","Heading","as","scale","CardBody","index","newValue","newChoices","choiceIndex","findIndex","newChoice","placeholder","handleRemove","newPrevChoice","undefined","Button","type","addChoice","disabled","combineDateAndTime","date","time","isValid","dateStr","format","timeStr","parseISO","concat","getTime","VoteDetailsModal","block","onDismiss","modalIsOpen","setModalIsOpen","isLoading","total","cakeBalance","cakeVaultBalance","cakePoolBalance","poolsBalance","cakeBnbLpBalance","useGetVotingPower","useTheme","Modal","title","handleDismiss","headerBackground","gradients","cardHeader","width","Flex","height","alignItems","justifyContent","Spinner","_Fragment","DetailsView","EasyMde","lazy","CreateProposal","state","setState","name","body","times","startDate","startTime","endDate","endTime","snapshot","setIsLoading","fieldsState","setFieldsState","account","useWeb3React","initialBlock","useInitialBlock","push","useHistory","library","useWeb3Provider","toastSuccess","toastError","useToast","onPresentVoteDetailsModal","useModal","formErrors","getFormErrors","formData","field","num","hasEmptyChoice","some","Array","startDateTimestamp","updateValue","prevState","prevFieldsState","handleDateChange","options","useMemo","hideIcons","ADMIN_ADDRESS","useEffect","Container","py","Breadcrumbs","BreadcrumbLink","to","onSubmit","async","preventDefault","proposal","JSON","stringify","generatePayloadData","SnapshotCommand","PROPOSAL","payload","start","end","metadata","generateMetaData","sig","signMessage","msg","address","data","sendSnaphotData","ipfsHash","message","console","Layout","htmlFor","inputName","required","onTextChange","p","px","ReactMarkdown","DatePicker","selected","placeholderText","TimePicker","mr","LinkExternal","href","getBscScanLink","truncateWalletAddress","endIcon","AutoRenewIcon","spin","isEmpty","count","VOTE_THRESHOLD","ConnectWalletButton","isCoreProposal","author","toLowerCase","filterProposalsByType","proposals","proposalType","ProposalType","COMMUNITY","CORE","ALL","filterProposalsByState","plugins","network","strategies","params","symbol","getCakeAddress","decimals","version","SNAPSHOT_VERSION","timestamp","Date","now","toFixed","space","PANCAKE_SPACE","response","fetch","SNAPSHOT_HUB_API","method","headers","Accept","ok","json","Error","error_description","getVotingPower","poolAddresses","blockNumber","simpleRpcProvider","getBlockNumber","SNAPSHOT_VOTING_API","calculateVoteResults","votes","reduce","accum","vote","choiceText","getTotalFromVotes","_vote$metadata","power","BigNumber","votingPower","plus","BIG_ZERO","PROPOSALS_TO_SHOW","IPFS_GATEWAY","startLength","arguments","endLength","substring","VotingBox","div","cardBorder","ModalInner","maxWidth","Link","primaryBright","mediaQueries","lg","fontSize","textTransform","bold","toFormat","textAlign","initialState","verificationHash","isActive","setVotingPower","getActivePools","contractAddress","getAddress","prevVotingPower","fetchVotingPower","Table","table","ThemedComponent","Title","my","markdownComponents","h1","h2","h3","h4","h5","h6","ol","ul","pre","ReactMarkdownLib","remarkPlugins","gfm","components"],"mappings":"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","file":"static/js/9.14e3b84f.chunk.js","sourcesContent":["var baseKeys = require('./_baseKeys'),\n    getTag = require('./_getTag'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isArrayLike = require('./isArrayLike'),\n    isBuffer = require('./isBuffer'),\n    isPrototype = require('./_isPrototype'),\n    isTypedArray = require('./isTypedArray');\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    setTag = '[object Set]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Checks if `value` is an empty object, collection, map, or set.\n *\n * Objects are considered empty if they have no own enumerable string keyed\n * properties.\n *\n * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n * jQuery-like collections are considered empty if they have a `length` of `0`.\n * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n * @example\n *\n * _.isEmpty(null);\n * // => true\n *\n * _.isEmpty(true);\n * // => true\n *\n * _.isEmpty(1);\n * // => true\n *\n * _.isEmpty([1, 2, 3]);\n * // => false\n *\n * _.isEmpty({ 'a': 1 });\n * // => false\n */\nfunction isEmpty(value) {\n  if (value == null) {\n    return true;\n  }\n  if (isArrayLike(value) &&\n      (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||\n        isBuffer(value) || isTypedArray(value) || isArguments(value))) {\n    return !value.length;\n  }\n  var tag = getTag(value);\n  if (tag == mapTag || tag == setTag) {\n    return !value.size;\n  }\n  if (isPrototype(value)) {\n    return !baseKeys(value).length;\n  }\n  for (var key in value) {\n    if (hasOwnProperty.call(value, key)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nmodule.exports = isEmpty;\n","import React from 'react'\r\nimport { Box, Text } from '@pancakeswap/uikit'\r\nimport styled from 'styled-components'\r\n\r\nconst BaseLabel = styled.label`\r\n  color: ${({ theme }) => theme.colors.text};\r\n  display: block;\r\n  font-weight: 600;\r\n  margin-bottom: 8px;\r\n`\r\n\r\nexport const Label = styled(BaseLabel)`\r\n  font-size: 20px;\r\n`\r\n\r\nexport const SecondaryLabel = styled(BaseLabel)`\r\n  font-size: 12px;\r\n  text-transform: uppercase;\r\n`\r\n\r\nexport const FormError: React.FC = ({ children }) => (\r\n  <Text color=\"failure\" mb=\"4px\">\r\n    {children}\r\n  </Text>\r\n)\r\n\r\nexport const FormErrors: React.FC<{ errors: string[] }> = ({ errors }) => {\r\n  return (\r\n    <Box mt=\"8px\">\r\n      {errors.map((error) => {\r\n        return <FormError key={error}>{error}</FormError>\r\n      })}\r\n    </Box>\r\n  )\r\n}\r\n","import React, { ChangeEvent, InputHTMLAttributes, useState } from 'react'\r\nimport { Box, CloseIcon, IconButton, Input, InputProps } from '@pancakeswap/uikit'\r\n\r\ninterface ChoiceProps extends InputProps, InputHTMLAttributes<HTMLInputElement> {\r\n  onTextInput: (value: string) => void\r\n  onRemove?: () => void\r\n}\r\n\r\nconst Choice: React.FC<ChoiceProps> = ({ onRemove, onTextInput, ...props }) => {\r\n  const [isWarning, setIsWarning] = useState(false)\r\n  const [isDirty, setIsDirty] = useState(false)\r\n\r\n  const handleChange = (evt: ChangeEvent<HTMLInputElement>) => {\r\n    const { value } = evt.currentTarget\r\n\r\n    setIsWarning(isDirty && value.length === 0)\r\n    setIsDirty(true)\r\n    onTextInput(value)\r\n  }\r\n\r\n  return (\r\n    <Box position=\"relative\" mb=\"16px\">\r\n      <Input {...props} onChange={handleChange} isWarning={isWarning} />\r\n      {onRemove && (\r\n        <Box position=\"absolute\" right=\"8px\" top=\"0px\" zIndex={30}>\r\n          <IconButton variant=\"text\" onClick={onRemove}>\r\n            <CloseIcon />\r\n          </IconButton>\r\n        </Box>\r\n      )}\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default Choice\r\n","import React from 'react'\r\nimport { Button, Card, CardBody, CardHeader, Heading } from '@pancakeswap/uikit'\r\nimport uniqueId from 'lodash/uniqueId'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport Choice from './Choice'\r\n\r\nexport interface Choice {\r\n  id: string\r\n  value: string\r\n}\r\n\r\ninterface ChoicesProps {\r\n  choices: Choice[]\r\n  onChange: (newChoices: Choice[]) => void\r\n}\r\n\r\nexport const MINIMUM_CHOICES = 2\r\nexport const makeChoice = (): Choice => ({ id: uniqueId(), value: '' })\r\n\r\nconst Choices: React.FC<ChoicesProps> = ({ choices, onChange }) => {\r\n  const { t } = useTranslation()\r\n  const hasMinimumChoices = choices.filter((choice) => choice.value.length > 0).length >= MINIMUM_CHOICES\r\n\r\n  const addChoice = () => {\r\n    onChange([...choices, makeChoice()])\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <Heading as=\"h3\" scale=\"md\">\r\n          {t('Choices')}\r\n        </Heading>\r\n      </CardHeader>\r\n      <CardBody>\r\n        {choices.map(({ id, value }, index) => {\r\n          const handleTextInput = (newValue: string) => {\r\n            const newChoices = [...choices]\r\n            const choiceIndex = newChoices.findIndex((newChoice) => newChoice.id === id)\r\n\r\n            newChoices[choiceIndex].value = newValue\r\n\r\n            onChange(newChoices)\r\n          }\r\n\r\n          const handleRemove = () => {\r\n            onChange(choices.filter((newPrevChoice) => newPrevChoice.id !== id))\r\n          }\r\n\r\n          return (\r\n            <Choice\r\n              key={id}\r\n              scale=\"lg\"\r\n              onTextInput={handleTextInput}\r\n              placeholder={t('Input choice text')}\r\n              value={value}\r\n              onRemove={index > 1 ? handleRemove : undefined}\r\n            />\r\n          )\r\n        })}\r\n\r\n        <Button type=\"button\" onClick={addChoice} disabled={!hasMinimumChoices}>\r\n          {t('Add Choice')}\r\n        </Button>\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default Choices\r\n","import { ContextApi } from 'contexts/Localization/types'\r\nimport { format, parseISO, isValid } from 'date-fns'\r\nimport { MINIMUM_CHOICES } from './Choices'\r\nimport { FormState } from './types'\r\n\r\nexport const combineDateAndTime = (date: Date, time: Date) => {\r\n  if (!isValid(date) || !isValid(time)) {\r\n    return null\r\n  }\r\n\r\n  const dateStr = format(date, 'yyyy-MM-dd')\r\n  const timeStr = format(time, 'HH:mm:ss')\r\n\r\n  return parseISO(`${dateStr}T${timeStr}`).getTime() / 1e3\r\n}\r\n\r\nexport const getFormErrors = (formData: FormState, t: ContextApi['t']) => {\r\n  const { name, body, choices, startDate, startTime, endDate, endTime, snapshot } = formData\r\n  const errors: { [key: string]: string[] } = {}\r\n\r\n  if (!name) {\r\n    errors.name = [t('%field% is required', { field: 'Title' })]\r\n  }\r\n\r\n  if (!body) {\r\n    errors.body = [t('%field% is required', { field: 'Body' })]\r\n  }\r\n\r\n  if (choices.length < MINIMUM_CHOICES) {\r\n    errors.choices = [t('Please create a minimum of %num% choices', { num: MINIMUM_CHOICES })]\r\n  }\r\n\r\n  const hasEmptyChoice = choices.some((choice) => !choice.value)\r\n  if (choices.length === MINIMUM_CHOICES && hasEmptyChoice) {\r\n    errors.choices = Array.isArray(errors.choices)\r\n      ? [...errors.choices, t('Choices must not be empty')]\r\n      : (errors.choices = [t('Choices must not be empty')])\r\n  }\r\n\r\n  if (!isValid(startDate)) {\r\n    errors.startDate = [t('Please select a valid date')]\r\n  }\r\n\r\n  if (!isValid(startTime)) {\r\n    errors.startTime = [t('Please select a valid time')]\r\n  }\r\n\r\n  if (!isValid(endDate)) {\r\n    errors.endDate = [t('Please select a valid date')]\r\n  }\r\n\r\n  if (!isValid(endTime)) {\r\n    errors.endTime = [t('Please select a valid time')]\r\n  }\r\n\r\n  const startDateTimestamp = combineDateAndTime(startDate, startTime)\r\n  const endDateTimestamp = combineDateAndTime(endDate, endTime)\r\n\r\n  if (endDateTimestamp < startDateTimestamp) {\r\n    errors.endDate = Array.isArray(errors.endDate)\r\n      ? [...errors.endDate, t('End date must be after the start date')]\r\n      : (errors.endDate = [t('End date must be after the start date')])\r\n  }\r\n\r\n  if (snapshot === 0) {\r\n    errors.snapshot = [t('Invalid snapshot')]\r\n  }\r\n\r\n  return errors\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Box, Flex, InjectedModalProps, Modal, Button, Spinner } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useTheme from 'hooks/useTheme'\r\nimport useGetVotingPower from '../hooks/useGetVotingPower'\r\nimport DetailsView from './CastVoteModal/DetailsView'\r\n\r\ninterface VoteDetailsModalProps extends InjectedModalProps {\r\n  block: number\r\n}\r\n\r\nconst VoteDetailsModal: React.FC<VoteDetailsModalProps> = ({ block, onDismiss }) => {\r\n  const { t } = useTranslation()\r\n  const [modalIsOpen, setModalIsOpen] = useState(true)\r\n  const { isLoading, total, cakeBalance, cakeVaultBalance, cakePoolBalance, poolsBalance, cakeBnbLpBalance } =\r\n    useGetVotingPower(block, modalIsOpen)\r\n  const { theme } = useTheme()\r\n\r\n  const handleDismiss = () => {\r\n    setModalIsOpen(false)\r\n    onDismiss()\r\n  }\r\n\r\n  return (\r\n    <Modal title={t('Voting Power')} onDismiss={handleDismiss} headerBackground={theme.colors.gradients.cardHeader}>\r\n      <Box mb=\"24px\" width=\"320px\">\r\n        {isLoading ? (\r\n          <Flex height=\"450px\" alignItems=\"center\" justifyContent=\"center\">\r\n            <Spinner size={80} />\r\n          </Flex>\r\n        ) : (\r\n          <>\r\n            <DetailsView\r\n              total={total}\r\n              cakeBalance={cakeBalance}\r\n              cakeVaultBalance={cakeVaultBalance}\r\n              cakePoolBalance={cakePoolBalance}\r\n              poolsBalance={poolsBalance}\r\n              cakeBnbLpBalance={cakeBnbLpBalance}\r\n            />\r\n            <Button variant=\"secondary\" onClick={onDismiss} width=\"100%\" mt=\"16px\">\r\n              {t('Close')}\r\n            </Button>\r\n          </>\r\n        )}\r\n      </Box>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default VoteDetailsModal\r\n","import React, { ChangeEvent, FormEvent, lazy, useEffect, useState, useMemo } from 'react'\r\nimport {\r\n  AutoRenewIcon,\r\n  Box,\r\n  Breadcrumbs,\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  Flex,\r\n  Heading,\r\n  Input,\r\n  LinkExternal,\r\n  Text,\r\n  useModal,\r\n} from '@pancakeswap/uikit'\r\nimport { useHistory } from 'react-router'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport times from 'lodash/times'\r\nimport isEmpty from 'lodash/isEmpty'\r\nimport { useInitialBlock } from 'state/block/hooks'\r\nimport { SnapshotCommand } from 'state/types'\r\nimport useToast from 'hooks/useToast'\r\nimport useWeb3Provider from 'hooks/useActiveWeb3React'\r\nimport { getBscScanLink } from 'utils'\r\nimport truncateWalletAddress from 'utils/truncateWalletAddress'\r\nimport { signMessage } from 'utils/web3React'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport Container from 'components/Layout/Container'\r\nimport { DatePicker, TimePicker } from 'components/DatePicker'\r\nimport ConnectWalletButton from 'components/ConnectWalletButton'\r\nimport ReactMarkdown from 'components/ReactMarkdown'\r\nimport BreadcrumbLink from '../components/BreadcrumbLink'\r\nimport { sendSnaphotData, Message, generateMetaData, generatePayloadData } from '../helpers'\r\nimport Layout from '../components/Layout'\r\nimport { FormErrors, Label, SecondaryLabel } from './styles'\r\nimport Choices, { Choice, makeChoice, MINIMUM_CHOICES } from './Choices'\r\nimport { combineDateAndTime, getFormErrors } from './helpers'\r\nimport { FormState } from './types'\r\nimport { ADMIN_ADDRESS, VOTE_THRESHOLD } from '../config'\r\nimport VoteDetailsModal from '../components/VoteDetailsModal'\r\n\r\nconst EasyMde = lazy(() => import('components/EasyMde'))\r\n\r\nconst CreateProposal = () => {\r\n  const [state, setState] = useState<FormState>({\r\n    name: '',\r\n    body: '',\r\n    choices: times(MINIMUM_CHOICES).map(makeChoice),\r\n    startDate: null,\r\n    startTime: null,\r\n    endDate: null,\r\n    endTime: null,\r\n    snapshot: 0,\r\n  })\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [fieldsState, setFieldsState] = useState<{ [key: string]: boolean }>({})\r\n  const { t } = useTranslation()\r\n  const { account } = useWeb3React()\r\n  const initialBlock = useInitialBlock()\r\n  const { push } = useHistory()\r\n  const { library } = useWeb3Provider()\r\n  const { toastSuccess, toastError } = useToast()\r\n  const [onPresentVoteDetailsModal] = useModal(<VoteDetailsModal block={state.snapshot} />)\r\n  const { name, body, choices, startDate, startTime, endDate, endTime, snapshot } = state\r\n  const formErrors = getFormErrors(state, t)\r\n\r\n  const handleSubmit = async (evt: FormEvent<HTMLFormElement>) => {\r\n    evt.preventDefault()\r\n\r\n    try {\r\n      setIsLoading(true)\r\n      const proposal = JSON.stringify({\r\n        ...generatePayloadData(),\r\n        type: SnapshotCommand.PROPOSAL,\r\n        payload: {\r\n          name,\r\n          body,\r\n          snapshot,\r\n          start: combineDateAndTime(startDate, startTime),\r\n          end: combineDateAndTime(endDate, endTime),\r\n          choices: choices\r\n            .filter((choice) => choice.value)\r\n            .map((choice) => {\r\n              return choice.value\r\n            }),\r\n          metadata: generateMetaData(),\r\n          type: 'single-choice',\r\n        },\r\n      })\r\n\r\n      const sig = await signMessage(library, account, proposal)\r\n\r\n      if (sig) {\r\n        const msg: Message = { address: account, msg: proposal, sig }\r\n\r\n        // Save proposal to snapshot\r\n        const data = await sendSnaphotData(msg)\r\n\r\n        // Redirect user to newly created proposal page\r\n        push(`/voting/proposal/${data.ipfsHash}`)\r\n\r\n        toastSuccess(t('Proposal created!'))\r\n      } else {\r\n        toastError(t('Error'), t('Unable to sign payload'))\r\n      }\r\n    } catch (error) {\r\n      toastError(t('Error'), error?.message || error?.error)\r\n      console.error(error)\r\n      setIsLoading(false)\r\n    }\r\n  }\r\n\r\n  const updateValue = (key: string, value: string | Choice[] | Date) => {\r\n    setState((prevState) => ({\r\n      ...prevState,\r\n      [key]: value,\r\n    }))\r\n\r\n    // Keep track of what fields the user has attempted to edit\r\n    setFieldsState((prevFieldsState) => ({\r\n      ...prevFieldsState,\r\n      [key]: true,\r\n    }))\r\n  }\r\n\r\n  const handleChange = (evt: ChangeEvent<HTMLInputElement>) => {\r\n    const { name: inputName, value } = evt.currentTarget\r\n    updateValue(inputName, value)\r\n  }\r\n\r\n  const handleEasyMdeChange = (value: string) => {\r\n    updateValue('body', value)\r\n  }\r\n\r\n  const handleChoiceChange = (newChoices: Choice[]) => {\r\n    updateValue('choices', newChoices)\r\n  }\r\n\r\n  const handleDateChange = (key: string) => (value: Date) => {\r\n    updateValue(key, value)\r\n  }\r\n\r\n  const options = useMemo(\r\n    () => ({\r\n      hideIcons: account === ADMIN_ADDRESS ? [] : ['guide', 'fullscreen', 'preview', 'side-by-side', 'image'],\r\n    }),\r\n    [account],\r\n  )\r\n\r\n  useEffect(() => {\r\n    if (initialBlock > 0) {\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        snapshot: initialBlock,\r\n      }))\r\n    }\r\n  }, [initialBlock, setState])\r\n\r\n  return (\r\n    <Container py=\"40px\">\r\n      <Box mb=\"48px\">\r\n        <Breadcrumbs>\r\n          <BreadcrumbLink to=\"/\">{t('Home')}</BreadcrumbLink>\r\n          <BreadcrumbLink to=\"/voting\">{t('Voting')}</BreadcrumbLink>\r\n          <Text>{t('Make a Proposal')}</Text>\r\n        </Breadcrumbs>\r\n      </Box>\r\n      <form onSubmit={handleSubmit}>\r\n        <Layout>\r\n          <Box>\r\n            <Box mb=\"24px\">\r\n              <Label htmlFor=\"name\">{t('Title')}</Label>\r\n              <Input id=\"name\" name=\"name\" value={name} scale=\"lg\" onChange={handleChange} required />\r\n              {formErrors.name && fieldsState.name && <FormErrors errors={formErrors.name} />}\r\n            </Box>\r\n            <Box mb=\"24px\">\r\n              <Label htmlFor=\"body\">{t('Content')}</Label>\r\n              <Text color=\"textSubtle\" mb=\"8px\">\r\n                {t('Tip: write in Markdown!')}\r\n              </Text>\r\n              <EasyMde\r\n                id=\"body\"\r\n                name=\"body\"\r\n                onTextChange={handleEasyMdeChange}\r\n                value={body}\r\n                options={options}\r\n                required\r\n              />\r\n              {formErrors.body && fieldsState.body && <FormErrors errors={formErrors.body} />}\r\n            </Box>\r\n            {body && (\r\n              <Box mb=\"24px\">\r\n                <Card>\r\n                  <CardHeader>\r\n                    <Heading as=\"h3\" scale=\"md\">\r\n                      {t('Preview')}\r\n                    </Heading>\r\n                  </CardHeader>\r\n                  <CardBody p=\"0\" px=\"24px\">\r\n                    <ReactMarkdown>{body}</ReactMarkdown>\r\n                  </CardBody>\r\n                </Card>\r\n              </Box>\r\n            )}\r\n            <Choices choices={choices} onChange={handleChoiceChange} />\r\n            {formErrors.choices && fieldsState.choices && <FormErrors errors={formErrors.choices} />}\r\n          </Box>\r\n          <Box>\r\n            <Card>\r\n              <CardHeader>\r\n                <Heading as=\"h3\" scale=\"md\">\r\n                  {t('Actions')}\r\n                </Heading>\r\n              </CardHeader>\r\n              <CardBody>\r\n                <Box mb=\"24px\">\r\n                  <SecondaryLabel>{t('Start Date')}</SecondaryLabel>\r\n                  <DatePicker\r\n                    name=\"startDate\"\r\n                    onChange={handleDateChange('startDate')}\r\n                    selected={startDate}\r\n                    placeholderText=\"YYYY/MM/DD\"\r\n                  />\r\n                  {formErrors.startDate && fieldsState.startDate && <FormErrors errors={formErrors.startDate} />}\r\n                </Box>\r\n                <Box mb=\"24px\">\r\n                  <SecondaryLabel>{t('Start Time')}</SecondaryLabel>\r\n                  <TimePicker\r\n                    name=\"startTime\"\r\n                    onChange={handleDateChange('startTime')}\r\n                    selected={startTime}\r\n                    placeholderText=\"00:00\"\r\n                  />\r\n                  {formErrors.startTime && fieldsState.startTime && <FormErrors errors={formErrors.startTime} />}\r\n                </Box>\r\n                <Box mb=\"24px\">\r\n                  <SecondaryLabel>{t('End Date')}</SecondaryLabel>\r\n                  <DatePicker\r\n                    name=\"endDate\"\r\n                    onChange={handleDateChange('endDate')}\r\n                    selected={endDate}\r\n                    placeholderText=\"YYYY/MM/DD\"\r\n                  />\r\n                  {formErrors.endDate && fieldsState.endDate && <FormErrors errors={formErrors.endDate} />}\r\n                </Box>\r\n                <Box mb=\"24px\">\r\n                  <SecondaryLabel>{t('End Time')}</SecondaryLabel>\r\n                  <TimePicker\r\n                    name=\"endTime\"\r\n                    onChange={handleDateChange('endTime')}\r\n                    selected={endTime}\r\n                    placeholderText=\"00:00\"\r\n                  />\r\n                  {formErrors.endTime && fieldsState.endTime && <FormErrors errors={formErrors.endTime} />}\r\n                </Box>\r\n                {account && (\r\n                  <Flex alignItems=\"center\" mb=\"8px\">\r\n                    <Text color=\"textSubtle\" mr=\"16px\">\r\n                      {t('Creator')}\r\n                    </Text>\r\n                    <LinkExternal href={getBscScanLink(account, 'address')}>\r\n                      {truncateWalletAddress(account)}\r\n                    </LinkExternal>\r\n                  </Flex>\r\n                )}\r\n                <Flex alignItems=\"center\" mb=\"16px\">\r\n                  <Text color=\"textSubtle\" mr=\"16px\">\r\n                    {t('Snapshot')}\r\n                  </Text>\r\n                  <LinkExternal href={getBscScanLink(snapshot, 'block')}>{snapshot}</LinkExternal>\r\n                </Flex>\r\n                {account ? (\r\n                  <>\r\n                    <Button\r\n                      type=\"submit\"\r\n                      width=\"100%\"\r\n                      isLoading={isLoading}\r\n                      endIcon={isLoading ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\r\n                      disabled={!isEmpty(formErrors)}\r\n                      mb=\"16px\"\r\n                    >\r\n                      {t('Publish')}\r\n                    </Button>\r\n                    <Text color=\"failure\" as=\"p\" mb=\"4px\">\r\n                      {t('You need at least %count% voting power to publish a proposal.', { count: VOTE_THRESHOLD })}{' '}\r\n                    </Text>\r\n                    <Button scale=\"sm\" type=\"button\" variant=\"text\" onClick={onPresentVoteDetailsModal} p={0}>\r\n                      {t('Check voting power')}\r\n                    </Button>\r\n                  </>\r\n                ) : (\r\n                  <ConnectWalletButton width=\"100%\" type=\"button\" />\r\n                )}\r\n              </CardBody>\r\n            </Card>\r\n          </Box>\r\n        </Layout>\r\n      </form>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default CreateProposal\r\n","import BigNumber from 'bignumber.js'\r\nimport { getCakeAddress } from 'utils/addressHelpers'\r\nimport { SNAPSHOT_HUB_API, SNAPSHOT_VOTING_API } from 'config/constants/endpoints'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\nimport { Proposal, ProposalState, ProposalType, Vote } from 'state/types'\r\nimport { simpleRpcProvider } from 'utils/providers'\r\nimport { ADMIN_ADDRESS, PANCAKE_SPACE, SNAPSHOT_VERSION } from './config'\r\n\r\nexport const isCoreProposal = (proposal: Proposal) => {\r\n  return proposal.author.toLowerCase() === ADMIN_ADDRESS.toLowerCase()\r\n}\r\n\r\nexport const filterProposalsByType = (proposals: Proposal[], proposalType: ProposalType) => {\r\n  switch (proposalType) {\r\n    case ProposalType.COMMUNITY:\r\n      return proposals.filter((proposal) => !isCoreProposal(proposal))\r\n    case ProposalType.CORE:\r\n      return proposals.filter((proposal) => isCoreProposal(proposal))\r\n    case ProposalType.ALL:\r\n    default:\r\n      return proposals\r\n  }\r\n}\r\n\r\nexport const filterProposalsByState = (proposals: Proposal[], state: ProposalState) => {\r\n  return proposals.filter((proposal) => proposal.state === state)\r\n}\r\n\r\nexport interface Message {\r\n  address: string\r\n  msg: string\r\n  sig: string\r\n}\r\n\r\n/**\r\n * Generates metadata required by snapshot to validate payload\r\n */\r\nexport const generateMetaData = () => {\r\n  return {\r\n    plugins: {},\r\n    network: 56,\r\n    strategies: [{ name: 'cake', params: { symbol: 'CAKE', address: getCakeAddress(), decimals: 18 } }],\r\n  }\r\n}\r\n\r\n/**\r\n * Returns data that is required on all snapshot payloads\r\n */\r\nexport const generatePayloadData = () => {\r\n  return {\r\n    version: SNAPSHOT_VERSION,\r\n    timestamp: (Date.now() / 1e3).toFixed(),\r\n    space: PANCAKE_SPACE,\r\n  }\r\n}\r\n\r\n/**\r\n * General function to send commands to the snapshot api\r\n */\r\nexport const sendSnaphotData = async (message: Message) => {\r\n  const response = await fetch(SNAPSHOT_HUB_API, {\r\n    method: 'post',\r\n    headers: {\r\n      Accept: 'application/json',\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(message),\r\n  })\r\n\r\n  if (!response.ok) {\r\n    const error = await response.json()\r\n    throw new Error(error?.error_description)\r\n  }\r\n\r\n  const data = await response.json()\r\n  return data\r\n}\r\n\r\nexport const getVotingPower = async (account: string, poolAddresses: string[], block?: number) => {\r\n  const blockNumber = block || (await simpleRpcProvider.getBlockNumber())\r\n  const response = await fetch(`${SNAPSHOT_VOTING_API}/power`, {\r\n    method: 'post',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({\r\n      address: account,\r\n      block: blockNumber,\r\n      poolAddresses,\r\n    }),\r\n  })\r\n  const data = await response.json()\r\n  return data.data\r\n}\r\n\r\nexport const calculateVoteResults = (votes: Vote[]): { [key: string]: Vote[] } => {\r\n  return votes.reduce((accum, vote) => {\r\n    const choiceText = vote.proposal.choices[vote.choice - 1]\r\n\r\n    return {\r\n      ...accum,\r\n      [choiceText]: accum[choiceText] ? [...accum[choiceText], vote] : [vote],\r\n    }\r\n  }, {})\r\n}\r\n\r\nexport const getTotalFromVotes = (votes: Vote[]) => {\r\n  return votes.reduce((accum, vote) => {\r\n    const power = new BigNumber(vote.metadata?.votingPower)\r\n    return accum.plus(power)\r\n  }, BIG_ZERO)\r\n}\r\n","export const PROPOSALS_TO_SHOW = 10\r\nexport const ADMIN_ADDRESS = '0x2096aFDaA68EEaE1EbF95DFdf565eE6d9B1fbA37'\r\nexport const IPFS_GATEWAY = 'https://gateway.ipfs.io/ipfs'\r\nexport const SNAPSHOT_VERSION = '0.1.3'\r\nexport const PANCAKE_SPACE = 'cake.eth'\r\nexport const VOTE_THRESHOLD = 10\r\n","/**\r\n * Truncates a wallet's address\r\n */\r\nconst truncateWalletAddress = (address: string, startLength = 4, endLength = 4) => {\r\n  return `${address.substring(0, startLength)}...${address.substring(address.length - endLength)}`\r\n}\r\n\r\nexport default truncateWalletAddress\r\n","import React from 'react'\r\nimport { Box, BoxProps } from '@pancakeswap/uikit'\r\nimport styled from 'styled-components'\r\n\r\nexport const VotingBox = styled.div`\r\n  align-items: center;\r\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\r\n  border-radius: 12px;\r\n  display: flex;\r\n  height: 64px;\r\n  justify-content: space-between;\r\n  margin-bottom: 24px;\r\n  padding: 0 16px;\r\n`\r\n\r\nexport const ModalInner: React.FC<BoxProps> = (props) => {\r\n  return <Box mb=\"24px\" maxWidth=\"320px\" {...props} />\r\n}\r\n","import { Link } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\n\r\nconst BreadcrumbLink = styled(Link)`\r\n  color: ${({ theme }) => theme.colors.primaryBright};\r\n`\r\n\r\nexport default BreadcrumbLink\r\n","import styled from 'styled-components'\r\n\r\nconst Layout = styled.div`\r\n  align-items: start;\r\n  display: grid;\r\n  grid-gap: 32px;\r\n  grid-template-columns: minmax(0, 1fr);\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    grid-template-columns: 1fr 332px;\r\n  }\r\n`\r\n\r\nexport default Layout\r\n","import React from 'react'\r\nimport { Text, Flex } from '@pancakeswap/uikit'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { VotingBox, ModalInner } from './styles'\r\n\r\ninterface DetailsViewProps {\r\n  total: BigNumber\r\n  cakeBalance: BigNumber\r\n  cakeVaultBalance: BigNumber\r\n  cakePoolBalance: BigNumber\r\n  poolsBalance: BigNumber\r\n  cakeBnbLpBalance: BigNumber\r\n}\r\n\r\nconst DetailsView: React.FC<DetailsViewProps> = ({\r\n  total,\r\n  cakeBalance,\r\n  cakeVaultBalance,\r\n  cakePoolBalance,\r\n  poolsBalance,\r\n  cakeBnbLpBalance,\r\n}) => {\r\n  const { t } = useTranslation()\r\n\r\n  return (\r\n    <ModalInner mb=\"0\">\r\n      <Text as=\"p\" mb=\"24px\" fontSize=\"14px\" color=\"textSubtle\">\r\n        {t(\r\n          'Your voting power is determined by the amount of CAKE you held at the block detailed below. CAKE held in other places does not contribute to your voting power.',\r\n        )}\r\n      </Text>\r\n      <Text color=\"secondary\" textTransform=\"uppercase\" mb=\"4px\" bold fontSize=\"14px\">\r\n        {t('Overview')}\r\n      </Text>\r\n      <VotingBox>\r\n        <Text color=\"secondary\">{t('Your Voting Power')}</Text>\r\n        <Text bold fontSize=\"20px\">\r\n          {total.toFormat(3)}\r\n        </Text>\r\n      </VotingBox>\r\n      <Text color=\"secondary\" textTransform=\"uppercase\" mb=\"4px\" bold fontSize=\"14px\">\r\n        {t('Your Cake Held Now')}\r\n      </Text>\r\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"4px\">\r\n        <Text color=\"textSubtle\" fontSize=\"16px\">\r\n          {t('Wallet')}\r\n        </Text>\r\n        <Text textAlign=\"right\">{cakeBalance.toFormat(3)}</Text>\r\n      </Flex>\r\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"4px\">\r\n        <Text color=\"textSubtle\" fontSize=\"16px\">\r\n          {t('Manual CAKE Pool')}\r\n        </Text>\r\n        <Text textAlign=\"right\">{cakePoolBalance.toFormat(3)}</Text>\r\n      </Flex>\r\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"4px\">\r\n        <Text color=\"textSubtle\" fontSize=\"16px\">\r\n          {t('Auto CAKE Pool')}\r\n        </Text>\r\n        <Text textAlign=\"right\">{cakeVaultBalance.toFormat(3)}</Text>\r\n      </Flex>\r\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"4px\">\r\n        <Text color=\"textSubtle\" fontSize=\"16px\">\r\n          {t('Other Syrup Pools')}\r\n        </Text>\r\n        <Text textAlign=\"right\">{poolsBalance.toFormat(3)}</Text>\r\n      </Flex>\r\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"4px\">\r\n        <Text color=\"textSubtle\" fontSize=\"16px\">\r\n          {t('CAKE BNB LP')}\r\n        </Text>\r\n        <Text textAlign=\"right\">{cakeBnbLpBalance.toFormat(3)}</Text>\r\n      </Flex>\r\n    </ModalInner>\r\n  )\r\n}\r\n\r\nexport default DetailsView\r\n","import { useState, useEffect } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\nimport { getActivePools } from 'utils/calls'\r\nimport { getAddress } from 'utils/addressHelpers'\r\nimport { simpleRpcProvider } from 'utils/providers'\r\nimport BigNumber from 'bignumber.js'\r\nimport { getVotingPower } from '../helpers'\r\n\r\ninterface State {\r\n  verificationHash: string\r\n  cakeBalance: BigNumber\r\n  cakeVaultBalance: BigNumber\r\n  cakePoolBalance: BigNumber\r\n  poolsBalance: BigNumber\r\n  cakeBnbLpBalance: BigNumber\r\n  total: BigNumber\r\n}\r\n\r\nconst initialState: State = {\r\n  verificationHash: null,\r\n  cakeBalance: BIG_ZERO,\r\n  cakeVaultBalance: BIG_ZERO,\r\n  cakePoolBalance: BIG_ZERO,\r\n  poolsBalance: BIG_ZERO,\r\n  cakeBnbLpBalance: BIG_ZERO,\r\n  total: BIG_ZERO,\r\n}\r\n\r\nconst useGetVotingPower = (block?: number, isActive = true): State & { isLoading: boolean } => {\r\n  const { account } = useWeb3React()\r\n  const [votingPower, setVotingPower] = useState(initialState)\r\n  const [isLoading, setIsLoading] = useState(!!account)\r\n\r\n  useEffect(() => {\r\n    const fetchVotingPower = async () => {\r\n      setIsLoading(true)\r\n\r\n      try {\r\n        const blockNumber = block || (await simpleRpcProvider.getBlockNumber())\r\n        const eligiblePools = await getActivePools(blockNumber)\r\n        const poolAddresses = eligiblePools.map(({ contractAddress }) => getAddress(contractAddress))\r\n        const {\r\n          cakeBalance,\r\n          cakeBnbLpBalance,\r\n          cakePoolBalance,\r\n          total,\r\n          poolsBalance,\r\n          cakeVaultBalance,\r\n          verificationHash,\r\n        } = await getVotingPower(account, poolAddresses, blockNumber)\r\n\r\n        if (isActive) {\r\n          setVotingPower((prevVotingPower) => ({\r\n            ...prevVotingPower,\r\n            verificationHash,\r\n            cakeBalance: new BigNumber(cakeBalance),\r\n            cakeBnbLpBalance: new BigNumber(cakeBnbLpBalance),\r\n            cakePoolBalance: new BigNumber(cakePoolBalance),\r\n            poolsBalance: new BigNumber(poolsBalance),\r\n            cakeVaultBalance: new BigNumber(cakeVaultBalance),\r\n            total: new BigNumber(total),\r\n          }))\r\n        }\r\n      } finally {\r\n        setIsLoading(false)\r\n      }\r\n    }\r\n\r\n    if (account && isActive) {\r\n      fetchVotingPower()\r\n    }\r\n  }, [account, block, setVotingPower, isActive, setIsLoading])\r\n\r\n  return { ...votingPower, isLoading }\r\n}\r\n\r\nexport default useGetVotingPower\r\n","import React from 'react'\r\nimport { Heading, Text } from '@pancakeswap/uikit'\r\nimport { NormalComponents, SpecialComponents } from 'react-markdown/src/ast-to-react'\r\nimport styled from 'styled-components'\r\n\r\nconst Table = styled.table`\r\n  margin-bottom: 32px;\r\n  margin-top: 32px;\r\n  width: 100%;\r\n\r\n  td,\r\n  th {\r\n    color: ${({ theme }) => theme.colors.text};\r\n    padding: 8px;\r\n  }\r\n`\r\n\r\nconst ThemedComponent = styled.div`\r\n  color: ${({ theme }) => theme.colors.text};\r\n  margin-bottom: 16px;\r\n  margin-top: 16px;\r\n\r\n  li {\r\n    margin-bottom: 8px;\r\n  }\r\n`\r\n\r\nconst Pre = styled.pre`\r\n  color: ${({ theme }) => theme.colors.text};\r\n  margin-bottom: 16px;\r\n  margin-top: 16px;\r\n  max-width: 100%;\r\n  overflow-x: auto;\r\n`\r\n\r\nconst Title = (props) => {\r\n  return <Heading as=\"h4\" scale=\"lg\" my=\"16px\" {...props} />\r\n}\r\n\r\nconst markdownComponents: Partial<NormalComponents & SpecialComponents> = {\r\n  h1: Title,\r\n  h2: Title,\r\n  h3: Title,\r\n  h4: Title,\r\n  h5: Title,\r\n  h6: Title,\r\n  p: (props) => {\r\n    return <Text as=\"p\" my=\"16px\" {...props} />\r\n  },\r\n  table: Table,\r\n  ol: (props) => {\r\n    return <ThemedComponent as=\"ol\" {...props} />\r\n  },\r\n  ul: (props) => {\r\n    return <ThemedComponent as=\"ul\" {...props} />\r\n  },\r\n  pre: Pre,\r\n}\r\n\r\nexport default markdownComponents\r\n","import React from 'react'\r\nimport ReactMarkdownLib, { ReactMarkdownOptions } from 'react-markdown'\r\nimport gfm from 'remark-gfm'\r\nimport markdownComponents from './styles'\r\n\r\nconst ReactMarkdown: React.FC<ReactMarkdownOptions> = (props) => {\r\n  return <ReactMarkdownLib remarkPlugins={[gfm]} components={markdownComponents} {...props} />\r\n}\r\n\r\nexport default ReactMarkdown\r\n"],"sourceRoot":""}