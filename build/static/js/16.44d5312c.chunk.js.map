{"version":3,"sources":["views/Teams/components/TeamListCard.tsx","views/Teams/index.tsx","state/teams/hooks.ts","views/Profile/components/HeaderWrapper.tsx","views/Teams/components/NoProfileCard.tsx","views/Teams/components/TeamHeader.tsx"],"names":["TeamRank","styled","div","_templateObject","_taggedTemplateLiteral","_ref","theme","isDark","getBackground","Body","_templateObject2","_ref2","mediaQueries","md","Info","_templateObject3","Avatar","img","_templateObject4","TeamName","Heading","attrs","as","_templateObject5","_ref3","MobileAvatar","_templateObject6","_ref4","DesktopAvatar","_templateObject7","_ref5","StyledTeamCard","Card","_templateObject8","TeamCard","_ref6","rank","team","t","useTranslation","avatar","_jsx","src","concat","images","alt","_jsxs","children","Text","bold","fontSize","Flex","alignItems","mb","name","color","pr","description","PrizeIcon","width","mr","style","alignSelf","points","toLocaleString","ml","CommunityIcon","users","Button","Link","to","id","variant","scale","Teams","teams","isLoading","useTeams","teamList","Object","values","topTeams","orderBy","Page","TeamHeader","justifyContent","AutoRenewIcon","spin","map","index","TeamListCard","useTeam","useSelector","state","data","dispatch","useAppDispatch","useEffect","fetchTeam","isInitialized","fetchTeams","HeaderWrapper","colors","textSubtle","NoProfileCard","isActive","CardBody","flexDirection","profile","useProfile","showProfileCallout","_Fragment"],"mappings":"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","file":"static/js/16.44d5312c.chunk.js","sourcesContent":["import React from 'react'\r\nimport styled, { DefaultTheme } from 'styled-components'\r\nimport { Link } from 'react-router-dom'\r\nimport { Button, Card, CommunityIcon, Flex, Heading, PrizeIcon, Text } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { Team } from 'config/constants/types'\r\n\r\ninterface TeamCardProps {\r\n  rank: number\r\n  team: Team\r\n}\r\n\r\nconst getBackground = (theme: DefaultTheme) => {\r\n  if (theme.isDark) {\r\n    return 'linear-gradient(139.73deg, #142339 0%, #24243D 47.4%, #37273F 100%)'\r\n  }\r\n\r\n  return 'linear-gradient(139.73deg, #E6FDFF 0%, #EFF4F5 46.87%, #F3EFFF 100%)'\r\n}\r\n\r\nconst TeamRank = styled.div`\r\n  align-self: stretch;\r\n  background: ${({ theme }) => getBackground(theme)};\r\n  flex: none;\r\n  padding: 16px 0;\r\n  text-align: center;\r\n  width: 56px;\r\n`\r\n\r\nconst Body = styled.div`\r\n  align-items: start;\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  padding: 24px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    align-items: center;\r\n    flex-direction: row;\r\n    font-size: 40px;\r\n  }\r\n`\r\n\r\nconst Info = styled.div`\r\n  flex: 1;\r\n`\r\n\r\nconst Avatar = styled.img`\r\n  border-radius: 50%;\r\n`\r\n\r\nconst TeamName = styled(Heading).attrs({ as: 'h3' })`\r\n  font-size: 24px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    font-size: 40px;\r\n  }\r\n`\r\n\r\nconst MobileAvatar = styled.div`\r\n  flex: none;\r\n  margin-right: 8px;\r\n\r\n  ${Avatar} {\r\n    height: 64px;\r\n    width: 64px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    display: none;\r\n  }\r\n`\r\n\r\nconst DesktopAvatar = styled.div`\r\n  display: none;\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    display: block;\r\n    margin-left: 24px;\r\n\r\n    ${Avatar} {\r\n      height: 128px;\r\n      width: 128px;\r\n    }\r\n  }\r\n`\r\n\r\nconst StyledTeamCard = styled(Card)`\r\n  display: flex;\r\n  margin-bottom: 16px;\r\n`\r\n\r\nconst TeamCard: React.FC<TeamCardProps> = ({ rank, team }) => {\r\n  const { t } = useTranslation()\r\n  const avatar = <Avatar src={`/images/teams/${team.images.md}`} alt=\"team avatar\" />\r\n\r\n  return (\r\n    <StyledTeamCard>\r\n      <TeamRank>\r\n        <Text bold fontSize=\"24px\">\r\n          {rank}\r\n        </Text>\r\n      </TeamRank>\r\n      <Body>\r\n        <Info>\r\n          <Flex alignItems=\"center\" mb=\"16px\">\r\n            <MobileAvatar>{avatar}</MobileAvatar>\r\n            <TeamName>{team.name}</TeamName>\r\n          </Flex>\r\n          <Text as=\"p\" color=\"textSubtle\" pr=\"24px\" mb=\"16px\">\r\n            {t(team.description)}\r\n          </Text>\r\n          <Flex>\r\n            <Flex>\r\n              {/* alignSelf for Safari fix */}\r\n              <PrizeIcon width=\"24px\" mr=\"8px\" style={{ alignSelf: 'center' }} />\r\n              <Text fontSize=\"24px\" bold>\r\n                {team.points.toLocaleString()}\r\n              </Text>\r\n            </Flex>\r\n            <Flex ml=\"24px\">\r\n              {/* alignSelf for Safari fix */}\r\n              <CommunityIcon width=\"24px\" mr=\"8px\" style={{ alignSelf: 'center' }} />\r\n              <Text fontSize=\"24px\" bold>\r\n                {team.users.toLocaleString()}\r\n              </Text>\r\n            </Flex>\r\n          </Flex>\r\n        </Info>\r\n        <Button as={Link} to={`/teams/${team?.id}`} variant=\"secondary\" scale=\"sm\">\r\n          {t('See More')}\r\n        </Button>\r\n        <DesktopAvatar>{avatar}</DesktopAvatar>\r\n      </Body>\r\n    </StyledTeamCard>\r\n  )\r\n}\r\n\r\nexport default TeamCard\r\n","import React from 'react'\r\nimport { AutoRenewIcon, Flex, Heading } from '@pancakeswap/uikit'\r\nimport orderBy from 'lodash/orderBy'\r\nimport { useTeams } from 'state/teams/hooks'\r\nimport Page from 'components/Layout/Page'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport TeamListCard from './components/TeamListCard'\r\nimport TeamHeader from './components/TeamHeader'\r\n\r\nconst Teams = () => {\r\n  const { t } = useTranslation()\r\n  const { teams, isLoading } = useTeams()\r\n  const teamList = Object.values(teams)\r\n  const topTeams = orderBy(teamList, ['points', 'id', 'name'], ['desc', 'asc', 'asc'])\r\n\r\n  return (\r\n    <Page>\r\n      <TeamHeader />\r\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"32px\">\r\n        <Heading scale=\"xl\">{t('Teams')}</Heading>\r\n        {isLoading && <AutoRenewIcon spin />}\r\n      </Flex>\r\n      {topTeams.map((team, index) => (\r\n        <TeamListCard key={team.id} rank={index + 1} team={team} />\r\n      ))}\r\n    </Page>\r\n  )\r\n}\r\n\r\nexport default Teams\r\n","import { useEffect } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { useAppDispatch } from 'state'\r\nimport { Team } from 'config/constants/types'\r\nimport { State, TeamsState } from '../types'\r\nimport { fetchTeam, fetchTeams } from '.'\r\n\r\nexport const useTeam = (id: number) => {\r\n  const team: Team = useSelector((state: State) => state.teams.data[id])\r\n  const dispatch = useAppDispatch()\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchTeam(id))\r\n  }, [id, dispatch])\r\n\r\n  return team\r\n}\r\n\r\nexport const useTeams = () => {\r\n  const { isInitialized, isLoading, data }: TeamsState = useSelector((state: State) => state.teams)\r\n  const dispatch = useAppDispatch()\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchTeams())\r\n  }, [dispatch])\r\n\r\n  return { teams: data, isInitialized, isLoading }\r\n}\r\n","import styled from 'styled-components'\r\n\r\nconst HeaderWrapper = styled.div`\r\n  border-bottom: 2px solid ${({ theme }) => theme.colors.textSubtle};\r\n  margin-bottom: 24px;\r\n  padding-bottom: 24px;\r\n`\r\n\r\nexport default HeaderWrapper\r\n","import React from 'react'\r\nimport { Button, Card, CardBody, Flex, Heading, Text } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst NoProfileCard = () => {\r\n  const { t } = useTranslation()\r\n\r\n  return (\r\n    <Card mb=\"32px\" isActive>\r\n      <CardBody>\r\n        <Flex\r\n          alignItems={['start', null, 'center']}\r\n          justifyContent={['start', null, 'space-between']}\r\n          flexDirection={['column', null, 'row']}\r\n        >\r\n          <div>\r\n            <Heading scale=\"lg\" mb=\"8px\">\r\n              {t('You haven’t set up your profile yet!')}\r\n            </Heading>\r\n            <Text>{t('You can do this at any time by clicking on your profile picture in the menu')}</Text>\r\n          </div>\r\n{/*           <Button as={Link} to=\"/profile\" id=\"teamsPageSetUpProfile\" mt={['16px', null, 0]}>\r\n            {t('Set up now')}\r\n          </Button> */}\r\n        </Flex>\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default NoProfileCard\r\n","import React from 'react'\r\nimport { Heading, Text } from '@pancakeswap/uikit'\r\nimport { useProfile } from 'state/profile/hooks'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport HeaderWrapper from 'views/Profile/components/HeaderWrapper'\r\nimport NoProfileCard from './NoProfileCard'\r\n\r\nconst TeamHeader = () => {\r\n  const { t } = useTranslation()\r\n  const { isInitialized, profile } = useProfile()\r\n  const showProfileCallout = isInitialized && !profile\r\n\r\n  return (\r\n    <>\r\n      {showProfileCallout && <NoProfileCard />}\r\n      <HeaderWrapper>\r\n        <Heading as=\"h1\" scale=\"xxl\" color=\"secondary\">\r\n          {t('Teams & Profiles')}\r\n        </Heading>\r\n        <Text bold>\r\n          {t('Show off your stats and collectibles with your unique profile. Team features will be revealed soon!')}\r\n        </Text>\r\n      </HeaderWrapper>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default TeamHeader\r\n"],"sourceRoot":""}